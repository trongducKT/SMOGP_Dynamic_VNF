{"1": [{"determining": "( Max( FirstVNF_CPU_Server,( MDR - MDR ) ) / ( MDR - DDR ) )", "choosing": "( Max( MUC,RCSe ) / Min( CS ,MUC ) )", "obj1": 0.9960629921259843, "obj2": 0.004484179821290899}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "Min( Max( MUR,MLU ) ,( MUM / CS ) )", "obj1": 0.2263779527559055, "obj2": 0.6674837071492834}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( RRS ,BR ) * Min( ( ( FirstVNF_Mem_Server * MRS ) * Const ) ,RRS ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( CS * CS ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "( ( RCSe * CS ) - Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / Const ) / ( FirstVNF_CPU + BR ) )", "choosing": "Max( ( DS * MUC ),( RRSe / RRSe ) )", "obj1": 0.20866141732283464, "obj2": 0.6764243257071405}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - ( MDR + RRS ) )", "choosing": "( Min( MUC ,DS ) / ( DS + MUM ) )", "obj1": 0.3779527559055118, "obj2": 0.52421334169053}, {"determining": "( Min( CRS ,BR ) * Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "( ( CS + MLU ) * ( MLU + RRSe ) )", "obj1": 0.18503937007874016, "obj2": 0.7615572626918703}, {"determining": "( Max( Min( ( PN + FirstVNF_RAM ) ,Min( Max( BR,PN ) ,CRS ) ),FirstVNF_CPU ) - ( RRS + MDR ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( ( RCSe + RRSe ) ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( ( ( PN - AMS ) / ACS ) - BR ) ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / DS ),( RCSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( FirstVNF_RAM,AMS ) - ( DDR * ( FirstVNF_RAM_Server - Const ) ) ),Max( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ),( Const / ACS ) ) )", "choosing": "( Max( Min( MLU ,RCSe ),DS ) - ( ( ( RRSe * Min( MLU ,MLU ) ) - CS ) + CS ) )", "obj1": 0.20275590551181102, "obj2": 0.6829483799465793}, {"determining": "( ( AMS + Min( AMS ,BR ) ) - ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( MUM * MUM ) / Min( RCSe ,DS ) ) )", "obj1": 0.3169291338582677, "obj2": 0.599588539720452}, {"determining": "Max( ( ( PN - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( FirstVNF_RAM,PN ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( MUC ,MLU ) ),( Max( RCSe,DS ) * Max( DS,MLU ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( Const + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / RCSe ) + DS ) )", "obj1": 0.41732283464566927, "obj2": 0.4802287592755592}, {"determining": "Min( ( Max( FirstVNF_CPU,CRS ) * ( FirstVNF_Mem_Server * MDR ) ) ,( Max( PN,MDR ) - ( Const * FirstVNF_Mem ) ) )", "choosing": "( Min( ( CS * RMSe ) ,Min( RMSe ,RRSe ) ) + ( MLU + Max( MLU,RCSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.045888620172697354}, {"determining": "( Max( ( PN * PN ),Min( AMS ,DDR ) ) + ( ( ACS * ARS ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),( CS + RCSe ) )", "obj1": 0.468503937007874, "obj2": 0.4546754246909771}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6342104502683534}, {"determining": "Max( ( DDR * FirstVNF_CPU ),( CRS * ACS ) )", "choosing": "( ( ( RCSe * DS ) / ( RCSe / RRSe ) ) + Max( ( MLU * MUC ),Max( RRSe,RCSe ) ) )", "obj1": 0.3425196850393701, "obj2": 0.5726387435800265}, {"determining": "( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) / ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Max( ( FirstVNF_RAM_Server - PN ),( MRS * MDR ) ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) )", "obj1": 0.9350393700787402, "obj2": 0.06485762418203532}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) / ( ( MRS - FirstVNF_CPU_Server ) + ( MDR + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM + MUR ) * ( RCSe - MUR ) ) * ( ( CS / CS ) * Min( MLU ,CS ) ) )", "obj1": 0.6496062992125984, "obj2": 0.33505616590752535}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Max( FirstVNF_Mem,MDR ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( AMS * FirstVNF_Mem_Server ) ,( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ) * BR ) ) )", "choosing": "Max( Max( ( ( ( ( MUC / MUC ) * MUR ) + RMSe ) / RMSe ),( DS - MUC ) ),Min( ( MUR - CS ) ,( RCSe - MUM ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "( ( MDR / BR ) - ( CRS * MDR ) )", "choosing": "Min( ( Min( MUR ,MUM ) - ( CS / MUR ) ) ,( Max( MUR,CS ) - RRSe ) )", "obj1": 0.2736220472440945, "obj2": 0.6241954872754046}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * CS ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "( ( MUM + RMSe ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( BR * MDR ) ,( AMS / FirstVNF_CPU_Server ) ) - Min( ( PN * FirstVNF_RAM_Server ) ,( FirstVNF_RAM + MDR ) ) ) + ( Max( Min( AMS ,MRS ),Min( MDR ,Const ) ) + ( ( FirstVNF_Mem_Server * DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Min( RRSe ,MUM ) - ( MLU + CS ) ) - ( Min( RCSe ,RRSe ) / Min( MUM ,MUM ) ) ) * Max( ( Max( DS,DS ) / Max( RRSe,RCSe ) ),( ( MUC - RRSe ) + ( RRSe - MLU ) ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7617465095440685}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( PN / RRS ) ) / Min( ( FirstVNF_RAM_Server + ( ( MDR - FirstVNF_Mem_Server ) / CRS ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / Min( ( Min( MLU ,RMSe ) + CS ) ,MUR ) ) / ( RCSe * ( ( ( ( DS / ( ( MLU + MLU ) / MLU ) ) / RRSe ) + MLU ) + ( RRSe * ( ( MLU - ( RCSe - ( MLU * MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( Max( Max( ( FirstVNF_Mem_Server * RRS ),( PN * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MRS + FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + ( ( ( RCSe + MUR ) / MUM ) - MLU ) ) ) ,( RCSe + ( ( DS * RMSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) / ( Min( ( MRS / DDR ) ,( FirstVNF_Mem_Server / BR ) ) + ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) - Max( DDR,MRS ) ) ) )", "choosing": "Min( ( CS - ( DS / MUR ) ) ,Min( MUC ,( ( DS / MUC ) * CS ) ) )", "obj1": 0.37401574803149606, "obj2": 0.5436927504336001}, {"determining": "( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( MRS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server + CRS ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ) / ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,RRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( RCSe / ( RMSe - RMSe ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6989237396408006}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.6341300324116035}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) )", "choosing": "( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.4890828710074422}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( ( ( ACS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) + ( DS * Min( RRSe ,( RCSe + ( Min( RRSe ,RRSe ) * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( Min( ( ACS + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( Min( ACS ,MDR ) - ( FirstVNF_CPU_Server - FirstVNF_Mem ) )", "choosing": "Min( ( DS + DS ) ,( RRSe - ( MUM + Min( DS ,RRSe ) ) ) )", "obj1": 0.5984251968503937, "obj2": 0.4484432319469959}, {"determining": "Min( ( ( FirstVNF_Mem / ( AMS - DDR ) ) / Max( ACS,FirstVNF_RAM ) ) ,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - MUM ) / ( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) + ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) ) * Max( ( AMS * PN ),FirstVNF_Mem_Server ) )", "choosing": "( Min( Max( ( DS / CS ),Max( RRSe,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MLU / Min( ( RMSe / Min( MUR ,MLU ) ) ,CS ) ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6019376074856335}, {"determining": "Min( Min( Const ,FirstVNF_CPU ) ,( ( RRS + ( Const * ARS ) ) * FirstVNF_CPU ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( RRSe / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( Max( ( DS + RMSe ),( MUC - ( DS + CS ) ) ) ,Max( MUR,RRSe ) ) ,Min( ( MLU / MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7874076048356741}, {"determining": "( ( ( AMS - ( ( FirstVNF_CPU - FirstVNF_RAM ) / BR ) ) * ARS ) - ( FirstVNF_Mem + Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MLU - CS ) ,Max( Max( Min( ( RMSe * CS ) ,RRSe ),MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}], "2": [{"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( PN / RRS ) ) / Min( ( FirstVNF_RAM_Server + ( ( MDR - FirstVNF_Mem_Server ) / CRS ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / Min( ( Min( MLU ,RMSe ) + CS ) ,MUR ) ) / ( RCSe * ( ( ( ( DS / ( ( MLU + MLU ) / MLU ) ) / RRSe ) + MLU ) + ( RRSe * ( ( MLU - ( RCSe - ( MLU * MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "Min( ( ( BR + ARS ) * Min( MDR ,FirstVNF_CPU ) ) ,( ( AMS * FirstVNF_RAM ) / ( ( Const * BR ) - FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( ( MUC + ( ( MUR + RCSe ) + RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( CS * CS ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( RCSe * DS ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( PN - RRS ) - MRS ) )", "choosing": "( ( MUC * RCSe ) * ( DS - CS ) )", "obj1": 0.5610236220472441, "obj2": 0.3805308746710875}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( ( ( FirstVNF_CPU + MDR ) + ( ARS - RRS ) ) * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( ( MUR / MUC ) + RCSe ) + RMSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.3091219188182354}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) ) )", "obj1": 0.7913385826771654, "obj2": 0.18519621144595047}, {"determining": "( ( FirstVNF_CPU / Const ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Max( Min( CS ,MLU ),( RRSe / RRSe ) )", "obj1": 0.5177165354330708, "obj2": 0.4029332320348488}, {"determining": "( Max( Min( ACS ,FirstVNF_RAM_Server ),( ( FirstVNF_RAM_Server + MRS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( FirstVNF_CPU + BR ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + Max( DS,( ( RMSe / Max( RMSe,RCSe ) ) - ( RRSe * RCSe ) ) ) ) ) ,( Max( ( DS * MUC ),( RRSe / RRSe ) ) + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / RCSe ) / ( CS - RCSe ) )", "obj1": 0.4507874015748031, "obj2": 0.41821862687974015}, {"determining": "( ( AMS + FirstVNF_RAM_Server ) - ( ( FirstVNF_CPU / MDR ) + RRS ) )", "choosing": "( Min( MUC ,DS ) / ( ( MUR / ( MUC / CS ) ) + MUM ) )", "obj1": 0.844488188976378, "obj2": 0.15966815112032293}, {"determining": "( ( RRS + MDR ) - Max( ( Max( ( PN * PN ),( RRS * FirstVNF_Mem_Server ) ) + ( ( ACS + ARS ) - ( ACS + FirstVNF_RAM ) ) ),FirstVNF_CPU ) )", "choosing": "Min( ( MUR * MLU ) ,( ( DS / RMSe ) + MUM ) )", "obj1": 0.9586614173228346, "obj2": 0.04357738823477818}, {"determining": "Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( CRS - MRS ) )", "choosing": "Min( ( CS - ( DS / MUR ) ) ,Min( MUC ,( ( DS / MUC ) * CS ) ) )", "obj1": 0.7440944881889764, "obj2": 0.22908827322383263}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) )", "obj1": 0.6712598425196851, "obj2": 0.3050093738661414}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( RCSe,RMSe ) - Max( ( CS / RRSe ),( CS - DS ) ) ),( DS / RCSe ) )", "obj1": 0.6791338582677166, "obj2": 0.27067561843997323}, {"determining": "( Max( ( PN * PN ),Min( AMS ,DDR ) ) + ( ( ACS * ARS ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),( CS + RCSe ) )", "obj1": 0.8740157480314961, "obj2": 0.1456883130298092}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8099791749806996}, {"determining": "( Min( ( ( Const * Const ) / ( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( ( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - MUM ) / Min( MUC ,( RMSe + ( MUR + RCSe ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.05849785983657831}, {"determining": "( ( MRS + ( FirstVNF_RAM_Server / ACS ) ) + ( FirstVNF_CPU_Server - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,MUR ) - Max( ( MUR + Min( CS ,Min( Min( DS ,DS ) ,CS ) ) ),( CS - DS ) ) )", "obj1": 0.20275590551181102, "obj2": 0.646842906345169}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( Min( DDR ,DDR ) * ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) + Min( FirstVNF_Mem ,( ARS - DDR ) ) ) - FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( MUM * MUM ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6233273366622468}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * FirstVNF_Mem ) )", "choosing": "( ( DS - RCSe ) + Max( MUR,MUC ) )", "obj1": 0.9921259842519685, "obj2": 0.008975712028406042}, {"determining": "( Min( ( ACS + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.4448818897637795, "obj2": 0.4633954526387844}, {"determining": "( ( ( FirstVNF_CPU_Server / ( ( PN + ACS ) + ( AMS * ACS ) ) ) + FirstVNF_CPU_Server ) * Max( ( AMS * PN ),Const ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - RRSe )", "obj1": 0.2578740157480315, "obj2": 0.6024504976910061}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.7007874015748031, "obj2": 0.23522966795442488}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6428429170256553}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Max( ( ACS / ( ( FirstVNF_RAM + DDR ) - Min( FirstVNF_CPU ,PN ) ) ),( CRS - Const ) )", "choosing": "( ( Min( DS ,MUR ) - RMSe ) + Max( CS,MUC ) )", "obj1": 0.2933070866141732, "obj2": 0.5827925818435467}, {"determining": "( Max( ( PN * PN ),Min( AMS ,DDR ) ) + ( ( ACS * ARS ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),( CS + RCSe ) )", "obj1": 0.8740157480314961, "obj2": 0.1456883130298092}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.48668957987022454}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( CRS,FirstVNF_RAM ) ) ) / RRS ) + ( FirstVNF_Mem_Server * ACS ) ) / Min( Min( FirstVNF_Mem ,AMS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( RCSe + MUC ) * ( MUC * MUC ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7439502593861105}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - DS ) * CS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.2315626925135844}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( ( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5382206275760922}, {"determining": "( ( ( FirstVNF_CPU_Server / ( MDR + ( ( ACS - MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) + ARS ) * Max( ACS,ARS ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( MUM - RRSe ) ) + Min( ( RRSe / RRSe ) ,Min( RCSe ,RMSe ) ) ) * Min( Min( ( RCSe / DS ) ,( MUR - RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7860494811882565}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( ( MDR / AMS ) ,FirstVNF_RAM ) )", "choosing": "Min( Max( MUR,MLU ) ,( MUR * DS ) )", "obj1": 0.38976377952755903, "obj2": 0.5043852169722696}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( Min( Min( MRS ,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,Max( BR,ARS ) ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MLU + MUR ) / ( ( RMSe + ( RRSe - MLU ) ) - ( DS / MUR ) ) ) ,Min( MUC ,MUC ) )", "obj1": 0.1594488188976378, "obj2": 0.7408791414589997}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) )", "choosing": "( ( RCSe / RRSe ) - ( MUR / MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.7015680796477292}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( Min( ( DDR + FirstVNF_CPU_Server ) ,Min( RRS ,( ( FirstVNF_CPU + ARS ) + MDR ) ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( DS - MUC ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.3346456692913386, "obj2": 0.5698711826100242}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_RAM_Server ) ,Min( ACS ,FirstVNF_RAM_Server ) )", "choosing": "( Min( Max( ( DS / CS ),Max( MUC,CS ) ) ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.6007931549376267}, {"determining": "( ( Min( RRS ,RRS ) + ( FirstVNF_RAM_Server * AMS ) ) / Max( ( MDR + MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( MLU * CS ) ,RRSe ) ,( ( RRSe * Min( RCSe ,( RRSe / MUR ) ) ) + ( MUR * MUM ) ) )", "obj1": 0.3779527559055118, "obj2": 0.515144705309737}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( MDR,FirstVNF_CPU_Server ) ) / ( Min( RRS ,FirstVNF_CPU ) * Max( PN,ACS ) ) ) ) )", "choosing": "( ( MUR + ( Min( MUC ,DS ) - ( MLU + CS ) ) ) / ( CS - RCSe ) )", "obj1": 0.2874015748031496, "obj2": 0.5934524673398509}, {"determining": "Max( ( ( PN - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( FirstVNF_RAM,PN ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( MUC ,MLU ) ),( Max( RCSe,DS ) * Max( DS,MLU ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + RRS ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + DS ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.5351136255218593}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( AMS * FirstVNF_Mem_Server ) ,( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ) * BR ) ) )", "choosing": "Max( Max( ( ( ( ( MUC / MUC ) * MUR ) + RMSe ) / RMSe ),( DS - MUC ) ),Min( ( MUR - CS ) ,( RCSe - MUM ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "Max( ( FirstVNF_CPU + BR ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( RRSe,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( MRS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server + CRS ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ) / ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,RRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( RCSe / ( RMSe - RMSe ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6989237396408006}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / ( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) )", "choosing": "( ( ( DS + ( ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) / ( RRSe * ( RCSe - MUM ) ) ) - Min( MUR ,DS ) ) ) + MUM ) - ( MUM + MUC ) )", "obj1": 0.13582677165354332, "obj2": 0.7725523794710227}, {"determining": "( Min( RRS ,BR ) * Min( ( ( FirstVNF_Mem_Server * MRS ) * Const ) ,RRS ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( Min( MDR ,Const ) * AMS ) - Max( Max( Min( PN ,FirstVNF_RAM ),( RRS * MDR ) ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( CS,Max( MUR,( ( RCSe / RCSe ) * MUR ) ) ) * ( MUC / MUM ) )", "obj1": 0.4074803149606299, "obj2": 0.4763900332022241}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( FirstVNF_Mem + ( Const + RRS ) )", "choosing": "( ( RCSe / RRSe ) - ( ( ( CS / RMSe ) - ( DS - MUR ) ) / MUM ) )", "obj1": 0.3700787401574803, "obj2": 0.5301326952798157}, {"determining": "( ( AMS + Min( AMS ,BR ) ) - ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( MUM * MUM ) / Min( RCSe ,DS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5269789370565413}, {"determining": "( Max( DDR,( PN * ( ( MRS - FirstVNF_CPU ) * ( ( AMS - ( ( PN + PN ) + Const ) ) - MDR ) ) ) ) * PN )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.11220472440944881, "obj2": 0.8054897311353781}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( MDR / Const ) ,AMS ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( RMSe + ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( RCSe,Min( MLU ,MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5355578578151593}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS * RCSe ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) * ( MDR + RRS ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,DS )", "obj1": 0.43700787401574803, "obj2": 0.4677994589700717}, {"determining": "Max( ( ( MDR / ( MRS - CRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( FirstVNF_Mem * ( FirstVNF_CPU_Server + PN ) ) )", "choosing": "Max( ( DS / RMSe ),( ( RMSe * MUR ) - MLU ) )", "obj1": 0.33070866141732286, "obj2": 0.5707044403117147}, {"determining": "Max( ( ( PN - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ),( Max( FirstVNF_RAM,PN ) / ( AMS + MDR ) ) )", "choosing": "Max( ( ( MUM / CS ) + Min( MUC ,MLU ) ),( Max( RCSe,DS ) * Max( DS,MLU ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5745217039934857}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * CS ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "Max( ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + PN ) + BR ),( PN + ACS ) )", "choosing": "( ( ( Min( MUC ,RMSe ) - RCSe ) + DS ) * ( RRSe * DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8027870273548857}, {"determining": "( Min( AMS ,BR ) - Min( FirstVNF_CPU ,PN ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( MUM * MUM ) / Min( RCSe ,DS ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.007800925609616349}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * CS ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( PN + ( ( BR - ( ARS / ACS ) ) - FirstVNF_Mem ) ) + ( ( DDR / RRS ) * ACS ) )", "choosing": "( ( RRSe - MLU ) / ( Min( MUC ,( MUM / MUC ) ) - Min( MUC ,RRSe ) ) )", "obj1": 0.9960629921259843, "obj2": 0.003427355009256704}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) / ( MDR - DDR ) )", "choosing": "Min( ( RRSe - MUR ) ,Max( CS,MUC ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( Max( FirstVNF_CPU_Server,FirstVNF_RAM_Server ) / ( MDR - DDR ) )", "choosing": "( Min( MLU ,RCSe ) / ( ( MUC * Min( MUM ,MLU ) ) + ( MUR + Min( MUC ,MUC ) ) ) )", "obj1": 0.9980314960629921, "obj2": 0.001939409661468402}, {"determining": "( ( PN + ( ( BR - ( ARS / ACS ) ) - FirstVNF_Mem ) ) + ( AMS * ACS ) )", "choosing": "( ( RRSe - MLU ) / Max( Min( MUC ,MUC ),Min( MUC ,RRSe ) ) )", "obj1": 0.9960629921259843, "obj2": 0.003427355009256704}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "( ( RCSe * CS ) - Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN + FirstVNF_RAM ) ,Min( Max( BR,PN ) ,CRS ) ),FirstVNF_CPU ) - ( RRS + MDR ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( ( RCSe + RRSe ) ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( ( ( PN - AMS ) / ACS ) - BR ) ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / DS ),( RCSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( FirstVNF_CPU,FirstVNF_Mem ),Max( FirstVNF_Mem,MDR ) ) - ( ( FirstVNF_CPU_Server + MDR ) + ( Const + AMS ) ) )", "choosing": "( Min( Max( RCSe,MUM ) ,Min( MUC ,MUC ) ) * ( ( CS - MLU ) - ( RMSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * Const ) - ( ( Min( FirstVNF_CPU_Server ,AMS ) / BR ) - ( Max( BR,RRS ) - MDR ) ) )", "choosing": "( ( MUM + RMSe ) + ( RMSe - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_Mem_Server * RRS ),( PN * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server / FirstVNF_CPU ) + ( MRS + FirstVNF_RAM_Server ) ) ) * ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + ( ( ( RCSe + MUR ) / MUM ) - MLU ) ) ) ,( RCSe + ( ( DS * RMSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) + ( DS * Min( RRSe ,( RCSe + ( Min( RRSe ,RRSe ) * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_Mem / ( AMS - DDR ) ) / Max( ACS,FirstVNF_RAM ) ) ,( ( FirstVNF_CPU * FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR - MUM ) / ( CS - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - ( ( FirstVNF_CPU - FirstVNF_RAM ) / BR ) ) * ARS ) - ( FirstVNF_Mem + Max( AMS,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MLU - CS ) ,Max( Max( Min( ( RMSe * CS ) ,RRSe ),MLU ),RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR + ( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) ) ) ,Min( RRS ,( ( FirstVNF_CPU + ARS ) + MDR ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( DS * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( ( ( ( MUM - DS ) + ( MUC + RCSe ) ) - Min( ( DS - MUC ) ,( CS / DS ) ) ) - ( Min( Max( CS,MLU ) ,( MUR + MUR ) ) + ( Max( MLU,MUR ) - ( MUC - MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "Max( ( MUR + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - CRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( ( RMSe * RRSe ) - Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( MRS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( RRSe ,RCSe ) - ( MUM * MUR ) ) - ( ( RMSe * RRSe ) - Max( MLU,MUR ) ) ) - ( ( Min( MUM ,CS ) / ( RCSe / DS ) ) + Max( Max( MUC,MLU ),( MUC - RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS + MRS ) + ( ( PN - FirstVNF_Mem_Server ) / ( MRS + FirstVNF_RAM ) ) ) ,Min( ( Const / DDR ) ,Max( PN,BR ) ) )", "choosing": "Min( Max( ( MUR * MUM ),DS ) ,( Min( RRSe ,RMSe ) * Min( RRSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - ACS ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / DS ),( CS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( MDR - ACS ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / RRSe ),( CS - DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS + MDR ) - Max( ACS,FirstVNF_CPU ) ) * Max( ARS,ACS ) )", "choosing": "Min( Min( Max( ( RMSe - MUC ),Max( RRSe,MUC ) ) ,( Max( MLU,MUM ) + ( MUR - RRSe ) ) ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + MDR ) - Max( ACS,FirstVNF_CPU ) )", "choosing": "Min( ( MUR * MLU ) ,( RRSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server / MRS ) - ( ARS - FirstVNF_RAM_Server ) ) - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) - Max( Min( ( FirstVNF_CPU / MRS ) ,( MRS + AMS ) ),( ( ( FirstVNF_Mem_Server / MRS ) + Max( ACS,ARS ) ) + ( ACS + ACS ) ) ) )", "choosing": "Max( ( Min( Max( ( DS - RMSe ),( MUM + DS ) ) ,Max( Min( MUR ,RMSe ),( RCSe / CS ) ) ) - Max( Min( ( CS / RCSe ) ,( RRSe / DS ) ),( Max( RMSe,MUR ) / ( MUR * DS ) ) ) ),( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU / Const ) / ( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) ) )", "choosing": "Max( ( DS * Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) ),( RRSe / RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,BR ) * ( ARS * Const ) ) + ( ( DDR - FirstVNF_RAM_Server ) - MRS ) )", "choosing": "( ( MUR + Min( MUR ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( RRS ,( ( DDR - FirstVNF_RAM_Server ) - MRS ) ) * ( ARS * Const ) )", "choosing": "( ( DS * Min( MUM ,( RCSe + MUR ) ) ) - ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + Min( Min( MUR ,( RCSe / ( ( RRSe - DS ) - CS ) ) ) ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) - Max( Min( ( FirstVNF_CPU / MRS ) ,( MRS + AMS ) ),( Min( FirstVNF_Mem ,FirstVNF_Mem ) + ( ACS + ACS ) ) ) )", "choosing": "Max( ( MUM + ( MUC - Min( ( RRSe + DS ) ,( RMSe - MLU ) ) ) ),( CS / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + Const ) * ( Min( FirstVNF_Mem ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / DS ) ,Min( ( ( MUM / RRSe ) * ( RCSe / RCSe ) ) ,Max( ( RMSe - CS ),( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + Const ) * ( Min( FirstVNF_Mem ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / DS ) ,Min( ( ( MUM / RRSe ) * ( RCSe / RCSe ) ) ,Max( ( RMSe - CS ),( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS + Const ) * ( Min( FirstVNF_Mem ,RRS ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe / DS ) ,Min( ( ( MUM / RRSe ) * ( RCSe / RCSe ) ) ,Max( ( RMSe - CS ),( RMSe / MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR + ARS ) * Min( MDR ,FirstVNF_CPU ) ) ,( ( AMS * FirstVNF_RAM ) / ( ( Const * BR ) - FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( ( MUC + ( ( MUR + RCSe ) + RMSe ) ) / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS / BR ) * ( FirstVNF_RAM_Server / AMS ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / RRSe ) - ( MUR / MUM ) )", "obj1": 0.49606299212598426, "obj2": 0.29647229189544344}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / RCSe ) / ( CS - RCSe ) )", "obj1": 0.4507874015748031, "obj2": 0.41821862687974015}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( PN * MRS ) )", "choosing": "( Max( CS,MUM ) - ( MUR + Min( CS ,RMSe ) ) )", "obj1": 0.6476377952755905, "obj2": 0.2955944214485259}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( MRS,( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * MUR )", "obj1": 0.8307086614173228, "obj2": 0.13725890069639787}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) ) )", "obj1": 0.7913385826771654, "obj2": 0.18519621144595047}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( RCSe + MUR ) )", "obj1": 0.937007874015748, "obj2": 0.027832645425916184}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( MUM * MUM ) / Min( RCSe ,DS ) ) ) )", "obj1": 0.8740157480314961, "obj2": 0.1082017322433332}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS / DS ),( CS - DS ) ) )", "obj1": 0.7559055118110236, "obj2": 0.21162050573505903}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7367703046225419}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( ( MDR / FirstVNF_RAM ) * Min( RRS ,Min( ( ARS / DDR ) ,Max( PN,BR ) ) ) )", "choosing": "( ( RCSe / MUR ) - ( MLU - MUC ) )", "obj1": 0.23228346456692914, "obj2": 0.613893503167281}, {"determining": "( Max( DDR,FirstVNF_RAM ) * ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( RCSe,RMSe ) - Max( ( CS / RRSe ),( CS - DS ) ) ),( DS / RCSe ) )", "obj1": 0.6791338582677166, "obj2": 0.27067561843997323}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6428429170256553}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) * Max( Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ),DS ) )", "obj1": 0.10433070866141732, "obj2": 0.8272172613199391}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( Min( MUC ,RMSe ) - RCSe ) + DS ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.812992125984252, "obj2": 0.18218420225629073}, {"determining": "( ( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem ) ) * ( MDR - ACS ) )", "choosing": "Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) )", "obj1": 0.8267716535433071, "obj2": 0.1552260571395964}, {"determining": "( Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) * PN )", "choosing": "Max( ( Max( Max( ( MUM + ( MUC - Min( ( RRSe + DS ) ,( RMSe - MLU ) ) ) ),( CS / RCSe ) ),MUM ) / DS ),( DS / RCSe ) )", "obj1": 0.0984251968503937, "obj2": 0.8651816034441823}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) )", "obj1": 0.4448818897637795, "obj2": 0.4633954526387844}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( ( ( FirstVNF_CPU + MDR ) + ( ARS - RRS ) ) * BR ) / Min( PN ,PN ) ),( ( CRS - MRS ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( Min( ( CS - ( DS / MUR ) ) ,Min( MUC ,( ( DS / MUC ) * CS ) ) ) / ( MUC + ( ( ( MUR / MUC ) + RCSe ) + RMSe ) ) )", "obj1": 0.6673228346456693, "obj2": 0.2890364051138195}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( ( PN + ACS ) + AMS ) )", "choosing": "Min( ( ( Max( MLU,( Min( MUR ,CS ) - RMSe ) ) + MLU ) / RRSe ) ,( ( CS + MUC ) + ( MLU / MUM ) ) )", "obj1": 0.8956692913385826, "obj2": 0.09622698978777428}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / PN ) )", "choosing": "Min( ( ( Max( ( DS / CS ),Max( MUC,CS ) ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + DS ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.565983092619462}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - DS ) + ( MLU * CS ) ) - Max( ( CS / DS ),( CS - DS ) ) )", "obj1": 0.7440944881889764, "obj2": 0.22092981374415158}, {"determining": "( Min( ( ACS + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( Min( Min( FirstVNF_CPU_Server ,DDR ) ,Max( MDR,FirstVNF_CPU_Server ) ) / ( Min( RRS ,FirstVNF_CPU ) * Max( PN,ACS ) ) ) ) )", "choosing": "( ( MUR + ( Min( MUC ,DS ) - ( MLU + CS ) ) ) / ( CS - RCSe ) )", "obj1": 0.2874015748031496, "obj2": 0.5934524673398509}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - DS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5978971493192292}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - DS ) * CS ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.23946926632314852}, {"determining": "( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU ) + ( Const * BR ) )", "choosing": "( Max( ( MUR * CS ),RMSe ) - Max( Min( ( RCSe / MUM ) ,( RCSe - CS ) ),( CS - DS ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5190777519392388}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + Max( ACS,MRS ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( MUC ,MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + DS ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / ( RRSe / DS ) ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5321395756839433}, {"determining": "( Max( ACS,Const ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RRSe * ( Max( RMSe,MUM ) - RCSe ) ) ,RRSe )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( ( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + DS ) )", "obj1": 0.30118110236220474, "obj2": 0.5789852843252755}, {"determining": "( Min( RRS ,BR ) * Min( ( ( FirstVNF_Mem_Server * MRS ) * Const ) ,RRS ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.12401574803149606, "obj2": 0.8002427812822439}, {"determining": "( Min( AMS ,MDR ) + ( MRS - ( DDR * Const ) ) )", "choosing": "( ( MUR + Min( Min( MUR ,( RCSe / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) ) ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.015216819040951804}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - DS ) * CS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.2315626925135844}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_CPU / Const ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * CS ) ) ,( Min( CS ,MLU ) + ( MUR * DS ) ) )", "obj1": 0.3956692913385827, "obj2": 0.5042482682420777}, {"determining": "( ( BR + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( MUC + ( ( ( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( MUM * MUM ) / Min( RCSe ,DS ) ) ) + RCSe ) + RMSe ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.10816154283320266}, {"determining": "( Min( ( ( Const * Const ) / ( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( ( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - MUM ) / Min( MUC ,( RMSe + ( MUR + RCSe ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.05849785983657831}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.9232283464566929, "obj2": 0.05849785983657831}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) )", "obj1": 0.9212598425196851, "obj2": 0.0757764679304263}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + Min( Min( MUR ,( RCSe / ( ( RRSe - DS ) - CS ) ) ) ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 0.9665354330708661, "obj2": 0.015888242365008264}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * FirstVNF_Mem ) )", "choosing": "( ( DS - RCSe ) + Max( MUR,MUC ) )", "obj1": 0.328740157480315, "obj2": 0.5563527981663237}, {"determining": "( ( Min( RRS ,RRS ) + ( FirstVNF_RAM_Server * AMS ) ) / Max( ( MDR + MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( MLU * CS ) ,RRSe ) ,( ( RRSe * Min( RCSe ,( RRSe / MUR ) ) ) + ( MUR * MUM ) ) )", "obj1": 0.3779527559055118, "obj2": 0.515144705309737}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( PN - RRS ) - MRS ) )", "choosing": "( ( MUC * RCSe ) * ( DS - CS ) )", "obj1": 0.25984251968503935, "obj2": 0.5971768725530505}, {"determining": "( ( ( Max( DDR,FirstVNF_Mem_Server ) / ( MRS / FirstVNF_RAM_Server ) ) + ( ( FirstVNF_RAM_Server + CRS ) * ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) * ( ( ( Const + FirstVNF_CPU ) / ( MDR / ARS ) ) / ( ( FirstVNF_CPU_Server + MDR ) / Min( ACS ,RRS ) ) ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( RCSe / ( RMSe - RMSe ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6989237396408006}, {"determining": "( ( Min( MDR ,Const ) * AMS ) - Max( Max( Min( PN ,FirstVNF_RAM ),( RRS * MDR ) ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( CS,Max( MUR,( ( RCSe / RCSe ) * MUR ) ) ) * ( MUC / MUM ) )", "obj1": 0.4074803149606299, "obj2": 0.4763900332022241}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUM + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5435569827034199}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( ( ACS + FirstVNF_RAM ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( Max( ( DS / RMSe ),( CS + RCSe ) ) ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.7046417845870425}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( PN / RRS ) ) / Min( ( FirstVNF_RAM_Server + ( ( MDR - FirstVNF_Mem_Server ) / CRS ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / Min( ( Min( MLU ,RMSe ) + CS ) ,MUR ) ) / ( RCSe * ( ( ( ( DS / ( ( MLU + MLU ) / MLU ) ) / RRSe ) + MLU ) + ( RRSe * ( ( MLU - ( RCSe - ( MLU * MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( ( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5382206275760922}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( MDR / Const ) ,AMS ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( RMSe + ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( RCSe,Min( MLU ,MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5355578578151593}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( FirstVNF_CPU + BR ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( DS * MUC ),( RRSe / RRSe ) ) + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "( ( ( FirstVNF_CPU_Server / ( MDR + ( ( ACS - MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) + ARS ) * Max( ACS,ARS ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( MUM - RRSe ) ) + Min( ( RRSe / RRSe ) ,Min( RCSe ,RMSe ) ) ) * Min( Min( ( RCSe / DS ) ,( MUR - RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7860494811882565}, {"determining": "( ( ( AMS / Min( ( PN - FirstVNF_CPU ) ,FirstVNF_CPU ) ) * FirstVNF_RAM ) * ( ARS / Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS + ( ( Min( ( ( RRSe * MLU ) * MLU ) ,RRSe ) * MLU ) - MUM ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8099791749806996}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) * ( MDR + RRS ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,DS )", "obj1": 0.43700787401574803, "obj2": 0.46575770322154414}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( AMS * FirstVNF_Mem_Server ) ,( Min( FirstVNF_Mem ,Min( BR ,FirstVNF_Mem ) ) * BR ) ) )", "choosing": "Max( Max( ( ( ( ( MUC / MUC ) * MUR ) + RMSe ) / RMSe ),( DS - MUC ) ),Min( ( MUR - CS ) ,( RCSe - MUM ) ) )", "obj1": 0.421259842519685, "obj2": 0.47584024587368295}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.48668957987022454}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.7007874015748031, "obj2": 0.23502112417053558}, {"determining": "( Min( Min( CRS ,RRS ) ,( AMS + DDR ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "Max( Max( DS,( DS - MUC ) ),Min( ( RCSe / MUM ) ,( MUR - CS ) ) )", "obj1": 0.40551181102362205, "obj2": 0.48668957987022454}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( PN * FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( ( MUC - DS ) + ( MLU * CS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.2315626925135844}, {"determining": "Max( ( ACS / ( ( FirstVNF_RAM + DDR ) - Min( FirstVNF_CPU ,PN ) ) ),( CRS - Const ) )", "choosing": "( ( Min( DS ,MUR ) - RMSe ) + Max( CS,MUC ) )", "obj1": 0.2933070866141732, "obj2": 0.5827925818435467}, {"determining": "( FirstVNF_RAM * Max( ARS,ACS ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( CS / RCSe ) ) + Min( ( Min( MLU ,MUM ) / RRSe ) ,Min( RMSe ,RCSe ) ) ) * Min( Min( ( RCSe / DS ) ,Max( MUR,RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7860494811882565}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server + ( BR / Min( ( MRS + ARS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ),ACS ) ,DDR ) / ( CRS / ARS ) )", "choosing": "( Max( MUR,MLU ) - ( DS / CS ) )", "obj1": 0.13582677165354332, "obj2": 0.7725523794710227}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( ( Const - AMS ) / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( RCSe,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8045217994341679}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * CS ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( ( Min( AMS ,FirstVNF_CPU ) * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,( ( MLU + MUC ) + ( RMSe - MUR ) ) ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.4251968503937008, "obj2": 0.4733376668169311}, {"determining": "( Max( ( PN * PN ),Min( AMS ,DDR ) ) + ( Const - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.0784987748060851}, {"determining": "Max( Max( ARS,FirstVNF_Mem ),Min( ( MDR / AMS ) ,FirstVNF_RAM ) )", "choosing": "Min( Max( MUR,MLU ) ,( MUR * DS ) )", "obj1": 0.38976377952755903, "obj2": 0.5043852169722696}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - DS ) * CS ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.23946926632314852}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + Min( Min( MUR ,( RCSe / ( ( RRSe - DS ) - CS ) ) ) ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 0.9665354330708661, "obj2": 0.015888242365008264}, {"determining": "( Max( Min( ACS ,FirstVNF_RAM_Server ),( ( FirstVNF_RAM_Server + MRS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( FirstVNF_CPU + BR ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + Max( DS,( ( RMSe / Max( RMSe,RCSe ) ) - ( RRSe * RCSe ) ) ) ) ) ,( Max( ( DS * MUC ),( RRSe / RRSe ) ) + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.9094488188976378, "obj2": 0.0788975024822699}, {"determining": "( Min( ( ACS + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.19291338582677164, "obj2": 0.6876390213994946}, {"determining": "( Max( DDR,( PN * ( ( MRS - FirstVNF_CPU ) * ( ( AMS - ( ( PN + PN ) + Const ) ) - MDR ) ) ) ) * PN )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.11220472440944881, "obj2": 0.8054897311353781}, {"determining": "( Min( Max( ( FirstVNF_Mem + MRS ),( FirstVNF_CPU + DDR ) ) ,( Max( DDR,FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem ) ) ) + ( Min( Max( MRS,AMS ) ,( DDR / FirstVNF_RAM_Server ) ) * ( ( DDR + FirstVNF_RAM_Server ) - ( FirstVNF_CPU * MDR ) ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * FirstVNF_Mem ) )", "choosing": "( ( DS - RCSe ) + Max( MUR,MUC ) )", "obj1": 0.328740157480315, "obj2": 0.5563527981663237}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( Min( MRS ,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) / PN ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( ( RCSe / RRSe ) - ( MUR / MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.7015680796477292}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / ( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) )", "choosing": "( ( ( DS + ( ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) / ( RRSe * ( RCSe - MUM ) ) ) - Min( MUR ,DS ) ) ) + MUM ) - ( MUM + MUC ) )", "obj1": 0.13582677165354332, "obj2": 0.7725523794710227}, {"determining": "Max( ( ACS / ( ( FirstVNF_RAM + DDR ) - Min( FirstVNF_CPU ,PN ) ) ),( CRS - Const ) )", "choosing": "( ( Min( DS ,MUR ) - RMSe ) + Max( CS,MUC ) )", "obj1": 0.2933070866141732, "obj2": 0.5827925818435467}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( PN - RRS ) - MRS ) )", "choosing": "( ( MUC * RCSe ) * ( DS - CS ) )", "obj1": 0.25984251968503935, "obj2": 0.5971768725530505}, {"determining": "( Min( ( ACS + ( PN / ( Min( ( ACS + ( Const / PN ) ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.17716535433070865, "obj2": 0.7029347830290067}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8099791749806996}, {"determining": "Max( ( ( ( FirstVNF_CPU_Server / Max( BR,FirstVNF_Mem ) ) + PN ) + BR ),( PN + ACS ) )", "choosing": "( Max( MUR,( ( Min( RRSe ,RRSe ) - Max( DS,RRSe ) ) * MLU ) ) / ( RCSe * RCSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8775338593797365}, {"determining": "( ( PN + ( ( BR - ( ARS / ACS ) ) - FirstVNF_Mem ) ) + ( ( DDR / RRS ) * ACS ) )", "choosing": "( ( RRSe - MLU ) / ( Min( MUC ,( MUM / MUC ) ) - Min( MUC ,RRSe ) ) )", "obj1": 0.9960629921259843, "obj2": 0.003427355009256704}, {"determining": "( ( ( Min( BR ,( ARS / ACS ) ) - FirstVNF_Mem ) + PN ) + ( AMS * ( ( ( CRS + BR ) / ARS ) / CRS ) ) )", "choosing": "( ( Max( DS,DS ) / MUC ) * ( DS - CS ) )", "obj1": 0.9980314960629921, "obj2": 0.0015340961112900442}, {"determining": "( ( ( FirstVNF_RAM_Server * AMS ) + ( MDR / AMS ) ) / Max( Min( MDR ,MRS ),( FirstVNF_RAM_Server * ACS ) ) )", "choosing": "Max( Min( ( MUC * Max( MUC,MUM ) ) ,Min( DS ,MUM ) ),( RMSe - MUM ) )", "obj1": 0.42913385826771655, "obj2": 0.468618039307}, {"determining": "( ( FirstVNF_CPU / Const ) / ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( DS * RCSe ) ,( MLU * CS ) ) ,( ( RRSe * DS ) + ( MUR * DS ) ) )", "obj1": 0.38779527559055116, "obj2": 0.510620482182036}, {"determining": "( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) )", "choosing": "( ( RCSe / RRSe ) - ( MUR / MUM ) )", "obj1": 0.17913385826771652, "obj2": 0.7015680796477292}, {"determining": "( ( PN + ( ( BR - ( ARS / ACS ) ) - FirstVNF_Mem ) ) + ( AMS * ACS ) )", "choosing": "( ( RRSe - MLU ) / Max( Min( MUC ,MUC ),Min( MUC ,RRSe ) ) )", "obj1": 0.9960629921259843, "obj2": 0.003427355009256704}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( ( RRS / Const ) - Min( FirstVNF_Mem_Server ,ARS ) )", "choosing": "Min( ( CS * CS ) ,( MLU * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_RAM ) - ( Const - AMS ) )", "choosing": "( ( RCSe * CS ) - Max( MUM,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS * FirstVNF_RAM_Server ) - ( AMS + RRS ) )", "choosing": "Min( ( MUC + RMSe ) ,( RMSe - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( PN + FirstVNF_RAM ) ,Min( Max( BR,PN ) ,CRS ) ),FirstVNF_CPU ) - ( RRS + MDR ) )", "choosing": "Min( ( MUR * MLU ) ,( Min( ( RCSe + RRSe ) ,RRSe ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,( ( ( PN - AMS ) / ACS ) - BR ) ) * ( FirstVNF_Mem - ACS ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / DS ),( RCSe / DS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( ( ARS / BR ) * ( FirstVNF_RAM_Server / AMS ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( PN / RRS ) ) / Min( ( FirstVNF_RAM_Server + ( ( MDR - FirstVNF_Mem_Server ) / CRS ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / Min( ( Min( MLU ,RMSe ) + CS ) ,MUR ) ) / ( RCSe * ( ( ( ( DS / ( ( MLU + MLU ) / MLU ) ) / RRSe ) + MLU ) + ( RRSe * ( ( MLU - ( RCSe - ( MLU * MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( AMS ,FirstVNF_CPU ) - ( ARS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MLU + MUC ) + ( RMSe - MUR ) ) / ( ( DS - RMSe ) * Max( MUM,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( MUR / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / RRSe ) - ( MUR / MUM ) )", "obj1": 0.49606299212598426, "obj2": 0.29647229189544344}, {"determining": "Min( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ),Max( FirstVNF_Mem,BR ) ) ,Max( ARS,( DDR / MRS ) ) )", "choosing": "( ( RRSe / RCSe ) / ( RCSe - Max( ( MUR * CS ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6043307086614174, "obj2": 0.2790198021765497}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUM ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.7381889763779528, "obj2": 0.1407639190745752}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( Min( RRSe ,RRSe ) - Max( DS,RRSe ) ) * MLU ) ) / ( RCSe * RCSe ) )", "obj1": 0.452755905511811, "obj2": 0.41743908453083506}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.6594488188976378, "obj2": 0.26168214340211954}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.41929133858267714, "obj2": 0.4375958682468477}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( MRS,( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * MUR )", "obj1": 0.8307086614173228, "obj2": 0.13725890069639787}, {"determining": "Min( ( ( ARS / BR ) * ( FirstVNF_RAM_Server / AMS ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.21893484639776692}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( RCSe + MUR ) )", "obj1": 0.937007874015748, "obj2": 0.027832645425916184}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + RRS ) ) + Max( ( Const - FirstVNF_CPU ),CRS ) )", "choosing": "( ( MUR + Min( Min( MUR ,( CS * CS ) ) ,Max( MUM,( RCSe / ( Max( MUR,MLU ) * DS ) ) ) ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.03866877449160734}, {"determining": "( Min( ( ( Const * Const ) / ( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( ( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU - MUM ) / Min( MUC ,( RMSe + ( MUR + RCSe ) ) ) )", "obj1": 0.8582677165354331, "obj2": 0.11400565440763019}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,Const ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.23031496062992127, "obj2": 0.6345037143663728}, {"determining": "( ( ARS + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / PN ) )", "choosing": "Min( ( ( Max( ( DS / CS ),Max( ( MUR / MUC ),CS ) ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + DS ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5818125401674406}, {"determining": "( ( CRS - ACS ) + ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( CS * CS ) * ( MUC * MUC ) ) ) ,( ( CS * RRSe ) + Max( MUM,( ( Min( RRSe ,MUC ) - CS ) * Min( Min( MUR ,( ( MUM + RRSe ) - ( RRSe * MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.47473586004738444}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( MRS,( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,RRSe ) * RCSe ) * ( DS - CS ) )", "obj1": 0.8346456692913385, "obj2": 0.13457010800417904}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( ( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) ) + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * RCSe ) * ( RCSe - DS ) ) / RCSe ) / ( CS - RCSe ) )", "obj1": 0.44881889763779526, "obj2": 0.4209708412068133}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) * Max( Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ),DS ) )", "obj1": 0.10433070866141732, "obj2": 0.8272172613199391}, {"determining": "Max( ( Const + AMS ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( Max( ( CS / RMSe ),( CS + RCSe ) ),DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8606441161636297}, {"determining": "( ( MRS + FirstVNF_RAM ) + FirstVNF_RAM_Server )", "choosing": "( ( ( DS * RRSe ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - DS ) ) )", "obj1": 0.265748031496063, "obj2": 0.5911813714026184}, {"determining": "( Max( Max( ( ( ( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem ) ) * ( MDR - ACS ) ) - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7521825955610446}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) + ( Const + RRS ) )", "choosing": "( ( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( MUM * MUM ) ) - ( MUR / MUM ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( Const * CRS ) )", "choosing": "( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5000972570236516}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,( Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) * PN ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - RMSe )", "obj1": 0.20275590551181102, "obj2": 0.6397904244342781}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / ( ( ACS / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ARS ) )", "choosing": "( ( ( DS + ( ( ( MUR - ( Min( DS ,MLU ) - ( MLU - MLU ) ) ) / ( RRSe * ( RCSe - MUM ) ) ) - Min( MUR ,DS ) ) ) + MUM ) - ( MUM + MUC ) )", "obj1": 0.12401574803149606, "obj2": 0.7975399143435633}, {"determining": "( ( ( FirstVNF_CPU_Server / ( MDR + ( ( ACS - MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) + ARS ) * Max( ACS,ARS ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( MUM - RRSe ) ) + Min( ( RRSe / RRSe ) ,Min( RCSe ,RMSe ) ) ) * Min( Min( ( RCSe / DS ) ,( MUR - RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6814386934384382}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) )", "choosing": "( ( DS - RCSe ) + Max( MUR,MUC ) )", "obj1": 0.9212598425196851, "obj2": 0.06848381729783684}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( ( MLU + ( MLU - MUC ) ) * Max( MUC,( MLU - MUR ) ) ) ) * RMSe ) ) )", "obj1": 0.9645669291338582, "obj2": 0.01656413566118408}, {"determining": "( ( MDR / FirstVNF_RAM ) * Min( RRS ,Min( ( ARS / DDR ) ,Max( PN,BR ) ) ) )", "choosing": "( ( RCSe / MUR ) - ( MLU - MUC ) )", "obj1": 0.23228346456692914, "obj2": 0.613893503167281}, {"determining": "( Min( RRS ,BR ) * ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MUM * MUM ) / Min( RCSe ,RRSe ) ) - ( RCSe * MLU ) )", "obj1": 0.328740157480315, "obj2": 0.5540369125420768}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7367703046225419}, {"determining": "( Min( ( ACS + ( PN / ( Min( ( ( ARS / AMS ) + ( Const / PN ) ) ,ACS ) / Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( RRSe * MLU ),MUM ) - Max( ( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - DS ) * CS ) ),RRSe ) )", "obj1": 0.25, "obj2": 0.61360817552925}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / PN ) )", "choosing": "Min( ( ( Max( ( DS / CS ),Max( MUC,CS ) ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + DS ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.31299212598425197, "obj2": 0.565983092619462}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - ( BR + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Max( ( MUC + RCSe ),( ( ( CS + Max( CS,DS ) ) + MUR ) * RMSe ) ) ) - Min( MUR ,MUM ) ) * MUR )", "obj1": 0.38976377952755903, "obj2": 0.48299972395424123}, {"determining": "Max( ( ARS + Min( MDR ,Const ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Max( ( DS / DS ),( DS / ( ( MUR + MUM ) + ( CS / Max( Min( MLU ,Min( DS ,RRSe ) ),( ( ( CS - RCSe ) - MUR ) + RRSe ) ) ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - DS ) * CS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.2315626925135844}, {"determining": "( ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( FirstVNF_CPU + BR ) - Max( Const,BR ) ) ) + ( Const - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( MUR + Max( DS,( ( RMSe / Max( RMSe,RCSe ) ) - ( RRSe * RCSe ) ) ) ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.07889750248226989}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( PN - RRS ) - MRS ) ) )", "choosing": "Min( ( ( MUC * RCSe ) * ( DS - CS ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4915339368225924}, {"determining": "( Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( MRS,CRS ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( BR - CRS ) )", "choosing": "( ( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( Min( DS ,RMSe ) - RCSe ) + DS ) ) / ( MUC + ( ( Max( ( RCSe / ( Max( RRSe,MUC ) * RMSe ) ),MUC ) + RCSe ) + RMSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.10652721732364913}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - DS ) * CS ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.23946926632314852}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - DS ) * CS ) ) ) )", "obj1": 0.6889763779527559, "obj2": 0.23946926632314852}, {"determining": "( ( PN + Min( ACS ,ARS ) ) + ( ( ( Max( ( ( ACS + FirstVNF_Mem_Server ) + AMS ),MRS ) + ( Const - ARS ) ) + ( ( FirstVNF_CPU + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) * ACS ) ) - ( FirstVNF_CPU / ARS ) ) )", "choosing": "( Max( MUR,RCSe ) * ( ( RCSe - ( RCSe / RMSe ) ) - CS ) )", "obj1": 0.1279527559055118, "obj2": 0.7743589830627}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS - RCSe ) + Max( ( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) ),MUC ) )", "obj1": 0.8720472440944882, "obj2": 0.10717983450042437}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + Max( ACS,MRS ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( MUC ,MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + DS ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / ( RRSe / DS ) ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5321395756839433}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( ( ( Max( MLU,MLU ) - MUM ) / RCSe ) * ( RCSe / ( RMSe - RMSe ) ) )", "obj1": 0.17716535433070865, "obj2": 0.7005064933403202}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( MDR / Const ) ,AMS ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) + ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( RCSe,Min( MLU ,MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5238240382986441}, {"determining": "( Min( ( ACS + ( ACS / ( Min( ( ACS + ( PN / RRS ) ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + CS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RRSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6861473212139442}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / ( CRS / ARS ) )", "choosing": "( ( MLU / MUC ) * ( DS - CS ) )", "obj1": 0.30118110236220474, "obj2": 0.5741986081696685}, {"determining": "( ( Min( MDR ,Const ) * AMS ) - Max( Max( Min( PN ,FirstVNF_RAM ),( RRS * MDR ) ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( CS,Max( MUR,( ( RCSe / RCSe ) * MUR ) ) ) * ( MUC / MUM ) )", "obj1": 0.4074803149606299, "obj2": 0.4763900332022241}, {"determining": "Max( ( ( ( FirstVNF_CPU / Min( Max( FirstVNF_RAM_Server,( ( MDR - FirstVNF_Mem_Server ) / CRS ) ) ,FirstVNF_CPU ) ) + PN ) + BR ),( PN + ACS ) )", "choosing": "( ( RCSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.08661417322834646, "obj2": 0.876235726540168}, {"determining": "( ( ACS + FirstVNF_RAM ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( Max( ( DS / RMSe ),( CS + RCSe ) ) ,MUR ) )", "obj1": 0.17125984251968504, "obj2": 0.7012080145407302}, {"determining": "Max( ( ( ARS + ( CRS + ( ( ARS / FirstVNF_RAM ) + ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) ) + BR ),( PN - ACS ) )", "choosing": "Max( ( Max( Max( ( MUM + ( ( CS - ( MUM + DS ) ) - Max( CS,Min( RMSe ,RMSe ) ) ) ),Min( CS ,RCSe ) ),MUM ) / DS ),( DS / RCSe ) )", "obj1": 0.09448818897637795, "obj2": 0.865492188646627}, {"determining": "( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU ) + ( Const * BR ) )", "choosing": "( Max( ( MUR * CS ),RMSe ) - Max( Min( ( RCSe / MUM ) ,( RCSe - CS ) ),( CS - DS ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5190777519392388}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR + RCSe ) + RMSe ) ) )", "obj1": 0.702755905511811, "obj2": 0.23316678460889337}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) )", "choosing": "Min( ( ( RCSe / RRSe ) - ( MUR / MUM ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.09622698978777428}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUM + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5435569827034199}, {"determining": "( Max( ACS,Const ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RRSe * ( Max( RMSe,MUM ) - RCSe ) ) ,RRSe )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "Min( ( ( ARS / BR ) * Max( MRS,Const ) ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( RCSe,DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.21893484639776692}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + Min( Min( MUR ,( RCSe / ( ( RRSe - DS ) - CS ) ) ) ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.015216819040951804}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( ( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5382206275760922}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7367703046225419}, {"determining": "Max( ( FirstVNF_CPU + Min( Const ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / ( ( ( DS / DS ) * ( ( MUR * MLU ) * MUM ) ) * MUR ) ),( RCSe / DS ) )", "obj1": 0.1062992125984252, "obj2": 0.822100240393878}, {"determining": "( ( ARS * Const ) * Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RRSe - MUR ) ,( ( ( MUC - DS ) + ( MLU * CS ) ) - ( ( MUM * MUM ) / ( DS * RCSe ) ) ) )", "obj1": 0.8700787401574803, "obj2": 0.11378655158522537}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( ( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + DS ) )", "obj1": 0.3090551181102362, "obj2": 0.5716367485963161}, {"determining": "( Max( Max( ( PN - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( FirstVNF_Mem / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS - DS ),( ( CS - ( CS * MUC ) ) + Min( CS ,MUR ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5978971493192292}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( ( PN + ACS ) + AMS ) )", "choosing": "Min( ( ( Max( MLU,( Min( MUR ,CS ) - RMSe ) ) + MLU ) / RRSe ) ,( ( CS + MUC ) + ( MLU / MUM ) ) )", "obj1": 0.8956692913385826, "obj2": 0.09622698978777428}, {"determining": "( Min( RRS ,BR ) * Min( ( ( FirstVNF_Mem_Server * MRS ) * Const ) ,RRS ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( PN - RRS ) - MRS ) )", "choosing": "( ( MUC * RCSe ) * ( DS - CS ) )", "obj1": 0.2578740157480315, "obj2": 0.5965016421406408}, {"determining": "Min( ( ARS + FirstVNF_Mem ) ,( Max( AMS,ARS ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( ACS + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ) )", "choosing": "( ( DS - RCSe ) + ( ( ( Min( ( RCSe / RMSe ) ,MLU ) * RMSe ) + ( MUC * ( Max( ( Max( MUR,MUC ) / Max( RMSe,MUM ) ),CS ) * ( MUC + ( RRSe + ( RCSe / RMSe ) ) ) ) ) ) + ( MUM / CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.0719910303625736}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( RCSe ,RCSe ) ,DS )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( FirstVNF_CPU + AMS ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8099791749806996}, {"determining": "( Min( Max( ( FirstVNF_Mem_Server + ( BR / Min( ( MRS + ARS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) ) ),ACS ) ,DDR ) / ( CRS / ARS ) )", "choosing": "( Max( MUR,MLU ) - ( DS / CS ) )", "obj1": 0.13582677165354332, "obj2": 0.7725523794710227}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / Min( PN ,PN ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) / ( MUC + ( ( MUR + Max( RCSe,CS ) ) + RMSe ) ) )", "obj1": 0.7007874015748031, "obj2": 0.23502112417053556}, {"determining": "( Min( RRS ,Min( ( Const / DDR ) ,Max( PN,BR ) ) ) * ( ARS * Const ) )", "choosing": "Min( ( ( ( CS - CS ) / MUC ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.1889763779527559, "obj2": 0.6842648049071879}, {"determining": "( Min( AMS ,MDR ) + ( MRS - ( DDR * Const ) ) )", "choosing": "( ( MUR + Min( Min( MUR ,( RCSe / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) ) ,RMSe ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.015216819040951804}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( MDR / Const ) ,AMS ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( RMSe + ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( RCSe,Min( MLU ,MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5355578578151593}, {"determining": "( Max( ( PN * PN ),Min( AMS ,DDR ) ) + ( Const - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.0784987748060851}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5355578578151593}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( ( Const - AMS ) / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( RCSe,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8045217994341679}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( Const * BR ) )", "choosing": "( Max( RCSe,RMSe ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5190777519392388}, {"determining": "Max( Max( DDR,( ( ( PN - AMS ) / ACS ) - BR ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( ( Min( MUR ,RMSe ) / DS ),( RCSe / DS ) ) * Max( MUC,DS ) )", "obj1": 0.11023622047244094, "obj2": 0.806790067410108}, {"determining": "( ( ( AMS / Min( ( PN - FirstVNF_CPU ) ,FirstVNF_CPU ) ) * FirstVNF_RAM ) * ( ARS / Const ) )", "choosing": "( ( RCSe / MUR ) - ( DS + ( ( Min( ( ( RRSe * MLU ) * MLU ) ,RRSe ) * MLU ) - MUM ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "Max( FirstVNF_Mem,( ( ( DDR + FirstVNF_Mem ) + ( ( Const - AMS ) / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( RCSe,DS ) )", "obj1": 0.11614173228346457, "obj2": 0.8045217994341679}, {"determining": "( ( PN + ( ( BR - ( ARS / ACS ) ) - FirstVNF_Mem ) ) + ( ( DDR / RRS ) * ACS ) )", "choosing": "( ( RRSe - MLU ) / ( Min( MUC ,( MUM / MUC ) ) - Min( MUC ,RRSe ) ) )", "obj1": 0.9960629921259843, "obj2": 0.003427355009256704}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / RCSe ) / ( CS - RCSe ) )", "obj1": 0.4507874015748031, "obj2": 0.41821862687974015}, {"determining": "( Min( Min( ( Max( Max( ARS,FirstVNF_Mem ),Min( ( MDR / AMS ) ,FirstVNF_RAM ) ) * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( MRS,( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - MUR ) - Min( MUR ,CS ) ) * MUR )", "obj1": 0.8307086614173228, "obj2": 0.13725890069639787}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( ( Const * BR ) / ( PN - ( Max( DDR,FirstVNF_RAM_Server ) * Max( RRS,MRS ) ) ) ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( RRSe * MLU ),( MUR + RMSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) / ( ( Max( Min( CS ,DS ),CS ) * MUM ) + DS ) )", "obj1": 0.7007874015748031, "obj2": 0.23502112417053556}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / ( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) )", "choosing": "( ( ( DS + ( ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) / ( RRSe * ( RCSe - MUM ) ) ) - Min( MUR ,DS ) ) ) + MUM ) - ( MUM + MUC ) )", "obj1": 0.13582677165354332, "obj2": 0.7725523794710227}, {"determining": "( ( ( Min( BR ,( ARS / ACS ) ) - FirstVNF_Mem ) + PN ) + ( AMS * ( ( ( CRS + BR ) / ARS ) / CRS ) ) )", "choosing": "( ( Max( DS,DS ) / MUC ) * ( DS - CS ) )", "obj1": 0.1279527559055118, "obj2": 0.7743589830627}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - DS ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5978971493192292}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8099791749806996}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( PN + ACS ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.1141732283464567, "obj2": 0.8045764894190727}, {"determining": "( ( ( FirstVNF_CPU_Server / ( MDR + ( ( ACS - MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) + ARS ) * Max( ACS,ARS ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( MUM - RRSe ) ) + Min( ( RRSe / RRSe ) ,Min( RCSe ,RMSe ) ) ) * Min( Min( ( RCSe / DS ) ,( MUR - RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6814386934384382}, {"determining": "( ( PN + ( ( BR - ( ARS / ACS ) ) - FirstVNF_Mem ) ) + ( AMS * ACS ) )", "choosing": "( ( MLU / MUC ) * ( DS - CS ) )", "obj1": 0.9980314960629921, "obj2": 0.0015340961112900442}, {"determining": "( ( PN + ( ( BR - ( ARS / ACS ) ) - FirstVNF_Mem ) ) + ( AMS * ACS ) )", "choosing": "( ( RRSe - MLU ) / Max( Min( MUC ,MUC ),Min( MUC ,RRSe ) ) )", "obj1": 0.9960629921259843, "obj2": 0.003427355009256704}], "5": [{"determining": "Min( ( ( ARS / BR ) * ( FirstVNF_RAM_Server / AMS ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "( ( CS - Min( MUM ,Max( DS,( Min( RRSe ,DS ) + MUR ) ) ) ) * ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ARS * BR ) * Max( Max( CRS,ACS ),MRS ) ) ,( ( ( Const / RRS ) + ( PN / RRS ) ) / Min( ( FirstVNF_RAM_Server + ( ( MDR - FirstVNF_Mem_Server ) / CRS ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe / Min( ( Min( MLU ,RMSe ) + CS ) ,MUR ) ) / ( RCSe * ( ( ( ( DS / ( ( MLU + MLU ) / MLU ) ) / RRSe ) + MLU ) + ( RRSe * ( ( MLU - ( RCSe - ( MLU * MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( MUR / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / MUM ) * CS ) ,Min( MUM ,MUR ) )", "obj1": 0.7381889763779528, "obj2": 0.1407639190745752}, {"determining": "Min( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ),Max( FirstVNF_Mem,BR ) ) ,Max( ARS,( DDR / MRS ) ) )", "choosing": "( ( RRSe / RCSe ) / ( RCSe - Max( ( MUR * CS ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6043307086614174, "obj2": 0.2790198021765497}, {"determining": "( Min( Min( ( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( MDR / Const ) ,AMS ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUR / ( RCSe * DS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.4109268952026006}, {"determining": "Min( ( ( ARS / BR ) * ( FirstVNF_RAM_Server / AMS ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.21893484639776692}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / RRSe ) - ( MUR / MUM ) )", "obj1": 0.49606299212598426, "obj2": 0.29647229189544344}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * Min( MLU ,( MUC + ( MUM - DS ) ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.5039370078740157, "obj2": 0.29005410919432173}, {"determining": "( Min( ( ( PN - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) + ( AMS / PN ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( MUR ,Max( ( Max( MUR,MUC ) / RCSe ),RMSe ) ) / DS ),( DS / RCSe ) )", "obj1": 0.6653543307086615, "obj2": 0.22722192887230167}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( ( MLU + ( MLU - MUC ) ) * Max( MUC,( MLU - MUR ) ) ) ) * RMSe ) ) )", "obj1": 0.7952755905511811, "obj2": 0.11223986303079143}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS - RCSe ) + Max( ( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) ),MUC ) )", "obj1": 0.8720472440944882, "obj2": 0.10717983450042437}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.26352145923333004}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( ( MLU + ( MLU - MUC ) ) * Max( MUC,( MLU - MUR ) ) ) ) * RMSe ) ) )", "obj1": 0.7952755905511811, "obj2": 0.11223986303079143}, {"determining": "( ( CRS - ACS ) + ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * ( MUC * MUC ) ) - ( ( CS * CS ) * ( MUC * MUC ) ) ) ,( ( CS * RRSe ) + Max( MUM,( ( Min( RRSe ,MUC ) - CS ) * Min( Min( MUR ,( ( MUM + RRSe ) - ( RRSe * MUC ) ) ) ,MUM ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.47473586004738444}, {"determining": "Min( Max( PN,BR ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / RCSe ) / RCSe )", "obj1": 0.452755905511811, "obj2": 0.41574074734132577}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.6594488188976378, "obj2": 0.26168214340211954}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,BR ),( BR + FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,CRS ) / FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( ( MUC / Min( DS ,DS ) ) * ( ( MUM - Min( RCSe ,MUC ) ) - MUM ) ),MLU ) / DS ),( ( ( Max( ( Min( ( CS + MUC ) ,RMSe ) - ( Max( RCSe,MUR ) / ( RMSe / RRSe ) ) ),( CS - RRSe ) ) - ( CS / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.41929133858267714, "obj2": 0.4375958682468477}, {"determining": "Min( ( ARS + FirstVNF_Mem ) ,( Max( AMS,ARS ) * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) / ( ACS + FirstVNF_CPU ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ) )", "choosing": "( ( DS - RCSe ) + ( ( ( Min( ( RCSe / RMSe ) ,MLU ) * RMSe ) + ( MUC * ( Max( ( Max( MUR,MUC ) / Max( RMSe,MUM ) ),CS ) * ( MUC + ( RRSe + ( RCSe / RMSe ) ) ) ) ) ) + ( MUM / CS ) ) )", "obj1": 0.9153543307086615, "obj2": 0.0719910303625736}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.4251968503937008, "obj2": 0.4245538134694243}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( ( ( FirstVNF_CPU_Server / ( MDR + ( ( ACS - MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) + ARS ) * Max( ACS,ARS ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( MUM - RRSe ) ) + Min( ( RRSe / RRSe ) ,Min( RCSe ,RMSe ) ) ) * Min( Min( ( RCSe / DS ) ,( MUR - RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6814386934384382}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / DS ) * Max( Max( ( DS / RMSe ),( CS + RCSe ) ),DS ) )", "obj1": 0.9173228346456693, "obj2": 0.039706049887725504}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) - ( BR + FirstVNF_Mem ) )", "choosing": "( ( ( MUR - Max( ( MUC + RCSe ),( ( ( CS + Max( CS,DS ) ) + MUR ) * RMSe ) ) ) - Min( MUR ,MUM ) ) * MUR )", "obj1": 0.38976377952755903, "obj2": 0.48299972395424123}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,DS ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6268992408684362}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) * BR ) )", "choosing": "( Max( RCSe,RMSe ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - ( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - DS ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6129331985475649}, {"determining": "Max( ( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) ),( PN + ACS ) )", "choosing": "( ( RCSe + ( MUR + Min( CS ,RMSe ) ) ) / ( RCSe * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8674788474162133}, {"determining": "Max( ( ( ( FirstVNF_CPU / Min( Max( FirstVNF_RAM_Server,( ( MDR - FirstVNF_Mem_Server ) / CRS ) ) ,FirstVNF_CPU ) ) + ( ACS * DDR ) ) + BR ),( PN + ACS ) )", "choosing": "( ( RMSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8506090440617529}, {"determining": "( FirstVNF_RAM_Server - ( ( Min( RRS ,MRS ) * ( MDR * CRS ) ) + FirstVNF_Mem ) )", "choosing": "( Min( RCSe ,( ( ( ( RRSe - ( MUM / MUC ) ) + ( MUM + MUC ) ) * MUR ) / ( CS + MUR ) ) ) - RMSe )", "obj1": 0.3799212598425197, "obj2": 0.49069763324399496}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) + FirstVNF_RAM_Server )", "choosing": "( ( RRSe + ( DS / CS ) ) - Max( ( ( Min( RRSe ,DS ) - Min( DS ,( RRSe / ( MLU / ( MLU - MLU ) ) ) ) ) * ( CS + RRSe ) ),( CS - DS ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5859151509150906}, {"determining": "( Min( Min( ( MDR * Const ) ,( PN * CRS ) ) ,( Max( FirstVNF_Mem,MRS ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ACS * DDR ) )", "choosing": "( ( Max( ( MUR + RMSe ),( RRSe * MLU ) ) / ( ( Min( ( DS - MUC ) ,RMSe ) - RCSe ) / DS ) ) / ( MUC + ( ( RCSe + MUR ) + RMSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.10614604773521041}, {"determining": "( Max( Max( ( ( ( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem ) ) * ( MDR - ACS ) ) - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( ( ARS * Const ) / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),DS ) ) + RRSe ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7364808960149593}, {"determining": "( ( ARS + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / PN ) )", "choosing": "Min( ( ( Max( ( DS / CS ),Max( ( MUR / MUC ),CS ) ) * ( MUC * MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + DS ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5818125401674406}, {"determining": "Max( ( ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + PN ) + BR ),( PN + ACS ) )", "choosing": "( ( Max( DS,DS ) / MUC ) * ( DS - CS ) )", "obj1": 0.1279527559055118, "obj2": 0.7743589830627}, {"determining": "( ( MDR / FirstVNF_RAM ) * Min( RRS ,Min( ( ARS / DDR ) ,Max( PN,BR ) ) ) )", "choosing": "( ( RCSe / MUR ) - ( MLU - MUC ) )", "obj1": 0.23228346456692914, "obj2": 0.613893503167281}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUC * RCSe ) * ( DS - CS ) )", "obj1": 0.9350393700787402, "obj2": 0.026353883349676}, {"determining": "( ( Min( MDR ,Const ) * AMS ) - Max( Max( Min( PN ,FirstVNF_RAM ),( RRS * MDR ) ),Max( BR,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( CS,Max( MUR,( ( RCSe / RCSe ) * MUR ) ) ) * ( MUC / MUM ) )", "obj1": 0.4074803149606299, "obj2": 0.4763900332022241}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe * ( Max( RMSe,MUM ) - RCSe ) ) ,RRSe )", "obj1": 0.3051181102362205, "obj2": 0.5574096313852307}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * RCSe ) * ( ( ( CS + MUC ) + ( MLU / CS ) ) - DS ) ) / RCSe ) / ( CS - RCSe ) )", "obj1": 0.4468503937007874, "obj2": 0.42221230822805883}, {"determining": "( ( ( FirstVNF_CPU_Server / ( MDR + ( ( ACS - MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) + ARS ) * Max( ACS,ARS ) )", "choosing": "( ( Max( ( RRSe * MLU ),( MUR + RMSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) / ( ( Max( Min( CS ,DS ),CS ) * MUM ) + DS ) )", "obj1": 0.2263779527559055, "obj2": 0.6238736259922121}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( MDR / Const ) ,AMS ) ) ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( RCSe,DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5555350065547522}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) )", "choosing": "Max( ( ( MUC / DS ) / DS ),( RCSe / DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8448832248789484}, {"determining": "( Min( RRS ,BR ) * ( FirstVNF_RAM_Server - PN ) )", "choosing": "( ( ( MUM * MUM ) / Min( RCSe ,RRSe ) ) - ( RCSe * MLU ) )", "obj1": 0.328740157480315, "obj2": 0.5540369125420768}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / ( ( ACS / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ARS ) )", "choosing": "( ( ( DS + ( ( ( MUR - ( Min( DS ,MLU ) - ( MLU - MLU ) ) ) / ( RRSe * ( RCSe - MUM ) ) ) - Min( MUR ,DS ) ) ) + MUM ) - ( MUM + MUC ) )", "obj1": 0.12401574803149606, "obj2": 0.7975399143435633}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( RCSe + MUR ) )", "obj1": 0.9291338582677166, "obj2": 0.03159532529023302}, {"determining": "( Min( ( ACS + ( PN / ( Min( ( ACS + FirstVNF_CPU ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6923998990119447}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( MUM * ( MUM * Min( ( DS / RRSe ) ,MUM ) ) ) + RRSe ) ) - Min( ( ( ( RMSe - ( Min( Min( MLU ,RMSe ) ,( MLU - DS ) ) / ( MUC - MUR ) ) ) - CS ) + ( ( MLU * DS ) / MUR ) ) ,RRSe ) )", "obj1": 0.9744094488188977, "obj2": 0.010660985004373416}, {"determining": "Max( ( ( MRS + PN ) + BR ),( PN + ACS ) )", "choosing": "Max( ( Max( Max( ( MUM + ( MUC - Min( ( RRSe + DS ) ,( RMSe - MLU ) ) ) ),( MUR + Min( RMSe ,RMSe ) ) ),MUM ) / DS ),( DS / RCSe ) )", "obj1": 0.10236220472440945, "obj2": 0.8363821895340967}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( PN - RRS ) - MRS ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * MUR )", "obj1": 0.3700787401574803, "obj2": 0.5031411324848893}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,RRS ) ) ) + ( MRS - ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "( MUR / ( Max( ( ( RMSe + MUC ) - CS ),MUR ) * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Min( CS ,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.41929133858267714, "obj2": 0.4375958682468477}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ) )", "choosing": "( ( CS - Min( MUM ,Max( DS,( Min( RRSe ,RRSe ) + MUR ) ) ) ) * ( DS - CS ) )", "obj1": 0.9015748031496063, "obj2": 0.08187948787148185}, {"determining": "( ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU ) + ( Const * BR ) )", "choosing": "( Max( ( MUR * CS ),RMSe ) - Max( Min( ( RCSe / MUM ) ,( RCSe - CS ) ),( CS - DS ) ) )", "obj1": 0.36811023622047245, "obj2": 0.5190777519392388}, {"determining": "( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( PN - RRS ) - MRS ) )", "choosing": "( ( MUC * RCSe ) * ( DS - CS ) )", "obj1": 0.3031496062992126, "obj2": 0.5686760780120598}, {"determining": "( ( ( FirstVNF_Mem + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7433023856839474}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7714426258413063}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( DS / CS ) ) ),Min( CS ,DS ) ) - Max( RCSe,RMSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5978971493192292}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( ( MLU + ( MLU - MUC ) ) * Max( MUC,( MLU - MUR ) ) ) ) * RMSe ) ) )", "obj1": 0.9645669291338582, "obj2": 0.01656413566118408}, {"determining": "( Max( Max( ( ( ( FirstVNF_RAM_Server - ( BR + Min( AMS ,MDR ) ) ) * ( MDR - ACS ) ) - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( ( RCSe / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.745208215476188}, {"determining": "( Min( RRS ,BR ) * Min( ( ( FirstVNF_Mem_Server * MRS ) * Const ) ,RRS ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) * Max( Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ),DS ) )", "obj1": 0.10433070866141732, "obj2": 0.8272172613199391}, {"determining": "Min( ( ( ARS / BR ) * Max( MRS,Const ) ) ,( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( RCSe,DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.21893484639776692}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,( Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) * PN ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - RMSe )", "obj1": 0.20275590551181102, "obj2": 0.6397904244342781}, {"determining": "( ( ( FirstVNF_CPU_Server / ( MDR + ( ( ACS - MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) + ARS ) * Max( ACS,ARS ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) + ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( RCSe,Min( MLU ,MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5792968133980408}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,( Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) * PN ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - RMSe )", "obj1": 0.20275590551181102, "obj2": 0.6397904244342781}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - MUC ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6983375110935276}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7521825955610446}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) )", "choosing": "Min( ( ( RCSe / RRSe ) - ( MUR / MUM ) ) ,( ( CS + MUC ) + ( MLU / CS ) ) )", "obj1": 0.8956692913385826, "obj2": 0.09622698978777428}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5435569827034199}, {"determining": "( Max( ACS,Const ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RRSe * ( Max( RMSe,MUM ) - RCSe ) ) ,RRSe )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUM + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.3405511811023622, "obj2": 0.5337212826239515}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( RCSe,DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( ( PN + ACS ) + AMS ) )", "choosing": "Min( ( ( Max( MLU,( Min( MUR ,CS ) - RMSe ) ) + MLU ) / RRSe ) ,( ( CS + MUC ) + ( MLU / MUM ) ) )", "obj1": 0.8956692913385826, "obj2": 0.09622698978777428}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.1220472440944882, "obj2": 0.7980868468444304}, {"determining": "( ( MRS + FirstVNF_RAM ) + FirstVNF_RAM_Server )", "choosing": "( ( ( DS * RRSe ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - DS ) ) )", "obj1": 0.265748031496063, "obj2": 0.5911813714026184}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( MDR / Const ) ,AMS ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) + ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( RCSe,Min( MLU ,MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5238240382986441}, {"determining": "Max( ( FirstVNF_CPU + Min( Const ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / ( ( ( DS / DS ) * ( ( MUR * MLU ) * MUM ) ) * MUR ) ),( RCSe / DS ) )", "obj1": 0.1062992125984252, "obj2": 0.822100240393878}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8099791749806996}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( MDR / Const ) ,AMS ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) + ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( RCSe,Min( MLU ,MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.5238240382986441}, {"determining": "Min( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Min( FirstVNF_CPU ,BR ) ) ,( MDR / ( ( AMS + Const ) * RRS ) ) )", "choosing": "( ( RCSe / MUR ) - ( Min( Max( ( MUR * ( MLU + Min( MLU ,Max( DS,MUM ) ) ) ),DS ) ,( Min( RRSe ,RMSe ) * Min( RRSe ,CS ) ) ) * RCSe ) )", "obj1": 0.5019685039370079, "obj2": 0.2907057990124553}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + ( MRS + FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) + ( Min( Max( ( RMSe + RRSe ),( MUR + Max( RCSe,RMSe ) ) ) ,Max( RCSe,Min( MLU ,MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.5335956087701968}, {"determining": "( ( MRS + FirstVNF_RAM ) + FirstVNF_RAM_Server )", "choosing": "( ( ( DS * RRSe ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - DS ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5945411816272296}, {"determining": "( ( ( ( RRS / FirstVNF_CPU_Server ) + Max( RRS,Const ) ) / ( ( FirstVNF_CPU + BR ) - Max( Const,BR ) ) ) + ( Const - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( MUR + Max( DS,( ( RMSe / Max( RMSe,RCSe ) ) - ( RRSe * RCSe ) ) ) ) ) ) )", "obj1": 0.9094488188976378, "obj2": 0.07889750248226989}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + RRS ) ) + Max( ( Const - FirstVNF_CPU ),CRS ) )", "choosing": "( ( MUR + Min( Min( MUR ,( CS * CS ) ) ,Max( MUM,( RCSe / ( Max( MUR,MLU ) * DS ) ) ) ) ) + ( DS * Min( MUM ,( RCSe + MUR ) ) ) )", "obj1": 0.9232283464566929, "obj2": 0.03866877449160734}, {"determining": "( Max( ( PN * PN ),Min( AMS ,DDR ) ) + ( Const - ( ACS + FirstVNF_RAM ) ) )", "choosing": "Max( ( DS / RMSe ),Min( ( ( MUC / Max( MUR,MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.07849877480608507}, {"determining": "( ( ( ( BR - MRS ) / ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM_Server - CRS ) ,( FirstVNF_RAM_Server / RRS ) ) ) * ( ( ( FirstVNF_CPU * FirstVNF_RAM_Server ) * Min( FirstVNF_RAM_Server ,DDR ) ) / ( ( ACS + Max( ACS,MRS ) ) / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( RCSe + MUC ) * Min( MUC ,MUC ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + DS ),( RRSe * MLU ) ) / ( ( MUM + MUR ) * ( CS / ( RRSe / DS ) ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5321395756839433}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server + AMS ) * ( MDR * RRS ) ) + FirstVNF_Mem ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,( Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) * PN ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + ( Min( RRSe ,RRSe ) + MUR ) ) ) ) - RMSe )", "obj1": 0.19881889763779528, "obj2": 0.6421505396845887}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16535433070866143, "obj2": 0.7050804648110863}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( Const * CRS ) )", "choosing": "( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5000972570236516}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / ( CRS / ARS ) )", "choosing": "( ( MLU / MUC ) * ( DS - CS ) )", "obj1": 0.30118110236220474, "obj2": 0.5741986081696685}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + RRS ) ) + Max( CRS,( Const - Max( Const,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( MLU * ( Max( DS,DS ) * ( MUC - MUC ) ) ) - ( ( MUC * MUC ) * ( CS * CS ) ) ) ,( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.5321395756839433}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) )", "obj1": 0.3720472440944882, "obj2": 0.5000972570236516}, {"determining": "( ( ARS * Const ) * Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe / RRSe ) - ( MUR / MUM ) )", "obj1": 0.9035433070866141, "obj2": 0.08186506538399121}, {"determining": "Max( ( Const + AMS ),( PN + ACS ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.15551181102362205, "obj2": 0.7367703046225419}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( ( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5382206275760922}, {"determining": "( Min( ( ( RRS * FirstVNF_RAM ) + ( PN / ( Min( ( ACS + ( Const / FirstVNF_RAM_Server ) ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - ( CS + Max( Max( ( MLU + DS ),RCSe ),DS ) ) ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6861473212139442}, {"determining": "( ( PN * ( ( BR + FirstVNF_Mem ) + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RRSe + Max( DS,MUM ) ),CS )", "obj1": 0.9940944881889764, "obj2": 0.0024518246806176747}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5382206275760922}], "6": [{"determining": "Min( ( ( ARS / BR ) * ( FirstVNF_RAM_Server / AMS ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "( ( PN * BR ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RRSe + Max( MUC,MUM ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server + FirstVNF_Mem ) )", "choosing": "( ( CS - Min( MUM ,Max( DS,( Min( RRSe ,DS ) + MUR ) ) ) ) * ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( FirstVNF_Mem_Server * AMS ) ,( Const * BR ) ) )", "choosing": "( MUR / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "Min( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ),Max( FirstVNF_Mem,BR ) ) ,Max( ARS,( DDR / MRS ) ) )", "choosing": "( ( RRSe / RCSe ) / ( RCSe - Max( ( MUR * CS ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6043307086614174, "obj2": 0.2790198021765497}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( Min( Min( MLU ,CS ) ,( MUM - RRSe ) ) + Min( ( RRSe / RRSe ) ,Min( RCSe ,RMSe ) ) ) * Min( Min( ( RCSe / DS ) ,( MUR - RRSe ) ) ,Min( ( MLU - MUR ) ,( MUM - DS ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.38548369869188776}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * MUR )", "obj1": 0.7381889763779528, "obj2": 0.1395159204407079}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * Min( MLU ,( MUC + ( MUM - DS ) ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.5039370078740157, "obj2": 0.29005410919432173}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * CRS ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.38976377952755903, "obj2": 0.46586556758935727}, {"determining": "( Min( ( ( PN - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) + ( AMS / PN ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( MUR ,Max( ( Max( MUR,MUC ) / RCSe ),RMSe ) ) / DS ),( DS / RCSe ) )", "obj1": 0.6653543307086615, "obj2": 0.22722192887230167}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - RMSe )", "obj1": 0.49606299212598426, "obj2": 0.2943978657348431}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( FirstVNF_CPU_Server + ( FirstVNF_CPU * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) ) + ( Max( ACS,RRS ) / ( RRS + MDR ) ) ) )", "choosing": "( ( MUR + Min( ( DS - Max( Max( Min( RCSe ,MLU ),MUM ),RCSe ) ) ,RMSe ) ) / ( MUR + MUR ) )", "obj1": 0.36220472440944884, "obj2": 0.4890613407873901}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),CS ) )", "obj1": 0.734251968503937, "obj2": 0.19288865851626}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( ( RRSe - ( MUM / MUC ) ) + ( MUM + MUC ) ) * MUR ) / ( CS + MUR ) ) ) - RMSe )", "obj1": 0.781496062992126, "obj2": 0.12355698046377497}, {"determining": "( ( PN * ( ARS + Max( ( Min( RRS ,MRS ) * ( MDR * CRS ) ),Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( RRSe - ( MUM / MUC ) ) ) * RMSe ) ) )", "obj1": 0.7992125984251969, "obj2": 0.1122183616157542}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS - RCSe ) + Max( ( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) ),MUC ) )", "obj1": 0.8720472440944882, "obj2": 0.10717983450042437}, {"determining": "( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) ) - FirstVNF_CPU ) + ( Const * BR ) )", "choosing": "( Max( ( MUR * CS ),MUR ) - Max( Min( ( RCSe / MUM ) ,( RCSe - CS ) ),( CS - DS ) ) )", "obj1": 0.4921259842519685, "obj2": 0.41505432054962865}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) * PN ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe * ( Max( RMSe,MUM ) - ( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - RMSe ) ) ) ,RRSe )", "obj1": 0.718503937007874, "obj2": 0.22005268682096582}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( PN - RRS ) - MRS ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * MUR )", "obj1": 0.3464566929133858, "obj2": 0.5195863154113256}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( ( ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM / PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + ( ( ( RMSe * RCSe ) * ( ( ( CS + MUC ) + ( MLU / CS ) ) - DS ) ) / RCSe ) ) )", "obj1": 0.6496062992125984, "obj2": 0.276195806178696}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( PN,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( FirstVNF_RAM / ARS ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * Min( MUC ,Min( Min( Min( MUC ,RCSe ) ,( Max( RRSe,MUC ) * CS ) ) ,Max( MLU,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5525188481318493}, {"determining": "( ( ( FirstVNF_CPU_Server / ( MDR + ( ( ACS - MRS ) / ( Const + FirstVNF_CPU_Server ) ) ) ) + ARS ) * Max( ACS,ARS ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) + ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( RCSe,Min( MLU ,MLU ) ) ) + RCSe ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5792968133980408}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.6594488188976378, "obj2": 0.26168214340211954}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ,PN ) / ( Max( ACS,( FirstVNF_Mem + Const ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - RCSe ) / ( ( ( ( MLU + MUR ) - CS ) + Min( ( MLU - MUC ) ,MUR ) ) * ( ( RCSe + RRSe ) / ( DS * RCSe ) ) ) ) * CS ) ,Min( CS ,Max( ( ( RCSe + Min( DS ,MUM ) ) - ( RCSe * MUM ) ),RMSe ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6805040869494942}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( MRS * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + BR ) ) ) ) )", "choosing": "( ( CS - Min( MUM ,Max( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / MUC ) ),( Min( RRSe ,RRSe ) + MUR ) ) ) ) * ( DS - CS ) )", "obj1": 0.905511811023622, "obj2": 0.07878287558126428}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUM * MUM ) / Min( RCSe ,RRSe ) ) - ( RCSe * MLU ) )", "obj1": 0.8818897637795275, "obj2": 0.10200779197591471}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,BR ),( BR + FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,CRS ) / FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( ( MUC / Min( DS ,DS ) ) * ( ( MUM - Min( RCSe ,MUC ) ) - MUM ) ),MLU ) / DS ),( ( ( Max( ( Min( ( CS + MUC ) ,RMSe ) - ( Max( RCSe,MUR ) / ( RMSe / RRSe ) ) ),( CS - RRSe ) ) - ( CS / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.41929133858267714, "obj2": 0.4375958682468477}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "Min( Max( PN,BR ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / RCSe ) / RCSe )", "obj1": 0.452755905511811, "obj2": 0.41574074734132577}, {"determining": "( ( MRS - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Max( DS,MUC ),Min( MUM ,MUR ) ),( Min( RMSe ,( ( ( MUM - Min( MUC ,MUM ) ) + RMSe ) * MUR ) ) + Min( MUM ,Max( MLU,MUC ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6044904133990888}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5506046659578775}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Max( ( ( ( FirstVNF_CPU / ( ( DDR / Min( ( MRS - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / Max( ( AMS - ( BR / FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) ) + ( MDR * DDR ) ) + BR ),( PN + ( FirstVNF_RAM * ( Max( MRS,MDR ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS * RRSe ) + Max( ( RCSe + RMSe ),( ( Min( RRSe ,MUC ) - CS ) + Min( ( MUR / ( ( MUM + RRSe ) - ( RMSe * CS ) ) ) ,MUM ) ) ) ) / ( DS * RCSe ) )", "obj1": 0.08464566929133858, "obj2": 0.8666115664216494}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( MUM * ( MUM * Min( ( DS / RRSe ) ,MUM ) ) ) + RRSe ) ) - Min( ( ( ( RMSe - ( Min( Min( MLU ,RMSe ) ,( MLU - DS ) ) / ( MUC - MUR ) ) ) - CS ) + ( ( MLU * DS ) / MUR ) ) ,RRSe ) )", "obj1": 0.9744094488188977, "obj2": 0.010660985004373416}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "Min( ( ( ARS / BR ) * ( FirstVNF_RAM_Server / AMS ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.21893484639776692}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.41929133858267714, "obj2": 0.4375958682468477}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( RRS ,( Const * RRS ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RCSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.4251968503937008, "obj2": 0.4245538134694243}, {"determining": "( Max( Max( ( ( ( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem ) ) * ( MDR - ACS ) ) - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( ( ARS * Const ) / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),DS ) ) + RRSe ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7364808960149593}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.8956692913385826, "obj2": 0.087309933001612}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( MDR / Const ) ,AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * Min( MLU ,( MUC + ( MUM - DS ) ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5803434138586915}, {"determining": "Max( ( ( ( FirstVNF_CPU / PN ) + PN ) + BR ),( PN + ( CRS + ( DDR * PN ) ) ) )", "choosing": "( ( MUC / Max( DS,Min( Max( RRSe,MLU ) ,RCSe ) ) ) * ( DS + CS ) )", "obj1": 0.1279527559055118, "obj2": 0.7743589830627}, {"determining": "( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / ( ( ACS / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ARS ) )", "choosing": "( ( ( DS + ( ( ( MUR - ( Min( DS ,MLU ) - ( MLU - MLU ) ) ) / ( RRSe * ( RCSe - MUM ) ) ) - Min( MUR ,DS ) ) ) + MUM ) - ( MUM + MUC ) )", "obj1": 0.12401574803149606, "obj2": 0.7975399143435633}, {"determining": "Min( ( ACS / Max( Max( CRS,RRS ),FirstVNF_CPU_Server ) ) ,Min( MRS ,( DDR + ARS ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),( ( CS * ( ( MUM + RMSe ) / MUC ) ) + RMSe ) ) / ( RCSe * ( RRSe / MUR ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6384561121939104}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUC * RCSe ) * ( DS - CS ) )", "obj1": 0.9350393700787402, "obj2": 0.026353883349676}, {"determining": "( ( PN * ( ( BR + FirstVNF_Mem ) + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / Min( ( Min( MLU ,RMSe ) + CS ) ,MUR ) ) / ( RCSe * ( ( ( ( DS / ( ( MLU + MLU ) / MLU ) ) / RRSe ) + MLU ) + ( RRSe * ( ( MLU - ( RCSe - ( MLU * MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.9901574803149606, "obj2": 0.0047742360843449514}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ( Min( MRS ,MRS ) + FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUR + ( MUC / ( DS / CS ) ) ),Min( CS ,DS ) ) - Max( RCSe,RMSe ) )", "obj1": 0.25393700787401574, "obj2": 0.5978971493192292}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR + Min( RMSe ,RMSe ) ) / ( RCSe + MUR ) )", "obj1": 0.9291338582677166, "obj2": 0.03159532529023302}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8099791749806996}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7521825955610446}, {"determining": "( Min( RRS ,BR ) * Min( ( ( FirstVNF_Mem_Server * MRS ) * Const ) ,RRS ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.13976377952755906, "obj2": 0.7666408921925145}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.26352145923333004}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16535433070866143, "obj2": 0.7050804648110863}, {"determining": "Max( ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) )", "choosing": "Max( ( ( MUR * MUR ) / ( CS + MUR ) ),( RCSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * RCSe ) * ( ( ( CS + MUC ) + ( MLU / CS ) ) - DS ) ) / RCSe ) / ( CS - RCSe ) )", "obj1": 0.4468503937007874, "obj2": 0.42221230822805883}, {"determining": "Max( Min( ( PN / CRS ) ,BR ),( PN + ACS ) )", "choosing": "( ( MLU * Max( RMSe,DS ) ) / Max( Max( Max( ( MUR * Max( Min( RCSe ,RMSe ),RMSe ) ),Min( RCSe ,Max( ( Min( MUM ,DS ) - MUR ),( RCSe * Max( MUM,RRSe ) ) ) ) ),RCSe ),CS ) )", "obj1": 0.09055118110236221, "obj2": 0.8506090440617529}, {"determining": "Max( ( FirstVNF_CPU + Min( Const ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / ( ( ( DS / DS ) * ( ( MUR * MLU ) * MUM ) ) * MUR ) ),( RCSe / DS ) )", "obj1": 0.1062992125984252, "obj2": 0.822100240393878}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03810955511461453}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( ( MLU + ( MLU - MUC ) ) * Max( MUC,( MLU - MUR ) ) ) ) * RMSe ) ) )", "obj1": 0.9645669291338582, "obj2": 0.01656413566118408}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7714426258413063}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / ( CRS / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),( MLU / MUC ) ) ) ) )", "obj1": 0.9507874015748031, "obj2": 0.019413315080062717}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUM + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.3405511811023622, "obj2": 0.5337212826239515}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) )", "choosing": "Max( ( ( MUC / DS ) / DS ),( RCSe / DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8448832248789484}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - DDR ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Min( RMSe ,RRSe ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6268992408684362}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( ( Max( Min( CS ,( MLU / DS ) ),Max( CS,Min( RMSe ,MUC ) ) ) + RRSe ) ,DS ) ),( CS - Min( RCSe ,( RRSe / RCSe ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6217956210194872}, {"determining": "( Min( ( ( RRS * FirstVNF_RAM ) + ( PN / ( Min( ( ACS + ( Const / FirstVNF_RAM_Server ) ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - ( CS + Max( Max( ( MLU + DS ),RCSe ),DS ) ) ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6861473212139442}, {"determining": "( ( PN * ( ARS + ( FirstVNF_CPU + DDR ) ) ) + ( MRS - ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( ( MLU + ( MLU - MUC ) ) * Max( ( MLU - DS ),MUC ) ) ) * RMSe ) ) )", "obj1": 0.7952755905511811, "obj2": 0.11223986303079143}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,DS ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6268992408684362}, {"determining": "Min( Max( ( MRS + BR ),Max( BR,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM,( DDR / MRS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( ( RCSe / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.745208215476188}, {"determining": "Min( ( FirstVNF_Mem_Server + FirstVNF_Mem ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS - RCSe ) + Max( ( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( Min( MUC ,MLU ) - Min( MLU ,MUM ) ) ),MUC ) )", "obj1": 0.8720472440944882, "obj2": 0.10717983450042437}, {"determining": "( ( MRS + FirstVNF_RAM ) + FirstVNF_RAM_Server )", "choosing": "( ( ( DS * RRSe ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - DS ) ) )", "obj1": 0.265748031496063, "obj2": 0.5911813714026184}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.1220472440944882, "obj2": 0.7980868468444304}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8099791749806996}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) / ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.1220472440944882, "obj2": 0.7980868468444304}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - MUC ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6983375110935276}, {"determining": "( ( ( FirstVNF_Mem + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7433023856839474}, {"determining": "( Max( ( ( AMS * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Max( ( ( Min( DS ,MUC ) / DS ) / MLU ),( ( MUM - Max( ( ( MUM + ( ( CS * MLU ) - RCSe ) ) - ( ( ( RMSe / RMSe ) + RMSe ) - MLU ) ),DS ) ) / DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8505130046630691}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( ( MLU + ( MLU - MUC ) ) * Max( MUC,( MLU - MUR ) ) ) ) * RMSe ) ) )", "obj1": 0.7952755905511811, "obj2": 0.11223986303079143}, {"determining": "( Min( ( ACS + ( PN / ( Min( ( ( FirstVNF_CPU + AMS ) + FirstVNF_CPU ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6855327015363492}, {"determining": "( ( MRS + FirstVNF_RAM ) + FirstVNF_RAM_Server )", "choosing": "( ( ( DS * RRSe ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - DS ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5945411816272296}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) * Max( Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ),DS ) )", "obj1": 0.10433070866141732, "obj2": 0.8272172613199391}, {"determining": "( Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( ( ARS / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + Max( ( MRS * ( ( MDR / Const ) / AMS ) ),( FirstVNF_RAM * ( ( FirstVNF_Mem / DDR ) / RRS ) ) ) )", "choosing": "( ( ( ( RCSe / ( RMSe + DS ) ) / Max( RCSe,RCSe ) ) / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( Min( MUM ,RCSe ) - RRSe ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5435569827034199}, {"determining": "Min( ( ( ARS / BR ) * ( FirstVNF_RAM_Server / AMS ) ) ,Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) )", "choosing": "( RCSe / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6254966943035299}, {"determining": "( Min( ( ACS + ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) / ( Min( ( ACS + ( Const / PN ) ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( MUR - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6983375110935276}, {"determining": "( ( PN * ( ARS + Max( BR,Const ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( ( MLU + ( MLU - MUC ) ) * Max( MUC,( MLU - MUR ) ) ) ) * RMSe ) ) )", "obj1": 0.9645669291338582, "obj2": 0.01656413566118408}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) )", "choosing": "( ( CS - Min( MUM ,Max( DS,( Min( RRSe ,DS ) + MUR ) ) ) ) * ( DS - CS ) )", "obj1": 0.9015748031496063, "obj2": 0.08078030023908248}, {"determining": "( Min( ( ACS + ( PN / ( Min( ( ACS + FirstVNF_CPU ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6923998990119447}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * FirstVNF_RAM_Server ) ,RRS ) ) ) + ( MRS - ( FirstVNF_RAM_Server * DDR ) ) )", "choosing": "( MUR / ( Max( ( ( RMSe + MUC ) - CS ),MUR ) * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Min( CS ,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "Min( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),Min( FirstVNF_CPU ,BR ) ) ,( MDR / ( ( AMS + Const ) * RRS ) ) )", "choosing": "( ( RCSe / MUR ) - ( Min( Max( ( MUR * ( MLU + Min( MLU ,Max( DS,MUM ) ) ) ),DS ) ,( Min( RRSe ,RMSe ) * Min( RRSe ,CS ) ) ) * RCSe ) )", "obj1": 0.5019685039370079, "obj2": 0.2907057990124553}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server + AMS ) * ( MDR * RRS ) ) + FirstVNF_Mem ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,( Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) * PN ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + ( Min( RRSe ,RRSe ) + MUR ) ) ) ) - RMSe )", "obj1": 0.19881889763779528, "obj2": 0.6421505396845887}, {"determining": "( Min( ( ACS + ( PN / ( Min( ( ACS + FirstVNF_CPU ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6923998990119447}, {"determining": "( Max( Max( ( ( ( FirstVNF_RAM_Server - ( BR + Min( AMS ,MDR ) ) ) * ( MDR - ACS ) ) - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( FirstVNF_RAM,( DDR / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( ( RCSe / ( ( Max( DS,RRSe ) + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7412094059836555}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( ( MUR - MUM ) - Min( MUR ,CS ) ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.3405511811023622, "obj2": 0.5337212826239515}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( ( Min( RRS ,AMS ) * ( FirstVNF_RAM / PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5382206275760922}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / DS ) * Max( Max( ( DS / RMSe ),( CS + RCSe ) ),DS ) )", "obj1": 0.9133858267716536, "obj2": 0.04101644126980142}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) + FirstVNF_RAM_Server )", "choosing": "( ( RRSe + ( DS / CS ) ) - Max( ( ( Min( RRSe ,DS ) - Min( DS ,( RRSe / ( MLU / ( MLU - MLU ) ) ) ) ) * ( CS + RRSe ) ),( CS - DS ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5859151509150906}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5435569827034199}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5382206275760922}, {"determining": "( ( MRS - Min( CRS ,( FirstVNF_CPU_Server + ( BR * DDR ) ) ) ) - ( ( Const + RRS ) + ( MRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( MLU * ( Max( DS,DS ) * ( MUC - MUC ) ) ) - ( ( ( ( RRSe + Min( ( RCSe - MLU ) ,MLU ) ) * ( MUM / MUR ) ) * MUC ) * ( CS * CS ) ) ) ,( ( ( MUR + DS ) * ( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) )", "obj1": 0.8996062992125984, "obj2": 0.08507013037844298}], "7": [{"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + RRS ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - ( RCSe / DS ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * BR ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RRSe + Max( MUC,MUM ) ),CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * RRS ) ) / Min( ( ( BR + Min( ( ( Min( FirstVNF_RAM ,RRS ) + ARS ) + Const ) ,Max( ( BR / FirstVNF_Mem_Server ),ARS ) ) ) * ( ACS * ( FirstVNF_CPU_Server / AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "( ( CS - ( Max( ( RRSe * ( RMSe + CS ) ),Min( MUC ,MUC ) ) / RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "Min( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ),Max( FirstVNF_Mem,BR ) ) ,Max( ARS,( DDR / MRS ) ) )", "choosing": "( ( RRSe / RCSe ) / ( RCSe - Max( ( MUR * CS ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6043307086614174, "obj2": 0.2790198021765497}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( ( MUR - Min( MUR ,CS ) ) * MUR )", "obj1": 0.8070866141732284, "obj2": 0.09571841053244393}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * CRS ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.38228274695069214}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( ( Const * RRS ) ,RRS ) ),( MDR + RRS ) ) ,( ( BR * AMS ) / ( ( ( MRS * FirstVNF_RAM ) + Min( ( AMS * ( ARS * ( ACS + RRS ) ) ) ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + RCSe ),( ( DS - MLU ) / DS ) )", "obj1": 0.4448818897637795, "obj2": 0.39392501856044154}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - RMSe )", "obj1": 0.49606299212598426, "obj2": 0.2943978657348431}, {"determining": "( Min( ( ( PN - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) + ( AMS / PN ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( MUR ,Max( ( Max( MUR,MUC ) / RCSe ),RMSe ) ) / DS ),( DS / RCSe ) )", "obj1": 0.6653543307086615, "obj2": 0.22722192887230167}, {"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) )", "choosing": "( ( ( ( ( Min( MUC ,RMSe ) + MUM ) - MUM ) - ( MUR * CS ) ) * ( MUM * Min( MLU ,( MUC + ( MUM - MUM ) ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.5039370078740157, "obj2": 0.29005410919432173}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) * PN ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe * ( Max( RMSe,MUM ) - ( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - RMSe ) ) ) ,RRSe )", "obj1": 0.718503937007874, "obj2": 0.22005268682096582}, {"determining": "Min( Max( ( DDR / Max( ( FirstVNF_RAM - MDR ),AMS ) ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - CRS ) ) )", "choosing": "( ( ( ( ( Min( ( ( DS + MUR ) / MLU ) ,( Min( RMSe ,MUR ) - ( CS / RMSe ) ) ) + MUM ) + CS ) - Max( RMSe,MUR ) ) + MUC ) * ( ( RMSe * MUM ) * DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5085315034742484}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( ( ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM / PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + ( ( ( RMSe * RCSe ) * ( ( ( CS + MUC ) + ( MLU / CS ) ) - DS ) ) / RCSe ) ) )", "obj1": 0.6496062992125984, "obj2": 0.276195806178696}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( FirstVNF_CPU_Server + ( FirstVNF_CPU * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) ) + ( Max( ACS,RRS ) / ( RRS + MDR ) ) ) )", "choosing": "( ( MUR + Min( ( DS - Max( Max( Min( RCSe ,MLU ),MUM ),RCSe ) ) ,RMSe ) ) / ( MUR + MUR ) )", "obj1": 0.36220472440944884, "obj2": 0.4890613407873901}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.13369799457321033}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,Min( Min( FirstVNF_CPU_Server ,Const ) ,FirstVNF_CPU ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,AMS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( RMSe + ( MUC * Max( MUR,MUM ) ) ) / ( MUR + Min( MUR ,RMSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4616248444155497}, {"determining": "( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) )", "choosing": "( MUR / ( ( RCSe * DS ) * ( CS + Max( ( Max( ( MUR * MLU ),DS ) * ( RMSe * ( RRSe * ( RRSe - MUC ) ) ) ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.11755805358120779}, {"determining": "Min( Max( ( FirstVNF_Mem / DDR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUC * RCSe ) * ( ( Min( Min( MUR ,Min( MUM ,Max( Max( CS,MUC ),( MLU + MLU ) ) ) ) ,Max( ( MUM - ( DS * ( DS / MUM ) ) ),( ( DS * MLU ) / MUM ) ) ) / CS ) - CS ) )", "obj1": 0.7283464566929134, "obj2": 0.17691443001095167}, {"determining": "Max( ( ( ( FirstVNF_CPU / PN ) + PN ) + BR ),( PN + ( CRS + ( DDR * PN ) ) ) )", "choosing": "( ( MUC / Max( DS,Min( Max( RRSe,MLU ) ,RCSe ) ) ) * ( DS + CS ) )", "obj1": 0.1279527559055118, "obj2": 0.7743589830627}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7903015596915992}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.7854330708661418, "obj2": 0.10821488953605932}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * CRS ) ) ) + ( Max( Min( ( ACS + ( Const / PN ) ) ,( FirstVNF_CPU - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ),RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( RCSe + Min( ( MUR + MUC ) ,RMSe ) ) / ( RCSe + Min( ( ( DS + RCSe ) / CS ) ,MUR ) ) )", "obj1": 0.37598425196850394, "obj2": 0.48447342713815833}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ,PN ) / ( Max( ACS,( FirstVNF_Mem + Const ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - RCSe ) / ( ( ( ( MLU + MUR ) - CS ) + Min( ( MLU - MUC ) ,MUR ) ) * ( ( RCSe + RRSe ) / ( DS * RCSe ) ) ) ) * CS ) ,Min( CS ,Max( ( ( RCSe + Min( DS ,MUM ) ) - ( RCSe * MUM ) ),RMSe ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6805040869494942}, {"determining": "( Min( Min( ( Const * Const ) ,( CRS * MRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( FirstVNF_RAM_Server - ( BR / ( MRS / DDR ) ) ) ) )", "choosing": "( ( Min( ( RRSe + ( ( MUM / Min( ( MUC / DS ) ,CS ) ) + Max( RRSe,( DS / ( CS / MLU ) ) ) ) ) ,DS ) / RRSe ) - Min( MUR ,CS ) )", "obj1": 0.2874015748031496, "obj2": 0.5619042472788731}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7481116540785893}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( DS,DS ) ) + RCSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.7362204724409449, "obj2": 0.14161143091648393}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * CRS ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.38976377952755903, "obj2": 0.46586556758935727}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( ( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) ) + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * RCSe ) * ( ( ( CS + MUC ) + ( MLU / CS ) ) - DS ) ) / RCSe ) / ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) - RCSe ) )", "obj1": 0.7303149606299213, "obj2": 0.17589425232014153}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.6594488188976378, "obj2": 0.26168214340211954}, {"determining": "( Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( ( ARS / FirstVNF_CPU_Server ),FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + Max( ( MRS * ( ( MDR / Const ) / AMS ) ),( FirstVNF_RAM * ( ( FirstVNF_Mem / DDR ) / RRS ) ) ) )", "choosing": "( ( ( ( RCSe / ( RMSe + DS ) ) / Max( RCSe,RCSe ) ) / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( Min( MUM ,RCSe ) - RRSe ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5435569827034199}, {"determining": "( Max( Max( ( ( ( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem ) ) * ( MDR - ACS ) ) - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( ( ARS * Const ) / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),DS ) ) + RRSe ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7364808960149593}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( RRS ,( Const * RRS ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RCSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.4251968503937008, "obj2": 0.4245538134694243}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,BR ),( BR + FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,CRS ) / FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( ( MUC / Min( DS ,DS ) ) * ( ( MUM - Min( RCSe ,MUC ) ) - MUM ) ),MLU ) / DS ),( ( ( Max( ( Min( ( CS + MUC ) ,RMSe ) - ( Max( RCSe,MUR ) / ( RMSe / RRSe ) ) ),( CS - RRSe ) ) - ( CS / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.41929133858267714, "obj2": 0.4375958682468477}, {"determining": "( ( MRS - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Max( DS,MUC ),Min( MUM ,MUR ) ),( Min( RMSe ,( ( ( MUM - Min( MUC ,MUM ) ) + RMSe ) * MUR ) ) + Min( MUM ,Max( MLU,MUC ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6044904133990888}, {"determining": "( Min( RRS ,BR ) * Min( ( ( FirstVNF_Mem_Server * MRS ) * Const ) ,RRS ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.2795275590551181, "obj2": 0.5788007702712284}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( Max( ( Max( FirstVNF_Mem,ARS ) / Const ),BR ),RRS ) )", "choosing": "( ( MUR / ( Min( DS ,( DS - RCSe ) ) + MUR ) ) / ( MUC + Min( RMSe ,( Min( Min( ( RMSe + RRSe ) ,( ( MUR - MUM ) - Min( MUR ,CS ) ) ) ,( RRSe - RCSe ) ) + RCSe ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5494037444068887}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RCSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.4251968503937008, "obj2": 0.4245538134694243}, {"determining": "( Min( ( ( Const * Const ) - ( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_Mem_Server / ( Max( BR,CRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,( RCSe + DS ) ) ) * MUR )", "obj1": 0.2992125984251969, "obj2": 0.5525188481318493}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.41929133858267714, "obj2": 0.4375958682468477}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / ( ACS + BR ) ) ) )", "choosing": "Max( ( DS / DS ),( DS / ( Max( MLU,Max( Max( Max( RCSe,MUC ),MUR ),( MUM - MUC ) ) ) - ( RRSe - RRSe ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,( MUR + Min( MUR ,RMSe ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8096726189267578}, {"determining": "Max( Min( ( PN / CRS ) ,BR ),( PN + ACS ) )", "choosing": "( ( MLU * Max( RMSe,DS ) ) / Max( Max( Max( ( MUR * Max( Min( RCSe ,RMSe ),RMSe ) ),Min( RCSe ,Max( ( Min( MUM ,DS ) - MUR ),( RCSe * Max( MUM,RRSe ) ) ) ) ),RCSe ),CS ) )", "obj1": 0.09055118110236221, "obj2": 0.8506090440617529}, {"determining": "Min( Min( FirstVNF_RAM_Server ,ACS ) ,( ( ACS - ( FirstVNF_Mem / ARS ) ) / ( MDR / Max( AMS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Max( ( Min( DS ,CS ) / ( ( ( MUM + ( CS + RCSe ) ) - RCSe ) - CS ) ),CS ) ) * MUR )", "obj1": 0.9251968503937008, "obj2": 0.02998982432633196}, {"determining": "Min( ( ( ARS / BR ) * ( FirstVNF_RAM_Server / AMS ) ) ,Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,( ( FirstVNF_Mem_Server * MRS ) * Const ) ) + ( AMS - ACS ) ) ) ) )", "choosing": "( RCSe / ( RCSe * ( CS + MUR ) ) )", "obj1": 0.234251968503937, "obj2": 0.6113156002244213}, {"determining": "Max( ( ( ( FirstVNF_CPU / Min( Max( FirstVNF_RAM_Server,( ( MDR - FirstVNF_Mem_Server ) / CRS ) ) ,FirstVNF_CPU ) ) + ( ACS * DDR ) ) + BR ),( PN + ACS ) )", "choosing": "( ( RMSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8401001291231669}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUC * RCSe ) * ( DS - CS ) )", "obj1": 0.9350393700787402, "obj2": 0.026353883349676}, {"determining": "( ( Min( ( MRS + ARS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) + ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),DS ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.26352145923333004}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16535433070866143, "obj2": 0.7050804648110863}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03810955511461453}, {"determining": "Max( ( FirstVNF_CPU + Min( Const ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / ( ( ( DS / DS ) * ( ( MUR * MLU ) * MUM ) ) * MUR ) ),( RCSe / DS ) )", "obj1": 0.1062992125984252, "obj2": 0.822100240393878}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ,PN ) / ( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + MUR ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * ( ( RRSe - ( MUM / MUC ) ) + ( MUM + MUC ) ) ) ,Min( CS ,MUR ) )", "obj1": 0.7401574803149606, "obj2": 0.13922781324998731}, {"determining": "Max( ( FirstVNF_CPU_Server + ( ACS * FirstVNF_RAM ) ),( ( ( FirstVNF_CPU / Min( Max( FirstVNF_RAM_Server,( ( CRS - FirstVNF_Mem_Server ) / CRS ) ) ,FirstVNF_CPU ) ) + ( ACS * DDR ) ) + BR ) )", "choosing": "( ( ( MUM * ( ( Min( RRSe ,MUC ) - CS ) * Min( Min( MUR ,( ( MUM + RRSe ) - ( RRSe * MUC ) ) ) ,MUM ) ) ) + ( ( RRSe / ( MUR * Min( RRSe ,DS ) ) ) * CS ) ) / ( RCSe * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8666115664216494}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( ( PN * ( ARS + Max( BR,Const ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( RMSe + RRSe ) )", "obj1": 0.9822834645669292, "obj2": 0.008084727203316546}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - DDR ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RRSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Min( RMSe ,RRSe ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6268992408684362}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "Max( ( ( ( FirstVNF_CPU / ( ( DDR / Min( ( MRS - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / Max( ( AMS - ( BR / FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) ) + ( MDR * DDR ) ) + BR ),( PN + ( FirstVNF_RAM * ( Max( MRS,MDR ) * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( CS * RRSe ) + Max( ( RCSe + RMSe ),( ( Min( RRSe ,MUC ) - CS ) + Min( ( MUR / ( ( MUM + RRSe ) - ( RMSe * CS ) ) ) ,MUM ) ) ) ) / ( DS * RCSe ) )", "obj1": 0.08464566929133858, "obj2": 0.8666115664216494}, {"determining": "Min( ( ACS / Max( Max( CRS,RRS ),FirstVNF_CPU_Server ) ) ,Min( MRS ,( DDR + ARS ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),( ( CS * ( ( MUM + RMSe ) / MUC ) ) + RMSe ) ) / ( RCSe * ( RRSe / MUR ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6384561121939104}, {"determining": "( Min( RRS ,BR ) * ( ARS * Const ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) / ( RCSe * ( CS + Max( ( Max( RCSe,DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6384561121939104}, {"determining": "( Min( ( ( PN - DDR ) + Min( FirstVNF_CPU ,BR ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,Max( ( MUR * ( MLU + Min( MLU ,Max( DS,MUM ) ) ) ),DS ) ) ) * MUR )", "obj1": 0.9448818897637795, "obj2": 0.02382966910659409}, {"determining": "( ( PN * ( ( BR + FirstVNF_Mem ) + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe / Min( ( Min( MLU ,RMSe ) + CS ) ,MUR ) ) / ( RCSe * ( ( ( ( DS / ( ( MLU + MLU ) / MLU ) ) / RRSe ) + MLU ) + ( RRSe * ( ( MLU - ( RCSe - ( MLU * MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.9901574803149606, "obj2": 0.0047742360843449514}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) * PN ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe * ( Max( RMSe,MUM ) - ( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - RMSe ) ) ) ,RRSe )", "obj1": 0.718503937007874, "obj2": 0.22005268682096582}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( MDR / Const ) ,AMS ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * Min( MLU ,( MUC + ( MUM - DS ) ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.27165354330708663, "obj2": 0.5803434138586915}, {"determining": "( Max( ( ( AMS * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Max( ( ( Min( DS ,MUC ) / DS ) / MLU ),( ( MUM - Max( ( ( MUM + ( ( CS * MLU ) - RCSe ) ) - ( ( ( RMSe / RMSe ) + RMSe ) - MLU ) ),DS ) ) / DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8505130046630691}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.9547244094488189, "obj2": 0.01815054160335908}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( MUM * ( MUM * Min( ( DS / RRSe ) ,MUM ) ) ) + RRSe ) ) - Min( ( ( ( RMSe - ( Min( Min( MLU ,RMSe ) ,( MLU - DS ) ) / ( MUC - MUR ) ) ) - CS ) + ( ( MLU * DS ) / MUR ) ) ,RRSe ) )", "obj1": 0.9744094488188977, "obj2": 0.010660985004373416}, {"determining": "( ( Min( Max( FirstVNF_RAM_Server,ARS ) ,Min( RRS ,FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) + FirstVNF_RAM_Server )", "choosing": "( ( RRSe + ( DS / CS ) ) - Max( ( ( Min( RRSe ,DS ) - Min( DS ,( RRSe / ( MLU / ( MLU - MLU ) ) ) ) ) * ( CS + RRSe ) ),( CS - DS ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5859151509150906}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,DS ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6268992408684362}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( MRS - ( ( FirstVNF_CPU_Server - PN ) * ( ( ( Min( RRS ,ACS ) + FirstVNF_CPU ) + DDR ) * RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( RCSe + ( ( Min( Max( ( RMSe + ( DS / MUR ) ),( ( MUR - MUM ) - Min( MUR ,CS ) ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5464434489020038}, {"determining": "Min( ( ( ARS / BR ) * ( FirstVNF_RAM_Server / AMS ) ) ,( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8797147396188935}, {"determining": "Min( Max( ( MRS + BR ),Max( BR,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM,( DDR / MRS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( ( RCSe / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.745208215476188}, {"determining": "Max( ( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) - FirstVNF_CPU_Server ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) / ( CS + MUR ) ),( RCSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( PN,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( FirstVNF_RAM / ARS ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * Min( MUC ,Min( Min( Min( MUC ,RCSe ) ,( Max( RRSe,MUC ) * CS ) ) ,Max( MLU,Min( MUC ,MLU ) ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5525188481318493}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8099791749806996}, {"determining": "( ( ( FirstVNF_CPU_Server / ( MDR + ( ( ACS - ( ( FirstVNF_RAM * MRS ) * Const ) ) / ( Const + BR ) ) ) ) + ARS ) * Max( ACS,ARS ) )", "choosing": "( ( MUR / ( Min( MUR ,CS ) * Max( RCSe,CS ) ) ) / ( MUC + ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) + ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,( MLU - DS ) ) / RCSe ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5929181391514811}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - MUC ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6983375110935276}, {"determining": "( Max( Max( ( ( ( FirstVNF_RAM_Server - ( BR + Min( AMS ,MDR ) ) ) * ( FirstVNF_CPU - ACS ) ) - DDR ),( PN * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( FirstVNF_RAM,( DDR / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( CS + MUR ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7418036428073103}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / DS ) * Max( Max( ( DS / RMSe ),( CS + RCSe ) ),DS ) )", "obj1": 0.9133858267716536, "obj2": 0.04101644126980142}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * Min( MLU ,( MUC + ( MUM - DS ) ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.5039370078740157, "obj2": 0.29005410919432173}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( ( Max( Min( CS ,( MLU / DS ) ),Max( CS,Min( RMSe ,MUC ) ) ) + RRSe ) ,DS ) ),( CS - Min( RCSe ,( RRSe / RCSe ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6217956210194872}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) * Max( Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ),DS ) )", "obj1": 0.10433070866141732, "obj2": 0.8272172613199391}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Min( MUR ,RRSe ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6218020264333071}, {"determining": "( Min( ( ACS + ( PN / ( Min( ARS ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( RCSe / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6983375110935276}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( ( MLU + ( MLU - MUC ) ) * Max( MUC,( MLU - MUR ) ) ) ) * RMSe ) ) )", "obj1": 0.9645669291338582, "obj2": 0.01656413566118408}, {"determining": "( ( MRS + FirstVNF_RAM ) + FirstVNF_RAM_Server )", "choosing": "( ( ( DS * RRSe ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - DS ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5882422918220436}, {"determining": "( Min( ( ACS + ( PN / ( Min( ( ACS + FirstVNF_CPU ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6923998990119447}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6923998990119447}, {"determining": "( ( PN * ( ( BR + FirstVNF_Mem ) + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / DS ),( RCSe / DS ) )", "obj1": 0.9881889763779528, "obj2": 0.005456647105939029}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - DS ) ) )", "obj1": 0.9704724409448819, "obj2": 0.012322973624444393}, {"determining": "Min( Max( ( MRS + BR ),Max( BR,FirstVNF_Mem ) ) ,Max( FirstVNF_RAM,( DDR / MRS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( ( RCSe / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.745208215476188}, {"determining": "( Min( ( ACS + ( PN / ( Min( ( ACS + ( Const / PN ) ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - CS ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6861473212139442}, {"determining": "( ( PN * ( ARS + Max( BR,Const ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.9665354330708661, "obj2": 0.013736485012715792}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server + AMS ) * ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) + FirstVNF_Mem ) / FirstVNF_RAM_Server ) + FirstVNF_CPU_Server ) * Max( FirstVNF_RAM_Server,( Max( DDR,( FirstVNF_CPU_Server - ( Max( DDR,CRS ) + ( AMS - ACS ) ) ) ) * PN ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) + MUR ) ) ) ) - RMSe )", "obj1": 0.49803149606299213, "obj2": 0.2935714711667018}, {"determining": "( Min( ( ACS + ( PN / ( Min( ( ( FirstVNF_CPU + AMS ) + FirstVNF_CPU ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6855327015363492}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5435569827034199}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.2618110236220472, "obj2": 0.5904988869222253}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / ( CRS / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),( MLU / MUC ) ) ) ) )", "obj1": 0.9507874015748031, "obj2": 0.019413315080062717}], "8": [{"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * RRS ) ) / Min( ( ( BR + Min( ( ( Min( FirstVNF_RAM ,RRS ) + ARS ) + Const ) ,Max( ( BR / FirstVNF_Mem_Server ),ARS ) ) ) * ( ACS * ( FirstVNF_CPU_Server / AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "( ( CS - ( Max( ( RRSe * ( RMSe + CS ) ),Min( MUC ,MUC ) ) / RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ( Min( ( AMS * ( ARS * ( ARS * RRS ) ) ) ,FirstVNF_CPU_Server ) + ( MRS * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * RRSe ) - ( RRSe + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + RRS ) - ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - ( RCSe / DS ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,( Const / Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( ( FirstVNF_RAM_Server / DDR ) + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( MUC,DS ) / Max( ( RRSe * Max( RRSe,MUC ) ),MUR ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ),Max( FirstVNF_Mem,BR ) ) ,Max( ARS,( DDR / MRS ) ) )", "choosing": "( ( RRSe / RCSe ) / ( RCSe - Max( ( MUR * CS ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6043307086614174, "obj2": 0.2790198021765497}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( Max( RCSe,RMSe ) - Max( Min( ( RCSe / MUM ) ,MUR ),CS ) ) )", "obj1": 0.44881889763779526, "obj2": 0.3911098239800534}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6968503937007874, "obj2": 0.18857468724554982}, {"determining": "( Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "Min( ( ( DS - Max( MUM,( MLU - RRSe ) ) ) / ( MUR + Max( Max( RCSe,RRSe ),( RCSe - DS ) ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.84251968503937, "obj2": 0.06923323720772609}, {"determining": "( Min( ( Const - ACS ) ,( ( Min( DDR ,FirstVNF_CPU ) + ACS ) / FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU_Server - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MUR ),( ( Min( ( RRSe / MUR ) ,Min( RMSe ,RMSe ) ) + RCSe ) / DS ) )", "obj1": 0.6771653543307087, "obj2": 0.22362561917303933}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2897820208698689}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "( Min( Min( ( Const * Const ) ,( Max( BR,FirstVNF_Mem ) * CRS ) ) ,( ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2959550888331984}, {"determining": "( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) / ( ( ( ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM / PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + RRSe ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + ( ( ( RMSe * RCSe ) * ( ( ( CS + MUC ) + ( MLU / CS ) ) - DS ) ) / RCSe ) ) )", "obj1": 0.6496062992125984, "obj2": 0.276195806178696}, {"determining": "Min( Max( ( DDR / Max( ( FirstVNF_RAM - MDR ),AMS ) ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - CRS ) ) )", "choosing": "( ( ( ( ( Min( ( ( DS + MUR ) / MLU ) ,( Min( RMSe ,MUR ) - ( CS / RMSe ) ) ) + MUM ) + CS ) - Max( RMSe,MUR ) ) + MUC ) * ( ( RMSe * MUM ) * DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5085315034742484}, {"determining": "( Min( ( ( PN - ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) + ( AMS / PN ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( MUR ,Max( ( Max( MUR,MUC ) / RCSe ),RMSe ) ) / DS ),( DS / RCSe ) )", "obj1": 0.6653543307086615, "obj2": 0.22722192887230167}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7350309263654948}, {"determining": "( Min( ( ( Const - Max( PN,Const ) ) + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( ( ( RCSe / MUC ) - RCSe ) / Min( MUM ,Min( MUR ,( MUR - ( Min( MUM ,MLU ) + Min( DS ,CS ) ) ) ) ) ) ) - Min( MUR ,CS ) )", "obj1": 0.7854330708661418, "obj2": 0.10702075944852532}, {"determining": "Max( ( ( ( FirstVNF_CPU / PN ) + PN ) + BR ),( PN + ( CRS + ( DDR * PN ) ) ) )", "choosing": "( ( MUC / Max( DS,Min( Max( RRSe,MLU ) ,RCSe ) ) ) * ( DS + CS ) )", "obj1": 0.1279527559055118, "obj2": 0.7743589830627}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.6594488188976378, "obj2": 0.26168214340211954}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7481116540785893}, {"determining": "Min( Max( Max( BR,FirstVNF_Mem ),Min( Const ,FirstVNF_Mem_Server ) ) ,( ( AMS / ( MRS - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( CS / ( MUM + ( ( ( RCSe - ( RMSe - RMSe ) ) + ( MUM / MUM ) ) * MUC ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5058251290522882}, {"determining": "( Min( ( ( FirstVNF_Mem * PN ) + ( PN / Const ) ) ,PN ) / ( MRS * Const ) )", "choosing": "( ( MUR - Min( MUR ,( DS * Min( RMSe ,( RRSe + RRSe ) ) ) ) ) * MUR )", "obj1": 0.7106299212598425, "obj2": 0.17924251354596768}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / ( CRS / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RMSe ),DS ) * MUC ),( MLU / MUC ) ) ) ) )", "obj1": 0.8051181102362205, "obj2": 0.0945287699259874}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * MUR )", "obj1": 0.33267716535433073, "obj2": 0.5402735930425504}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ,PN ) / ( Max( ACS,( FirstVNF_Mem + Const ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - RCSe ) / ( ( ( ( MLU + MUR ) - CS ) + Min( ( MLU - MUC ) ,MUR ) ) * ( ( RCSe + RRSe ) / ( DS * RCSe ) ) ) ) * CS ) ,Min( CS ,Max( ( ( RCSe + Min( DS ,MUM ) ) - ( RCSe * MUM ) ),RMSe ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6805040869494942}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.5334645669291339, "obj2": 0.2897820208698689}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.12241272342789186}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.13369799457321033}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,Max( ACS,MRS ) ) ) ) ) + ( FirstVNF_CPU_Server - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( DS,RCSe ) * MUC ),Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( ( RMSe - DS ),DS ) ) + RMSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.7362204724409449, "obj2": 0.14161143091648393}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( ( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) ) + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe * RCSe ) * ( ( ( CS + MUC ) + ( MLU / CS ) ) - DS ) ) / RCSe ) / ( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) - RCSe ) )", "obj1": 0.7303149606299213, "obj2": 0.17589425232014153}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( FirstVNF_CPU_Server + ( FirstVNF_CPU * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) ) + ( Max( ACS,RRS ) / ( RRS + MDR ) ) ) )", "choosing": "( ( MUR + Min( ( DS - Max( Max( Min( RCSe ,MLU ),MUM ),RCSe ) ) ,RMSe ) ) / ( MUR + MUR ) )", "obj1": 0.36220472440944884, "obj2": 0.4890613407873901}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( RRS ,( Const * RRS ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RCSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.4251968503937008, "obj2": 0.4245538134694243}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( RRS ,( Const * RRS ) ) ),( MDR + RRS ) ) ,( ( ( RRS + CRS ) / DDR ) / ( ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( Max( RCSe,DS ) - Max( Min( ( ( CS - Min( MLU ,( MUM + MUM ) ) ) * MUM ) ,( MUR - CS ) ),CS ) ) )", "obj1": 0.4448818897637795, "obj2": 0.39392501856044154}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( ( MUR - Min( MUR ,CS ) ) * MUR )", "obj1": 0.8110236220472441, "obj2": 0.09041705239903398}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) ,( Const * BR ) ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8623647782879171}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RMSe / Min( ( Min( MLU ,RMSe ) + CS ) ,MUR ) ) / ( RCSe * ( ( ( ( DS / ( ( MLU + MLU ) / MLU ) ) / RRSe ) + MLU ) + ( RRSe * ( ( MLU - ( RCSe - ( MLU * MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.06220312245957826}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.9094488188976378, "obj2": 0.04162212355684664}, {"determining": "( Max( ( ( Min( ( ( ( MRS - Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) - AMS ) ,( ( BR / FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / BR ) ) ) ) * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),CRS ) * ( Const * MDR ) )", "choosing": "Min( Max( ( RCSe - ( DS / MUR ) ),( MUR + RMSe ) ) ,( ( ( Max( Min( MLU ,RMSe ),( RMSe / Max( RRSe,MUR ) ) ) - ( MUC + CS ) ) * ( ( Max( MUC,RCSe ) - ( RCSe + ( MUM + DS ) ) ) - ( ( RRSe * ( RRSe + Min( DS ,RCSe ) ) ) - RRSe ) ) ) + RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( Max( ( Max( FirstVNF_Mem,ARS ) / Const ),BR ),RRS ) )", "choosing": "( ( MUR / ( Min( DS ,( DS - RCSe ) ) + MUR ) ) / ( MUC + Min( RMSe ,( Min( Min( ( RMSe + RRSe ) ,( ( MUR - MUM ) - Min( MUR ,CS ) ) ) ,( RRSe - RCSe ) ) + RCSe ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5494037444068887}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,Min( Min( FirstVNF_CPU_Server ,Const ) ,FirstVNF_CPU ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,AMS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( RMSe + ( MUC * Max( MUR,MUM ) ) ) / ( MUR + Min( MUR ,RMSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4616248444155497}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * Min( MLU ,( MUC + ( MUM - DS ) ) ) ) ) - ( MUR / MUM ) )", "obj1": 0.5039370078740157, "obj2": 0.29005410919432173}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,BR ),( BR + FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,CRS ) / FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( ( MUC / Min( DS ,DS ) ) * ( ( MUM - Min( RCSe ,MUC ) ) - MUM ) ),MLU ) / DS ),( ( ( Max( ( Min( ( CS + MUC ) ,RMSe ) - ( Max( RCSe,MUR ) / ( RMSe / RRSe ) ) ),( CS - RRSe ) ) - ( CS / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.41929133858267714, "obj2": 0.4375958682468477}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Max( FirstVNF_RAM,FirstVNF_RAM ) - Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * MUR )", "obj1": 0.2992125984251969, "obj2": 0.5525188481318493}, {"determining": "( Min( RRS ,BR ) * Min( ( ( FirstVNF_Mem_Server * MRS ) * Const ) ,RRS ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.2795275590551181, "obj2": 0.5788007702712284}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.2874015748031496, "obj2": 0.5619042472788731}, {"determining": "Min( Max( ( PN + MRS ),Max( BR,FirstVNF_Mem ) ) ,Min( MDR ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( RMSe + MUC ) - ( Max( DS,MLU ) * ( Max( RCSe,Max( MUM,RCSe ) ) + ( ( MLU * ( DS - MLU ) ) * Max( RRSe,( RMSe * DS ) ) ) ) ) ) ,( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( RCSe / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7444739797073107}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ,PN ) / ( ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "( ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( FirstVNF_CPU + PN ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.2106299212598425, "obj2": 0.6348319522709945}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / Max( MRS,FirstVNF_Mem ) )", "choosing": "( ( MUR - Min( MUR ,CS ) ) * MUR )", "obj1": 0.8110236220472441, "obj2": 0.09041705239903398}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.41929133858267714, "obj2": 0.4375958682468477}, {"determining": "( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) )", "choosing": "( MUR / ( ( RCSe * DS ) * ( CS + Max( ( Max( ( MUR * MLU ),DS ) * ( RMSe * ( RRSe * ( RRSe - MUC ) ) ) ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.11755805358120779}, {"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7855352365345439}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR + Min( MUR ,RMSe ) ) / ( RCSe + MUR ) )", "obj1": 0.39763779527559057, "obj2": 0.4616248444155497}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,( MUR + Min( MUR ,RMSe ) ) ) )", "obj1": 0.11023622047244094, "obj2": 0.8096726189267578}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Const * Const ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) ,CS ) ) * MUR )", "obj1": 0.21850393700787402, "obj2": 0.6238699513558241}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.26352145923333004}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( Min( ( ACS + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR + Min( MUR ,RMSe ) ) / ( RCSe + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4797911129957247}, {"determining": "( Min( ( ACS + ( PN / ( Min( ARS ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( RCSe / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.17716535433070865, "obj2": 0.6919552326367725}, {"determining": "Min( Min( FirstVNF_RAM_Server ,ACS ) ,( ( ACS - ( FirstVNF_Mem / ARS ) ) / ( MDR / Max( AMS,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Max( ( Min( DS ,CS ) / ( ( ( MUM + ( CS + RCSe ) ) - RCSe ) - CS ) ),CS ) ) * MUR )", "obj1": 0.9251968503937008, "obj2": 0.02998982432633196}, {"determining": "Max( Min( ( PN / CRS ) ,BR ),( PN + ACS ) )", "choosing": "( ( MLU * Max( RMSe,DS ) ) / Max( Max( Max( ( MUR * Max( Min( RCSe ,RMSe ),RMSe ) ),Min( RCSe ,Max( ( Min( MUM ,DS ) - MUR ),( RCSe * Max( MUM,RRSe ) ) ) ) ),RCSe ),CS ) )", "obj1": 0.09055118110236221, "obj2": 0.8506090440617529}, {"determining": "Min( Max( Max( ARS,MRS ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( Min( ( ACS + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR + Min( MUR ,RMSe ) ) / ( RCSe + Min( ( ( RCSe + DS ) - ( MUM + Min( DS ,CS ) ) ) ,MUR ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4822020455263256}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RCSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.4251968503937008, "obj2": 0.4245538134694243}, {"determining": "Min( Max( ( FirstVNF_Mem / DDR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUC * RCSe ) * ( ( Min( Min( MUR ,Min( MUM ,Max( Max( CS,MUC ),( MLU + MLU ) ) ) ) ,Max( ( MUM - ( DS * ( DS / MUM ) ) ),( ( DS * MLU ) / MUM ) ) ) / CS ) - CS ) )", "obj1": 0.7283464566929134, "obj2": 0.17691443001095167}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RMSe / Min( ( Min( MLU ,RMSe ) + CS ) ,MUR ) ) / ( RCSe * ( ( ( ( DS / ( ( MLU + MLU ) / MLU ) ) / RRSe ) + MLU ) + ( RRSe * ( ( MLU - ( RCSe - ( MLU * MUM ) ) ) / RCSe ) ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.06220312245957826}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( Min( ( Min( ( ( Max( RRS,BR ) + MDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * CRS ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS + RRSe ) / ( RCSe * ( ( DS + DS ) / CS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8769102588037244}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( ( Const * RRS ) ,RRS ) ),( MDR + RRS ) ) ,( ( BR * AMS ) / ( ( ( MRS * FirstVNF_RAM ) + Min( ( AMS * ( ARS * ( ACS + RRS ) ) ) ,FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUR - RRSe ) + RCSe ),( ( DS - MLU ) / DS ) )", "obj1": 0.4448818897637795, "obj2": 0.39392501856044154}, {"determining": "Max( ( FirstVNF_CPU + Min( Const ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / ( ( ( DS / DS ) * ( ( MUR * MLU ) * MUM ) ) * MUR ) ),( RCSe / DS ) )", "obj1": 0.1062992125984252, "obj2": 0.822100240393878}, {"determining": "( Min( Min( ( Const * AMS ) ,( PN * PN ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( Const / MDR ) ,AMS ) ) ) )", "choosing": "( ( RMSe * ( RCSe / RCSe ) ) * MUR )", "obj1": 0.265748031496063, "obj2": 0.580158249269809}, {"determining": "( Min( ( ACS + ( PN / ( Min( ( ACS + ( Const / PN ) ) ,ACS ) / ( RRS + FirstVNF_CPU_Server ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - CS ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6861473212139442}, {"determining": "( ( MRS - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Max( DS,MUC ),Min( MUM ,MUR ) ),( Min( RMSe ,( ( ( MUM - Min( MUC ,MUM ) ) + RMSe ) * MUR ) ) + Min( MUM ,Max( MLU,MUC ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6044904133990888}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / ( ACS + BR ) ) ) )", "choosing": "Max( ( DS / DS ),( DS / ( Max( MLU,Max( Max( Max( RCSe,MUC ),MUR ),( MUM - MUC ) ) ) - ( RRSe - RRSe ) ) ) )", "obj1": 0.16141732283464566, "obj2": 0.7107609618407263}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( FirstVNF_CPU / ( ( DDR / Min( ( FirstVNF_RAM_Server - MRS ) ,( FirstVNF_RAM / ACS ) ) ) / Max( ( AMS + ( BR / FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( CS,MLU ) / DS ),( ( ( ( MUC / MUC ) - Max( ( DS * ( CS * ( RRSe * MUM ) ) ),CS ) ) + MLU ) / MLU ) )", "obj1": 0.421259842519685, "obj2": 0.42795871353678566}, {"determining": "( Max( ( ( AMS * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Max( ( ( Min( DS ,MUC ) / DS ) / MLU ),( ( MUM - Max( ( ( MUM + ( ( CS * MLU ) - RCSe ) ) - ( ( ( RMSe / RMSe ) + RMSe ) - MLU ) ),DS ) ) / DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8505130046630691}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( ( DS - MUR ) + ( RRSe + ( DS - Min( MUC ,DS ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03742584097887646}, {"determining": "( Min( Min( ( Const * Const ) ,( CRS * MRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( FirstVNF_RAM_Server - ( BR / ( MRS / DDR ) ) ) ) )", "choosing": "( ( Min( ( RRSe + ( ( MUM / Min( ( MUC / DS ) ,CS ) ) + Max( RRSe,( DS / ( CS / MLU ) ) ) ) ) ,DS ) / RRSe ) - Min( MUR ,CS ) )", "obj1": 0.2874015748031496, "obj2": 0.5619042472788731}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) + ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUM ) / ( ( ( MLU / MLU ) + RRSe ) - ( MUM - RRSe ) ) ) + ( RMSe - Min( ( RMSe + RRSe ) ,Max( Max( ( MLU + MUR ),MUM ),Max( Max( MUR,Max( MUC,RMSe ) ),DS ) ) ) ) ) * MUR )", "obj1": 0.9547244094488189, "obj2": 0.018132630257409178}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( RCSe - ( RMSe + RRSe ) ),Min( RMSe ,( ( Max( ( Max( Min( MUM ,RCSe ),Max( MUR,MUR ) ) * RRSe ),MLU ) + ( ( MLU + ( MLU - MUC ) ) * Max( MUC,( MLU - MUR ) ) ) ) * RMSe ) ) )", "obj1": 0.9645669291338582, "obj2": 0.01656413566118408}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( MUM * ( MUM * Min( ( DS / RRSe ) ,MUM ) ) ) + RRSe ) ) - Min( ( ( ( RMSe - ( Min( Min( MLU ,RMSe ) ,( MLU - DS ) ) / ( MUC - MUR ) ) ) - CS ) + ( ( MLU * DS ) / MUR ) ) ,RRSe ) )", "obj1": 0.9744094488188977, "obj2": 0.010660985004373416}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( MRS - ( ( FirstVNF_CPU_Server - PN ) * ( ( ( Min( RRS ,ACS ) + FirstVNF_CPU ) + DDR ) * RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( RCSe + ( ( Min( Max( ( RMSe + ( DS / MUR ) ),( ( MUR - MUM ) - Min( MUR ,CS ) ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5464434489020038}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,BR ),( BR + FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,CRS ) / FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( ( MUC / Min( DS ,DS ) ) * ( ( MUM - Min( RCSe ,MUC ) ) - MUM ) ),MLU ) / DS ),( ( ( Max( ( Min( ( CS + MUC ) ,RMSe ) - ( Max( RCSe,MUR ) / ( RMSe / RRSe ) ) ),( CS - RRSe ) ) - ( CS / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.47164113243124806}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( MDR ,ARS ) * MRS ) ) ,( ACS / BR ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "Max( ( ( ( MUR * MUR ) / ( CS + MUR ) ) / ( CS + MUR ) ),( RCSe / DS ) )", "obj1": 0.10039370078740158, "obj2": 0.8292241894202875}, {"determining": "( Min( ( ( Const * Const ) - ( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_Mem_Server / ( Max( BR,CRS ) / FirstVNF_RAM ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,( RCSe + DS ) ) ) * MUR )", "obj1": 0.2992125984251969, "obj2": 0.5525188481318493}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6080077339942311}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( ( MUC / DS ) * Max( MUC,DS ) )", "obj1": 0.10826771653543307, "obj2": 0.8099791749806996}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - MUC ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6983375110935276}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),DS ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "( Min( ( PN - FirstVNF_RAM_Server ) ,PN ) / ( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) * ( ( ( CS - ( MLU + MUR ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe + RRSe ) / ( RCSe * DS ) ) ) ) * ( ( RRSe - ( MUM / MUC ) ) + ( MUM + MUC ) ) ) ,( MLU + RMSe ) )", "obj1": 0.7401574803149606, "obj2": 0.13922781324998731}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * Max( FirstVNF_CPU,( ARS / CRS ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - Const ) ) )", "choosing": "Max( ( MUC - Min( RRSe ,RMSe ) ),( ( ( Max( ( DS * Min( RMSe ,( CS - MUM ) ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) + Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.38976377952755903, "obj2": 0.46586556758935727}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Const / FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.16535433070866143, "obj2": 0.7050804648110863}, {"determining": "( Min( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / DS ) * CS ) ,Min( CS ,Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6831316932303914}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUC * RCSe ) * ( DS - CS ) )", "obj1": 0.9330708661417323, "obj2": 0.027322292825036735}, {"determining": "Min( ( ACS / Max( Max( CRS,RRS ),FirstVNF_CPU_Server ) ) ,Min( MRS ,( DDR + ARS ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),( ( CS * ( ( MUM + RMSe ) / MUC ) ) + RMSe ) ) / ( RCSe * ( RRSe / MUR ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6384561121939104}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( ( Max( Min( CS ,( MLU / DS ) ),Max( CS,Min( RMSe ,MUC ) ) ) + RRSe ) ,DS ) ),( CS - Min( RCSe ,( RRSe / RCSe ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6217956210194872}, {"determining": "Max( ( FirstVNF_CPU + AMS ),( DDR + FirstVNF_CPU ) )", "choosing": "( ( MUC / DS ) * Max( Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ),DS ) )", "obj1": 0.10433070866141732, "obj2": 0.8272172613199391}, {"determining": "Max( ( ( ( FirstVNF_CPU / Min( Max( FirstVNF_RAM_Server,( ( MDR - FirstVNF_Mem_Server ) / CRS ) ) ,FirstVNF_CPU ) ) + ( ACS * DDR ) ) + BR ),( PN + ACS ) )", "choosing": "( ( RMSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8401001291231669}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.11755805358120779}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( ( RMSe + RRSe ) / ( RCSe * DS ) )", "obj1": 0.0984251968503937, "obj2": 0.8401001291231669}], "9": [{"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * RRS ) ) / Min( ( ( BR + Min( ( ( Min( FirstVNF_RAM ,RRS ) + ARS ) + Const ) ,Max( ( BR / FirstVNF_Mem_Server ),ARS ) ) ) * ( ACS * ( FirstVNF_CPU_Server / AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "( ( CS - ( Max( ( RRSe * ( RMSe + CS ) ),Min( MUC ,MUC ) ) / RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( FirstVNF_RAM_Server,BR ) - Max( MRS,Max( ( FirstVNF_CPU + Min( Const ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) ) ) ) + ( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( ( DS - ( ( ( DS / DS ) * ( ( MUR * MLU ) * MUM ) ) * MUR ) ) / ( MUR + Max( Max( RCSe,MLU ),( RCSe - DS ) ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ( Min( ( AMS * ( ARS * ( ARS * RRS ) ) ) ,FirstVNF_CPU_Server ) + ( MRS * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * RRSe ) - ( RRSe + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,( Const / Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( ( FirstVNF_RAM_Server / DDR ) + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( MUC,DS ) / Max( ( RRSe * Max( RRSe,MUC ) ),MUR ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "Min( Max( ( ( FirstVNF_CPU + FirstVNF_Mem ) + BR ),Max( FirstVNF_Mem,BR ) ) ,Max( ARS,( DDR / MRS ) ) )", "choosing": "( ( RRSe / RCSe ) / ( RCSe - Max( ( MUR * CS ),Min( MUM ,RRSe ) ) ) )", "obj1": 0.6043307086614174, "obj2": 0.2790198021765497}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MLU * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07874325594518702}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - DDR ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001504746334582}, {"determining": "Min( FirstVNF_Mem ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RCSe ,RMSe ) ),CS ) - ( ( Min( Min( MLU ,RMSe ) ,( MLU - DS ) ) / ( MUC - MUR ) ) / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.452755905511811, "obj2": 0.38685986771482206}, {"determining": "Min( Max( ( DDR / Max( ( FirstVNF_RAM - MDR ),AMS ) ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - CRS ) ) )", "choosing": "( ( ( ( ( Min( ( ( DS + MUR ) / MLU ) ,( Min( RMSe ,MUR ) - ( CS / RMSe ) ) ) + MUM ) + CS ) - Max( RMSe,MUR ) ) + MUC ) * ( ( RMSe * MUM ) * DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5085315034742484}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.5413385826771654, "obj2": 0.2831793433318287}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + DS ),( RRSe * RCSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.16776391737952637}, {"determining": "( Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "Min( ( ( DS - Max( MUM,( MLU - RRSe ) ) ) / ( MUR + Max( Max( RCSe,RRSe ),( RCSe - DS ) ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.84251968503937, "obj2": 0.06923323720772609}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6968503937007874, "obj2": 0.18857468724554982}, {"determining": "( Max( ( ( AMS * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Max( ( ( Min( DS ,MUC ) / DS ) / MLU ),( ( MUM - Max( ( ( MUM + ( ( CS * MLU ) - RCSe ) ) - ( ( ( RMSe / RMSe ) + RMSe ) - MLU ) ),DS ) ) / DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8505130046630691}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.43375698165747656}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Min( FirstVNF_CPU_Server ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) ) ),DS ) )", "obj1": 0.3228346456692913, "obj2": 0.5373169551855257}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "( Min( Min( ( Const * AMS ) ,( PN * PN ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( Const / MDR ) ,AMS ) ) ) )", "choosing": "( ( RMSe * ( RCSe / RCSe ) ) * MUR )", "obj1": 0.265748031496063, "obj2": 0.580158249269809}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.90748031496063, "obj2": 0.041173204531257716}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.6594488188976378, "obj2": 0.26168214340211954}, {"determining": "( ( RRS + ( ( CRS + ACS ) + FirstVNF_CPU ) ) - ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + DS ) - ( RCSe / ( MUC * RMSe ) ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe * RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / DS ),( RCSe / DS ) )", "obj1": 0.6653543307086615, "obj2": 0.22722192887230167}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Min( MUR ,RMSe ) / ( ( ( DS / DS ) * ( ( MUR * MLU ) * MUM ) ) * MUR ) ),( RCSe / DS ) )", "obj1": 0.6850393700787402, "obj2": 0.2139565127231773}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - DDR ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.6338582677165354, "obj2": 0.2749098609218431}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( MUM * ( MUM * Min( ( DS / RRSe ) ,MUM ) ) ) + RRSe ) ) - Min( ( ( ( RMSe - ( Min( Min( MLU ,RMSe ) ,( MLU - DS ) ) / ( MUC - MUR ) ) ) - CS ) + ( ( MLU * DS ) / MUR ) ) ,RRSe ) )", "obj1": 0.9744094488188977, "obj2": 0.010660985004373416}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ,PN ) / ( Max( ACS,( FirstVNF_Mem + Const ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - RCSe ) / ( ( ( ( MLU + MUR ) - CS ) + Min( ( MLU - MUC ) ,MUR ) ) * ( ( RCSe + RRSe ) / ( DS * RCSe ) ) ) ) * CS ) ,Min( CS ,Max( ( ( RCSe + Min( DS ,MUM ) ) - ( RCSe * MUM ) ),RMSe ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6805040869494942}, {"determining": "Min( Max( Max( BR,FirstVNF_Mem ),Min( Const ,FirstVNF_Mem_Server ) ) ,( ( AMS / ( MRS - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( CS / ( MUM + ( ( ( RCSe - ( RMSe - RMSe ) ) + ( MUM / MUM ) ) * MUC ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5058251290522882}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5639555229066507}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.5413385826771654, "obj2": 0.2831793433318287}, {"determining": "Max( ( ( ( FirstVNF_CPU / PN ) + PN ) + BR ),( PN + ( CRS + ( DDR * PN ) ) ) )", "choosing": "( ( MUC / Max( DS,Min( Max( RRSe,MLU ) ,RCSe ) ) ) * ( DS + CS ) )", "obj1": 0.1279527559055118, "obj2": 0.7743589830627}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.7893700787401575, "obj2": 0.10527500212474854}, {"determining": "( Min( Min( ( Const * Const ) ,( Max( BR,FirstVNF_Mem ) * CRS ) ) ,( ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2959550888331984}, {"determining": "( Min( ( ( FirstVNF_Mem * PN ) + ( PN / Const ) ) ,PN ) / ( MRS * Const ) )", "choosing": "( ( MUR - Min( MUR ,( DS * Min( RMSe ,( RRSe + RRSe ) ) ) ) ) * MUR )", "obj1": 0.7106299212598425, "obj2": 0.17924251354596768}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,Min( Min( FirstVNF_CPU_Server ,Const ) ,FirstVNF_CPU ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,AMS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( RMSe + ( MUC * Max( MUR,MUM ) ) ) / ( MUR + Min( MUR ,RMSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4616248444155497}, {"determining": "( ( ACS / MRS ) / ( ( ( ( FirstVNF_RAM / PN ) * ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) * ( ( ARS - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + ( CS + MUC ) ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + ( ( ( RMSe * RCSe ) * ( ( ( RRSe + CS ) + ( MLU / CS ) ) - DS ) ) / RCSe ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0017854588325800422}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05461432600341998}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( RRS ,( Const * RRS ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RCSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.4251968503937008, "obj2": 0.4245538134694243}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( FirstVNF_CPU / ( ( DDR / Min( ( MRS - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / Max( ( AMS - ( BR / FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.4448818897637795, "obj2": 0.39392501856044154}, {"determining": "Min( Max( ( FirstVNF_Mem / DDR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUC * RCSe ) * ( ( Min( Min( MUR ,Min( MUM ,Max( Max( CS,MUC ),( MLU + MLU ) ) ) ) ,Max( ( MUM - ( DS * ( DS / MUM ) ) ),( ( DS * MLU ) / MUM ) ) ) / CS ) - CS ) )", "obj1": 0.6377952755905512, "obj2": 0.2688486454895828}, {"determining": "( ( ( ( ( ( ACS + ( ( ARS - FirstVNF_Mem_Server ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( ( DS * ( CS * ( RRSe * MUM ) ) ) ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.12992125984251968, "obj2": 0.7577070979292627}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7350309263654948}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( DS,DS ) ) + RCSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.7362204724409449, "obj2": 0.14161143091648393}, {"determining": "( ( FirstVNF_RAM - FirstVNF_Mem ) / ( ( FirstVNF_Mem + BR ) - FirstVNF_CPU_Server ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6535433070866141, "obj2": 0.26352145923333004}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,BR ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MUR - MUM ) ) ) ) + RMSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.592733935595297}, {"determining": "( Min( Min( ( Const * Const ) ,( Max( BR,FirstVNF_Mem ) * CRS ) ) ,( ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2959550888331984}, {"determining": "( ( MRS - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Max( DS,MUC ),Min( MUM ,MUR ) ),( Min( RMSe ,( ( ( MUM - Min( MUC ,MUM ) ) + RMSe ) * MUR ) ) + Min( MUM ,Max( MLU,MUC ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6044904133990888}, {"determining": "( Min( ( ( PN - DDR ) + Max( PN,Const ) ) ,PN ) / ( ( MRS * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( CS,MUM ) - ( ( Min( RMSe ,( Max( ( RRSe - ( CS * MUR ) ),DS ) - RRSe ) ) * Max( DS,Min( MUM ,MUM ) ) ) + RMSe ) )", "obj1": 0.7618110236220472, "obj2": 0.12241272342789186}, {"determining": "( ( MRS + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ( CRS / ACS ) / FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7843395203433}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,Max( ACS,MRS ) ) ) ) ) + ( FirstVNF_CPU_Server - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( DS,RCSe ) * MUC ),Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( ( RMSe - DS ),DS ) ) + RMSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.7362204724409449, "obj2": 0.14161143091648393}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + ACS ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - RCSe ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6969097675456125}, {"determining": "Min( ( ACS / Max( Max( CRS,RRS ),FirstVNF_CPU_Server ) ) ,Min( MRS ,( DDR + ARS ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),( ( CS * ( ( MUM + RMSe ) / MUC ) ) + RMSe ) ) / ( RCSe * ( RRSe / MUR ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6384561121939104}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( ( DS - MUR ) + ( RRSe + ( DS - Min( MUC ,DS ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03742584097887646}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( Min( ( ACS + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR + Min( MUR ,RMSe ) ) / ( RCSe + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4797911129957247}, {"determining": "( Min( ( Const - ACS ) ,( ( Min( DDR ,FirstVNF_CPU ) + ACS ) / FirstVNF_Mem_Server ) ) + ( FirstVNF_CPU_Server - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( ( ( Max( ( DS * Min( RMSe ,RMSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MUR ),( ( Min( ( RRSe / MUR ) ,Min( RMSe ,RMSe ) ) + RCSe ) / DS ) )", "obj1": 0.6771653543307087, "obj2": 0.22362561917303933}, {"determining": "Max( Min( ( PN / CRS ) ,BR ),( PN + ACS ) )", "choosing": "( ( MLU * Max( RMSe,DS ) ) / Max( Max( Max( ( MUR * Max( Min( RCSe ,RMSe ),RMSe ) ),Min( RCSe ,Max( ( Min( MUM ,DS ) - MUR ),( RCSe * Max( MUM,RRSe ) ) ) ) ),RCSe ),CS ) )", "obj1": 0.09055118110236221, "obj2": 0.8506090440617529}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7350309263654948}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.13369799457321033}, {"determining": "Min( Max( Min( FirstVNF_CPU ,MRS ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( ( DS - MLU ) * Min( RCSe ,RMSe ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.4251968503937008, "obj2": 0.4245538134694243}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( FirstVNF_CPU_Server + ( FirstVNF_CPU * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) ) + ( Max( ACS,RRS ) / ( RRS + MDR ) ) ) )", "choosing": "( ( MUR + Min( ( DS - Max( Max( Min( RCSe ,MLU ),MUM ),RCSe ) ) ,RMSe ) ) / ( MUR + MUR ) )", "obj1": 0.36220472440944884, "obj2": 0.4890613407873901}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( Min( ( Min( ( ( Max( RRS,BR ) + MDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * CRS ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS + RRSe ) / ( RCSe * ( ( DS + DS ) / CS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8769102588037244}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( RRS ,( Const * RRS ) ) ),( MDR + RRS ) ) ,( ( ( RRS + CRS ) / DDR ) / ( ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( Max( RCSe,DS ) - Max( Min( ( ( CS - Min( MLU ,( MUM + MUM ) ) ) * MUM ) ,( MUR - CS ) ),CS ) ) )", "obj1": 0.4448818897637795, "obj2": 0.39392501856044154}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * Max( FirstVNF_CPU,( ARS / CRS ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - Const ) ) )", "choosing": "Max( ( MUC - Min( RRSe ,RMSe ) ),( ( ( Max( ( DS * Min( RMSe ,( CS - MUM ) ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) + Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.38976377952755903, "obj2": 0.46586556758935727}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.8641732283464567, "obj2": 0.05028533843517441}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.84251968503937, "obj2": 0.06923323720772609}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( RMSe - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.28937007874015747, "obj2": 0.5555462965301357}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem ) ) ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.3031496062992126, "obj2": 0.5518495294573956}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8623647782879171}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1830708661417323, "obj2": 0.6859693818401666}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( Min( ( ( Const - Max( PN,Const ) ) + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe + ( ( ( RCSe / MUC ) - RCSe ) / Min( MUM ,Min( MUR ,( MUR - ( Min( MUM ,MLU ) + Min( DS ,CS ) ) ) ) ) ) ) - Min( MUR ,CS ) )", "obj1": 0.7854330708661418, "obj2": 0.10702075944852532}, {"determining": "Min( ( FirstVNF_RAM_Server + ( BR - DDR ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( RCSe * CS ) * ( DS - CS ) )", "obj1": 0.9350393700787402, "obj2": 0.026136266961161468}, {"determining": "( Min( ( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( FirstVNF_RAM_Server - ( BR + FirstVNF_Mem ) ) ) )", "choosing": "( ( MUR / ( RCSe * Max( RCSe,CS ) ) ) / ( MUC + ( ( Min( Max( ( RMSe + RRSe ),( MUC - Min( MUR ,CS ) ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) + RCSe ) + RMSe ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5507691497331703}, {"determining": "( ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122524}, {"determining": "Min( Max( Max( ARS,MRS ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( Min( ( ACS + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR + Min( MUR ,RMSe ) ) / ( RCSe + Min( ( ( RCSe + DS ) - ( MUM + Min( DS ,CS ) ) ) ,MUR ) ) )", "obj1": 0.3720472440944882, "obj2": 0.4822020455263256}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7481116540785893}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.7421259842519685, "obj2": 0.1373599296757029}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ,PN ) / ( ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.2125984251968504, "obj2": 0.632596955837935}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) + ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUM ) / ( ( ( MLU / MLU ) + RRSe ) - ( MUM - RRSe ) ) ) + ( RMSe - Min( ( RMSe + RRSe ) ,Max( Max( ( MLU + MUR ),MUM ),Max( Max( MUR,Max( MUC,RMSe ) ),DS ) ) ) ) ) * MUR )", "obj1": 0.9547244094488189, "obj2": 0.018132630257409178}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "( MUR / ( RCSe * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.1153649789712643}, {"determining": "( Max( ( ( Min( ( ( ( MRS - Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) - AMS ) ,( ( BR / FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / BR ) ) ) ) * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),CRS ) * ( Const * MDR ) )", "choosing": "Min( Max( ( RCSe - ( DS / MUR ) ),( MUR + RMSe ) ) ,( ( ( Max( Min( MLU ,RMSe ),( RMSe / Max( RRSe,MUR ) ) ) - ( MUC + CS ) ) * ( ( Max( MUC,RCSe ) - ( RCSe + ( MUM + DS ) ) ) - ( ( RRSe * ( RRSe + Min( DS ,RCSe ) ) ) - RRSe ) ) ) + RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) )", "choosing": "( MUR / ( ( RCSe * DS ) * ( CS + Max( ( Max( ( MUR * MLU ),DS ) * ( RMSe * ( RRSe * ( RRSe - MUC ) ) ) ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.11755805358120779}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( Max( ( Max( FirstVNF_Mem,ARS ) / Const ),BR ),RRS ) )", "choosing": "( ( MUR / ( Min( DS ,( DS - RCSe ) ) + MUR ) ) / ( MUC + Min( RMSe ,( Min( Min( ( RMSe + RRSe ) ,( ( MUR - MUM ) - Min( MUR ,CS ) ) ) ,( RRSe - RCSe ) ) + RCSe ) ) ) )", "obj1": 0.32086614173228345, "obj2": 0.5494037444068887}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.6811023622047244, "obj2": 0.21873602196422448}, {"determining": "( Max( ( ( AMS * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( ( Max( Min( CS ,( MLU / DS ) ),Max( CS,Min( RMSe ,MUC ) ) ) + RRSe ) ,DS ) ),( CS - Min( RCSe ,( RRSe / RCSe ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6217956210194872}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6080077339942311}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR + RRS ) / Max( ( ( FirstVNF_RAM_Server - ( CRS * FirstVNF_Mem ) ) + FirstVNF_CPU ),RRS ) ) ) )", "choosing": "( ( ( MUM + ( RMSe + ( ( DS + DS ) - RMSe ) ) ) - CS ) / Max( RCSe,MUR ) )", "obj1": 0.3641732283464567, "obj2": 0.48755525634384694}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + Max( ( AMS * FirstVNF_RAM ),( Const * Const ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( Min( Max( ( RMSe + RRSe ),( MUR + MUR ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) ,CS ) ) * MUR )", "obj1": 0.21850393700787402, "obj2": 0.6238699513558241}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR - Min( MUR ,CS ) ) * Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ) )", "obj1": 0.9665354330708661, "obj2": 0.014179013490660189}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR + Min( MUR ,RMSe ) ) / ( RCSe + MUR ) )", "obj1": 0.39763779527559057, "obj2": 0.4616248444155497}, {"determining": "( Min( PN ,( MDR - Min( ( FirstVNF_Mem_Server - CRS ) ,FirstVNF_Mem_Server ) ) ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / CS ) + RRSe ) - ( ( DS * ( ( Max( ( ( RCSe - MUC ) - MLU ),Min( ( RMSe - MUR ) ,DS ) ) * ( ( ( RMSe * MUR ) / ( RRSe - RCSe ) ) - ( Max( RRSe,MUM ) + MUM ) ) ) - ( ( MLU - ( ( MUR - MLU ) / RRSe ) ) / RRSe ) ) ) * MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / ( FirstVNF_CPU + ACS ) ) ) ,PN ) / ( RRS + FirstVNF_CPU_Server ) )", "choosing": "( ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) - Min( MUR ,CS ) )", "obj1": 0.9625984251968503, "obj2": 0.015094315030722637}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,BR ),( BR + FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,CRS ) / FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( ( MUC / Min( DS ,DS ) ) * ( ( MUM - Min( RCSe ,MUC ) ) - MUM ) ),MLU ) / DS ),( ( ( Max( ( Min( ( CS + MUC ) ,RMSe ) - ( Max( RCSe,MUR ) / ( RMSe / RRSe ) ) ),( CS - RRSe ) ) - ( CS / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.47164113243124806}, {"determining": "Min( Max( ( MRS + BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_Mem ) + ARS ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7458289979160181}, {"determining": "( Min( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / DS ) * CS ) ,Min( CS ,Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6831316932303914}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( FirstVNF_CPU / ( ( DDR / Min( ( FirstVNF_RAM_Server - MRS ) ,( FirstVNF_RAM / ACS ) ) ) / Max( ( AMS + ( BR / FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( CS,MLU ) / DS ),( ( ( ( MUC / MUC ) - Max( ( DS * ( CS * ( RRSe * MUM ) ) ),CS ) ) + MLU ) / MLU ) )", "obj1": 0.421259842519685, "obj2": 0.42795871353678566}], "10": [{"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * RRS ) ) / Min( ( ( BR + Min( ( ( Min( FirstVNF_RAM ,RRS ) + ARS ) + Const ) ,Max( ( BR / FirstVNF_Mem_Server ),ARS ) ) ) * ( ACS * ( FirstVNF_CPU_Server / AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "( ( CS - ( Max( ( RRSe * ( RMSe + CS ) ),Min( MUC ,MUC ) ) / RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ( Min( ( AMS * ( ARS * ( ARS * RRS ) ) ) ,FirstVNF_CPU_Server ) + ( MRS * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * RRSe ) - ( RRSe + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( FirstVNF_RAM_Server,BR ) - Max( MRS,Max( ( FirstVNF_CPU + Min( Const ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) ) ) ) + ( FirstVNF_Mem * ( Min( FirstVNF_CPU_Server ,DDR ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( ( DS - ( ( ( DS / DS ) * ( ( MUR * MLU ) * MUM ) ) * MUR ) ) / ( MUR + Max( Max( RCSe,MLU ),( RCSe - DS ) ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( MUC,DS ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( Max( ( FirstVNF_RAM_Server / DDR ),MDR ) * FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( MUR - MLU ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25962903890786043}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - DDR ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( RCSe / CS ) - Min( MUR ,CS ) )", "obj1": 0.655511811023622, "obj2": 0.2461660984312428}, {"determining": "( ( ( ( ( ( ( ACS / FirstVNF_Mem_Server ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) * Max( MRS,Max( ACS,MRS ) ) ) + FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( ( MUC - RCSe ) + MLU ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( CS * RCSe ) + RRSe ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16490312075761823}, {"determining": "( Min( ( ( PN - ( Min( CRS ,FirstVNF_Mem ) - ( FirstVNF_RAM + CRS ) ) ) + ( Const / PN ) ) ,PN ) / ( FirstVNF_CPU * Const ) )", "choosing": "( MUR / ( ( RCSe * DS ) * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( Min( CS ,( DS - MUC ) ) ,MUR ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.22463535888852232}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,( CS - RCSe ) ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.3865898288863405}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7145669291338582, "obj2": 0.14758624510521148}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.28288576304541224}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10127926093552855}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) / CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( DS,RCSe ) * MUC ) + Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( ( RMSe - DS ),( MUM + RMSe ) ) ) + RMSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07747400525545903}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( Max( ( ( AMS * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Max( ( ( Min( DS ,MUC ) / DS ) / MLU ),( ( MUM - Max( ( ( MUM + ( ( CS * MLU ) - RCSe ) ) - ( ( ( RMSe / RMSe ) + RMSe ) - MLU ) ),DS ) ) / DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8505130046630691}, {"determining": "( ( ( FirstVNF_RAM / AMS ) + ( ( Min( RRS ,Const ) + DDR ) / AMS ) ) + Min( RRS ,( Const * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( Min( RRSe ,( Min( CS ,Min( ( RRSe / MLU ) ,( RMSe / MUM ) ) ) * ( MUC + MLU ) ) ) * Min( RRSe ,( Min( MUM ,RMSe ) * ( Min( CS ,MUR ) - MLU ) ) ) ) ) / ( MUC + ( ( Min( ( RRSe * ( RCSe / MUR ) ) ,( RCSe + ( MLU + DS ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.32537672394163164}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5492242149088165}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "Min( ( RRS * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,( ( Min( DS ,MUC ) / DS ) / MLU ) ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.43503937007874016, "obj2": 0.4184668665736465}, {"determining": "( ( PN * ( ARS + Max( Min( DDR ,( RRS + RRS ) ),Max( FirstVNF_CPU_Server,MRS ) ) ) ) + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( MDR * Max( ( ARS + FirstVNF_CPU_Server ),Min( Const ,FirstVNF_CPU_Server ) ) ) ) - AMS ) )", "choosing": "( Max( ( Max( RCSe,DS ) * ( MLU + RCSe ) ),Max( MUR,Min( CS ,RRSe ) ) ) / ( RCSe * ( Min( ( Min( DS ,Max( ( MUM + MLU ),DS ) ) + MUM ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.30072293877987194}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.90748031496063, "obj2": 0.041173204531257716}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6575692411602552}, {"determining": "( ( RRS + ( ( CRS + ACS ) + FirstVNF_CPU ) ) - ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + DS ) - ( RCSe / ( MUC * RMSe ) ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe * RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Min( Max( Max( BR,FirstVNF_Mem ),Min( Const ,FirstVNF_Mem_Server ) ) ,( ( AMS / ( MRS - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( CS / ( MUM + ( ( ( RCSe - ( RMSe - RMSe ) ) + ( MUM / MUM ) ) * MUC ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5058251290522882}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( MUM * ( MUM * Min( ( DS / RRSe ) ,MUM ) ) ) + RRSe ) ) - Min( ( ( ( RMSe - ( Min( Min( MLU ,RMSe ) ,( MLU - DS ) ) / ( MUC - MUR ) ) ) - CS ) + ( ( MLU * DS ) / MUR ) ) ,RRSe ) )", "obj1": 0.9744094488188977, "obj2": 0.010660985004373416}, {"determining": "( Min( Min( ( Const * AMS ) ,( PN * PN ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( ( ACS / ( MRS - FirstVNF_RAM ) ) / ARS ) ) ) ) + Max( ( AMS * FirstVNF_RAM ),( MRS * Min( ( Const / MDR ) ,AMS ) ) ) )", "choosing": "( ( RMSe * ( RCSe / RCSe ) ) * MUR )", "obj1": 0.265748031496063, "obj2": 0.580158249269809}, {"determining": "( ( PN * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) - ( RMSe * RCSe ) )", "obj1": 0.40551181102362205, "obj2": 0.43703693375013986}, {"determining": "( ( ( Max( ( Max( FirstVNF_Mem,( Min( ARS ,ARS ) / DDR ) ) * ( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( ( RMSe + CS ) + MUC ) + RCSe ) ) ,( RCSe + ( RRSe + ( DS * RCSe ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7226206485709789}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( RCSe / MUM ) )", "obj1": 0.3700787401574803, "obj2": 0.4773292222030435}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.812992125984252, "obj2": 0.07470523285769703}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUC + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7539370078740157, "obj2": 0.1270288635220764}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05452076483336485}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Min( FirstVNF_CPU_Server ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) ) ),DS ) )", "obj1": 0.31299212598425197, "obj2": 0.5442005216646527}, {"determining": "Min( Max( ( DDR / Max( ( FirstVNF_RAM - MDR ),AMS ) ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - CRS ) ) )", "choosing": "( ( ( ( ( Min( ( ( DS + MUR ) / MLU ) ,( Min( RMSe ,MUR ) - ( CS / RMSe ) ) ) + MUM ) + CS ) - Max( RMSe,MUR ) ) + MUC ) * ( ( RMSe * MUM ) * DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5085315034742484}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8623647782879171}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * AMS ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.768646275587016}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( MUC ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.8287401574803149, "obj2": 0.07323091178515556}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( MLU,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5265674539974923}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5639555229066507}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,Min( Min( FirstVNF_CPU_Server ,Const ) ,FirstVNF_CPU ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,AMS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( RMSe + ( MUC * Max( MUR,MUM ) ) ) / ( MUR + Min( MUR ,RMSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4616248444155497}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( CS + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.7401574803149606, "obj2": 0.137021129843327}, {"determining": "( Min( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / DS ) * CS ) ,Min( CS ,Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6831316932303914}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( Min( Min( ( Const * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( RMSe - ( Min( DS ,RMSe ) - ( MLU - ( DS * RRSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5700825406821592}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.33267716535433073, "obj2": 0.5140104230486171}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1830708661417323, "obj2": 0.6859693818401666}, {"determining": "( Min( ( ( PN - DDR ) + Max( PN,Const ) ) ,PN ) / ( ( MRS * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( CS,MUM ) - ( ( Min( RMSe ,( Max( ( RRSe - ( CS * MUR ) ),DS ) - RRSe ) ) * Max( DS,Min( MUM ,MUM ) ) ) + RMSe ) )", "obj1": 0.7618110236220472, "obj2": 0.12241272342789186}, {"determining": "Min( ( ACS / Max( Max( CRS,RRS ),FirstVNF_CPU_Server ) ) ,Min( MRS ,( DDR + ARS ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),( ( CS * ( ( MUM + RMSe ) / MUC ) ) + RMSe ) ) / ( RCSe * ( RRSe / MUR ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6384561121939104}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( FirstVNF_CPU / ( ( DDR / Min( ( MRS - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / Max( ( AMS - ( BR / FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.4448818897637795, "obj2": 0.39392501856044154}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1279527559055118, "obj2": 0.755171151554463}, {"determining": "( Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "Min( ( ( DS - Max( MUM,( MLU - RRSe ) ) ) / ( MUR + Max( Max( RCSe,RRSe ),( RCSe - DS ) ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.84251968503937, "obj2": 0.06923323720772609}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Min( FirstVNF_CPU ,BR ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MUR - MUM ) ) ) ) + RMSe ) ) )", "obj1": 0.2578740157480315, "obj2": 0.592733935595297}, {"determining": "( ( MRS - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Max( DS,MUC ),Min( MUM ,MUR ) ),( Min( RMSe ,( ( ( MUM - Min( MUC ,MUM ) ) + RMSe ) * MUR ) ) + Min( MUM ,Max( MLU,MUC ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6044904133990888}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( ( DS - MUR ) + ( RRSe + ( DS - Min( MUC ,DS ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03742584097887646}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( DS,DS ) ) + RCSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.7362204724409449, "obj2": 0.14161143091648393}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "Max( Min( ( PN / CRS ) ,BR ),( PN + ACS ) )", "choosing": "( ( MLU * Max( RMSe,DS ) ) / Max( Max( Max( ( MUR * Max( Min( RCSe ,RMSe ),RMSe ) ),Min( RCSe ,Max( ( Min( MUM ,DS ) - MUR ),( RCSe * Max( MUM,RRSe ) ) ) ) ),RCSe ),CS ) )", "obj1": 0.09055118110236221, "obj2": 0.8506090440617529}, {"determining": "( Min( PN ,( MDR - Min( ( FirstVNF_Mem_Server - CRS ) ,FirstVNF_Mem_Server ) ) ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / CS ) + RRSe ) - ( ( DS * ( ( Max( ( ( RCSe - MUC ) - MLU ),Min( ( RMSe - MUR ) ,DS ) ) * ( ( ( RMSe * MUR ) / ( RRSe - RCSe ) ) - ( Max( RRSe,MUM ) + MUM ) ) ) - ( ( MLU - ( ( MUR - MLU ) / RRSe ) ) / RRSe ) ) ) * MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7481116540785893}, {"determining": "( ( ACS / MRS ) / ( ( ( ( FirstVNF_RAM / PN ) * ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) * ( ( ARS - FirstVNF_Mem_Server ) - FirstVNF_Mem_Server ) ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( MUR + ( CS + MUC ) ) ,( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + ( ( ( RMSe * RCSe ) * ( ( ( RRSe + CS ) + ( MLU / CS ) ) - DS ) ) / RCSe ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0017854588325800422}, {"determining": "( Min( ( ( Max( BR,FirstVNF_CPU ) - DDR ) + Max( ( CRS + MRS ),Max( ( BR + FirstVNF_CPU_Server ),ARS ) ) ) ,PN ) / ( ARS - RRS ) )", "choosing": "Min( ( CS * ( ( ( ( ( Min( CS ,RMSe ) + Max( MUC,MUR ) ) + CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MUR / ( ( ( RCSe - RCSe ) - RCSe ) + ( RMSe / RCSe ) ) ) ) / ( CS - MUC ) ) ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6969097675456125}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + ACS ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - RCSe ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6969097675456125}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - DDR ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( FirstVNF_CPU_Server + ( FirstVNF_CPU * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) ) + ( Max( ACS,RRS ) / ( RRS + MDR ) ) ) )", "choosing": "( ( MUR + Min( ( DS - Max( Max( Min( RCSe ,MLU ),MUM ),RCSe ) ) ,RMSe ) ) / ( MUR + MUR ) )", "obj1": 0.36220472440944884, "obj2": 0.4890613407873901}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "Min( Max( ( MRS + BR ),Max( ( PN - ( CRS - ( ( Const + MDR ) / ACS ) ) ),FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_Mem ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( RMSe + Max( ( MUM + MUC ),( MLU - MUR ) ) ) ) ,( RCSe + ( RRSe + ( DS * RRSe ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7833006734132989}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,BR ),( BR + FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,CRS ) / FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( ( MUC / Min( DS ,DS ) ) * ( ( MUM - Min( RCSe ,MUC ) ) - MUM ) ),MLU ) / DS ),( ( ( Max( ( Min( ( CS + MUC ) ,RMSe ) - ( Max( RCSe,MUR ) / ( RMSe / RRSe ) ) ),( CS - RRSe ) ) - ( CS / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.47164113243124806}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( ( Max( Min( CS ,( MLU / DS ) ),Max( CS,Min( RMSe ,MUC ) ) ) + RRSe ) ,DS ) ),( CS - Min( RCSe ,( RRSe / RCSe ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6217956210194872}, {"determining": "Min( Max( ( MRS + BR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_Mem ) + ARS ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7458289979160181}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR + RRS ) / Max( ( ( FirstVNF_RAM_Server - ( CRS * FirstVNF_Mem ) ) + FirstVNF_CPU ),RRS ) ) ) )", "choosing": "( ( ( MUM + ( RMSe + ( ( DS + DS ) - RMSe ) ) ) - CS ) / Max( RCSe,MUR ) )", "obj1": 0.3641732283464567, "obj2": 0.48755525634384694}, {"determining": "( Max( PN,FirstVNF_Mem_Server ) + ( MRS - ( Max( FirstVNF_CPU_Server,BR ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUM ) / ( ( ( MLU / MLU ) + RRSe ) - ( MUM - RRSe ) ) ) + ( RMSe - Min( ( RMSe + RRSe ) ,Max( Max( ( MLU + MUR ),MUM ),Max( Max( MUR,Max( MUC,RMSe ) ),DS ) ) ) ) ) * MUR )", "obj1": 0.9547244094488189, "obj2": 0.018132630257409178}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7350309263654948}, {"determining": "( Max( ( ( Min( ( ( ( MRS - Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) - AMS ) ,( ( BR / FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / BR ) ) ) ) * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),CRS ) * ( Const * MDR ) )", "choosing": "Min( Max( ( RCSe - ( DS / MUR ) ),( MUR + RMSe ) ) ,( ( ( Max( Min( MLU ,RMSe ),( RMSe / Max( RRSe,MUR ) ) ) - ( MUC + CS ) ) * ( ( Max( MUC,RCSe ) - ( RCSe + ( MUM + DS ) ) ) - ( ( RRSe * ( RRSe + Min( DS ,RCSe ) ) ) - RRSe ) ) ) + RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( Max( ( ( AMS * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( FirstVNF_CPU / ( ( DDR / Min( ( MRS - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ) / Max( ( AMS - ( BR / FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.4448818897637795, "obj2": 0.39392501856044154}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7350309263654948}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( Min( ( Min( ( ( Max( RRS,BR ) + MDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * CRS ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS + RRSe ) / ( RCSe * ( ( DS + DS ) / CS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8769102588037244}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Min( FirstVNF_CPU_Server ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) ) ),DS ) )", "obj1": 0.3228346456692913, "obj2": 0.5373169551855257}, {"determining": "Max( ( FirstVNF_CPU + BR ),( ( ( DDR + FirstVNF_Mem ) + ( RRS / MDR ) ) + ( Min( FirstVNF_CPU_Server ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + AMS ) ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / Max( MUC,DS ) ) ,MUR ) ) ) ),DS ) )", "obj1": 0.3169291338582677, "obj2": 0.5428032645148431}, {"determining": "( Min( ( ACS + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) + ( Const + RRS ) ) ) ,PN ) / ( ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.2125984251968504, "obj2": 0.632596955837935}, {"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,Min( CRS ,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / ( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) * ( Const * BR ) ) )", "choosing": "( ( ( Max( ( MUM * MUM ),MUC ) / Max( RCSe,MUC ) ) - Min( Min( Max( ( RMSe + RRSe ),( MUR + RCSe ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) ,CS ) ) * MUR )", "obj1": 0.21850393700787402, "obj2": 0.6238699513558241}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR - Min( MUR ,CS ) ) * Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ) )", "obj1": 0.9665354330708661, "obj2": 0.014179013490660189}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.84251968503937, "obj2": 0.06923323720772609}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),( PN - DDR ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( Max( MUC,DS ) / ( RCSe * DS ) )", "obj1": 0.9173228346456693, "obj2": 0.040015185919753345}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,DDR ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( RRSe + Max( ( MUR * CS ),Min( MUM ,RRSe ) ) ) + RMSe ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29087649951076167}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( FirstVNF_CPU / ( ( DDR / Min( ( FirstVNF_RAM_Server - MRS ) ,( FirstVNF_RAM / ACS ) ) ) / Max( ( AMS + ( BR / FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( CS,MLU ) / DS ),( ( ( ( MUC / MUC ) - Max( ( DS * ( CS * ( RRSe * MUM ) ) ),CS ) ) + MLU ) / MLU ) )", "obj1": 0.421259842519685, "obj2": 0.42795871353678566}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.43375698165747656}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + MUR ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.025851384658059685}, {"determining": "Min( ( FirstVNF_RAM_Server + ( BR - DDR ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( RCSe * CS ) * ( DS - CS ) )", "obj1": 0.9311023622047244, "obj2": 0.027709935346508736}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,( CS - MUM ) ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.38976377952755903, "obj2": 0.46586556758935727}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6080077339942311}, {"determining": "Min( ( FirstVNF_RAM_Server + ( BR - DDR ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( RCSe * CS ) * ( DS - CS ) )", "obj1": 0.9311023622047244, "obj2": 0.027709935346508736}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( ( ( ( FirstVNF_CPU * FirstVNF_CPU ) + ( MRS + ( FirstVNF_CPU + AMS ) ) ) * ARS ) ,( Const * RRS ) ) ),( MDR + RRS ) ) ,( ( ( ( AMS - FirstVNF_Mem_Server ) - ( Max( MRS,MRS ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / ( RMSe + Min( ( ( ( MUM + RMSe ) + MUR ) - Min( RRSe ,( ( MLU * DS ) * Min( MUR ,CS ) ) ) ) ,MUR ) ) ),( ( ( Max( CS,( DS * Min( RCSe ,RMSe ) ) ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.4251968503937008, "obj2": 0.4245538134694243}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) + Max( MRS,FirstVNF_RAM_Server ) ) / ( ( ( ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ( ARS - ( Const * AMS ) ) - FirstVNF_Mem_Server ) ) * ( FirstVNF_RAM - PN ) ) + ACS ) + ( ACS + Const ) ) )", "choosing": "Min( ( ( RCSe / ( ( RMSe * RCSe ) * ( RCSe - DS ) ) ) + ( ( ( RMSe * RCSe ) * ( ( ( ( MUC * MLU ) + MUC ) + ( MLU / CS ) ) - DS ) ) / RCSe ) ) ,( MUR + ( MLU + MUC ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0017854588325800422}, {"determining": "Min( FirstVNF_Mem ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( DS,DS ) ) + RCSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.49803149606299213, "obj2": 0.2953888201306638}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.8641732283464567, "obj2": 0.05028533843517441}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( PN * ( Min( ACS ,FirstVNF_Mem ) + Min( BR ,RRS ) ) ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6080077339942311}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.12241272342789186}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR + Min( MUR ,RMSe ) ) / ( RCSe + MUR ) )", "obj1": 0.39763779527559057, "obj2": 0.4616248444155497}], "11": [{"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * RRS ) ) / Min( ( ( BR + Min( ( ( Min( FirstVNF_RAM ,RRS ) + ARS ) + Const ) ,Max( ( BR / FirstVNF_Mem_Server ),ARS ) ) ) * ( ACS * ( FirstVNF_CPU_Server / AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "( ( CS - ( Max( ( RRSe * ( RMSe + CS ) ),Min( MUC ,MUC ) ) / RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( Min( ( Min( ( ( Max( RRS,BR ) + MDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * CRS ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS + RRSe ) / ( RCSe * ( ( DS + DS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ( Min( ( AMS * ( ARS * ( ARS * RRS ) ) ) ,FirstVNF_CPU_Server ) + ( MRS * FirstVNF_RAM ) ) - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * RRSe ) - ( RRSe + ( DS / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( MUC,DS ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / ( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) ),( ( ( Max( ( DS * Min( RMSe ,( CS - RCSe ) ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.6377952755905512, "obj2": 0.24563283998801436}, {"determining": "( ( ( ( ( ( ( ACS / FirstVNF_Mem_Server ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) * Max( MRS,Max( ACS,MRS ) ) ) + FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( ( MUC - RCSe ) + MLU ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( CS * RCSe ) + RRSe ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16490312075761823}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25962903890786043}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,PN ) / ( MRS * Const ) )", "choosing": "( MUR / ( ( RCSe * DS ) * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( CS ,MUR ) ) ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.22348281072081727}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - DDR ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,( CS - RCSe ) ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.3865898288863405}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ) + RRSe ) ) )", "obj1": 0.5354330708661418, "obj2": 0.27651727072450116}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.14912235092979936}, {"determining": "( ( ( FirstVNF_RAM / AMS ) + ( ( Min( RRS ,Const ) + DDR ) / AMS ) ) + Min( RRS ,( Const * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( Min( RRSe ,( Min( CS ,Min( ( RRSe / MLU ) ,( RMSe / MUM ) ) ) * ( MUC + MLU ) ) ) * Min( RRSe ,( Min( MUM ,RMSe ) * ( Min( CS ,MUR ) - MLU ) ) ) ) ) / ( MUC + ( ( Min( ( RRSe * ( RCSe / MUR ) ) ,( RCSe + ( MLU + DS ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.32537672394163164}, {"determining": "( ( PN * ( ARS + Max( Min( DDR ,( RRS + RRS ) ),Max( FirstVNF_CPU_Server,MRS ) ) ) ) + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( MDR * Max( ( ARS + FirstVNF_CPU_Server ),Min( Const ,FirstVNF_CPU_Server ) ) ) ) - AMS ) )", "choosing": "( Max( ( Max( RCSe,DS ) * ( MLU + RCSe ) ),Max( MUR,Min( CS ,RRSe ) ) ) / ( RCSe * ( Min( ( Min( DS ,Max( ( MUM + MLU ),DS ) ) + MUM ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.30072293877987194}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "( Min( ( ( PN - ( Min( CRS ,FirstVNF_Mem ) - ( FirstVNF_RAM + CRS ) ) ) + ( Const / PN ) ) ,PN ) / ( FirstVNF_CPU * Const ) )", "choosing": "( MUR / ( ( RCSe * DS ) * ( CS + Max( ( Max( ( MUR * RRSe ),DS ) * MUC ),Max( CS,Min( Min( CS ,( DS - MUC ) ) ,MUR ) ) ) ) ) )", "obj1": 0.6633858267716536, "obj2": 0.22463535888852232}, {"determining": "( Min( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) ) ,( Max( MRS,FirstVNF_Mem ) - Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( MUC ,( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.09240074448653715}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( Min( ( ACS + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5748207101348228}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.44291338582677164, "obj2": 0.39036385832749454}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6575692411602552}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05437972544401761}, {"determining": "Min( ( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) / Min( DDR ,FirstVNF_CPU_Server ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( RCSe,( ( CS / Min( MUC ,RMSe ) ) * MUC ) ) + Min( ( RMSe + RRSe ) ,RCSe ) ) ) )", "obj1": 0.7224409448818898, "obj2": 0.13810754252455631}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.28288576304541224}, {"determining": "( ( PN * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) - ( RMSe * RCSe ) )", "obj1": 0.40551181102362205, "obj2": 0.43703693375013986}, {"determining": "( Min( PN ,( MDR - Min( ( FirstVNF_Mem_Server - CRS ) ,FirstVNF_Mem_Server ) ) ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / CS ) + RRSe ) - ( ( DS * ( ( Max( ( ( RCSe - MUC ) - MLU ),Min( ( RMSe - MUR ) ,DS ) ) * ( ( ( RMSe * MUR ) / ( RRSe - RCSe ) ) - ( Max( RRSe,MUM ) + MUM ) ) ) - ( ( MLU - ( ( MUR - MLU ) / RRSe ) ) / RRSe ) ) ) * MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5492242149088165}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( Max( ( FirstVNF_RAM_Server / DDR ),MDR ) * FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( MUR - MLU ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25962903890786043}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.90748031496063, "obj2": 0.041173204531257716}, {"determining": "( ( ( Max( ( Max( FirstVNF_Mem,( Min( ARS ,ARS ) / DDR ) ) * ( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( ( RMSe + CS ) + MUC ) + RCSe ) ) ,( RCSe + ( RRSe + ( DS * RCSe ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7226206485709789}, {"determining": "( Min( Min( ( Const * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5675785647509342}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,Min( Min( FirstVNF_CPU_Server ,Const ) ,FirstVNF_CPU ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,AMS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( RMSe + ( MUC * Max( MUR,MUM ) ) ) / ( MUR + Min( MUR ,RMSe ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4616248444155497}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7401574803149606, "obj2": 0.1310864942501085}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.8346456692913385, "obj2": 0.06367115907024204}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( MLU,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5265674539974923}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( Max( DS,RCSe ) * MUC ),Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( ( RMSe - DS ),DS ) ) + RMSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07747400525545903}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5590721636422842}, {"determining": "( Min( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + ACS ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / DS ) * CS ) ,Min( CS ,Max( ( DS / RMSe ),Min( RMSe ,( MUM - RCSe ) ) ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6831316932303914}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( ( DS - MUR ) + ( RRSe + ( DS - Min( MUC ,DS ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03742584097887646}, {"determining": "( ( RRS + ( ( CRS + ACS ) + FirstVNF_CPU ) ) - ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + DS ) - ( RCSe / ( MUC * RMSe ) ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe * RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,BR ),( BR + FirstVNF_Mem ) ) ,( Min( FirstVNF_RAM ,CRS ) / FirstVNF_CPU ) )", "choosing": "Max( ( Max( ( ( MUC / Min( DS ,DS ) ) * ( ( MUM - Min( RCSe ,MUC ) ) - MUM ) ),MLU ) / DS ),( ( ( Max( ( Min( ( CS + MUC ) ,RMSe ) - ( Max( RCSe,MUR ) / ( RMSe / RRSe ) ) ),( CS - RRSe ) ) - ( CS / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.3858267716535433, "obj2": 0.47164113243124806}, {"determining": "Min( ( ( FirstVNF_RAM - ( DDR - ( CRS / RRS ) ) ) * ( RRS + Min( CRS ,( MDR / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( DS - RCSe ) * ( Max( RMSe,RMSe ) / MLU ) )", "obj1": 0.3031496062992126, "obj2": 0.5473513141463189}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10127926093552855}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "Min( ( RRS * FirstVNF_Mem_Server ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,( ( Min( DS ,MUC ) / DS ) / MLU ) ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.43503937007874016, "obj2": 0.4184668665736465}, {"determining": "( Max( ( ( Min( ( ( ( MRS - Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) - AMS ) ,( ( BR / FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / BR ) ) ) ) * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),CRS ) * ( Const * MDR ) )", "choosing": "Min( Max( ( RCSe - ( DS / MUR ) ),( MUR + RMSe ) ) ,( ( ( Max( Min( MLU ,RMSe ),( RMSe / Max( RRSe,MUR ) ) ) - ( MUC + CS ) ) * ( ( Max( MUC,RCSe ) - ( RCSe + ( MUM + DS ) ) ) - ( ( RRSe * ( RRSe + Min( DS ,RCSe ) ) ) - RRSe ) ) ) + RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Max( ( DS / DS ),( DS / RCSe ) )", "obj1": 0.8641732283464567, "obj2": 0.050285338435174395}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) ) ),DS ) )", "obj1": 0.31299212598425197, "obj2": 0.5431337122554988}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1830708661417323, "obj2": 0.6859693818401666}, {"determining": "( Min( ( ( PN - DDR ) + Max( PN,Const ) ) ,PN ) / ( ( MRS * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( CS,MUM ) - ( ( Min( RMSe ,( Max( ( RRSe - ( CS * MUR ) ),DS ) - RRSe ) ) * Max( DS,Min( MUM ,MUM ) ) ) + RMSe ) )", "obj1": 0.7618110236220472, "obj2": 0.12241272342789186}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,BR ) * ( FirstVNF_Mem_Server * Const ) ) * CRS ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * ( DDR + ARS ) ) ) )", "choosing": "Min( ( ( ( MUR + Min( CS ,RMSe ) ) + ( Max( Min( Min( Max( MUR,DS ) ,DS ) ,MUC ),( ( ( MUR + RCSe ) - Min( MUR ,RMSe ) ) - ( MLU - ( MUR - RRSe ) ) ) ) + Min( DS ,MUR ) ) ) / ( ( RMSe + MUC ) - ( DS / MUR ) ) ) ,( ( MUR * RRSe ) + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7325959124323805}, {"determining": "Min( ( ACS / Max( Max( CRS,RRS ),FirstVNF_CPU_Server ) ) ,Min( MRS ,( DDR + ARS ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),( ( CS * ( ( MUM + RMSe ) / MUC ) ) + RMSe ) ) / ( RCSe * ( RRSe / MUR ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6384561121939104}, {"determining": "Min( Max( ( DDR / Max( ( FirstVNF_RAM - MDR ),AMS ) ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - CRS ) ) )", "choosing": "( ( ( ( ( Min( ( ( DS + MUR ) / MLU ) ,( Min( RMSe ,MUR ) - ( CS / RMSe ) ) ) + MUM ) + CS ) - Max( RMSe,MUR ) ) + MUC ) * ( ( RMSe * MUM ) * DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5085315034742484}, {"determining": "( Min( Min( ( Const * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( RMSe - ( Min( DS ,RMSe ) - ( MLU - ( DS * RRSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5310502602029723}, {"determining": "( ( FirstVNF_RAM + ( ( MRS - Min( ( FirstVNF_Mem * ( ( AMS + PN ) / PN ) ) ,( ( ACS / ( PN * BR ) ) - FirstVNF_Mem ) ) ) + BR ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( Min( Min( ( MUM / RMSe ) ,MUR ) ,CS ) - ( RCSe / CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7719393554594511}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( BR,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR + Min( ( Max( ( DS * Min( RMSe ,( CS - RCSe ) ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) ,RMSe ) ) / ( RCSe + MUR ) )", "obj1": 0.984251968503937, "obj2": 0.007398050642560468}, {"determining": "( ( MRS - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Max( DS,MUC ),Min( MUM ,MUR ) ),( Min( RMSe ,( ( ( MUM - Min( MUC ,MUM ) ) + RMSe ) * MUR ) ) + Min( MUM ,Max( MLU,MUC ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6044904133990888}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + Max( Min( ARS ,BR ),BR ) ) ) / ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,DDR ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( RRSe + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),DS ) )", "obj1": 0.3543307086614173, "obj2": 0.5064870512559567}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( MRS - ( PN * ( ( Const + Min( FirstVNF_CPU_Server ,MDR ) ) - Min( MDR ,MDR ) ) ) ) / MDR ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( RRSe - MUR ) - Min( MUR ,CS ) ) * ( DS / RCSe ) )", "obj1": 0.3700787401574803, "obj2": 0.4773292222030435}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "Min( Max( Max( BR,FirstVNF_Mem ),Min( Const ,FirstVNF_Mem_Server ) ) ,( ( AMS / ( MRS - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( CS / ( MUM + ( ( ( RCSe - ( RMSe - RMSe ) ) + ( MUM / MUM ) ) * MUC ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.5058251290522882}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( FirstVNF_CPU / ( ( DDR / Min( ( FirstVNF_RAM_Server - MRS ) ,( FirstVNF_RAM / ACS ) ) ) / Max( ( AMS + ( BR / FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( CS,MLU ) / DS ),( ( ( ( MUC / MUC ) - Max( ( DS * ( CS * ( RRSe * MUM ) ) ),CS ) ) + MLU ) / MLU ) )", "obj1": 0.421259842519685, "obj2": 0.42795871353678566}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,BR ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.16929133858267717, "obj2": 0.7069301038727677}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR - Min( MUR ,CS ) ) * Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ) )", "obj1": 0.9665354330708661, "obj2": 0.014179013490660189}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.43375698165747656}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + Min( Max( DDR,CRS ) ,CRS ) ) * ( ACS * ( FirstVNF_CPU_Server - AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( Max( ( MUR / CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + ( DS * RCSe ) ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7417538197244391}, {"determining": "( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) )", "choosing": "( Max( CS,( ( MUM * ( MUM * Min( ( DS / RRSe ) ,MUM ) ) ) + RRSe ) ) - Min( ( ( ( RMSe - ( Min( Min( MLU ,RMSe ) ,( MLU - DS ) ) / ( MUC - MUR ) ) ) - CS ) + ( ( MLU * DS ) / MUR ) ) ,RRSe ) )", "obj1": 0.9744094488188977, "obj2": 0.010660985004373416}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.812992125984252, "obj2": 0.07470523285769703}, {"determining": "Min( ( FirstVNF_RAM_Server + ( BR - DDR ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( RCSe * CS ) * ( DS - CS ) )", "obj1": 0.9311023622047244, "obj2": 0.027709935346508733}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( FirstVNF_CPU_Server + ( FirstVNF_CPU * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) ) + ( Max( ACS,RRS ) / ( RRS + MDR ) ) ) )", "choosing": "( ( MUR + Min( ( DS - Max( Max( Min( RCSe ,MLU ),MUM ),RCSe ) ) ,RMSe ) ) / ( MUR + MUR ) )", "obj1": 0.36220472440944884, "obj2": 0.4890613407873901}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + MUR ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.9448818897637795, "obj2": 0.025851384658059685}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( RCSe / MUM ) )", "obj1": 0.38779527559055116, "obj2": 0.4636397413046258}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( MRS,Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,Min( MUR ,RMSe ) ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.3865898288863405}, {"determining": "( Max( CRS,FirstVNF_RAM_Server ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( FirstVNF_RAM_Server - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( ( Max( Min( CS ,( MLU / DS ) ),Max( CS,Min( RMSe ,MUC ) ) ) + RRSe ) ,DS ) ),( CS - Min( RCSe ,( RRSe / RCSe ) ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6217956210194872}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7145669291338582, "obj2": 0.14758624510521148}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( ( ( ( FirstVNF_CPU * FirstVNF_CPU ) + ( MRS + ( FirstVNF_CPU + AMS ) ) ) * ARS ) ,( Const * RRS ) ) ),( MDR + RRS ) ) ,( ( ( ( AMS - FirstVNF_Mem_Server ) - ( Max( MRS,MRS ) - ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) + FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / ( RMSe + Min( ( ( ( MUM + RMSe ) + MUR ) - Min( RRSe ,( ( MLU * DS ) * Min( MUR ,CS ) ) ) ) ,MUR ) ) ),( ( ( Max( CS,( DS * Min( RCSe ,RMSe ) ) ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / MLU ) )", "obj1": 0.4251968503937008, "obj2": 0.4245538134694243}, {"determining": "( Min( ( ( PN - ( Min( CRS ,FirstVNF_Mem ) - ( FirstVNF_RAM + CRS ) ) ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + ACS ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / CS ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6969097675456125}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * AMS ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.768646275587016}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,DDR ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( RRSe + Max( ( MUR * CS ),Min( MUM ,RRSe ) ) ) + RMSe ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) / CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( DS,RCSe ) * MUC ) + Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( ( RMSe - DS ),( MUM + RMSe ) ) ) + RMSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07747400525545903}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7452416033707555}, {"determining": "( Max( Max( ( PN - DDR ),( Min( Min( RRS ,BR ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server + MRS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( ( RRS - CRS ) - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,Max( MUC,Max( ( ( Max( RRSe,RRSe ) - DS ) * MUM ),RCSe ) ) ) / ( DS * DS ) )", "obj1": 0.08661417322834646, "obj2": 0.8509912882385178}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / Const ) ) ,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUC + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.75, "obj2": 0.13061066247033615}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1279527559055118, "obj2": 0.755171151554463}, {"determining": "( Max( ( ( AMS * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( ( PN * ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( ( FirstVNF_Mem_Server * Const ) * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( ( RRSe + CS ) * MUC ),Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( DS,DS ) ) + RCSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0027522143270731513}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( Min( ( Min( ( ( Max( RRS,BR ) + MDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * CRS ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS + RRSe ) / ( RCSe * ( ( DS + DS ) / CS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8769102588037244}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * AMS ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8623647782879171}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.7696850393700787, "obj2": 0.10127926093552855}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.33267716535433073, "obj2": 0.5140104230486171}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - Max( MDR,CRS ) ) ) + Min( ACS ,( FirstVNF_Mem / RRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( RCSe * ( MUC + ( Max( ( RMSe - MUC ),RMSe ) / MLU ) ) ) + RRSe ) ) )", "obj1": 0.812992125984252, "obj2": 0.07470523285769703}, {"determining": "( ( PN * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUM ) / ( ( ( MLU / MLU ) + RRSe ) - ( MUM - RRSe ) ) ) + ( RMSe - Min( ( RMSe + RRSe ) ,Max( Max( ( MLU + MUR ),MUM ),Max( Max( MUR,Max( MUC,RMSe ) ),DS ) ) ) ) ) * MUR )", "obj1": 0.4330708661417323, "obj2": 0.41965109157667946}, {"determining": "( ( PN - DDR ) / Min( Max( ( BR + RRS ),( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR - MLU ) ,( Max( ( RRSe - ( MUR * CS ) ),DS ) - MLU ) )", "obj1": 0.9566929133858267, "obj2": 0.017923078488528265}, {"determining": "( Min( ( ( Max( BR,FirstVNF_CPU ) - DDR ) + Max( ( CRS + MRS ),Max( ( BR + FirstVNF_CPU_Server ),ARS ) ) ) ,PN ) / ( ARS - RRS ) )", "choosing": "Min( ( CS * ( ( ( ( ( Min( CS ,RMSe ) + Max( MUC,MUR ) ) + CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MUR / ( ( ( RCSe - RCSe ) - RCSe ) + ( RMSe / RCSe ) ) ) ) / ( CS - MUC ) ) ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6969097675456125}, {"determining": "( Min( ( ( PN - DDR ) + Min( RRS ,( Const * RRS ) ) ) ,PN ) / ( ( MRS * FirstVNF_Mem_Server ) * Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( Max( CS,MUM ) - ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) )", "obj1": 0.9468503937007874, "obj2": 0.020931547722481833}, {"determining": "( Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "Min( ( ( DS - Max( MUM,( MLU - RRSe ) ) ) / ( MUR + Max( Max( RCSe,RRSe ),( RCSe - DS ) ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.8267716535433071, "obj2": 0.06828729386079771}, {"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,Min( CRS ,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) / ( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) * ( Const * BR ) ) )", "choosing": "( ( ( Max( ( MUM * MUM ),MUC ) / Max( RCSe,MUC ) ) - Min( Min( Max( ( RMSe + RRSe ),( MUR + RCSe ) ) ,Max( ( MLU + CS ),( MUC / MUR ) ) ) ,CS ) ) * MUR )", "obj1": 0.21850393700787402, "obj2": 0.6238699513558241}], "12": [{"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * RRS ) ) / Min( ( ( BR + Min( ( ( Min( FirstVNF_RAM ,RRS ) + ARS ) + Const ) ,Max( ( BR / FirstVNF_Mem_Server ),ARS ) ) ) * ( ACS * ( FirstVNF_CPU_Server / AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "( ( CS - ( Max( ( RRSe * ( RMSe + CS ) ),Min( MUC ,MUC ) ) / RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "( ( MRS - ( DDR * ( ( FirstVNF_RAM * ACS ) * ( AMS * FirstVNF_RAM_Server ) ) ) ) + ( MRS - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * RCSe ) - ( RMSe / ( MUC + ( MUC - ( RCSe * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( Min( ( Min( ( ( Max( RRS,BR ) + MDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * CRS ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS + RRSe ) / ( RCSe * ( ( DS + DS ) / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( MUC,DS ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( FirstVNF_Mem,MRS ) ) ) + ( ACS - RRS ) )", "choosing": "Min( ( RCSe + ( ( DS * RRSe ) + RRSe ) ) ,Max( MUR,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.1960512888885318}, {"determining": "Min( Max( ( MDR + RRS ),Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - Const ) ) )", "choosing": "( ( MUR / ( RCSe * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC * MUR ) ) ) + ( MUR / ( MUC - RCSe ) ) ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25951041264739494}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,BR ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,ARS ) ) )", "choosing": "( ( MUR / ( RCSe * ( MUC + CS ) ) ) / ( MUC - ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( Max( DS,( ( MUR * RMSe ) * ( RMSe - MUR ) ) ) - ( DS * ( CS * RRSe ) ) ) ) + RMSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.22608712077920776}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( FirstVNF_RAM + ( ( ( Max( Max( ACS,MRS ),MRS ) * Min( BR ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * DDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( Max( MUM,MUM ) + CS ) + Max( ( RMSe + CS ),( CS - RCSe ) ) ) ) ,( RCSe + ( ( DS * RCSe ) + Min( ( MUR * Max( MUC,Max( Max( MUM,MUR ),( DS * DS ) ) ) ) ,Max( ( RMSe + MUR ),Min( MUC ,Min( ( RMSe - MUR ) ,Max( MLU,RMSe ) ) ) ) ) ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( Max( ( FirstVNF_RAM_Server / DDR ),MDR ) * FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( MUR - MLU ) + RMSe ) ) )", "obj1": 0.6122047244094488, "obj2": 0.22836684962888004}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MLU ),Min( Max( ( RCSe * RMSe ),Max( CS,CS ) ) ,MUM ) ) - CS ) * ( ( MUR - CS ) / ( ( ( RRSe + RMSe ) / RRSe ) + ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( ( ( FirstVNF_RAM / AMS ) + ( ( Min( RRS ,Const ) + DDR ) / AMS ) ) + Min( RRS ,( Const * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( Min( RRSe ,( Min( CS ,Min( ( RRSe / MLU ) ,( RMSe / MUM ) ) ) * ( MUC + MLU ) ) ) * Min( RRSe ,( Min( MUM ,RMSe ) * ( Min( CS ,MUR ) - MLU ) ) ) ) ) / ( MUC + ( ( Min( ( RRSe * ( RCSe / MUR ) ) ,( RCSe + ( MLU + DS ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.32537672394163164}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.15782372547444312}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "( ( PN * ( ARS + Max( Min( DDR ,( RRS + RRS ) ),Max( FirstVNF_CPU_Server,MRS ) ) ) ) + ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( MDR * Max( ( ARS + FirstVNF_CPU_Server ),Min( Const ,FirstVNF_CPU_Server ) ) ) ) - AMS ) )", "choosing": "( Max( ( Max( RCSe,DS ) * ( MLU + RCSe ) ),Max( MUR,Min( CS ,RRSe ) ) ) / ( RCSe * ( Min( ( Min( DS ,Max( ( MUM + MLU ),DS ) ) + MUM ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.30072293877987194}, {"determining": "( MRS + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( ( MUR + Min( RMSe ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.7381889763779528, "obj2": 0.12175439574694087}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( RCSe / MUM ) )", "obj1": 0.3543307086614173, "obj2": 0.490933142578326}, {"determining": "Min( Max( ( DDR / Max( ( FirstVNF_RAM - MDR ),AMS ) ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - CRS ) ) )", "choosing": "( ( ( ( ( Min( ( ( DS + MUR ) / MLU ) ,( Min( RMSe ,MUR ) - ( CS / RMSe ) ) ) + MUM ) + CS ) - Max( RMSe,MUR ) ) + MUC ) * ( ( RMSe * MUM ) * DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5085315034742484}, {"determining": "( ( ( ( ( ( ( ACS / FirstVNF_Mem_Server ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) * Max( MRS,Max( ACS,MRS ) ) ) + FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( ( MUC - RCSe ) + MLU ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( CS * RCSe ) + RRSe ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16490312075761823}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( DS + MLU ) ,( MLU + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.10713103819072686}, {"determining": "( Min( PN ,( MDR - Min( ( FirstVNF_Mem_Server - CRS ) ,FirstVNF_Mem_Server ) ) ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / CS ) + RRSe ) - ( ( DS * ( ( Max( ( ( RCSe - MUC ) - MLU ),Min( ( RMSe - MUR ) ,DS ) ) * ( ( ( RMSe * MUR ) / ( RRSe - RCSe ) ) - ( Max( RRSe,MUM ) + MUM ) ) ) - ( ( MLU - ( ( MUR - MLU ) / RRSe ) ) / RRSe ) ) ) * MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.3838582677165354, "obj2": 0.46934125933375914}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * Min( RMSe ,( CS - RCSe ) ) ),CS ) - ( MUC / ( RCSe / DS ) ) ) + MLU ) / ( Min( DS ,MUR ) - Max( Min( ( RCSe / MUM ) ,( MUR - CS ) ),( CS - DS ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.3865898288863405}, {"determining": "( ( Const * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - Max( ( BR + PN ),AMS ) ) )", "choosing": "( ( RCSe / ( MUM + ( Min( MLU ,RRSe ) * ( RCSe / RRSe ) ) ) ) - ( RMSe * RCSe ) )", "obj1": 0.41732283464566927, "obj2": 0.4213109221266389}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( Max( ( Max( DS,RCSe ) * MUC ),Max( MUR,Min( CS ,MUR ) ) ) / ( RCSe * ( Min( ( Min( MUC ,Max( ( RMSe - DS ),( MUR * CS ) ) ) + RMSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.10000117063098603}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.90748031496063, "obj2": 0.041173204531257716}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.7736220472440944, "obj2": 0.09694340253351408}, {"determining": "( ( ( Max( ( Max( FirstVNF_Mem,( Min( ARS ,ARS ) / DDR ) ) * ( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( ( RMSe + CS ) + MUC ) + RCSe ) ) ,( RCSe + ( RRSe + ( DS * RCSe ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7226206485709789}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( Max( ( FirstVNF_RAM_Server / DDR ),MDR ) * FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( MUR - MLU ) + RMSe ) ) )", "obj1": 0.6122047244094488, "obj2": 0.22836684962888004}, {"determining": "( ( MRS - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Max( DS,MUC ),Min( MUM ,MUR ) ),( Min( RMSe ,( ( ( MUM - Min( MUC ,MUM ) ) + RMSe ) * MUR ) ) + Min( MUM ,Max( MLU,MUC ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6044904133990888}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( MLU,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.3248031496062992, "obj2": 0.5265674539974923}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1889763779527559, "obj2": 0.6704491732176866}, {"determining": "( ( PN * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + MUM ) / ( ( ( MLU / MLU ) + RRSe ) - ( MUM - RRSe ) ) ) + ( RMSe - Min( ( RMSe + RRSe ) ,Max( Max( ( MLU + MUR ),MUM ),Max( Max( MUR,Max( MUC,RMSe ) ),DS ) ) ) ) ) * MUR )", "obj1": 0.4330708661417323, "obj2": 0.41965109157667946}, {"determining": "( Min( Min( ( Const * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.5675785647509342}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5492242149088165}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.13487531520255652}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + MUC ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.262847983936618}, {"determining": "( Max( ( ( Min( ( ( ( MRS - Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) - AMS ) ,( ( BR / FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / BR ) ) ) ) * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),CRS ) * ( Const * MDR ) )", "choosing": "Min( Max( ( RCSe - ( DS / MUR ) ),( MUR + RMSe ) ) ,( ( ( Max( Min( MLU ,RMSe ),( RMSe / Max( RRSe,MUR ) ) ) - ( MUC + CS ) ) * ( ( Max( MUC,RCSe ) - ( RCSe + ( MUM + DS ) ) ) - ( ( RRSe * ( RRSe + Min( DS ,RCSe ) ) ) - RRSe ) ) ) + RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * AMS ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR + Min( CS ,RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8623647782879171}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( Min( Min( ( Const * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( RMSe - ( Min( DS ,RMSe ) - ( MLU - ( DS * RRSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5389375720798856}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07651035109449074}, {"determining": "Min( ( ( FirstVNF_RAM - ( DDR - ( CRS / RRS ) ) ) * ( RRS + Min( CRS ,( MDR / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( DS - RCSe ) * ( Max( RMSe,RMSe ) / MLU ) )", "obj1": 0.3031496062992126, "obj2": 0.5473513141463189}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,BR ) * ( FirstVNF_Mem_Server * Const ) ) * CRS ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * ( DDR + ARS ) ) ) )", "choosing": "Min( ( ( ( MUR + Min( CS ,RMSe ) ) + ( Max( Min( Min( Max( MUR,DS ) ,DS ) ,MUC ),( ( ( MUR + RCSe ) - Min( MUR ,RMSe ) ) - ( MLU - ( MUR - RRSe ) ) ) ) + Min( DS ,MUR ) ) ) / ( ( RMSe + MUC ) - ( DS / MUR ) ) ) ,( ( MUR * RRSe ) + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7325959124323805}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.28288576304541224}, {"determining": "( ( PN * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) - ( RMSe * RCSe ) )", "obj1": 0.40551181102362205, "obj2": 0.43703693375013986}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.4094488188976378, "obj2": 0.43375698165747656}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( Min( ( ACS + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5748207101348228}, {"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * RRS ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( MLU,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.759624904136124}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1279527559055118, "obj2": 0.755171151554463}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,PN ) / ( ( DDR * FirstVNF_Mem ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / MUM ) + RRSe ) - Max( ( MUR + Min( Max( RMSe,MLU ) ,RMSe ) ),DS ) )", "obj1": 0.234251968503937, "obj2": 0.6106350363585943}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( MRS - ( PN * ( ( Const + Min( FirstVNF_CPU_Server ,MDR ) ) - Min( MDR ,MDR ) ) ) ) / MDR ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( RRSe - MUR ) - Min( MUR ,CS ) ) * ( DS / RCSe ) )", "obj1": 0.3700787401574803, "obj2": 0.4773292222030435}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + Const ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( Max( ( DS / RMSe ),Min( RMSe ,( MUM - DS ) ) ) + RRSe ) ) )", "obj1": 0.5413385826771654, "obj2": 0.2724595920944209}, {"determining": "( ( RRS + ( ( CRS + ACS ) + FirstVNF_CPU ) ) - ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + DS ) - ( RCSe / ( MUC * RMSe ) ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe * RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( FirstVNF_CPU / ( Min( ( FirstVNF_Mem * FirstVNF_RAM_Server ) ,PN ) / Max( ( AMS + ( BR / FirstVNF_CPU_Server ) ),FirstVNF_Mem_Server ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( CS,MLU ) / DS ),( ( Max( ( MUC / MUC ),Max( ( Min( ( DS / MUR ) ,( RRSe + DS ) ) * ( CS * ( RRSe * MUM ) ) ),CS ) ) + MLU ) / MLU ) )", "obj1": 0.43503937007874016, "obj2": 0.40634959769631235}, {"determining": "( Max( Max( ( PN - DDR ),( Min( Min( RRS ,BR ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server + MRS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( ( RRS - CRS ) - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,Max( MUC,Max( ( ( Max( RRSe,RRSe ) - DS ) * MUM ),RCSe ) ) ) / ( DS * DS ) )", "obj1": 0.08661417322834646, "obj2": 0.8509912882385178}, {"determining": "Min( ( ACS / Max( Max( CRS,RRS ),FirstVNF_CPU_Server ) ) ,Min( MRS ,( DDR + ARS ) ) )", "choosing": "( Max( ( Max( RCSe,DS ) * MUC ),( ( CS * ( ( MUM + RMSe ) / MUC ) ) + RMSe ) ) / ( RCSe * ( RRSe / MUR ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6384561121939104}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,Min( Min( FirstVNF_CPU_Server ,Const ) ,FirstVNF_CPU ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,AMS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( RCSe / CS ) - ( RMSe * RCSe ) )", "obj1": 0.2578740157480315, "obj2": 0.5739409169429252}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( RRS ,( Const * RRS ) ) ),( MDR + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( Max( DS,MLU ) / DS ) / MLU ) )", "obj1": 0.43700787401574803, "obj2": 0.3989619565488451}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05437972544401761}, {"determining": "( Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + MUR ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.025758873977692887}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( Min( ( Min( ( ( Max( RRS,BR ) + MDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * CRS ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS + RRSe ) / ( RCSe * ( ( DS + DS ) / CS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8769102588037244}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( RCSe / MUM ) )", "obj1": 0.3779527559055118, "obj2": 0.47041438749498804}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ),FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / ( MUR + Min( CS ,RMSe ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.18700787401574803, "obj2": 0.6838906912722257}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5564078489937413}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( ( Max( FirstVNF_Mem,( Min( ARS ,ARS ) / DDR ) ) * ( Const * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( RMSe - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07948261741320206}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.8346456692913385, "obj2": 0.06367115907024204}, {"determining": "( ( ( ( ( ( ACS + ( Min( PN ,ACS ) - CRS ) ) * FirstVNF_RAM ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Max( MUM,( Max( Max( RCSe,RCSe ),MUR ) - ( MUM + RMSe ) ) ) - ( DS / MUR ) ) / ( ( ( RRSe + ( DS * CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( MUR ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7719393554594511}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( FirstVNF_CPU_Server + ( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) * ( ( ( MDR / ( MRS - ( PN * MRS ) ) ) + Min( ACS ,( AMS / ARS ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) ) )", "choosing": "Min( ( ( ( MUR - CS ) / ( ( ( CS - CS ) + Min( ( DS / RMSe ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( ( ( RMSe + ( RCSe - ( MUR - CS ) ) ) / DS ) ,MUR ) )", "obj1": 0.18110236220472442, "obj2": 0.6915394223539675}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.8188976377952756, "obj2": 0.07232407079334416}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.812992125984252, "obj2": 0.07470523285769703}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( RCSe / MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.4822984964634347}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( ( DS - MUR ) + ( RRSe + ( DS - Min( MUC ,DS ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03742584097887646}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05437972544401761}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.2106299212598425, "obj2": 0.6348319522709945}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + Min( Max( DDR,CRS ) ,CRS ) ) * ( ACS * ( FirstVNF_CPU_Server - AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( Max( ( MUR / CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + ( DS * RCSe ) ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7417538197244391}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6292438557953091}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) )", "obj1": 0.9566929133858267, "obj2": 0.015118363258184758}, {"determining": "( Min( ( Min( PN ,DDR ) + ( PN / ( ( Max( ( MDR + CRS ),BR ) / FirstVNF_Mem_Server ) + ( MDR * FirstVNF_Mem ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,( ( MUM * ( ( Min( ( RRSe + MUC ) ,MUC ) + MLU ) * MUM ) ) + RRSe ) ) - Min( ( ( ( RMSe - ( Min( Min( MLU ,MUM ) ,( MLU - DS ) ) / ( MUC - MUR ) ) ) + CS ) + ( RRSe + ( Max( MUC,MUR ) - RCSe ) ) ) ,RRSe ) )", "obj1": 0.9251968503937008, "obj2": 0.03715226002570344}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( FirstVNF_CPU_Server + ( FirstVNF_CPU * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) ) + ( Max( ACS,RRS ) / ( RRS + MDR ) ) ) )", "choosing": "( ( MUR + Min( ( DS - Max( Max( Min( RCSe ,MLU ),MUM ),RCSe ) ) ,RMSe ) ) / ( MUR + MUR ) )", "obj1": 0.36220472440944884, "obj2": 0.4890613407873901}, {"determining": "Min( Max( Min( ( MRS - ( PN * FirstVNF_RAM_Server ) ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,CS ) )", "obj1": 0.8248031496062992, "obj2": 0.06643715903609712}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,( MDR + RRS ) ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( RCSe * ( CS + MUC ) ) * CS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.020847222597122527}, {"determining": "( Min( ( ( Max( BR,FirstVNF_CPU ) - DDR ) + Max( ( CRS + MRS ),Max( ( BR + FirstVNF_CPU_Server ),ARS ) ) ) ,PN ) / ( ARS - RRS ) )", "choosing": "Min( ( CS * ( ( ( ( ( Min( CS ,RMSe ) + Max( MUC,MUR ) ) + CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MUR / ( ( ( RCSe - RCSe ) - RCSe ) + ( RMSe / RCSe ) ) ) ) / ( CS - MUC ) ) ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6969097675456125}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server - ( MRS - FirstVNF_CPU_Server ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6575692411602552}, {"determining": "( Max( ( ( AMS * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "Min( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * Min( CRS ,FirstVNF_Mem ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) ,( ( AMS / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( PN / PN ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR + Min( RCSe ,RRSe ) ) ) + Min( ( RRSe + CS ) ,RCSe ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14631319797653555}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5590721636422842}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.44291338582677164, "obj2": 0.39036385832749454}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) * Max( BR,FirstVNF_Mem ) ) ,( ARS * BR ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( ( Min( CS ,MUR ) + MUR ) - Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( RCSe * DS ) ) ) + ( MUC * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6208632144140548}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.33267716535433073, "obj2": 0.5140104230486171}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8661417322834646, "obj2": 0.04935375218905854}, {"determining": "( ( FirstVNF_RAM + ( ( MRS - Min( ( FirstVNF_Mem * ( ( AMS + PN ) / PN ) ) ,( ( ACS / ( PN * BR ) ) - FirstVNF_Mem ) ) ) + BR ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( Min( Min( ( MUM / RMSe ) ,MUR ) ,CS ) - ( RCSe / CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7719393554594511}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( PN - DDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( Max( ( RRSe - ( CS * MUR ) ),DS ) - RRSe ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.9744094488188977, "obj2": 0.010393513907431434}], "13": [{"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * RRS ) ) / Min( ( ( BR + Min( ( ( Min( FirstVNF_RAM ,RRS ) + ARS ) + Const ) ,Max( ( BR / FirstVNF_Mem_Server ),ARS ) ) ) * ( ACS * ( FirstVNF_CPU_Server / AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "( ( CS - ( Max( ( RRSe * ( RMSe + CS ) ),Min( MUC ,MUC ) ) / RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "Min( Max( Min( ( ( Max( FirstVNF_RAM_Server,MDR ) - ACS ) - FirstVNF_CPU_Server ) ,MRS ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) ) ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( MUR + RCSe ) / ( ( RMSe + MUC ) - ( DS / MUR ) ) ) ) * ( MUC + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ( DDR * ( ( FirstVNF_RAM * ACS ) * ( AMS * FirstVNF_RAM_Server ) ) ) ) + ( MRS - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * RCSe ) - ( RMSe / ( MUC + ( MUC - ( RCSe * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( MUC,DS ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( FirstVNF_Mem,MRS ) ) ) + ( ACS - RRS ) )", "choosing": "Min( ( RCSe + ( ( DS * RRSe ) + RRSe ) ) ,Max( MUR,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.1960512888885318}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + MUC ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2483390326715612}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) + ( ( FirstVNF_Mem_Server - Max( ( ARS * ARS ),Min( Const ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server + ( CRS - Const ) ) ) )", "choosing": "( ( RRSe - Min( Min( Max( Max( ( ( MLU + RRSe ) + RMSe ),RCSe ),Min( ( MUM - ( MUC + MLU ) ) ,( ( MUM / RRSe ) * MUM ) ) ) ,MUM ) ,( MUM + Max( RMSe,MLU ) ) ) ) * ( DS - MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6556990991461963}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + ( RRSe - DS ) ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.3700787401574803, "obj2": 0.4658265840057077}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,RCSe ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.6043307086614174, "obj2": 0.23000092363229202}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( DS + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( RRSe + ( ( ( ( DS + MUR ) / MLU ) / ( ( ( MUR - MUM ) + ( RCSe / MUR ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17836552273154155}, {"determining": "( ( ( FirstVNF_RAM / AMS ) + ( ( Min( RRS ,Const ) + DDR ) / AMS ) ) + Min( RRS ,( Const * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( Min( RRSe ,( Min( CS ,Min( ( RRSe / MLU ) ,( RMSe / MUM ) ) ) * ( MUC + MLU ) ) ) * Min( RRSe ,( Min( MUM ,RMSe ) * ( Min( CS ,MUR ) - MLU ) ) ) ) ) / ( MUC + ( ( Min( ( RRSe * ( RCSe / MUR ) ) ,( RCSe + ( MLU + DS ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.32537672394163164}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.90748031496063, "obj2": 0.041173204531257716}, {"determining": "( ( PN * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( MRS + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) - Min( RMSe ,( ( ( MUM - Min( MUC ,MUM ) ) + RMSe ) * MUR ) ) )", "obj1": 0.4507874015748031, "obj2": 0.38380656693308585}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7047244094488189, "obj2": 0.156702832536382}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( FirstVNF_CPU_Server + ( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) * ( ( ( MDR / ( MRS - ( PN * MRS ) ) ) + Min( ACS ,( AMS / ARS ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) ) )", "choosing": "Min( ( ( ( MUR - CS ) / ( ( ( CS - CS ) + Min( ( DS / RMSe ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( ( ( RMSe + ( RCSe - ( MUR - CS ) ) ) / DS ) ,MUR ) )", "obj1": 0.18110236220472442, "obj2": 0.6915394223539675}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.28288576304541224}, {"determining": "Min( Max( ( MDR + RRS ),Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - Const ) ) )", "choosing": "( ( MUR / ( RCSe * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC * MUR ) ) ) + ( MUR / ( MUC - RCSe ) ) ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25951041264739494}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( ( Const * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "( ( MUR / ( ( ( RCSe / MUM ) + MUC ) * RCSe ) ) / ( MLU - ( ( DS + RCSe ) + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3015433248318601}, {"determining": "( ( ( MDR / ( MRS - ( FirstVNF_RAM_Server - ( AMS / CRS ) ) ) ) + ( Max( RRS,ACS ) / ( MDR + RRS ) ) ) + ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( ( MUM - CS ) / ( ( ( ( ( MLU * RMSe ) * DS ) * ( RMSe - RCSe ) ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( Min( PN ,( MDR - Min( ( FirstVNF_Mem_Server - CRS ) ,FirstVNF_Mem_Server ) ) ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / CS ) + RRSe ) - ( ( DS * ( ( Max( ( ( RCSe - MUC ) - MLU ),Min( ( RMSe - MUR ) ,DS ) ) * ( ( ( RMSe * MUR ) / ( RRSe - RCSe ) ) - ( Max( RRSe,MUM ) + MUM ) ) ) - ( ( MLU - ( ( MUR - MLU ) / RRSe ) ) / RRSe ) ) ) * MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "( Min( Min( ( ( MRS - FirstVNF_RAM ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( ( MUM - Min( RRSe ,RCSe ) ) + RMSe ) + RMSe ) ,DS ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4004790802846293}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "( ( AMS * ( Const * ACS ) ) + ( Const * BR ) )", "choosing": "( Min( ( ( ( MUM / RMSe ) + ( Max( MUM,( ( RRSe * RRSe ) - Min( RCSe ,MUM ) ) ) - RCSe ) ) / Min( CS ,RRSe ) ) ,RMSe ) / ( MUC + Max( ( DS + ( ( ( MUR / ( MUC / CS ) ) / MUC ) / ( ( ( MUC - MUM ) + RRSe ) - RCSe ) ) ),MUR ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "( ( ( ( ( Max( ( DDR + FirstVNF_RAM ),( Min( ACS ,RRS ) - CRS ) ) * FirstVNF_RAM ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( Max( ( ( ( CS / RRSe ) * ( Max( DS,( MUM * MUM ) ) - MUC ) ) - ( Max( ( ( RMSe * MUM ) - ( RMSe + MUR ) ),CS ) - MUC ) ),RCSe ) * MUC ) )", "obj1": 0.11614173228346457, "obj2": 0.7685562899269054}, {"determining": "( ( ( Max( ( Max( FirstVNF_Mem,( Min( ARS ,ARS ) / DDR ) ) * ( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( ( RMSe + CS ) + MUC ) + RCSe ) ) ,( RCSe + ( RRSe + ( DS * RCSe ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7226206485709789}, {"determining": "( Min( CRS ,FirstVNF_CPU ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) - ( ( ( ( MLU / Max( DS,RRSe ) ) / ( DS + RCSe ) ) - RCSe ) * RMSe ) )", "obj1": 0.41929133858267714, "obj2": 0.4197499479677983}, {"determining": "( ( ( Min( Max( ( DDR + FirstVNF_CPU ),Min( Min( RRS ,( MRS - FirstVNF_CPU ) ) ,MRS ) ) ,RRS ) + FirstVNF_RAM_Server ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RCSe - CS ) / ( RRSe + RMSe ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.6811023622047244, "obj2": 0.16034483700285695}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + MUR ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.025758873977692887}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( Max( RRS,PN ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( ARS,FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( DS - ( CS - ( MUC / RCSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - Max( DS,( CS * RRSe ) ) ) ) + RMSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.22608712077920776}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( ACS,FirstVNF_RAM_Server ) ) ) + Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( RCSe - ( ( Min( ( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) * RMSe ) ,( RCSe / MUC ) ) / ( RRSe * ( RMSe / RMSe ) ) ) * DS ) ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "( Min( Min( ( Const * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( RMSe - ( Min( DS ,RMSe ) - ( MLU - ( DS * RRSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5389375720798856}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,BR ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,ARS ) ) )", "choosing": "( ( MUR / ( RCSe * ( MUC + CS ) ) ) / ( MUC - ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( Max( DS,( ( MUR * RMSe ) * ( RMSe - MUR ) ) ) - ( DS * ( CS * RRSe ) ) ) ) + RMSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.22608712077920776}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) ) / ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ),FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + Max( BR,PN ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / Max( ( RCSe * RRSe ),CS ) ) * CS ) ,Min( MUR ,CS ) )", "obj1": 0.7716535433070866, "obj2": 0.09257988427478213}, {"determining": "( Max( ( ( Min( ( ( ( MRS - Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) - AMS ) ,( ( BR / FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / BR ) ) ) ) * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),CRS ) * ( Const * MDR ) )", "choosing": "Min( Max( ( RCSe - ( DS / MUR ) ),( MUR + RMSe ) ) ,( ( ( Max( Min( MLU ,RMSe ),( RMSe / Max( RRSe,MUR ) ) ) - ( MUC + CS ) ) * ( ( Max( MUC,RCSe ) - ( RCSe + ( MUM + DS ) ) ) - ( ( RRSe * ( RRSe + Min( DS ,RCSe ) ) ) - RRSe ) ) ) + RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( ( MRS - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) )", "choosing": "Max( Max( Max( DS,MUC ),Min( MUM ,MUR ) ),( Min( RMSe ,( ( ( MUM - Min( MUC ,MUM ) ) + RMSe ) * MUR ) ) + Min( MUM ,Max( MLU,MUC ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.6044904133990888}, {"determining": "( Min( ( Min( PN ,DDR ) + ( PN / ( ( Max( ( MDR + CRS ),BR ) / FirstVNF_Mem_Server ) + ( MDR * FirstVNF_Mem ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,( ( MUM * ( ( Min( ( RRSe + MUC ) ,MUC ) + MLU ) * MUM ) ) + RRSe ) ) - Min( ( ( ( RMSe - ( Min( Min( MLU ,MUM ) ,( MLU - DS ) ) / ( MUC - MUR ) ) ) + CS ) + ( RRSe + ( Max( MUC,MUR ) - RCSe ) ) ) ,RRSe ) )", "obj1": 0.9251968503937008, "obj2": 0.03715226002570344}, {"determining": "( Min( Min( ( Const * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( MDR,FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( RMSe - ( Min( DS ,RMSe ) - ( MLU - ( DS * RRSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.3169291338582677, "obj2": 0.5310502602029723}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "( ( PN * ( ( Max( ( Const / CRS ),FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - Max( DDR,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / Min( ( DS / ( ( DS - ( DS / CS ) ) * ( MUC / MUR ) ) ) ,( ( Max( MUC,MLU ) - RCSe ) / MUM ) ) ) - ( RMSe * RCSe ) )", "obj1": 0.39960629921259844, "obj2": 0.430826104209727}, {"determining": "( Max( Max( ( PN - DDR ),( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( Min( ( Min( ( ( Max( RRS,BR ) + MDR ) - FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) * CRS ) ,FirstVNF_CPU ) ,FirstVNF_Mem_Server ) )", "choosing": "( ( DS + RRSe ) / ( RCSe * ( ( DS + DS ) / CS ) ) )", "obj1": 0.08267716535433071, "obj2": 0.8769102588037244}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,RRS ) ) ,( ( ( MRS * ARS ) / ( FirstVNF_Mem - ( PN * Max( AMS,( BR - DDR ) ) ) ) ) + Min( Max( ACS,RRS ) ,( Min( Max( CRS,PN ) ,CRS ) + RRS ) ) ) )", "choosing": "( Min( ( MUC + MUM ) ,( MLU / ( MUC * MUM ) ) ) * ( RCSe / MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.47742319281215306}, {"determining": "( ( ( ( ( ( ( ACS / FirstVNF_Mem_Server ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) * Max( MRS,Const ) ) + FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) ) ,( RCSe + ( ( CS * RCSe ) + RRSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.002555370862146052}, {"determining": "( Max( Max( ( PN - DDR ),Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( Min( Max( ( PN * ( AMS - FirstVNF_CPU_Server ) ),ARS ) ,Min( AMS ,( ARS * FirstVNF_Mem ) ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Min( ( MUR - RCSe ) ,DS ) / ( DS * MUR ) )", "obj1": 0.08464566929133858, "obj2": 0.8528710055376637}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( PN - DDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( Max( ( RRSe - ( CS * MUR ) ),DS ) - RRSe ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.9744094488188977, "obj2": 0.010393513907431434}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5442876715930774}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,BR ) * ( FirstVNF_Mem_Server * Const ) ) * CRS ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * ( DDR + ARS ) ) ) )", "choosing": "Min( ( ( ( MUR + Min( CS ,RMSe ) ) + ( Max( Min( Min( Max( MUR,DS ) ,DS ) ,MUC ),( ( ( MUR + RCSe ) - Min( MUR ,RMSe ) ) - ( MLU - ( MUR - RRSe ) ) ) ) + Min( DS ,MUR ) ) ) / ( ( RMSe + MUC ) - ( DS / MUR ) ) ) ,( ( MUR * RRSe ) + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7325959124323805}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( DS + MLU ) ,( MLU + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.10713103819072686}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( CS ,MUR ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.4015748031496063, "obj2": 0.42303580224899034}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( Min( ( ACS + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5748207101348228}, {"determining": "Min( FirstVNF_Mem_Server ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + Min( ( RRSe + CS ) ,RCSe ) ) ) )", "obj1": 0.7145669291338582, "obj2": 0.14758624510521148}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,PN ) / ( ( DDR * FirstVNF_Mem ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / MUM ) + RRSe ) - Max( ( MUR + Min( Max( RMSe,MLU ) ,RMSe ) ),DS ) )", "obj1": 0.234251968503937, "obj2": 0.6106350363585943}, {"determining": "( ( RRS + ( ( CRS + ACS ) + FirstVNF_CPU ) ) - ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + DS ) - ( RCSe / ( MUC * RMSe ) ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe * RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + Min( Max( DDR,CRS ) ,CRS ) ) * ( ACS * ( FirstVNF_CPU_Server - AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( Max( ( MUR / CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + ( DS * RCSe ) ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7417538197244391}, {"determining": "( Min( ( ( Max( BR,FirstVNF_CPU ) - DDR ) + Max( ( CRS + MRS ),Max( ( BR + FirstVNF_CPU_Server ),ARS ) ) ) ,PN ) / ( ARS - RRS ) )", "choosing": "Min( ( CS * ( ( ( ( ( Min( CS ,RMSe ) + Max( MUC,MUR ) ) + CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MUR / ( ( ( RCSe - RCSe ) - RCSe ) + ( RMSe / RCSe ) ) ) ) / ( CS - MUC ) ) ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6969097675456125}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) )", "obj1": 0.9566929133858267, "obj2": 0.015118363258184758}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( Max( Min( MLU ,MLU ),Min( Max( ( RCSe * RMSe ),Max( CS,CS ) ) ,MUM ) ) - CS ) * ( ( MUR - CS ) / ( ( ( RRSe + RMSe ) / RRSe ) + ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.44291338582677164, "obj2": 0.39036385832749454}, {"determining": "( ( Min( ( Max( ARS,( Min( MRS ,ACS ) * MRS ) ) * Const ) ,( PN * CRS ) ) / ( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( CS / Min( RCSe ,DS ) ) ,( MUR + ( RRSe / ( MUR * RRSe ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.059634971682372806}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( FirstVNF_CPU_Server + ( FirstVNF_CPU * ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) ) ) ) ) ) + ( Max( ACS,RRS ) / ( RRS + MDR ) ) ) )", "choosing": "( ( MUR + Min( ( DS - Max( Max( Min( RCSe ,MLU ),MUM ),RCSe ) ) ,RMSe ) ) / ( MUR + MUR ) )", "obj1": 0.36220472440944884, "obj2": 0.4890613407873901}, {"determining": "( ( FirstVNF_RAM + ( ( ( Max( Max( ACS,MRS ),MRS ) * Min( BR ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * DDR ) ) ) + ( FirstVNF_CPU_Server * ( ACS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( Max( MUM,MUM ) + CS ) + Max( ( RMSe + CS ),( CS - RCSe ) ) ) ) ,( RCSe + ( ( DS * RCSe ) + Min( ( MUR * Max( MUC,Max( Max( MUM,MUR ),( DS * DS ) ) ) ) ,Max( ( RMSe + MUR ),Min( MUC ,Min( ( RMSe - MUR ) ,Max( MLU,RMSe ) ) ) ) ) ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "Min( Max( Min( ( ( MRS - FirstVNF_RAM ) + ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) ,ARS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( MUR ,( RCSe * ( CS + MUC ) ) ) / ( Min( RMSe ,RCSe ) + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MUM ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.3484251968503937, "obj2": 0.4982659663419713}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( MRS + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( ( MUR + Min( RMSe ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.7322834645669292, "obj2": 0.1248163487272025}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + Const ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( Max( ( DS / RMSe ),Min( RMSe ,( MUM - DS ) ) ) + RRSe ) ) )", "obj1": 0.5413385826771654, "obj2": 0.2724595920944209}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( PN - DDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( Max( ( RRSe - ( CS * MUR ) ),DS ) - RRSe ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.9724409448818898, "obj2": 0.011300200072845702}, {"determining": "Min( Max( Min( ( PN - Const ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem + ARS ) ) ) )", "choosing": "( ( MUR / ( ( CS / RMSe ) * ( RRSe + ( DS - MUC ) ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.5041682066440146}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.569047306371306}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14170664049302198}, {"determining": "Min( Max( ( DDR / Max( ( FirstVNF_RAM - MDR ),AMS ) ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - CRS ) ) )", "choosing": "( ( ( ( ( Min( ( ( DS + MUR ) / MLU ) ,( Min( RMSe ,MUR ) - ( CS / RMSe ) ) ) + MUM ) + CS ) - Max( RMSe,MUR ) ) + MUC ) * ( ( RMSe * MUM ) * DS ) )", "obj1": 0.33661417322834647, "obj2": 0.5085315034742484}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( ( DS - MUR ) + ( RRSe + ( DS - Min( MUC ,DS ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03742584097887646}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( RCSe / CS ) - ( RMSe * RCSe ) )", "obj1": 0.547244094488189, "obj2": 0.262847983936618}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - Min( ( PN + RRS ) ,AMS ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( ( ( ( DS - MUC ) - Min( ( Min( DS ,MLU ) + Max( MUC,RMSe ) ) ,DS ) ) - ( MUR - Max( MLU,DS ) ) ) * DS ) / CS ) - ( RMSe * RCSe ) )", "obj1": 0.3228346456692913, "obj2": 0.5224234654456492}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,PN ) / ( Min( Max( Min( DDR ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( ARS - FirstVNF_Mem_Server ) / ARS ) ) ) + ( Max( ACS,RRS ) / ( RRS + MDR ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( ( Max( MUC,MUM ) / MUM ) + ( ( DS * RCSe ) + MUR ) ) )", "obj1": 0.17125984251968504, "obj2": 0.706192001817313}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5492242149088165}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.638239250929229}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.27357094983569746}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / Max( BR,MDR ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ARS / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) ) ) ) ) )", "choosing": "( ( MUM + ( ( Min( MUC ,DS ) + RRSe ) + RMSe ) ) / Min( MUC ,( ( Max( RMSe,CS ) * CS ) / MUM ) ) )", "obj1": 0.8090551181102362, "obj2": 0.0752101455421602}, {"determining": "( ( ( ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( Max( ( MUC * Max( DS,RCSe ) ),Max( MUR,Max( CS,MUR ) ) ) / ( RCSe * ( Min( ( Max( Max( ( MLU * MUC ),CS ),MLU ) + RMSe ) ,MUC ) + ( MUR * MUC ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.09915365878907727}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7283464566929134, "obj2": 0.13487531520255652}, {"determining": "( ( ( ( ( ( ACS + Min( Min( FirstVNF_RAM ,ACS ) ,CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + MRS ) ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( Min( MLU ,MUR ) ,( MLU * DS ) ) + RMSe ) + RMSe ) ) )", "obj1": 0.8248031496062992, "obj2": 0.0659686024475225}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( ( Max( FirstVNF_Mem,( Min( ARS ,ARS ) / DDR ) ) * ( Const * FirstVNF_Mem_Server ) ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( RMSe - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.07948261741320206}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13769117519121934}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( ( PN * FirstVNF_RAM_Server ) - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - ( RCSe * ( CS + MUC ) ) )", "obj1": 0.21653543307086615, "obj2": 0.6260567269160796}, {"determining": "Min( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + Const ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( Max( ( DS / RMSe ),Min( RMSe ,( MUM - DS ) ) ) + RRSe ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06274116072701191}, {"determining": "( Max( Max( ( PN - DDR ),( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( PN * ( FirstVNF_Mem_Server + Min( BR ,RRS ) ) ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( MLU,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7530321313076813}, {"determining": "( ( Const * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - Max( ( BR + PN ),AMS ) ) )", "choosing": "( ( RCSe / ( MUM + ( Min( MLU ,RRSe ) * ( RCSe / RRSe ) ) ) ) - ( RMSe * RCSe ) )", "obj1": 0.41732283464566927, "obj2": 0.4213109221266389}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) * Max( BR,FirstVNF_Mem ) ) ,( ARS * BR ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( ( Min( CS ,MUR ) + MUR ) - Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( RCSe * DS ) ) ) + ( MUC * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6208632144140548}, {"determining": "( Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( MUC,DS ) / ( DS * DS ) )", "obj1": 0.7440944881889764, "obj2": 0.11334421705397955}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( DS - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.49803149606299213, "obj2": 0.2935503538929343}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.33267716535433073, "obj2": 0.5140104230486171}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.7952755905511811, "obj2": 0.07651035109449074}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( ( ( ( ( ( ( ACS / FirstVNF_Mem_Server ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) * Max( MRS,Max( ACS,MRS ) ) ) + FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( ( MUC - RCSe ) + MLU ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( CS * RCSe ) + RRSe ) ) )", "obj1": 0.6771653543307087, "obj2": 0.16490312075761823}, {"determining": "( Max( ( ( AMS * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Min( ( ( RCSe - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( MUR - MLU ) + RMSe ) ) )", "obj1": 0.9547244094488189, "obj2": 0.01814518926842329}, {"determining": "( Max( Max( ( PN - DDR ),( Min( Min( RRS ,BR ) ,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( FirstVNF_RAM_Server + MRS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( ( RRS - CRS ) - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,Max( MUC,Max( ( ( Max( RRSe,RRSe ) - DS ) * MUM ),RCSe ) ) ) / ( DS * DS ) )", "obj1": 0.08661417322834646, "obj2": 0.8509912882385178}], "14": [{"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * RRS ) ) / Min( ( ( BR + Min( ( ( Min( FirstVNF_RAM ,RRS ) + ARS ) + Const ) ,Max( ( BR / FirstVNF_Mem_Server ),ARS ) ) ) * ( ACS * ( FirstVNF_CPU_Server / AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "( ( CS - ( Max( ( RRSe * ( RMSe + CS ) ),Min( MUC ,MUC ) ) / RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "( ( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - Max( ( BR + PN ),AMS ) ) )", "choosing": "( ( RCSe / ( MUM + ( Min( MLU ,Max( RCSe,Min( MUC ,MUC ) ) ) * ( RCSe / RRSe ) ) ) ) - ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( ( Max( FirstVNF_RAM_Server,MDR ) - ACS ) - FirstVNF_CPU_Server ) ,MRS ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) ) ) ) )", "choosing": "( ( ( MUR - MUM ) / ( ( MUR + RCSe ) / ( ( RMSe + MUC ) - ( DS / MUR ) ) ) ) * ( MUC + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( MUC,DS ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + Const ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + MUC ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.20214722169900667}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( ACS,FirstVNF_RAM_Server ) ) ) + Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( RCSe - ( ( Min( ( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) * RMSe ) ,( RCSe / MUC ) ) / ( RRSe * ( RMSe / RMSe ) ) ) * DS ) ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,RCSe ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.6043307086614174, "obj2": 0.23000092363229202}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) + ( ( FirstVNF_Mem_Server - Max( ( ARS * ARS ),Min( Const ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server + ( CRS - Const ) ) ) )", "choosing": "( ( RRSe - Min( Min( Max( Max( ( ( MLU + RRSe ) + RMSe ),RCSe ),Min( ( MUM - ( MUC + MLU ) ) ,( ( MUM / RRSe ) * MUM ) ) ) ,MUM ) ,( MUM + Max( RMSe,MLU ) ) ) ) * ( DS - MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6556990991461963}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + ( RRSe - DS ) ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.3700787401574803, "obj2": 0.4658265840057077}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5492242149088165}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - Const ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( ( ( MLU / MLU ) + RMSe ) - MUR ) - MUC ) ,( MUR + ( RRSe / ( DS * RRSe ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.689303272489135}, {"determining": "( ( ( FirstVNF_RAM / AMS ) + ( ( Min( RRS ,Const ) + DDR ) / AMS ) ) + Min( RRS ,( Const * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( Min( RRSe ,( Min( CS ,Min( ( RRSe / MLU ) ,( RMSe / MUM ) ) ) * ( MUC + MLU ) ) ) * Min( RRSe ,( Min( MUM ,RMSe ) * ( Min( CS ,MUR ) - MLU ) ) ) ) ) / ( MUC + ( ( Min( ( RRSe * ( RCSe / MUR ) ) ,( RCSe + ( MLU + DS ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.32537672394163164}, {"determining": "( ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( DS + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( RRSe + ( ( ( ( DS + MUR ) / MLU ) / ( ( ( MUR - MUM ) + ( RCSe / MUR ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17836552273154155}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.27165354330708663, "obj2": 0.569047306371306}, {"determining": "( ( ( RRS / ( MRS - ( PN * ( ( RRS - Const ) * MDR ) ) ) ) / ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( Max( FirstVNF_Mem,FirstVNF_RAM ) / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,Min( ( MUR * MUR ) ,( MUR + ( Min( MLU ,RMSe ) + ( CS * ( Max( RMSe,MUR ) - ( RCSe * MLU ) ) ) ) ) ) ) - ( Max( ( ( MUC / RRSe ) * RCSe ),Max( RRSe,RMSe ) ) - ( ( DS + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.44566159755991414}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),( MDR + RRS ) ) ,( Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( DS - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.452755905511811, "obj2": 0.3764174115475989}, {"determining": "Min( Max( ( MDR + RRS ),Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - Const ) ) )", "choosing": "( ( MUR / ( RCSe * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC * MUR ) ) ) + ( MUR / ( MUC - RCSe ) ) ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25951041264739494}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + MUC ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2483390326715612}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.90748031496063, "obj2": 0.041173204531257716}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5236815383579821}, {"determining": "( Min( Min( ( ( MRS - FirstVNF_RAM ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( ( MUM - Min( RRSe ,RCSe ) ) + RMSe ) + RMSe ) ,DS ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4004790802846293}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.484251968503937, "obj2": 0.30525697966293874}, {"determining": "( ( ( Max( ( Max( FirstVNF_Mem,( Min( ARS ,ARS ) / DDR ) ) * ( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( ( RMSe + CS ) + MUC ) + RCSe ) ) ,( RCSe + ( RRSe + ( DS * RCSe ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7226206485709789}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( Max( RRS,PN ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( ARS,FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( DS - ( CS - ( MUC / RCSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - Max( DS,( CS * RRSe ) ) ) ) + RMSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.22608712077920776}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7047244094488189, "obj2": 0.156702832536382}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( FirstVNF_RAM ,( RRS * Const ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.4931849930184692}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6515748031496063, "obj2": 0.18943092828634273}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( DS,MLU ) / DS ),( ( ( Max( ( DS * ( CS * RRSe ) ),CS ) - ( MUC / MUC ) ) + MLU ) / MLU ) )", "obj1": 0.44291338582677164, "obj2": 0.39036385832749454}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + MUC ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2483390326715612}, {"determining": "( Max( ( ( Min( ( ( ( MRS - Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) - AMS ) ,( ( BR / FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / BR ) ) ) ) * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),CRS ) * ( Const * MDR ) )", "choosing": "Min( Max( ( RCSe - ( DS / MUR ) ),( MUR + RMSe ) ) ,( ( ( Max( Min( MLU ,RMSe ),( RMSe / Max( RRSe,MUR ) ) ) - ( MUC + CS ) ) * ( ( Max( MUC,RCSe ) - ( RCSe + ( MUM + DS ) ) ) - ( ( RRSe * ( RRSe + Min( DS ,RCSe ) ) ) - RRSe ) ) ) + RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ARS ) ) ) ) ) ) )", "choosing": "( ( MUC + ( ( RRSe + Min( MUC ,DS ) ) + RMSe ) ) / Min( RMSe ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.032169619030994995}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( Min( MUC ,DS ) + RRSe ) ) )", "obj1": 0.421259842519685, "obj2": 0.4069458741001252}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( RCSe * ( CS + MUC ) ) ) )", "obj1": 0.33070866141732286, "obj2": 0.5033587458660729}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( MUC + ( ( MUR - MLU ) + RMSe ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( MUR - MUM ) - Min( MUR ,CS ) ) * ( RCSe / MUM ) )", "obj1": 0.3543307086614173, "obj2": 0.49095394732005454}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Min( CRS ,FirstVNF_CPU_Server ) / ( ARS / BR ) ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( Max( DS,( RMSe - MUC ) ) + CS ) ) ) / ( MUC / ( ( Min( CS ,RMSe ) + ( DS - CS ) ) + Min( ( RRSe + CS ) ,RCSe ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5429110290876321}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( CS ,MUR ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4241477604197791}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + FirstVNF_RAM ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( MUC,Min( DS ,RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8765282403515995}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.638239250929229}, {"determining": "( ( AMS * ( Const * ACS ) ) + ( Const * BR ) )", "choosing": "( Min( ( ( ( MUM / RMSe ) + ( Max( MUM,( ( RRSe * RRSe ) - Min( RCSe ,MUM ) ) ) - RCSe ) ) / Min( CS ,RRSe ) ) ,RMSe ) / ( MUC + Max( ( DS + ( ( ( MUR / ( MUC / CS ) ) / MUC ) / ( ( ( MUC - MUM ) + RRSe ) - RCSe ) ) ),MUR ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "( Max( Const,FirstVNF_Mem ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe - ( MUC + CS ) ) ) / ( MUC + ( ( Min( ( DS - MUC ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - Min( MLU ,MUM ) ) ) ) + RMSe ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "( Max( Max( ( PN - DDR ),Min( Min( ( PN * CRS ) ,( Const * Const ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( Min( Max( ( PN * ( AMS - FirstVNF_CPU_Server ) ),ARS ) ,Min( AMS ,( ARS * FirstVNF_Mem ) ) ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Min( ( MUR - RCSe ) ,DS ) / ( DS * MUR ) )", "obj1": 0.08464566929133858, "obj2": 0.8528710055376637}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,BR ) * ( FirstVNF_Mem_Server * Const ) ) * CRS ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * ( DDR + ARS ) ) ) )", "choosing": "Min( ( ( ( MUR + Min( CS ,RMSe ) ) + ( Max( Min( Min( Max( MUR,DS ) ,DS ) ,MUC ),( ( ( MUR + RCSe ) - Min( MUR ,RMSe ) ) - ( MLU - ( MUR - RRSe ) ) ) ) + Min( DS ,MUR ) ) ) / ( ( RMSe + MUC ) - ( DS / MUR ) ) ) ,( ( MUR * RRSe ) + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7325959124323805}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( FirstVNF_Mem,MRS ) ) ) + ( ACS - RRS ) )", "choosing": "Min( ( RCSe + ( ( DS * RRSe ) + RRSe ) ) ,Max( MUR,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.1960512888885318}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,RRS ) ) ,( ( ( MRS * ARS ) / ( FirstVNF_Mem - ( PN * Max( AMS,( BR - DDR ) ) ) ) ) + Min( Max( ACS,RRS ) ,( Min( Max( CRS,PN ) ,CRS ) + RRS ) ) ) )", "choosing": "( Min( ( MUC + MUM ) ,( MLU / ( MUC * MUM ) ) ) * ( RCSe / MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.47742319281215306}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7578740157480315, "obj2": 0.10026876864388959}, {"determining": "( Min( ( ( PN - DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "Min( ( DS + MLU ) ,( MLU + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.9901574803149606, "obj2": 0.005183365726254115}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,( ( MDR / ( MRS - FirstVNF_CPU ) ) + Min( ARS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + CS ) ,( ( ( DS / MUR ) * Min( MLU ,CS ) ) - ( Min( DS ,RMSe ) - ( MLU / DS ) ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5212202333215225}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( DS + MLU ) ,( MLU + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.10713103819072686}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( CS - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.6830708661417323, "obj2": 0.15958483763841497}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * ( MRS + FirstVNF_RAM ) ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( DS + RCSe ) ) ) )", "obj1": 0.8464566929133859, "obj2": 0.05899808591857683}, {"determining": "Min( Min( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( Min( ACS ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) ,( ( MDR / ( MRS - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.5159546220762286}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( ( RCSe / CS ) - ( RMSe * RCSe ) )", "obj1": 0.21456692913385828, "obj2": 0.6317669856068463}, {"determining": "Min( Max( ( Max( ( FirstVNF_RAM - MDR ),( Const * FirstVNF_CPU_Server ) ) / DDR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Min( ( MUM + MUM ) ,MLU ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUC ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) + Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( RMSe * MUM ) ) ) ) + RRSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7607341384337327}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),DS ) )", "obj1": 0.8051181102362205, "obj2": 0.07342226529000478}, {"determining": "( ( ( ( ( Max( Min( Const ,FirstVNF_RAM ),( Min( ACS ,Const ) - CRS ) ) * FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) + BR ) + FirstVNF_RAM ) + ( ( PN * FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + ( CS + RMSe ) ) + Min( Min( CS ,( ( Min( RRSe ,MLU ) * MUC ) / Min( Max( RCSe,RMSe ) ,( RRSe / DS ) ) ) ) ,CS ) ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( CS ,DS ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.1279527559055118, "obj2": 0.7522602008645267}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) ) / ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ),FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - FirstVNF_RAM_Server ) + Max( BR,PN ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( CS - CS ) / Max( ( RCSe * RRSe ),CS ) ) * CS ) ,Min( MUR ,CS ) )", "obj1": 0.7716535433070866, "obj2": 0.09257988427478213}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + Min( Max( DDR,CRS ) ,CRS ) ) * ( ACS * ( FirstVNF_CPU_Server - AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( Max( ( MUR / CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + ( DS * RCSe ) ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7417538197244391}, {"determining": "( ( RRS + ( ( CRS + ACS ) + FirstVNF_CPU ) ) - ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + DS ) - ( RCSe / ( MUC * RMSe ) ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe * RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.26221704141640123}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - ( ( FirstVNF_CPU + Const ) + FirstVNF_RAM_Server ) ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( ( MUM - DS ) / ( RCSe * ( CS + MUC ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.28627105281619974}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) )", "obj1": 0.9566929133858267, "obj2": 0.015118363258184758}, {"determining": "( ( ( ( ( ( ACS + Min( Min( FirstVNF_RAM ,ACS ) ,CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + MRS ) ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( Min( MLU ,MUR ) ,( MLU * DS ) ) + RMSe ) + RMSe ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05420362880848177}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5761606469434866}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( ( ( ( Max( Max( ACS,MRS ),MRS ) * Min( BR ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * DDR ) ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS - RCSe ) ,RRSe ) ) ) ) ) )", "obj1": 0.4448818897637795, "obj2": 0.3779183268616316}, {"determining": "( Min( PN ,( MDR - Min( ( FirstVNF_Mem_Server - CRS ) ,FirstVNF_Mem_Server ) ) ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / CS ) + RRSe ) - ( ( DS * ( ( Max( ( ( RCSe - MUC ) - MLU ),Min( ( RMSe - MUR ) ,DS ) ) * ( ( ( RMSe * MUR ) / ( RRSe - RCSe ) ) - ( Max( RRSe,MUM ) + MUM ) ) ) - ( ( MLU - ( ( MUR - MLU ) / RRSe ) ) / RRSe ) ) ) * MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5442876715930774}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( PN - DDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( Max( ( RRSe - ( CS * MUR ) ),DS ) - RRSe ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.9744094488188977, "obj2": 0.010393513907431434}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + MUC ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4837518292840024}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),DS ) )", "obj1": 0.7421259842519685, "obj2": 0.11723685497054483}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,BR ) ) ) ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / Max( FirstVNF_Mem_Server,ARS ) ) )", "choosing": "( ( MUR / ( RCSe * ( MUC + CS ) ) ) / ( MUC - ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( Max( DS,( ( MUR * RMSe ) * ( RMSe - MUR ) ) ) - ( DS * ( CS * RRSe ) ) ) ) + RMSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.22608712077920776}, {"determining": "( ( ( ( ( Max( ( DDR + FirstVNF_RAM ),( Min( ACS ,RRS ) - CRS ) ) * FirstVNF_RAM ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( Max( ( ( ( CS / RRSe ) * ( Max( DS,( MUM * MUM ) ) - MUC ) ) - ( Max( ( ( RMSe * MUM ) - ( RMSe + MUR ) ),CS ) - MUC ) ),RCSe ) * MUC ) )", "obj1": 0.11614173228346457, "obj2": 0.7685562899269054}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( ( Const * FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( FirstVNF_Mem_Server - ARS ) ) )", "choosing": "( ( MUR / ( ( ( RCSe / MUM ) + MUC ) * RCSe ) ) / ( MLU - ( ( DS + RCSe ) + MUC ) ) )", "obj1": 0.4881889763779528, "obj2": 0.3015433248318601}, {"determining": "( Min( Min( ACS ,FirstVNF_CPU_Server ) ,PN ) / ( ( DDR * FirstVNF_Mem ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( DS / MUM ) + RRSe ) - Max( ( MUR + Min( Max( RMSe,MLU ) ,RMSe ) ),DS ) )", "obj1": 0.234251968503937, "obj2": 0.6106350363585943}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( ( DS - MUR ) + ( RRSe + ( DS - Min( MUC ,DS ) ) ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03742584097887646}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ,( RCSe + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.09530393143503928}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5721060398110371}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7008707586935905}, {"determining": "Min( FirstVNF_Mem_Server ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - MUR ) - MUC ) )", "obj1": 0.7106299212598425, "obj2": 0.1509497873874901}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14170664049302198}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( ( ( MDR / ( MRS - ( FirstVNF_RAM_Server - ( AMS / CRS ) ) ) ) + ( Max( RRS,ACS ) / ( MDR + RRS ) ) ) + ( FirstVNF_Mem + FirstVNF_Mem ) )", "choosing": "( ( DS - CS ) * ( ( MUM - CS ) / ( ( ( ( ( MLU * RMSe ) * DS ) * ( RMSe - RCSe ) ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( ( ( ( ( ( ACS + Min( Min( FirstVNF_RAM ,ACS ) ,CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + MRS ) ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( Min( MLU ,MUR ) ,( MLU * DS ) ) + RMSe ) + RMSe ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05420362880848177}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13769117519121934}, {"determining": "Min( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + Const ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( Max( ( DS / RMSe ),Min( RMSe ,( MUM - DS ) ) ) + RRSe ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06274116072701191}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) * Max( BR,FirstVNF_Mem ) ) ,( ARS * BR ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( ( Min( CS ,MUR ) + MUR ) - Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( RCSe * DS ) ) ) + ( MUC * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6208632144140548}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( MUR - MLU ) + RMSe ) ) )", "obj1": 0.7775590551181102, "obj2": 0.08592849678247193}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( Min( ( ( Min( ( FirstVNF_RAM_Server + ( MRS * Const ) ) ,DDR ) * RRS ) + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR - MRS ) ) ) ) ,PN ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( ( DS / Min( ( Min( ( CS + MUM ) ,Max( ( RMSe - DS ),( MUR * CS ) ) ) + RMSe ) ,MUC ) ),RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),DS ) )", "obj1": 0.2421259842519685, "obj2": 0.6044972671387652}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( DS - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( Min( ( ACS + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2559055118110236, "obj2": 0.5748207101348228}, {"determining": "( Max( ( ( Min( ( ( ( MRS - Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) - AMS ) ,( ARS + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / BR ) ) ) ) * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),FirstVNF_Mem ) * ( Const * MDR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( CS ,MUR ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.7680206840143861}, {"determining": "( Min( ( ( Max( BR,FirstVNF_CPU ) - DDR ) + Max( ( CRS + MRS ),Max( ( BR + FirstVNF_CPU_Server ),ARS ) ) ) ,PN ) / ( ARS - RRS ) )", "choosing": "Min( ( CS * ( ( ( ( ( Min( CS ,RMSe ) + Max( MUC,MUR ) ) + CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MUR / ( ( ( RCSe - RCSe ) - RCSe ) + ( RMSe / RCSe ) ) ) ) / ( CS - MUC ) ) ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6969097675456125}], "15": [{"determining": "( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * RRS ) ) / Min( ( ( BR + Min( ( ( Min( FirstVNF_RAM ,RRS ) + ARS ) + Const ) ,Max( ( BR / FirstVNF_Mem_Server ),ARS ) ) ) * ( ACS * ( FirstVNF_CPU_Server / AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "( ( CS - ( Max( ( RRSe * ( RMSe + CS ) ),Min( MUC ,MUC ) ) / RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "Min( Max( Min( ( ( ACS - Max( FirstVNF_RAM_Server,MDR ) ) - FirstVNF_CPU_Server ) ,MRS ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) * ( FirstVNF_RAM_Server * RRS ) ) ) )", "choosing": "( ( RRSe - Min( Min( Max( Max( ( ( MLU + CS ) + RMSe ),RCSe ),Min( ( MUM - ( MUC + MLU ) ) ,( ( MUM - RRSe ) * MUM ) ) ) ,MUM ) ,CS ) ) * ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) * ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + ( MRS - Max( ( BR + PN ),AMS ) ) )", "choosing": "( ( RCSe / ( MUM + ( Min( MLU ,Max( RCSe,Min( MUC ,MUC ) ) ) * ( RCSe / RRSe ) ) ) ) - ( RMSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS + ( FirstVNF_CPU + ( FirstVNF_CPU_Server - ARS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( DDR / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( MDR - MDR ) ) / RRS ) * AMS ) ) + ( PN + FirstVNF_CPU ) ) )", "choosing": "( Max( MUC,DS ) / ( ( Min( ( Max( DS,MUM ) / RRSe ) ,MUM ) - ( MUR / Max( MUC,RRSe ) ) ) + Max( MUC,RMSe ) ) )", "obj1": 0.08070866141732283, "obj2": 0.8802795451824794}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),DS ) )", "obj1": 0.8051181102362205, "obj2": 0.07342226529000478}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( CS ,MUR ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4241477604197791}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) + ( ( FirstVNF_Mem_Server - Max( ( ARS * ARS ),Min( Const ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server + ( CRS - Const ) ) ) )", "choosing": "( ( RRSe - Min( Min( Max( Max( ( ( MLU + RRSe ) + RMSe ),RCSe ),Min( ( MUM - ( MUC + MLU ) ) ,( ( MUM / RRSe ) * MUM ) ) ) ,MUM ) ,( MUM + Max( RMSe,MLU ) ) ) ) * ( DS - MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6556990991461963}, {"determining": "( ( ( MDR / ( MRS - ( ( AMS / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( Max( MLU,RMSe ) / Min( ( CS * Max( MUC,DS ) ) ,MUC ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4028733989415938}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.90748031496063, "obj2": 0.041173204531257716}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( ( ( ( Max( Max( ACS,MRS ),MRS ) * Min( ( PN / ACS ) ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * DDR ) ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * MUM ) ) ) ) )", "obj1": 0.5374015748031497, "obj2": 0.2819114151609241}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.15412380860023692}, {"determining": "Min( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + Const ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( Max( ( DS / RMSe ),Min( RMSe ,( MUM - DS ) ) ) + RRSe ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06274116072701191}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.7381889763779528, "obj2": 0.11637941641266793}, {"determining": "Min( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.6259842519685039, "obj2": 0.19932004938788048}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( ( Min( MLU ,MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * CS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13769117519121934}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( ( Const * Const ) ,( ACS + MDR ) ) ) + ( ( ( Max( ( DDR + FirstVNF_RAM ),( Min( ACS ,RRS ) - CRS ) ) * FirstVNF_RAM ) * FirstVNF_Mem_Server ) + BR ) )", "choosing": "( ( ( ( CS / RRSe ) * ( Max( DS,( MUM * MUM ) ) - MUC ) ) - ( Max( ( ( RMSe * MUM ) - ( RMSe + MUR ) ),CS ) - MUC ) ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49920910511592004}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( MUR - MLU ) + RMSe ) ) )", "obj1": 0.7775590551181102, "obj2": 0.08592849678247193}, {"determining": "( ( ( FirstVNF_RAM / AMS ) + ( ( Min( RRS ,Const ) + DDR ) / AMS ) ) + Min( RRS ,( Const * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( Min( RRSe ,( Min( CS ,Min( ( RRSe / MLU ) ,( RMSe / MUM ) ) ) * ( MUC + MLU ) ) ) * Min( RRSe ,( Min( MUM ,RMSe ) * ( Min( CS ,MUR ) - MLU ) ) ) ) ) / ( MUC + ( ( Min( ( RRSe * ( RCSe / MUR ) ) ,( RCSe + ( MLU + DS ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.32537672394163164}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( Min( CS ,MUR ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.452755905511811, "obj2": 0.3721630130377253}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.26221704141640123}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( ( DDR + MRS ) / ACS ) ) - FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server - ARS ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( RCSe - RCSe ) + ( ( MUM - MLU ) - ( MLU * RRSe ) ) ) ) ) ) / ( CS - CS ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48717432574918934}, {"determining": "( Min( PN ,( MDR - Min( ( FirstVNF_Mem_Server - CRS ) ,FirstVNF_Mem_Server ) ) ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / CS ) + RRSe ) - ( ( DS * ( ( Max( ( ( RCSe - MUC ) - MLU ),Min( ( RMSe - MUR ) ,DS ) ) * ( ( ( RMSe * MUR ) / ( RRSe - RCSe ) ) - ( Max( RRSe,MUM ) + MUM ) ) ) - ( ( MLU - ( ( MUR - MLU ) / RRSe ) ) / RRSe ) ) ) * MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5236815383579821}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( Max( RRS,PN ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( ARS,FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( DS - ( CS - ( MUC / RCSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - Max( DS,( CS * RRSe ) ) ) ) + RMSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.22608712077920776}, {"determining": "( Min( ( Min( AMS ,FirstVNF_Mem ) * RRS ) ,Min( FirstVNF_CPU ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( Max( MUC,Max( CS,RRSe ) ) + Max( DS,( RCSe - ( Max( RCSe,CS ) * MLU ) ) ) ) ) * MUM ) ,Min( CS ,MUR ) )", "obj1": 0.1830708661417323, "obj2": 0.6890874849895243}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + MUC ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2483390326715612}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,( ( MDR / ( MRS - FirstVNF_CPU ) ) + Min( ARS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + CS ) ,( ( ( DS / MUR ) * Min( MLU ,CS ) ) - ( Min( DS ,RMSe ) - ( MLU / DS ) ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5212202333215225}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU_Server / BR ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + MUC ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.28220136882219127}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.6240157480314961, "obj2": 0.21989958670406956}, {"determining": "( ( ( Max( ( Max( FirstVNF_Mem,( Min( ARS ,ARS ) / DDR ) ) * ( Const * FirstVNF_Mem_Server ) ),FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( ( RMSe + CS ) + MUC ) + RCSe ) ) ,( RCSe + ( RRSe + ( DS * RCSe ) ) ) )", "obj1": 0.15354330708661418, "obj2": 0.7226206485709789}, {"determining": "( ( RRS + ( ( CRS + ACS ) + FirstVNF_CPU ) ) - ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + DS ) - ( RCSe / ( MUC * RMSe ) ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe * RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( FirstVNF_Mem,MRS ) ) ) + ( ACS - RRS ) )", "choosing": "Min( ( RCSe + ( ( DS * RRSe ) + RRSe ) ) ,Max( MUR,RRSe ) )", "obj1": 0.6496062992125984, "obj2": 0.1960512888885318}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5492242149088165}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( DS + MLU ) ,( MLU + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.10713103819072686}, {"determining": "( ( ( RRS / ( MRS - ( PN * ( ( RRS - Const ) * MDR ) ) ) ) / ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( Max( FirstVNF_Mem,FirstVNF_RAM ) / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,Min( ( MUR * MUR ) ,( MUR + ( Min( MLU ,RMSe ) + ( CS * ( Max( RMSe,MUR ) - ( RCSe * MLU ) ) ) ) ) ) ) - ( Max( ( ( MUC / RRSe ) * RCSe ),Max( RRSe,RMSe ) ) - ( ( DS + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.44566159755991414}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( MUC + ( ( MUR - MLU ) + RMSe ) ) ) ) )", "obj1": 0.9409448818897638, "obj2": 0.025241647677461305}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4630844425816847}, {"determining": "( Min( MRS ,FirstVNF_Mem ) * ( ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) / ( ( RRS * FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( RRSe,DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8528710055376637}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + FirstVNF_RAM ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( MUC,Min( DS ,RMSe ) ) / ( RCSe * DS ) )", "obj1": 0.08267716535433071, "obj2": 0.8765282403515995}, {"determining": "( Max( ( ( Min( ( ( ( MRS - Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) - AMS ) ,( ( BR / FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / BR ) ) ) ) * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),CRS ) * ( Const * MDR ) )", "choosing": "Min( Max( ( RCSe - ( DS / MUR ) ),( MUR + RMSe ) ) ,( ( ( Max( Min( MLU ,RMSe ),( RMSe / Max( RRSe,MUR ) ) ) - ( MUC + CS ) ) * ( ( Max( MUC,RCSe ) - ( RCSe + ( MUM + DS ) ) ) - ( ( RRSe * ( RRSe + Min( DS ,RCSe ) ) ) - RRSe ) ) ) + RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( Min( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) / ( PN - DDR ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( Max( ( RRSe - ( CS * MUR ) ),DS ) - RRSe ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.9744094488188977, "obj2": 0.010393513907431434}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14170664049302198}, {"determining": "( Min( Min( ( ( MRS - FirstVNF_RAM ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( ( MUM - Min( RRSe ,RCSe ) ) + RMSe ) + RMSe ) ,DS ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4004790802846293}, {"determining": "Min( Max( ( MDR + RRS ),Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - Const ) ) )", "choosing": "( ( MUR / ( RCSe * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC * MUR ) ) ) + ( MUR / ( MUC - RCSe ) ) ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25951041264739494}, {"determining": "( ( AMS * ( Const * ACS ) ) + ( Const * BR ) )", "choosing": "( Min( ( ( ( MUM / RMSe ) + ( Max( MUM,( ( RRSe * RRSe ) - Min( RCSe ,MUM ) ) ) - RCSe ) ) / Min( CS ,RRSe ) ) ,RMSe ) / ( MUC + Max( ( DS + ( ( ( MUR / ( MUC / CS ) ) / MUC ) / ( ( ( MUC - MUM ) + RRSe ) - RCSe ) ) ),MUR ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),( BR / FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( ( FirstVNF_Mem_Server + CRS ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( ( ( ( DS / CS ) + RRSe ) + Min( CS ,RMSe ) ) + Min( CS ,RCSe ) ),( CS - Min( ( MLU / RCSe ) ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.030023333194389733}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + BR ) ) + ( ( ( ( Max( Max( Const,MRS ),MRS ) * Min( FirstVNF_Mem_Server ,BR ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * DDR ) ) / ( MRS + CRS ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + ( Min( CS ,MLU ) * ( CS + Max( MUC,MLU ) ) ) ),( CS - ( CS * ( ( CS - MUM ) * Min( ( CS - RCSe ) ,RRSe ) ) ) ) ) )", "obj1": 0.4389763779527559, "obj2": 0.3837784788394041}, {"determining": "Min( Min( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( BR,Min( ACS ,ACS ) ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) ,( ( MDR / ( ( CRS + ACS ) - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * ( MUM * MUC ) ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) + RCSe ) )", "obj1": 0.21456692913385828, "obj2": 0.6269072776820372}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Min( CRS ,FirstVNF_CPU_Server ) / ( ARS / BR ) ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( Max( DS,( RMSe - MUC ) ) + CS ) ) ) / ( MUC / ( ( Min( CS ,RMSe ) + ( DS - CS ) ) + Min( ( RRSe + CS ) ,RCSe ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5429110290876321}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,BR ) * ( FirstVNF_Mem_Server * Const ) ) * CRS ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * ( DDR + ARS ) ) ) )", "choosing": "Min( ( ( ( MUR + Min( CS ,RMSe ) ) + ( Max( Min( Min( Max( MUR,DS ) ,DS ) ,MUC ),( ( ( MUR + RCSe ) - Min( MUR ,RMSe ) ) - ( MLU - ( MUR - RRSe ) ) ) ) + Min( DS ,MUR ) ) ) / ( ( RMSe + MUC ) - ( DS / MUR ) ) ) ,( ( MUR * RRSe ) + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7325959124323805}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ACS ) )", "choosing": "Min( Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03403956793932622}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( ( Const * Const ) ,( ACS + MDR ) ) ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.4859033744617911}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( FirstVNF_Mem_Server - ( ACS * FirstVNF_RAM ) ) + ( ARS + ( CRS - Const ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / CS ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6200692073819126}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,RRS ) ) ,( ( ( MRS * ARS ) / ( FirstVNF_Mem - ( PN * Max( AMS,( BR - DDR ) ) ) ) ) + Min( Max( ACS,RRS ) ,( Min( Max( CRS,PN ) ,CRS ) + RRS ) ) ) )", "choosing": "( Min( ( MUC + MUM ) ,( MLU / ( MUC * MUM ) ) ) * ( RCSe / MUM ) )", "obj1": 0.3641732283464567, "obj2": 0.47742319281215306}, {"determining": "( ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( BR - Max( Const,CRS ) ) * FirstVNF_RAM_Server ) ) ) + ( ACS - ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( ( ( DS / MUM ) + RRSe ) - Max( MUR,DS ) ) )", "obj1": 0.7559055118110236, "obj2": 0.09997859627623894}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + ( RRSe - DS ) ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.3700787401574803, "obj2": 0.4658265840057077}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( MUR - MLU ) + RMSe ) ) )", "obj1": 0.9488188976377953, "obj2": 0.02020825453910306}, {"determining": "Min( Max( ( Max( ( FirstVNF_RAM - MDR ),( Const * FirstVNF_CPU_Server ) ) / DDR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Min( ( MUM + MUM ) ,MLU ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUC ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) + Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( RMSe * MUM ) ) ) ) + RRSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7607341384337327}, {"determining": "( Max( Const,FirstVNF_Mem ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe - ( MUC + CS ) ) ) / ( MUC + ( ( Min( ( DS - MUC ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - Min( MLU ,MUM ) ) ) ) + RMSe ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( ACS / PN ) ) ) ,( ( Max( FirstVNF_RAM_Server,( MDR / ( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) ) ) * ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * ACS ) ) ) ) )", "choosing": "( Max( ( RRSe + Min( CS ,CS ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( ( RMSe * MUR ) - RCSe ) ,RRSe ) ) ) ) ) - ( MUC / RRSe ) )", "obj1": 0.265748031496063, "obj2": 0.5655925056643624}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7008707586935905}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.484251968503937, "obj2": 0.30525697966293874}, {"determining": "( ( ( ( ( ( ACS + Min( Min( FirstVNF_RAM ,ACS ) ,CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + ( RRS / ( FirstVNF_CPU_Server + ( AMS + MRS ) ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + RRSe ) ) ) / ( MUC + ( ( Min( Min( MLU ,MUR ) ,( MLU * DS ) ) + RMSe ) + RMSe ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05420362880848177}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5442876715930774}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( ACS,FirstVNF_RAM_Server ) ) ) + Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( RCSe - ( ( Min( ( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) * RMSe ) ,( RCSe / MUC ) ) / ( RRSe * ( RMSe / RMSe ) ) ) * DS ) ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "( ( ( ( ( Max( ( DDR + FirstVNF_RAM ),( Min( ACS ,RRS ) - CRS ) ) * FirstVNF_RAM ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( Max( ( ( ( CS / RRSe ) * ( Max( DS,( MUM * MUM ) ) - MUC ) ) - ( Max( ( ( RMSe * MUM ) - ( RMSe + MUR ) ),CS ) - MUC ) ),RCSe ) * MUC ) )", "obj1": 0.11614173228346457, "obj2": 0.7685562899269054}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( ( ( ( Max( Max( ACS,MRS ),MRS ) * Min( BR ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * DDR ) ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + DS ) - ( RCSe / ( MUC * RMSe ) ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe * RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.43503937007874016, "obj2": 0.3977149120093601}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_Mem + AMS ) ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - ( ( ( ( ( DS + MUR ) / MLU ) / ( ( ( CS - RCSe ) - ( RRSe - RMSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) )", "obj1": 0.9645669291338582, "obj2": 0.013865301848542915}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( ( ( RRSe / CS ) + Min( RCSe ,MLU ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + ( DS - MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6594488188976378, "obj2": 0.18764524911040525}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ,( RCSe + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.09530393143503928}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5761606469434866}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( ( ( RCSe / MUM ) + MUC ) * RCSe ) ) / ( MLU - ( ( DS + RCSe ) + MUC ) ) )", "obj1": 0.9881889763779528, "obj2": 0.006030877568162858}, {"determining": "( Min( ( ( Max( BR,FirstVNF_CPU ) - DDR ) + Max( ( CRS + MRS ),Max( ( BR + FirstVNF_CPU_Server ),ARS ) ) ) ,PN ) / ( ARS - RRS ) )", "choosing": "Min( ( CS * ( ( ( ( ( Min( CS ,RMSe ) + Max( MUC,MUR ) ) + CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MUR / ( ( ( RCSe - RCSe ) - RCSe ) + ( RMSe / RCSe ) ) ) ) / ( CS - MUC ) ) ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6969097675456125}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS - RCSe ) ,RRSe ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5593593702131475}, {"determining": "( ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( DS + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( RRSe + ( ( ( ( DS + MUR ) / MLU ) / ( ( ( MUR - MUM ) + ( RCSe / MUR ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) ) ) )", "obj1": 0.6673228346456693, "obj2": 0.17836552273154155}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( Min( ( MDR + ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) + Max( ARS,( BR + MRS ) ) ) ) ,( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) ) / ( Min( Max( Min( FirstVNF_CPU ,BR ),Max( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ),FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ) + FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( ( Min( CS ,MUR ) + MUR ) - Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( RCSe * DS ) ) ) + ( MUC * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.7696850393700787, "obj2": 0.09209188500535682}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.20669291338582677, "obj2": 0.6322643913083416}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( ( MDR * FirstVNF_Mem ) * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RRSe * ( CS + MUC ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5748031496062992, "obj2": 0.2483390326715612}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( Min( ( ACS + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( RCSe / CS ) - Min( RMSe ,( ( MUR / MUR ) + MUC ) ) )", "obj1": 0.2637795275590551, "obj2": 0.5730387832222958}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + Min( Max( DDR,CRS ) ,CRS ) ) * ( ACS * ( FirstVNF_CPU_Server - AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( Max( ( MUR / CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + ( DS * RCSe ) ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7417538197244391}, {"determining": "( ( ( ( ( ( ACS + Min( Min( FirstVNF_RAM ,ACS ) ,CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + ( RRS / ( FirstVNF_CPU_Server + ( FirstVNF_CPU_Server + MRS ) ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( Min( MLU ,MUR ) ,( MLU * DS ) ) + RMSe ) + RMSe ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05420362880848177}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "Min( Max( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,( Max( DS,MLU ) / DS ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5593593702131475}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.638239250929229}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( DS - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29439786573484317}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) * Max( BR,FirstVNF_Mem ) ) ,( ARS * BR ) )", "choosing": "Min( ( ( ( CS - CS ) / Max( DS,MUM ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6923998990119447}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RCSe / MUM ) + MUC ) ) ) / ( MUC + ( ( MUR - MLU ) + RMSe ) ) )", "obj1": 0.4921259842519685, "obj2": 0.2998860086944343}], "16": [{"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + Min( ( Const * Const ) ,( PN * CRS ) ) ) + ( FirstVNF_CPU_Server - ACS ) )", "choosing": "Min( Min( ( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) * RMSe ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( ( ( ACS - Max( FirstVNF_RAM_Server,MDR ) ) - FirstVNF_CPU_Server ) ,MRS ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) * ( FirstVNF_RAM_Server * RRS ) ) ) )", "choosing": "( ( RRSe - Min( Min( Max( Max( ( ( MLU + CS ) + RMSe ),RCSe ),Min( ( MUM - ( MUC + MLU ) ) ,( ( MUM - RRSe ) * MUM ) ) ) ,MUM ) ,CS ) ) * ( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "Min( Max( ( MDR + RRS ),Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - Const ) ) )", "choosing": "( ( MUR / ( RCSe * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC * MUR ) ) ) + ( MUR / ( MUC - RCSe ) ) ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25951041264739494}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) + ( ( FirstVNF_Mem_Server - Max( ( ARS * ARS ),Min( Const ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server + ( CRS - Const ) ) ) )", "choosing": "( ( RRSe - Min( Min( Max( Max( ( ( MLU + RRSe ) + RMSe ),RCSe ),Min( ( MUM - ( MUC + MLU ) ) ,( ( MUM / RRSe ) * MUM ) ) ) ,MUM ) ,( MUM + Max( RMSe,MLU ) ) ) ) * ( DS - MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6556990991461963}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( ( ( RRSe / CS ) + Min( RCSe ,MLU ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + ( DS - MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6594488188976378, "obj2": 0.18764524911040525}, {"determining": "( ( Min( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ),( ARS - FirstVNF_Mem_Server ) ) - Max( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ),FirstVNF_RAM_Server ) ) ,Min( Max( ARS,( FirstVNF_CPU_Server - RRS ) ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( MLU + MUR ) ) ) / ( MUC + ( ( Min( ( Min( CS ,( RRSe * MUR ) ) + MUR ) ,Max( Max( RRSe,CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.28078102041241315}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.7381889763779528, "obj2": 0.11637941641266793}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.5748031496062992, "obj2": 0.23118672884843977}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( ( FirstVNF_RAM / ( ( FirstVNF_Mem_Server * Min( Const ,CRS ) ) + BR ) ) / MDR ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ),Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13736010811480306}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5236815383579821}, {"determining": "( Min( ( Min( AMS ,FirstVNF_Mem ) * RRS ) ,Min( FirstVNF_CPU ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( AMS + MRS ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( Max( MUC,Max( CS,RRSe ) ) + Max( DS,( RCSe - ( Max( RCSe,CS ) * MLU ) ) ) ) ) * MUM ) ,Min( CS ,MUR ) )", "obj1": 0.1830708661417323, "obj2": 0.6890874849895243}, {"determining": "( ( RRS / ( Const * BR ) ) + ( ( FirstVNF_CPU / Min( Max( MDR,Const ) ,MRS ) ) + ARS ) )", "choosing": "( ( ( RCSe - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( Max( ( Min( MLU ,( CS / RCSe ) ) + CS ),MUC ) + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) * ( DS - CS ) )", "obj1": 0.43700787401574803, "obj2": 0.37314887156211596}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( Max( RRS,PN ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( ARS,FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( DS - ( CS - ( MUC / RCSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - Max( DS,( CS * RRSe ) ) ) ) + RMSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.22608712077920776}, {"determining": "( Min( PN ,( MDR - Min( ( FirstVNF_Mem_Server - CRS ) ,FirstVNF_Mem_Server ) ) ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / CS ) + RRSe ) - ( ( DS * ( ( Max( ( ( RCSe - MUC ) - MLU ),Min( ( RMSe - MUR ) ,DS ) ) * ( ( ( RMSe * MUR ) / ( RRSe - RCSe ) ) - ( Max( RRSe,MUM ) + MUM ) ) ) - ( ( MLU - ( ( MUR - MLU ) / RRSe ) ) / RRSe ) ) ) * MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,DS ) / CS ) ,( MUR + ( RRSe / ( DS * RRSe ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.07207602677866455}, {"determining": "Min( Max( ( Max( ( FirstVNF_RAM - MDR ),( Const * FirstVNF_CPU_Server ) ) / DDR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Min( ( MUM + MUM ) ,MLU ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUC ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) + Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( RMSe * MUM ) ) ) ) + RRSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7607341384337327}, {"determining": "Min( ( PN + FirstVNF_RAM ) ,( ( MDR / ( MRS - FirstVNF_CPU ) ) + Min( ARS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + CS ) ,( ( ( DS / MUR ) * Min( MLU ,CS ) ) - ( Min( DS ,RMSe ) - ( MLU / DS ) ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5212202333215225}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19521769175345594}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Max( ACS,( MDR - FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) ,Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( CS ,MUM ) ) ,( RCSe + ( ( DS * RCSe ) + MUR ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5407138576795211}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Const ) ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / Min( MDR ,RRS ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( ( ( DS * ( Min( CS ,RMSe ) / ( RCSe + RCSe ) ) ) + ( MLU - ( ( MUC / CS ) / CS ) ) ) + MUC ) ) ) / Min( MUC ,( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6071307586345053}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.6771653543307087, "obj2": 0.15412380860023692}, {"determining": "( ( ( MDR / ( MRS - ( ( AMS / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( Max( MLU,RMSe ) / Min( ( CS * Max( MUC,DS ) ) ,MUC ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4028733989415938}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( ( DDR + MRS ) / ACS ) ) - FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server - ARS ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( RCSe - RCSe ) + ( ( MUM - MLU ) - ( MLU * RRSe ) ) ) ) ) ) / ( CS - CS ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48717432574918934}, {"determining": "( ( ( ( ( Max( ( DDR + FirstVNF_RAM ),( Min( ACS ,RRS ) - CRS ) ) * FirstVNF_RAM ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( Max( ( ( ( CS / RRSe ) * ( Max( DS,( MUM * MUM ) ) - MUC ) ) - ( Max( ( ( RMSe * MUM ) - ( RMSe + MUR ) ),CS ) - MUC ) ),RCSe ) * MUC ) )", "obj1": 0.11614173228346457, "obj2": 0.7685562899269054}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14960629921259844, "obj2": 0.7209028586536596}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),DS ) )", "obj1": 0.8051181102362205, "obj2": 0.07342226529000478}, {"determining": "( Min( Max( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ARS ),( MDR * FirstVNF_CPU ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( Const / ( MRS - ( FirstVNF_Mem_Server * PN ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( Max( DS,( ( CS - MUR ) - MUC ) ) + CS ) ) ) / ( MUC / ( ( Min( CS ,RMSe ) + ( DS - CS ) ) + Min( Max( RRSe,CS ) ,RCSe ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.08092724005283511}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( Min( CS ,MUR ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.452755905511811, "obj2": 0.3721630130377253}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ACS ) )", "choosing": "( ( RCSe - ( ( Min( ( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) * RMSe ) ,( RCSe / MUC ) ) / ( RRSe * ( RMSe / RMSe ) ) ) * DS ) ) * MUR )", "obj1": 0.8996062992125984, "obj2": 0.04323912274843332}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( ( Const * Const ) ,( ACS + MDR ) ) ) + ( ( ( Max( ( Max( ACS,MRS ) + FirstVNF_RAM ),( Min( ACS ,RRS ) - CRS ) ) * FirstVNF_RAM ) * FirstVNF_Mem_Server ) + BR ) )", "choosing": "( ( ( ( CS / RRSe ) * ( Max( DS,( MUM * MUM ) ) - MUC ) ) - ( Max( ( ( RMSe * MUM ) - ( RMSe + MUR ) ),CS ) - MUC ) ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4732037444532657}, {"determining": "( ( ( FirstVNF_RAM / AMS ) + ( ( Min( RRS ,Const ) + DDR ) / AMS ) ) + Min( RRS ,( Const * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( Min( RRSe ,( Min( CS ,Min( ( RRSe / MLU ) ,( RMSe / MUM ) ) ) * ( MUC + MLU ) ) ) * Min( RRSe ,( Min( MUM ,RMSe ) * ( Min( CS ,MUR ) - MLU ) ) ) ) ) / ( MUC + ( ( Min( ( RRSe * ( RCSe / MUR ) ) ,( RCSe + ( MLU + DS ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.32537672394163164}, {"determining": "( ( ( RRS / ( MRS - ( PN * ( ( RRS - Const ) * MDR ) ) ) ) / ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( Max( FirstVNF_Mem,FirstVNF_RAM ) / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,Min( ( MUR * MUR ) ,( MUR + ( Min( MLU ,RMSe ) + ( CS * ( Max( RMSe,MUR ) - ( RCSe * MLU ) ) ) ) ) ) ) - ( Max( ( ( MUC / RRSe ) * RCSe ),Max( RRSe,RMSe ) ) - ( ( DS + MUM ) - ( RRSe + MUR ) ) ) )", "obj1": 0.38188976377952755, "obj2": 0.44566159755991414}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + ( RRSe - DS ) ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.6653543307086615, "obj2": 0.17566321940492202}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( ( Const * Const ) ,( ACS + MDR ) ) ) + ( ( ( Max( ( DDR + FirstVNF_RAM ),( Min( ACS ,RRS ) - CRS ) ) * FirstVNF_RAM ) * FirstVNF_Mem_Server ) + BR ) )", "choosing": "( ( ( ( CS / RRSe ) * ( Max( DS,( MUM * MUM ) ) - MUC ) ) - ( Max( ( ( RMSe * MUM ) - ( RMSe + MUR ) ),CS ) - MUC ) ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49920910511592004}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4630844425816847}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / PN ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( ( ( ( Max( Max( ACS,MRS ),MRS ) * Min( BR ,FirstVNF_Mem_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_RAM_Server * DDR ) ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + DS ) - ( RCSe / ( MUC * RMSe ) ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe * RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.43503937007874016, "obj2": 0.3977149120093601}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "( Max( ( ( Min( ( ( ( MRS - Const ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) - AMS ) ,( ( BR / FirstVNF_Mem ) + ( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / ( FirstVNF_RAM / BR ) ) ) ) * ( RRS * FirstVNF_Mem_Server ) ) * RRS ),CRS ) * ( Const * MDR ) )", "choosing": "Min( Max( ( RCSe - ( DS / MUR ) ),( MUR + RMSe ) ) ,( ( ( Max( Min( MLU ,RMSe ),( RMSe / Max( RRSe,MUR ) ) ) - ( MUC + CS ) ) * ( ( Max( MUC,RCSe ) - ( RCSe + ( MUM + DS ) ) ) - ( ( RRSe * ( RRSe + Min( DS ,RCSe ) ) ) - RRSe ) ) ) + RCSe ) )", "obj1": 0.1141732283464567, "obj2": 0.7867153950910953}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Min( ( ACS * Max( ARS,MDR ) ) ,FirstVNF_Mem ),FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( ( MUR + Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - Max( RCSe,RMSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4104468501778281}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14170664049302198}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.26221704141640123}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( ( AMS * ( Const * ACS ) ) + ( Const * BR ) )", "choosing": "( Min( ( ( ( MUM / RMSe ) + ( Max( MUM,( ( RRSe * RRSe ) - Min( RCSe ,MUM ) ) ) - RCSe ) ) / Min( CS ,RRSe ) ) ,RMSe ) / ( MUC + Max( ( DS + ( ( ( MUR / ( MUC / CS ) ) / MUC ) / ( ( ( MUC - MUM ) + RRSe ) - RCSe ) ) ),MUR ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3106517100705624}, {"determining": "( ( ( ( MDR / ( MRS - ( MRS - ( DDR * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( DS + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( RRSe + ( ( ( ( DS + MUR ) / MLU ) / ( ( ( MUR - MUM ) + ( RCSe / MUR ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),( RCSe * ( CS + MUC ) ) ) ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7917060788704525}, {"determining": "( ( RRS + ( ( CRS + ACS ) + FirstVNF_CPU ) ) - ( ACS * ( DDR / Max( FirstVNF_RAM,( Max( RRS,( CRS + DDR ) ) / ( CRS + Const ) ) ) ) ) )", "choosing": "Min( ( ( ( CS - CS ) / ( ( ( ( MLU + DS ) - ( RCSe / ( MUC * RMSe ) ) ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( ( RCSe * RRSe ) / ( RCSe * DS ) ) ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.16141732283464566, "obj2": 0.7098523390358968}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( CS ,MUR ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4241477604197791}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,BR ) * ( FirstVNF_Mem_Server * Const ) ) * CRS ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * ( DDR + ARS ) ) ) )", "choosing": "Min( ( ( ( MUR + Min( CS ,RMSe ) ) + ( Max( Min( Min( Max( MUR,DS ) ,DS ) ,MUC ),( ( ( MUR + RCSe ) - Min( MUR ,RMSe ) ) - ( MLU - ( MUR - RRSe ) ) ) ) + Min( DS ,MUR ) ) ) / ( ( RMSe + MUC ) - ( DS / MUR ) ) ) ,( ( MUR * RRSe ) + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.14763779527559054, "obj2": 0.7325959124323805}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( DS + MLU ) ,( MLU + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.10713103819072686}, {"determining": "Min( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + Const ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( Max( ( DS / RMSe ),Min( RMSe ,( MUM - DS ) ) ) + RRSe ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06274116072701191}, {"determining": "Min( Min( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( BR,Min( ACS ,ACS ) ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) ,( ( MDR / ( ( CRS + ACS ) - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * ( MUM * MUC ) ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) + RCSe ) )", "obj1": 0.21456692913385828, "obj2": 0.6269072776820372}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( ( Min( CS ,MUR ) + MUR ) - Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( RCSe * DS ) ) ) + ( MUC * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.029989824326331967}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.6240157480314961, "obj2": 0.21989958670406956}, {"determining": "( ( ( ( ( ( ACS + Min( Min( FirstVNF_RAM ,ACS ) ,CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + ( RRS / ( FirstVNF_CPU_Server + ( AMS + MRS ) ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( ( MUM / RMSe ) + ( Max( MLU,MUM ) - RCSe ) ) / ( CS / RRSe ) ) ,RMSe ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Min( ( MLU + CS ) ,( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05681205023476096}, {"determining": "( Max( Const,FirstVNF_Mem ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe - ( MUC + CS ) ) ) / ( MUC + ( ( Min( ( DS - MUC ) ,Max( ( MLU + CS ),( MUC + MUR ) ) ) + ( MUR - ( Min( DS ,RMSe ) - Min( MLU ,MUM ) ) ) ) + RMSe ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "( Min( Min( ( ( MRS - FirstVNF_RAM ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * Max( FirstVNF_RAM_Server,FirstVNF_RAM ) ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( ( MUM - Min( RRSe ,RCSe ) ) + RMSe ) + RMSe ) ,DS ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.4004790802846293}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + ( RRSe - DS ) ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.3700787401574803, "obj2": 0.4658265840057077}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( ACS / PN ) ) ) ,( ( Max( FirstVNF_RAM_Server,( MDR / ( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) ) ) * ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * ACS ) ) ) ) )", "choosing": "( Max( ( RRSe + Min( CS ,CS ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( ( RMSe * MUR ) - RCSe ) ,RRSe ) ) ) ) ) - ( MUC / RRSe ) )", "obj1": 0.265748031496063, "obj2": 0.5655925056643624}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + Min( Max( DDR,CRS ) ,CRS ) ) * ( ACS * ( FirstVNF_CPU_Server - AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( Max( ( MUR / CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + ( DS * RCSe ) ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7417538197244391}, {"determining": "Min( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + Const ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( Max( ( DS / RMSe ),Min( RMSe ,( MUM - DS ) ) ) + RRSe ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06274116072701191}, {"determining": "Min( Max( Min( ( Max( FirstVNF_RAM,AMS ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( RRS - ( FirstVNF_CPU_Server + ACS ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( ( MUC + DS ) * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( ( ( RCSe * RCSe ) - ( MLU - MLU ) ) - MUR ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5761606469434866}, {"determining": "Min( Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.6259842519685039, "obj2": 0.19932004938788048}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.20669291338582677, "obj2": 0.6322643913083416}, {"determining": "Min( Max( Min( ( ( PN / ACS ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( ( MUR + Min( CS ,RMSe ) ) * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.572083342457731}, {"determining": "( PN + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RRSe + ( ( ( ( DS + MUR ) / MLU ) / ( ( ( MUR - MUM ) + ( RCSe / MUR ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) ) ) / ( MUC + ( ( MUR - MLU ) + RMSe ) ) )", "obj1": 0.9389763779527559, "obj2": 0.026866603165388928}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( ( Const * Const ) ,( ACS + MDR ) ) ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.35236220472440943, "obj2": 0.4859033744617911}, {"determining": "( ( ( ( ( ( ACS + Min( Min( FirstVNF_RAM ,ACS ) ,CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + ( RRS / ( FirstVNF_CPU_Server + ( AMS + MRS ) ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + RRSe ) ) ) / ( MUC + ( ( Min( Min( MLU ,MUR ) ,( MLU * DS ) ) + RMSe ) + RMSe ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05420362880848177}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.5568881799667061}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( PN * ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + ( RRSe - DS ) ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),CS ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.48446841801964474}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.484251968503937, "obj2": 0.30525697966293874}, {"determining": "( Min( ( ( Max( BR,FirstVNF_CPU ) - DDR ) + Max( ( CRS + MRS ),Max( ( BR + FirstVNF_CPU_Server ),ARS ) ) ) ,PN ) / ( ARS - RRS ) )", "choosing": "Min( ( CS * ( ( ( ( ( Min( CS ,RMSe ) + Max( MUC,MUR ) ) + CS ) + Min( ( ( RCSe + DS ) / CS ) ,MUR ) ) + ( MUR / ( ( ( RCSe - RCSe ) - RCSe ) + ( RMSe / RCSe ) ) ) ) / ( CS - MUC ) ) ) ,Min( CS ,MUR ) )", "obj1": 0.1732283464566929, "obj2": 0.6969097675456125}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( PN - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ARS / Max( ARS,FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( ( DS / MUR ) - Max( ( CS - ( ( RCSe - MUR ) / RCSe ) ),RCSe ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + MLU ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7006676630603869}, {"determining": "( ( ( MDR / ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) - Const ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( RRS,ARS ) * Const ) ) )", "choosing": "( ( Max( CS,CS ) / ( ( Min( Max( ( ( MLU / MUR ) / Max( RRSe,CS ) ),( ( RCSe - DS ) - RMSe ) ) ,CS ) + ( DS / MLU ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( Min( ( ( DS + MUC ) - RRSe ) ,RCSe ) - DS ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM / BR ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + ( MUC / RRSe ) ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.28220136882219127}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( RRS,Min( ( ( RRS + BR ) * ( ACS * ( MDR * RRS ) ) ) ,ACS ) ) / ( MDR + RRS ) ) + ( MDR / ARS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( ( RRSe + Min( ( RMSe + MUM ) ,( RCSe - MUR ) ) ),Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.9586614173228346, "obj2": 0.01708902257237434}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( DS + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( RRSe + ( ( ( ( DS + MUR ) / MLU ) / ( ( ( MUR - MUM ) + ( RCSe / MUR ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.03891185383993155}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ACS ) )", "choosing": "Min( Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03403956793932622}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.26221704141640123}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( CS ,MUR ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4241477604197791}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) * Max( BR,FirstVNF_Mem ) ) ,( ARS * BR ) )", "choosing": "Min( ( ( ( CS - CS ) / Max( DS,MUM ) ) * CS ) ,Min( CS ,MUR ) )", "obj1": 0.17913385826771652, "obj2": 0.6923998990119447}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( MUC + ( ( MUR - MLU ) + RMSe ) ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.0836673055871175}, {"determining": "( ( DDR + FirstVNF_Mem_Server ) + Max( AMS,FirstVNF_Mem ) )", "choosing": "( ( ( ( DS - RRSe ) / CS ) + RRSe ) - ( DS + ( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.22244094488188976, "obj2": 0.6212475560921812}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5491759309694082}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ,( RCSe + ( ( ( RMSe + MUC ) - Min( ( RRSe + CS ) ,RCSe ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7696850393700787, "obj2": 0.08939971917677231}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,Min( MRS ,CRS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / BR ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( ( Min( ( RRSe * ( RCSe / MUR ) ) ,( RCSe + ( MLU + DS ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.560199724700406}, {"determining": "Min( Max( ( FirstVNF_RAM_Server + ( Const / PN ) ),( MDR + RRS ) ) ,( Min( Max( Min( FirstVNF_CPU ,BR ),Max( FirstVNF_Mem,( Const / Min( BR ,( AMS * AMS ) ) ) ) ) ,( ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) - Min( ACS ,( Const * ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) ) ) ) ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,( Max( DS,MLU ) / DS ) ) ) ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.2901879055280826}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( MUC + ( ( ( CS / DS ) * MLU ) + RMSe ) ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.00679794647478072}], "17": [{"determining": "( Min( ( ( PN - DDR ) + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( MUC + ( ( ( ( MUM + MUC ) - ( RRSe + MUR ) ) * MLU ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + Min( ( Const * Const ) ,( PN * CRS ) ) ) + ( FirstVNF_CPU_Server - ACS ) )", "choosing": "Min( Min( ( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) * RMSe ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( MRS - ( PN * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) * Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ) - Max( RRSe,( Max( ( RCSe / CS ),( Min( ( RMSe - RRSe ) ,RCSe ) - RMSe ) ) / RRSe ) ) )", "obj1": 0.4271653543307087, "obj2": 0.38732017925054385}, {"determining": "( ( AMS * FirstVNF_RAM_Server ) + ( ( FirstVNF_Mem_Server - Max( ( ARS * ARS ),Min( Const ,FirstVNF_RAM ) ) ) + ( FirstVNF_CPU_Server + ( CRS - Const ) ) ) )", "choosing": "( ( RRSe - Min( Min( Max( Max( ( ( MLU + RRSe ) + RMSe ),RCSe ),Min( ( MUM - ( MUC + MLU ) ) ,( ( MUM / RRSe ) * MUM ) ) ) ,MUM ) ,( MUM + Max( RMSe,MLU ) ) ) ) * ( DS - MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6556990991461963}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( Max( RRS,PN ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) ) ) ),( MDR + ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( ARS,FirstVNF_Mem ) ) ) ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( DS - ( CS - ( MUC / RCSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR - Max( DS,( CS * RRSe ) ) ) ) + RMSe ) ) )", "obj1": 0.6161417322834646, "obj2": 0.22608712077920776}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.7381889763779528, "obj2": 0.11637941641266793}, {"determining": "( ( Min( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ),( ARS - FirstVNF_Mem_Server ) ) - Max( Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ),FirstVNF_RAM_Server ) ) ,Min( Max( ARS,( FirstVNF_CPU_Server - RRS ) ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( MLU + MUR ) ) ) / ( MUC + ( ( Min( ( Min( CS ,( RRSe * MUR ) ) + MUR ) ,Max( Max( RRSe,CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.531496062992126, "obj2": 0.28078102041241315}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( ( FirstVNF_RAM / ( ( FirstVNF_Mem_Server * Min( Const ,CRS ) ) + BR ) ) / MDR ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ),Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.13736010811480306}, {"determining": "Min( Max( ( MDR + RRS ),Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - Const ) ) )", "choosing": "( ( MUR / ( RCSe * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC * MUR ) ) ) + ( MUR / ( MUC - RCSe ) ) ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25951041264739494}, {"determining": "( ( FirstVNF_RAM + DDR ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( MUC / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( ( RMSe / MUC ) ,DS ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4236117904232285}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) / ( MUC + ( ( RRSe + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23560316643201665}, {"determining": "( Min( PN ,( MDR - Min( ( FirstVNF_Mem_Server - CRS ) ,FirstVNF_Mem_Server ) ) ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / CS ) + RRSe ) - ( ( DS * ( ( Max( ( ( RCSe - MUC ) - MLU ),Min( ( RMSe - MUR ) ,DS ) ) * ( ( ( RMSe * MUR ) / ( RRSe - RCSe ) ) - ( Max( RRSe,MUM ) + MUM ) ) ) - ( ( MLU - ( ( MUR - MLU ) / RRSe ) ) / RRSe ) ) ) * MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "Min( Max( ( Max( ( FirstVNF_RAM - MDR ),( Const * FirstVNF_CPU_Server ) ) / DDR ),Max( BR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem * PN ) - ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( Min( ( MUM + MUM ) ,MLU ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUC ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) + Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( RMSe * MUM ) ) ) ) + RRSe ) ) )", "obj1": 0.12598425196850394, "obj2": 0.7607341384337327}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5022391652756294}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( Max( Min( ( Const * Const ) ,( PN * CRS ) ),( ACS + ( PN * RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * Min( FirstVNF_CPU_Server ,AMS ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Max( ( RCSe - ( ( RMSe / MUM ) - Min( RMSe ,RMSe ) ) ),MLU ) ) + RCSe ) ) ,Max( RMSe,Min( MUM ,RMSe ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6882514192504993}, {"determining": "( ( RRS / ( Const * BR ) ) + ( ( FirstVNF_CPU / Min( Max( MDR,Const ) ,MRS ) ) + ARS ) )", "choosing": "( ( ( RCSe - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( Max( ( Min( MLU ,( CS / RCSe ) ) + CS ),MUC ) + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) * ( DS - CS ) )", "obj1": 0.43700787401574803, "obj2": 0.37314887156211596}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.022095221230989837}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( CS + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6181102362204725, "obj2": 0.2046162586393597}, {"determining": "( ( ( ( ( Max( ( DDR + FirstVNF_RAM ),( Min( ACS ,RRS ) - CRS ) ) * FirstVNF_RAM ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( Max( ( ( ( CS / RRSe ) * ( Max( DS,( MUM * MUM ) ) - MUC ) ) - ( Max( ( ( RMSe * MUM ) - ( RMSe + MUR ) ),CS ) - MUC ) ),RCSe ) * MUC ) )", "obj1": 0.11614173228346457, "obj2": 0.7685562899269054}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( MRS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / RRSe ) ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.02438834308799958}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( Min( CS ,MUR ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.452755905511811, "obj2": 0.3721630130377253}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2635824467426827}, {"determining": "( Min( Max( ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) + ARS ),( MDR * FirstVNF_CPU ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( Const / ( MRS - ( FirstVNF_Mem_Server * PN ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( Max( DS,( ( CS - MUR ) - MUC ) ) + CS ) ) ) / ( MUC / ( ( Min( CS ,RMSe ) + ( DS - CS ) ) + Min( Max( RRSe,CS ) ,RCSe ) ) ) )", "obj1": 0.7893700787401575, "obj2": 0.08092724005283511}, {"determining": "( ( ( FirstVNF_RAM / AMS ) + ( ( Min( RRS ,Const ) + DDR ) / AMS ) ) + Min( RRS ,( Const * FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( Min( RRSe ,( Min( CS ,Min( ( RRSe / MLU ) ,( RMSe / MUM ) ) ) * ( MUC + MLU ) ) ) * Min( RRSe ,( Min( MUM ,RMSe ) * ( Min( CS ,MUR ) - MLU ) ) ) ) ) / ( MUC + ( ( Min( ( RRSe * ( RCSe / MUR ) ) ,( RCSe + ( MLU + DS ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.4744094488188976, "obj2": 0.32537672394163164}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ACS ) )", "choosing": "( ( RCSe - ( ( Min( ( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) * RMSe ) ,( RCSe / MUC ) ) / ( RRSe * ( RMSe / RMSe ) ) ) * DS ) ) * MUR )", "obj1": 0.8996062992125984, "obj2": 0.04323912274843332}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( AMS - CRS ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / MLU ) / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2951075769912896}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM / BR ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + ( MUC / RRSe ) ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.28220136882219127}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * CRS ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7815720935741388}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( MRS + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.484251968503937, "obj2": 0.30525697966293874}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Min( ( ACS * Max( ARS,MDR ) ) ,FirstVNF_Mem ),FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( ( MUR + Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - Max( RCSe,RMSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4104468501778281}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19521769175345594}, {"determining": "( ( ( ( MDR / ( MRS - ( MRS - ( DDR * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( DS + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( RRSe + ( ( ( ( DS + MUR ) / MLU ) / ( ( ( MUR - MUM ) + ( RCSe / MUR ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),( RCSe * ( CS + MUC ) ) ) ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7917060788704525}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.3106517100705624}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( RRS,Min( ( ( RRS + BR ) * ( ACS * ( MDR * RRS ) ) ) ,ACS ) ) / ( MDR + RRS ) ) + ( MDR / ARS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( ( RRSe + Min( ( RMSe + MUM ) ,( RCSe - MUR ) ) ),Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.9586614173228346, "obj2": 0.01708902257237434}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5236815383579821}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + Min( Max( DDR,CRS ) ,CRS ) ) * ( ACS * ( FirstVNF_CPU_Server - AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( Max( ( MUR / CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + ( DS * RCSe ) ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7417538197244391}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( PN / ACS ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( RRSe ,RRSe ) ) ) ) ) )", "obj1": 0.2992125984251969, "obj2": 0.5342149575961936}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( PN * ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + ( RRSe - DS ) ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),CS ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.3543307086614173, "obj2": 0.48446841801964474}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.37598425196850394, "obj2": 0.4630844425816847}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6496062992125984, "obj2": 0.19164440788430043}, {"determining": "( ( ( MDR / ( ( ARS + ( MDR - MDR ) ) / RRS ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + MUR ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.45866141732283466, "obj2": 0.3587425441552388}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,Min( CS ,( ( CS / DS ) * MLU ) ) )", "obj1": 0.14763779527559054, "obj2": 0.722219800135509}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( DS + MLU ) ,( MLU + ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7460629921259843, "obj2": 0.10713103819072686}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09693928997118553}, {"determining": "Min( Min( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( BR,Min( ACS ,ACS ) ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) ,( ( MDR / ( ( CRS + ACS ) - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * ( MUM * MUC ) ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) + RCSe ) )", "obj1": 0.21456692913385828, "obj2": 0.6269072776820372}, {"determining": "( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) - CRS ) + FirstVNF_CPU_Server ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUM - RRSe ) )", "obj1": 0.65748031496063, "obj2": 0.17570780899439575}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Const ) ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / Min( MDR ,RRS ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( ( ( DS * ( Min( CS ,RMSe ) / ( RCSe + RCSe ) ) ) + ( MLU - ( ( MUC / CS ) / CS ) ) ) + MUC ) ) ) / Min( MUC ,( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6071307586345053}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.051277142424476105}, {"determining": "Min( Min( FirstVNF_CPU ,MDR ) ,( ( MDR * ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( Min( DS ,( RRSe - RMSe ) ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,Max( ( CS - MUM ),Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5236815383579821}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + ( RRSe - DS ) ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.3700787401574803, "obj2": 0.4658265840057077}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( ACS / PN ) ) ) ,( ( Max( FirstVNF_RAM_Server,( MDR / ( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) ) ) * ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * ACS ) ) ) ) )", "choosing": "( Max( ( RRSe + Min( CS ,CS ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( ( RMSe * MUR ) - RCSe ) ,RRSe ) ) ) ) ) - ( MUC / RRSe ) )", "obj1": 0.265748031496063, "obj2": 0.5655925056643624}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( ( DDR + MRS ) / ACS ) ) - FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server - ARS ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( RCSe - RCSe ) + ( ( MUM - MLU ) - ( MLU * RRSe ) ) ) ) ) ) / ( CS - CS ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48717432574918934}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * MUR )", "obj1": 0.8838582677165354, "obj2": 0.04364026357464541}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4028733989415938}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - ( CS + MUC ) ) * MUR )", "obj1": 0.8326771653543307, "obj2": 0.06381434059456305}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5761606469434866}, {"determining": "( ( AMS * ( Const * ACS ) ) + ( Const * BR ) )", "choosing": "( Min( ( ( ( MUM / RMSe ) + ( Max( MUM,( ( RRSe * RRSe ) - Min( RCSe ,MUM ) ) ) - RCSe ) ) / Min( CS ,RRSe ) ) ,RMSe ) / ( MUC + Max( ( DS + ( ( ( MUR / ( MUC / CS ) ) / MUC ) / ( ( ( MUC - MUM ) + RRSe ) - RCSe ) ) ),MUR ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6535433070866141, "obj2": 0.1903628010480408}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( ( ACS * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + ( ( MDR / ( MRS - ( ( BR * ARS ) * FirstVNF_RAM_Server ) ) ) + ( ACS - ( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - RRSe ) ) ) ) ) + Min( Min( RRSe ,RMSe ) ,DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03321211663428857}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) / CS ) ,( MUR + ( RRSe / ( DS * RRSe ) ) ) )", "obj1": 0.8188976377952756, "obj2": 0.06983773474642956}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( ( Const * Const ) ,( ACS + MDR ) ) ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3779527559055118, "obj2": 0.44585885908812206}, {"determining": "( ( ( MDR / ( MRS - ( ( AMS / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( FirstVNF_CPU * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( Max( MLU,RMSe ) / Min( ( CS * Max( MUC,DS ) ) ,MUC ) ) ) ) ) )", "obj1": 0.4094488188976378, "obj2": 0.4028733989415938}, {"determining": "Min( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Max( ACS,( MDR - FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) ,Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( CS ,MUM ) ) ,( RCSe + ( ( DS * RCSe ) + MUR ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5407138576795211}, {"determining": "Min( Min( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( Min( ACS ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) ,( ( MDR / ( ( CRS + ACS ) + FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7131577709527522}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ( CRS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server - MRS ) ) / ( FirstVNF_CPU + CRS ) ) ) ) ) )", "choosing": "( Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( MUM / Max( MUC,DS ) ) ,RRSe ) ) ) ) ) - ( Min( MUC ,DS ) / RRSe ) )", "obj1": 0.8464566929133859, "obj2": 0.054830872316426214}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( ( CS - CS ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( ( MUM - Min( RRSe ,RCSe ) ) + RMSe ) + RMSe ) ,DS ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5491759309694082}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8740157480314961, "obj2": 0.046145648943266684}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.968503937007874, "obj2": 0.013070775401638045}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const - MRS ) ) ,Min( ( Const * Const ) ,( ACS + MDR ) ) ) + Max( AMS,( Max( ( Max( ( ACS / PN ),Max( MRS,( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) * Const ),PN ) / ( FirstVNF_RAM * DDR ) ) ) )", "choosing": "( ( ( ( CS / RRSe ) * ( Max( DS,Min( MUM ,MUM ) ) - MUC ) ) - ( Max( ( ( RMSe * MUM ) - ( RMSe + MUR ) ),CS ) - MUC ) ) * ( ( CS - CS ) / ( ( MLU / ( RMSe + ( ( ( RMSe + RCSe ) - RCSe ) - ( RRSe - RMSe ) ) ) ) + ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4732037444532657}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,Min( MRS ,CRS ) ) ) ,( ( Max( Min( ( FirstVNF_RAM_Server + ( Const / BR ) ) ,ACS ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( ( Min( ( RRSe * ( RCSe / MUR ) ) ,( RCSe + ( MLU + DS ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) ) )", "obj1": 0.2736220472440945, "obj2": 0.560199724700406}, {"determining": "( ( ( MDR / ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) - Const ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( RRS,ARS ) * Const ) ) )", "choosing": "( ( Max( CS,CS ) / ( ( Min( Max( ( ( MLU / MUR ) / Max( RRSe,CS ) ),( ( RCSe - DS ) - RMSe ) ) ,CS ) + ( DS / MLU ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( Min( ( ( DS + MUC ) - RRSe ) ,RCSe ) - DS ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( MUC + ( ( ( CS / DS ) * MLU ) + RMSe ) ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.00679794647478072}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - RRSe )", "obj1": 0.20669291338582677, "obj2": 0.6322643913083416}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( ( MDR / ( ( CRS + ACS ) + FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + ( MUR / ( RCSe * ( CS + MUC ) ) ) ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09147869860452153}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),DS ) )", "obj1": 0.8051181102362205, "obj2": 0.07342226529000478}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.485633623122444}, {"determining": "Min( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_CPU + Const ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,( ( MDR / ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( MLU + CS ) + RMSe ) ) ) / Min( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( Max( ( DS / RMSe ),Min( RMSe ,( MUM - DS ) ) ) + RRSe ) ) ) ,( RCSe + ( ( DS * RRSe ) + RRSe ) ) ) )", "obj1": 0.8405511811023622, "obj2": 0.06207944681059032}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + ( RRSe - DS ) ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.6653543307086615, "obj2": 0.17566321940492202}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14170664049302198}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,DS ) / CS ) ,( MUR + ( RRSe / ( DS * RRSe ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.07207602677866454}, {"determining": "( Min( PN ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * ( RRS * CRS ) ) ) - MDR ) )", "choosing": "( ( ( ( CS - RRSe ) / Max( DS,MUM ) ) * CS ) / ( MUC + ( ( RRSe + Min( Min( ( RMSe + ( DS * MUR ) ) ,( MLU * MUR ) ) ,DS ) ) + RMSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05311056818933792}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.20669291338582677, "obj2": 0.6322643913083416}, {"determining": "Min( Max( CRS,MDR ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR + FirstVNF_Mem ) / Max( ACS,( ACS - ARS ) ) ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( DS ,( ( Max( RCSe,( MUM * Min( RCSe ,MUM ) ) ) / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.5568881799667061}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( Max( DS,MUM ) - ( DS / MUR ) ) / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ,( RCSe + ( ( ( RMSe + MUC ) - Min( ( RRSe + CS ) ,RCSe ) ) / ( MUR + RCSe ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08776090417747356}], "18": [{"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + Min( ( Const * Const ) ,( PN * CRS ) ) ) + ( FirstVNF_CPU_Server - ACS ) )", "choosing": "Min( Min( ( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) * RMSe ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( PN - DDR ) + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( MUC + ( ( ( ( MUM + MUC ) - ( RRSe + MUR ) ) * MLU ) + RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( MDR - MDR ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( DS - CS ) - CS ) * MUR )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( Max( Min( ( Const * Const ) ,( PN * CRS ) ),( ACS + ( PN * RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * Min( FirstVNF_CPU_Server ,AMS ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Max( ( RCSe - ( ( RMSe / MUM ) - Min( RMSe ,RMSe ) ) ),MLU ) ) + RCSe ) ) ,Max( RMSe,Min( MUM ,RMSe ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6882514192504993}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( CS + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6181102362204725, "obj2": 0.2046162586393597}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( ( FirstVNF_RAM + DDR ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( MUC / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( ( RMSe / MUC ) ,DS ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4236117904232285}, {"determining": "( ( ( Max( ACS,RRS ) / ( MDR + RRS ) ) + ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM / DDR ) + Max( PN,Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS / Min( RRSe ,DS ) ) ) ) / ( RCSe / ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,( RRSe + ( MUC / MLU ) ) ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19396969311958862}, {"determining": "( Min( PN ,( MDR - Min( ( FirstVNF_Mem_Server - CRS ) ,FirstVNF_Mem_Server ) ) ) / ( ( ACS * DDR ) + FirstVNF_CPU_Server ) )", "choosing": "( ( ( CS / CS ) + RRSe ) - ( ( DS * ( ( Max( ( ( RCSe - MUC ) - MLU ),Min( ( RMSe - MUR ) ,DS ) ) * ( ( ( RMSe * MUR ) / ( RRSe - RCSe ) ) - ( Max( RRSe,MUM ) + MUM ) ) ) - ( ( MLU - ( ( MUR - MLU ) / RRSe ) ) / RRSe ) ) ) * MUM ) )", "obj1": 0.25196850393700787, "obj2": 0.5946330401436565}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( ( Const * Const ) ,( ACS + MDR ) ) ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4429973952022221}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.3484251968503937, "obj2": 0.4697244961955773}, {"determining": "Min( Min( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( BR,Min( ACS ,ACS ) ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) ,( ( MDR / ( ( CRS + ACS ) - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * ( MUM * MUC ) ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) + RCSe ) )", "obj1": 0.21456692913385828, "obj2": 0.6269072776820372}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7601346941915306}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5155130096375699}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( MRS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / RRSe ) ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.02438834308799958}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + ( RRSe - DS ) ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.3700787401574803, "obj2": 0.4658265840057077}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( ( FirstVNF_Mem_Server - Const ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.5649606299212598, "obj2": 0.24559766854643847}, {"determining": "Min( Max( ( MDR + RRS ),Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - Const ) ) )", "choosing": "( ( MUR / ( RCSe * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC * MUR ) ) ) + ( MUR / ( MUC - RCSe ) ) ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25951041264739494}, {"determining": "( ( AMS * ( Const * ACS ) ) + ( Const * BR ) )", "choosing": "( Min( ( ( ( MUM / RMSe ) + ( Max( MUM,( ( RRSe * RRSe ) - Min( RCSe ,MUM ) ) ) - RCSe ) ) / Min( CS ,RRSe ) ) ,RMSe ) / ( MUC + Max( ( DS + ( ( ( MUR / ( MUC / CS ) ) / MUC ) / ( ( ( MUC - MUM ) + RRSe ) - RCSe ) ) ),MUR ) ) )", "obj1": 0.46062992125984253, "obj2": 0.3527178422603588}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + Min( Max( DDR,CRS ) ,CRS ) ) * ( ACS * ( FirstVNF_CPU_Server - AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( Max( ( MUR / CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + ( DS * RCSe ) ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7417538197244391}, {"determining": "( ( ( ( MDR / ( MRS - ( MRS - ( DDR * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.11614173228346457, "obj2": 0.7665467990214864}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM / BR ) + FirstVNF_RAM_Server ) / ( Min( ACS ,( FirstVNF_Mem / ARS ) ) - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + ( MUC / RRSe ) ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MLU ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27122347972455085}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,DS ) + MUR ) ) ) - ( Max( ( Min( MUC ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5491759309694082}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) / CS ) ,( MUR + ( RRSe / ( DS * RRSe ) ) ) )", "obj1": 0.8858267716535433, "obj2": 0.04221128309415412}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * CRS ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7815720935741388}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( Max( CS,MUM ) - Max( RRSe,( Max( MUC,DS ) + ( MUC + ( ( ( CS / DS ) * MLU ) + RMSe ) ) ) ) )", "obj1": 0.9862204724409449, "obj2": 0.00679794647478072}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( ( RRSe + Min( ( RMSe + MUM ) ,( RCSe - MUR ) ) ),Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7322834645669292, "obj2": 0.12934960041424093}, {"determining": "( ( ( ( MDR / ( MRS - ( MRS - ( DDR * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( DS + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( RRSe + ( ( ( ( DS + MUR ) / MLU ) / ( ( ( MUR - MUM ) + ( RCSe / MUR ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),( RCSe * ( CS + MUC ) ) ) ) ) ) )", "obj1": 0.10826771653543307, "obj2": 0.7917060788704525}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.4996007167894351}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5761606469434866}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( ACS / PN ) ) ) ,( ( Max( FirstVNF_RAM_Server,( MDR / ( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) ) ) * ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * ACS ) ) ) ) )", "choosing": "( Max( ( RRSe + Min( CS ,CS ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( ( RMSe * MUR ) - RCSe ) ,RRSe ) ) ) ) ) - ( MUC / RRSe ) )", "obj1": 0.265748031496063, "obj2": 0.5655925056643624}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3963703890972605}, {"determining": "Min( Max( CRS,MDR ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR + FirstVNF_Mem ) / Max( ACS,( ACS - ARS ) ) ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( DS ,( ( Max( RCSe,( MUM * Min( RCSe ,MUM ) ) ) / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.5568881799667061}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( Min( CS ,MUR ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.452755905511811, "obj2": 0.3721630130377253}, {"determining": "( ( ( MDR / ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) - Const ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( RRS,ARS ) * Const ) ) )", "choosing": "( ( Max( CS,CS ) / ( ( Min( Max( ( ( MLU / MUR ) / Max( RRSe,CS ) ),( ( RCSe - DS ) - RMSe ) ) ,CS ) + ( DS / MLU ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( Min( ( ( DS + MUC ) - RRSe ) ,RCSe ) - DS ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( MRS - ( PN * Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) * Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ) - Max( RRSe,( Max( ( RCSe / CS ),( Min( ( RMSe - RRSe ) ,RCSe ) - RMSe ) ) / RRSe ) ) )", "obj1": 0.4271653543307087, "obj2": 0.38732017925054385}, {"determining": "( Max( Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / ( DS * DS ) )", "obj1": 0.09055118110236221, "obj2": 0.8503512090779951}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.051277142424476105}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * ( FirstVNF_CPU - DDR ) ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - CS ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.030510063778392306}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Const ) ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / Min( MDR ,RRS ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( ( ( DS * ( Min( CS ,RMSe ) / ( RCSe + RCSe ) ) ) + ( MLU - ( ( MUC / CS ) / CS ) ) ) + MUC ) ) ) / Min( MUC ,( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6071307586345053}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14170664049302198}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8740157480314961, "obj2": 0.04610513795986847}, {"determining": "( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) - CRS ) + FirstVNF_CPU_Server ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUM - RRSe ) )", "obj1": 0.65748031496063, "obj2": 0.17570780899439575}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - Min( AMS ,( Min( FirstVNF_CPU_Server ,ACS ) * RRS ) ) ) ) + Min( ACS ,( ( FirstVNF_Mem / MRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( Max( DS,Min( RMSe ,MUC ) ) + CS ) ) ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + Min( DS ,RRSe ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4674015740843172}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.7002993361641089}, {"determining": "( ( RRS / ( Const * BR ) ) + ( ( FirstVNF_CPU / Min( Max( MDR,Const ) ,MRS ) ) + ARS ) )", "choosing": "( ( ( RCSe - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( Max( ( Min( MLU ,( CS / RCSe ) ) + CS ),MUC ) + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) * ( DS - CS ) )", "obj1": 0.43700787401574803, "obj2": 0.37314887156211596}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.4933542745689085}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.43503937007874016, "obj2": 0.3791567468870353}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Max( FirstVNF_Mem,RRS ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - Min( DS ,MUR ) ) / ( ( MUR + Min( Min( Min( MUM ,( RRSe - RMSe ) ) ,RMSe ) ,( MUC * MUM ) ) ) + RCSe ) ) ,Min( CS ,( ( CS / DS ) * MLU ) ) )", "obj1": 0.14763779527559054, "obj2": 0.722219800135509}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( ( ACS * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + ( ( MDR / ( MRS - ( ( BR * ARS ) * FirstVNF_RAM_Server ) ) ) + ( ACS - ( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - RRSe ) ) ) ) ) + Min( Min( RRSe ,RMSe ) ,DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03321211663428857}, {"determining": "( ( PN * FirstVNF_Mem_Server ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.022095221230989837}, {"determining": "( ( ( MDR / ( ( ARS + ( MDR - MDR ) ) / RRS ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + MUR ) + ( MLU / ( MUC + ( RCSe / RRSe ) ) ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.014428533719807948}, {"determining": "Min( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Max( ACS,( MDR - FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) ,Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( CS ,MUM ) ) ,( RCSe + ( ( DS * RCSe ) + MUR ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5407138576795211}, {"determining": "( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) - CRS ) + FirstVNF_CPU_Server ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUM - RRSe ) )", "obj1": 0.6614173228346457, "obj2": 0.1735584101318984}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Min( ( ACS * Max( ARS,MDR ) ) ,FirstVNF_Mem ),FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( ( MUR + Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - Max( RCSe,RMSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4104468501778281}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ( FirstVNF_Mem * RRS ),ACS ) / ( MDR + RRS ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - ( ( CS * ( ( ( ( RRSe + ( MUR * MUM ) ) - RMSe ) * Min( ( ( RCSe + MUM ) / ( MUM + MLU ) ) ,Min( ( RMSe * RRSe ) ,( MUC + MLU ) ) ) ) / MLU ) ) / Min( RCSe ,RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.40080119081192817}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "( Min( FirstVNF_RAM_Server ,( CRS * FirstVNF_RAM ) ) + ( MRS - Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RRSe / RMSe ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2635824467426827}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7736220472440944, "obj2": 0.08726994369563762}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6496062992125984, "obj2": 0.19164440788430043}, {"determining": "Min( Min( FirstVNF_CPU ,MDR ) ,( ( MDR * ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( Min( DS ,( RRSe - RMSe ) ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,Max( ( CS - MUM ),Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5236815383579821}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - RRSe )", "obj1": 0.20669291338582677, "obj2": 0.6322643913083416}, {"determining": "( ( ( MDR / ( ( ARS + ( MDR - MDR ) ) / RRS ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + MUR ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.4547244094488189, "obj2": 0.3622295299906848}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.5452755905511811, "obj2": 0.2635824467426827}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( Max( ACS,( MRS + FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) * Const ) )", "choosing": "( ( ( ( ( RCSe / CS ) - Min( Min( CS ,DS ) ,CS ) ) * RCSe ) + RRSe ) * MUR )", "obj1": 0.9507874015748031, "obj2": 0.01942161225116647}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( FirstVNF_CPU ,BR ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3020978988914786}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.7381889763779528, "obj2": 0.11637941641266793}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.7578740157480315, "obj2": 0.09693928997118553}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6535433070866141, "obj2": 0.1903628010480408}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5319477771911676}, {"determining": "Min( Min( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( Min( ACS ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) ,( ( MDR / ( ( CRS + ACS ) + FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7131577709527522}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.485633623122444}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( ( DDR + MRS ) / ACS ) ) - FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server - ARS ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( RCSe - RCSe ) + ( ( MUM - MLU ) - ( MLU * RRSe ) ) ) ) ) ) / ( CS - CS ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48717432574918934}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,DS ) / CS ) ,( MUR + ( RRSe / ( DS * RRSe ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.07207602677866454}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( Min( PN ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * ( RRS * CRS ) ) ) - MDR ) )", "choosing": "( ( ( ( CS - RRSe ) / Max( DS,MUM ) ) * CS ) / ( MUC + ( ( RRSe + Min( Min( ( RMSe + ( DS * MUR ) ) ,( MLU * MUR ) ) ,DS ) ) + RMSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05311056818933792}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - RRSe )", "obj1": 0.20669291338582677, "obj2": 0.6322643913083416}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - CS ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03321211663428857}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + ( MUC / RRSe ) ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2959550888331984}, {"determining": "( ( ACS + ( PN / ( ( ( ( Const / BR ) + FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_RAM ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( CRS * CRS ) ) ) ) )", "choosing": "( ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( ( MUC * CS ) ,Min( MUC ,MUM ) ) ) ) - ( ( MUM / MUC ) - ( RRSe + MUR ) ) ) - Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.27708505811646544}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.9704724409448819, "obj2": 0.012078461300614568}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,( BR / ( ( AMS - AMS ) + DDR ) ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - AMS ) )", "choosing": "( ( RRSe + ( CS - ( ( RCSe + ( DS / ( ( RRSe * DS ) + Max( RCSe,CS ) ) ) ) - Max( RMSe,( ( ( MLU * DS ) - MLU ) - ( MUM / MLU ) ) ) ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,MUM ) ) + RMSe ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23560316643201665}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.8051181102362205, "obj2": 0.07342226529000478}, {"determining": "( ( ( MDR / ( ( ARS + ( MDR - MDR ) ) / RRS ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + MUR ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.45866141732283466, "obj2": 0.3587425441552388}], "19": [{"determining": "( Min( FirstVNF_RAM_Server ,( CRS * FirstVNF_RAM ) ) + ( MRS - Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RRSe / RMSe ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + Min( ( Const * Const ) ,( PN * CRS ) ) ) + ( FirstVNF_CPU_Server - ACS ) )", "choosing": "Min( Min( ( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) * RMSe ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3441704571717641}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( ( Const * Const ) ,( ACS + MDR ) ) ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4429973952022221}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( ( RRS / ( Const * BR ) ) + ( ( FirstVNF_CPU / Min( Max( MDR,Const ) ,MRS ) ) + ARS ) )", "choosing": "( ( ( RCSe - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( Max( ( Min( MLU ,( CS / RCSe ) ) + CS ),MUC ) + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) * ( DS - CS ) )", "obj1": 0.43700787401574803, "obj2": 0.37314887156211596}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "( Max( Min( ( Const * Const ) ,( PN * CRS ) ),( ACS + ( PN * RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * Min( FirstVNF_CPU_Server ,AMS ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Max( ( RCSe - ( ( RMSe / MUM ) - Min( RMSe ,RMSe ) ) ),MLU ) ) + RCSe ) ) ,Max( RMSe,Min( MUM ,RMSe ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6882514192504993}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18119046874922992}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48562152119303065}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( MDR - MDR ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( DS - CS ) - CS ) * MUR )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( Min( ( ( ( ( MDR + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( ( ACS + MRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,MLU ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5100776574961369}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( Min( ( FirstVNF_CPU_Server + ( AMS - CRS ) ) ,Min( ARS ,Const ) ) + ( Max( BR,CRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR - ( RCSe * ( MUC + CS ) ) ) / Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( ( RMSe + MLU ) / RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5949164438252698}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.8051181102362205, "obj2": 0.07342226529000478}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Const ) ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / Min( MDR ,RRS ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( ( ( DS * ( Min( CS ,RMSe ) / ( RCSe + RCSe ) ) ) + ( MLU - ( ( MUC / CS ) / CS ) ) ) + MUC ) ) ) / Min( MUC ,( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6071307586345053}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( ( Max( Min( ACS ,CRS ),BR ) / FirstVNF_Mem_Server ) - MDR ) )", "choosing": "( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) / ( MUC + ( ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06738273264507727}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,( BR / ( ( AMS - AMS ) + DDR ) ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - AMS ) )", "choosing": "( ( RRSe + ( CS - ( ( RCSe + ( DS / ( ( RRSe * DS ) + Max( RCSe,CS ) ) ) ) - Max( RMSe,( ( ( MLU * DS ) - MLU ) - ( MUM / MLU ) ) ) ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,MUM ) ) + RMSe ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23560316643201665}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Min( ( ACS * Max( ARS,MDR ) ) ,FirstVNF_Mem ),FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( ( MUR + Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - Max( RCSe,RMSe ) )", "obj1": 0.4015748031496063, "obj2": 0.4104468501778281}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / ( MRS + FirstVNF_RAM_Server ) ) ) / MRS ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,( Max( MUC,DS ) / ( DS * DS ) ) ) / CS ) ,( MUR + ( RRSe / ( DS * RRSe ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.08125747890985152}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( FirstVNF_CPU ,BR ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3020978988914786}, {"determining": "( ( FirstVNF_RAM + DDR ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( MUC / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( ( RMSe / MUC ) ,DS ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4236117904232285}, {"determining": "( Min( PN ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * ( RRS * CRS ) ) ) - MDR ) )", "choosing": "( ( ( ( CS - RRSe ) / Max( DS,MUM ) ) * CS ) / ( MUC + ( ( RRSe + Min( Min( ( RMSe + ( DS * MUR ) ) ,( MLU * MUR ) ) ,DS ) ) + RMSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05311056818933792}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Max( FirstVNF_Mem,RRS ) * ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - Min( DS ,MUR ) ) / ( ( MUR + Min( Min( Min( MUM ,( RRSe - RMSe ) ) ,RMSe ) ,( MUC * MUM ) ) ) + RCSe ) ) ,Min( CS ,( ( CS / DS ) * MLU ) ) )", "obj1": 0.14763779527559054, "obj2": 0.722219800135509}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( ( CS - CS ) / Max( DS,Min( CS ,MUR ) ) ) * CS ) / ( MUC + ( ( RRSe + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.8917322834645669, "obj2": 0.04008381930033797}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR / ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.9409448818897638, "obj2": 0.02012752560997398}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + Min( Max( DDR,CRS ) ,CRS ) ) * ( ACS * ( FirstVNF_CPU_Server - AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( Max( ( MUR / CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + ( DS * RCSe ) ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7417538197244391}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RRSe + RMSe ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.39173228346456695, "obj2": 0.433476020098485}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.30118110236220474, "obj2": 0.5319477771911676}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8740157480314961, "obj2": 0.04610513795986847}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6226433897311545}, {"determining": "Min( Max( ( MDR + RRS ),Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - Const ) ) )", "choosing": "( ( MUR / ( RCSe * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC * MUR ) ) ) + ( MUR / ( MUC - RCSe ) ) ) + RMSe ) ) )", "obj1": 0.5590551181102362, "obj2": 0.25951041264739494}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7303149606299213, "obj2": 0.13029591526297407}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_CPU_Server / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ),MRS ) ) - ( ( FirstVNF_Mem_Server + ( ARS - DDR ) ) + ( ( MDR - MDR ) * Const ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( ( MUM * MUC ) * ( ( RRSe / RCSe ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( CS / RCSe ) + ( MUM + MUR ) ) ) ) ) ) ) )", "obj1": 0.6141732283464567, "obj2": 0.21385120573956803}, {"determining": "Min( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Max( ACS,( MDR - FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) ,Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( CS ,MUM ) ) ,( RCSe + ( ( DS * RCSe ) + MUR ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5407138576795211}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5761606469434866}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM / BR ) + FirstVNF_RAM_Server ) / ( Min( ACS ,( FirstVNF_Mem / ARS ) ) - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( Const / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( MUR / ( RCSe * ( CS + ( MUC / RRSe ) ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MLU ) ) ) ) - ( ( MUM + MLU ) - ( RRSe + MUR ) ) ) )", "obj1": 0.48031496062992124, "obj2": 0.31557737049533613}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * ( FirstVNF_CPU - DDR ) ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - CS ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.030510063778392306}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.3484251968503937, "obj2": 0.4697244961955773}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Min( ( ACS * Max( ARS,MDR ) ) ,FirstVNF_Mem ),FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( DS - Max( RCSe,RMSe ) )", "obj1": 0.8326771653543307, "obj2": 0.06887556495644251}, {"determining": "( ( Const * BR ) + ( AMS * Min( PN ,AMS ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( Min( DS ,RMSe ) + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( Max( MLU,RRSe ) - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.16338582677165353, "obj2": 0.707016032640397}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5789266214704833}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6923998990119447}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ( FirstVNF_Mem * RRS ),ACS ) / ( MDR + RRS ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - ( ( CS * ( ( ( ( RRSe + ( MUR * MUM ) ) - RMSe ) * Min( ( ( RCSe + MUM ) / ( MUM + MLU ) ) ,Min( ( RMSe * RRSe ) ,( MUC + MLU ) ) ) ) / MLU ) ) / Min( RCSe ,RRSe ) ) )", "obj1": 0.41141732283464566, "obj2": 0.40080119081192817}, {"determining": "Min( Max( CRS,MDR ) ,( ( FirstVNF_CPU_Server / ( MRS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) ) + ( ( MDR + FirstVNF_Mem ) / Max( ( ACS - ARS ),ACS ) ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( RMSe ,( ( Max( RCSe,( MUM * Min( RCSe ,MUM ) ) ) / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.05125597802661678}, {"determining": "( ( ACS + ( PN / ( ( ( ( Const / BR ) + FirstVNF_RAM_Server ) / ( ARS * FirstVNF_Mem_Server ) ) + ( MRS + FirstVNF_RAM ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( CRS * CRS ) ) ) ) )", "choosing": "( ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( ( MUC * CS ) ,Min( MUC ,MUM ) ) ) ) - ( ( MUM / MUC ) - ( RRSe + MUR ) ) ) - Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.27708505811646544}, {"determining": "( ( ( MDR / ( ( ARS + ( MDR - MDR ) ) / RRS ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_CPU ,DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) ) )", "choosing": "( ( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( MLU + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + MUR ) + ( MLU / ( MUC + ( RCSe / RRSe ) ) ) ) ) )", "obj1": 0.5433070866141733, "obj2": 0.26941416511102867}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( FirstVNF_CPU_Server ,BR ) * CRS ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7890670135240726}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( Max( ACS,( MRS + FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) * Const ) )", "choosing": "( ( ( ( ( RCSe / CS ) - Min( Min( CS ,DS ) ,CS ) ) * RCSe ) + RRSe ) * MUR )", "obj1": 0.9507874015748031, "obj2": 0.01942161225116647}, {"determining": "( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3901408602236486}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "Min( Min( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( Min( ACS ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) ,( ( MDR / ( ( CRS + ACS ) + FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.15748031496062992, "obj2": 0.7131577709527522}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( FirstVNF_Mem_Server * MRS ) * Const ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.9704724409448819, "obj2": 0.012078461300614568}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( ( Max( ARS,ACS ) / ( FirstVNF_CPU - DDR ) ) + FirstVNF_CPU ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( Max( FirstVNF_RAM_Server,ARS ) - RRS ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Min( DS ,MUC ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( ( ( Min( ( DS / DS ) ,MUC ) * ( RCSe + ( ( MUC * RCSe ) + RCSe ) ) ) + Max( MUC,CS ) ) - Min( RCSe ,( ( CS - MUM ) * Max( DS,MUR ) ) ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5655925056643624}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19396969311958862}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.7381889763779528, "obj2": 0.11637941641266793}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( MRS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / RRSe ) ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.02438834308799958}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14170664049302198}, {"determining": "( ( ( ( MDR / ( MRS - ( MRS - Max( AMS,FirstVNF_RAM ) ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - ( RCSe * ( CS + MUC ) ) ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.766777291715639}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,( ACS / PN ) ) ) ,( ( Max( FirstVNF_RAM_Server,( MDR / ( Min( RRS ,FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server - ( MRS + FirstVNF_CPU_Server ) ) ) ) ) * ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * ACS ) ) ) ) )", "choosing": "( Max( ( RRSe + Min( CS ,CS ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( ( ( RMSe * MUR ) - RCSe ) ,RRSe ) ) ) ) ) - ( MUC / RRSe ) )", "obj1": 0.265748031496063, "obj2": 0.5655925056643624}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * Max( CRS,RRS ) ) ) + ( ( MDR / ( MRS - ( MRS * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( CRS * Max( BR,DDR ) ) ) ) ) ) ) )", "choosing": "( ( DS / ( MLU * CS ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14170664049302198}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU + CRS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( CS + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) ) ,( RCSe + ( Max( ( RMSe - MLU ),MLU ) - DS ) ) )", "obj1": 0.9783464566929134, "obj2": 0.010992980784985024}, {"determining": "Min( Max( Max( ACS,( BR + Max( ( CRS / BR ),( Const * FirstVNF_Mem ) ) ) ),Min( FirstVNF_CPU ,BR ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( MDR / MDR ) ) ) ) ) / ( MDR + RRS ) ) + Min( MDR ,( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),MUR ) - Max( DS,MLU ) )", "obj1": 0.2874015748031496, "obj2": 0.5497855260686394}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.39830333968811543}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) / ( MUC + ( ( RRSe + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.562992125984252, "obj2": 0.24995493241811412}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,DS ) + MUR ) ) ) - ( Max( ( Min( MUC ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "( Max( Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / ( Min( Min( CS ,DS ) ,CS ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8552618276564989}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( DDR / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe - MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5236815383579821}, {"determining": "( Min( ( ( RRS + BR ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * CRS ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( Max( MDR,FirstVNF_RAM ) - FirstVNF_RAM ) - DDR ) ) ) )", "choosing": "( Max( CS,MUM ) - ( RRSe - Min( Max( Max( MUM,Max( ( ( MUM - RCSe ) * ( MUM + RMSe ) ),DS ) ),( ( CS * CS ) / MLU ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0898165752882937}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( CS + ( ( Max( ( MUM * CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) + RRSe ) ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.6181102362204725, "obj2": 0.2046162586393597}, {"determining": "Min( Min( FirstVNF_CPU ,MDR ) ,( ( MDR * ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( Min( DS ,( RRSe - RMSe ) ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,Max( ( CS - MUM ),Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.30708661417322836, "obj2": 0.5236815383579821}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM / BR ) + FirstVNF_RAM_Server ) / ( Min( ACS ,( FirstVNF_Mem / ARS ) ) - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27122347972455085}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.5562367303666181}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Max( ( RCSe - ( ( RMSe / MUM ) - Min( RMSe ,RMSe ) ) ),MLU ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.7362204724409449, "obj2": 0.12173273106116664}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * CRS ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.11023622047244094, "obj2": 0.7815720935741388}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( MRS * BR ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),( ( MUC + ( RCSe / RRSe ) ) - CS ) ) ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7590556243195343}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( Min( ARS ,Const ) + ( ( MDR / ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU - ( DDR * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU * RRS ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) - ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,( MUC + ( RRSe - ( ( DS / MUR ) / ( CS / MUR ) ) ) ) ) ) + ( ( ( ( ( DS + MUR ) / MLU ) - ( ( MUC + Min( CS ,RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7527041878749038}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.3484251968503937, "obj2": 0.4697244961955773}, {"determining": "Min( Min( FirstVNF_CPU ,MDR ) ,( ( MDR * ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( Min( DS ,( RRSe - RMSe ) ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,Max( ( CS - MUM ),Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.5562367303666181}, {"determining": "Min( Min( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( BR,Min( ACS ,ACS ) ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) ,( ( MDR / ( ( CRS + ACS ) - FirstVNF_CPU ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * ( MUM * MUC ) ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) + RCSe ) )", "obj1": 0.21456692913385828, "obj2": 0.6269072776820372}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( ( ACS * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + ( ( MDR / ( MRS - ( ( BR * ARS ) * FirstVNF_RAM_Server ) ) ) + ( ACS - ( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - RRSe ) ) ) ) ) + Min( Min( RRSe ,RMSe ) ,DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03321211663428857}, {"determining": "( ( ( MDR / ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) - Const ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( RRS,ARS ) * Const ) ) )", "choosing": "( ( Max( CS,CS ) / ( ( Min( Max( ( ( MLU / MUR ) / Max( RRSe,CS ) ),( ( RCSe - DS ) - RMSe ) ) ,CS ) + ( DS / MLU ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( Min( ( ( DS + MUC ) - RRSe ) ,RCSe ) - DS ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( ( Min( ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) / ( ARS - MDR ) ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server + MDR ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU + Const ) ) ,ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( Min( RCSe ,RCSe ) + MUC ) ) ) / ( MUC + ( ( ( Max( MUC,MUC ) / MLU ) + RRSe ) * MUC ) ) )", "obj1": 0.547244094488189, "obj2": 0.26234126007493125}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( Const / BR ) + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( MUC ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5236220472440944, "obj2": 0.27708505811646544}, {"determining": "( ( ( Max( ACS,RRS ) / ( MDR + RRS ) ) + ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM / DDR ) + Max( PN,Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS / Min( RRSe ,DS ) ) ) ) / ( RCSe / ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,( RRSe + ( MUC / MLU ) ) ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19396969311958862}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( RCSe + ( ( DS * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.29133858267716534, "obj2": 0.5491759309694082}], "20": [{"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - DS ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM_Server ,( CRS * FirstVNF_RAM ) ) + ( MRS - Min( DDR ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RRSe / RMSe ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( ( RRS / ( Const * BR ) ) + ( ( FirstVNF_CPU / Min( Max( MDR,Const ) ,MRS ) ) + ARS ) )", "choosing": "( ( ( RCSe - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( Max( ( Min( MLU ,( CS / RCSe ) ) + CS ),MUC ) + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) * ( DS - CS ) )", "obj1": 0.43700787401574803, "obj2": 0.37314887156211596}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( Max( Min( ( Const * Const ) ,( PN * CRS ) ),( ACS + ( PN * RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * Min( FirstVNF_CPU_Server ,AMS ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Max( ( RCSe - ( ( RMSe / MUM ) - Min( RMSe ,RMSe ) ) ),MLU ) ) + RCSe ) ) ,Max( RMSe,Min( MUM ,RMSe ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6882514192504993}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "( Min( ( ( ( ( MDR + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( ( ACS + MRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,MLU ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5100776574961369}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8740157480314961, "obj2": 0.04610513795986847}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( MRS - ( ( PN + CRS ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),Min( DS ,RMSe ) ) )", "obj1": 0.8366141732283464, "obj2": 0.06203953347436812}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( ( Const * Const ) ,( ACS + MDR ) ) ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4429973952022221}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18119046874922992}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( Min( ACS ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( Min( Max( CS,MUC ) ,RRSe ) / ( CS + MUC ) ) ) ) ) )", "obj1": 0.5610236220472441, "obj2": 0.247424754166889}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,( CS - CS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( Min( ( ( RRS + BR ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * CRS ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( Max( MDR,FirstVNF_RAM ) - FirstVNF_RAM ) - DDR ) ) ) )", "choosing": "( Max( CS,MUM ) - ( RRSe - Min( Max( Max( MUM,Max( ( ( MUM - RCSe ) * ( MUM + RMSe ) ),DS ) ),( ( CS * CS ) / MLU ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0898165752882937}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "Min( Max( Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - Const ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ,FirstVNF_CPU ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( DS ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.5, "obj2": 0.29144026181852}, {"determining": "( ( AMS * ( Const * ACS ) ) + ( Const * BR ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7013788344761867}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18119046874922992}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU + CRS ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.9783464566929134, "obj2": 0.010921411377044977}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + ( Min( CS ,MUR ) - ( RRSe / MUR ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3441704571717641}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "( ( ( MDR / ( MRS - Min( MRS ,ARS ) ) ) + Max( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( BR / FirstVNF_Mem ) ) ,DDR ) * RRS ) ),FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( ( MUR + Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - Max( Min( ( RMSe / MLU ) ,RRSe ),( ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RMSe - RMSe ) ) ) ) + ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.07038760995477038}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / ( MRS + FirstVNF_RAM_Server ) ) ) / MRS ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,( Max( MUC,DS ) / ( DS * DS ) ) ) / CS ) ,( MUR + ( RRSe / ( DS * RRSe ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.08125747890985152}, {"determining": "( ( FirstVNF_RAM + DDR ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM_Server ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( MUC / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( ( RMSe / MUC ) ,DS ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.39960629921259844, "obj2": 0.4236117904232285}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.34448818897637795, "obj2": 0.4758393501760323}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RRSe + RMSe ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.39173228346456695, "obj2": 0.433476020098485}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( CS + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.8287401574803149, "obj2": 0.06512627490173471}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.34289042129214303}, {"determining": "Min( Min( FirstVNF_CPU ,MDR ) ,( ( MDR * ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( Min( DS ,( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - MLU ) ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,Max( ( CS - MUM ),Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6321652700888587}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ACS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.9940944881889764, "obj2": 0.0031342287108299467}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( Const / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2790710726796369}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( MRS * FirstVNF_RAM ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Min( FirstVNF_CPU ,( FirstVNF_Mem / MRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( Max( Min( ( RCSe * RCSe ) ,( RRSe * MUM ) ),MUM ) ,MUM ) + MUC ) - ( DS / MUR ) ) / ( ( MUR + Max( ( RCSe - ( DS / MUR ) ),DS ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.7637795275590551, "obj2": 0.10129098603892271}, {"determining": "( Min( ( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( Min( RMSe ,( MUM * RMSe ) ) + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17716535433070865, "obj2": 0.691821606508307}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( Min( ACS ,( FirstVNF_Mem / ARS ) ) - FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( RCSe * ( ( RCSe * ( CS + ( MUC / RRSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.2570112463846348}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR / ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.9409448818897638, "obj2": 0.020008013805918202}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( Max( ACS,( MRS + FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) * Min( FirstVNF_RAM_Server ,( CRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / CS ) - Min( Min( CS ,DS ) ,CS ) ) * RCSe ) + RRSe ) * ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) )", "obj1": 0.9606299212598425, "obj2": 0.015684078485474266}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( AMS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.7795275590551181, "obj2": 0.0824193069532502}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( FirstVNF_CPU_Server ,BR ) * CRS ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7890670135240726}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3901408602236486}, {"determining": "( ( ( MDR / ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) - Const ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( RRS,ARS ) * Const ) ) )", "choosing": "( ( Max( CS,CS ) / ( ( Min( Max( ( ( MLU / MUR ) / Max( RRSe,CS ) ),( ( RCSe - DS ) - RMSe ) ) ,CS ) + ( DS / MLU ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( Min( ( ( DS + MUC ) - RRSe ) ,RCSe ) - DS ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( Max( Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / ( Min( Min( CS ,DS ) ,CS ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8552618276564989}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,( BR / ( ( AMS - AMS ) + DDR ) ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - AMS ) )", "choosing": "( ( RRSe + ( CS - ( ( RCSe + ( DS / ( ( RRSe * DS ) + Max( RCSe,CS ) ) ) ) - Max( RMSe,( ( ( MLU * DS ) - MLU ) - ( MUM / MLU ) ) ) ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,MUM ) ) + RMSe ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23560316643201665}, {"determining": "( ( ( MDR / ( ( ARS + ( MDR - MDR ) ) / RRS ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( Max( Const,RRS ) / ( Min( FirstVNF_CPU ,DDR ) * ( DDR * ( FirstVNF_CPU_Server + AMS ) ) ) ) ) ) ) )", "choosing": "( Max( ( MUR * RCSe ),MUC ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS * ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.5413385826771654, "obj2": 0.26892616584160334}, {"determining": "Min( Max( CRS,MDR ) ,( ( FirstVNF_CPU_Server / ( MRS - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) ) + ( ( MDR + FirstVNF_Mem ) / Max( ( ACS - ARS ),ACS ) ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( RMSe ,( ( Max( RCSe,( MUM * Min( RCSe ,MUM ) ) ) / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.05125597802661678}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07439787798051194}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM / BR ) + FirstVNF_RAM_Server ) / ( Min( ACS ,( FirstVNF_Mem / ARS ) ) - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27122347972455085}, {"determining": "( Min( ( FirstVNF_CPU_Server + ( AMS - CRS ) ) ,Min( ARS ,Const ) ) + ( Max( BR,CRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR - ( RCSe * ( MUC + CS ) ) ) / Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( ( RMSe + MLU ) / RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5949164438252698}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( MRS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( RRS,AMS ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS - MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + Max( CS,RRSe ) ) ) ,( RCSe + ( ( Max( ( MUM * ( RMSe * MUR ) ),Max( RMSe,RRSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7322765715596765}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * ( FirstVNF_CPU - DDR ) ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( ( MUR - ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - CS ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.030510063778392306}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * ( FirstVNF_CPU - DDR ) ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - ( ( CS * ( ( ( ( RRSe + ( MUR * MUM ) ) - RMSe ) * Min( ( ( RCSe + MUM ) / ( MUM + MLU ) ) ,Min( ( CS * RRSe ) ,( MUC + MLU ) ) ) ) / MLU ) ) / Min( RCSe ,RRSe ) ) )", "obj1": 0.9488188976377953, "obj2": 0.018847182357294438}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7303149606299213, "obj2": 0.13029591526297407}, {"determining": "( Min( ( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ,PN ) + ( Min( ( FirstVNF_Mem * MDR ) ,( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * ARS ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + ( CS * RMSe ) ),( CS - Min( ( ( CS - MUM ) / Min( ( CS * Max( MUC,MUR ) ) ,RRSe ) ) ,RCSe ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.04072767634572044}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) / Const ) ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( ( ( Max( MRS,FirstVNF_RAM_Server ) + ( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / Min( MDR ,RRS ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( ( ( DS * ( Min( CS ,RMSe ) / ( RCSe + RCSe ) ) ) + ( MLU - ( ( MUC / CS ) / CS ) ) ) + MUC ) ) ) / Min( MUC ,( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.6071307586345053}, {"determining": "( ( ( Max( ACS,RRS ) / ( MDR + RRS ) ) + ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM / DDR ) + Max( PN,Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS / Min( RRSe ,DS ) ) ) ) / ( RCSe / ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,( RRSe + ( MUC / MLU ) ) ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19396969311958862}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( ( ACS * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + ( ( MDR / ( MRS - ( ( BR * ARS ) * FirstVNF_RAM_Server ) ) ) + ( ACS - ( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - RRSe ) ) ) ) ) + Min( Min( RRSe ,RMSe ) ,DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03321211663428857}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( ( DS - CS ) - CS ) * MUR )", "obj1": 0.6259842519685039, "obj2": 0.19933467215171205}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) + ( Const * FirstVNF_Mem ) ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MUM ,DS ),RMSe ) - Min( MUM ,DS ) )", "obj1": 0.25984251968503935, "obj2": 0.5725777131454635}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) - MDR ) )", "choosing": "( ( ( MLU - RRSe ) + Min( MUC ,RMSe ) ) / ( MUC + ( ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 0.8937007874015748, "obj2": 0.039659720209402435}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( FirstVNF_CPU ,BR ) ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,RMSe ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3020978988914786}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ( FirstVNF_RAM_Server - ( AMS * FirstVNF_RAM ) ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR - ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( DS - RMSe ) + RCSe ) ) ,( Max( ( CS * MUR ),Min( MUM ,RRSe ) ) + ( ( ( ( ( RRSe + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.734251968503937, "obj2": 0.12045586577813472}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( DDR / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe - MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5446540923180634}, {"determining": "( ( Min( ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) / ( ARS - MDR ) ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server + MDR ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU + Const ) ) ,ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( Min( RCSe ,RCSe ) + MUC ) ) ) / ( MUC + ( ( ( Max( MUC,MUC ) / MLU ) + RRSe ) * MUC ) ) )", "obj1": 0.547244094488189, "obj2": 0.26234126007493125}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_CPU_Server / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ),MRS ) ) - ( ( FirstVNF_Mem_Server + ( ARS - DDR ) ) + ( ( MDR - MDR ) * Const ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( ( MUM * MUC ) * ( ( RRSe / RCSe ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( CS / RCSe ) + ( MUM + MUR ) ) ) ) ) ) ) )", "obj1": 0.6141732283464567, "obj2": 0.21385120573956803}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - RRS ) - Max( DDR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Min( MUM ,( ( CS + ( ( RCSe * CS ) * Max( RRSe,Max( MUC,RMSe ) ) ) ) - CS ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,Min( CS ,( ( CS / DS ) * MLU ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7067917506132569}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( MRS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / RRSe ) ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.02438834308799958}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14170664049302198}, {"determining": "( ( Min( ARS ,Const ) + ( ( MDR / ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU - ( DDR * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU * RRS ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) - ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,( MUC + ( RRSe - ( ( DS / MUR ) / ( CS / MUR ) ) ) ) ) ) + ( ( ( ( ( DS + MUR ) / MLU ) - ( ( MUC + Min( CS ,RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7527041878749038}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * Max( CRS,RRS ) ) ) + ( ( MDR / ( MRS - ( MRS * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( CRS * Max( BR,DDR ) ) ) ) ) ) ) )", "choosing": "( ( DS / ( MLU * CS ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.7165354330708661, "obj2": 0.14170664049302198}, {"determining": "Min( ( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Max( ACS,( MDR - FirstVNF_RAM ) ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) ,Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( CS ,MUM ) ) ,( RCSe + ( ( DS * RCSe ) + MUR ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5407138576795211}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( MDR + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,DS ) + MUR ) ) ) - ( Max( ( Min( MUC ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "( ( Min( MDR ,FirstVNF_Mem ) - ARS ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem - ARS ) ) ) ) )", "choosing": "( Max( RCSe,( Max( ( RMSe + MUC ),( RRSe / RMSe ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3901408602236486}, {"determining": "Min( Min( FirstVNF_CPU ,MDR ) ,( ( MDR * ( PN * FirstVNF_RAM_Server ) ) + ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( Max( Min( DS ,( RRSe - RMSe ) ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,Max( ( CS - MUM ),Max( RCSe,Min( ( MUR * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.2204724409448819, "obj2": 0.6222251490661507}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM / BR ) + FirstVNF_RAM_Server ) / ( Min( MRS ,( FirstVNF_Mem / ARS ) ) - FirstVNF_Mem_Server ) ) ) ) ) + Min( FirstVNF_CPU ,Min( ( ( ( MRS - ( BR * RRS ) ) + ( FirstVNF_RAM_Server * MRS ) ) + ( MRS * Max( ( FirstVNF_CPU + ( AMS * MRS ) ),( FirstVNF_CPU * FirstVNF_CPU ) ) ) ) ,Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( RCSe,( ( ( MUR / ( RCSe * ( CS + ( MUC / RRSe ) ) ) ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - Max( Min( MUM ,CS ),MUM ) )", "obj1": 0.484251968503937, "obj2": 0.31062851164718075}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48562152119303065}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.281496062992126, "obj2": 0.5489813476409632}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + Min( Max( DDR,CRS ) ,CRS ) ) * ( ACS * ( FirstVNF_CPU_Server - AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( Max( ( MUR / CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + ( DS * RCSe ) ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.1437007874015748, "obj2": 0.7417538197244391}, {"determining": "( Min( PN ,( ( FirstVNF_RAM_Server + FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( CRS * ( RRS * CRS ) ) ) - MDR ) )", "choosing": "( ( ( ( CS - RRSe ) / Max( DS,MUM ) ) * CS ) / ( MUC + ( ( RRSe + Min( Min( ( RMSe + ( DS * MUR ) ) ,( MLU * MUR ) ) ,DS ) ) + RMSe ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05311056818933792}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.27755905511811024, "obj2": 0.5562367303666181}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( MRS - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.48562152119303065}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( ( Const * FirstVNF_CPU_Server ) + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / Max( MDR,RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,MUR ) ),( ( ( MUR - DS ) * MLU ) - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.265748031496063, "obj2": 0.5655925056643624}, {"determining": "Min( ( FirstVNF_CPU_Server - ARS ) ,( ( CRS / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( ( CS + MUC ) * RCSe ) ) / ( MUC + ( Min( ( ( RMSe - MUC ) - RMSe ) ,MUM ) + Min( ( MUM + RMSe ) ,DS ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.5789266214704833}, {"determining": "Min( Max( Min( ( Max( AMS,FirstVNF_RAM ) - PN ) ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_CPU_Server / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ),MRS ) ) / ( MDR + RRS ) ) ) )", "choosing": "( RCSe / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5976153662940963}], "21": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * Max( CRS,RRS ) ) ) + ( ( MDR / ( MRS - ( MRS * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( CRS * Max( BR,DDR ) ) ) ) ) ) ) )", "choosing": "( ( DS / ( MLU * CS ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - DS ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR / ( MRS - ( MRS - ( MRS * Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS + MUM ) / ( ( MUC * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( ( RRS / ( Const * BR ) ) + ( ( FirstVNF_CPU / Min( Max( MDR,Const ) ,MRS ) ) + ARS ) )", "choosing": "( ( ( RCSe - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( Max( ( Min( MLU ,( CS / RCSe ) ) + CS ),MUC ) + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) * ( DS - CS ) )", "obj1": 0.43700787401574803, "obj2": 0.37314887156211596}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU + ACS ) ) + FirstVNF_CPU_Server ) / Min( Min( ACS ,FirstVNF_Mem ) ,FirstVNF_RAM_Server ) ) + ( MDR / ( MRS - Min( PN ,Min( FirstVNF_CPU ,( FirstVNF_Mem * ARS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,( RCSe + ( ( DS * RCSe ) + RRSe ) ) )", "obj1": 0.3110236220472441, "obj2": 0.5252031556723417}, {"determining": "( Max( Min( ( Const * Const ) ,( PN * CRS ) ),( ACS + ( PN * RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * Min( FirstVNF_CPU_Server ,AMS ) ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Max( ( RCSe - ( ( RMSe / MUM ) - Min( RMSe ,RMSe ) ) ),MLU ) ) + RCSe ) ) ,Max( RMSe,Min( MUM ,RMSe ) ) )", "obj1": 0.1830708661417323, "obj2": 0.6882514192504993}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "( Min( ( ( AMS - CRS ) + FirstVNF_CPU_Server ) ,( ARS * ( ( ARS + AMS ) * CRS ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( MUC + CS ) ) ) / Max( ( Min( CS ,RMSe ) / MUR ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( MUM / ( RCSe + MUC ) ) ,MUC ) ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6316365004921056}, {"determining": "( Min( ( ( ( ( MDR + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( ( ACS + MRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,MLU ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5100776574961369}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.2952755905511811, "obj2": 0.5369177619868494}, {"determining": "( ( ACS + Max( FirstVNF_Mem_Server,( DDR + CRS ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) + ( FirstVNF_CPU + PN ) ) )", "choosing": "( Min( CS ,MUR ) - ( RRSe / MUR ) )", "obj1": 0.19488188976377951, "obj2": 0.6440817854571073}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( FirstVNF_CPU_Server / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ),MRS ) ) - ( ( FirstVNF_Mem_Server + ( ARS - DDR ) ) + ( ( MDR - MDR ) * Const ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( ( MUM * MUC ) * ( ( RRSe / RCSe ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( CS / RCSe ) + ( MUM + MUR ) ) ) ) ) ) ) )", "obj1": 0.6141732283464567, "obj2": 0.21385120573956803}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) + Max( ARS,ACS ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( RRSe + RRSe ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.34448818897637795, "obj2": 0.4758393501760323}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( Max( MDR,Min( AMS ,( ACS * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS / ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RCSe * ( CS + ( MUC / RRSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - Max( Min( RCSe ,RCSe ),( MLU - MLU ) ) ) ) + Min( DS ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.39925759216247425}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( Min( CS ,( MUC * MUM ) ) - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.19932004938788053}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( Min( ACS ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( Min( Max( CS,MUC ) ,RRSe ) / ( CS + MUC ) ) ) ) ) )", "obj1": 0.5610236220472441, "obj2": 0.247424754166889}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ( FirstVNF_RAM_Server - ( AMS * FirstVNF_RAM ) ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR - ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( DS - RMSe ) + RCSe ) ) ,( Max( ( CS * MUR ),Min( MUM ,RRSe ) ) + ( ( ( ( ( RRSe + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.734251968503937, "obj2": 0.12045586577813472}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / Max( BR,FirstVNF_CPU_Server ) ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - RRS ) - Max( DDR,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( Min( MUM ,( ( CS + ( ( RCSe * CS ) * Max( RRSe,Max( MUC,RMSe ) ) ) ) - CS ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,Min( CS ,( ( CS / DS ) * MLU ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7067917506132569}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( RRSe + RMSe ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3441704571717641}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( MRS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( RRS,AMS ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS - MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + Max( CS,RRSe ) ) ) ,( RCSe + ( ( Max( ( MUM * ( RMSe * MUR ) ),Max( RMSe,RRSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7322765715596765}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( FirstVNF_CPU_Server ,BR ) * CRS ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7890670135240726}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07439787798051194}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,( CS - CS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "Min( Max( FirstVNF_CPU,MDR ) ,( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) * ( PN * FirstVNF_RAM_Server ) ) + ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ) ) ) / ( FirstVNF_Mem_Server - Min( ( ACS / AMS ) ,CRS ) ) ) ) )", "choosing": "( Max( Min( ( CS * Max( MUC,DS ) ) ,( RRSe - RMSe ) ),RCSe ) - Max( ( MUR + Min( ( RMSe + Min( Min( MUM ,MUM ) ,( ( MUC / RRSe ) * DS ) ) ) ,RMSe ) ),( CS - Min( RMSe ,Max( ( CS - MUM ),Max( Min( ( MUR * MUR ) ,DS ),RCSe ) ) ) ) ) )", "obj1": 0.23818897637795275, "obj2": 0.6105117874842957}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * DS ) ,DS ) ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.596680990867378}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( PN * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / ( MRS + FirstVNF_RAM_Server ) ) ) / MRS ) ) ) ) )", "choosing": "Min( ( Min( RCSe ,( Max( MUC,DS ) / ( DS * DS ) ) ) / CS ) ,( MUR + ( RRSe / ( DS * RRSe ) ) ) )", "obj1": 0.7874015748031497, "obj2": 0.08125747890985152}, {"determining": "( Min( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,Min( ACS ,MRS ) ) ) + Max( MDR,( FirstVNF_CPU + CRS ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,RMSe ) ) ,RRSe ) ,RMSe ) ),( CS - Min( RCSe ,( Max( Min( RCSe ,MUR ),RMSe ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5894068556820057}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.024388343087999576}, {"determining": "( ( ( MDR / ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) - Const ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( RRS,ARS ) * Const ) ) )", "choosing": "( ( Max( CS,CS ) / ( ( Min( Max( ( ( MLU / MUR ) / Max( RRSe,CS ) ),( ( RCSe - DS ) - RMSe ) ) ,CS ) + ( DS / MLU ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( Min( ( ( DS + MUC ) - RRSe ) ,RCSe ) - DS ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( Max( Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) ),( ( MRS + FirstVNF_RAM_Server ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * ( ( ( ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / CRS ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / ( Min( Min( CS ,DS ) ,CS ) * DS ) )", "obj1": 0.08464566929133858, "obj2": 0.8552618276564989}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.7831514679738307}, {"determining": "Min( Max( ( ( Max( AMS,FirstVNF_RAM ) - Max( FirstVNF_CPU,RRS ) ) * BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( AMS - FirstVNF_Mem ) ) ) ) + ( Max( RRS,ACS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,DS ) - ( MLU - MLU ) ) ) ) + Min( ( MUR + RMSe ) ,DS ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.577937401630037}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( MRS,FirstVNF_Mem ) ) ) + ( Max( ( PN / FirstVNF_RAM ),MRS ) / ACS ) )", "choosing": "( Max( ( MUR - Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - ( MUC + Min( RCSe ,( ( ( DS * Min( Max( CS,MLU ) ,MUM ) ) + MUC ) + Max( MLU,Max( ( ( RMSe + MLU ) * ( MUR - MUC ) ),MUC ) ) ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.039449740229681514}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,( BR / ( ( AMS - AMS ) + DDR ) ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - AMS ) )", "choosing": "( ( RRSe + ( CS - ( ( RCSe + ( DS / ( ( RRSe * DS ) + Max( RCSe,CS ) ) ) ) - Max( RMSe,( ( ( MLU * DS ) - MLU ) - ( MUM / MLU ) ) ) ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,MUM ) ) + RMSe ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23560316643201665}, {"determining": "( ( ( ( MDR / Min( ( ( AMS - CRS ) + FirstVNF_CPU_Server ) ,Min( ARS ,Const ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + DDR ) + Max( FirstVNF_Mem,PN ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / MUC ) ) - CS ) ) * Max( ( RRSe + Max( RMSe,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + ( Max( CS,( ( Max( RMSe,RCSe ) / ( RMSe - MUM ) ) - Min( ( MUM + RCSe ) ,RCSe ) ) ) + RCSe ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7587527684692601}, {"determining": "( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe - MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.38596298446895116}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( PN - PN ) + Min( ( MDR / ( PN - FirstVNF_Mem_Server ) ) ,( ( ACS / Const ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( MLU * DS ) ) ) ) * Max( RMSe,Min( ( ( RCSe * RMSe ) * ( RRSe * RMSe ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7263779527559056, "obj2": 0.1352584885601369}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( ( MDR / ( RRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( FirstVNF_RAM ,RRS ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( RCSe + ( ( ( CS - CS ) * RRSe ) - ( ( MUR * RCSe ) + ( ( MUM + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4313766119691699}, {"determining": "( Min( ( ( AMS - CRS ) + Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ) ,Min( ARS ,Const ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( MUC + CS ) ) ) / Max( ( MUR + Min( CS ,Min( CS ,MUR ) ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( MUC / RCSe ) ,MUC ) ) ) ) ) )", "obj1": 0.49606299212598426, "obj2": 0.29510757699128964}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( ( ACS * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + ( ( MDR / ( MRS - ( ( BR * ARS ) * FirstVNF_RAM_Server ) ) ) + ( ACS - ( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - RRSe ) ) ) ) ) + Min( Min( RRSe ,RMSe ) ,DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03321211663428857}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7644544865413795}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Max( ACS,( MRS + FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( RCSe / CS ) - Min( Min( CS ,DS ) ,CS ) ) )", "obj1": 0.8484251968503937, "obj2": 0.061570776458988216}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( ACS + Max( ( DDR / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( MUR - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe - MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5429710117545888}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * ( FirstVNF_CPU - DDR ) ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) + ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - ( ( CS * ( ( ( ( RRSe + ( MUR * MUM ) ) - RMSe ) * Min( ( ( RCSe + MUM ) / ( MUM + MLU ) ) ,Min( ( CS * RRSe ) ,( MUC + MLU ) ) ) ) / MLU ) ) / Min( RCSe ,RRSe ) ) )", "obj1": 0.9488188976377953, "obj2": 0.018847182357294438}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( ( ACS + FirstVNF_Mem ),FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7369644598635011}, {"determining": "( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( RRS * FirstVNF_RAM_Server ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( CRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS * MUC ) ) ) / ( MUC + Min( ( ( Max( RCSe,( MUM * Min( RCSe ,MUM ) ) ) / ( CS * ( Max( MUC,DS ) + RMSe ) ) ) + DS ) ,DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3869788401891284}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) ,Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ) )", "choosing": "( Max( Min( DS ,( ( MUR / MUM ) + MUC ) ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.21850393700787402, "obj2": 0.6226433897311545}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.7283464566929134, "obj2": 0.12943166846789245}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19396969311958862}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( ( ( ( ( Max( MRS,Max( ACS,MRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( AMS * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( ( MLU / MLU ) * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.7421259842519685, "obj2": 0.10955185709777278}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS / ( PN * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( MUC ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + Max( MUR,MUC ) ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.1013136454271847}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( PN * FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - ( ( DS - CS ) - CS ) ) * ( ( CS - CS ) / ( ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,( CS - CS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.4509100699256721}, {"determining": "( ( Min( ARS ,Const ) + ( ( MDR / ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU - ( DDR * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU * RRS ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) - ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,( MUC + ( RRSe - ( ( DS / MUR ) / ( CS / MUR ) ) ) ) ) ) + ( ( ( ( ( DS + MUR ) / MLU ) - ( ( MUC + Min( CS ,RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7527041878749038}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,( CS - CS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) - CS ) * MUR )", "obj1": 0.9901574803149606, "obj2": 0.006018332578455505}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( MUC ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( Max( ACS,RRS ),ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) * Min( MUM ,( CS + MUR ) ) ) ) / ( MUC + ( ( Min( ( MLU + MUR ) ,Max( ( RRSe + CS ),( MUC + MUR ) ) ) + ( MUR / ( Min( DS ,RMSe ) - ( MLU - MLU ) ) ) ) + RMSe ) ) )", "obj1": 0.937007874015748, "obj2": 0.021155699403675038}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / ( CS + MUR ) ) ) - Max( CS,( RRSe / RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.484261419330847}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,( CRS * FirstVNF_RAM ) ) + Min( RRS ,( Const * RRS ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.37401574803149606, "obj2": 0.4429973952022221}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + ( PN * FirstVNF_RAM_Server ) ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( ( Min( ( CS * Max( MUC,DS ) ) ,RRSe ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.9724409448818898, "obj2": 0.01144525668629394}, {"determining": "( Min( ( ( RRS + BR ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * CRS ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( Max( MDR,FirstVNF_RAM ) - FirstVNF_RAM ) - DDR ) ) ) )", "choosing": "( Max( CS,MUM ) - ( RRSe - Min( Max( Max( MUM,Max( ( ( MUM - RCSe ) * ( MUM + RMSe ) ),DS ) ),( ( CS * CS ) / MLU ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0898165752882937}, {"determining": "( ( AMS * ( Const * ACS ) ) + ( Const * BR ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + Min( MUC ,RMSe ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.1673228346456693, "obj2": 0.7013788344761867}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( FirstVNF_CPU ,BR ) ),( MDR + RRS ) ) ,( ( RRS + DDR ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( RRSe ,( CS * Max( MUC,RMSe ) ) ) ,DS ) + MUR ) ) ) - ( ( MUM - MUR ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3020978988914786}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18119046874922992}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( ( ARS - FirstVNF_Mem_Server ) / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * RCSe ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5216535433070866, "obj2": 0.27853881154436483}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( CS ,DS ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.7637795275590551, "obj2": 0.09289189855716422}, {"determining": "Min( Min( FirstVNF_CPU ,MDR ) ,( ( MDR * Min( PN ,FirstVNF_RAM_Server ) ) + ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( CRS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) ) )", "choosing": "( ( ( CS + ( DS - MUC ) ) + MUR ) - Max( ( MUR + Min( MUR ,RMSe ) ),( CS - Min( RCSe ,Max( ( CS - MUM ),Max( RCSe,Min( ( MUR * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.22440944881889763, "obj2": 0.6193114155906138}, {"determining": "( ( ( MDR / ( MRS - Min( MRS ,ARS ) ) ) + Max( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( BR / FirstVNF_Mem ) ) ,DDR ) * RRS ) ),FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( ( MUR + Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - Max( Min( ( RMSe / MLU ) ,RRSe ),( ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RMSe - RMSe ) ) ) ) + ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.07038760995477038}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( Max( ACS,( MRS + FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) * Min( FirstVNF_RAM_Server ,( CRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / CS ) - Min( Min( CS ,DS ) ,CS ) ) * RCSe ) + RRSe ) * ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) )", "obj1": 0.9606299212598425, "obj2": 0.015684078485474266}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( Min( FirstVNF_RAM ,BR ) - Min( PN ,FirstVNF_RAM_Server ) ) / ( Min( ACS ,( FirstVNF_Mem / ARS ) ) - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( MUM * MLU ) + RMSe ) ,DS ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.28495188692316953}, {"determining": "( ( ( Max( ACS,RRS ) / ( MDR + RRS ) ) + ( MDR / Max( MRS,( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM / DDR ) + Max( PN,Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS / Min( RRSe ,DS ) ) ) ) / ( RCSe / ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,( RRSe + ( MUC / MLU ) ) ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19396969311958862}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) + ( Const * FirstVNF_Mem ) ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MUM ,DS ),RMSe ) - Min( MUM ,DS ) )", "obj1": 0.25984251968503935, "obj2": 0.5725777131454635}, {"determining": "Min( Max( Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - Const ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ,FirstVNF_CPU ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( DS ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.5, "obj2": 0.29144026181852}, {"determining": "( ( Min( ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) / ( ARS - MDR ) ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server + MDR ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU + Const ) ) ,ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( Min( RCSe ,RCSe ) + MUC ) ) ) / ( MUC + ( ( ( Max( MUC,MUC ) / MLU ) + RRSe ) * MUC ) ) )", "obj1": 0.547244094488189, "obj2": 0.26234126007493125}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.08536632976590315}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( RRSe / ( RCSe * ( CS + MUC ) ) ) / ( MUC + Min( ( Min( MUC ,Min( CS ,( ( CS / DS ) * MLU ) ) ) + RRSe ) ,RMSe ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28814539312539406}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8740157480314961, "obj2": 0.04610513795986847}], "22": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - Max( ( RRSe + CS ),( MUC + MUR ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * Max( CRS,RRS ) ) ) + ( ( MDR / ( MRS - ( MRS * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( CRS * Max( BR,DDR ) ) ) ) ) ) ) )", "choosing": "( ( DS / ( MLU * CS ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( RCSe * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( ( RRS / ( Const * BR ) ) + ( ( FirstVNF_CPU / Min( Max( MDR,Const ) ,MRS ) ) + ARS ) )", "choosing": "( ( ( RCSe - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( Max( ( Min( MLU ,( CS / RCSe ) ) + CS ),MUC ) + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) * ( DS - CS ) )", "obj1": 0.43700787401574803, "obj2": 0.37314887156211596}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.2952755905511811, "obj2": 0.5369177619868494}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Min( ACS ,( FirstVNF_Mem / ARS ) ) + ( MDR / ( MRS - ( PN * Min( ACS ,FirstVNF_CPU ) ) ) ) ) ) ) )", "choosing": "( Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC - ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,( MUR - CS ) ) ) ) ) ) ) - Max( Min( DS ,DS ),RMSe ) )", "obj1": 0.3051181102362205, "obj2": 0.5101464230048084}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( ACS + Max( ( DDR / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( MUR - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe - MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5429710117545888}, {"determining": "Min( Max( MDR,( MRS - ( ( Min( RRS ,BR ) * Min( AMS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( FirstVNF_Mem_Server,MDR ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( RRS - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - Min( Max( Min( RCSe ,MUR ),( ( RMSe * DS ) - ( Min( MUC ,RCSe ) * MUC ) ) ) ,CS ) ) / ( ( MUR + Min( CS ,( ( ( DS * RCSe ) + RRSe ) * MUM ) ) ) + RCSe ) ) ,Min( ( ( CS / DS ) * RCSe ) ,CS ) )", "obj1": 0.18110236220472442, "obj2": 0.682961480073937}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( ( ACS * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + ( ( MDR / ( MRS - ( ( BR * ARS ) * FirstVNF_RAM_Server ) ) ) + ( ACS - ( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - RRSe ) ) ) ) ) + Min( Min( RRSe ,RMSe ) ,DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03321211663428857}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * MUR )", "obj1": 0.8740157480314961, "obj2": 0.04610513795986847}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( MRS,FirstVNF_Mem ) ) ) + ( Max( ( PN / FirstVNF_RAM ),MRS ) / ACS ) )", "choosing": "( Max( ( MUR - Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - ( MUC + Min( RCSe ,( ( ( DS * Min( Max( CS,MLU ) ,MUM ) ) + MUC ) + Max( MLU,Max( ( ( RMSe + MLU ) * ( MUR - MUC ) ),MUC ) ) ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.039449740229681514}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "Min( Max( Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - Const ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ,FirstVNF_CPU ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.5393700787401575, "obj2": 0.2714901974465616}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19350875590560615}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.34448818897637795, "obj2": 0.4758393501760323}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( RRS * FirstVNF_RAM_Server ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( CRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS * MUC ) ) ) / ( MUC + Min( ( ( Max( RCSe,( MUM * Min( RCSe ,MUM ) ) ) / ( CS * ( Max( MUC,DS ) + RMSe ) ) ) + DS ) ,DS ) ) )", "obj1": 0.84251968503937, "obj2": 0.057922403286847064}, {"determining": "( Min( ( ( ( ( MDR + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( ( ACS + MRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,MLU ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5100776574961369}, {"determining": "( ( ( BR + RRS ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MRS / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( ( Const / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( RMSe + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUC * MUR ) ) ) + ( MUR - Min( MUR ,( ( MUR * MUM ) / ( MLU * RCSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18119046874922987}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( MRS ,BR ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,( CRS * FirstVNF_RAM ) ) + Min( ACS ,( Const * RRS ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MUR ) ) ) * CS ) ) + Max( MLU,( RMSe + ( ( CS - RCSe ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44218692593476455}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) + ( Const * FirstVNF_Mem ) ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MUM ,DS ),RMSe ) - Min( MUM ,DS ) )", "obj1": 0.25984251968503935, "obj2": 0.5725777131454635}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ( FirstVNF_RAM_Server - ( AMS * FirstVNF_RAM ) ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR - ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( DS - RMSe ) + RCSe ) ) ,( Max( ( CS * MUR ),Min( MUM ,RRSe ) ) + ( ( ( ( ( RRSe + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.734251968503937, "obj2": 0.12045586577813472}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( Min( CS ,( MUC * MUM ) ) - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.19932004938788045}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3441704571717641}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( MUC ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "( ( Min( MRS ,ACS ) + ( ARS / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( ( Const * MDR ) * FirstVNF_RAM ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe + MLU ) ) / ( RCSe + ( ( Min( Min( Min( CS ,MUR ) ,Max( RMSe,RCSe ) ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.06467527960897626}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( ( RCSe * DS ) - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.9881889763779528, "obj2": 0.0056039641582780065}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,( CS - CS ) ) ) * CS ) ) + ( MUR / ( RCSe * ( MUC + CS ) ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( RRSe + RMSe ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.452755905511811, "obj2": 0.3424209303036506}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( ( ARS - FirstVNF_Mem_Server ) / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * RCSe ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5216535433070866, "obj2": 0.27853881154436483}, {"determining": "( ( Min( ARS ,Const ) + ( ( MDR / ( ( CRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU - ( DDR * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU * RRS ) ) ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) - ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,( MUC + ( RRSe - ( ( DS / MUR ) / ( CS / MUR ) ) ) ) ) ) + ( ( ( ( ( DS + MUR ) / MLU ) - ( ( MUC + Min( CS ,RRSe ) ) - CS ) ) * Max( ( RRSe + Max( DS,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7527041878749038}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + Min( DDR ,ARS ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24896085999147682}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,ACS ) - CRS ) ) * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) )", "choosing": "( ( ( DS / CS ) + RRSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07439787798051194}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( MUC ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.31100994470415255}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * ( ( RRS / ( ARS + ( FirstVNF_Mem - MDR ) ) ) * AMS ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( CS ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6122047244094488, "obj2": 0.2081066798781953}, {"determining": "( ( ( ( MDR / Min( ( ( AMS - CRS ) + FirstVNF_CPU_Server ) ,Min( ARS ,Const ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + DDR ) + Max( FirstVNF_Mem,PN ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / MUC ) ) - CS ) ) * Max( ( RRSe + Max( RMSe,MUM ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + ( Max( CS,( ( Max( RMSe,RCSe ) / ( RMSe - MUM ) ) - Min( ( MUM + RCSe ) ,RCSe ) ) ) + RCSe ) ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7587527684692601}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( Max( ACS,( MRS + FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) * Min( FirstVNF_RAM_Server ,( CRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( ( ( RCSe / CS ) - Min( Min( CS ,DS ) ,CS ) ) * RCSe ) + RRSe ) * ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) )", "obj1": 0.9606299212598425, "obj2": 0.015684078485474266}, {"determining": "( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe - MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.38596298446895116}, {"determining": "( ( PN - PN ) + Min( ( MDR / ( PN - FirstVNF_Mem_Server ) ) ,( ( ACS / Const ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( MLU * DS ) ) ) ) * Max( RMSe,Min( ( ( RCSe * RMSe ) * ( RRSe * RMSe ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7263779527559056, "obj2": 0.1352584885601369}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.7831514679738307}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "Min( Max( ( ( Max( AMS,FirstVNF_RAM ) - Max( FirstVNF_CPU,RRS ) ) * BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( AMS - FirstVNF_Mem ) ) ) ) + ( Max( RRS,ACS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,DS ) - ( MLU - MLU ) ) ) ) + Min( ( MUR + RMSe ) ,DS ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.577937401630037}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( FirstVNF_CPU ,BR ) ),( MDR + RRS ) ) ,( ( RRS + DDR ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( RRSe ,( CS * Max( MUC,RMSe ) ) ) ,DS ) + MUR ) ) ) - ( ( MUM - MUR ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3020978988914786}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / Min( Const ,FirstVNF_CPU ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06240654928853383}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( Min( BR ,( AMS - AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( AMS / ARS ) ) ) ) )", "choosing": "( Min( ( DS - MUC ) ,Min( ( RRSe * ( ( RMSe * CS ) / MUM ) ) ,MLU ) ) * RCSe )", "obj1": 0.8759842519685039, "obj2": 0.04534349252391222}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( Min( FirstVNF_CPU_Server ,BR ) * CRS ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7890670135240726}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( ( ( MDR / ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) - Const ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( RRS,ARS ) * Const ) ) )", "choosing": "( ( Max( CS,CS ) / ( ( Min( Max( ( ( MLU / MUR ) / Max( RRSe,CS ) ),( ( RCSe - DS ) - RMSe ) ) ,CS ) + ( DS / MLU ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( Min( ( ( DS + MUC ) - RRSe ) ,RCSe ) - DS ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( Min( ( ( AMS - CRS ) + FirstVNF_CPU_Server ) ,( ARS * ( ( ARS + AMS ) * CRS ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( MUC + CS ) ) ) / Max( ( Min( CS ,RMSe ) / MUR ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( MUM / ( RCSe + MUC ) ) ,MUC ) ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6316365004921056}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ) / ( AMS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + Max( MDR,( CRS + FirstVNF_CPU ) ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( MLU + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) )", "obj1": 0.17716535433070865, "obj2": 0.6933779802189987}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * DS ) ,DS ) ) ) ) ) ) )", "obj1": 0.2421259842519685, "obj2": 0.596680990867378}, {"determining": "( ( ( MDR / ( RRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( FirstVNF_RAM ,RRS ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( RCSe + ( ( ( CS - CS ) * RRSe ) - ( ( MUR * RCSe ) + ( ( MUM + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4313766119691699}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,ACS ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( MUC * MUM ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( Max( MUC,DS ) * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07771934368485502}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS / ( PN * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( MUC ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + Max( MUR,MUC ) ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.1013136454271847}, {"determining": "( ( Min( ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) / ( ARS - MDR ) ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server + MDR ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU + Const ) ) ,ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( Min( RCSe ,RCSe ) + MUC ) ) ) / ( MUC + ( ( ( Max( MUC,MUC ) / MLU ) + RRSe ) * MUC ) ) )", "obj1": 0.547244094488189, "obj2": 0.26234126007493125}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( MRS ,Min( RRS ,( Const * RRS ) ) ) ) / ( FirstVNF_Mem + CRS ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( DS - MUC ) / Min( MUM ,( DS - ( DS / RMSe ) ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7644544865413795}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.26234126007493125}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * DS ) ,DS ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6274126010169803}, {"determining": "( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( RRS * FirstVNF_RAM_Server ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( CRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS * MUC ) ) ) / ( MUC + Min( ( ( Max( RCSe,( MUM * Min( RCSe ,MUM ) ) ) / ( CS * ( Max( MUC,DS ) + RMSe ) ) ) + DS ) ,DS ) ) )", "obj1": 0.4251968503937008, "obj2": 0.3869788401891284}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( MRS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( RRS,AMS ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS - MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + Max( CS,RRSe ) ) ) ,( RCSe + ( ( Max( ( MUM * ( RMSe * MUR ) ),Max( RMSe,RRSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7322765715596765}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,ACS ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( MUC * MUM ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( MRS + FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,DS ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.39863680809805435}, {"determining": "( Min( ( ( ( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM * ACS ) - ( ( Min( RRS ,FirstVNF_Mem ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( MLU / MUR ) / ( ( ( RRSe - RMSe ) - ( ( RMSe + MUC ) - RCSe ) ) + ( RCSe / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( ( ( MDR / ( MRS - ( MRS - ( DDR * FirstVNF_RAM_Server ) ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MUR + Min( CS ,( MUC * MUM ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.20275590551181102, "obj2": 0.6420371073814501}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( Max( MDR,Min( AMS ,( ACS * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS / ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RCSe * ( CS + ( MUC / RRSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - Max( Min( RCSe ,RCSe ),( MLU - MLU ) ) ) ) + Min( DS ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.41732283464566927, "obj2": 0.39925759216247425}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,Max( ARS,ACS ) ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - ( MUR * MUR ) )", "obj1": 0.5787401574803149, "obj2": 0.2309514349344864}, {"determining": "( Min( ( ( RRS + BR ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * CRS ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( Max( MDR,FirstVNF_RAM ) - FirstVNF_RAM ) - DDR ) ) ) )", "choosing": "( Max( CS,MUM ) - ( RRSe - Min( Max( Max( MUM,Max( ( ( MUM - RCSe ) * ( MUM + RMSe ) ),DS ) ),( ( CS * CS ) / MLU ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0898165752882937}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - RRS ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( MUC * MUM ) ) ) + RCSe ) ) ,Min( CS ,( ( CS / DS ) * MLU ) ) )", "obj1": 0.1594488188976378, "obj2": 0.7067917506132569}, {"determining": "( ( ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) + Max( ARS,ACS ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( RRSe + RRSe ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "( ( PN - MDR ) + Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( CS,MUM ) - Min( Min( RMSe ,( RRSe / MLU ) ) ,DS ) )", "obj1": 0.610236220472441, "obj2": 0.21017218871348367}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.024388343087999576}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( ( ( AMS - CRS ) + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RCSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.24015748031496062, "obj2": 0.6082991111446119}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( ( ARS - FirstVNF_Mem_Server ) / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_RAM ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( ( MUM * RCSe ) + MUC ) - ( DS / RMSe ) ) - CS ) * RCSe ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.2810395243866278}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,( BR / ( ( AMS - AMS ) + DDR ) ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - AMS ) )", "choosing": "( ( RRSe + ( CS - ( ( RCSe + ( DS / ( ( RRSe * DS ) + Max( RCSe,CS ) ) ) ) - Max( RMSe,( ( ( MLU * DS ) - MLU ) - ( MUM / MLU ) ) ) ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,MUM ) ) + RMSe ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23560316643201665}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.08536632976590315}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( Const + ( DDR / BR ) ) / MRS ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) / ( ( ( RRSe + ( DS / CS ) ) + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( ( ( RCSe / CS ) - Min( Min( CS ,DS ) ,CS ) ) * RCSe ) + RRSe ) ) )", "obj1": 0.7637795275590551, "obj2": 0.09289189855716422}, {"determining": "( ( ( FirstVNF_RAM / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( PN / MDR ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + Min( MUM ,MUR ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.25, "obj2": 0.5871676279710722}, {"determining": "( ( ( MDR / ( MRS - Min( MRS ,ARS ) ) ) + Max( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( BR / FirstVNF_Mem ) ) ,DDR ) * RRS ) ),FirstVNF_CPU_Server ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( ( MUR + Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - Max( Min( ( RMSe / MLU ) ,RRSe ),( ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RMSe - RMSe ) ) ) ) + ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) ) ) )", "obj1": 0.8149606299212598, "obj2": 0.07038760995477038}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / ( CS + MUR ) ) ) - Max( CS,( RRSe / RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.484261419330847}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}], "23": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / BR ) ) + ( PN - AMS ) )", "choosing": "( ( RRSe + ( CS - ( ( RCSe + ( ( CS * MLU ) / ( ( RRSe * DS ) + Max( RCSe,CS ) ) ) ) - Max( RMSe,RMSe ) ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - Max( ( RRSe + CS ),( MUC + MUR ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( RCSe * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( ( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / Min( Const ,FirstVNF_CPU ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) ) + ( ( ( ACS * FirstVNF_RAM ) - BR ) + ( FirstVNF_RAM * ( FirstVNF_Mem_Server + ARS ) ) ) )", "choosing": "( Min( RMSe ,MUM ) / ( RMSe / ( RCSe * ( CS + MUC ) ) ) )", "obj1": 0.9547244094488189, "obj2": 0.014281947040908703}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "Min( Max( MDR,( MRS - ( ( Min( RRS ,BR ) * Min( AMS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( FirstVNF_Mem_Server,MDR ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( RRS - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - Min( Max( Min( RCSe ,MUR ),( ( RMSe * DS ) - ( Min( MUC ,RCSe ) * MUC ) ) ) ,CS ) ) / ( ( MUR + Min( CS ,( ( ( DS * RCSe ) + RRSe ) * MUM ) ) ) + RCSe ) ) ,Min( ( ( CS / DS ) * RCSe ) ,CS ) )", "obj1": 0.18110236220472442, "obj2": 0.682961480073937}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.2952755905511811, "obj2": 0.5369177619868494}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( ( ACS * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + ( ( MDR / ( MRS - ( ( BR * ARS ) * FirstVNF_RAM_Server ) ) ) + ( ACS - ( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - RRSe ) ) ) ) ) + Min( Min( RRSe ,RMSe ) ,DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03321211663428857}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "( Min( ( ( ( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM * ACS ) - ( ( Min( RRS ,FirstVNF_Mem ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( MLU / MUR ) / ( ( ( RRSe - RMSe ) - ( ( RMSe + MUC ) - RCSe ) ) + ( RCSe / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + Min( DDR ,ARS ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24896085999147682}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RCSe * ( CS + ( MUC / RRSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( DS ,Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.3699594210237113}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( MDR * FirstVNF_Mem ) + ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) ) ) ) ,PN ) / ( ( Max( ACS,( MRS + FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) * Min( FirstVNF_RAM_Server ,( CRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( DS / ( MLU * CS ) ) / Min( MUC ,( MUM + RMSe ) ) )", "obj1": 0.9862204724409449, "obj2": 0.00679794647478072}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7025625610423075}, {"determining": "Min( Max( Min( ( ( Min( ACS ,FirstVNF_CPU ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server - Const ) ) * Max( ( FirstVNF_CPU + FirstVNF_RAM_Server ),Max( BR,FirstVNF_Mem ) ) ) ) ) ,FirstVNF_CPU ),( MDR + RRS ) ) ,( ( FirstVNF_CPU + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.5393700787401575, "obj2": 0.2714901974465616}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ACS + ACS ) + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) - Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5101464230048084}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ( FirstVNF_RAM_Server - ( AMS * FirstVNF_RAM ) ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR - ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( DS - RMSe ) + RCSe ) ) ,( Max( ( CS * MUR ),Min( MUM ,RRSe ) ) + ( ( ( ( ( RRSe + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.734251968503937, "obj2": 0.12045586577813472}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19350875590560615}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.9291338582677166, "obj2": 0.023231438278383205}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) - Max( MRS,FirstVNF_Mem ) ) ) + ( Min( Min( Const ,Min( RRS ,( Const * RRS ) ) ) ,( FirstVNF_RAM_Server + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) - MDR ) )", "choosing": "( Max( ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.860236220472441, "obj2": 0.056702452924968186}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / ( CS + MUR ) ) ) - Max( CS,( RRSe / RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.484261419330847}, {"determining": "( ( RRS / ( Const * BR ) ) + ( ( FirstVNF_CPU / Min( Max( MDR,Const ) ,MRS ) ) + ARS ) )", "choosing": "( ( ( RCSe - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( Max( ( Min( MLU ,( CS / RCSe ) ) + CS ),MUC ) + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) * ( DS - CS ) )", "obj1": 0.43700787401574803, "obj2": 0.37314887156211596}, {"determining": "( Min( ( ( ( ( MDR + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( ( ACS + MRS ) ,FirstVNF_RAM ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( CS * Max( MUC,MLU ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.5100776574961369}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.7831514679738307}, {"determining": "( ( ARS - RRS ) + ( ( FirstVNF_RAM_Server - ( ACS * PN ) ) + ( ( MDR + ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( MDR - FirstVNF_CPU_Server ) ) ) ) ) + ( ACS - ( FirstVNF_CPU / ( CRS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( Min( Min( ( ( MUR - MLU ) / RMSe ) ,( Min( CS ,RMSe ) * DS ) ) ,MUR ),( ( DS / DS ) * MUC ) ) - DS ) / MUC ) - Min( MUM ,( DS / Min( RCSe ,( ( ( ( MUM + MUM ) * MUC ) + ( MUR * MLU ) ) - MUC ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5491749610464604}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) + ( Const * FirstVNF_Mem ) ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MUM ,DS ),RMSe ) - Min( MUM ,DS ) )", "obj1": 0.25984251968503935, "obj2": 0.5725777131454635}, {"determining": "( ( ( MDR / ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) - Const ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( RRS,ARS ) * Const ) ) )", "choosing": "( ( Max( CS,CS ) / ( ( Min( Max( ( ( MLU / MUR ) / Max( RRSe,CS ) ),( ( RCSe - DS ) - RMSe ) ) ,CS ) + ( DS / MLU ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( Min( ( ( DS + MUC ) - RRSe ) ,RCSe ) - DS ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "Min( Max( Max( ( ( FirstVNF_Mem_Server / ( Max( Const,Max( FirstVNF_CPU,DDR ) ) - FirstVNF_CPU_Server ) ) / FirstVNF_CPU ),BR ),Max( ( BR + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,Min( FirstVNF_CPU ,RRS ) )", "choosing": "( MUR - Min( RMSe ,MLU ) )", "obj1": 0.21850393700787402, "obj2": 0.6190698308833169}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( ACS + Max( ( DDR / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) + RRS ) ) ) ) ) )", "choosing": "( MUR - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUR ) * Max( RCSe,Min( ( RMSe - MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6416402578905548}, {"determining": "Min( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ( ( DDR + ARS ) - Min( ACS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) ,Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),Max( BR,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( CS ,Min( CS ,CS ) ) ),( Min( CS ,( MUC * MUM ) ) - Min( RCSe ,( Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) * ( CS - MUM ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.19932004938788042}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.024388343087999576}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Min( FirstVNF_CPU ,BR ) ),( MDR + RRS ) ) ,( ( RRS + DDR ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( RRSe ,( CS * Max( MUC,RMSe ) ) ) ,DS ) + MUR ) ) ) - ( ( MUM - MUR ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.3020978988914786}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( ( ARS - FirstVNF_Mem_Server ) / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * RCSe ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5216535433070866, "obj2": 0.27853881154436483}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3441704571717641}, {"determining": "( Min( ( Min( ( AMS * FirstVNF_RAM ) ,Max( CRS,MDR ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,Min( ( RCSe - MUR ) ,MUC ) ) ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6960060201800055}, {"determining": "( Max( Max( ( DDR + Const ),( ARS * Min( ( FirstVNF_CPU + ARS ) ,Min( RRS ,ARS ) ) ) ),FirstVNF_Mem_Server ) + ( MDR - ( ( FirstVNF_RAM_Server - ( PN - Max( AMS,FirstVNF_RAM ) ) ) - ( ( AMS - Max( ( FirstVNF_Mem / PN ),Max( Const,Max( FirstVNF_Mem_Server,ARS ) ) ) ) - ( ( DDR * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) - ( RCSe * DS ) ) / MLU ) - ( RRSe - CS ) )", "obj1": 0.2283464566929134, "obj2": 0.6126666273216497}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( ( ( Min( FirstVNF_Mem ,( FirstVNF_Mem / Max( FirstVNF_Mem,( ACS + ( Const + CRS ) ) ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ( MDR / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server * ACS ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + ( ARS - FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) )", "choosing": "( ( ( MUR + ( CS * ( Max( MUC,DS ) + RMSe ) ) ) + ( RCSe * Min( CS ,MUC ) ) ) / ( RCSe + ( ( ( MUC + MUR ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( MUC + RMSe ) ,DS ) ) ) )", "obj1": 0.8405511811023622, "obj2": 0.05786563165369441}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( MRS,FirstVNF_Mem ) ) ) + ( Max( ( PN / FirstVNF_RAM ),MRS ) / ACS ) )", "choosing": "( Max( ( MUR - Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - ( MUC + Min( RCSe ,( ( ( DS * Min( Max( CS,MLU ) ,MUM ) ) + MUC ) + Max( MLU,Max( ( ( RMSe + MLU ) * ( MUR - MUC ) ),MUC ) ) ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.039449740229681514}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( MUC ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.31100994470415255}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe - MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.4271653543307087, "obj2": 0.38596298446895116}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) + BR ) ) ) ,( ( Max( RRS,( FirstVNF_RAM_Server + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( Max( Const,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUM + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( RMSe - Min( RMSe ,( MUM - RRSe ) ) ) - ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "Min( Max( ( ( Max( AMS,FirstVNF_RAM ) - Max( FirstVNF_CPU,RRS ) ) * BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MRS - ( PN * ( AMS - FirstVNF_Mem ) ) ) ) + ( Max( RRS,ACS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,DS ) - ( MLU - MLU ) ) ) ) + Min( ( MUR + RMSe ) ,DS ) ) ) )", "obj1": 0.25196850393700787, "obj2": 0.577937401630037}, {"determining": "( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( MUR ,RMSe ) ) + RCSe ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.4719107036841616}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * DS ) ,DS ) ) ) ) ) ) )", "obj1": 0.2106299212598425, "obj2": 0.6274126010169803}, {"determining": "( ( ( MDR / ( RRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( FirstVNF_RAM ,RRS ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( RCSe + ( ( ( CS - CS ) * RRSe ) - ( ( MUR * RCSe ) + ( ( MUM + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4313766119691699}, {"determining": "( Min( Min( ( Const * Const ) ,Min( ( Const * ARS ) ,( PN * CRS ) ) ) ,( Max( FirstVNF_RAM_Server,MRS ) - Max( MRS,FirstVNF_Mem ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Const / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MLU ,MUC ) - CS ) * Max( ( ( ( MUC / ( MLU + CS ) ) / Max( ( DS / RMSe ),MLU ) ) / RMSe ),CS ) )", "obj1": 0.8700787401574803, "obj2": 0.04793016390118536}, {"determining": "( Min( ( ( ( ( Min( ARS ,( FirstVNF_CPU / PN ) ) + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - FirstVNF_CPU ) ) ,( CRS * FirstVNF_RAM ) ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - DS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - Max( RCSe,RMSe ) ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44218692593476455}, {"determining": "( ( ( ( ( ( ACS + ( Min( ARS ,Const ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * ( RMSe * Min( MUM ,RRSe ) ) ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7377936181634135}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7644544865413795}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.7283464566929134, "obj2": 0.13255436487426184}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / Min( Const ,FirstVNF_CPU ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06240654928853383}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( MDR + DDR ) + ( ( ( ARS - RRS ) / ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) ) - ( MRS - Const ) ) )", "choosing": "( ( Min( Max( RRSe,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,( RMSe + MUR ) ) ) * CS ) ) + ( MUR / ( RCSe * ( MUC + CS ) ) ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.3967214919539765}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( ( PN - PN ) + Min( ( MDR / ( PN - FirstVNF_Mem_Server ) ) ,( ( ACS / Const ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( MLU * DS ) ) ) ) * Max( RMSe,Min( ( ( RCSe * RMSe ) * ( RRSe * RMSe ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7263779527559056, "obj2": 0.1352584885601369}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS / ( PN * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( MUC ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + Max( MUR,MUC ) ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.1013136454271847}, {"determining": "( ( Min( ( ( Min( ( FirstVNF_CPU + FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ) / ( ARS - MDR ) ) - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ,( FirstVNF_CPU_Server + MDR ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * Min( ( FirstVNF_Mem_Server + ( FirstVNF_CPU + Const ) ) ,ARS ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( Min( RCSe ,RCSe ) + MUC ) ) ) / ( MUC + ( ( ( Max( MUC,MUC ) / MLU ) + RRSe ) * MUC ) ) )", "obj1": 0.547244094488189, "obj2": 0.26234126007493125}, {"determining": "( ( FirstVNF_CPU / DDR ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( MLU,MUC ) ) ,( DS - ( CS / RMSe ) ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7474469393500685}, {"determining": "( ( Min( MRS ,ACS ) + ( ARS / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( ( Const * MDR ) * FirstVNF_RAM ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe + MLU ) ) / ( RCSe + ( ( Min( Min( Min( CS ,MUR ) ,Max( RMSe,RCSe ) ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.06467527960897626}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ARS * FirstVNF_RAM ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.547244094488189, "obj2": 0.26234126007493125}, {"determining": "( ( ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) + Max( ARS,ACS ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( RRSe + RRSe ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.34448818897637795, "obj2": 0.4758393501760323}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,( CS - CS ) ) ) * CS ) ) + ( MUR / ( RCSe * ( MUC + CS ) ) ) ) ) )", "obj1": 0.421259842519685, "obj2": 0.3934620895981006}, {"determining": "( ( ACS + ( PN / ( ( ACS + FirstVNF_RAM ) + ( ( ( ( ARS - FirstVNF_Mem_Server ) / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_RAM ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( ( MUM * RCSe ) + MUC ) - ( DS / RMSe ) ) - CS ) * RCSe ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( MUR - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.2890884837208631}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ),MRS ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( RCSe,( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( MUR ,RMSe ) ) + RCSe ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.5767716535433071, "obj2": 0.23046343566506106}, {"determining": "( Min( Min( ( Const * Const ) ,( PN * CRS ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ACS - RRS ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUC + Min( ( ( Max( RRSe,DS ) * Max( MUM,MLU ) ) - ( ( RRSe + MUM ) - MUM ) ) ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + Max( ( MUR + DS ),( RRSe * RRSe ) ) ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7890670135240726}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( MRS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( RRS,AMS ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS - MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + Max( CS,RRSe ) ) ) ,( RCSe + ( ( Max( ( MUM * ( RMSe * MUR ) ),Max( RMSe,RRSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7322765715596765}, {"determining": "( ( ( MDR - ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / Max( ( Const - ( FirstVNF_RAM_Server / Max( MRS,FirstVNF_Mem ) ) ),BR ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( Max( ( DS / ( DS / ( Min( Max( RCSe,MUC ) ,RMSe ) / DS ) ) ),( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( ( CS + Min( Min( ( RMSe * MUC ) ,MUR ) ,Max( Min( MUM ,RCSe ),MLU ) ) ) ,RCSe ) ) ) - Max( ( MUR - Min( RMSe ,CS ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.45065640875264323}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( Const * MRS ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( RRS - ( MDR * Max( ( MDR - BR ),MRS ) ) ) )", "choosing": "( ( Min( ( RMSe * ( ( MUC / DS ) / RMSe ) ) ,MLU ) - DS ) * ( ( MUR / ( RMSe + MLU ) ) / ( ( ( ( RMSe + CS ) * MUR ) * Min( ( MUC + Min( MUR ,( CS - MUC ) ) ) ,CS ) ) + ( MUR / ( ( ( MUC - DS ) / ( Max( MLU,MUR ) - RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,ACS ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( MUC * MUM ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( ( PN - MDR ) + Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( CS,MUM ) - Min( Min( RMSe ,( RRSe / MLU ) ) ,DS ) )", "obj1": 0.610236220472441, "obj2": 0.21017218871348367}, {"determining": "( Min( ( ( AMS - CRS ) + FirstVNF_CPU_Server ) ,( ARS * ( ( ARS + AMS ) * CRS ) ) ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( MUC + CS ) ) ) / Max( ( Min( CS ,RMSe ) / MUR ),( CS - Min( RCSe ,( ( CS - MUM ) / Min( ( MUM / ( RCSe + MUC ) ) ,MUC ) ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6316365004921056}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( CRS + RRS ) ) ) + Max( Max( BR,FirstVNF_Mem ),( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS + ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe + RRSe ) - Max( Min( RCSe ,( MUC * Min( ( ( Max( CS,MUR ) / DS ) + MUC ) ,CS ) ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6047291687777799}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * MUC ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( ( ARS - FirstVNF_Mem_Server ) / ARS ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + Max( Min( CRS ,( ACS / CRS ) ),CRS ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RCSe * ( CS * ( MUC / RRSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( CS + RRSe ),( Max( CS,DS ) * DS ) ) ) + ( CS + ( CS + Min( ( MUC * MUM ) ,MUR ) ) ) ) + Min( DS ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.5137795275590551, "obj2": 0.28220136882219127}, {"determining": "Min( Max( Max( ( FirstVNF_CPU_Server / MRS ),MRS ),Max( ACS,( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( ( ( ( AMS - CRS ) + FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) + ( DS + MLU ) ) - ( RRSe / MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6043208343875549}, {"determining": "( ( ( BR + RRS ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MRS / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( ( Const / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( RMSe + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUC * MUR ) ) ) + ( MUR - Min( MUR ,( ( MUR * MUM ) / ( MLU * RCSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18119046874922987}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( ( ACS + RRS ) / BR ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( BR ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( ( FirstVNF_Mem_Server * ACS ) * Min( RRS ,BR ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - ( RRSe - RCSe ) ) / ( ( ( DS * DS ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( RCSe - CS ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.40551181102362205, "obj2": 0.39999991027114273}, {"determining": "( Min( ( Min( FirstVNF_RAM_Server ,Max( Min( DDR ,ARS ),MRS ) ) - ( FirstVNF_Mem * Const ) ) ,PN ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( ( ( MLU / ( RMSe - ( MUM / MUM ) ) ) - ( RCSe / MLU ) ) * CS ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( ( ( FirstVNF_RAM / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( PN / MDR ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + Min( MUM ,MUR ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.25, "obj2": 0.5871676279710722}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS * MUC ) ) ) / ( MUC + Min( ( ( Max( RCSe,( MUM * Min( RCSe ,MUM ) ) ) / ( CS * ( Max( MUC,DS ) + RMSe ) ) ) + DS ) ,DS ) ) )", "obj1": 0.4940944881889764, "obj2": 0.2959550888331984}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,( BR / ( ( AMS - AMS ) + DDR ) ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - AMS ) )", "choosing": "( ( RRSe + ( CS - ( ( RCSe + ( DS / ( ( RRSe * DS ) + Max( RCSe,CS ) ) ) ) - Max( RMSe,( ( ( MLU * DS ) - MLU ) - ( MUM / MLU ) ) ) ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,MUM ) ) + RMSe ) ) )", "obj1": 0.5728346456692913, "obj2": 0.23560316643201665}], "24": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( ( ( ( ARS * AMS ) * AMS ) + CRS ) * ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RCSe * ( ( RRSe - ( DS / ( RMSe - MUM ) ) ) - DS ) ) * CS ) / Max( MUC,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_CPU_Server ) - FirstVNF_RAM_Server ) / BR ) ) + ( PN - AMS ) )", "choosing": "( ( RRSe + ( CS - ( ( RCSe + ( ( CS * MLU ) / ( ( RRSe * DS ) + Max( RCSe,CS ) ) ) ) - Max( RMSe,RMSe ) ) ) ) / ( MUC + ( ( RRSe + Min( MUC ,DS ) ) + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( RCSe * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "Min( Max( MDR,( MRS - ( ( Min( RRS ,BR ) * Min( AMS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( FirstVNF_Mem_Server,MDR ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( RRS - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - Min( Max( Min( RCSe ,MUR ),( ( RMSe * DS ) - ( Min( MUC ,RCSe ) * MUC ) ) ) ,CS ) ) / ( ( MUR + Min( CS ,( ( ( DS * RCSe ) + RRSe ) * MUM ) ) ) + RCSe ) ) ,Min( ( ( CS / DS ) * RCSe ) ,CS ) )", "obj1": 0.18110236220472442, "obj2": 0.682961480073937}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + Min( Min( FirstVNF_Mem ,ARS ) ,FirstVNF_RAM ) )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / CS ) ,MUR ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3441704571717641}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - Max( ( RRSe + CS ),( MUC + MUR ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5324994625251678}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + ( RRS * Max( ACS,RRS ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( Const * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( CS,DS ) + Min( ( ( RMSe / CS ) + Min( Max( Min( MLU ,MUC ),( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.9803149606299213, "obj2": 0.005944337803439126}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ACS + ACS ) + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) - Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5101464230048084}, {"determining": "( ( ( FirstVNF_RAM / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( PN / MDR ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + Min( MUM ,MUR ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.25, "obj2": 0.5871676279710722}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12338760863406784}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * ( MUM / ( DS + DS ) ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05157480861690633}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),( ( RCSe * ( CS + RRSe ) ) * DS ) ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.7992125984251969, "obj2": 0.07874769794299703}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / ( CS + MUR ) ) ) - Max( CS,( RRSe / RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.484261419330847}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( ( ARS - RRS ) + ( ( FirstVNF_RAM_Server - ( ACS * PN ) ) + ( ( MDR + ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( MDR - FirstVNF_CPU_Server ) ) ) ) ) + ( ACS - ( FirstVNF_CPU / ( CRS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( Min( Min( ( ( MUR - MLU ) / RMSe ) ,( Min( CS ,RMSe ) * DS ) ) ,MUR ),( ( DS / DS ) * MUC ) ) - DS ) / MUC ) - Min( MUM ,( DS / Min( RCSe ,( ( ( ( MUM + MUM ) * MUC ) + ( MUR * MLU ) ) - MUC ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5491749610464604}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + Min( DDR ,ARS ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24896085999147682}, {"determining": "Min( Max( Max( ( FirstVNF_CPU_Server / MRS ),MRS ),Max( ACS,( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( ( ( ( AMS - CRS ) + FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) + ( DS + MLU ) ) - ( RRSe / MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6043208343875549}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( Max( DDR,Max( ( FirstVNF_CPU_Server - RRS ),Min( DDR ,DDR ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS * ( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( MUM * ( ( CS * ( MUR / Max( MUM,MUM ) ) ) + MLU ) ) - ( ( RMSe / CS ) - ( Max( ( CS + MUR ),( ( RMSe / MUR ) + ( RCSe - Min( MLU ,MUC ) ) ) ) - DS ) ) ) - ( MUM / RRSe ) )", "obj1": 0.31299212598425197, "obj2": 0.50890618275029}, {"determining": "( ( Min( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ,Min( ( Const * Const ) ,( MRS * ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) + ( ( ( ACS * FirstVNF_RAM ) - FirstVNF_RAM_Server ) + ( ( MDR / ( MRS - ( ( BR * ARS ) * FirstVNF_RAM_Server ) ) ) + ( ACS - ( FirstVNF_Mem / ARS ) ) ) ) ) + ( MRS - ( DDR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - ( CS - RRSe ) ) ) ) ) + Min( Min( RRSe ,RMSe ) ,DS ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.03321211663428857}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "Min( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( ( ( DDR + ARS ) - Min( ACS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) ,Max( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ),Max( BR,FirstVNF_Mem ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( CS ,Min( CS ,CS ) ) ),( Min( CS ,( MUC * MUM ) ) - Min( RCSe ,( Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) * ( CS - MUM ) ) ) ) ) )", "obj1": 0.6259842519685039, "obj2": 0.19932004938788042}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ) ) - ( RRSe / MUM ) )", "obj1": 0.9586614173228346, "obj2": 0.012892572548058881}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ( FirstVNF_RAM_Server - ( AMS * FirstVNF_RAM ) ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR - ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) ,( Max( ACS,RRS ) / ( MDR + RRS ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( DS - RMSe ) + RCSe ) ) ,( Max( ( CS * MUR ),Min( MUM ,RRSe ) ) + ( ( ( ( ( RRSe + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.734251968503937, "obj2": 0.12045586577813472}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( MRS,FirstVNF_Mem ) ) ) + ( Max( ( PN / FirstVNF_RAM ),MRS ) / ACS ) )", "choosing": "( Max( ( MUR - Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - ( MUC + Min( RCSe ,( ( ( DS * Min( Max( CS,MLU ) ,MUM ) ) + MUC ) + Max( MLU,Max( ( ( RMSe + MLU ) * ( MUR - MUC ) ),MUC ) ) ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.039449740229681514}, {"determining": "( ( FirstVNF_CPU / DDR ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( MLU,MUC ) ) ,( DS - ( CS / RMSe ) ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7474469393500685}, {"determining": "Min( Max( Max( ( ( FirstVNF_Mem_Server / ( Max( Const,Max( FirstVNF_CPU,DDR ) ) - FirstVNF_CPU_Server ) ) / FirstVNF_CPU ),BR ),Max( ( BR + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,Min( FirstVNF_CPU ,RRS ) )", "choosing": "( MUR - Min( RMSe ,MLU ) )", "obj1": 0.21850393700787402, "obj2": 0.6190698308833169}, {"determining": "Min( ( ACS + ( PN / ( ( ACS + FirstVNF_RAM ) + ( ( ( ( ARS - FirstVNF_Mem_Server ) / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ,( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( DS * Max( MUC,RMSe ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.30112803804534505}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7644544865413795}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RCSe * ( CS + ( MUC / RRSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( DS ,Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.36862976956025195}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.34448818897637795, "obj2": 0.4758393501760323}, {"determining": "( Min( Min( ( Const * Const ) ,Min( ( Const * ARS ) ,( PN * CRS ) ) ) ,( Max( FirstVNF_RAM_Server,MRS ) - Max( MRS,FirstVNF_Mem ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_RAM ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( ( MUM * RCSe ) + MUC ) - ( DS / RMSe ) ) - CS ) * RCSe ) / ( Min( MUC ,( DS / RMSe ) ) + MUR ) ) ) - ( MUR - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.07177267024005188}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.09191263340681295}, {"determining": "( Min( ( ( ( ( Min( ARS ,( FirstVNF_CPU / PN ) ) + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - FirstVNF_CPU ) ) ,( CRS * FirstVNF_RAM ) ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - DS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - Max( RCSe,RMSe ) ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44218692593476455}, {"determining": "( ( RRS / ( Const * BR ) ) + ( ( FirstVNF_CPU / Min( Max( MDR,Const ) ,MRS ) ) + ARS ) )", "choosing": "( ( ( RCSe - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( Max( ( Min( MLU ,( CS / RCSe ) ) + CS ),MUC ) + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) * ( DS - CS ) )", "obj1": 0.43700787401574803, "obj2": 0.37314887156211596}, {"determining": "( ( ACS + ( PN / ( ( FirstVNF_RAM + MRS ) + ( ( ( ( ARS - MDR ) / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( DDR * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( MLU + ( MLU - MUC ) ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( RCSe - RCSe ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( DS ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.4645669291338583, "obj2": 0.3347705693173739}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7025625610423075}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) + ( Const * FirstVNF_Mem ) ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MUM ,DS ),RMSe ) - Min( MUM ,DS ) )", "obj1": 0.25984251968503935, "obj2": 0.5725777131454635}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5468639824547339}, {"determining": "Min( Max( ( ( Max( AMS,FirstVNF_RAM ) - Max( FirstVNF_CPU,RRS ) ) * BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR / ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) ) + ( Max( RRS,ACS ) / ( MDR + RRS ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) + ( MUR - Min( ( RRSe + RMSe ) ,DS ) ) ) + Min( ( MUR + RMSe ) ,DS ) ) ) )", "obj1": 0.2263779527559055, "obj2": 0.6122126214936906}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( MUC ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.31100994470415255}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( CS * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "( ( ( FirstVNF_RAM - ( MRS - ( PN / FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( FirstVNF_RAM_Server * ( Min( ( FirstVNF_Mem_Server * Const ) ,( PN / MDR ) ) + Min( FirstVNF_Mem ,ACS ) ) ) ) / ( MDR + ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( ( MDR * ( FirstVNF_CPU + FirstVNF_RAM ) ) * ( FirstVNF_RAM / ( BR * FirstVNF_Mem ) ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( ( Max( ( MLU / RMSe ),Max( ( Max( ( RRSe - MUC ),( CS + RRSe ) ) + RCSe ),Min( ( MUM / Max( RCSe,MLU ) ) ,( MUM - MLU ) ) ) ) + CS ),MUR ) - Max( ( ( ( ( MUR / RCSe ) + RMSe ) - RCSe ) + ( RMSe / CS ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.19140196217127806}, {"determining": "( ( ( BR + RRS ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MRS / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( ( Const / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( RMSe + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUC * MUR ) ) ) + ( MUR - Min( MUR ,( ( MUR * MUM ) / ( MLU * RCSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18119046874922987}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / Min( Const ,Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( ( CS + MUC ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8838582677165354, "obj2": 0.04177277830046953}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.7831514679738307}, {"determining": "( Min( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS / ( PN * FirstVNF_RAM_Server ) ) ) ,( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( RCSe ,( ( ( ( ( RMSe + MUC ) - ( DS / RMSe ) ) - CS ) * MUR ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Min( Min( MUC ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) - ( ( MUM + MUC ) - ( RRSe + Max( MUR,MUC ) ) ) ) )", "obj1": 0.7618110236220472, "obj2": 0.1013136454271847}, {"determining": "( ( ( Min( FirstVNF_Mem ,( FirstVNF_Mem / Max( FirstVNF_Mem,( ACS + ( Const + CRS ) ) ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ( MDR / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server * ACS ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + ( ARS - FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) )", "choosing": "( ( ( MUR + ( CS * ( Max( MUC,DS ) + RMSe ) ) ) + ( RCSe * Min( CS ,MUC ) ) ) / ( RCSe + ( ( ( MUC + MUR ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( MUC + RMSe ) ,DS ) ) ) )", "obj1": 0.8405511811023622, "obj2": 0.05786563165369441}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03194793717427331}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.13385826771653545, "obj2": 0.7437833783336496}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( Max( AMS,FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( ACS * FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( DS,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( Max( RCSe,( RCSe / Min( CS ,MUR ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,( MUR + ( RRSe - RMSe ) ) ) + MUR ) ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.25892100278680114}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( ( Min( MRS ,ACS ) + ( ARS / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( ( Const * MDR ) * FirstVNF_RAM ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe + MLU ) ) / ( RCSe + ( ( Min( Min( Min( CS ,MUR ) ,Max( RMSe,RCSe ) ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8248031496062992, "obj2": 0.06467527960897626}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,MLU ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( ( MLU * ( Min( RCSe ,MUR ) - RRSe ) ) + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.471540215232367}, {"determining": "( ( ACS + ( FirstVNF_Mem + MDR ) ) + ( Max( FirstVNF_RAM_Server,( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_RAM ,( ARS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( RCSe ,( ( Min( ( ( ( MUM * RCSe ) + MUC ) - ( DS / RMSe ) ) ,CS ) * RCSe ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( MUR - ( ( MUM + ( ( ( ( RRSe * CS ) * MUC ) + RRSe ) * DS ) ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.27628110310956044}, {"determining": "( ( ( MDR / ( RRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( FirstVNF_RAM ,RRS ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( RCSe + ( ( ( CS - CS ) * RRSe ) - ( ( MUR * RCSe ) + ( ( MUM + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4313766119691699}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( Const * MRS ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( RRS - ( MDR * Max( ( MDR - BR ),MRS ) ) ) )", "choosing": "( ( Min( ( RMSe * ( ( MUC / DS ) / RMSe ) ) ,MLU ) - DS ) * ( ( MUR / ( RMSe + MLU ) ) / ( ( ( ( RMSe + CS ) * MUR ) * Min( ( MUC + Min( MUR ,( CS - MUC ) ) ) ,CS ) ) + ( MUR / ( ( ( MUC - DS ) / ( Max( MLU,MUR ) - RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "Min( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * Min( AMS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - RRS ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( ( DS * RCSe ) + RRSe ) * MUM ) ) ) + RCSe ) ) ,Min( CS ,( ( CS / DS ) * MLU ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6938632569767724}, {"determining": "( ( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( CRS - ( FirstVNF_RAM_Server * PN ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * DS ) ,DS ) ) ) ) ) ) )", "obj1": 0.7854330708661418, "obj2": 0.07962753458001914}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / Max( RRSe,RMSe ) )", "obj1": 0.4330708661417323, "obj2": 0.3855148649252386}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) + BR ) ) ) ,( ( Max( RRS,( FirstVNF_RAM_Server + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( Max( Const,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUM + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( RMSe - Min( RMSe ,( MUM - RRSe ) ) ) - ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( Min( ( ( ( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM * ACS ) - ( ( Min( RRS ,FirstVNF_Mem ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( MLU / MUR ) / ( ( ( RRSe - RMSe ) - ( ( RMSe + MUC ) - RCSe ) ) + ( RCSe / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,( ACS + MRS ) ) - Max( FirstVNF_Mem,MRS ) ) ) + ( PN - ( FirstVNF_CPU / ( FirstVNF_CPU_Server * Min( ( DDR * ( CRS - FirstVNF_CPU_Server ) ) ,( ACS + DDR ) ) ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( RRSe + ( DS * ( MUM - MLU ) ) ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.610236220472441, "obj2": 0.21017218871348367}, {"determining": "( Min( ( ( PN - DDR ) + ( Min( PN ,( ( ARS * ( FirstVNF_Mem + Const ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) + ( MDR * FirstVNF_Mem ) ) ) ) ,PN ) / ( ( ( RRS / FirstVNF_Mem ) - ( MDR + RRS ) ) * Min( FirstVNF_RAM_Server ,( CRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( MUC * MUM ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( Max( ( MUM + CS ),( MUR * MUC ) ) ,( Min( CS ,MUR ) + MUR ) ) + ( MUR - ( Min( RRSe ,( MLU + MUC ) ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.02115141196357321}, {"determining": "( ( ( MDR / ( MRS - ( ( Max( CRS,BR ) / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,BR ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( ( MDR / ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) - Const ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( RRS,ARS ) * Const ) ) )", "choosing": "( ( Max( CS,CS ) / ( ( Min( Max( ( ( MLU / MUR ) / Max( RRSe,CS ) ),( ( RCSe - DS ) - RMSe ) ) ,CS ) + ( DS / MLU ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( Min( ( ( DS + MUC ) - RRSe ) ,RCSe ) - DS ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( Min( Min( ( Const * Const ) ,Min( ( Const * ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) ) ,( PN * CRS ) ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( Min( MLU ,MUC ) - CS ) * ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,( CS - CS ) ) ) * CS ) ) )", "obj1": 0.8720472440944882, "obj2": 0.04726798862853028}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7609682733545279}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( CRS + RRS ) ) ) + Max( Max( BR,FirstVNF_Mem ),( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS + ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe + RRSe ) - Max( Min( RCSe ,( MUC * Min( ( ( Max( CS,MUR ) / DS ) + MUC ) ,CS ) ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6047291687777799}, {"determining": "( ( Min( MRS ,ACS ) + ( ( BR - ( PN * FirstVNF_RAM_Server ) ) / MDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / Min( Min( RRS ,( ACS * Const ) ) ,DDR ) ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( DS / MUR ) / Max( Max( MUM,( ( MUR - CS ) + RRSe ) ),MUR ) ) )", "obj1": 0.937007874015748, "obj2": 0.021190963878766327}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( ACS + Max( ( DDR / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) ),RRS ) / ( MDR + RRS ) ) + ( MDR / ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( ( FirstVNF_CPU_Server - ( PN * FirstVNF_RAM_Server ) ) + RRS ) ) ) ) ) )", "choosing": "( MUR - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUR ) * Max( RCSe,Min( ( RMSe - MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6416402578905548}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( ( MUR * MUC ) ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7890670135240726}, {"determining": "( ( PN - MDR ) + Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( CS,MUM ) - Min( Min( RMSe ,( RRSe / MLU ) ) ,DS ) )", "obj1": 0.610236220472441, "obj2": 0.21017218871348367}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( MRS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( RRS,AMS ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS - MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + Max( CS,RRSe ) ) ) ,( RCSe + ( ( Max( ( MUM * ( RMSe * MUR ) ),Max( RMSe,RRSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7322765715596765}, {"determining": "( ( ( MDR - ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / Max( ( Const - ( FirstVNF_RAM_Server / Max( MRS,FirstVNF_Mem ) ) ),BR ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( Max( ( DS / ( DS / ( Min( Max( RCSe,MUC ) ,RMSe ) / DS ) ) ),( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( ( CS + Min( Min( ( RMSe * MUC ) ,MUR ) ,Max( Min( MUM ,RCSe ),MLU ) ) ) ,RCSe ) ) ) - Max( ( MUR - Min( RMSe ,CS ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.45065640875264323}, {"determining": "( ( ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) + Max( ARS,ACS ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( RRSe + RRSe ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( FirstVNF_Mem_Server * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ARS * ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( MUM * ( RMSe * MUR ) ),MLU ) - MLU ) + RRSe ) ) )", "obj1": 0.13976377952755906, "obj2": 0.7369644598635011}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( Const * Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + BR ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( MLU - Min( MLU ,( MLU + MUC ) ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * MUC ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / Min( ( MUC * MUM ) ,MUR ) ) )", "obj1": 0.38188976377952755, "obj2": 0.44002857736545076}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / Min( Const ,FirstVNF_CPU ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.06240654928853383}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),RCSe ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.08512181765884586}], "25": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ARS * AMS ) * AMS ) + CRS ) * ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( RCSe * ( ( RRSe - ( DS / ( RMSe - MUM ) ) ) - DS ) ) * CS ) / Max( MUC,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( RCSe * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3904441351615315}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * FirstVNF_Mem_Server ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / Min( CS ,MUR ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,MUR ) + MUR ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.01289257254805888}, {"determining": "( Min( ( ( ( ( Max( ACS,RRS ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( CRS - ( FirstVNF_RAM_Server * PN ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( Max( RCSe,( RCSe / Min( CS ,MUR ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( ( RRSe + RMSe ) ,MUR ) + MUR ) ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29161524316387677}, {"determining": "( ( ACS + ( PN / ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( MLU + Min( MLU ,MUC ) ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( RCSe - ( MLU - MLU ) ) ) ) + Min( DS ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.37332262609439276}, {"determining": "Min( ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ,( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + ( ( RRS * FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( PN - BR ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( Min( ( DS + MLU ) ,( MLU + ( ( ( DS / RCSe ) - ( RMSe + MUC ) ) / ( MUR + RCSe ) ) ) ) * ( CS + MUC ) ) ) / Min( MUC ,( RRSe + RRSe ) ) )", "obj1": 0.7066929133858267, "obj2": 0.14899585738415144}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7025625610423075}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,Max( AMS,FirstVNF_RAM ) ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.8208661417322834, "obj2": 0.061980814927761266}, {"determining": "( ( ( Min( FirstVNF_Mem ,( FirstVNF_Mem / Max( FirstVNF_Mem,( ACS + ( Const + CRS ) ) ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ( MDR / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server * ACS ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + ( ARS - FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) )", "choosing": "( ( ( MUR + ( CS * ( Max( MUC,DS ) + RMSe ) ) ) + ( RCSe * Min( CS ,MUC ) ) ) / ( RCSe + ( ( ( MUC + MUR ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( MUC + RMSe ) ,DS ) ) ) )", "obj1": 0.8405511811023622, "obj2": 0.05786563165369441}, {"determining": "Min( ( MDR / ( MRS - ( ( Min( RRS ,BR ) * Min( AMS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) - RRS ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( ( DS * RCSe ) + RRSe ) * MUM ) ) ) + RCSe ) ) ,Min( CS ,( ( CS / DS ) * MLU ) ) )", "obj1": 0.1732283464566929, "obj2": 0.6938632569767724}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) / ( ( MDR / ( MRS - ( PN - FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( Min( CRS ,ARS ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( ( CS + ( Max( RMSe,DS ) / Max( ( ( MUC * RRSe ) - MUR ),MUC ) ) ) * RCSe ) / MUC ) / ( MUC + ( ( Min( Min( Min( CS ,MUR ) ,MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( Min( RMSe ,CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5819677805874698}, {"determining": "Min( Max( MDR,( MRS - ( ( Min( RRS ,BR ) * Min( AMS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( FirstVNF_Mem_Server,MDR ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( RRS - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - Min( Max( Min( RCSe ,MUR ),( ( RMSe * DS ) - ( Min( MUC ,RCSe ) * MUC ) ) ) ,CS ) ) / ( ( MUR + Min( CS ,( ( ( DS * RCSe ) + RRSe ) * MUM ) ) ) + RCSe ) ) ,Min( ( ( CS / DS ) * RCSe ) ,CS ) )", "obj1": 0.18110236220472442, "obj2": 0.682961480073937}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / ( CS + MUR ) ) ) - Max( CS,( RRSe / RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.484261419330847}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN + FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + FirstVNF_Mem ) ),FirstVNF_CPU ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + Min( ( ( RCSe / Min( CS ,MUR ) ) + ( DS * MUM ) ) ,DS ) ) ) ) - ( RRSe / MUM ) )", "obj1": 0.8070866141732284, "obj2": 0.0698095278010331}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( ( ARS - RRS ) + ( ( FirstVNF_RAM_Server - ( ACS * PN ) ) + ( ( MDR + ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( MDR - FirstVNF_CPU_Server ) ) ) ) ) + ( ACS - ( FirstVNF_CPU / ( CRS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( Min( Min( ( ( MUR - MLU ) / RMSe ) ,( Min( CS ,RMSe ) * DS ) ) ,MUR ),( ( DS / DS ) * MUC ) ) - DS ) / MUC ) - Min( MUM ,( DS / Min( RCSe ,( ( ( ( MUM + MUM ) * MUC ) + ( MUR * MLU ) ) - MUC ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5491749610464604}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + Min( DDR ,ARS ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24896085999147682}, {"determining": "Min( Max( Max( ( FirstVNF_CPU_Server / MRS ),MRS ),Max( ACS,( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( ( ( ( AMS - CRS ) + FirstVNF_CPU ) * Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,RCSe ) + ( DS + MLU ) ) - ( RRSe / MUM ) )", "obj1": 0.23818897637795275, "obj2": 0.6043208343875549}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RCSe * ( CS + ( MUC / RRSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( DS ,Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.36862976956025195}, {"determining": "( ( ( MDR / ( RRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( FirstVNF_RAM ,RRS ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( RCSe + ( ( ( CS - CS ) * RRSe ) - ( ( MUR * RCSe ) + ( ( MUM + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4313766119691699}, {"determining": "Min( Max( Max( ( ( FirstVNF_Mem_Server / ( Max( Const,Max( FirstVNF_CPU,DDR ) ) - FirstVNF_CPU_Server ) ) / FirstVNF_CPU ),BR ),Max( ( BR + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,Min( FirstVNF_CPU ,RRS ) )", "choosing": "( MUR - Min( RMSe ,MLU ) )", "obj1": 0.21850393700787402, "obj2": 0.6190698308833169}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( Const * MRS ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( RRS - ( MDR * Max( ( MDR - BR ),MRS ) ) ) )", "choosing": "( ( Min( ( RMSe * ( ( MUC / DS ) / RMSe ) ) ,MLU ) - DS ) * ( ( MUR / ( RMSe + MLU ) ) / ( ( ( ( RMSe + CS ) * MUR ) * Min( ( MUC + Min( MUR ,( CS - MUC ) ) ) ,CS ) ) + ( MUR / ( ( ( MUC - DS ) / ( Max( MLU,MUR ) - RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "( ( Const + RRS ) + ( Min( Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.2607860222053638}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - Max( ( RRSe + CS ),( MUC + MUR ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5324994625251678}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) + ( Const * FirstVNF_Mem ) ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( MUM ,DS ),RMSe ) - Min( MUM ,DS ) )", "obj1": 0.25984251968503935, "obj2": 0.5725777131454635}, {"determining": "Min( ( AMS * FirstVNF_RAM ) ,Max( CRS,MDR ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( Min( CS ,( MUC * MUM ) ) - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6342553338188405}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( MDR / ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ARS - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( BR - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( ( Min( CS ,RMSe ) * MUR ) - DS ) ) * ( CS - MUM ) ) - ( MUM / RRSe ) )", "obj1": 0.2992125984251969, "obj2": 0.5187351241631238}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( Const * Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + BR ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( MLU - Min( MLU ,( MLU + MUC ) ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * MUC ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + ( RRS * Max( ACS,RRS ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( Const * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( CS,DS ) + Min( ( ( RMSe / CS ) + Min( Max( Min( MLU ,MUC ),( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.28112151207760877}, {"determining": "( ( FirstVNF_CPU / DDR ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( MLU,MUC ) ) ,( DS - ( CS / RMSe ) ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7474469393500685}, {"determining": "( Min( ( ( BR + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( ( MUR * MUC ) ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7890670135240726}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12338760863406784}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7644544865413795}, {"determining": "( Min( ( ( ( ( Min( ARS ,( FirstVNF_CPU / PN ) ) + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - FirstVNF_CPU ) ) ,( CRS * FirstVNF_RAM ) ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - DS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - Max( RCSe,RMSe ) ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44218692593476455}, {"determining": "( Min( ( ( PN - DDR ) + ( Min( PN ,( ( ARS * ( FirstVNF_Mem + Const ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( Max( FirstVNF_CPU_Server,BR ) / FirstVNF_Mem_Server ) + ( MDR * FirstVNF_Mem ) ) ) ) ,PN ) / ( ( ( RRS / FirstVNF_Mem ) - ( MDR + RRS ) ) * Min( FirstVNF_RAM_Server ,( CRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( MUC * MUM ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( Max( ( MUM + CS ),( MUR * MUC ) ) ,( Min( CS ,MUR ) + MUR ) ) + ( MUR - ( Min( RRSe ,( MLU + MUC ) ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.9468503937007874, "obj2": 0.02115141196357321}, {"determining": "( ( ( ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) * Max( MRS,Max( ACS,MRS ) ) ) * FirstVNF_Mem_Server ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - CRS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( RRSe + ( ( ( ( DS + MUR ) / MLU ) / ( ( MUC + ( RCSe / RRSe ) ) - CS ) ) * Max( ( Min( DS ,MUM ) + Max( DS,MUM ) ),Min( RMSe ,( ( MLU / MLU ) * RMSe ) ) ) ) ) ) )", "obj1": 0.718503937007874, "obj2": 0.1328617738450424}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.9291338582677166, "obj2": 0.023231438278383205}, {"determining": "( Min( ( ( ( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM * ACS ) - ( ( Min( RRS ,FirstVNF_Mem ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( MLU / MUR ) / ( ( ( RRSe - RMSe ) - ( ( RMSe + MUC ) - RCSe ) ) + ( RCSe / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( Min( ( ( ( ( ( AMS * ( RRS * MDR ) ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( MDR ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "( ( CS - DS ) * ( ( CS - CS ) / ( Max( MUM,MUR ) * MUR ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3441704571717641}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.7831514679738307}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / Min( Min( MRS ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + Min( MUM ,MUR ) ) ) - ( RMSe * Min( RCSe ,RCSe ) ) ) - Min( ( MUR + ( CS / RMSe ) ) ,( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.10112483257032799}, {"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( ( MRS - FirstVNF_Mem_Server ) - FirstVNF_RAM_Server ) / BR ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) + ( MUR - Min( ( RRSe + RMSe ) ,DS ) ) ) + Min( ( MUR + RMSe ) ,DS ) ) ) )", "obj1": 0.19094488188976377, "obj2": 0.6483201542666103}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( ( ( FirstVNF_RAM / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( PN / MDR ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),RCSe ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6220472440944882, "obj2": 0.1988747040887898}, {"determining": "( Max( AMS,FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( ACS * FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( DS,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( Max( RCSe,( RCSe / Min( CS ,MUR ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,( MUR + ( RRSe - RMSe ) ) ) + MUR ) ) ) ) )", "obj1": 0.5511811023622047, "obj2": 0.25892100278680114}, {"determining": "( ( ( BR + RRS ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MRS / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( ( Const / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( RMSe + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUC * MUR ) ) ) + ( MUR - Min( MUR ,( ( MUR * MUM ) / ( MLU * RCSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18119046874922987}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Max( MDR,FirstVNF_CPU ) / ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( BR + ( ( ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) + FirstVNF_Mem ) + DDR ) ) * ( FirstVNF_RAM_Server * ARS ) ) ,( Const * BR ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) / ( ( Min( MLU ,( DS * MUC ) ) * ( ( MUC + MUC ) * CS ) ) / ( MLU / ( RMSe + ( ( CS - RCSe ) - Max( Min( MUR ,DS ),( RCSe - MUM ) ) ) ) ) ) ) )", "obj1": 0.9940944881889764, "obj2": 0.004785896880520844}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) + BR ) ) ) ,( ( Max( RRS,( FirstVNF_RAM_Server + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( Max( Const,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUM + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( RMSe - Min( RMSe ,( MUM - RRSe ) ) ) - ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5468639824547339}, {"determining": "( ( RRS / ( Const * BR ) ) + ( ( FirstVNF_CPU / Min( Max( MDR,Const ) ,MRS ) ) + ARS ) )", "choosing": "( ( ( RCSe - CS ) / ( ( ( ( ( MUR / MUM ) - MLU ) + RCSe ) * ( ( MUM + MUC ) * CS ) ) + ( Max( ( Min( MLU ,( CS / RCSe ) ) + CS ),MUC ) + ( RMSe + ( ( CS - RCSe ) - Min( MUM ,RMSe ) ) ) ) ) ) * ( DS - CS ) )", "obj1": 0.43700787401574803, "obj2": 0.37314887156211596}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * ( MUM / ( DS + DS ) ) ) ) ) )", "obj1": 0.8543307086614174, "obj2": 0.05157480861690633}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ACS + ACS ) + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) - Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5101464230048084}, {"determining": "( ( Const + RRS ) + ( Min( ( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ,( FirstVNF_CPU_Server + ( Min( ( ( MRS * FirstVNF_RAM ) + ( CRS / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_RAM / ARS ) ) ) ) ) )", "choosing": "( ( DS * ( Max( DS,MUC ) * ( CS + RRSe ) ) ) / ( RMSe * DS ) )", "obj1": 0.2559055118110236, "obj2": 0.5811904347627984}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( Max( DDR,Max( ( FirstVNF_CPU_Server - RRS ),Min( DDR ,DDR ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS * ( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( MUM * ( ( CS * ( MUR / Max( MUM,MUM ) ) ) + MLU ) ) - ( ( RMSe / CS ) - ( Max( ( CS + MUR ),( ( RMSe / MUR ) + ( RCSe - Min( MLU ,MUC ) ) ) ) - DS ) ) ) - ( MUM / RRSe ) )", "obj1": 0.31299212598425197, "obj2": 0.50890618275029}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + ( RRS * Max( ACS,RRS ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( Const * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( CS,DS ) + Min( ( ( RMSe / CS ) + Min( Max( Min( MLU ,MUC ),( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.9803149606299213, "obj2": 0.005944337803439126}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ( Min( RRS ,PN ) + Min( FirstVNF_Mem ,FirstVNF_Mem ) ),RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,ARS ) * FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + ( RRSe / RCSe ) ) / CS ) ,MUR ) ) + RRSe ) ) )", "obj1": 0.6377952755905512, "obj2": 0.19134787232126743}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( ( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( Min( Const ,FirstVNF_CPU ),RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( CRS - ( FirstVNF_RAM_Server * PN ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * CS ) ,DS ) ) ) ) ) ) )", "obj1": 0.905511811023622, "obj2": 0.037257500413400126}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( MRS,FirstVNF_Mem ) ) ) + ( Max( ( PN / FirstVNF_RAM ),MRS ) / ACS ) )", "choosing": "( Max( ( MUR - Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - ( MUC + Min( RCSe ,( ( ( DS * Min( Max( CS,MLU ) ,MUM ) ) + MUC ) + Max( MLU,Max( ( ( RMSe + MLU ) * ( MUR - MUC ) ),MUC ) ) ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.039449740229681514}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03194793717427331}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( MRS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( RRS,AMS ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS - MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + Max( CS,RRSe ) ) ) ,( RCSe + ( ( Max( ( MUM * ( RMSe * MUR ) ),Max( RMSe,RRSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7322765715596765}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,CS ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.9803149606299213, "obj2": 0.005944337803439126}, {"determining": "( ( ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * ( FirstVNF_RAM * FirstVNF_Mem_Server ) ) ) ) + Max( ARS,ACS ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( RRSe + RRSe ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( ( Const / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.797244094488189, "obj2": 0.07705737889772726}, {"determining": "( ( ( MDR / ( ( ( AMS * FirstVNF_RAM ) * FirstVNF_RAM_Server ) - Const ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( RRS,ARS ) * Const ) ) )", "choosing": "( ( Max( CS,CS ) / ( ( Min( Max( ( ( MLU / MUR ) / Max( RRSe,CS ) ),( ( RCSe - DS ) - RMSe ) ) ,CS ) + ( DS / MLU ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) - ( RRSe - RMSe ) ) ) ) ) ) * ( Min( ( ( DS + MUC ) - RRSe ) ,RCSe ) - DS ) )", "obj1": 0.3858267716535433, "obj2": 0.4394375796812065}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( ( ARS - FirstVNF_Mem_Server ) / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( MLU + Min( MLU ,MUC ) ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( DS ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.33743166599587743}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.34448818897637795, "obj2": 0.4758393501760323}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "( ( ACS + ( FirstVNF_Mem + MDR ) ) + ( Max( FirstVNF_RAM_Server,( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_RAM ,( ARS / FirstVNF_Mem ) ) ) ) )", "choosing": "( Min( RCSe ,( ( Min( ( ( ( MUM * RCSe ) + MUC ) - ( DS / RMSe ) ) ,CS ) * RCSe ) / ( Min( MUC ,DS ) + MUR ) ) ) - ( MUR - ( ( MUM + ( ( ( ( RRSe * CS ) * MUC ) + RRSe ) * DS ) ) - ( RRSe + MUR ) ) ) )", "obj1": 0.5334645669291339, "obj2": 0.27628110310956044}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7609682733545279}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( CRS + RRS ) ) ) + Max( Max( BR,FirstVNF_Mem ),( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS + ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe + RRSe ) - Max( Min( RCSe ,( MUC * Min( ( ( Max( CS,MUR ) / DS ) + MUC ) ,CS ) ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6047291687777799}, {"determining": "Min( Min( FirstVNF_RAM ,( FirstVNF_Mem / ARS ) ) ,( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( DS * Max( MUC,RMSe ) ) ,RRSe ) ,( ( ( MUM * RCSe ) + MUC ) - ( DS / RMSe ) ) ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.30112803804534505}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,( ACS + MRS ) ) - Max( FirstVNF_Mem,MRS ) ) ) + ( PN - ( FirstVNF_CPU / ( FirstVNF_CPU_Server * Min( ( DDR * ( CRS - FirstVNF_CPU_Server ) ) ,( ACS + DDR ) ) ) ) ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( RRSe + ( DS * ( MUM - MLU ) ) ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.610236220472441, "obj2": 0.21017218871348367}, {"determining": "( ( Min( MRS ,ACS ) + ( ( BR - ( PN * FirstVNF_RAM_Server ) ) / MDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / Min( Min( RRS ,( ACS * Const ) ) ,DDR ) ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( DS / MUR ) / Max( Max( MUM,( ( MUR - CS ) + RRSe ) ),MUR ) ) )", "obj1": 0.937007874015748, "obj2": 0.021190963878766327}, {"determining": "Min( ( AMS * FirstVNF_RAM ) ,Max( CRS,MDR ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) + ( MUR - Min( ( RRSe + RMSe ) ,DS ) ) ) + Min( ( MUR + RMSe ) ,DS ) ) ) )", "obj1": 0.2047244094488189, "obj2": 0.6382036920304925}, {"determining": "( ( ( MDR - ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / Max( ( Const - ( FirstVNF_RAM_Server / Max( MRS,FirstVNF_Mem ) ) ),BR ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( Max( ( DS / ( DS / ( Min( Max( RCSe,MUC ) ,RMSe ) / DS ) ) ),( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( ( CS + Min( Min( ( RMSe * MUC ) ,MUR ) ,Max( Min( MUM ,RCSe ),MLU ) ) ) ,RCSe ) ) ) - Max( ( MUR - Min( RMSe ,CS ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.45065640875264323}, {"determining": "( ( ( MDR / ( MRS - ( ( Max( CRS,BR ) / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,BR ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "( Min( Min( ( Const * Const ) ,Min( ( Const * ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) ) ,( PN * CRS ) ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( Min( MLU ,MUC ) - CS ) * ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + Min( MUC ,( CS - CS ) ) ) * CS ) ) )", "obj1": 0.8720472440944882, "obj2": 0.04726798862853028}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( BR,FirstVNF_Mem ) ) ,( ( MDR + ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) + ( ( RRS + FirstVNF_CPU_Server ) / ( ( FirstVNF_RAM_Server - ( Max( CRS,RRS ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN - FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_RAM_Server - ( FirstVNF_CPU + FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "( ( RCSe / ( RCSe * Min( Max( ( ( RMSe + MUR ) * ( Min( DS ,CS ) * DS ) ),MUR ) ,( Min( MUR ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,Min( ( RCSe - MUR ) ,( DS / MUR ) ) ) ) ) ) ) / ( MUC + Min( DS ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.6299212598425197, "obj2": 0.19817055321718102}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,MLU ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( ( MLU * ( Min( RCSe ,MUR ) - RRSe ) ) + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.471540215232367}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.610236220472441, "obj2": 0.21017218871348367}], "26": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( ( Min( MRS ,ACS ) + ( MDR / Min( Min( MRS ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ),FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( MUR + ( CS / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( RCSe * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( MRS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( RRS,AMS ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS - MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + Max( CS,RRSe ) ) ) ,( RCSe + ( ( Max( ( MUM * ( RMSe * MUR ) ),Max( RMSe,RRSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7322765715596765}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( ( FirstVNF_CPU / DDR ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( MLU,MUC ) ) ,( DS - ( CS / RMSe ) ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7474469393500685}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( Const * Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + BR ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( MLU - Min( MLU ,( MLU + MUC ) ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * MUC ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "Min( Max( MDR,( MRS - ( ( Min( RRS ,BR ) * Min( AMS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( FirstVNF_Mem_Server,MDR ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( RRS - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - Min( Max( Min( RCSe ,MUR ),( ( RMSe * DS ) - ( Min( MUC ,RCSe ) * MUC ) ) ) ,CS ) ) / ( ( MUR + Min( CS ,( ( ( DS * RCSe ) + RRSe ) * MUM ) ) ) + RCSe ) ) ,Min( ( ( CS / DS ) * RCSe ) ,CS ) )", "obj1": 0.18110236220472442, "obj2": 0.682961480073937}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RCSe * ( CS + ( MUC / RRSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( DS ,Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.36862976956025195}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( MRS,FirstVNF_Mem ) ) ) + ( Max( ( PN / FirstVNF_RAM ),MRS ) / ACS ) )", "choosing": "( Max( ( MUR - Min( CS ,RMSe ) ),Max( RCSe,DS ) ) - ( MUC + Min( RCSe ,( ( ( DS * Min( Max( CS,MLU ) ,MUM ) ) + MUC ) + Max( MLU,Max( ( ( RMSe + MLU ) * ( MUR - MUC ) ),MUC ) ) ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.039449740229681514}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + Min( DDR ,ARS ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24896085999147682}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / ( CS + MUR ) ) ) - Max( CS,( RRSe / RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.484261419330847}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),RCSe ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38123869041875974}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( ( ARS - RRS ) + ( ( FirstVNF_RAM_Server - ( ACS * PN ) ) + ( ( MDR + ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( MDR - FirstVNF_CPU_Server ) ) ) ) ) + ( ACS - ( FirstVNF_CPU / ( CRS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( Min( Min( ( ( MUR - MLU ) / RMSe ) ,( Min( CS ,RMSe ) * DS ) ) ,MUR ),( ( DS / DS ) * MUC ) ) - DS ) / MUC ) - Min( MUM ,( DS / Min( RCSe ,( ( ( ( MUM + MUM ) * MUC ) + ( MUR * MLU ) ) - MUC ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5491749610464604}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,( ( MLU + CS ) - CS ) ) ) ,DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.591610983980073}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( Min( ( ( ( ( Min( ARS ,( FirstVNF_CPU / PN ) ) + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - FirstVNF_CPU ) ) ,( CRS * FirstVNF_RAM ) ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - DS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - Max( RCSe,RMSe ) ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44218692593476455}, {"determining": "( Max( DDR,Max( ( FirstVNF_CPU_Server - RRS ),Min( DDR ,DDR ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS * ( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( MUM * ( ( CS * ( MUR / Max( MUM,MUM ) ) ) + MLU ) ) - ( ( RMSe / CS ) - ( Max( ( CS + MUR ),( ( RMSe / MUR ) + ( RCSe - Min( MLU ,MUC ) ) ) ) - DS ) ) ) - ( MUM / RRSe ) )", "obj1": 0.31299212598425197, "obj2": 0.50890618275029}, {"determining": "( Min( ( ( ( ( ( AMS * ( RRS * MDR ) ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( MDR ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "( ( CS - DS ) * ( ( CS - CS ) / ( Max( MUM,MUR ) * MUR ) ) )", "obj1": 0.4507874015748031, "obj2": 0.3441704571717641}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - Max( ( RRSe + CS ),( MUC + MUR ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2952755905511811, "obj2": 0.5324994625251678}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ACS * FirstVNF_RAM ) ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( Max( MUR,RCSe ) - CS ) ) / RRSe ) * ( MUM * ( RRSe + MLU ) ) ) - ( ( RRSe + CS ) / RRSe ) )", "obj1": 0.3838582677165354, "obj2": 0.4369088979196985}, {"determining": "( ( DDR / ( FirstVNF_Mem_Server + AMS ) ) + ( Max( BR,FirstVNF_Mem ) + ( Min( MDR ,( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( FirstVNF_Mem_Server - ( BR * Const ) ) ) ) ) ) )", "choosing": "( Max( ( RMSe - Max( MUM,RRSe ) ),( MLU + MUM ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR / ( Min( RCSe ,RCSe ) - Min( MLU ,( MUR * CS ) ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,Min( MLU ,DS ) ) ) ) )", "obj1": 0.2578740157480315, "obj2": 0.5694303574889379}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( BR - Min( ACS ,AMS ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * Min( DS ,RRSe ) ) ) / ( RCSe + ( ( Min( ( Min( MUC ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.1210146306720625}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( MDR / ( DDR - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ARS - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( BR - ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( ( Min( CS ,RMSe ) * MUR ) - DS ) ) * ( CS - MUM ) ) - ( MUM / RRSe ) )", "obj1": 0.2992125984251969, "obj2": 0.5187351241631238}, {"determining": "( ( ( Min( FirstVNF_Mem ,( FirstVNF_Mem / Max( FirstVNF_Mem,( ACS + ( Const + CRS ) ) ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ( MDR / ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) - ( FirstVNF_RAM_Server * ACS ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + ( ARS - FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) )", "choosing": "( ( ( MUR + ( CS * ( Max( MUC,DS ) + RMSe ) ) ) + ( RCSe * Min( CS ,MUC ) ) ) / ( RCSe + ( ( ( MUC + MUR ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( MUC + RMSe ) ,DS ) ) ) )", "obj1": 0.8405511811023622, "obj2": 0.05786563165369441}, {"determining": "Min( Max( Max( ( ( FirstVNF_Mem_Server / ( Max( Const,Max( FirstVNF_CPU,DDR ) ) - FirstVNF_CPU_Server ) ) / FirstVNF_CPU ),BR ),Max( ( BR + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,Min( FirstVNF_CPU ,RRS ) )", "choosing": "( MUR - Min( RMSe ,MLU ) )", "obj1": 0.21850393700787402, "obj2": 0.6190698308833169}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + ( RRS * Max( ACS,RRS ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( Const * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( CS,DS ) + Min( ( ( RMSe / CS ) + Min( Max( Min( MLU ,MUC ),( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.28112151207760877}, {"determining": "Min( Min( FirstVNF_RAM ,( FirstVNF_Mem / ARS ) ) ,( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( DS * Max( MUC,RMSe ) ) ,RRSe ) ,( ( ( MUM * RCSe ) + MUC ) - ( DS / RMSe ) ) ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.30112803804534505}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7644544865413795}, {"determining": "( Min( ( ( ( ( Max( ACS,RRS ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( CRS - ( FirstVNF_RAM_Server * PN ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( Max( RCSe,( RCSe / Min( CS ,MUR ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( ( RRSe + RMSe ) ,MUR ) + MUR ) ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.29161524316387677}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( MUM / RRSe ) - Max( RRSe,RCSe ) )", "obj1": 0.34448818897637795, "obj2": 0.47357421382479087}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( CRS + RRS ) ) ) + Max( Max( BR,FirstVNF_Mem ),( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS + ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe + RRSe ) - Max( Min( RCSe ,( MUC * Min( ( ( Max( CS,MUR ) / DS ) + MUC ) ,CS ) ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6047291687777799}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( Const * MRS ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( RRS - ( MDR * Max( ( MDR - BR ),MRS ) ) ) )", "choosing": "( ( Min( ( RMSe * ( ( MUC / DS ) / RMSe ) ) ,MLU ) - DS ) * ( ( MUR / ( RMSe + MLU ) ) / ( ( ( ( RMSe + CS ) * MUR ) * Min( ( MUC + Min( MUR ,( CS - MUC ) ) ) ,CS ) ) + ( MUR / ( ( ( MUC - DS ) / ( Max( MLU,MUR ) - RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,Max( AMS,FirstVNF_RAM ) ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.8208661417322834, "obj2": 0.061980814927761266}, {"determining": "( Min( ( ( PN - DDR ) + ( ( PN / ( ( ARS * ( FirstVNF_Mem + Const ) ) + ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) / FirstVNF_Mem_Server ) ) ) / ( ( Max( FirstVNF_CPU_Server,( FirstVNF_CPU_Server + AMS ) ) / FirstVNF_Mem_Server ) + ( MDR * FirstVNF_Mem ) ) ) ) ,PN ) / ( ( Max( ACS,( MRS + FirstVNF_RAM_Server ) ) - ( MDR + RRS ) ) * Min( FirstVNF_RAM_Server ,( CRS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Min( CS ,( MUC * MUM ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( Max( ( MUM + CS ),( MUR * MUC ) ) ,( Min( CS ,MUR ) + MUR ) ) + ( MUR - ( Min( ( MLU - MLU ) ,RRSe ) - ( MLU - MLU ) ) ) ) + ( MUM - ( RRSe * MUR ) ) ) ) )", "obj1": 0.9488188976377953, "obj2": 0.020225281803816678}, {"determining": "Min( ( AMS * FirstVNF_RAM ) ,Max( CRS,MDR ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( Min( CS ,( MUC * MUM ) ) - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.2125984251968504, "obj2": 0.6342553338188405}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( MRS,FirstVNF_Mem ) ) ) + ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MUR - Min( CS ,RMSe ) ),Max( ( RCSe + MLU ),DS ) ) - ( MUC + Min( RCSe ,( ( ( DS * Min( Max( CS,MLU ) ,MUM ) ) + MUC ) + Max( MLU,Max( ( ( RMSe + MLU ) * ( MUR - MUC ) ),MUC ) ) ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.09167631361011612}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5468639824547339}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( RRSe + RMSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,MUR ) + MUR ) ) ) )", "obj1": 0.9606299212598425, "obj2": 0.012302881826450828}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( Const + RRS ) + ( Min( Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( RRSe ,MUM ) ) + ( ( ( ( MUC / RRSe ) / Min( RMSe ,( DS - ( DS / RMSe ) ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.5393700787401575, "obj2": 0.2681040652252995}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7609682733545279}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.7831514679738307}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "( ( Const + RRS ) + ( Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.6948818897637795, "obj2": 0.14195549041534755}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + Min( MUM ,MUR ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.765748031496063, "obj2": 0.09854138120884623}, {"determining": "( ( ( MDR / ( RRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( FirstVNF_RAM ,RRS ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( RCSe + ( ( ( CS - CS ) * RRSe ) - ( ( MUR * RCSe ) + ( ( MUM + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4313766119691699}, {"determining": "( ( Const + ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUC ) * RCSe ) - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.14455718945556878}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( ( Const + RRS ) + ( Min( Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS / ( ( RRS / FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUM ) - ( RRSe * Max( MUR,RRSe ) ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.547244094488189, "obj2": 0.2586052860709896}, {"determining": "( ( ( BR + RRS ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MRS / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( ( Const / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( RMSe + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUC * MUR ) ) ) + ( MUR - Min( MUR ,( ( MUR * MUM ) / ( MLU * RCSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18119046874922987}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12338760863406784}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6962283820881429}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) + BR ) ) ) ,( ( Max( RRS,( FirstVNF_RAM_Server + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( Max( Const,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUM + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( RMSe - Min( RMSe ,( MUM - RRSe ) ) ) - ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( ACS + ( PN / ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( ( ( PN * FirstVNF_RAM_Server ) - MRS ) ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( MLU + Min( MLU ,MUC ) ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( RCSe - ( MLU - MLU ) ) ) ) + Min( Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.37203058095561276}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ACS + ACS ) + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) - Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5101464230048084}, {"determining": "( ( ( MDR / ( ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,CS ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( ( ( DS * RMSe ) + Min( DS ,DS ) ) + MUR ) ) ) )", "obj1": 0.8287401574803149, "obj2": 0.059096962103255615}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR / ( MRS - ( PN * ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_RAM ) ) ) ) ) + ( Min( ACS ,( FirstVNF_Mem / FirstVNF_CPU ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM * ( RRSe + MLU ) ) * ( RMSe + MUC ) )", "obj1": 0.6141732283464567, "obj2": 0.2077414559540238}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15748031496062992, "obj2": 0.7025625610423075}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,CS ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.937007874015748, "obj2": 0.02077808387145522}, {"determining": "( Min( ( ( ( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM * ACS ) - ( ( Min( RRS ,FirstVNF_Mem ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( MLU / MUR ) / ( ( ( RRSe - RMSe ) - ( ( RMSe + MUC ) - RCSe ) ) + ( RCSe / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.9192913385826772, "obj2": 0.03194793717427331}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( ( Const + RRS ) + ( Min( ( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ,( FirstVNF_CPU_Server + ( Min( ( ( MRS * FirstVNF_RAM ) + ( CRS / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_RAM / ARS ) ) ) ) ) )", "choosing": "( ( DS * ( Max( DS,MUC ) * ( CS + RRSe ) ) ) / ( RMSe * DS ) )", "obj1": 0.2559055118110236, "obj2": 0.5811904347627984}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( RCSe + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15551181102362205, "obj2": 0.703746664640828}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN + FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + FirstVNF_Mem ) ),FirstVNF_CPU ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.8090551181102362, "obj2": 0.06906718454318546}, {"determining": "( Min( Min( ( Const * Const ) ,Min( ( Const * ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) ) ,( Min( ACS ,( FirstVNF_Mem / MRS ) ) * CRS ) ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( Min( MLU ,MUC ) - CS ) * ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + ( Min( RMSe ,RMSe ) - MUM ) ) * CS ) ) )", "obj1": 0.8720472440944882, "obj2": 0.04726798862853028}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.3904441351615315}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + ( RRS * Max( ACS,RRS ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( Const * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( CS,DS ) + Min( ( ( RMSe / CS ) + Min( Max( Min( MLU ,MUC ),( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.9803149606299213, "obj2": 0.005944337803439126}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + ( ( ( Max( FirstVNF_CPU,MDR ) * MRS ) / ( AMS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( CS - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) + Min( ( Min( CS ,MUR ) + Max( MUR,CS ) ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5819677805874698}, {"determining": "( Min( ( ( ( MRS - ( PN * FirstVNF_Mem_Server ) ) + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( Min( CS ,MUR ) ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7890670135240726}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + ( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) + ( Const * FirstVNF_Mem ) ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.19488188976377951, "obj2": 0.6463367969810166}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MDR / ( FirstVNF_Mem + RRS ) ) + Min( ACS ,( ( ( MDR + AMS ) / ( MRS - ( CRS * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Min( Min( RRSe ,( MLU * Max( RRSe,( Min( MUR ,MLU ) / ( RRSe / MLU ) ) ) ) ) ,RMSe ) - Max( Min( CS ,Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( MUR + Min( ( RMSe * ( ( RCSe / ( RCSe / RCSe ) ) * DS ) ) ,RMSe ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.034727541906932266}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( ( ARS - FirstVNF_Mem_Server ) / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( MLU + Min( MLU ,MUC ) ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( DS ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.46062992125984253, "obj2": 0.33743166599587743}, {"determining": "( ( ( MDR - ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / Max( ( Const - ( FirstVNF_RAM_Server / Max( MRS,FirstVNF_Mem ) ) ),BR ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( Max( ( DS / ( DS / ( Min( Max( RCSe,MUC ) ,RMSe ) / DS ) ) ),( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( ( CS + Min( Min( ( RMSe * MUC ) ,MUR ) ,Max( Min( MUM ,RCSe ),MLU ) ) ) ,RCSe ) ) ) - Max( ( MUR - Min( RMSe ,CS ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.45065640875264323}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,ACS ) ) ) )", "choosing": "( MUR - Max( ( Min( CS ,RMSe ) + MUR ),( CS - Min( RCSe ,( ( CS - MUM ) * Min( RMSe ,MLU ) ) ) ) ) )", "obj1": 0.39960629921259844, "obj2": 0.41482337005513586}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "( ( ( MDR / ( MRS - ( ( Max( CRS,BR ) / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,BR ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,MLU ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( ( MLU * ( Min( RCSe ,MUR ) - RRSe ) ) + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.471540215232367}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ( Min( RRS ,PN ) + Min( FirstVNF_Mem ,FirstVNF_Mem ) ),RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,ARS ) * FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + ( RRSe / RCSe ) ) / CS ) ,MUR ) ) + RRSe ) ) )", "obj1": 0.6377952755905512, "obj2": 0.19134787232126743}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( RRS ,( Const * RRS ) ) ) ) / ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) - ( Const * ( AMS / FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,Min( ( RCSe - MUR ) ,MUC ) ) ) ) ) ) / ( MUC + Min( DS ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6393150069652558}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + Min( MUM ,MUR ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.7598425196850394, "obj2": 0.10047320361157125}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( ( Const + RRS ) + ( Min( Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.5452755905511811, "obj2": 0.2607860222053638}, {"determining": "( ( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( Min( Const ,FirstVNF_CPU ),RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( CRS - ( FirstVNF_RAM_Server * ACS ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) + ( FirstVNF_CPU * FirstVNF_RAM ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( MUR + Min( Min( ( CS * Max( MUC,DS ) ) ,( Min( CS ,RMSe ) + MUR ) ) ,RMSe ) ),( CS - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * CS ) ,DS ) ) ) ) ) ) )", "obj1": 0.7204724409448819, "obj2": 0.1316022258039229}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ),( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( ( ( AMS - CRS ) + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) ) - ( RRSe / MUM ) )", "obj1": 0.2283464566929134, "obj2": 0.6131735241972555}], "27": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( ( Min( MRS ,ACS ) + ( MDR / Min( Min( MRS ,FirstVNF_CPU ) ,FirstVNF_CPU_Server ) ) ),FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( MUR + ( CS / RMSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( RCSe * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "Min( Max( MDR,( MRS - ( ( Min( RRS ,BR ) * Min( AMS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( FirstVNF_Mem_Server,MDR ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( RRS - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - Min( Max( Min( RCSe ,MUR ),( ( RMSe * DS ) - ( Min( MUC ,RCSe ) * MUC ) ) ) ,CS ) ) / ( ( MUR + Min( CS ,( ( ( DS * RCSe ) + RRSe ) * MUM ) ) ) + RCSe ) ) ,Min( ( ( CS / DS ) * RCSe ) ,CS ) )", "obj1": 0.18110236220472442, "obj2": 0.682961480073937}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( ( ACS + ( PN / ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( ( ( PN * FirstVNF_RAM_Server ) - MRS ) ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( MLU + Min( MLU ,MUC ) ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( RCSe - ( MLU - MLU ) ) ) ) + Min( Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.37203058095561276}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + ( RRS * Max( ACS,RRS ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( Const * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( CS,DS ) + Min( ( ( RMSe / CS ) + Min( Max( Min( MLU ,MUC ),( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.9803149606299213, "obj2": 0.005944337803439126}, {"determining": "( ( ACS + ( PN / ( ( MRS + FirstVNF_RAM ) + ( ( ( ( ARS - FirstVNF_Mem_Server ) / BR ) + FirstVNF_CPU_Server ) / ( ARS - FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( ACS ,( FirstVNF_Mem / Max( FirstVNF_Mem,RRS ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) / ( RCSe * ( MLU + Min( MLU ,MUC ) ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( DS ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.5295275590551181, "obj2": 0.27496135508243896}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.28376313003454284}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( RMSe * MUR ) ) )", "obj1": 0.4507874015748031, "obj2": 0.344072233808852}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - MUC ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6960060201800055}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) ) / ( MDR + ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( RCSe * ( CS + ( MUC / RRSe ) ) ) + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( DS ,Min( Min( RMSe ,MUC ) ,Min( Min( RCSe ,MUM ) ,Min( ( DS / MUR ) ,MUM ) ) ) ) ) ) )", "obj1": 0.44881889763779526, "obj2": 0.36862976956025195}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - FirstVNF_CPU ) / ( MRS - ( PN * ACS ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) + ( Min( MRS ,ACS ) + ( MDR / ( MRS * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( ( RMSe - ( ( DS - MUM ) / ( CS / CS ) ) ) * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( Min( DS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.03860384199993256}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),RCSe ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.4153543307086614, "obj2": 0.38123869041875974}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / ( CS + MUR ) ) ) - Max( CS,( RRSe / RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.484261419330847}, {"determining": "( ( FirstVNF_CPU / DDR ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( MLU,MUC ) ) ,( DS - ( CS / RMSe ) ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7474469393500685}, {"determining": "Min( Min( FirstVNF_RAM ,( FirstVNF_Mem / ARS ) ) ,( ( FirstVNF_CPU + Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( Min( ( DS * Max( MUC,RMSe ) ) ,RRSe ) ,( ( ( MUM * RCSe ) + MUC ) - ( DS / RMSe ) ) ) + MUR ) ) ) - ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.4862204724409449, "obj2": 0.30112803804534505}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + Max( MRS,FirstVNF_Mem ) ) ) + ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MUR - Min( CS ,RMSe ) ),Max( ( RCSe + MLU ),DS ) ) - ( MUC + Min( RCSe ,( ( ( DS * Min( Max( CS,MLU ) ,MUM ) ) + MUC ) + Max( MLU,Max( ( ( RMSe + MLU ) * ( MUR - MUC ) ),MUC ) ) ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.08001559395473373}, {"determining": "Min( Max( Max( ( ( FirstVNF_Mem_Server / ( Max( Const,Max( FirstVNF_CPU,DDR ) ) - FirstVNF_CPU_Server ) ) / FirstVNF_CPU ),BR ),Max( ( BR + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,Min( FirstVNF_CPU ,RRS ) )", "choosing": "( MUR - Min( RMSe ,MLU ) )", "obj1": 0.21850393700787402, "obj2": 0.6190698308833169}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( ARS - RRS ) + ( ( FirstVNF_RAM_Server - ( ACS * PN ) ) + ( ( MDR + ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( MDR - FirstVNF_CPU_Server ) ) ) ) ) + ( ACS - ( FirstVNF_CPU / ( CRS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( Min( Min( ( ( MUR - MLU ) / RMSe ) ,( Min( CS ,RMSe ) * DS ) ) ,MUR ),( ( DS / DS ) * MUC ) ) - DS ) / MUC ) - Min( MUM ,( DS / Min( RCSe ,( ( ( ( MUM + MUM ) * MUC ) + ( MUR * MLU ) ) - MUC ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5491749610464604}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.6299212598425197, "obj2": 0.19335024403564363}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,( ( MLU + CS ) - CS ) ) ) ,DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.591610983980073}, {"determining": "( ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Max( ( MUR - Min( CS ,RMSe ) ),Max( ( RCSe + MLU ),DS ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7363102939874647}, {"determining": "( ( ( MDR / ( RRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( FirstVNF_RAM ,RRS ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( RCSe + ( ( ( CS - CS ) * RRSe ) - ( ( MUR * RCSe ) + ( ( MUM + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4313766119691699}, {"determining": "( Min( ( ( ( ( Min( ARS ,( FirstVNF_CPU / PN ) ) + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - FirstVNF_CPU ) ) ,( CRS * FirstVNF_RAM ) ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - DS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - Max( RCSe,RMSe ) ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44218692593476455}, {"determining": "( Max( DDR,Max( ( FirstVNF_CPU_Server - RRS ),Min( DDR ,DDR ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS * ( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( MUM * ( ( CS * ( MUR / Max( MUM,MUM ) ) ) + MLU ) ) - ( ( RMSe / CS ) - ( Max( ( CS + MUR ),( ( RMSe / MUR ) + ( RCSe - Min( MLU ,MUC ) ) ) ) - DS ) ) ) - ( MUM / RRSe ) )", "obj1": 0.31299212598425197, "obj2": 0.50890618275029}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) * ( MRS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( RRS,AMS ) ) ) ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS - MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + Max( CS,RRSe ) ) ) ,( RCSe + ( ( Max( ( MUM * ( RMSe * MUR ) ),Max( RMSe,RRSe ) ) - MLU ) + RRSe ) ) )", "obj1": 0.14566929133858267, "obj2": 0.7322765715596765}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ACS * FirstVNF_RAM ) ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( Max( MUR,RCSe ) - CS ) ) / RRSe ) * ( MUM * ( RRSe + MLU ) ) ) - ( ( RRSe + CS ) / RRSe ) )", "obj1": 0.3838582677165354, "obj2": 0.4369088979196985}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( Const * MRS ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( RRS - ( MDR * Max( ( MDR - BR ),MRS ) ) ) )", "choosing": "( ( Min( ( RMSe * ( ( MUC / DS ) / RMSe ) ) ,MLU ) - DS ) * ( ( MUR / ( RMSe + MLU ) ) / ( ( ( ( RMSe + CS ) * MUR ) * Min( ( MUC + Min( MUR ,( CS - MUC ) ) ) ,CS ) ) + ( MUR / ( ( ( MUC - DS ) / ( Max( MLU,MUR ) - RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.38947341455171647}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.11964685818433393}, {"determining": "( Min( ( ( ( MRS - ( PN * FirstVNF_Mem_Server ) ) + RRS ) * ( ACS * ( FirstVNF_CPU_Server + BR ) ) ) ,( Const * BR ) ) + ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( Min( CS ,MUR ) ,( ( DS / CS ) * MUM ) ) ) + RCSe ) ) ,( RCSe + ( MUR + RRSe ) ) )", "obj1": 0.10433070866141732, "obj2": 0.7890670135240726}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MDR / ( FirstVNF_Mem + RRS ) ) + Min( ACS ,( ( ( MDR + AMS ) / ( MRS - ( CRS * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Min( Min( RRSe ,( MLU * Max( RRSe,( Min( MUR ,MLU ) / ( RRSe / MLU ) ) ) ) ) ,RMSe ) - Max( Min( CS ,Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( MUR + Min( ( RMSe * ( ( RCSe / ( RCSe / RCSe ) ) * DS ) ) ,RMSe ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.034727541906932266}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7644544865413795}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + ( RMSe + RCSe ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.09812468685040986}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( MUM / RRSe ) - Max( RRSe,RCSe ) )", "obj1": 0.34448818897637795, "obj2": 0.47357421382479087}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( MUM * ( RRSe + MLU ) ) )", "obj1": 0.6161417322834646, "obj2": 0.2068418385810037}, {"determining": "( ( Const + RRS ) + ( Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( Min( RRS ,FirstVNF_Mem ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( Max( MUM,RCSe ) ,DS ) ) ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6308139774369845}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ),( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( ( ( AMS - CRS ) + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + Min( FirstVNF_CPU ,ARS ) ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( RRSe + MUR ),MLU ) - DS ) ) * Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) ) - ( RRSe / MUM ) )", "obj1": 0.5393700787401575, "obj2": 0.26241898138880954}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "( ( Min( Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( ARS ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) + ( ( MDR / ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( ( RMSe - DS ) / MUM ) / ( CS + MUC ) ) ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.13021455673187526}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5468639824547339}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( Min( ( ( ( ( Max( ACS,RRS ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( CRS - ( FirstVNF_RAM_Server * PN ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( Max( RCSe,( RCSe / Min( CS ,MUR ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( ( RRSe + RMSe ) ,( MUR + Min( CS ,RMSe ) ) ) + MUR ) ) ) ) )", "obj1": 0.5019685039370079, "obj2": 0.2916012233709326}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( RRSe + RMSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,MUR ) + MUR ) ) ) )", "obj1": 0.9606299212598425, "obj2": 0.012302881826450828}, {"determining": "( Min( ( ( ( ( Min( BR ,FirstVNF_Mem_Server ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( FirstVNF_RAM * ACS ) - ( ( Min( RRS ,FirstVNF_Mem ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( MLU / MUR ) / ( ( ( RRSe - RMSe ) - ( ( RMSe + MUC ) - RCSe ) ) + ( RCSe / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12338760863406784}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( Max( ( RRS / MRS ),MRS ),Max( Const,FirstVNF_Mem_Server ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( CS * MLU ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.7755905511811023, "obj2": 0.0857372415389581}, {"determining": "( ( ( MDR / ( ( ( ( Const / RRS ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,CS ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( ( RCSe - MUR ) ,MUC ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.055336840424689976}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7609682733545279}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.7831514679738307}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN + FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + FirstVNF_Mem ) ),FirstVNF_CPU ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.8070866141732284, "obj2": 0.06980603430022374}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + Min( DDR ,ARS ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24896085999147682}, {"determining": "Min( Max( Max( FirstVNF_RAM_Server,ARS ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( ACS + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( Max( RCSe,RRSe ) ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( MUR + Min( ( RCSe / ( RCSe * ( CS * RRSe ) ) ) ,DS ) ),Max( RRSe,RMSe ) ) - ( ( CS + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + ( ( ( Max( FirstVNF_CPU,MDR ) * MRS ) / ( AMS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( CS - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) + Min( ( Min( CS ,MUR ) + Max( MUR,CS ) ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5819677805874698}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( Min( ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ),FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( CS - ( Min( RCSe ,RCSe ) - ( MLU - ( MUR * CS ) ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.24803149606299213, "obj2": 0.5784259604208499}, {"determining": "( Min( Min( ( Const * Const ) ,Min( ( Const * ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) ) ,( Min( ACS ,( FirstVNF_Mem / MRS ) ) * CRS ) ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( Min( MLU ,MUC ) - CS ) * ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + ( Min( RMSe ,RMSe ) - MUM ) ) * CS ) ) )", "obj1": 0.8759842519685039, "obj2": 0.04615337185632447}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( CRS + RRS ) ) ) + Max( Max( BR,FirstVNF_Mem ),( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS + ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe + RRSe ) - Max( Min( RCSe ,( MUC * Min( ( ( Max( CS,MUR ) / DS ) + MUC ) ,CS ) ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6047291687777799}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( ( ARS - FirstVNF_Mem_Server ) / Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) + ( Const * ( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server * Const ) ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( Const * Min( RRS ,FirstVNF_CPU_Server ) ) ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + BR ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( MLU - Min( MLU ,( MLU + MUC ) ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * MUC ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4744094488188976, "obj2": 0.31684109891366574}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ACS + ACS ) + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) - Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5101464230048084}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR / ( MRS - ( PN * ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_RAM ) ) ) ) ) + ( Min( ACS ,( FirstVNF_Mem / FirstVNF_CPU ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUM * ( RRSe + MLU ) ) * ( RMSe + MUC ) )", "obj1": 0.6141732283464567, "obj2": 0.2077414559540238}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( ( ( MDR / ( MRS - ( ( Max( CRS,BR ) / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,BR ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + Max( CRS,MDR ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * Min( DS ,RRSe ) ) ) / ( ( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) + ( ( Min( ( Min( MUC ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.9960629921259843, "obj2": 0.0019355184325769968}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,MLU ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( ( MLU * ( Min( RCSe ,MUR ) - RRSe ) ) + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.471540215232367}, {"determining": "( ( ( BR + RRS ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MRS / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( ( Const / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe - ( RMSe + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUC * MUR ) ) ) + ( MUR - Min( MUR ,( ( MUR * MUM ) / ( MLU * RCSe ) ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.6476377952755905, "obj2": 0.18119046874922987}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - Max( ACS,( FirstVNF_Mem / ARS ) ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,Max( AMS,PN ) ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( RRSe + MUC ) * ( MUR - MLU ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MLU ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( ( Min( DS ,RRSe ) - ( MLU - MLU ) ) - MUR ) ) + ( RCSe * Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,MLU ) ) ) ) )", "obj1": 0.8484251968503937, "obj2": 0.05122364081498021}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( RCSe + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15551181102362205, "obj2": 0.703746664640828}, {"determining": "( Const + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( ( ( Min( RRSe ,RCSe ) + MUR ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) )", "obj1": 0.5570866141732284, "obj2": 0.25345616203822285}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) + BR ) ) ) ,( ( Max( RRS,( FirstVNF_RAM_Server + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( Max( Const,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUM + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( RMSe - Min( RMSe ,( MUM - RRSe ) ) ) - ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( Const + RRS ) + ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_Mem ,CRS ) ) ) + Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( MLU + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Max( MUC,MLU ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.1406470413594563}, {"determining": "( ( ( MDR / ( FirstVNF_Mem - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * RRS ) ) + ( ( MDR / ( MRS - ( ( ( RRS * PN ) * FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( Max( FirstVNF_RAM_Server,ARS ) - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / ( ( CS + MLU ) / DS ) ) - ( Max( ( CS + MUR ),MLU ) - RCSe ) ) - ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( ( ( MRS / ( MRS - ( BR + FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( ( ( ACS + MDR ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( RRSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( ( RCSe - MUM ) + Min( CS ,RMSe ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.031117572749772962}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN + FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( ACS + FirstVNF_Mem ) ),FirstVNF_CPU ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( ( CS - CS ) ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.8562992125984252, "obj2": 0.05058400310090096}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( ( DDR / RRS ) + ( ( Max( ARS,FirstVNF_CPU_Server ) / BR ) + ( Const * FirstVNF_Mem ) ) ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( ( ( ( MUC + MUM ) * MUC ) * RCSe ) - ( RCSe + RRSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.19291338582677164, "obj2": 0.6500921080505345}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( ( Min( CS ,RMSe ) + MUR ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.2618110236220472, "obj2": 0.5687259442383109}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( ( FirstVNF_Mem_Server + ARS ) ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) * ( ( MDR / ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( ( Const + RRS ) + ( Min( Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS / ( ( RRS / FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUM ) - ( RRSe * Max( MUR,RRSe ) ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.547244094488189, "obj2": 0.2586052860709896}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,Max( AMS,FirstVNF_RAM ) ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / MUR ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.9251968503937008, "obj2": 0.024775335962153443}, {"determining": "( ( ( MDR - ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / Max( ( Const - ( FirstVNF_RAM_Server / Max( MRS,FirstVNF_Mem ) ) ),BR ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( Max( ( DS / ( DS / ( Min( Max( RCSe,MUC ) ,RMSe ) / DS ) ) ),( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( ( CS + Min( Min( ( RMSe * MUC ) ,MUR ) ,Max( Min( MUM ,RCSe ),MLU ) ) ) ,RCSe ) ) ) - Max( ( MUR - Min( RMSe ,CS ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.45065640875264323}, {"determining": "( ( Const + ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * ( Max( ( PN / FirstVNF_RAM ),MRS ) / ACS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUR ) * RCSe ) - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.048694772409503734}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) + ( ( ARS - FirstVNF_Mem_Server ) + ( ( MDR / ( CRS - ( FirstVNF_RAM_Server * PN ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( Min( CS ,RMSe ) * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.49606299212598426, "obj2": 0.2981142467566024}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( ( ( MDR / ( MRS - ( PN * ACS ) ) ) + ( Max( ( Min( RRS ,PN ) + Min( FirstVNF_Mem ,FirstVNF_Mem ) ),RRS ) / ( Const * FirstVNF_RAM_Server ) ) ) ,FirstVNF_CPU ) ) + ( Min( FirstVNF_Mem ,ARS ) * FirstVNF_RAM ) )", "choosing": "( ( DS / CS ) * ( ( CS - CS ) / ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + ( RRSe / RCSe ) ) / CS ) ,MUR ) ) + RRSe ) ) )", "obj1": 0.6377952755905512, "obj2": 0.19134787232126743}], "28": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( ( FirstVNF_Mem_Server + ARS ) ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) * ( ( MDR / ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) + Max( CRS,( MDR + RRS ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( RCSe + ( ( ( MLU - DS ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( RCSe * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5468639824547339}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ACS + ACS ) + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) - Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5101464230048084}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "Min( Max( Max( ( ( FirstVNF_Mem_Server / ( Max( Const,Max( FirstVNF_CPU,DDR ) ) - FirstVNF_CPU_Server ) ) / FirstVNF_CPU ),BR ),Max( ( BR + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,Min( FirstVNF_CPU ,RRS ) )", "choosing": "( MUR - Min( RMSe ,MLU ) )", "obj1": 0.21850393700787402, "obj2": 0.6190698308833169}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( ( ( MDR / ( ( ( ( Const / RRS ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,CS ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( ( RCSe - MUR ) ,MUC ) ) ) )", "obj1": 0.8385826771653543, "obj2": 0.055336840424689976}, {"determining": "( ( Const + RRS ) + ( Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( Min( RRS ,FirstVNF_Mem ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( Max( MUM,RCSe ) ,DS ) ) ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6308139774369845}, {"determining": "Min( Max( MDR,( MRS - ( ( Min( RRS ,BR ) * Min( AMS ,FirstVNF_CPU_Server ) ) * FirstVNF_RAM_Server ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( FirstVNF_Mem_Server,MDR ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR / ( ( RRS - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) - Max( PN,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - Min( Max( Min( RCSe ,MUR ),( ( RMSe * DS ) - ( Min( MUC ,RCSe ) * MUC ) ) ) ,CS ) ) / ( ( MUR + Min( CS ,( ( ( DS * RCSe ) + RRSe ) * MUM ) ) ) + RCSe ) ) ,Min( ( ( CS / DS ) * RCSe ) ,CS ) )", "obj1": 0.18110236220472442, "obj2": 0.682961480073937}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( CRS + RRS ) ) ) + Max( Max( BR,FirstVNF_Mem ),( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS + ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe + RRSe ) - Max( Min( RCSe ,( MUC * Min( ( ( Max( CS,MUR ) / DS ) + MUC ) ,CS ) ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6047291687777799}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN + FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + FirstVNF_Mem ) ),FirstVNF_CPU ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.8110236220472441, "obj2": 0.06836316415958531}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - FirstVNF_CPU ) / ( MRS - ( PN * ACS ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) + ( Min( MRS ,ACS ) + ( MDR / ( MRS * ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( ( RMSe - ( ( DS - MUM ) / ( CS / CS ) ) ) * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( Min( DS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.8877952755905512, "obj2": 0.03860384199993256}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.4468503937007874, "obj2": 0.35094064797082486}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( RCSe + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15551181102362205, "obj2": 0.703746664640828}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / ( CS + MUR ) ) ) - Max( CS,( RRSe / RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.484261419330847}, {"determining": "( ( FirstVNF_CPU / DDR ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( MLU,MUC ) ) ,( DS - ( CS / RMSe ) ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7474469393500685}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + ( RRS * Max( ACS,RRS ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( Const * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( CS,DS ) + Min( ( ( RMSe / CS ) + Min( Max( Min( MLU ,MUC ),( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.9803149606299213, "obj2": 0.005944337803439126}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MDR / ( FirstVNF_Mem + CRS ) ) + Min( ACS ,( ( ( AMS + MDR ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Min( Min( RRSe ,( MLU * Max( RRSe,( Min( MLU ,MUR ) / ( RRSe / MLU ) ) ) ) ) ,RMSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.9547244094488189, "obj2": 0.015579885031742662}, {"determining": "( ( ( MDR / ( MRS - ( ( Max( CRS,BR ) / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,BR ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( MDR,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,Max( MDR,FirstVNF_RAM ) ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUC / MUR ) / ( ( Min( RCSe ,DS ) / ( CS * RRSe ) ) / Max( MUM,MLU ) ) )", "obj1": 0.9291338582677166, "obj2": 0.02327473200984737}, {"determining": "( ( ARS - RRS ) + ( ( FirstVNF_RAM_Server - ( ACS * PN ) ) + ( ( MDR + ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( MDR - FirstVNF_CPU_Server ) ) ) ) ) + ( ACS - ( FirstVNF_CPU / ( CRS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( Min( Min( ( ( MUR - MLU ) / RMSe ) ,( Min( CS ,RMSe ) * DS ) ) ,MUR ),( ( DS / DS ) * MUC ) ) - DS ) / MUC ) - Min( MUM ,( DS / Min( RCSe ,( ( ( ( MUM + MUM ) * MUC ) + ( MUR * MLU ) ) - MUC ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5491749610464604}, {"determining": "( ( ACS + ( PN / ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( ( ( PN * FirstVNF_RAM_Server ) - MRS ) ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUM + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( RMSe - Min( RMSe ,( MUM - RRSe ) ) ) - ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.4330708661417323, "obj2": 0.36806409921391436}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,( ( MLU + CS ) - CS ) ) ) ,DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.591610983980073}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( Const * MRS ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( RRS - ( MDR * Max( ( MDR - BR ),MRS ) ) ) )", "choosing": "( ( Min( ( RMSe * ( ( MUC / DS ) / RMSe ) ) ,MLU ) - DS ) * ( ( MUR / ( RMSe + MLU ) ) / ( ( ( ( RMSe + CS ) * MUR ) * Min( ( MUC + Min( MUR ,( CS - MUC ) ) ) ,CS ) ) + ( MUR / ( ( ( MUC - DS ) / ( Max( MLU,MUR ) - RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "( ( ( MDR / ( RRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( FirstVNF_RAM ,RRS ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( RCSe + ( ( ( CS - CS ) * RRSe ) - ( ( MUR * RCSe ) + ( ( MUM + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4313766119691699}, {"determining": "( Min( ( ( ( ( Min( ARS ,( FirstVNF_CPU / PN ) ) + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - FirstVNF_CPU ) ) ,( CRS * FirstVNF_RAM ) ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - DS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - Max( RCSe,RMSe ) ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44218692593476455}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,Max( FirstVNF_CPU,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( MUM - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.2703066828208323}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.6299212598425197, "obj2": 0.19335024403564363}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Max( ( MUR - Min( CS ,RMSe ) ),Max( ( RCSe + MLU ),DS ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7363102939874647}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) / DDR ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( MLU,MUC ) ) ,( CS / RMSe ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.14173228346456693, "obj2": 0.7307884182146738}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ACS * FirstVNF_RAM ) ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( Max( MUR,RCSe ) - CS ) ) / RRSe ) * ( MUM * ( RRSe + MLU ) ) ) - ( ( RRSe + CS ) / RRSe ) )", "obj1": 0.3838582677165354, "obj2": 0.4369088979196985}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.4074803149606299, "obj2": 0.38947341455171647}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ACS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / Min( ( MUC - MUC ) ,CS ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.1968503937007874, "obj2": 0.643942046204463}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ),( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( ( ( AMS - CRS ) + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / ( MDR + Min( FirstVNF_CPU ,ARS ) ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( RRSe + MUR ),MLU ) - DS ) ) * Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) ) - ( RRSe / MUM ) )", "obj1": 0.5393700787401575, "obj2": 0.26241898138880954}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "( Min( Min( ( Const * Const ) ,Min( ( Const * ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) ) ,( Min( ACS ,( FirstVNF_Mem / MRS ) ) * CRS ) ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( Min( MLU ,MUC ) - CS ) * ( ( ( RMSe - CS ) * MUR ) * ( ( MUC + ( Min( RMSe ,RMSe ) - MUM ) ) * CS ) ) )", "obj1": 0.8759842519685039, "obj2": 0.04615337185632447}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7644544865413795}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( ( FirstVNF_RAM_Server - FirstVNF_Mem ),( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( MUM / RRSe ) - Max( RRSe,RCSe ) )", "obj1": 0.34448818897637795, "obj2": 0.47357421382479087}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MDR / ( FirstVNF_Mem + RRS ) ) + Min( ACS ,( ( ( MDR + AMS ) / ( MRS - ( CRS * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Min( Min( RRSe ,( MLU * Max( RRSe,( Min( MUR ,MLU ) / ( RRSe / MLU ) ) ) ) ) ,RMSe ) - Max( Min( CS ,Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( MUR + Min( ( RMSe * ( ( RCSe / ( RCSe / RCSe ) ) * DS ) ) ,RMSe ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.034727541906932266}, {"determining": "( ( Min( Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( ARS ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) + ( ( MDR / ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( ( RMSe - DS ) / MUM ) / ( CS + MUC ) ) ) ) ) )", "obj1": 0.7165354330708661, "obj2": 0.13021455673187526}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,( ( ARS + FirstVNF_RAM ) / RRS ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( RRSe * RMSe ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.59251968503937, "obj2": 0.22565752016920113}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( RRSe + RMSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,MUR ) + MUR ) ) ) )", "obj1": 0.9606299212598425, "obj2": 0.012302881826450828}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - RRSe ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12338760863406784}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( MUM * ( RRSe + MLU ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20610863704803045}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.12007874015748031, "obj2": 0.7609682733545279}, {"determining": "( ( Const + RRS ) + ( Min( Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS / ( ( RRS / FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUM ) - ( RRSe * Max( MUR,RRSe ) ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.547244094488189, "obj2": 0.2586052860709896}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ACS * FirstVNF_RAM ) ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( ( ( Min( RRSe ,RCSe ) + MUR ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5088828937395593}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + Min( DDR ,ARS ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24896085999147682}, {"determining": "( ( Min( ( ACS / FirstVNF_RAM_Server ) ,MRS ) + RRS ) + ( Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,MRS ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( ( CS - RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RRSe + DS ) ,DS ) ) ) ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.1406470413594563}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_CPU_Server ) ) ) + ( ( MDR + RRS ) / Max( ACS,RRS ) ) ) + Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( Max( MUC,DS ) / ( DS * ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MUR - MLU ) ) ) * ( Max( RRSe,RRSe ) * MUR ) ) * ( CS + Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.18899672242647342}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + ( ( ( Max( FirstVNF_CPU,MDR ) * MRS ) / ( AMS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( CS - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) + Min( ( Min( CS ,MUR ) + Max( MUR,CS ) ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5819677805874698}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( FirstVNF_RAM_Server / BR ) + Const ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + ( ( MUM - RMSe ) / ( DS + DS ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),RCSe ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.37716421120051286}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.7831514679738307}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( MDR * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( Max( PN,DDR ) - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + ( RMSe + ( RCSe + ( RMSe / Min( MLU ,MLU ) ) ) ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0963373112740962}, {"determining": "( ( Const + ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * ( Max( ( PN / FirstVNF_RAM ),MRS ) / ACS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUR ) * RCSe ) - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.048694772409503734}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( DS / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.27777700951257267}, {"determining": "Min( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUC ) * RCSe ) - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MLU ) ,DS ) ) ) ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5767377844991165}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.515748031496063, "obj2": 0.28376313003454284}, {"determining": "( ( Const + RRS ) + ( Min( ( FirstVNF_CPU_Server + ( Min( ( ACS + ( FirstVNF_RAM / Const ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) - ( FirstVNF_CPU / ACS ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( CS - CS ) / ( RMSe * MUR ) ) - ( RRSe - RMSe ) ) + ( ( DS * ( ( DS / CS ) - RMSe ) ) / ( RMSe + ( ( CS - MUC ) + ( ( MUM - MUC ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6920344686305977}, {"determining": "( ( ACS + ( PN / ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( ( ( PN * FirstVNF_RAM_Server ) - MRS ) ,( FirstVNF_Mem / ARS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( MLU + Min( MLU ,MUC ) ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( Max( CS,DS ) * DS ) ) ) + ( MUR - ( RCSe - ( MLU - MLU ) ) ) ) + Min( Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ,( RRSe + RMSe ) ) ) ) )", "obj1": 0.4311023622047244, "obj2": 0.37203058095561276}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( Max( DDR,FirstVNF_CPU ) - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) - ( ACS + FirstVNF_RAM ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,MLU ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( ( MLU * ( Min( RCSe ,MUR ) - RRSe ) ) + ( ( CS - RCSe ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3562992125984252, "obj2": 0.471540215232367}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + RRS ) ) + FirstVNF_RAM ) + ( Const * ( ( PN * FirstVNF_RAM_Server ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( AMS * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( ( ( MUM + MUC ) - ( RRSe + MUR ) ) - Max( ( Min( ( RCSe - Max( ( RRSe / RMSe ),Max( RMSe,RRSe ) ) ) ,( ( MUR + MLU ) - ( MUM - RMSe ) ) ) + MUR ),Max( RRSe,RMSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3175385658411658}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),RCSe ) ) + ( MUR - ( RRSe - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28732279426648355}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "( ( DS - CS ) * ( ( CS - CS ) / ( RMSe * MUR ) ) )", "obj1": 0.46062992125984253, "obj2": 0.33741129968074407}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) + BR ) ) ) ,( ( Max( RRS,( FirstVNF_RAM_Server + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) + ( Max( Const,ACS ) / ACS ) ) ) ) / ( MDR + RRS ) ) + ( MDR + ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Max( RCSe,RMSe ) - Max( ( MUM + Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( RMSe - Min( RMSe ,( MUM - RRSe ) ) ) - ( RMSe - RRSe ) ) ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( Const + RRS ) + ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_Mem ,CRS ) ) ) + Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( MLU + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Max( MUC,MLU ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.1406470413594563}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( MUM * ( RRSe + MLU ) ) )", "obj1": 0.610236220472441, "obj2": 0.20948742862549416}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( MDR - FirstVNF_CPU_Server ) ) ) ) ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( ( Min( CS ,( DS / DS ) ) + MUR ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.7913385826771654, "obj2": 0.07780602653995662}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.11964685818433393}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR / ( MRS - ( PN * ( FirstVNF_RAM_Server * Max( CRS,FirstVNF_RAM ) ) ) ) ) + ( Min( ACS ,( FirstVNF_Mem / FirstVNF_CPU ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - MUC ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.6456692913385826, "obj2": 0.18359983904168636}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( DDR + RRS ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const - Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( RMSe,RCSe ) - Max( Min( MUR ,Min( CS ,RMSe ) ),( CS - Min( RCSe ,( ( MUM - Min( RMSe ,RMSe ) ) / Min( ( RRSe + Min( RMSe ,MUC ) ) ,RRSe ) ) ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.0032458989275050976}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - MUC ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6960060201800055}, {"determining": "( ( ( MDR - ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / Max( ( Const - ( FirstVNF_RAM_Server / Max( MRS,FirstVNF_Mem ) ) ),BR ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( Max( ( DS / ( DS / ( Min( Max( RCSe,MUC ) ,RMSe ) / DS ) ) ),( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( ( CS + Min( Min( ( RMSe * MUC ) ,MUR ) ,Max( Min( MUM ,RCSe ),MLU ) ) ) ,RCSe ) ) ) - Max( ( MUR - Min( RMSe ,CS ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.45065640875264323}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "( Max( DDR,Max( ( FirstVNF_CPU_Server - RRS ),Min( DDR ,DDR ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS * ( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( MUM * ( ( CS * ( MUR / Max( MUM,MUM ) ) ) + MLU ) ) - ( ( RMSe / CS ) - ( Max( ( CS + MUR ),( ( RMSe / MUR ) + ( RCSe - Min( MLU ,MUC ) ) ) ) - DS ) ) ) - ( MUM / RRSe ) )", "obj1": 0.31299212598425197, "obj2": 0.50890618275029}, {"determining": "( ( ( MDR / ( FirstVNF_Mem - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * RRS ) ) + ( ( MDR / ( MRS - ( ( ( RRS * PN ) * FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( Max( FirstVNF_RAM_Server,ARS ) - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / ( ( CS + MLU ) / DS ) ) - ( Max( ( CS + MUR ),MLU ) - RCSe ) ) - ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( ( ( MRS / ( MRS - ( BR + FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( ( ( ACS + MDR ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( RRSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( ( RCSe - MUM ) + Min( CS ,RMSe ) ) ) )", "obj1": 0.9153543307086615, "obj2": 0.031117572749772962}, {"determining": "( Min( PN ,( FirstVNF_CPU_Server - ( FirstVNF_CPU + Max( ARS,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * Max( MUC,CS ) ) ) ) ) + ( MUC + DS ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.6023622047244095, "obj2": 0.21665450750970894}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN + FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( ACS + FirstVNF_Mem ) ),FirstVNF_CPU ) ) ) ) ) + ( Min( ACS ,( FirstVNF_Mem / ARS ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( ( CS - CS ) ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.8031496062992126, "obj2": 0.07577232333247254}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - MUC ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.344072233808852}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( ( Min( CS ,RMSe ) + MUR ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.2618110236220472, "obj2": 0.5687259442383109}], "29": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( PN ,( Min( ACS ,BR ) - Max( MRS,Max( FirstVNF_CPU,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( MUM - ( ( MUM * RMSe ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( ( FirstVNF_Mem_Server + ARS ) ,CRS ),BR ) / FirstVNF_Mem_Server ) ) ) ) * ( ( MDR / ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) + Max( CRS,( MDR + RRS ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( RCSe + ( ( ( MLU - DS ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( RCSe * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem + RRS ) ) + FirstVNF_RAM ) + ( Const * ( ( PN * FirstVNF_RAM_Server ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( AMS * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( ( ( MUM + MUC ) - ( RRSe + MUR ) ) - Max( ( Min( ( RCSe - Max( ( RRSe / RMSe ),Max( RMSe,RRSe ) ) ) ,( ( MUR + MLU ) - ( MUM - RMSe ) ) ) + MUR ),Max( RRSe,RMSe ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3175385658411658}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * RRSe ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.36177657307964817}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.49803149606299213, "obj2": 0.29443177824855854}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "( ( ( ( ( ( ACS + ( Min( FirstVNF_RAM ,BR ) - CRS ) ) - ( ARS * Const ) ) * FirstVNF_Mem_Server ) + ( ARS + Max( BR,Max( MRS,FirstVNF_CPU_Server ) ) ) ) + FirstVNF_RAM ) + ( ( ( FirstVNF_RAM + ARS ) * ( AMS - FirstVNF_CPU ) ) - ( FirstVNF_Mem_Server + Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( RMSe + RMSe ) ,( ( ( Max( ( MUM * MUM ),Max( RRSe,RMSe ) ) - MLU ) + RCSe ) + RCSe ) )", "obj1": 0.11220472440944881, "obj2": 0.7831514679738307}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( ( Min( Max( ACS,MRS ) ,AMS ) / PN ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ( AMS / PN ) * Min( RRS ,CRS ) ) ) / RRS ) * AMS ) ) + ( ( Max( FirstVNF_CPU,ACS ) - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( CS / DS ) / ( ( Min( RMSe ,CS ) / ( MLU + MUC ) ) * Min( ( RMSe / ( Max( RCSe,DS ) * CS ) ) ,Max( ( ( MLU / MUC ) - DS ),MUM ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6678754394579651}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( MDR,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,Max( MDR,FirstVNF_RAM ) ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUC / MUR ) / ( ( Min( RCSe ,DS ) / ( CS * RRSe ) ) / Max( MUM,MLU ) ) )", "obj1": 0.9291338582677166, "obj2": 0.02327473200984737}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / ( CS + MUR ) ) ) - Max( CS,( RRSe / RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.484261419330847}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( RCSe + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15551181102362205, "obj2": 0.703746664640828}, {"determining": "( ( ( ( BR + FirstVNF_RAM_Server ) * ( ACS - ( FirstVNF_CPU_Server - ( AMS / FirstVNF_CPU_Server ) ) ) ) - ( Const * ( AMS / Max( FirstVNF_Mem,RRS ) ) ) ) / Min( Min( CRS ,MDR ) ,Min( Const ,Min( RRS ,( Const + RRS ) ) ) ) )", "choosing": "Min( ( Min( ( CS + RMSe ) ,MUC ) * RCSe ) ,Min( ( ( MUR * CS ) / Min( MUM ,RRSe ) ) ,( ( ( ( ( MUR + Min( RRSe ,RCSe ) ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) + RRSe ) ) )", "obj1": 0.1141732283464567, "obj2": 0.7644544865413795}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + ( RRS * Max( ACS,RRS ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( Const * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( CS,DS ) + Min( ( ( RMSe / CS ) + Min( Max( Min( MLU ,MUC ),( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.9803149606299213, "obj2": 0.005944337803439126}, {"determining": "Min( Max( Max( ( ( FirstVNF_Mem_Server / ( Max( Const,Max( FirstVNF_CPU,DDR ) ) - FirstVNF_CPU_Server ) ) / FirstVNF_CPU ),BR ),Max( ( BR + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,Min( FirstVNF_CPU ,RRS ) )", "choosing": "( MUR - Min( RMSe ,MLU ) )", "obj1": 0.21850393700787402, "obj2": 0.6190698308833169}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.4468503937007874, "obj2": 0.35094064797082486}, {"determining": "( ( ( MDR / ( MRS - ( ( Max( CRS,BR ) / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,BR ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( Const + RRS ) + ( Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( FirstVNF_Mem / ARS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( RRSe - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( MUC * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.46941147288843227}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + ( ( ( Max( FirstVNF_CPU,MDR ) * MRS ) / ( AMS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( CS - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) + Min( ( Min( CS ,MUR ) + Max( MUR,CS ) ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5819677805874698}, {"determining": "( ( ( MDR / ( RRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( FirstVNF_RAM ,RRS ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( RCSe + ( ( ( CS - CS ) * RRSe ) - ( ( MUR * RCSe ) + ( ( MUM + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4313766119691699}, {"determining": "( Min( ( ( ( ( Min( ARS ,( FirstVNF_CPU / PN ) ) + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - FirstVNF_CPU ) ) ,( CRS * FirstVNF_RAM ) ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - DS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - Max( RCSe,RMSe ) ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44218692593476455}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - MUC ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6960060201800055}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ACS * FirstVNF_RAM ) ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( Max( MUR,RCSe ) - CS ) ) / RRSe ) * ( MUM * ( RRSe + MLU ) ) ) - ( ( RRSe + CS ) / RRSe ) )", "obj1": 0.3838582677165354, "obj2": 0.4369088979196985}, {"determining": "( ( ( MDR / ( ( ( ( Const / RRS ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.84251968503937, "obj2": 0.05407560571916737}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.11880539461280394}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( ( Const + RRS ) + ( Min( ( FirstVNF_CPU_Server + ( Min( ( ACS + ( FirstVNF_RAM / Const ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) - ( FirstVNF_CPU / ACS ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( CS - CS ) / ( RMSe * MUR ) ) - ( RRSe - RMSe ) ) + ( ( DS * ( ( DS / CS ) - RMSe ) ) / ( RMSe + ( ( CS - MUC ) + ( ( MUM - MUC ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17913385826771652, "obj2": 0.6920344686305977}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( MUC * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5204655488174675}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MDR / ( FirstVNF_Mem + RRS ) ) + Min( ACS ,( ( ( MDR + AMS ) / ( MRS - ( CRS * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Min( Min( RRSe ,( MLU * Max( RRSe,( Min( MUR ,MLU ) / ( RRSe / MLU ) ) ) ) ) ,RMSe ) - Max( Min( CS ,Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( MUR + Min( ( RMSe * ( ( RCSe / ( RCSe / RCSe ) ) * DS ) ) ,RMSe ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.034727541906932266}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( CRS + RRS ) ) ) + Max( Max( BR,FirstVNF_Mem ),( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS + ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe + RRSe ) - Max( Min( RCSe ,( MUC * Min( ( ( Max( CS,MUR ) / DS ) + MUC ) ,CS ) ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6047291687777799}, {"determining": "( ( Const + ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * FirstVNF_CPU_Server ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * ( Max( MRS,FirstVNF_Mem ) + Max( ACS,( ( MDR / MDR ) / ARS ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( MDR - ( FirstVNF_Mem / FirstVNF_CPU_Server ) ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUR ) * RCSe ) - ( RCSe + RCSe ) ) - Max( Max( Max( Max( MUR,RMSe ),( RRSe + RMSe ) ),( RMSe * MUM ) ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( ( Max( ( RRSe * RRSe ),( MUC + ( MUR + MUC ) ) ) + Min( ( Min( CS ,MUM ) - MUM ) ,( CS - Min( RCSe ,MUR ) ) ) ) ,( ( RRSe * RMSe ) * MUC ) ) - Min( RRSe ,( ( CS - MUM ) + Max( RCSe,Min( ( MUR * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.6909448818897638, "obj2": 0.14455718945556878}, {"determining": "Min( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUC ) * RCSe ) - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MLU ) ,DS ) ) ) ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5767377844991165}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( MRS,Max( FirstVNF_CPU,CRS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( MUM - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,( ( MLU + CS ) - CS ) ) ) ,DS ) ) ) )", "obj1": 0.2874015748031496, "obj2": 0.5447884940418852}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( Const * MRS ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( RRS - ( MDR * Max( ( MDR - BR ),MRS ) ) ) )", "choosing": "( ( Min( ( RMSe * ( ( MUC / DS ) / RMSe ) ) ,MLU ) - DS ) * ( ( MUR / ( RMSe + MLU ) ) / ( ( ( ( RMSe + CS ) * MUR ) * Min( ( MUC + Min( MUR ,( CS - MUC ) ) ) ,CS ) ) + ( MUR / ( ( ( MUC - DS ) / ( Max( MLU,MUR ) - RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),( MRS / FirstVNF_Mem_Server ) ) ,( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / MDR ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + Max( MUR,RMSe ) ) ) * Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) ) - ( RRSe / MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6146308152411908}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + Min( DDR ,ARS ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24896085999147682}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ACS + ACS ) + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) - Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5101464230048084}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + Const ) / ARS ) ) ) + ( Min( ( Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_CPU ) / DDR ) ,( CRS + FirstVNF_RAM ) ) - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) ) / DDR ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUC ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( DS,MUC ) ) ,( CS / RMSe ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.748805514164984}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( MUM * ( RRSe + MLU ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20610863704803045}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,( RRSe + MLU ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,MUR ) + MUR ) ) ) )", "obj1": 0.8740157480314961, "obj2": 0.045353455465135556}, {"determining": "( ( Const + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5545051929292523}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) + ( ( MDR / ( ( ( PN * FirstVNF_RAM_Server ) + ( Max( ACS,MRS ) * ( ( FirstVNF_CPU + MDR ) - BR ) ) ) - ( PN * AMS ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,( DS - ( ( MUM / MLU ) + RMSe ) ) ) - Max( ( MUR + ( ( DS - CS ) * ( MUM * ( MLU + MLU ) ) ) ),( CS - Min( ( RCSe - MUR ) ,MUC ) ) ) )", "obj1": 0.8228346456692913, "obj2": 0.061934985927839054}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ACS * FirstVNF_RAM ) ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( ( ( Min( RRSe ,RCSe ) + MUR ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5088828937395593}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),RCSe ) ) + ( MUR - ( RRSe - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.41338582677165353, "obj2": 0.3832868166498653}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( ( PN * FirstVNF_RAM_Server ) - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( ( RMSe / ( ( CS + MLU ) / DS ) ) - ( Max( ( CS + MUR ),MLU ) - RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - RRSe ) - RMSe ) ) ) ) ) ) )", "obj1": 0.32677165354330706, "obj2": 0.49336755495093293}, {"determining": "( ( FirstVNF_CPU / DDR ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( MLU,MUC ) ) ,( DS - ( CS / RMSe ) ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.12401574803149606, "obj2": 0.7474469393500685}, {"determining": "( ( Const + ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * ( Max( ( PN / FirstVNF_RAM ),MRS ) / ACS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUR ) * RCSe ) - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.8661417322834646, "obj2": 0.048694772409503734}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( DS / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.27777700951257267}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,( ( MLU + CS ) - CS ) ) ) ,DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.591610983980073}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MUM - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.037155915687193335}, {"determining": "( MRS / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7389490488372694}, {"determining": "Min( Max( Max( FirstVNF_CPU,BR ),Max( ( BR + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,( FirstVNF_CPU / RRS ) )", "choosing": "( ( MUM / RRSe ) - Max( RRSe,RCSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7282900194862375}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_CPU_Server ) ) ) + ( ( MDR + RRS ) / Max( ACS,RRS ) ) ) + Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( Max( MUC,DS ) / ( DS * ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MUR - MLU ) ) ) * ( Max( RRSe,RRSe ) * MUR ) ) * ( CS + Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.18899672242647342}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN + FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + FirstVNF_Mem ) ),FirstVNF_CPU ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( MRS - ( FirstVNF_RAM_Server * PN ) ) + Max( ACS,( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - ( ( ( RMSe - DS ) / MUM ) / ( CS + MUC ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.8287401574803149, "obj2": 0.06146422393450652}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( ( Min( FirstVNF_Mem ,ACS ) + ( MDR / ( MRS - ( PN * ( FirstVNF_CPU_Server / Min( AMS ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( RMSe * MUC ) ) + Min( ( ( MLU + CS ) + ( ( CS - CS ) + MUM ) ) ,( Max( RCSe,Max( RRSe,( ( CS * CS ) * MUC ) ) ) - ( MUM + MUR ) ) ) ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.7716535433070866, "obj2": 0.09454160627742617}, {"determining": "( ( Min( ( ACS / FirstVNF_RAM_Server ) ,MRS ) + RRS ) + ( Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,MRS ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( MDR - PN ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( ( CS - RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RRSe + DS ) ,DS ) ) ) ) ) ) )", "obj1": 0.9133858267716536, "obj2": 0.028408235149683627}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( FirstVNF_RAM_Server / BR ) + Const ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + ( ( MUM - RMSe ) / ( DS + DS ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),RCSe ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.37716421120051286}, {"determining": "( ( Max( MRS,FirstVNF_Mem ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + ARS ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + ( ( MDR / ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( RCSe + ( ( ( MLU - DS ) / MUM ) / ( Min( MUC ,( MUM / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5531496062992126, "obj2": 0.25148670233817044}, {"determining": "Min( Max( Max( ( ( BR - ACS ) + ACS ),BR ),Max( ( BR + ( ( MDR / MDR ) + ( ACS * ( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,( FirstVNF_CPU / RRS ) )", "choosing": "( MUR - Max( ( Min( CS ,MUR ) + MUR ),( ( ( ( MUC + MLU ) * Max( ( MLU + RCSe ),CS ) ) / ( MUM + Min( Min( MLU ,( RCSe - RRSe ) ) ,( MUM / ( CS + MUC ) ) ) ) ) / Max( Min( RCSe ,( RRSe * RCSe ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) ) ) )", "obj1": 0.20078740157480315, "obj2": 0.6396552826436082}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + ( ( ( Max( FirstVNF_CPU,MDR ) * MRS ) / ( AMS - ( MRS * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( MRS / FirstVNF_Mem ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( PN * MRS ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( CS - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) + Min( ( Min( CS ,MUR ) + Max( MUR,CS ) ) ,Max( ( RRSe + DS ),( MUR * MUC ) ) ) ) + Min( ( Min( ( Min( MLU ,MUC ) + ( MUC * MUM ) ) ,DS ) + ( RMSe / CS ) ) ,DS ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6308139774369845}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( ( Min( CS ,RMSe ) + MUR ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( ( MDR * ( ARS - BR ) ) * PN ) ) ) ) ) + ( ( ARS + ( Const - AMS ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server / Max( ACS,ACS ) ) ) ) + ( RRS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( RCSe + ( RRSe + MUM ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( ( ( RCSe / ( RMSe / MUM ) ) + ( MUC - Max( Min( RMSe ,MUC ),MUC ) ) ) + MUR ) ) ) )", "obj1": 0.9606299212598425, "obj2": 0.012302881826450828}, {"determining": "( ( ( MDR - Const ) + ( ( MDR / ( FirstVNF_Mem + CRS ) ) + Min( ACS ,( ( ( AMS + MDR ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) * ( BR - ( MRS + AMS ) ) ) ) )", "choosing": "( Min( Min( ( MLU * Max( RRSe,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ) ,RRSe ) ,RMSe ) - Max( Max( CS,Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( ( MUC / Max( RRSe,( ( ( DS - CS ) * RCSe ) / MUR ) ) ) + MLU ) ) )", "obj1": 0.9488188976377953, "obj2": 0.017553801139551153}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.6299212598425197, "obj2": 0.19335024403564363}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ),( BR + Max( ( CRS / BR ),( PN * FirstVNF_Mem ) ) ) ) ) ,( ( Max( ( ( AMS - CRS ) + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( MDR,ACS ) / ACS ) ) ) ) / ( MDR + Min( FirstVNF_CPU ,ARS ) ) ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( ( RMSe / CS ) - ( Max( ( CS + MUR ),MLU ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) ) - ( RRSe / MUM ) )", "obj1": 0.5374015748031497, "obj2": 0.2631656972207507}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,Max( FirstVNF_CPU,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( MUM - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.2696260880438238}, {"determining": "( ( ( MDR - ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / Max( ( Const - ( FirstVNF_RAM_Server / Max( MRS,FirstVNF_Mem ) ) ),BR ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( Max( ( DS / ( DS / ( Min( Max( RCSe,MUC ) ,RMSe ) / DS ) ) ),( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( ( CS + Min( Min( ( RMSe * MUC ) ,MUR ) ,Max( Min( MUM ,RCSe ),MLU ) ) ) ,RCSe ) ) ) - Max( ( MUR - Min( RMSe ,CS ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.45065640875264323}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( DS / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5304551439825408}, {"determining": "( Max( DDR,Max( ( FirstVNF_CPU_Server - RRS ),Min( DDR ,DDR ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS * ( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( MUM * ( ( CS * ( MUR / Max( MUM,MUM ) ) ) + MLU ) ) - ( ( RMSe / CS ) - ( Max( ( CS + MUR ),( ( RMSe / MUR ) + ( RCSe - Min( MLU ,MUC ) ) ) ) - DS ) ) ) - ( MUM / RRSe ) )", "obj1": 0.31299212598425197, "obj2": 0.50890618275029}, {"determining": "( ( Const + RRS ) + ( Min( Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS / ( ( RRS / FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUM ) - ( RRSe * Max( MUR,RRSe ) ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.547244094488189, "obj2": 0.2586052860709896}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MDR / ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( CS - Min( RCSe ,( ( ( RMSe - DS ) / MUM ) / ( CS + MUC ) ) ) ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,MUR ) + MUR ) ) ) )", "obj1": 0.7992125984251969, "obj2": 0.07596026539360722}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12338760863406784}, {"determining": "( ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Max( ( MUR - Min( CS ,RMSe ) ),Max( ( RCSe + MLU ),DS ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7363102939874647}, {"determining": "( ( Const + RRS ) + ( Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( Min( RRS ,FirstVNF_Mem ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( Max( MUM,RCSe ) ,DS ) ) ) ) ) ) )", "obj1": 0.20669291338582677, "obj2": 0.6308139774369845}, {"determining": "( ( ARS - RRS ) + ( ( FirstVNF_RAM_Server - ( ACS * PN ) ) + ( ( MDR + ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( MDR - FirstVNF_CPU_Server ) ) ) ) ) + ( ACS - ( FirstVNF_CPU / ( CRS + FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( Max( Min( Min( ( ( MUR - MLU ) / RMSe ) ,( Min( CS ,RMSe ) * DS ) ) ,MUR ),( ( DS / DS ) * MUC ) ) - DS ) / MUC ) - Min( MUM ,( DS / Min( RCSe ,( ( ( ( MUM + MUM ) * MUC ) + ( MUR * MLU ) ) - MUC ) ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.5491749610464604}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,DDR ) * RRS ) ) ,( ( ( FirstVNF_RAM_Server / BR ) + Const ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + ( ( MUM - RMSe ) / ( DS + DS ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.4035433070866142, "obj2": 0.39318236600794504}, {"determining": "( ( Const + RRS ) + ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( FirstVNF_Mem ,CRS ) ) ) + Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( MLU + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Max( MUC,MLU ) ) ) )", "obj1": 0.6968503937007874, "obj2": 0.1406470413594563}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( MDR * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( Max( PN,DDR ) - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + ( RMSe + ( RCSe + ( RMSe / Min( MLU ,MLU ) ) ) ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.7677165354330708, "obj2": 0.0963373112740962}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - RRSe ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) / Min( ACS ,BR ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUR ) * RCSe ) - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6465801461071069}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_Mem / ( MRS - FirstVNF_Mem_Server ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,( Const + ( FirstVNF_Mem_Server / BR ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( CS / Min( RMSe ,( MUR - CS ) ) ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - Max( ( RMSe + Max( DS,Max( DS,MLU ) ) ),Min( MUC ,( ( MUM * RCSe ) * MUC ) ) ) ) + ( MLU + ( RMSe * Max( ( ( RRSe / MUR ) + MUC ),MUC ) ) ) ) ) )", "obj1": 0.45866141732283466, "obj2": 0.3378528605335687}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.5059055118110236, "obj2": 0.28731162464379767}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ACS,MRS ) ) - Max( MRS,Max( FirstVNF_CPU,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( MUM - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.5255905511811023, "obj2": 0.2703066828208323}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( DS / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.2933070866141732, "obj2": 0.5304551439825408}], "30": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( PN ,( Min( ACS ,BR ) - Max( MRS,Max( FirstVNF_CPU,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( Min( ACS ,BR ) - Max( MRS,Max( FirstVNF_CPU,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( CS * ( MUM - ( ( MUM * RMSe ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( RCSe * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( MRS / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7622006914626337}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * RRSe ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.36177657307964817}, {"determining": "( ( Const + RRS ) + ( MDR + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( DS / MUR ) / MUR ) - DS ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.4468503937007874, "obj2": 0.35002184309236556}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( PN * FirstVNF_RAM_Server ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,Max( Max( FirstVNF_CPU,BR ),Max( ( BR + ( ( MDR / MDR ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) )", "choosing": "( Min( RCSe ,( Max( RCSe,Max( ( MUR * ( Min( RRSe ,RRSe ) + ( MUM - CS ) ) ),Max( MUC,( CS - RRSe ) ) ) ) / Max( Min( RCSe ,( RRSe * RCSe ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * RRSe ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.31016655814338806}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( MUM * ( RRSe + MLU ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20610863704803045}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MUM - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.037155915687193335}, {"determining": "( ( ( MDR - Const ) + ( ( MDR / ( FirstVNF_Mem + CRS ) ) + Min( ACS ,( ( ( AMS + MDR ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) * ( BR - ( MRS + AMS ) ) ) ) )", "choosing": "( Min( Min( ( MLU * Max( RRSe,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ) ,RRSe ) ,RMSe ) - Max( Max( CS,Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( ( MUC / Max( RRSe,( ( ( DS - CS ) * RCSe ) / MUR ) ) ) + MLU ) ) )", "obj1": 0.9488188976377953, "obj2": 0.017553801139551153}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.49803149606299213, "obj2": 0.29443177824855854}, {"determining": "( ( ( MDR / ( MRS - ( ( Max( CRS,BR ) / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,BR ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( Const + RRS ) + ( Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( FirstVNF_Mem / ARS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( RRSe - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( MUC * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.46941147288843227}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) * DS ) )", "obj1": 0.17519685039370078, "obj2": 0.6739962138956046}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + ( ( ( Max( FirstVNF_CPU,MDR ) * MRS ) / ( AMS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( CS - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) + Min( ( Min( CS ,MUR ) + Max( MUR,CS ) ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5819677805874698}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,( RRSe + MLU ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,MUR ) + MUR ) ) ) )", "obj1": 0.8740157480314961, "obj2": 0.045353455465135556}, {"determining": "( ( ( MDR / ( RRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( FirstVNF_RAM ,RRS ) / ( ( MDR / ( ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( RCSe + ( ( ( CS - CS ) * RRSe ) - ( ( MUR * RCSe ) + ( ( MUM + RMSe ) - RCSe ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.4313766119691699}, {"determining": "( Min( ( ( ( ( Min( ARS ,( FirstVNF_CPU / PN ) ) + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - FirstVNF_CPU ) ) ,( CRS * FirstVNF_RAM ) ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - DS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - Max( RCSe,RMSe ) ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44218692593476455}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( MDR,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,Max( MDR,FirstVNF_RAM ) ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUC / MUR ) / ( ( Min( RCSe ,DS ) / ( CS * RRSe ) ) / Max( MUM,MLU ) ) )", "obj1": 0.9291338582677166, "obj2": 0.02327473200984737}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "Min( Max( Max( FirstVNF_CPU,BR ),Max( ( BR + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,( FirstVNF_CPU / RRS ) )", "choosing": "( ( MUM / RRSe ) - Max( RRSe,RCSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7282900194862375}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ACS * FirstVNF_RAM ) ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( Max( MUR,RCSe ) - CS ) ) / RRSe ) * ( MUM * ( RRSe + MLU ) ) ) - ( ( RRSe + CS ) / RRSe ) )", "obj1": 0.3838582677165354, "obj2": 0.4369088979196985}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( RCSe,( RCSe / ( CS + MUR ) ) ) - Max( CS,( RRSe / RRSe ) ) )", "obj1": 0.33858267716535434, "obj2": 0.484261419330847}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( MDR / ( MRS - ( RRS * FirstVNF_RAM_Server ) ) ) * Min( ( FirstVNF_CPU - MRS ) ,Min( ( MRS - MDR ) ,Min( AMS ,MRS ) ) ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ,( ( AMS - ACS ) + FirstVNF_CPU ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) * Min( MUR ,RCSe ) ) ,( Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) + ( RRSe + ( ( ( ( MUC + ( RCSe / RRSe ) ) - CS ) / ( ( DS + ( MUC / CS ) ) / MLU ) ) * Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10804525058498252}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7263779527559056, "obj2": 0.12338760863406784}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.734251968503937, "obj2": 0.11880539461280394}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * ACS ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( ( Min( CS ,( MUM / RRSe ) ) + MUR ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6594488188976378, "obj2": 0.1742258937060641}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( MUC * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5204655488174675}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( RCSe + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15551181102362205, "obj2": 0.703746664640828}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( DS - CS ) * ( MUM * ( RRSe + MLU ) ) )", "obj1": 0.6181102362204725, "obj2": 0.20610863704803045}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.6299212598425197, "obj2": 0.19335024403564363}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( DS / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.27777700951257267}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( MDR / ( MRS - ( PN + FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( AMS ,AMS ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( MRS - ( FirstVNF_RAM_Server * PN ) ) + Max( ACS,( ARS / FirstVNF_Mem ) ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( ( Max( RMSe,MUC ) + ( ( MUM - ( Min( DS ,MUM ) - MUR ) ) * CS ) ) - ( RRSe + RMSe ) )", "obj1": 0.8149606299212598, "obj2": 0.06996524187026616}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - MUC ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6960060201800055}, {"determining": "Min( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) ,Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUC ) * RCSe ) - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MLU ) ,DS ) ) ) ) ) ) )", "obj1": 0.25984251968503935, "obj2": 0.5767377844991165}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( ( ( ( ( MDR + RRS ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_RAM / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - ( AMS - FirstVNF_RAM ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RRSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( MUR - CS ) ) * DS ) )", "obj1": 0.21850393700787402, "obj2": 0.6146391034192205}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + ( RRS * Max( ACS,RRS ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( Const * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( CS,DS ) + Min( ( ( RMSe / CS ) + Min( Max( Min( MLU ,MUC ),( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.9803149606299213, "obj2": 0.005944337803439126}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( CRS + RRS ) ) ) + Max( Max( BR,FirstVNF_Mem ),( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS + ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe + RRSe ) - Max( Min( RCSe ,( MUC * Min( ( ( Max( CS,MUR ) / DS ) + MUC ) ,CS ) ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6047291687777799}, {"determining": "( ( ( MDR / ( MRS - ( PN * ( AMS * FirstVNF_CPU_Server ) ) ) ) / Min( MRS ,ACS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * PN ) ) + ( Max( MRS,( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) * MRS ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( CS * CS ) - ( ( Min( CS ,RMSe ) + MUR ) / ( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) * Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.7125984251968503, "obj2": 0.13066155853069014}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( Const * MRS ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( RRS - ( MDR * Max( ( MDR - BR ),MRS ) ) ) )", "choosing": "( ( Min( ( RMSe * ( ( MUC / DS ) / RMSe ) ) ,MLU ) - DS ) * ( ( MUR / ( RMSe + MLU ) ) / ( ( ( ( RMSe + CS ) * MUR ) * Min( ( MUC + Min( MUR ,( CS - MUC ) ) ) ,CS ) ) + ( MUR / ( ( ( MUC - DS ) / ( Max( MLU,MUR ) - RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "( ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Max( ( MUR - Min( CS ,RMSe ) ),Max( ( RCSe + MLU ),DS ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7363102939874647}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) + RRS ) + ( Max( ( DDR + DDR ),FirstVNF_Mem_Server ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_RAM_Server * PN ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( DS ,( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ),RMSe ) - Max( Max( ( RRSe + ( MUM * CS ) ),Min( RMSe ,( MUM / RMSe ) ) ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( DS / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.29133858267716534, "obj2": 0.529005986380187}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR - Const ) + ( ( MDR / ( FirstVNF_Mem + RRS ) ) + Min( ACS ,( ( ( MDR + AMS ) / ( MRS - ( CRS * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Min( Min( RRSe ,( MLU * Max( RRSe,( Min( MUR ,MLU ) / ( RRSe / MLU ) ) ) ) ) ,RMSe ) - Max( Min( CS ,Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( MUR + Min( ( RMSe * ( ( RCSe / ( RCSe / RCSe ) ) * DS ) ) ,RMSe ) ) ) )", "obj1": 0.90748031496063, "obj2": 0.034727541906932266}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( ACS + ACS ) + ( ( ( MRS - ( PN * FirstVNF_RAM_Server ) ) / MDR ) - Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( DS ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5101464230048084}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ACS * FirstVNF_RAM ) ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( DS - CS ) * ( ( ( ( Min( RRSe ,RCSe ) + MUR ) / MLU ) / Min( MUR ,RMSe ) ) * Max( ( ( ( MUM + RRSe ) * MUC ) - MLU ),Min( RMSe ,( MUM * ( MLU / MUR ) ) ) ) ) )", "obj1": 0.3228346456692913, "obj2": 0.5088828937395593}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,CS ) - ( Min( CS ,MUR ) + MUR ) )", "obj1": 0.8562992125984252, "obj2": 0.053029582175220406}, {"determining": "( ( ( ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + Const ) / ARS ) ) ) + ( Min( ( Max( Max( FirstVNF_CPU_Server,MRS ),FirstVNF_CPU ) / DDR ) ,( CRS + FirstVNF_RAM ) ) - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) ) / DDR ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUC ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( DS,MUC ) ) ,( CS / RMSe ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.748805514164984}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MLU * MUM ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07952973124595107}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( RRSe + RMSe ) ) - ( ( ( MUM * ( CS + ( RMSe + RCSe ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.009958754700225992}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( RRS ,FirstVNF_RAM ) / ( ( MDR / ( ( Const * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ( FirstVNF_CPU - ( ARS * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( MUC * ( CS + MUC ) ) ) / ( ( RRSe + ( RMSe * DS ) ) + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5728865491109099}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( FirstVNF_CPU - ( RRS * FirstVNF_CPU_Server ) ) ) + BR ) + FirstVNF_RAM ) + ( FirstVNF_CPU_Server - ( Min( ( ( AMS - ACS ) + FirstVNF_CPU ) ,( ( Const * Const ) * ( MRS * ( FirstVNF_RAM - FirstVNF_RAM_Server ) ) ) ) + ( AMS * ( PN / FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( MLU + RRSe ) ) ) - Min( ( MUR + ( CS / RMSe ) ) ,( CS - ( Min( ( Max( MUR,MUC ) - CS ) ,MUR ) + MUR ) ) ) )", "obj1": 0.9921259842519685, "obj2": 0.0032458989275050976}, {"determining": "( ( Const + RRS ) + ( Min( Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS / ( ( RRS / FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUM ) - ( RRSe * Max( MUR,RRSe ) ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.547244094488189, "obj2": 0.2586052860709896}, {"determining": "( ( Const + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Min( Min( RRSe ,( MLU * Max( RRSe,( Min( MLU ,MUR ) / ( RRSe / MLU ) ) ) ) ) ,RMSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.542619824235921}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( MRS / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.13188976377952755, "obj2": 0.7389490488372694}, {"determining": "( ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( ( MUR * CS ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.1220472440944882, "obj2": 0.7464714388696823}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( RCSe + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.16338582677165353, "obj2": 0.6972429941965931}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( MUM / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.28584127822197686}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,( ( MLU + CS ) - CS ) ) ) ,DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.591610983980073}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_CPU_Server ) ) ) + ( ( MDR + RRS ) / Max( ACS,RRS ) ) ) + Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( Max( MUC,DS ) / ( DS * ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MUR - MLU ) ) ) * ( Max( RRSe,RRSe ) * MUR ) ) * ( CS + Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.18899672242647342}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + ( RMSe + RCSe ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.09731895192091515}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( ( Const + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( FirstVNF_CPU - MRS ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) * ( MUM * ( RRSe + MLU ) ) ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6289158403795005}, {"determining": "( ( ( MDR / ( ( ( ( Const / RRS ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.84251968503937, "obj2": 0.05407560571916737}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( BR - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( DS / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,MLU ) ) ) ) ) ) )", "obj1": 0.2854330708661417, "obj2": 0.5366497087613121}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),( MRS / FirstVNF_Mem_Server ) ) ,( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / MDR ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( CS + Max( MUR,RMSe ) ) ) * Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) ) - ( RRSe / MUM ) )", "obj1": 0.23031496062992127, "obj2": 0.6146308152411908}, {"determining": "( ( Min( Max( ACS,MRS ) ,AMS ) / PN ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ( AMS / PN ) * Min( RRS ,CRS ) ) ) / RRS ) * AMS ) ) + ( ( Max( FirstVNF_CPU,ACS ) - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( CS / DS ) / ( ( Min( RMSe ,CS ) / ( MLU + MUC ) ) * Min( ( RMSe / ( Max( RCSe,DS ) * CS ) ) ,Max( ( ( MLU / MUC ) - DS ),MUM ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6678754394579651}, {"determining": "( ( Const + ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * ( FirstVNF_Mem_Server * ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) ) - FirstVNF_CPU_Server ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) ) + ( ( FirstVNF_RAM - ( ( BR + FirstVNF_RAM_Server ) * DDR ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUR ) * RCSe ) - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,RMSe ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( ( ( MLU / MUM ) / RCSe ) ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Min( RCSe ,RCSe ) ) ) ) ) )", "obj1": 0.8011811023622047, "obj2": 0.07149789557620523}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - RRSe ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.49269116034015276}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,Max( AMS,FirstVNF_RAM ) ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( RCSe + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.9232283464566929, "obj2": 0.027344074148012657}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,( ( FirstVNF_RAM_Server / BR ) + Const ) ) + FirstVNF_CPU_Server )", "choosing": "( ( CS / Min( RMSe ,( MUR - CS ) ) ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - MUC ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.45866141732283466, "obj2": 0.3378528605335687}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - RRSe ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3248031496062992, "obj2": 0.49462429570606675}, {"determining": "( Min( PN ,( Min( ACS ,Min( ACS ,( FirstVNF_Mem / ARS ) ) ) - Max( MRS,Max( FirstVNF_CPU,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( Max( CS,MUM ) - Max( RCSe,( ( MUC + DS ) + ( Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) * ( MUM - ( ( MUM * RMSe ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) ) ) ) )", "obj1": 0.5649606299212598, "obj2": 0.24634920160554225}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( PN * FirstVNF_RAM_Server ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * RRSe ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.47244094488188976, "obj2": 0.3175385658411658}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_Mem / ( MRS - FirstVNF_Mem_Server ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,( Const + ( FirstVNF_Mem_Server / BR ) ) ) + FirstVNF_CPU_Server )", "choosing": "( ( CS / Min( RMSe ,( MUR - CS ) ) ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - Max( ( RMSe + Max( DS,Max( DS,MLU ) ) ),Min( MUC ,( ( MUM * RCSe ) * MUC ) ) ) ) + ( MLU + ( RMSe * Max( ( ( RRSe / MUR ) + MUC ),MUC ) ) ) ) ) )", "obj1": 0.45866141732283466, "obj2": 0.3378528605335687}, {"determining": "( ( ( MDR - ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / Max( ( Const - ( FirstVNF_RAM_Server / Max( MRS,FirstVNF_Mem ) ) ),BR ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( Max( ( DS / ( DS / ( Min( Max( RCSe,MUC ) ,RMSe ) / DS ) ) ),( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( ( CS + Min( Min( ( RMSe * MUC ) ,MUR ) ,Max( Min( MUM ,RCSe ),MLU ) ) ) ,RCSe ) ) ) - Max( ( MUR - Min( RMSe ,CS ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.45065640875264323}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( ( RMSe / CS ) - ( ( Min( CS ,RMSe ) + MUR ) - DS ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6515748031496063, "obj2": 0.17986795857792723}, {"determining": "( Max( DDR,Max( ( FirstVNF_CPU_Server - RRS ),Min( DDR ,DDR ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS * ( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( MUM * ( ( CS * ( MUR / Max( MUM,MUM ) ) ) + MLU ) ) - ( ( RMSe / CS ) - ( Max( ( CS + MUR ),( ( RMSe / MUR ) + ( RCSe - Min( MLU ,MUC ) ) ) ) - DS ) ) ) - ( MUM / RRSe ) )", "obj1": 0.31299212598425197, "obj2": 0.50890618275029}, {"determining": "( ( Const + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.2795275590551181, "obj2": 0.5545051929292523}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( FirstVNF_RAM_Server / BR ) + Const ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + ( ( MUM - RMSe ) / ( DS + DS ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),RCSe ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.37716421120051286}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,DDR ) * RRS ) ) ,( ( ( FirstVNF_RAM_Server / BR ) + Const ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + ( ( MUM - RMSe ) / ( DS + DS ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.4035433070866142, "obj2": 0.39318236600794504}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + Max( ACS,RRS ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( PN * MRS ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( CS - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) + Min( ( Min( CS ,MUR ) + Max( MUR,CS ) ) ,Max( ( RRSe + DS ),( MUR * MUC ) ) ) ) + Min( ( Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) + ( RMSe / CS ) ) ,DS ) ) ) )", "obj1": 0.18700787401574803, "obj2": 0.6502363278435757}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + ( ( ( Max( FirstVNF_CPU,MDR ) * MRS ) / ( AMS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ACS ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,( MUR - CS ) ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.19488188976377951, "obj2": 0.6449406533673235}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + Min( DDR ,ARS ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24896085999147682}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),( MRS / Max( MDR,BR ) ) ) ,( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / MDR ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUC ) - ( CS + Max( MUR,RMSe ) ) ) * Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) ) - ( RRSe / MUM ) )", "obj1": 0.2736220472440945, "obj2": 0.558140248950586}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * ( BR / AMS ) ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) + ( ( MDR / ( ( ( PN * FirstVNF_RAM_Server ) + ( Max( ACS,MRS ) + ( ( FirstVNF_CPU + MDR ) - BR ) ) ) - ( PN * AMS ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,( DS - ( ( MUM / MLU ) + RMSe ) ) ) - Max( ( MUR + ( ( DS - CS ) * ( MUM * ( MLU + MLU ) ) ) ),( CS - Max( Min( MUM ,( Min( MUC ,( MUR * MUM ) ) + MUC ) ),( ( ( MUM + RRSe ) * ( MLU + DS ) ) - MUC ) ) ) ) )", "obj1": 0.8287401574803149, "obj2": 0.05969293061167491}], "31": [{"determining": "( ( Max( ARS,AMS ) + CRS ) * ( ( ( ( ( MRS - FirstVNF_Mem_Server ) - Min( ( Const * BR ) ,RRS ) ) * BR ) + ( RRS / FirstVNF_CPU_Server ) ) / ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) ) )", "choosing": "( Max( MUC,DS ) / Max( Min( Max( RRSe,Max( DS,CS ) ) ,DS ),RMSe ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,( Min( ACS ,BR ) - Max( MRS,Max( FirstVNF_CPU,CRS ) ) ) ) + ( PN - MDR ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( RCSe * ( CS + RRSe ) ) * DS ) )", "obj1": 0.08070866141732283, "obj2": 0.8604738786301989}, {"determining": "( Min( Min( CRS ,RRS ) ,Min( Const ,Min( FirstVNF_RAM ,( Max( MDR,FirstVNF_RAM ) / ( ( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) + MDR ) ) ) ) ) / Min( ( ( PN * DDR ) * ( ACS * ( FirstVNF_CPU_Server + AMS ) ) ) ,( Const * BR ) ) )", "choosing": "Min( Max( RCSe,( ( MUM * DS ) * DS ) ) ,( MUR / ( MLU / ( DS * RRSe ) ) ) )", "obj1": 0.0984251968503937, "obj2": 0.8001107577873521}, {"determining": "( MRS / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( Min( CS ,MUR ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.11220472440944881, "obj2": 0.7622006914626337}, {"determining": "( ( MDR - PN ) + ( PN * ( ( ( ( FirstVNF_RAM_Server / BR ) + Const ) - DDR ) + Const ) ) )", "choosing": "( ( ( MUM - RMSe ) / ( DS + DS ) ) / Min( RRSe ,( ( MLU + MUC ) * ( CS / Min( RMSe ,( MUR - CS ) ) ) ) ) )", "obj1": 0.5826771653543307, "obj2": 0.22623235818453308}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "Min( ( Max( Max( ( Min( MUM ,( MUR * MUR ) ) / RRSe ),RMSe ),RCSe ) / ( MUR + RCSe ) ) ,( Min( ( ( ( RMSe + MUC ) - ( DS / MUR ) ) / ( ( MUR + Min( CS ,RMSe ) ) + RCSe ) ) ,( RCSe + ( ( Max( ( RCSe * RCSe ),Max( RRSe,RMSe ) ) - MLU ) + RRSe ) ) ) + ( ( ( ( ( DS + MUR ) / ( DS / CS ) ) / Max( CS,( MUC + ( RCSe / RRSe ) ) ) ) * Max( RMSe,Min( ( ( MUR * RMSe ) * ( RRSe * MLU ) ) ,CS ) ) ) + RRSe ) ) )", "obj1": 0.7106299212598425, "obj2": 0.13711435659416335}, {"determining": "( Max( Min( MRS ,ACS ),Max( ( PN - DDR ),( ( BR * ( FirstVNF_Mem_Server * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server * CRS ) ) ) ) * FirstVNF_Mem_Server ) ) ) * ( ( ( RRS / FirstVNF_CPU_Server ) + ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) / BR ) ) / ( ( FirstVNF_RAM - FirstVNF_Mem ) - Max( BR,FirstVNF_Mem_Server ) ) ) )", "choosing": "( Max( ( DS + Min( MUM ,( MUC + Max( MLU,Min( Min( RMSe ,RRSe ) ,RMSe ) ) ) ) ),RCSe ) / ( ( Min( Min( ( ( ( DS - RRSe ) + MUR ) - MLU ) ,MUC ) ,( CS * MLU ) ) * RCSe ) * DS ) )", "obj1": 0.09645669291338582, "obj2": 0.8421155063260549}, {"determining": "( ( Const + RRS ) + ( Min( Max( MRS,( Min( ( AMS * ACS ) ,MRS ) * FirstVNF_CPU ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS / ( ( RRS / FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( DS - MUM ) - ( RRSe * Max( MUR,RRSe ) ) ) * ( MUM * ( RRSe + MLU ) ) ) - ( MUC / RRSe ) )", "obj1": 0.547244094488189, "obj2": 0.2586052860709896}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ACS * FirstVNF_RAM ) ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Const ) ) ) ) ) )", "choosing": "( ( ( ( RCSe + ( Max( MUR,RCSe ) - CS ) ) / RRSe ) * ( MUM * ( RRSe + MLU ) ) ) - ( ( RRSe + CS ) / RRSe ) )", "obj1": 0.3838582677165354, "obj2": 0.4369088979196985}, {"determining": "( ( ( FirstVNF_CPU - PN ) * Min( Min( ( ( FirstVNF_CPU + PN ) / ( FirstVNF_Mem_Server * ( AMS * ( FirstVNF_CPU - BR ) ) ) ) ,ACS ) ,PN ) ) + ( ( ( ARS + ( PN + Max( ( ( DDR * MRS ) - RRS ),( FirstVNF_Mem_Server / Const ) ) ) ) * ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM ) ) ) + Max( Max( ACS,RRS ),( MDR + RRS ) ) ) )", "choosing": "( ( Max( RRSe,DS ) - MLU ) - ( Max( ( DS - Min( MUM ,MUC ) ),RRSe ) + Min( MUR ,Max( MUM,DS ) ) ) )", "obj1": 0.6791338582677166, "obj2": 0.15256658550188168}, {"determining": "( ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( CS ,( MUC * ( RRSe * RMSe ) ) ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( MUM / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.5275590551181102, "obj2": 0.2695833896374536}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) * DS ) )", "obj1": 0.6062992125984252, "obj2": 0.21258873291398836}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.6299212598425197, "obj2": 0.19335024403564363}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( ( FirstVNF_Mem_Server / PN ) * FirstVNF_RAM_Server ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) + ( ( MDR / ( ( ( PN * FirstVNF_RAM_Server ) + ( Max( ACS,MRS ) + ( ( FirstVNF_CPU + MDR ) - BR ) ) ) - ( PN * AMS ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,( DS - ( ( MUM / MLU ) + RMSe ) ) ) - Max( ( MUR + RCSe ),( CS - Max( Min( MUM ,( Min( MUC ,( MUR * MUM ) ) + MUC ) ),( ( ( MUM + RRSe ) * ( MLU + DS ) ) - MUC ) ) ) ) )", "obj1": 0.6082677165354331, "obj2": 0.20567918256516582}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,DDR ) * RRS ) ) ,( ( ( FirstVNF_RAM_Server / BR ) + Const ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + ( ( MUM - RMSe ) / ( DS + DS ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.4035433070866142, "obj2": 0.39318236600794504}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.9035433070866141, "obj2": 0.0335163380993269}, {"determining": "( ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,CS ) - ( Min( CS ,MUR ) + MUR ) )", "obj1": 0.8562992125984252, "obj2": 0.0530295821752204}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Min( RCSe ,( Max( DS,Min( Max( ( CS / MLU ),CS ) ,RCSe ) ) / ( Min( Min( ( CS * Max( MUC,CS ) ) ,RRSe ) ,DS ) + MUR ) ) ) - ( Max( ( MUM * MUC ),Max( RRSe,RMSe ) ) - ( MUC - ( RRSe + MUR ) ) ) )", "obj1": 0.5669291338582677, "obj2": 0.237347263794165}, {"determining": "( ( ( MDR / ( ( PN * ACS ) - MRS ) ) + ( Max( ACS,RRS ) / Min( MDR ,MDR ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( ( PN + PN ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( DDR + DDR ) ),FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) * DS ) )", "obj1": 0.17519685039370078, "obj2": 0.6739962138956046}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS * CRS ) ) + ( DDR * MRS ) )", "choosing": "Min( ( ( ( ( RMSe + MUC ) + RCSe ) - ( MUR / DS ) ) / ( ( DS / ( MUR / Min( ( MUC - MUC ) ,CS ) ) ) + RCSe ) ) ,( MUC + ( ( MLU * DS ) + RRSe ) ) )", "obj1": 0.6712598425196851, "obj2": 0.166454566742216}, {"determining": "( Min( ( ( ( ( FirstVNF_CPU + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( ( ACS * FirstVNF_RAM ) - ( ( Min( RRS ,BR ) * ( FirstVNF_Mem_Server * ACS ) ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - RRSe ) - RMSe ) ) ) ) ) ) )", "obj1": 0.3346456692913386, "obj2": 0.49269116034015276}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ACS ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( BR - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( MUM + MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,MLU ) ) ) ) ) ) )", "obj1": 0.3188976377952756, "obj2": 0.49460431669493277}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,( ( MLU + CS ) - CS ) ) ) ,DS ) ) ) )", "obj1": 0.23622047244094488, "obj2": 0.591610983980073}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( FirstVNF_RAM_Server / BR ) + Const ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + ( ( MUM - RMSe ) / ( DS + DS ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),RCSe ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.41929133858267714, "obj2": 0.37716421120051286}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_RAM - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - Max( ( MUR * CS ),Min( RCSe ,RRSe ) ) ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( DS / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,MLU ) ) ) ) ) ) )", "obj1": 0.3937007874015748, "obj2": 0.41538384168234405}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( ( MUM * ( CS + ( RMSe + RCSe ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.7637795275590551, "obj2": 0.09731895192091515}, {"determining": "( Min( ( ( ( ( Min( ARS ,( FirstVNF_CPU / PN ) ) + ( FirstVNF_CPU / Min( Const ,ACS ) ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( MRS - FirstVNF_CPU ) ) ,( CRS * FirstVNF_RAM ) ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU + CS ) - CS ) + Min( ( ( RCSe + MLU ) / ( CS - RCSe ) ) ,MUR ) ) - CS ) * ( ( CS - CS ) / ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - DS ) ) ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - Max( RCSe,RMSe ) ) - ( RMSe - RMSe ) ) ) ) ) ) )", "obj1": 0.3700787401574803, "obj2": 0.44218692593476455}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( MDR,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,Max( MDR,FirstVNF_RAM ) ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUC / MUR ) / ( ( Min( RCSe ,DS ) / ( CS * RRSe ) ) / Max( MUM,MLU ) ) )", "obj1": 0.9291338582677166, "obj2": 0.02327473200984737}, {"determining": "Min( Max( Max( FirstVNF_CPU,BR ),Max( ( BR + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) ,( FirstVNF_CPU / RRS ) )", "choosing": "( ( MUM / RRSe ) - Max( RRSe,RCSe ) )", "obj1": 0.14960629921259844, "obj2": 0.7282900194862375}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( ( RCSe / ( RCSe * ( CS + ( Min( MLU ,MLU ) - Min( Min( Min( RCSe ,RMSe ) ,Max( CS,DS ) ) ,( RRSe / RCSe ) ) ) ) ) ) / ( MUC + Min( MUC ,( ( DS / ( ( DS * RMSe ) + Min( DS ,DS ) ) ) + DS ) ) ) )", "obj1": 0.35826771653543305, "obj2": 0.4649975992307202}, {"determining": "( ( Max( FirstVNF_CPU_Server,AMS ) * Min( FirstVNF_Mem_Server ,MDR ) ) * ( ( ( FirstVNF_CPU_Server * MRS ) - MDR ) / ( ( ACS - FirstVNF_Mem ) - ( Const - BR ) ) ) )", "choosing": "( ( DS * DS ) / Max( ( RMSe / ( Max( MUC,MUC ) + MUM ) ),RMSe ) )", "obj1": 0.09251968503937008, "obj2": 0.8454595421917003}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( MUC * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.297244094488189, "obj2": 0.5204655488174675}, {"determining": "( ( Min( Max( ACS,MRS ) ,AMS ) / PN ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ( AMS / PN ) * Min( RRS ,CRS ) ) ) / RRS ) * AMS ) ) + ( ( Max( FirstVNF_CPU,ACS ) - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( CS / DS ) / ( ( Min( RMSe ,CS ) / ( MLU + MUC ) ) * Min( ( RMSe / ( Max( RCSe,DS ) * CS ) ) ,Max( ( ( MLU / MUC ) - DS ),MUM ) ) ) )", "obj1": 0.18110236220472442, "obj2": 0.6678754394579651}, {"determining": "( Max( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ),( ( AMS - CRS ) + FirstVNF_CPU_Server ) ) + ( ( ( Const - RRS ) + MRS ) * FirstVNF_RAM ) )", "choosing": "( ( MUR / ( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) / ( ( ( ( MLU / MLU ) + RMSe ) - ( RCSe + ( MLU / ( RMSe / Max( MUM,Min( MUM ,MUM ) ) ) ) ) ) - MUC ) )", "obj1": 0.46653543307086615, "obj2": 0.3306599414850647}, {"determining": "( ( ( MDR / ( ( ( ( Const / RRS ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.84251968503937, "obj2": 0.05407560571916737}, {"determining": "( ( Min( ACS ,( ( ( AMS + MDR ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( PN * MRS ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( CS - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) + Min( ( Min( CS ,MUR ) + Max( MUR,CS ) ) ,Max( ( RRSe + DS ),( MUR * MUC ) ) ) ) + Min( ( ( ( ( DS - CS ) * RCSe ) / MUR ) + ( RMSe / CS ) ) ,DS ) ) ) )", "obj1": 0.7775590551181102, "obj2": 0.08315376975931488}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( DDR * FirstVNF_Mem ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( CRS + RRS ) ) ) + Max( Max( BR,FirstVNF_Mem ),( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS + ( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( RCSe + RRSe ) - Max( Min( RCSe ,( MUC * Min( ( ( Max( CS,MUR ) / DS ) + MUC ) ,CS ) ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) )", "obj1": 0.23228346456692914, "obj2": 0.6047291687777799}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( DS / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.5196850393700787, "obj2": 0.27777700951257267}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( ACS * FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - MUC ) + ( ( MUM - MLU ) - RMSe ) ) ) ) ) ) )", "obj1": 0.17125984251968504, "obj2": 0.6960060201800055}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( PN * MRS ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / CS )", "obj1": 0.2047244094488189, "obj2": 0.6382427168307093}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "( Max( MUC,DS ) / ( DS * ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MUR - MLU ) ) ) * ( Max( RRSe,RRSe ) * MUR ) ) * ( CS + Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) )", "obj1": 0.49015748031496065, "obj2": 0.299584134493825}, {"determining": "( Max( DDR,Max( ( FirstVNF_CPU_Server - RRS ),Min( DDR ,DDR ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( ACS + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ( ( DDR / FirstVNF_RAM_Server ) - FirstVNF_CPU_Server ) * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ACS * ( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( MUM * ( ( CS * ( MUR / Max( MUM,MUM ) ) ) + MLU ) ) - ( ( RMSe / CS ) - ( Max( ( CS + MUR ),( ( RMSe / MUR ) + ( RCSe - Min( MLU ,MUC ) ) ) ) - DS ) ) ) - ( MUM / RRSe ) )", "obj1": 0.31299212598425197, "obj2": 0.50890618275029}, {"determining": "( ( ( Const * FirstVNF_RAM_Server ) + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( ( ( Const * Const ) * Max( ( ( AMS - MDR ) - Max( Const,FirstVNF_Mem_Server ) ),MDR ) ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ),( RCSe * ( ( CS * ( ( ( DS * CS ) / RMSe ) + ( DS - RMSe ) ) ) + MUC ) ) ) )", "obj1": 0.43700787401574803, "obj2": 0.360887073218599}, {"determining": "( ( ( ( ( MDR + RRS ) - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_RAM / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - ( AMS - FirstVNF_RAM ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RRSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( MUR - CS ) ) * DS ) )", "obj1": 0.21850393700787402, "obj2": 0.6146391034192205}, {"determining": "( Min( ( ( FirstVNF_Mem + FirstVNF_RAM_Server ) - ( Const * MRS ) ) ,Min( Const ,FirstVNF_CPU ) ) + ( RRS - ( MDR * Max( ( MDR - BR ),MRS ) ) ) )", "choosing": "( ( Min( ( RMSe * ( ( MUC / DS ) / RMSe ) ) ,MLU ) - DS ) * ( ( MUR / ( RMSe + MLU ) ) / ( ( ( ( RMSe + CS ) * MUR ) * Min( ( MUC + Min( MUR ,( CS - MUC ) ) ) ,CS ) ) + ( MUR / ( ( ( MUC - DS ) / ( Max( MLU,MUR ) - RCSe ) ) * RCSe ) ) ) ) )", "obj1": 0.4015748031496063, "obj2": 0.4008518605961614}, {"determining": "( ( Min( PN ,DDR ) + ( PN / ( ( MRS + Const ) + ( Max( Min( CRS ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ),BR ) / FirstVNF_Mem_Server ) ) ) ) + Min( DDR ,ARS ) )", "choosing": "( ( RRSe - Max( DS,RRSe ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( MUR - ( RCSe + ( ( ( MUC - MLU ) / MUM ) / ( Min( MUC ,( DS / CS ) ) + MUC ) ) ) ) ) )", "obj1": 0.5590551181102362, "obj2": 0.24896085999147682}, {"determining": "( ( Max( ACS,RRS ) / ( Const * FirstVNF_RAM_Server ) ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Max( ( MUR - Min( CS ,RMSe ) ),Max( ( RCSe + MLU ),DS ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.13582677165354332, "obj2": 0.7363102939874647}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( Max( RCSe,( RRSe + RMSe ) ) - ( ( ( MUM * ( CS + ( RMSe + RCSe ) ) ) - DS ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) ) )", "obj1": 0.968503937007874, "obj2": 0.009958754700225992}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( ( MUR * CS ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.7440944881889764, "obj2": 0.10740819296502291}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + ( ( ( Max( FirstVNF_CPU,MDR ) * MRS ) / ( AMS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( ( ( CS - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) + Min( ( Min( CS ,MUR ) + Max( MUR,CS ) ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.24606299212598426, "obj2": 0.5819677805874698}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( MUM / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.9586614173228346, "obj2": 0.01289257254805888}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,( RRSe + MLU ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,MUR ) + MUR ) ) ) )", "obj1": 0.8740157480314961, "obj2": 0.045353455465135556}, {"determining": "( ACS + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( Max( RCSe,Min( ( RMSe * MUR ) ,DS ) ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( MUC * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.2755905511811024, "obj2": 0.5449446685327262}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( MDR / ( MRS - Max( FirstVNF_Mem_Server,( PN * ( MDR * ( ARS - FirstVNF_Mem_Server ) ) ) ) ) ) ) + ( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) )", "choosing": "( Max( RCSe,( RRSe + MLU ) ) - Max( ( MUR + Min( CS ,RMSe ) ),( CS - ( Min( RCSe ,MUR ) + MUR ) ) ) )", "obj1": 0.8740157480314961, "obj2": 0.045353455465135556}, {"determining": "( ( Const + RRS ) + ( Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( FirstVNF_Mem / ARS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( RRSe - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( MUC * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.33661417322834647, "obj2": 0.47451278575831485}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) + ( ( MDR / ( ( ( PN * FirstVNF_RAM_Server ) + ( Max( ACS,MRS ) * ( ( FirstVNF_CPU + MDR ) - BR ) ) ) - ( PN * AMS ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( DS - CS ) * ( MUM * ( RRSe + MLU ) ) ) - Max( ( MUR + ( ( DS - CS ) * ( MUM * ( MLU + MLU ) ) ) ),( CS - Min( ( RCSe - MUR ) ,MUC ) ) ) )", "obj1": 0.6417322834645669, "obj2": 0.1813200291158513}, {"determining": "( ( Const + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( FirstVNF_CPU - MRS ) * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - Max( ( Min( DS ,MUM ) + Max( MUM,DS ) ),Min( RMSe ,( ( MLU / CS ) * RMSe ) ) ) ) * ( MUM * ( RRSe + MLU ) ) ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.21456692913385828, "obj2": 0.6289158403795005}, {"determining": "( Min( Min( ( Const * ARS ) ,( PN * FirstVNF_Mem_Server ) ) ,( Max( MRS,FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU - BR ) )", "choosing": "( RMSe * Min( ( MUM - RCSe ) ,MUR ) )", "obj1": 0.18503937007874016, "obj2": 0.6525064640979583}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + ( RRS * Max( ACS,RRS ) ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( Const * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUC + ( Max( CS,DS ) + Min( ( ( RMSe / CS ) + Min( Max( Min( MLU ,MUC ),( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.9803149606299213, "obj2": 0.005944337803439126}, {"determining": "( ( ( MDR - Const ) + ( ( MDR / ( FirstVNF_Mem + CRS ) ) + Min( ACS ,( ( ( AMS + MDR ) / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) * ( BR - ( MRS + AMS ) ) ) ) )", "choosing": "( Min( Min( ( MLU * Max( RRSe,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ) ,RRSe ) ,RMSe ) - Max( Max( CS,Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( ( MUC / Max( RRSe,( ( ( DS - CS ) * RCSe ) / MUR ) ) ) + MLU ) ) )", "obj1": 0.9488188976377953, "obj2": 0.017553801139551153}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_CPU_Server ) ) ) + ( ( MDR + RRS ) / Max( ACS,RRS ) ) ) + Min( FirstVNF_CPU_Server ,MRS ) )", "choosing": "( Max( MUC,DS ) / ( DS * ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MUR - MLU ) ) ) * ( Max( RRSe,RRSe ) * MUR ) ) * ( CS + Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) ) )", "obj1": 0.6358267716535433, "obj2": 0.18899672242647342}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( MUM / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.5098425196850394, "obj2": 0.2858412782219768}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + Min( ( CS * Max( MUC,DS ) ) ,RRSe ) ) ) * DS ) )", "obj1": 0.2283464566929134, "obj2": 0.613745489017393}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ( ( Min( ( MDR / CRS ) ,ARS ) + Min( FirstVNF_Mem ,ACS ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) + ( ( ( ( ACS - FirstVNF_Mem ) - Max( Const,BR ) ) / ( MRS - ( FirstVNF_CPU_Server + Max( ACS,Max( AMS,FirstVNF_RAM ) ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( RCSe + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.9232283464566929, "obj2": 0.027344074148012657}, {"determining": "( Min( PN ,( Max( FirstVNF_RAM_Server,Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) - ( MRS * FirstVNF_Mem ) ) ) + ( PN - MDR ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.49803149606299213, "obj2": 0.29443177824855854}, {"determining": "( ( ( MDR / ( MRS - ( ( Max( CRS,BR ) / FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Max( ARS,BR ) ) + ( FirstVNF_Mem - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( RCSe * ( CS + MUC ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.39763779527559057, "obj2": 0.4152324922274581}, {"determining": "( ( Min( MRS ,ACS ) + Max( MDR,Max( Const,Max( FirstVNF_Mem_Server,( ( MDR * FirstVNF_Mem_Server ) * PN ) ) ) ) ) + ( ( BR + CRS ) + ( Max( ( PN - FirstVNF_Mem_Server ),( RRS / FirstVNF_CPU_Server ) ) - ( ACS * FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( DS,( CS + MUM ) ) - ( Min( RRSe ,RCSe ) / RCSe ) ) * ( MUM * ( RCSe + CS ) ) ) - ( RRSe / MUM ) )", "obj1": 0.6771653543307087, "obj2": 0.1541238086002369}, {"determining": "( Min( ( ( BR + RRS ) * ( ( FirstVNF_CPU_Server + AMS ) * FirstVNF_CPU ) ) ,( Min( DDR ,Max( ACS,( Max( MRS,PN ) + ARS ) ) ) - DDR ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( ( MRS - Min( FirstVNF_RAM ,Const ) ) / MDR ) + Min( ACS ,( ( ( DDR / ( CRS / BR ) ) + Const ) / MRS ) ) ) ) )", "choosing": "Min( ( ( MUR / ( CS / RRSe ) ) / MLU ) ,( ( ( ( MUC - RRSe ) - MUC ) * MLU ) + ( ( Max( Min( MUM ,CS ),Max( MUR,RMSe ) ) - ( ( MUM + MUC ) * ( RRSe + MUR ) ) ) + RRSe ) ) )", "obj1": 0.7519685039370079, "obj2": 0.10297816490692592}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + FirstVNF_RAM ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MLU * MUM ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.7933070866141733, "obj2": 0.07952973124595107}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Min( RRS ,FirstVNF_RAM ) / ( ( MDR / ( ( Const * FirstVNF_RAM_Server ) - MRS ) ) + Min( ACS ,( FirstVNF_Mem / ( FirstVNF_CPU - ( ARS * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( ( ( MUR + Max( Min( Min( Max( MLU,Min( RCSe ,CS ) ) ,MLU ) ,MLU ),Min( ( ( MUM * MUC ) * RCSe ) ,MLU ) ) ) / ( MUC * ( CS + MUC ) ) ) / ( ( RRSe + ( RMSe * DS ) ) + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.2677165354330709, "obj2": 0.5728865491109099}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.7381889763779528, "obj2": 0.11716523122199611}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) ,DDR ) * RRS ) ) ,( ( ( FirstVNF_RAM_Server / BR ) + Const ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( ( ( ( MUR - MUM ) - ( MUR * CS ) ) * ( MUM * ( RRSe + MLU ) ) ) - Max( ( MUR + ( CS / RMSe ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.4251968503937008, "obj2": 0.37202134213132576}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),Max( ACS,( BR + Max( ( CRS / BR ),( FirstVNF_CPU * FirstVNF_Mem ) ) ) ) ) ,( ( Max( RRS,Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ( RRS - ACS ) ) ) ) ) / ( MDR + RRS ) ) + Min( FirstVNF_RAM_Server ,( ACS * CRS ) ) ) )", "choosing": "( ( RMSe + RCSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUC,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.26968503937007876, "obj2": 0.5614298463036684}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MUM - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.037155915687193335}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "( ( Min( Max( MUR,Max( MUM,RCSe ) ) ,MLU ) - DS ) * ( ( CS - CS ) / ( ( ( ( RMSe + MUC ) - RCSe ) - ( RRSe - RMSe ) ) + ( MLU / ( RMSe + ( ( CS - RCSe ) + ( ( MUM - RRSe ) - RMSe ) ) ) ) ) ) )", "obj1": 0.4507874015748031, "obj2": 0.344072233808852}, {"determining": "( ( Min( MRS ,ACS ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( Max( MRS,FirstVNF_Mem ) + ( ACS - ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) + CRS ) / ARS ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe / MUR ) - ( Max( ( MUR + DS ),( RRSe * RRSe ) ) / ( ( MUM + MUR ) * ( CS / RCSe ) ) ) ) * ( Max( ( MUM * RCSe ),Max( RRSe,RMSe ) ) - ( MUC - ( DS + MUR ) ) ) ) ) / ( RCSe + ( ( Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MUM - MLU ) ) ) ) + Min( ( RRSe + RMSe ) ,DS ) ) ) )", "obj1": 0.8917322834645669, "obj2": 0.037155915687193335}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( PN,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( RMSe + RCSe ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.562992125984252, "obj2": 0.24600771952832967}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( PN * FirstVNF_RAM_Server ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * RRSe ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.4704724409448819, "obj2": 0.3186091323771333}, {"determining": "( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( MDR / ( MRS - ( PN + FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Max( ( FirstVNF_RAM_Server * ( PN + FirstVNF_Mem ) ),FirstVNF_CPU ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( MRS - ( FirstVNF_RAM_Server * PN ) ) + Max( ACS,( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "( Max( MUM,( DS - ( ( MUM / MLU ) + RMSe ) ) ) - Max( ( MUR + ( ( DS - CS ) * ( MUM * ( MLU + MLU ) ) ) ),( CS - Min( ( RCSe - MUR ) ,MUC ) ) ) )", "obj1": 0.8169291338582677, "obj2": 0.0663433053268459}, {"determining": "( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / ARS ) ) ) ) + ( ( MDR / ( ( ( PN * FirstVNF_RAM_Server ) + ( Max( ACS,MRS ) * Max( ACS,( FirstVNF_RAM / FirstVNF_Mem ) ) ) ) - ( PN * AMS ) ) ) + ( Max( ACS,Max( Max( FirstVNF_CPU,CRS ),FirstVNF_RAM_Server ) ) / ( MDR + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,( DS - ( ( MUM / MLU ) + RMSe ) ) ) - Max( ( MUR + ( ( DS - CS ) * ( MUM * ( ( RRSe + RMSe ) + MLU ) ) ) ),( CS - Min( ( RCSe - MUR ) ,MUC ) ) ) )", "obj1": 0.8307086614173228, "obj2": 0.05901407277326863}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( PN * FirstVNF_RAM_Server ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,Max( Max( FirstVNF_CPU,BR ),Max( ( BR + ( ( MDR / MDR ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) )", "choosing": "( Min( RCSe ,( Max( RCSe,Max( ( MUR * ( Min( RRSe ,RRSe ) + ( MUM - CS ) ) ),Max( MUC,( CS - RRSe ) ) ) ) / Max( Min( RCSe ,( RRSe * RCSe ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * RRSe ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.31016655814338806}, {"determining": "( Min( ( Min( FirstVNF_CPU ,ARS ) / ( ARS - FirstVNF_Mem_Server ) ) ,Max( ( ACS + FirstVNF_Mem ),FirstVNF_RAM_Server ) ) + Min( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ,( Max( ACS,RRS ) / Min( FirstVNF_RAM ,BR ) ) ) )", "choosing": "( ( MUR / ( RCSe * ( CS + ( ( MUM - RMSe ) / ( DS + DS ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.7795275590551181, "obj2": 0.08241930695325018}, {"determining": "( ( ( CRS + ARS ) + RRS ) + ( ( ( PN * RRS ) + PN ) + ( ( ( Min( ( ( Const + BR ) + ( FirstVNF_RAM_Server - ACS ) ) ,DDR ) * ( CRS * FirstVNF_Mem_Server ) ) - FirstVNF_CPU_Server ) * Max( ( ( FirstVNF_RAM + ARS ) / ( ( BR / RRS ) + FirstVNF_Mem_Server ) ),AMS ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( CS * MUC ) * RCSe ) + RRSe ) ) ,( Min( ( Max( MUC,MLU ) * ( RCSe * ( MUC - Min( RRSe ,Max( RMSe,DS ) ) ) ) ) ,MUC ) / ( RRSe + DS ) ) )", "obj1": 0.1515748031496063, "obj2": 0.7178768546493126}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ( PN * FirstVNF_RAM_Server ) ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( ( FirstVNF_Mem - ( FirstVNF_RAM - AMS ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( MUM * ( RRSe + MLU ) ) )", "obj1": 0.25393700787401574, "obj2": 0.5819587039504261}, {"determining": "( ( ( MDR - ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) / Max( ( Const - ( FirstVNF_RAM_Server / Max( MRS,FirstVNF_Mem ) ) ),BR ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( Max( ( DS / ( DS / ( Min( Max( RCSe,MUC ) ,RMSe ) / DS ) ) ),( ( ( RMSe + MUC ) - ( DS / MUR ) ) / Min( ( CS + Min( Min( ( RMSe * MUC ) ,MUR ) ,Max( Min( MUM ,RCSe ),MLU ) ) ) ,RCSe ) ) ) - Max( ( MUR - Min( RMSe ,CS ) ),( CS - ( Min( CS ,MUR ) + MUR ) ) ) )", "obj1": 0.36220472440944884, "obj2": 0.45065640875264323}, {"determining": "( ( RRS - ACS ) + Min( PN ,( ( ACS + MDR ) * ( FirstVNF_RAM_Server - ( FirstVNF_CPU - ( PN - MDR ) ) ) ) ) )", "choosing": "( ( CS - DS ) * ( Max( ( MUM / ( DS - MUR ) ),CS ) - ( ( ( ( RMSe - RCSe ) * MUR ) * ( ( MUC + MUC ) * CS ) ) + ( MLU / ( RMSe + ( ( CS - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ) ) ) ) )", "obj1": 0.36023622047244097, "obj2": 0.4510449369605978}, {"determining": "Min( ( AMS * ( ( ( Const / FirstVNF_Mem_Server ) + BR ) + ( Max( ACS,MRS ) * ( ARS - BR ) ) ) ) ,Max( FirstVNF_Mem_Server,MDR ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( MUC + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15354330708661418, "obj2": 0.7138325338424449}, {"determining": "( ( Const + RRS ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + ( ACS * FirstVNF_RAM ) ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Max( Min( ( ( ( ( CS * MUC ) * RCSe ) - ( RCSe + RCSe ) ) - Max( ( RCSe - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( RMSe * MLU ) ,DS ) ) ) ) ) ) )", "obj1": 0.3051181102362205, "obj2": 0.5101464230048084}, {"determining": "( ( Const + RRS ) + ( Min( Max( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ),( FirstVNF_Mem / ARS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( RRSe - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( Max( ( MUM + CS ),( MUR * MUC ) ) * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( CS - MUM ) + Max( RCSe,Min( ( MUC * MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.34448818897637795, "obj2": 0.46941147288843227}, {"determining": "( Min( ( ( ( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ) - FirstVNF_RAM_Server ) / ( ARS - FirstVNF_Mem_Server ) ) - ( Const * Const ) ) ,Min( Const ,FirstVNF_CPU ) ) + FirstVNF_CPU_Server )", "choosing": "( Min( RCSe ,( ( MUR * MUR ) / ( Min( RRSe ,Min( DS ,RMSe ) ) + MUR ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * RRSe ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.42913385826771655, "obj2": 0.36177657307964817}, {"determining": "( ( Const + ( ( MDR / ( FirstVNF_Mem - ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ACS - ( ( FirstVNF_CPU + CRS ) / ARS ) ) ) ) + ( Min( Max( FirstVNF_CPU_Server,( Min( ( FirstVNF_RAM_Server + ( FirstVNF_RAM / FirstVNF_Mem ) ) ,DDR ) * RRS ) ) ,( ( ( ARS + FirstVNF_RAM ) / RRS ) * AMS ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) ) )", "choosing": "( Min( Min( RRSe ,( MLU * Max( RRSe,( Min( MLU ,MUR ) / ( RRSe / MLU ) ) ) ) ) ,RMSe ) - Max( ( CS - Min( RCSe ,( ( Min( RMSe ,RMSe ) - MUM ) / Min( ( Max( MUR,MUC ) * Max( MUR,DS ) ) ,RRSe ) ) ) ),( MUR + Min( CS ,RMSe ) ) ) )", "obj1": 0.28346456692913385, "obj2": 0.542619824235921}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( ACS - RRS ) / ( MDR + RRS ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MRS / ( ( FirstVNF_Mem - ( ARS - FirstVNF_Mem_Server ) ) - ( PN * ( ACS * FirstVNF_CPU_Server ) ) ) ) + Max( ( MDR / ( ( ARS + ACS ) + FirstVNF_RAM_Server ) ),MRS ) ) ) )", "choosing": "( Max( MUC,DS ) / ( ( ( ( RCSe + ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) * CS ) * ( CS + RRSe ) ) * DS ) )", "obj1": 0.15551181102362205, "obj2": 0.703746664640828}, {"determining": "( ( Const + RRS ) + ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / Const ) * ACS ) + ( ( FirstVNF_RAM_Server - ( ACS * ( FirstVNF_CPU_Server + Max( ACS,ACS ) ) ) ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM_Server - ( Max( CRS,BR ) - ( PN - MDR ) ) ) ) ) ) )", "choosing": "( Max( Min( ( ( CS - ( RCSe + RCSe ) ) - Max( ( MUR - MUM ),Min( MUR ,DS ) ) ) ,DS ),RMSe ) - Max( ( Min( CS ,RMSe ) + MUR ),( Min( CS ,( MUC * ( RRSe * RMSe ) ) ) - Min( RCSe ,( ( ( ( MUM / MUR ) / MUR ) - MUM ) + Max( RCSe,Min( Max( MUC,MUR ) ,DS ) ) ) ) ) ) )", "obj1": 0.5118110236220472, "obj2": 0.28428405512362154}, {"determining": "( ( ( MDR / ( ( PN * FirstVNF_RAM_Server ) - MRS ) ) + ( ( MDR / ( MRS - ( PN + FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / Min( AMS ,AMS ) ) ) ) ) + ( ( FirstVNF_RAM_Server - ( ACS * FirstVNF_RAM ) ) + ( ( MDR / ( MRS - ( ( MRS - ( FirstVNF_RAM_Server * PN ) ) + Max( ACS,( ARS / FirstVNF_Mem ) ) ) ) ) + ( ACS - ( ( CRS + FirstVNF_CPU ) / ARS ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUC ,RRSe ) ) + ( ( ( ( MUC / RRSe ) / Min( ( ( MUM / DS ) + Max( DS,MUC ) ) ,( CS / RMSe ) ) ) * Max( ( RRSe + Max( DS,CS ) ),Min( RMSe ,( MUM * RMSe ) ) ) ) + RRSe ) ) )", "obj1": 0.11811023622047244, "obj2": 0.748805514164984}, {"determining": "Min( Max( Min( FirstVNF_CPU ,BR ),( MRS / Max( MDR,BR ) ) ) ,( ( Max( ( ( AMS - FirstVNF_Mem_Server ) + FirstVNF_CPU ),Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + ( Max( ARS,ACS ) / ACS ) ) ) ) / MDR ) + ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( ( RMSe / MUC ) - ( CS + Max( MUR,RMSe ) ) ) * Min( ( Min( CS ,MUR ) + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) ) - ( RRSe / MUM ) )", "obj1": 0.2736220472440945, "obj2": 0.558140248950586}, {"determining": "( ( FirstVNF_CPU_Server + Max( ( ( AMS * FirstVNF_RAM ) + ( FirstVNF_CPU / ACS ) ),ACS ) ) / Min( ACS ,BR ) )", "choosing": "Min( ( ( ( RMSe + MUC ) - ( DS / RCSe ) ) / ( RCSe + MUR ) ) ,( Max( ( MUR * CS ),Min( MUM ,RRSe ) ) + ( ( Min( ( CS + MUR ) ,Max( ( MUM + CS ),( MUR * MUC ) ) ) + ( MUR - ( Min( DS ,RRSe ) - ( MLU - MLU ) ) ) ) + ( RCSe * Min( ( ( MUR * CS ) + ( MUM * RMSe ) ) ,Max( ( RRSe + RMSe ),( MUR * MUC ) ) ) ) ) ) )", "obj1": 0.12992125984251968, "obj2": 0.739461351842403}, {"determining": "Min( Max( Min( FirstVNF_CPU ,( ( ( Min( FirstVNF_RAM_Server ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) / ( ARS - FirstVNF_Mem_Server ) ) + FirstVNF_RAM ) + ( Const * ( ( PN * FirstVNF_RAM_Server ) * Max( Min( FirstVNF_CPU ,BR ),Max( ACS,RRS ) ) ) ) ) ),( ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) + RRS ) ) ,Max( Max( FirstVNF_CPU,BR ),Max( ( BR + ( ( MDR / MDR ) + Max( ACS,( FirstVNF_Mem / ARS ) ) ) ),ACS ) ) )", "choosing": "( Min( RCSe ,( Max( RCSe,Max( ( MUR * ( Min( RRSe ,RRSe ) + ( MUM - CS ) ) ),Max( MUC,( CS - RRSe ) ) ) ) / Max( Min( RCSe ,( RRSe * RCSe ) ),( CS - ( MUR - ( MUM * CS ) ) ) ) ) ) - ( Max( ( Min( ( RCSe / ( RCSe * ( CS * RRSe ) ) ) ,DS ) + MUR ),Max( RRSe,RMSe ) ) - ( ( MUM + MUC ) - ( RRSe + MUR ) ) ) )", "obj1": 0.47834645669291337, "obj2": 0.31016655814338806}, {"determining": "( ( ( ( FirstVNF_RAM_Server - ( FirstVNF_RAM * ACS ) ) + ( ( ( Max( FirstVNF_CPU,MDR ) * MRS ) / ( AMS - ( ARS * FirstVNF_Mem_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / MRS ) ) ) ) + ( Max( ACS,RRS ) / ( MDR + RRS ) ) ) + ( Max( BR,FirstVNF_Mem ) + ( ( MDR / ( MRS - ( PN * FirstVNF_RAM_Server ) ) ) + Min( ACS ,( FirstVNF_Mem / ARS ) ) ) ) )", "choosing": "( ( MUC / ( RCSe * ( CS + MUC ) ) ) / ( ( ( MUM - MLU ) - RMSe ) + ( ( ( CS - ( Min( RCSe ,RCSe ) - ( MLU - MLU ) ) ) + Min( ( Min( CS ,MUR ) + Max( MUR,CS ) ) ,Max( ( RRSe + CS ),( MUR * MUC ) ) ) ) + Min( ( ( RMSe / CS ) + Min( ( Min( MLU ,MUC ) + ( DS * MUM ) ) ,DS ) ) ,DS ) ) ) )", "obj1": 0.19881889763779528, "obj2": 0.6433527127433329}]}