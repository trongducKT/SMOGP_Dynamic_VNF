{"1": [{"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / Min( Const ,MDR ) )", "choosing": "( ( MUM * CS ) / Max( DS,CS ) )", "obj1": 0.29239766081871343, "obj2": 0.719174651373761}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( FirstVNF_RAM / ACS ) - Max( Const,( Const / RRS ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,Max( MUR,Max( Max( ( MLU / MLU ),MUC ),( ( ( MUM * ( ( MUR * CS ) + ( MUM + CS ) ) ) - RRSe ) - RRSe ) ) ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051846}, {"determining": "Min( ( PN - FirstVNF_CPU ) ,Max( RRS,( BR + FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RRSe ) - ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.725580592968173}, {"determining": "Min( Min( RRS ,FirstVNF_Mem ) ,Max( BR,MDR ) )", "choosing": "Min( ( CS + RMSe ) ,Max( MUM,MLU ) )", "obj1": 0.3079922027290448, "obj2": 0.7064157771686811}, {"determining": "Min( ( MDR * FirstVNF_CPU ) ,Min( MDR ,MDR ) )", "choosing": "( Max( MUM,RRSe ) - Max( RCSe,CS ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "( ( PN - ACS ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6804458637759058}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * RMSe ) - Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "Min( ( DDR * Max( ( AMS / FirstVNF_Mem ),ACS ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( Max( ( ( ( RRSe - ( Max( CS,RCSe ) * MUR ) ) * RRSe ) - MUM ),RCSe ),CS ) - ( RCSe / RCSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / RRS ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( MUR,( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ( ARS - Min( BR ,FirstVNF_Mem_Server ) ) ) - Max( ( CRS * MDR ),FirstVNF_RAM_Server ) ) - Max( CRS,PN ) ) * ( ( FirstVNF_CPU_Server - MDR ) * Min( BR ,AMS ) ) )", "choosing": "( ( Min( ( MUC / ( ( Max( RCSe,( RMSe * RMSe ) ) / RMSe ) + MUM ) ) ,CS ) * MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,PN ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM + ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) - ( MRS * FirstVNF_Mem ) ) )", "choosing": "( ( CS / MUM ) * ( MLU * Max( ( MLU * ( CS + MUM ) ),( RCSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,ARS ) * MRS ) + Min( RRS ,MDR ) )", "choosing": "( Min( ( MUM / CS ) ,MUC ) / ( ( MUR + RCSe ) / MUM ) )", "obj1": 0.3060428849902534, "obj2": 0.7066222571030545}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - MRS ) * ( FirstVNF_RAM_Server / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) / ( MUR * MLU ) ) - ( RCSe + RCSe ) ) / ( Max( MUM,MUR ) + Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS + ARS ) - Max( ACS,MRS ) )", "choosing": "Max( ( ( MLU * DS ) - RRSe ),( RMSe - Min( RMSe ,DS ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6986246516279042}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( CRS / CRS ) - ( Max( Min( Min( Min( FirstVNF_Mem_Server ,( ARS - Const ) ) ,( ARS + AMS ) ) ,ACS ),FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( ( ( MUR * Min( RMSe ,RCSe ) ) / ( ( ( MUR * ( ( MUC + MUM ) - RCSe ) ) / ( ( ( RCSe / MLU ) + MUM ) / MUR ) ) * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ACS,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + ( DS / RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,( CRS + MDR ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( RMSe * Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem * FirstVNF_CPU ) * ( ( FirstVNF_Mem_Server - MDR ) / FirstVNF_CPU_Server ) )", "choosing": "( ( ( RMSe - RCSe ) * ( RCSe * CS ) ) * ( ( MUR + RRSe ) - ( MUM - MUC ) ) )", "obj1": 0.30409356725146197, "obj2": 0.7072170077537382}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( ( ARS * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) / Const ),Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR / RRSe ) + ( RMSe - RMSe ) ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) * ( MDR - PN ) )", "choosing": "( ( ( MUC / RRSe ) - Min( CS ,MLU ) ) - ( Max( RRSe,MUM ) + Min( DS ,MUM ) ) )", "obj1": 0.5477582846003899, "obj2": 0.5647916629219912}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MRS - MRS ) ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( CS / MLU ) ) - CS ) ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,( Min( DS ,MLU ) / ( DS * RCSe ) ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( RRS - FirstVNF_RAM ) / FirstVNF_CPU ),( ( PN / AMS ) * ( AMS - Const ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( MLU ,RMSe ) ) * ( ( CS * MUM ) + ( DS - MLU ) ) ) / Max( ( Min( MUM ,DS ) - ( MLU / MUC ) ),Min( ( MUM + RCSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "Max( ( ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) - ( FirstVNF_Mem - PN ) ) + Max( Min( FirstVNF_Mem_Server ,Const ),Min( RRS ,AMS ) ) ),Min( ( ( FirstVNF_RAM_Server - RRS ) * ( ARS + FirstVNF_Mem ) ) ,( Max( Const,FirstVNF_RAM_Server ) * ( AMS * FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( ( MLU - MUC ) ,( MUC - MUR ) ) * ( ( RCSe - RCSe ) - ( MUR + MUC ) ) ) / Max( ( ( RMSe - CS ) - Max( CS,RMSe ) ),( Min( RMSe ,RMSe ) / ( RCSe - CS ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7311400914070356}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( Min( RCSe ,MUR ) * Max( MLU,CS ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( ( ( ( FirstVNF_CPU_Server / ACS ) * ( FirstVNF_CPU + ARS ) ) + ( Max( RRS,MRS ) + ( RRS * RRS ) ) ) + Min( Min( ( FirstVNF_RAM_Server * ACS ) ,( AMS + FirstVNF_RAM_Server ) ) ,Max( Max( Const,FirstVNF_CPU ),Min( CRS ,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( Max( MUR,( ( MUR + MUM ) + CS ) ) ,Max( MLU,( DS - RRSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7169536776887305}, {"determining": "( ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) / Min( RRS ,FirstVNF_CPU_Server ) )", "choosing": "( ( Max( ( RCSe * CS ),Max( DS,RMSe ) ) + ( Max( CS,MUR ) - ( MUR * RMSe ) ) ) + ( ( Min( RMSe ,RMSe ) - ( RRSe / MUM ) ) - Min( ( MUM * CS ) ,Min( CS ,CS ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7090936418406031}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( ( ( FirstVNF_CPU * MDR ) - FirstVNF_RAM ) ,Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( RMSe / MUC ) ) / ( MUM - MUR ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( Min( MUM ,RCSe ) ,( DS / CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,BR ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) * RRSe ),RCSe ) - ( RCSe / CS ) )", "obj1": 0.341130604288499, "obj2": 0.6709420116353113}], "2": [{"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_CPU ) ,Max( RRS,( BR + FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RRSe ) - ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( ( RRS * MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( MDR + MRS ) )", "choosing": "( Min( RRSe ,Min( RMSe ,MUM ) ) + Max( DS,CS ) )", "obj1": 0.2807017543859649, "obj2": 0.7292727100468933}, {"determining": "( ( BR / MDR ) - Max( RRS,MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.6686159844054581, "obj2": 0.300746168710569}, {"determining": "Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * CS ) )", "obj1": 0.6276803118908382, "obj2": 0.3867107305969836}, {"determining": "( ( FirstVNF_RAM / ACS ) - Max( Const,( Const / RRS ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,Max( MUR,Max( Max( ( MLU / MLU ),MUC ),( ( ( MUM * ( ( MUR * CS ) + ( MUM + CS ) ) ) - RRSe ) - RRSe ) ) ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051846}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,BR ) ) - Min( ( PN + ACS ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) * RRSe ),RCSe ) - ( Max( CS,DS ) / CS ) )", "obj1": 0.37816764132553604, "obj2": 0.6345449711164832}, {"determining": "( ( ( ( ACS - AMS ) - ( MDR - FirstVNF_CPU ) ) + ( Min( RRS ,PN ) - Max( Const,PN ) ) ) * ( MDR - PN ) )", "choosing": "( ( ( MUC / Min( Min( RCSe ,MUR ) ,( CS * RRSe ) ) ) - Min( CS ,MLU ) ) - ( Max( RRSe,MUM ) + Min( DS ,MUM ) ) )", "obj1": 0.5555555555555556, "obj2": 0.5508542530700938}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) * ( MDR - PN ) )", "choosing": "( ( ( MUC / RRSe ) - Min( CS ,MLU ) ) - ( Max( RRSe,MUM ) + Min( DS ,MUM ) ) )", "obj1": 0.5477582846003899, "obj2": 0.5647916629219912}, {"determining": "( Min( FirstVNF_RAM ,ACS ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( ( RRSe - RCSe ) ,( CS / RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051846}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe * MUC ) / ( MLU / MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Min( ( ( FirstVNF_CPU * MDR ) - FirstVNF_RAM ) ,Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( RMSe / MUC ) ) / ( MUM - MUR ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( Min( MUM ,RCSe ) ,( DS / CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( DDR,DDR ) - ( ( ( Const - FirstVNF_RAM ) + ( ARS * ARS ) ) / PN ) )", "choosing": "( CS - ( MUC * MLU ) )", "obj1": 0.9961013645224172, "obj2": 0.004845633648574766}, {"determining": "Max( Max( CRS,PN ),( CRS / AMS ) )", "choosing": "( ( MLU * RRSe ) / Max( MUC,MUM ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "Min( ( Min( FirstVNF_CPU ,MDR ) - MRS ) ,( CRS + Max( ( FirstVNF_Mem / ( ACS - FirstVNF_CPU_Server ) ),( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( RMSe / MUC ) ) / Min( Min( MUR ,MUC ) ,( DS - MUC ) ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( Min( MUM ,RCSe ) ,( DS - CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "Max( ( ( RRS - FirstVNF_RAM ) / FirstVNF_CPU ),( ( PN / AMS ) * ( AMS - Const ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( MLU ,RMSe ) ) * ( ( CS * MUM ) + ( DS - MLU ) ) ) / Max( ( Min( MUM ,DS ) - ( MLU / MUC ) ),Min( ( MUM + RCSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem_Server,( ACS * ( RRS - PN ) ) ) ) * Max( PN,DDR ) )", "choosing": "( ( ( MUC / ( ( MUR - Max( MUR,MLU ) ) - MUR ) ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( ( RMSe + RRSe ) * CS ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7147124992495397}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUR,MUR ) - ( RMSe - MUM ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) * ( MDR - PN ) )", "choosing": "( Max( Min( RMSe ,MLU ),( MUM + MUM ) ) + Min( Min( RCSe ,MUR ) ,( CS * RRSe ) ) )", "obj1": 0.5536062378167641, "obj2": 0.5579807765040866}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) + ( ARS * MDR ) )", "choosing": "( ( ( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) ) * MUC ) / ( MLU / MUM ) )", "obj1": 0.3001949317738791, "obj2": 0.7029926582875677}, {"determining": "( ( PN - Max( FirstVNF_CPU,( FirstVNF_CPU / Max( CRS,FirstVNF_RAM ) ) ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( ACS - BR ) ) )", "choosing": "( ( ( CS + MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - ( MUR / ( RCSe - MUR ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.30994152046783624, "obj2": 0.693045725533484}, {"determining": "Min( ( PN - ( PN - MRS ) ) ,Max( RRS,( BR + FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( MLU ,MLU ) )", "obj1": 0.31968810916179335, "obj2": 0.6814919592662911}, {"determining": "( ( FirstVNF_RAM_Server - RRS ) * ( MDR - PN ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.5497076023391813, "obj2": 0.5626784398147804}, {"determining": "Min( ( ( Min( FirstVNF_RAM ,FirstVNF_CPU ) / ( RRS - RRS ) ) / Min( ( Const - Const ) ,( ACS + ARS ) ) ) ,( ( ( CRS + ARS ) - Min( FirstVNF_RAM_Server ,BR ) ) - Min( Min( DDR ,FirstVNF_Mem ) ,Min( Const ,DDR ) ) ) )", "choosing": "( Max( ( ( MUC - CS ) * RRSe ),RCSe ) - ( RCSe / CS ) )", "obj1": 0.341130604288499, "obj2": 0.6709420116353113}, {"determining": "( ARS * ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( MUC ,MUC ) * Min( MUC ,MLU ) )", "obj1": 0.31773879142300193, "obj2": 0.685517629862225}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.725580592968173}, {"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / Min( Const ,MDR ) )", "choosing": "( ( MUM * CS ) / Max( DS,CS ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "( ( ( FirstVNF_Mem + FirstVNF_RAM ) - Const ) / ( MDR - MDR ) )", "choosing": "( ( ( ( MUR - ( RMSe - ( ( CS / MUR ) / ( RRSe * ( DS - RCSe ) ) ) ) ) - Max( RCSe,( RMSe - CS ) ) ) + ( MUM - DS ) ) / Min( ( CS * MUC ) ,( MUR - RMSe ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6684599101826945}, {"determining": "Min( ( PN + ACS ) ,Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "( Max( ( ( MUC - CS ) * RRSe ),RCSe ) - ( RCSe / CS ) )", "obj1": 0.341130604288499, "obj2": 0.6709420116353113}, {"determining": "( ( PN - ACS ) + ( ACS - BR ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6804458637759058}, {"determining": "( ( ( ACS / Min( CRS ,CRS ) ) + ( ARS / FirstVNF_CPU ) ) + ( MRS + ARS ) )", "choosing": "Min( ( ( ( CS / RRSe ) * ( CS + DS ) ) + Max( ( MUM - MUC ),Max( CS,RMSe ) ) ) ,( ( ( RCSe - CS ) - ( MUC * RCSe ) ) - ( ( RMSe * DS ) - ( MUM / MUM ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / Min( Const ,MDR ) )", "choosing": "( ( MUM * CS ) / Max( DS,CS ) )", "obj1": 0.29239766081871343, "obj2": 0.719174651373761}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) ,Min( FirstVNF_RAM ,ARS ) )", "choosing": "( Min( ( MLU - MUC ) ,( RCSe * CS ) ) + ( ( MLU + DS ) / Max( Min( Max( RMSe,CS ) ,( CS - RCSe ) ),MUM ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6875487210706616}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS * CS ) + ( RCSe + MLU ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "Min( ( DDR * Max( ( AMS / FirstVNF_Mem ),ACS ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( Max( ( ( ( RRSe - ( Max( CS,RCSe ) * MUR ) ) * RRSe ) - MUM ),RCSe ),CS ) - ( RCSe / RCSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / Min( Const ,MDR ) )", "choosing": "Min( ( Max( ( RRSe * MUC ),( MUM + MLU ) ) + Max( ( RMSe / CS ),Max( RRSe,RMSe ) ) ) ,( ( ( CS - MUC ) - ( CS - MUC ) ) / ( ( RCSe * RRSe ) + ( RRSe * CS ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.719174651373761}, {"determining": "Min( ( MDR * FirstVNF_CPU ) ,Min( MDR ,MDR ) )", "choosing": "( Max( MUM,RRSe ) - Max( RCSe,CS ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "( ( AMS / Max( CRS,FirstVNF_RAM_Server ) ) / Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "Max( ( ( ( RCSe / MUM ) * ( MUR * RRSe ) ) + Min( Max( CS,MUR ) ,( RMSe / MLU ) ) ),Max( ( ( MUM / CS ) / Min( MUR ,CS ) ),Min( ( DS * CS ) ,( MUM / MUC ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7191816439783044}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( ( Min( RCSe ,MUR ) * Max( MLU,CS ) ) / ( ( MUM * RMSe ) * Max( DS,DS ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( ( PN - ACS ) + ( ACS - BR ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6804458637759058}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * RMSe ) - Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / RRS ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( MUR,( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ( ARS - Min( BR ,FirstVNF_Mem_Server ) ) ) - Max( ( CRS * MDR ),FirstVNF_RAM_Server ) ) - Max( CRS,PN ) ) * ( ( FirstVNF_CPU_Server - MDR ) * Min( BR ,AMS ) ) )", "choosing": "( ( Min( ( MUC / ( ( Max( RCSe,( RMSe * RMSe ) ) / RMSe ) + MUM ) ) ,CS ) * MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,PN ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM + ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) - ( MRS * FirstVNF_Mem ) ) )", "choosing": "( ( CS / MUM ) * ( MLU * Max( ( MLU * ( CS + MUM ) ),( RCSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - MRS ) * ( FirstVNF_RAM_Server / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) / ( MUR * MLU ) ) - ( RCSe + RCSe ) ) / ( Max( MUM,MUR ) + Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( CRS / CRS ) - ( Max( Min( Min( Min( FirstVNF_Mem_Server ,( ARS - Const ) ) ,( ARS + AMS ) ) ,ACS ),FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( ( ( MUR * Min( RMSe ,RCSe ) ) / ( ( ( MUR * ( ( MUC + MUM ) - RCSe ) ) / ( ( ( RCSe / MLU ) + MUM ) / MUR ) ) * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ACS,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + ( DS / RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,( CRS + MDR ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( RMSe * Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( ( ARS * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) / Const ),Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR / RRSe ) + ( RMSe - RMSe ) ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MRS - MRS ) ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( CS / MLU ) ) - CS ) ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,( Min( DS ,MLU ) / ( DS * RCSe ) ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( ( ( BR - MRS ) / ARS ) ,MDR ) ),Min( ( BR - FirstVNF_CPU_Server ) ,( BR + PN ) ) )", "choosing": "Min( ( Max( RRSe,RRSe ) + RCSe ) ,Max( Max( Max( Max( ( Max( ( MUC / DS ),( RMSe + DS ) ) + RRSe ),RMSe ),MUR ),CS ),Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + RRS ) + FirstVNF_RAM ) )", "choosing": "Max( ( RMSe + MUM ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) - ( AMS * ACS ) )", "choosing": "( Max( Min( CS ,( Max( RMSe,( MUR + ( MUC - RCSe ) ) ) * MLU ) ),MLU ) * ( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - AMS ) - ( Min( BR ,( FirstVNF_RAM * AMS ) ) - CRS ) ) + ( Min( RRS ,PN ) - Max( ( Max( ( DDR * DDR ),FirstVNF_CPU_Server ) * Max( FirstVNF_Mem,MRS ) ),PN ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - AMS ) ,( ACS / ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( MUC + Max( CS,Min( Max( MUC,CS ) ,MLU ) ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU_Server / Const ) )", "choosing": "( ( RCSe * ( ( RRSe * MUM ) / DS ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) ) ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,Min( FirstVNF_Mem_Server ,ARS ) ) / CRS ) - ( PN - MRS ) )", "choosing": "Max( ( Max( Min( CS ,( ( RRSe * ( RRSe + MUR ) ) + CS ) ),DS ) * DS ),( Min( Min( CS ,DS ) ,MUR ) - Max( DS,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MRS - MRS ) ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( CS / MLU ) ) - CS ) ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MRS - MRS ) ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( CS / MLU ) ) - CS ) ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MRS - MRS ) ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( CS / MLU ) ) - CS ) ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( Max( ( PN / ( FirstVNF_CPU_Server / BR ) ),FirstVNF_Mem ) + ( DDR + FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),Min( Min( ( Max( RMSe,MLU ) + RRSe ) ,( Min( MLU ,Max( ( Max( RRSe,RMSe ) - ( MUC / CS ) ),RRSe ) ) - RMSe ) ) ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * Max( FirstVNF_Mem_Server,( AMS - ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( CS + DS ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) / Min( Const ,MDR ) )", "choosing": "( ( MUM * CS ) / Max( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ARS )", "choosing": "( Min( MLU ,RMSe ) - ( ( ( ( MUC - CS ) / Max( MUR,CS ) ) / ( ( RRSe * MUR ) * ( MUC - RRSe ) ) ) / ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + ( RCSe * RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( AMS / PN ) )", "choosing": "( ( ( ( MUC - CS ) / Max( MUR,CS ) ) / ( ( RRSe * MUR ) * ( MUC - RRSe ) ) ) / ( Min( Min( RRSe ,RMSe ) ,( MUM / MLU ) ) + ( ( MLU * DS ) + ( RCSe * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,ARS ) + ( BR - FirstVNF_CPU ) ) / ( MDR / ACS ) )", "choosing": "( ( ( MUM / CS ) * DS ) * ( RCSe * Min( RRSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( Max( AMS,PN ) * ( FirstVNF_RAM_Server * BR ) ) ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( MUC ,( Min( MUC ,MUC ) * ( MLU + MUC ) ) ) ,( RMSe + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * FirstVNF_Mem_Server ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( Min( MUC ,MUC ) * ( MLU + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / RRS ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( MUR,( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / RRS ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( MUR,( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / RRS ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( MUR,( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - FirstVNF_CPU_Server ) - ( BR * ( FirstVNF_Mem_Server / RRS ) ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( MUR,( MUC + CS ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) ) / MRS ) ,MDR ) ,( Min( MDR ,FirstVNF_Mem_Server ) / MRS ) )", "choosing": "( Max( ( ( RCSe * RRSe ) - ( RRSe * CS ) ),( RCSe / RRSe ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Min( MDR ,FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe * Max( Max( DS,RCSe ),( RCSe / RRSe ) ) ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( MDR / Const ),( ARS - FirstVNF_CPU ) ) )", "choosing": "( Max( Max( DS,RCSe ),( RCSe / RRSe ) ) / ( ( MUM - CS ) + ( RRSe / MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( MUM - MLU ) / ( RMSe / MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / MUM )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( RRS - ARS ) - ( ARS / FirstVNF_CPU ) ) )", "choosing": "( ( MLU / RRSe ) / ( Max( ( MUM - MLU ),MLU ) + ( MUM * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( ( RRS * MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( MDR + MRS ) )", "choosing": "( Min( RRSe ,Min( RMSe ,MUM ) ) + Max( DS,CS ) )", "obj1": 0.2807017543859649, "obj2": 0.7292727100468933}, {"determining": "Min( ( ( Const - Const ) - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( ( CS / RMSe ) / Min( MLU ,CS ) ) ) * ( DS - MUR ) )", "obj1": 0.7953216374269005, "obj2": 0.17450230258783697}, {"determining": "( ( BR / MDR ) - MDR )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.6686159844054581, "obj2": 0.2996715972813195}, {"determining": "( FirstVNF_CPU - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( RCSe,( MUC + CS ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.9200779727095516, "obj2": 0.08930236701230729}, {"determining": "( ( ( FirstVNF_Mem_Server * Const ) * ( RRS * ( BR - BR ) ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( ARS / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MUM + ( MUR - ( ( Min( RMSe ,Max( RCSe,RMSe ) ) * MLU ) / RRSe ) ) ),MUC )", "obj1": 0.5497076023391813, "obj2": 0.4364899556792026}, {"determining": "( ( Max( Min( MRS ,AMS ),ACS ) - Max( RRS,MDR ) ) + ( ARS * DDR ) )", "choosing": "( ( ( ( ( Max( DS,( Min( MLU ,CS ) - Min( MLU ,DS ) ) ) + Max( MUR,( ( CS + MUC ) * RCSe ) ) ) + ( MUR * ( MUR - DS ) ) ) - Min( RRSe ,MUR ) ) + RMSe ) / ( MLU / MUM ) )", "obj1": 0.4522417153996101, "obj2": 0.5499394956425064}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUC - CS ) * RRSe ),RCSe ) - ( RCSe / CS ) )", "obj1": 0.38596491228070173, "obj2": 0.616013728683794}, {"determining": "( ( BR / MDR ) - Max( RRS,CRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ) / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.46393762183235865, "obj2": 0.5376486577459901}, {"determining": "( ( ( ACS - AMS ) - ( Min( BR ,( FirstVNF_RAM * AMS ) ) - CRS ) ) + Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.36633410212949796}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,AMS ) + FirstVNF_Mem_Server ) - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / RRS ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( Min( ( CS * MLU ) ,CS ),( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.5029239766081871, "obj2": 0.47638300645554194}, {"determining": "Min( ( ( BR / MDR ) - Max( RRS,MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) - ( RCSe / MLU ) )", "obj1": 0.6569200779727096, "obj2": 0.30440081414995607}, {"determining": "Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * CS ) )", "obj1": 0.6276803118908382, "obj2": 0.3867107305969836}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.48927875243664715, "obj2": 0.47758311474633003}, {"determining": "Min( ( ARS * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) )", "choosing": "( ( MUR / ( MUC - RRSe ) ) * ( Min( ( ( Max( RMSe,DS ) / ( RMSe + ( ( MLU * MUM ) / ( RCSe / MLU ) ) ) ) - ( CS + ( MLU + ( ( MLU * DS ) * ( CS * MUC ) ) ) ) ) ,( ( MUC * Max( RRSe,Min( MUM ,MUM ) ) ) + ( RCSe - RCSe ) ) ) * DS ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( FirstVNF_RAM / ACS ) - Max( Const,( Const / RRS ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,Max( MUR,Max( Max( ( MLU / MLU ),MUC ),( ( ( MUM * ( ( MUR * CS ) + ( MUM + CS ) ) ) - RRSe ) - RRSe ) ) ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051844}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6267188009561456}, {"determining": "Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * CS ) )", "obj1": 0.6276803118908382, "obj2": 0.3867107305969836}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( MUM - MLU ) / ( RMSe / MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.641041848673568}, {"determining": "Min( ( ( FirstVNF_CPU * MDR ) - FirstVNF_RAM ) ,Max( BR,FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RCSe * RMSe ) * ( RMSe / MUC ) ) / ( MUM - MUR ) ) ,( Max( Max( CS,RMSe ),( RRSe / RRSe ) ) - Min( Min( MUM ,RCSe ) ,( DS / CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "( ( Min( MRS ,AMS ) / MDR ) - FirstVNF_CPU_Server )", "choosing": "( Max( ( MLU / ( ( MUC - ( ( Min( RRSe ,RRSe ) / ( MUM * MUC ) ) / ( RMSe + ( MUM * CS ) ) ) ) + MLU ) ),( RMSe + RMSe ) ) / MUC )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,( Const + FirstVNF_RAM_Server ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3391812865497076, "obj2": 0.6619851960965369}, {"determining": "( ( FirstVNF_RAM / ACS ) - Max( Const,( Const / RRS ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,Max( MUR,Max( Max( ( MLU / MLU ),MUC ),( ( ( MUM * ( ( MUR * CS ) + ( MUM + CS ) ) ) - RRSe ) - RRSe ) ) ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051844}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MRS - MRS ) ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( CS / MLU ) ) - CS ) ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.48927875243664715, "obj2": 0.47758311474633003}, {"determining": "( Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / Max( ACS,FirstVNF_RAM_Server ) ) + CRS ) ) - Min( Max( Const,( Min( BR ,FirstVNF_CPU ) * ( FirstVNF_CPU * RRS ) ) ) ,( FirstVNF_RAM * ARS ) ) )", "choosing": "( ( ( CS / DS ) / ( ( MUC * MUC ) + ( Min( ( Min( ( MUC / MUM ) ,RCSe ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) ) ) / ( Max( MUC,MUC ) + ( RMSe / MUM ) ) )", "obj1": 0.9902534113060428, "obj2": 0.0047234186254924496}, {"determining": "Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) )", "choosing": "( ( ( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) ) * MUC ) / ( MLU / MUM ) )", "obj1": 0.6296296296296297, "obj2": 0.38481049724144173}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( RCSe * MUC ) / ( MLU / MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( BR / Max( PN,FirstVNF_CPU ) ) - Max( Const,ACS ) )", "choosing": "( Max( ( MLU / Min( CS ,( Max( ( CS / MUR ),RRSe ) - ( DS / ( ( MUR * DS ) + CS ) ) ) ) ),( RMSe + RMSe ) ) / ( CS / RMSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( MRS - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6702620331209699}, {"determining": "Min( ( PN + ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS * MDR ) ) ) ,( FirstVNF_CPU - FirstVNF_RAM ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * ( MLU * RRSe ) ) )", "obj1": 0.6296296296296297, "obj2": 0.38481049724144173}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( Min( FirstVNF_CPU_Server ,Max( FirstVNF_Mem_Server,( ACS * ( RRS - PN ) ) ) ) * Max( PN,DDR ) )", "choosing": "( ( ( MUC / ( ( MUR - Max( MUR,MLU ) ) - MUR ) ) - Min( DS ,MUM ) ) * Min( ( MUM / CS ) ,( ( RMSe + RRSe ) * CS ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7147124992495397}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ACS ) - RRS ) + Max( CRS,PN ) ) * ARS )", "choosing": "( ( MUM + Min( ( RMSe / Max( Max( ( MUM - MLU ),RRSe ),RCSe ) ) ,CS ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.290448343079922, "obj2": 0.7176749237007481}, {"determining": "Min( ( PN - ( PN - MRS ) ) ,Max( RRS,( BR + FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( MLU ,MLU ) )", "obj1": 0.31968810916179335, "obj2": 0.6814919592662911}, {"determining": "( ARS * ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) )", "obj1": 0.30214424951267055, "obj2": 0.7024768161240765}, {"determining": "Max( ( ( RRS - FirstVNF_RAM ) / FirstVNF_CPU ),( ( PN / AMS ) * ( AMS - Const ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( MLU ,RMSe ) ) * ( ( CS * MUM ) + ( DS - MLU ) ) ) / Max( ( Min( MUM ,DS ) - ( MLU / MUC ) ),Min( ( MUM + RCSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "( ( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( MUR / MLU ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "Min( ( Min( FirstVNF_CPU ,MDR ) - FirstVNF_RAM ) ,( CRS + Max( ( FirstVNF_Mem / MRS ),( PN + FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( Max( Min( CS ,( ( RMSe / Min( MLU ,MLU ) ) + CS ) ),RCSe ) * DS ),( Min( RMSe ,MUR ) - Max( DS,MUR ) ) )", "obj1": 0.9883040935672515, "obj2": 0.014127554426879609}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "Min( ( DS * CS ) ,( MLU + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) ,Min( FirstVNF_RAM ,ARS ) )", "choosing": "( Min( ( MLU - MUC ) ,( RCSe * CS ) ) + ( ( MLU + DS ) / Max( Min( Max( RMSe,CS ) ,( CS - RCSe ) ),MUM ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6776393967666859}, {"determining": "( Max( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_RAM - MDR ) ),( Max( BR,FirstVNF_Mem_Server ) - Max( RRS,MDR ) ) ) / ( ( CRS - FirstVNF_RAM ) + RRS ) )", "choosing": "( ( ( RCSe - MLU ) + MUM ) + ( ( ( MLU + MUR ) + Min( MLU ,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7237960495874525}, {"determining": "( ( MRS - PN ) * ( ( ARS - RRS ) - Max( DDR,ARS ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + CS ) ) / ( MUC + CS ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) ,Min( FirstVNF_RAM ,ARS ) )", "choosing": "( Min( ( MLU - MUC ) ,( RCSe * CS ) ) + ( ( MLU + DS ) / Max( Min( Max( RMSe,CS ) ,( CS - RCSe ) ),MUM ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6875487210706616}, {"determining": "( ARS * ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( MUC ,MUC ) * Min( MUC ,MLU ) )", "obj1": 0.31773879142300193, "obj2": 0.685517629862225}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUR,MUR ) - ( RMSe - MUM ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / Min( Const ,MDR ) )", "choosing": "( ( MUM * CS ) / Max( DS,CS ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "Min( Max( DDR,Max( ( DDR / ( RRS * ( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) ) ),ACS ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( ( MUR - MUR ) - Max( Min( RRSe ,DS ),CS ) )", "obj1": 0.31189083820662766, "obj2": 0.6900663217530663}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.30994152046783624, "obj2": 0.693045725533484}, {"determining": "( Min( FirstVNF_CPU_Server ,MRS ) * Max( PN,DDR ) )", "choosing": "Max( ( Max( Min( CS ,CS ),RCSe ) * DS ),( Min( RMSe ,MUR ) - Max( MUR,RCSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7147124992495397}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS * CS ) + ( RCSe + MLU ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( ( ( ACS / Min( CRS ,CRS ) ) + ( ARS / FirstVNF_CPU ) ) + ( MRS + ARS ) )", "choosing": "( ( MUM * CS ) / Max( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ),CS ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "Min( ( DDR * Max( ( AMS / FirstVNF_Mem ),ACS ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( Max( ( ( ( RRSe - ( Max( CS,RCSe ) * MUR ) ) * RRSe ) - MUM ),RCSe ),CS ) - ( RCSe / RCSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6900663217530663}, {"determining": "( ARS * ( FirstVNF_RAM_Server * BR ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.31773879142300193, "obj2": 0.685517629862225}, {"determining": "Max( ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) + ( ARS * MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7029926582875677}, {"determining": "( ( PN - Max( FirstVNF_CPU,( FirstVNF_CPU / Max( CRS,FirstVNF_RAM ) ) ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( ACS - BR ) ) )", "choosing": "( ( ( CS + MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - ( MUR / ( RCSe - MUR ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Max( Max( MUC,RRSe ),Max( CS,RCSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.30994152046783624, "obj2": 0.693045725533484}, {"determining": "Max( ( BR * FirstVNF_CPU_Server ),Min( FirstVNF_Mem_Server ,BR ) )", "choosing": "Min( ( Min( MUC ,MUC ) * Min( MUC ,MLU ) ) ,Min( MUM ,MLU ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) + ( ARS * MDR ) )", "choosing": "( ( ( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) ) * MUC ) / ( MLU / MUM ) )", "obj1": 0.3001949317738791, "obj2": 0.7029926582875677}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "( ( ( MUM / CS ) - DS ) * ( RCSe * ( RMSe / RMSe ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6811070135556356}, {"determining": "( ( ( ACS / Min( CRS ,CRS ) ) + ( ARS / FirstVNF_CPU ) ) + ( MRS + ARS ) )", "choosing": "Min( ( ( ( CS / RRSe ) * ( CS + DS ) ) + Max( ( MUM - MUC ),Max( CS,RMSe ) ) ) ,( ( ( RCSe - CS ) - ( MUC * RCSe ) ) - ( ( RMSe * DS ) - ( MUM / MUM ) ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "Min( ( PN - FirstVNF_CPU ) ,Max( RRS,( BR + FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RRSe ) - ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * RMSe ) - Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / RRS ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( MUR,( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ( ARS - Min( BR ,FirstVNF_Mem_Server ) ) ) - Max( ( CRS * MDR ),FirstVNF_RAM_Server ) ) - Max( CRS,PN ) ) * ( ( FirstVNF_CPU_Server - MDR ) * Min( BR ,AMS ) ) )", "choosing": "( ( Min( ( MUC / ( ( Max( RCSe,( RMSe * RMSe ) ) / RMSe ) + MUM ) ) ,CS ) * MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,PN ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM + ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) - ( MRS * FirstVNF_Mem ) ) )", "choosing": "( ( CS / MUM ) * ( MLU * Max( ( MLU * ( CS + MUM ) ),( RCSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - MRS ) * ( FirstVNF_RAM_Server / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) / ( MUR * MLU ) ) - ( RCSe + RCSe ) ) / ( Max( MUM,MUR ) + Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( CRS / CRS ) - ( Max( Min( Min( Min( FirstVNF_Mem_Server ,( ARS - Const ) ) ,( ARS + AMS ) ) ,ACS ),FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( ( ( MUR * Min( RMSe ,RCSe ) ) / ( ( ( MUR * ( ( MUC + MUM ) - RCSe ) ) / ( ( ( RCSe / MLU ) + MUM ) / MUR ) ) * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ACS,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + ( DS / RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,( CRS + MDR ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( RMSe * Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( ( ARS * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) / Const ),Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR / RRSe ) + ( RMSe - RMSe ) ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MRS - MRS ) ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( CS / MLU ) ) - CS ) ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( MLU - MLU ) - ( RRSe + RRSe ) ) * ( ( DS / RMSe ) - ( MUM * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( PN - FirstVNF_Mem_Server ) ,( CRS * ACS ) ) * Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU,BR ) ) ) * ( Min( ( MDR / AMS ) ,( AMS / FirstVNF_Mem_Server ) ) / Min( Min( AMS ,CRS ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( MUC,( Min( DS ,MLU ) / ( DS * RCSe ) ) ) - Min( ( MLU - RRSe ) ,( RCSe * Min( RMSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( Const ,FirstVNF_CPU_Server ) / ( AMS + AMS ) ) - Min( ( PN * MRS ) ,( FirstVNF_CPU * Const ) ) ) - Max( Min( Max( ARS,PN ) ,Max( MRS,FirstVNF_CPU ) ),( ( FirstVNF_RAM_Server / MDR ) / Max( FirstVNF_Mem_Server,MDR ) ) ) )", "choosing": "Min( ( Min( Min( MUC ,MUR ) ,( RMSe * RRSe ) ) + ( Min( MUM ,RRSe ) + Min( RMSe ,DS ) ) ) ,Max( ( Min( CS ,MUM ) / ( RCSe - MUR ) ),( Max( MUC,CS ) - ( MLU + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Min( ( ( BR - MRS ) / ARS ) ,MDR ) ),Min( ( BR - FirstVNF_CPU_Server ) ,( BR + PN ) ) )", "choosing": "Min( ( Max( RRSe,RRSe ) + RCSe ) ,Max( Max( Max( Max( ( Max( ( MUC / DS ),( RMSe + DS ) ) + RRSe ),RMSe ),MUR ),CS ),Min( RMSe ,RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "( Min( CS ,RMSe ) / Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + RRS ) + FirstVNF_RAM ) )", "choosing": "Max( ( RMSe + MUM ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU - FirstVNF_CPU ) - ( AMS * ACS ) )", "choosing": "( Max( Min( CS ,( Max( RMSe,( MUR + ( MUC - RCSe ) ) ) * MLU ) ),MLU ) * ( RMSe / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS - AMS ) - ( Min( BR ,( FirstVNF_RAM * AMS ) ) - CRS ) ) + ( Min( RRS ,PN ) - Max( ( Max( ( DDR * DDR ),FirstVNF_CPU_Server ) * Max( FirstVNF_Mem,MRS ) ),PN ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_RAM ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( Max( MUM,MUR ) + Max( MLU,MUR ) ) / ( ( RCSe - DS ) - ( RCSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - ARS ) * ( FirstVNF_RAM_Server * ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - AMS ) ,( ACS / ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( MUC + Max( CS,Min( Max( MUC,CS ) ,MLU ) ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU_Server / Const ) )", "choosing": "( ( RCSe * ( ( RRSe * MUM ) / DS ) ) * ( RCSe - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_RAM ,CRS ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) ) ,CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( CS + Max( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Min( FirstVNF_RAM ,FirstVNF_CPU ) ,Min( FirstVNF_Mem_Server ,ARS ) ) / CRS ) - ( PN - MRS ) )", "choosing": "Max( ( Max( Min( CS ,( ( RRSe * ( RRSe + MUR ) ) + CS ) ),DS ) * DS ),( Min( Min( CS ,DS ) ,MUR ) - Max( DS,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + FirstVNF_RAM ) )", "choosing": "( ( CS + DS ) / ( RRSe + ( RMSe / CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MRS - MRS ) ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( CS / MLU ) ) - CS ) ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) )", "choosing": "Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( ( CS / RMSe ) / Min( MLU ,CS ) ) ) * ( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,PN ) ) * ( ( RRS - ARS ) - ( ARS / FirstVNF_CPU ) ) )", "choosing": "( ( MLU / RRSe ) / ( Max( ( MUM - MLU ),MLU ) + ( MUM * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( ( RRS * MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / ( MDR + MRS ) )", "choosing": "( Min( RRSe ,Min( RMSe ,MUM ) ) + Max( DS,CS ) )", "obj1": 0.2807017543859649, "obj2": 0.7292727100468933}, {"determining": "( ( MDR - CRS ) * ( ( ( MRS / ( Const + Max( ACS,FirstVNF_Mem_Server ) ) ) - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR - MUC ),Min( ( MUM * ( ( ( MUM - MUM ) / ( Min( DS ,MUR ) + Min( RMSe ,DS ) ) ) * MUR ) ) ,RRSe ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934402}, {"determining": "Min( ( PN + ( Max( FirstVNF_CPU_Server,ACS ) + ( ARS * MDR ) ) ) ,( FirstVNF_CPU - Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * ( MLU * Min( MLU ,CS ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.2948679545365181}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - ( ( RCSe * ( RMSe / RMSe ) ) * ( RCSe - DS ) ) ),MUM ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.5263157894736842, "obj2": 0.4363227525795966}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,MUM ) / ( DS - ( ( ( Min( CS ,DS ) - CS ) * MUM ) - ( ( MUM - MUR ) + MLU ) ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.47717954809446056}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) + ( ARS * MDR ) )", "choosing": "( Max( ( MLU / MUC ),( Max( ( MUC - MUM ),MUC ) + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.834307992202729, "obj2": 0.12455846876194347}, {"determining": "( ( ( ACS - AMS ) - ( ( ( MRS - ( Min( ( FirstVNF_Mem - ARS ) ,( FirstVNF_CPU - ACS ) ) - ACS ) ) / FirstVNF_CPU_Server ) - CRS ) ) + Min( ( PN / ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,( ( CS + MLU ) / ( MUR * MLU ) ) ) + Min( ( RRSe + Min( RRSe ,Max( MUC,( MUC / DS ) ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.6198830409356725, "obj2": 0.3957130922382665}, {"determining": "Min( ( ( FirstVNF_Mem_Server / MDR ) - ( BR + CRS ) ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MUC ),( MLU * RRSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS - MUM ) )", "obj1": 0.5672514619883041, "obj2": 0.423769861360176}, {"determining": "( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.8440545808966862, "obj2": 0.10967041903404157}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( RMSe + RMSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5807970827586881}, {"determining": "( FirstVNF_CPU - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( RCSe,( MUC + CS ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.9200779727095516, "obj2": 0.08930236701230727}, {"determining": "Min( Min( MRS ,FirstVNF_Mem ) ,( MDR / ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( MLU - MUC ),( RMSe + RMSe ) ) / Max( DS,MUR ) ) * ( DS * MUR ) )", "obj1": 0.7992202729044834, "obj2": 0.16772694739284763}, {"determining": "( ( BR / MDR ) - Max( RRS,CRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ) / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.46393762183235865, "obj2": 0.5376486577459901}, {"determining": "Min( ( ( BR / MDR ) - DDR ) ,Min( FirstVNF_RAM ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( Min( ( ( MLU - ( MUM - MUC ) ) - RMSe ) ,DS ) * CS ) )", "obj1": 0.8011695906432749, "obj2": 0.16512068642143196}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUC - CS ) * RRSe ),RCSe ) - ( RCSe / CS ) )", "obj1": 0.38596491228070173, "obj2": 0.616013728683794}, {"determining": "( ( BR / MDR ) - Min( ( PN - ( PN - MRS ) ) ,Max( RRS,( BR + FirstVNF_RAM ) ) ) )", "choosing": "( ( Min( DS ,RRSe ) - Min( MLU ,MLU ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5717096857282528}, {"determining": "Min( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( DDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.6549707602339181, "obj2": 0.3028202965493492}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( ARS * MDR ) )", "choosing": "( ( Min( ( MUC / Max( CS,( MUM / MUC ) ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.4444444444444444, "obj2": 0.5498375765256001}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ACS - AMS ) - ( Min( BR ,( FirstVNF_RAM * AMS ) ) - CRS ) ) + Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.36633410212949796}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,AMS ) + FirstVNF_Mem_Server ) - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / RRS ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( Min( ( CS * MLU ) ,CS ),( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.5029239766081871, "obj2": 0.47638300645554194}, {"determining": "( ( FirstVNF_RAM / ACS ) - Max( Const,( Const / RRS ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,Max( MUR,Max( Max( ( MLU / MLU ),MUC ),( ( ( MUM * ( ( MUR * CS ) + ( MUM + CS ) ) ) - RRSe ) - RRSe ) ) ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051844}, {"determining": "( ( ARS * MDR ) + ( ( BR / ( FirstVNF_CPU_Server + Min( ARS ,RRS ) ) ) - Max( RRS,FirstVNF_CPU ) ) )", "choosing": "( ( MLU / MUC ) / ( Min( ( RCSe + ( MUR - DS ) ) ,MUM ) / MUC ) )", "obj1": 0.5614035087719298, "obj2": 0.4332253694959665}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( FirstVNF_CPU / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( Max( RCSe,( MUC + CS ) ) - RCSe ),MUM ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9766081871345029, "obj2": 0.010500052179447956}, {"determining": "( MDR - ( ( ( FirstVNF_CPU - DDR ) - Min( RRS ,ACS ) ) / MDR ) )", "choosing": "( Max( MUM,( ( MUC - RRSe ) - RCSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( CS ,MLU ) ) )", "obj1": 0.6686159844054581, "obj2": 0.2996715972813195}, {"determining": "Min( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ,Max( RRS,( BR + FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) - Min( MLU ,MLU ) )", "obj1": 0.6296296296296297, "obj2": 0.38481049724144156}, {"determining": "( ( ( ACS - AMS ) - ( Min( BR ,( FirstVNF_RAM * AMS ) ) - CRS ) ) + Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.6510721247563352, "obj2": 0.3672352723914517}, {"determining": "( Max( ( ( Max( RRS,CRS ) / Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ),CRS ) - Min( MRS ,( RRS + DDR ) ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS * RRSe ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9551656920077972, "obj2": 0.02284265827222753}, {"determining": "( ( ( FirstVNF_Mem_Server * Const ) * ( RRS * ( BR - BR ) ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( ARS / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MUM + ( MUR - ( ( Min( RMSe ,Max( RCSe,RMSe ) ) * MLU ) / RRSe ) ) ),MUC )", "obj1": 0.8440545808966862, "obj2": 0.10967041903404157}, {"determining": "( ( BR / MDR ) - Max( RRS,CRS ) )", "choosing": "( Max( ( MLU / Min( CS ,( Max( ( CS / MUR ),RRSe ) - ( DS / ( ( MUR * DS ) + CS ) ) ) ) ),( RMSe + RMSe ) ) / ( CS / RMSe ) )", "obj1": 0.46393762183235865, "obj2": 0.5376486577459901}, {"determining": "( ( FirstVNF_RAM / ACS ) - Max( Const,( Const / RRS ) ) )", "choosing": "Max( ( MUM - RMSe ),( MUR / MLU ) )", "obj1": 0.9220272904483431, "obj2": 0.08166433256051844}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,AMS ) + FirstVNF_Mem_Server ) - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / RRS ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "Min( ( Max( RRSe,RRSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 0.5029239766081871, "obj2": 0.47638300645554194}, {"determining": "Min( ( ARS * FirstVNF_Mem ) ,( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) )", "choosing": "( ( MUR / ( MUC - RRSe ) ) * ( Min( ( ( Max( RMSe,DS ) / ( RMSe + ( ( MLU * MUM ) / ( RCSe / MLU ) ) ) ) - ( CS + ( MLU + ( ( MLU * DS ) * ( CS * MUC ) ) ) ) ) ,( ( MUC * Max( RRSe,Min( MUM ,MUM ) ) ) + ( RCSe - RCSe ) ) ) * DS ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( FirstVNF_CPU - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( RCSe,( MUC + CS ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.9200779727095516, "obj2": 0.08930236701230727}, {"determining": "( ARS * ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( Max( RRSe,RMSe ) ,MUC ) * Min( MUC ,MLU ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( MUC + Max( CS,Min( Max( MUC,CS ) ,MLU ) ) ) ,RRSe ) )", "obj1": 0.3391812865497076, "obj2": 0.6619851960965369}, {"determining": "( Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / Max( ACS,FirstVNF_RAM_Server ) ) + CRS ) ) - Min( Max( Const,( Min( BR ,FirstVNF_CPU ) * ( FirstVNF_CPU * RRS ) ) ) ,( FirstVNF_RAM * ARS ) ) )", "choosing": "( ( ( CS / DS ) / ( ( MUC * MUC ) + ( Min( ( Min( ( MUC / MUM ) ,RCSe ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) ) ) / ( Max( MUC,MUC ) + ( RMSe / MUM ) ) )", "obj1": 0.9902534113060428, "obj2": 0.0047234186254924496}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,( Const + FirstVNF_RAM_Server ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3391812865497076, "obj2": 0.6619851960965369}, {"determining": "( ( MRS - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6702620331209699}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( Max( MUC,Max( RMSe,MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3742690058479532, "obj2": 0.6304735993473379}, {"determining": "Max( ( PN / ( BR - Max( RRS,( BR + FirstVNF_RAM ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( MUM - MLU ) / ( RCSe / RMSe ) )", "obj1": 0.3645224171539961, "obj2": 0.6359750385954949}, {"determining": "Max( Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * Max( FirstVNF_Mem_Server,( AMS - FirstVNF_Mem ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( CS + DS ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9902534113060428, "obj2": 0.0047234186254924496}, {"determining": "( ARS * ( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,( MLU + RMSe ) ) )", "obj1": 0.3684210526315789, "obj2": 0.6349598435476402}, {"determining": "Max( ( FirstVNF_Mem / ( BR - ( ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ACS ) - DDR ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6444833293392462}, {"determining": "( Max( BR,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) - MDR )", "choosing": "( Max( ( MLU / MUC ),( RMSe / RMSe ) ) / ( Max( CS,Min( Min( MUC ,CS ) ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.6608187134502924, "obj2": 0.3016245471081389}, {"determining": "Min( ( RRS + AMS ) ,( ACS / ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( Min( Max( MUR,( MUC + CS ) ) ,RRSe ) - Min( ( MUC + Max( CS,Min( Max( MUC,CS ) ,MLU ) ) ) ,RRSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6784646301315368}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( MUR,( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.3762183235867446, "obj2": 0.6267188009561456}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_Mem_Server ) ) + PN ) - ( Min( Max( PN,FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ) - ( Min( DDR ,AMS ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( Max( ( RMSe * MUR ),( RCSe - DS ) ) - RRSe ) ,( Max( Max( ( RMSe - RRSe ),RRSe ),Min( MUC ,RRSe ) ) + MUC ) ) / Max( Min( RRSe ,MUC ),Min( MUC ,MUM ) ) ) ,( RRSe - CS ) )", "obj1": 0.3138401559454191, "obj2": 0.6843375102432491}, {"determining": "( ( BR / MDR ) - MDR )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.6686159844054581, "obj2": 0.2996715972813195}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.3762183235867446, "obj2": 0.6267188009561456}, {"determining": "( ( Min( MRS ,AMS ) / MDR ) - FirstVNF_CPU_Server )", "choosing": "( Max( ( MLU / ( ( MUC - ( ( Min( RRSe ,RRSe ) / ( MUM * MUC ) ) / ( RMSe + ( MUM * CS ) ) ) ) + MLU ) ),( RMSe + RMSe ) ) / MUC )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) )", "choosing": "Min( Max( MUM,RMSe ) ,Min( MUM ,MLU ) )", "obj1": 0.6276803118908382, "obj2": 0.3867107305969836}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS * CS ) + ( RCSe + MLU ) )", "obj1": 0.31968810916179335, "obj2": 0.6814919592662911}, {"determining": "Min( Max( DDR,Max( ( DDR / ( RRS * ( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) ) ),ACS ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( ( MUR - MUR ) - Max( Min( RRSe ,DS ),CS ) )", "obj1": 0.2962962962962963, "obj2": 0.7087640836575968}, {"determining": "( ( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU_Server / Const ) ) * ( FirstVNF_RAM_Server * BR ) )", "choosing": "( Min( Max( ( RCSe - DS ),RMSe ) ,MUC ) * Min( MUC ,MLU ) )", "obj1": 0.30409356725146197, "obj2": 0.6976558477930722}, {"determining": "Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * CS ) )", "obj1": 0.6276803118908382, "obj2": 0.3867107305969836}, {"determining": "Min( ( ( RRS * ( ( ( ( FirstVNF_Mem * ( ARS / FirstVNF_Mem ) ) / ACS ) * CRS ) * FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ,Max( MDR,MDR ) )", "choosing": "( Min( Min( Max( ( MUM / Max( Min( CS ,MLU ),MUR ) ),RRSe ) ,( DS / CS ) ) ,MLU ) - CS )", "obj1": 0.30994152046783624, "obj2": 0.6894948266747633}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "Min( ( DS * CS ) ,Max( MUM,RMSe ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.3586744639376218, "obj2": 0.641041848673568}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ARS * ( FirstVNF_RAM_Server * BR ) ) )", "choosing": "( ( RCSe * ( ( RRSe * MUM ) / DS ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.30214424951267055, "obj2": 0.7015760549667386}, {"determining": "( ( Max( DDR,CRS ) - Max( CRS,MDR ) ) + ( ARS * DDR ) )", "choosing": "( ( ( ( ( Max( DS,( Min( MLU ,CS ) - Min( MLU ,DS ) ) ) + Max( MUR,( ( CS + MUC ) * RCSe ) ) ) + ( MUR * ( MUR - DS ) ) ) - Max( CS,( ( Min( MUM ,( MLU + MUR ) ) + MUM ) / ( RMSe / ( ( MUC / CS ) + DS ) ) ) ) ) + RMSe ) / ( MLU / MUM ) )", "obj1": 0.31189083820662766, "obj2": 0.6863765528013843}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( MUM - MLU ) / ( RMSe / MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.641041848673568}, {"determining": "Min( ( PN - ( PN - MRS ) ) ,Max( RRS,( BR + FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( MLU ,MLU ) )", "obj1": 0.31968810916179335, "obj2": 0.6814919592662911}, {"determining": "Min( Max( DDR,Max( ( DDR / ( Min( Max( ARS,Const ) ,RRS ) * ( FirstVNF_CPU - ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - FirstVNF_Mem ) ) ) ),ACS ) ) ,Min( MRS ,FirstVNF_RAM ) )", "choosing": "( ( MUR - MUR ) - ( ( ( ( ( DS + Max( MUC,RRSe ) ) - RCSe ) - MLU ) + MUM ) / RRSe ) )", "obj1": 0.2962962962962963, "obj2": 0.7087640836575968}, {"determining": "( ( ( FirstVNF_Mem_Server * Max( AMS,( ARS + FirstVNF_RAM_Server ) ) ) * ( ARS * CRS ) ) / ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( RMSe + ( MLU / CS ) ),MUC )", "obj1": 0.3333333333333333, "obj2": 0.6732318620840153}, {"determining": "Max( ( ( RRS - FirstVNF_RAM ) / FirstVNF_CPU ),( ( PN / AMS ) * ( AMS - Const ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( MLU ,RMSe ) ) * ( ( CS * MUM ) + ( DS - MLU ) ) ) / Max( ( Min( MUM ,DS ) - ( MLU / MUC ) ),Min( ( MUM + RCSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) ,Min( FirstVNF_RAM ,ARS ) )", "choosing": "( Min( ( MLU - MUC ) ,( RCSe * CS ) ) + ( ( MLU + DS ) / Max( Min( Max( RMSe,CS ) ,( CS - RCSe ) ),MUM ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6776393967666859}, {"determining": "Min( Min( MDR ,MDR ) ,( ( BR / Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ) - Max( RRS,MDR ) ) )", "choosing": "Min( Min( MLU ,( RCSe + MLU ) ) ,( Min( Max( RCSe,RCSe ) ,MUC ) * Max( MUC,MUR ) ) )", "obj1": 0.6569200779727096, "obj2": 0.30234928668507494}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Min( AMS ,FirstVNF_CPU_Server ) / Min( Const ,MDR ) )", "choosing": "( ( MUM * CS ) / Max( DS,CS ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) + ( ARS * MDR ) )", "choosing": "Max( ( MUC - MUM ),MUC )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( Max( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_RAM - MDR ) ),( Max( BR,FirstVNF_Mem_Server ) - Max( RRS,MDR ) ) ) / ( ( CRS - FirstVNF_RAM ) + RRS ) )", "choosing": "( ( ( RCSe - MLU ) + MUM ) + ( ( ( MLU + MUR ) + Min( MLU ,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7237960495874525}, {"determining": "( ( MRS - PN ) * ( ( ARS - RRS ) - Max( DDR,ARS ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + CS ) ) / ( MUC + CS ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( FirstVNF_RAM_Server - Const ) / Max( Max( ( FirstVNF_CPU * BR ),DDR ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Max( ( MUM - ( MUR + ( MUC / CS ) ) ),RRSe )", "obj1": 0.28460038986354774, "obj2": 0.7237960495874525}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS * CS ) + ( RCSe + MLU ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "Min( ( PN - ( FirstVNF_Mem_Server - PN ) ) ,Max( RRS,Max( BR,RRS ) ) )", "choosing": "( ( DS / Max( Max( RMSe,CS ),Min( RMSe ,RCSe ) ) ) - Min( MLU ,MLU ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.2826510721247563, "obj2": 0.7267380218336701}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) + ( ARS * MDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7029926582875677}, {"determining": "( Max( FirstVNF_CPU_Server,ACS ) + ( ARS * MDR ) )", "choosing": "( ( MUM + Min( ( RMSe / Max( Max( ( MUM - MLU ),RRSe ),RCSe ) ) ,CS ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7029926582875677}, {"determining": "( ( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( MUR / MLU ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( ( ACS - AMS ) - ( Min( BR ,( FirstVNF_RAM * AMS ) ) - CRS ) ) + Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( ( ( MUR - RCSe ) * ( ( RMSe - ( CS / MLU ) ) - CS ) ) ,( RRSe * CS ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.36633410212949796}, {"determining": "( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( FirstVNF_Mem_Server / DDR ) * ( BR - ACS ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_CPU ) ,Max( RRS,( BR + FirstVNF_RAM ) ) )", "choosing": "( Min( DS ,RRSe ) - ( RCSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,DDR ) - ( FirstVNF_RAM_Server - ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * RMSe ) - Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MDR ,RRS ) - ( FirstVNF_CPU * AMS ) )", "choosing": "Min( Max( RRSe,MUC ) ,( MUR * MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / RRS ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( MUR,( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + ( ARS - Min( BR ,FirstVNF_Mem_Server ) ) ) - Max( ( CRS * MDR ),FirstVNF_RAM_Server ) ) - Max( CRS,PN ) ) * ( ( FirstVNF_CPU_Server - MDR ) * Min( BR ,AMS ) ) )", "choosing": "( ( Min( ( MUC / ( ( Max( RCSe,( RMSe * RMSe ) ) / RMSe ) + MUM ) ) ,CS ) * MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,PN ) ,( MRS + AMS ) ) + ( ( FirstVNF_RAM + ( FirstVNF_RAM / ( FirstVNF_RAM + FirstVNF_RAM_Server ) ) ) - ( MRS * FirstVNF_Mem ) ) )", "choosing": "( ( CS / MUM ) * ( MLU * Max( ( MLU * ( CS + MUM ) ),( RCSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) - Max( BR,FirstVNF_RAM_Server ) ),( ( BR - FirstVNF_CPU_Server ) * ( BR + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS / FirstVNF_Mem ) - MRS ) * ( FirstVNF_RAM_Server / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( CS + MUC ) / ( MUR * MLU ) ) - ( RCSe + RCSe ) ) / ( Max( MUM,MUR ) + Max( MLU,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const + FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( ( CRS / CRS ) - ( Max( Min( Min( Min( FirstVNF_Mem_Server ,( ARS - Const ) ) ,( ARS + AMS ) ) ,ACS ),FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( ( ( MUR * Min( RMSe ,RCSe ) ) / ( ( ( MUR * ( ( MUC + MUM ) - RCSe ) ) / ( ( ( RCSe / MLU ) + MUM ) / MUR ) ) * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,Max( ACS,FirstVNF_CPU ) ) - ( FirstVNF_RAM_Server + ( MDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM - CS ) + ( DS / RRSe ) ) / Min( ( MUC / MUM ) ,( MUM * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem + MDR ) ,RRS ) - Max( RRS,( CRS + MDR ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( RMSe * Max( MUM,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) - Max( MDR,Const ) ) / Max( ( ( ARS * ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) / Const ),Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR / RRSe ) + ( RMSe - RMSe ) ) - ( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "Max( ( FirstVNF_Mem / ( BR - ( ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ACS ) - DDR ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * BR ) / PN ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( AMS + ARS ),( RRS / FirstVNF_CPU_Server ) ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( ( CS / RMSe ) / Min( MLU ,CS ) ) ) * ( DS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ARS + FirstVNF_CPU ),( PN / ( BR - ( ( ( ( FirstVNF_Mem_Server / MDR ) - Const ) - PN ) - DDR ) ) ) )", "choosing": "Min( ( RRSe - RCSe ) ,( RCSe + ( ( RRSe / ( Min( ( MUR / DS ) ,RRSe ) - MUM ) ) / RMSe ) ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( ( MDR - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934402}, {"determining": "( Max( ( BR / MDR ),DDR ) - ( FirstVNF_RAM_Server - ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * RMSe ) - MLU )", "obj1": 0.9103313840155945, "obj2": 0.0625168468041585}, {"determining": "Min( Min( MDR ,MDR ) ,( ( BR / Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ) - Max( RRS,MDR ) ) )", "choosing": "Min( Min( MLU ,( RCSe + MLU ) ) ,( Min( Max( RCSe,RCSe ) ,MUC ) * Max( MUC,MUR ) ) )", "obj1": 0.6666666666666666, "obj2": 0.293462740995951}, {"determining": "Min( Max( ( BR / ( Min( ( FirstVNF_RAM * PN ) ,( CRS * Const ) ) - ( CRS / PN ) ) ),DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MUC ),( Max( ( MUC - MUM ),MUC ) + RMSe ) ) / ( ( RCSe - Max( MLU,MUC ) ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) )", "obj1": 0.8499025341130604, "obj2": 0.10685722814602959}, {"determining": "( ( FirstVNF_Mem + RRS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.621832358674464, "obj2": 0.34208275424882895}, {"determining": "( ( BR / MDR ) + Min( ( FirstVNF_Mem_Server * FirstVNF_RAM ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( ( ( MUR - RCSe ) * ( ( RMSe - ( ( RMSe + RMSe ) / MLU ) ) - CS ) ) ,( RRSe * CS ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.5320096313275049}, {"determining": "Min( Min( MRS ,FirstVNF_Mem ) ,( MDR / ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( MLU - MUC ),( RMSe + RMSe ) ) / Max( DS,MUR ) ) * ( DS * MUR ) )", "obj1": 0.7992202729044834, "obj2": 0.16772694739284763}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4873294346978557, "obj2": 0.4539985300941225}, {"determining": "( ( ( ACS - AMS ) - ( ( ( MRS - ( Min( ( FirstVNF_Mem - ARS ) ,( FirstVNF_CPU - ACS ) ) - ACS ) ) / FirstVNF_CPU_Server ) - CRS ) ) + Min( ( PN / ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,( ( CS + MLU ) / ( MUR * MLU ) ) ) + Min( ( RRSe + Min( RRSe ,Max( MUC,( MUC / DS ) ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.6198830409356725, "obj2": 0.3957130922382665}, {"determining": "( Min( CRS ,( ( FirstVNF_Mem - AMS ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - Max( CS,DS ) ),MUM ) / ( Min( MUR ,( RRSe * MUC ) ) * MLU ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5794469294535602}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MRS - MRS ) ) ) ) ) + ( ( BR / MDR ) - MDR ) ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( CS / ( RMSe + RMSe ) ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.935672514619883, "obj2": 0.035008688978978436}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * CS ) )", "obj1": 0.52046783625731, "obj2": 0.44057316443007116}, {"determining": "( ( MDR - CRS ) * ( ( ( MRS / ( Const + Max( ACS,FirstVNF_Mem_Server ) ) ) - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( Max( ( MUR - MUC ),Min( ( MUM * ( ( ( MUM - MUM ) / ( Min( DS ,MUR ) + Min( RMSe ,DS ) ) ) * MUR ) ) ,RRSe ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934402}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.48148148148148145, "obj2": 0.47717954809446056}, {"determining": "Min( ( MDR / MDR ) ,( ( Min( ACS ,FirstVNF_Mem ) / MDR ) - Max( MDR,RRS ) ) )", "choosing": "Min( Min( MUM ,Max( ( RMSe / ( RMSe * RRSe ) ),MUR ) ) ,( Min( Max( RCSe,RCSe ) ,MUC ) / Min( MUC ,MUR ) ) )", "obj1": 0.6666666666666666, "obj2": 0.293462740995951}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.6413255360623782, "obj2": 0.3263938412830812}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( ARS * MDR ) )", "choosing": "( ( Min( ( MUC / Max( CS,( MUM / MUC ) ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.4444444444444444, "obj2": 0.5498375765256001}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.3996101364522417, "obj2": 0.6139157272135067}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( DS / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.5243664717348928, "obj2": 0.42902392362555597}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ( ( Const * ( ARS / FirstVNF_Mem_Server ) ) / BR ) ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - Min( CRS ,PN ) ) ) + ( ARS * MDR ) )", "choosing": "Min( Max( RRSe,MUC ) ,( ( RMSe * Min( Min( RMSe ,MLU ) ,Max( RRSe,DS ) ) ) * MLU ) )", "obj1": 0.834307992202729, "obj2": 0.12455846876194347}, {"determining": "( ( ( BR / ( FirstVNF_CPU_Server + ( ARS - Min( BR ,FirstVNF_Mem_Server ) ) ) ) - Max( RRS,MDR ) ) + ( ARS * MDR ) )", "choosing": "Max( ( MUM - RMSe ),MUC )", "obj1": 0.557504873294347, "obj2": 0.4272529473904655}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) + ( ARS * MDR ) )", "choosing": "( Max( ( MLU / MUC ),( Max( ( MUC - MUM ),MUC ) + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.834307992202729, "obj2": 0.12455846876194347}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ),( AMS * ( MRS - Const ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( RMSe + RMSe ) / ( Max( DS,MUC ) + ( RCSe / ( MUM / MUC ) ) ) )", "obj1": 0.4191033138401559, "obj2": 0.5666023704417551}, {"determining": "Min( ( ( BR / MDR ) - ( ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * ACS ) ) - CRS ) ) ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUM ) )", "obj1": 0.5672514619883041, "obj2": 0.423769861360176}, {"determining": "Min( ( ( BR / MDR ) - DDR ) ,Min( FirstVNF_RAM ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( Min( ( ( MLU - ( MUM - MUC ) ) - RMSe ) ,DS ) * CS ) )", "obj1": 0.8011695906432749, "obj2": 0.16512068642143196}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,AMS ) + FirstVNF_Mem_Server ) - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / ( PN - ( FirstVNF_Mem_Server - PN ) ) ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( Min( ( CS * MLU ) ,CS ),( MUC + ( MLU - Max( RMSe,CS ) ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5582428636855415}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / Max( RRS,CRS ) ) + CRS ),CRS ) - ( DDR - PN ) )", "choosing": "( Max( ( ( MLU * RRSe ) / Max( DS,DS ) ),( RRSe * RRSe ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.6062378167641326, "obj2": 0.3964965278623745}, {"determining": "( Max( ( ( Max( RRS,CRS ) / Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ),CRS ) - Min( MRS ,( RRS + DDR ) ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS * RRSe ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.6062378167641326, "obj2": 0.3964965278623745}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "Max( ( MUC - MUM ),MUC )", "obj1": 0.6491228070175439, "obj2": 0.31123754131797843}, {"determining": "Min( ( ( FirstVNF_Mem_Server / MDR ) - ( BR + CRS ) ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MUC ),( MLU * RRSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS - MUM ) )", "obj1": 0.5672514619883041, "obj2": 0.423769861360176}, {"determining": "Min( ( ( BR / MDR ) - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) )", "obj1": 0.8011695906432749, "obj2": 0.16512068642143196}, {"determining": "( ( BR / ( PN + ACS ) ) - MDR )", "choosing": "( Max( ( MLU / MUC ),Min( Max( CS,DS ) ,( RRSe * CS ) ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.9629629629629629, "obj2": 0.018513099386168793}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,MUM ) / ( DS - ( ( ( Min( CS ,DS ) - CS ) * MUM ) - ( ( MUM - MUR ) + MLU ) ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.47717954809446056}, {"determining": "( ( BR / MDR ) - ( FirstVNF_RAM + CRS ) )", "choosing": "( Max( ( MLU / Min( CS ,( Max( RRSe,( CS / MUR ) ) - ( DS / ( ( MUR * DS ) + CS ) ) ) ) ),( RMSe + RMSe ) ) / Min( ( RCSe / RMSe ) ,Min( ( MLU / RMSe ) ,( MUM - MUM ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.5376486577459901}, {"determining": "( ( BR / MDR ) - Max( RRS,CRS ) )", "choosing": "( Max( ( ( Min( RMSe ,MUR ) - ( ( RCSe * RCSe ) * RMSe ) ) / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.46393762183235865, "obj2": 0.5376486577459901}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 0.38596491228070173, "obj2": 0.616013728683794}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( RCSe ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9746588693957114, "obj2": 0.01192862014420688}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ,PN ) - Max( Min( ( RRS + AMS ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( CS / MLU ),Min( MUC ,RMSe ) )", "obj1": 0.3391812865497076, "obj2": 0.6619851960965369}, {"determining": "Min( ( DDR - PN ) ,Min( DDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( RMSe * DS ) ,MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "Max( Min( ( Max( BR,FirstVNF_Mem_Server ) * ( ( AMS - FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Max( Max( Max( DS,CS ),RCSe ),( ( RRSe + ( MUM * ( RRSe + DS ) ) ) / MLU ) )", "obj1": 0.3508771929824561, "obj2": 0.6484759770926856}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( MUC + Max( CS,Min( Max( MUC,CS ) ,MLU ) ) ) ,RRSe ) )", "obj1": 0.3391812865497076, "obj2": 0.6619851960965369}, {"determining": "( ( MRS - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6702620331209699}, {"determining": "( ( ( FirstVNF_Mem_Server * Const ) * ( RRS * ( BR - BR ) ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( ARS / Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MUM + ( MUR - ( ( Min( RMSe ,Max( RCSe,RMSe ) ) * MLU ) / RRSe ) ) ),MUC )", "obj1": 0.8440545808966862, "obj2": 0.10967041903404157}, {"determining": "Min( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( DDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.6549707602339181, "obj2": 0.3028202965493492}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / Min( ARS ,FirstVNF_Mem ) ) + ( ARS * MDR ) )", "choosing": "( ( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.2962962962962963, "obj2": 0.707147400077198}, {"determining": "Max( ( PN / ( BR - Max( RRS,( BR + FirstVNF_RAM ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( MUM - MLU ) / ( RCSe / RMSe ) )", "obj1": 0.3684210526315789, "obj2": 0.6308675355209418}, {"determining": "Max( Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.35477582846003897, "obj2": 0.6428551066807904}, {"determining": "Min( ( ( BR / ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ACS ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( DS * MUR ) * Max( ( MUM - RMSe ),( RMSe + ( ( RMSe / RMSe ) / RRSe ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "Min( ( ( BR / AMS ) - Max( ( ARS * Const ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,( Max( ( MLU / MUC ),Min( RMSe ,RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,Max( ( ( DS - RRSe ) * Min( MUC ,CS ) ),MUC ) ),RCSe ) * DS ) ) )", "obj1": 0.6647173489278753, "obj2": 0.2938410910447369}, {"determining": "( ( ( BR / ( FirstVNF_CPU_Server + ( ARS - Min( BR ,FirstVNF_Mem_Server ) ) ) ) - Max( RRS,MDR ) ) + ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) )", "choosing": "( ( MLU / MUC ) / ( MUM - RMSe ) )", "obj1": 0.9805068226120858, "obj2": 0.009400989096251328}, {"determining": "Min( MDR ,Max( RRS,( BR + FirstVNF_RAM ) ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( MLU / MUC ) ) ) - Min( MLU ,MLU ) )", "obj1": 0.29239766081871343, "obj2": 0.7144355516895216}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( Max( ( Min( MUC ,CS ) + Max( RMSe,CS ) ),Min( ( RCSe - MLU ) ,( RMSe - RRSe ) ) ) + ( ( ( MLU + MUR ) + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.6267188009561456}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_Mem_Server ) ) + PN ) - ( Min( Max( PN,FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ) - ( Min( DDR ,AMS ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( Max( ( RMSe * MUR ),( RCSe - DS ) ) - RRSe ) ,( Max( Max( ( RMSe - RRSe ),RRSe ),Min( MUC ,RRSe ) ) + MUC ) ) / Max( Min( RRSe ,MUC ),Min( MUC ,MUM ) ) ) ,( RRSe - CS ) )", "obj1": 0.3138401559454191, "obj2": 0.6843375102432491}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( MUR,( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.3762183235867446, "obj2": 0.6267188009561456}, {"determining": "( ( Min( MRS ,AMS ) / MDR ) - FirstVNF_CPU_Server )", "choosing": "( Max( ( MLU / ( ( MUC - ( ( Min( RRSe ,RRSe ) / ( MUM * MUC ) ) / ( RMSe + ( MUM * CS ) ) ) ) + MLU ) ),( RMSe + RMSe ) ) / MUC )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( Max( MUC,Max( RMSe,MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3742690058479532, "obj2": 0.6304735993473379}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUC - CS ) * RRSe ),RCSe ) - ( RCSe / CS ) )", "obj1": 0.38596491228070173, "obj2": 0.616013728683794}, {"determining": "( Max( BR,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) - MDR )", "choosing": "( Max( ( MLU / MUC ),( RMSe / RMSe ) ) / ( Max( CS,Min( Min( MUC ,CS ) ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.6608187134502924, "obj2": 0.3016245471081389}, {"determining": "Max( ( PN / ( BR - Max( RRS,( BR + FirstVNF_RAM ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( MUM - MLU ) / ( RCSe / RMSe ) )", "obj1": 0.3645224171539961, "obj2": 0.6359750385954949}, {"determining": "( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.8440545808966862, "obj2": 0.10967041903404157}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS * CS ) + ( RCSe + MLU ) )", "obj1": 0.31968810916179335, "obj2": 0.6814919592662911}, {"determining": "Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * ( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( ARS * MDR ) ) ) ) ) )", "choosing": "( ( ( MUC / Max( CS,( MUM / MUC ) ) ) * CS ) + ( RCSe + MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7189537760590059}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( FirstVNF_Mem_Server * Max( FirstVNF_Mem_Server,( AMS - FirstVNF_Mem ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( ( ( Min( RMSe ,RCSe ) * MUR ) / ( ( ( MUR * ( ( MUC + MUM ) - RCSe ) ) / ( MLU - ( Max( DS,MUC ) * ( MUM * CS ) ) ) ) * MLU ) ) - Min( CS ,RMSe ) ) )", "obj1": 0.9902534113060428, "obj2": 0.0047234186254924496}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ARS * ( FirstVNF_RAM_Server * BR ) ) )", "choosing": "( ( RCSe * ( ( RRSe * MUM ) / DS ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.30214424951267055, "obj2": 0.7015760549667386}, {"determining": "( ( Max( DDR,CRS ) - Max( CRS,MDR ) ) + ( ARS * DDR ) )", "choosing": "( ( ( ( ( Max( DS,( Min( MLU ,CS ) - Min( MLU ,DS ) ) ) + Max( MUR,( ( CS + MUC ) * RCSe ) ) ) + ( MUR * ( MUR - DS ) ) ) - Max( CS,( ( Min( MUM ,( MLU + MUR ) ) + MUM ) / ( RMSe / ( ( MUC / CS ) + DS ) ) ) ) ) + RMSe ) / ( MLU / MUM ) )", "obj1": 0.31189083820662766, "obj2": 0.6863765528013843}, {"determining": "Max( ( PN / ( BR - Max( RRS,( BR + FirstVNF_RAM ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( MUM - MLU ) / ( RCSe / RMSe ) )", "obj1": 0.3645224171539961, "obj2": 0.6359750385954949}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.3586744639376218, "obj2": 0.641041848673568}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS * CS ) + ( RCSe + MLU ) )", "obj1": 0.31968810916179335, "obj2": 0.6814919592662911}, {"determining": "Min( ( RRS + AMS ) ,( ACS / ( FirstVNF_Mem_Server - PN ) ) )", "choosing": "( Min( Max( MUR,( MUC + CS ) ) ,RRSe ) - Min( ( MUC + Max( CS,Min( Max( MUC,CS ) ,MLU ) ) ) ,RRSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6784646301315368}, {"determining": "( ( BR / ( FirstVNF_CPU_Server + ( ARS - Min( BR ,FirstVNF_Mem_Server ) ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "( Max( DS,CS ) + ( ( MUM + Max( MLU,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7261934483873657}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MRS - MRS ) ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.9551656920077972, "obj2": 0.02284265827222753}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "( ( ( FirstVNF_Mem_Server * Max( AMS,( ARS + FirstVNF_RAM_Server ) ) ) * ( ARS * CRS ) ) / ( FirstVNF_RAM_Server * BR ) )", "choosing": "Max( ( RMSe + ( MLU / CS ) ),MUC )", "obj1": 0.3333333333333333, "obj2": 0.6732318620840153}, {"determining": "Max( ( ( RRS - FirstVNF_RAM ) / FirstVNF_CPU ),( ( PN / AMS ) * ( AMS - Const ) ) )", "choosing": "( ( ( ( MUR / RCSe ) - Min( MLU ,RMSe ) ) * ( ( CS * MUM ) + ( DS - MLU ) ) ) / Max( ( Min( MUM ,DS ) - ( MLU / MUC ) ),Min( ( MUM + RCSe ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6747551700540056}, {"determining": "( Max( FirstVNF_Mem,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / Max( ACS,FirstVNF_RAM_Server ) ) + CRS ) ) - Min( Max( Const,( Min( BR ,FirstVNF_CPU ) * ( FirstVNF_CPU * RRS ) ) ) ,( FirstVNF_RAM * ARS ) ) )", "choosing": "( ( ( CS / DS ) / ( ( MUC * MUC ) + ( Min( ( Min( ( MUC / MUM ) ,RCSe ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) ) ) / ( Max( MUC,MUC ) + ( RMSe / MUM ) ) )", "obj1": 0.9902534113060428, "obj2": 0.0047234186254924496}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3586744639376218, "obj2": 0.641041848673568}, {"determining": "Min( ( PN - ( FirstVNF_Mem_Server - PN ) ) ,Max( RRS,Max( BR,RRS ) ) )", "choosing": "( ( DS / Max( Max( RMSe,CS ),Min( RMSe ,RCSe ) ) ) - Min( MLU ,MLU ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "Min( Min( MDR ,MDR ) ,( ( BR / Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ) - Max( RRS,MDR ) ) )", "choosing": "Min( Min( MLU ,( RCSe + MLU ) ) ,( Min( Max( RCSe,RCSe ) ,MUC ) * Max( MUC,MUR ) ) )", "obj1": 0.6569200779727096, "obj2": 0.30234928668507494}, {"determining": "Min( ( PN - ( FirstVNF_Mem_Server - PN ) ) ,Max( RRS,Max( BR,RRS ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( Min( ( CS * MLU ) ,CS ),( MUC + ( MLU - RCSe ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( ( ( Max( RRS,CRS ) / Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) ) + CRS ),CRS ) - Min( MRS ,( RRS + DDR ) ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS * RRSe ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9551656920077972, "obj2": 0.02284265827222753}, {"determining": "( ( BR / MDR ) - FirstVNF_CPU_Server )", "choosing": "( ( MUR / RRSe ) * ( DS * MUR ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "Min( ( DS * CS ) ,Max( MUM,RMSe ) )", "obj1": 0.30409356725146197, "obj2": 0.6976558477930722}, {"determining": "( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) )", "choosing": "( Max( MUM,( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.8460038986354775, "obj2": 0.10871440872101246}, {"determining": "( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) )", "choosing": "( ( ( RMSe - RMSe ) + ( Max( Min( RMSe ,( Min( MUR ,Min( RCSe ,MUM ) ) * CS ) ),MUM ) * Max( MUC,Max( ( CS + ( MUR - ( CS + DS ) ) ),DS ) ) ) ) - ( RRSe * CS ) )", "obj1": 0.847953216374269, "obj2": 0.10775839840798333}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( FirstVNF_CPU / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( Max( RCSe,( MUC + CS ) ) - RCSe ),MUM ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9766081871345029, "obj2": 0.010500052179447956}, {"determining": "( RRS + ( ARS * MDR ) )", "choosing": "( Max( ( MLU / MUC ),MLU ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "Min( ( ( BR / MDR ) - DDR ) ,Min( ARS ,FirstVNF_Mem ) )", "choosing": "( ( CS / MUM ) * Min( MUC ,( CS - MLU ) ) )", "obj1": 0.7992202729044834, "obj2": 0.16772694739284763}, {"determining": "Min( ( ( RRS * ( ( ( ( FirstVNF_Mem * ( ARS / FirstVNF_Mem ) ) / ACS ) * CRS ) * FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ,Max( MDR,MDR ) )", "choosing": "( Min( Min( Max( ( MUM / Max( Min( CS ,MLU ),MUR ) ),RRSe ) ,( DS / CS ) ) ,MLU ) - CS )", "obj1": 0.30994152046783624, "obj2": 0.6894948266747633}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( Max( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_RAM - MDR ) ),( Max( BR,FirstVNF_Mem_Server ) - Max( RRS,MDR ) ) ) / ( ( CRS - FirstVNF_RAM ) + RRS ) )", "choosing": "( ( ( RCSe - MLU ) + MUM ) + ( ( ( MLU + MUR ) + Min( MLU ,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7237960495874525}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "( ( MUR / ( MUC - RRSe ) ) * ( Min( ( ( Max( RMSe,DS ) / ( RMSe + ( ( MLU * MUM ) / ( RCSe / MLU ) ) ) ) - ( CS + ( MLU + ( ( MLU * DS ) * ( CS * MUC ) ) ) ) ) ,( ( MUC * Max( RRSe,Min( MUM ,MUM ) ) ) + ( RCSe - RCSe ) ) ) * DS ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}, {"determining": "( ( MRS - PN ) * ( ( ARS - RRS ) - Max( DDR,ARS ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + CS ) ) / ( MUC + CS ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "Max( ( PN / ( BR - Max( RRS,( BR + FirstVNF_RAM ) ) ) ),MDR )", "choosing": "( Max( CS,MUM ) / ( RCSe / RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6784646301315368}, {"determining": "Min( Min( Max( FirstVNF_RAM_Server,ARS ) ,( FirstVNF_RAM_Server + ARS ) ) ,Min( FirstVNF_RAM ,ARS ) )", "choosing": "( Min( ( MLU - MUC ) ,( RCSe * CS ) ) + ( ( MLU + DS ) / Max( Min( Max( RMSe,CS ) ,( CS - RCSe ) ),MUM ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6776393967666859}], "6": [{"determining": "Max( ( FirstVNF_Mem / ( BR - ( ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ACS ) - DDR ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( ( Max( CRS,AMS ) - CRS ) * ( ( ARS - ( MRS / ( MRS + Max( ACS,FirstVNF_Mem_Server ) ) ) ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( ( MUM * ( ( ( MUM - MUM ) / ( Min( DS ,MUR ) + Min( RMSe ,DS ) ) ) * MUR ) ) ,RRSe ),( MUR - MUC ) ) / Min( Max( ( MUM - MLU ),RRSe ) ,( Min( RMSe ,RRSe ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * BR ) / PN ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU + ARS ),( PN / ( ( ACS + FirstVNF_Mem ) - ( ( ( ( FirstVNF_Mem_Server / MDR ) - Const ) - PN ) - DDR ) ) ) )", "choosing": "Min( ( Max( MUR,MUC ) * MLU ) ,( RRSe - RCSe ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( Max( CS,DS ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.8128654970760234, "obj2": 0.10061365936536172}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + ( Max( ( MUC - MUM ),MUC ) + RMSe ) ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.7212475633528265, "obj2": 0.228233418641832}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( PN - DDR ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,( Max( ( MLU / MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MUM ) ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.6705653021442495, "obj2": 0.2912047060890092}, {"determining": "( Max( ( BR / MDR ),DDR ) - ( FirstVNF_RAM_Server - ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * RMSe ) - MLU )", "obj1": 0.9103313840155945, "obj2": 0.0625168468041585}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + Min( ( PN - DDR ) ,Min( ARS ,FirstVNF_Mem ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,MUM ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.5516569200779727, "obj2": 0.4150877865786088}, {"determining": "( Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( MUC + Max( CS,Min( Max( MUC,CS ) ,MLU ) ) ) ,( ( CS / MLU ) - ( MLU * RRSe ) ) ) )", "obj1": 0.4678362573099415, "obj2": 0.5029698634930141}, {"determining": "( ( MDR - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1690738952054365}, {"determining": "Min( Min( MRS ,FirstVNF_Mem ) ,( MDR / ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( MLU - MUC ),( RMSe + RMSe ) ) / Max( DS,MUR ) ) * ( DS * MUR ) )", "obj1": 0.7992202729044834, "obj2": 0.16772694739284763}, {"determining": "( ( MDR / BR ) - ( Max( FirstVNF_CPU_Server,AMS ) * FirstVNF_RAM_Server ) )", "choosing": "( CS - ( MLU + Min( Min( MUM ,Max( RRSe,( MUR / MUC ) ) ) ,( MLU - ( Min( MUC ,Max( DS,( DS / MUM ) ) ) - CS ) ) ) ) )", "obj1": 0.621832358674464, "obj2": 0.34208275424882895}, {"determining": "( ( ( ACS - AMS ) - ( Min( BR ,( FirstVNF_RAM * ( ( ( RRS / FirstVNF_Mem ) - MRS ) * ( AMS - Const ) ) ) ) - CRS ) ) + Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,( ( CS + MUC ) / ( MUR * DS ) ) ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.6198830409356725, "obj2": 0.39571309223826645}, {"determining": "Min( ( ( BR / MDR ) - DDR ) ,Min( FirstVNF_RAM ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( Min( ( ( MLU - ( MUM - MUC ) ) - RMSe ) ,DS ) * CS ) )", "obj1": 0.8011695906432749, "obj2": 0.16512068642143196}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5087719298245614, "obj2": 0.4319227631916463}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * CS ) )", "obj1": 0.4327485380116959, "obj2": 0.521146974902762}, {"determining": "( ( MDR - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934402}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,AMS ) + FirstVNF_Mem_Server ) - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / ( PN - ( FirstVNF_Mem_Server - PN ) ) ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( Min( ( CS * MLU ) ,CS ),( MUC + ( MLU - Max( RMSe,CS ) ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5582428636855415}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / Max( RRS,CRS ) ) + CRS ),CRS ) - ( DDR - PN ) )", "choosing": "( Max( ( ( MLU * RRSe ) / Max( DS,DS ) ),( RRSe * RRSe ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.6062378167641326, "obj2": 0.3964965278623745}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5106400981648529}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( ( DS / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / ( MUR * MLU ) ) ) )", "obj1": 0.3820662768031189, "obj2": 0.6056720011006211}, {"determining": "( Max( Max( MDR,BR ),DDR ) - ( AMS / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( Max( ( MLU / DS ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,( ( DS + ( RRSe * MLU ) ) - RMSe ) ) ) / Min( MLU ,CS ) ) )", "obj1": 0.9103313840155945, "obj2": 0.0625168468041585}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( Max( CS,DS ) ,RRSe )", "obj1": 0.9298245614035088, "obj2": 0.034332552154110976}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.4873294346978557, "obj2": 0.4539985300941225}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5321637426900585, "obj2": 0.4242711134990239}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS * RRSe ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5929604647729003}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.48148148148148145, "obj2": 0.47717954809446056}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / Max( RRS,CRS ) ) + CRS ),CRS ) - ( DDR - PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,MUM ) )", "obj1": 0.6062378167641326, "obj2": 0.3964965278623745}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,MUM ) / ( DS - ( ( ( Min( CS ,DS ) - CS ) * MUM ) - ( ( MUM - MUR ) + MLU ) ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.47717954809446056}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( RMSe + RMSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.41130604288499023, "obj2": 0.5685099655622012}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.6413255360623782, "obj2": 0.3263938412830812}, {"determining": "( ( BR / MDR ) - ( FirstVNF_RAM + CRS ) )", "choosing": "( Max( ( MLU / Min( CS ,( Max( RRSe,( CS / MUR ) ) - ( DS / ( ( MUR * DS ) + CS ) ) ) ) ),( RMSe + RMSe ) ) / Min( ( RCSe / RMSe ) ,Min( ( MLU / RMSe ) ,( MUM - MUM ) ) ) )", "obj1": 0.9200779727095516, "obj2": 0.05343381759762634}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) + ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( DS + ( RMSe / MUC ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6570333691274887}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4873294346978557, "obj2": 0.4539985300941225}, {"determining": "( Min( CRS ,( ( FirstVNF_Mem - AMS ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - Max( CS,DS ) ),MUM ) / ( Min( MUR ,( RRSe * MUC ) ) * MLU ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5794469294535602}, {"determining": "Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( MLU / MUC ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6339231838890576}, {"determining": "Min( ( PN - DDR ) ,Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ,MUR ) ,MUM ) )", "obj1": 0.9629629629629629, "obj2": 0.017746201165731057}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server - AMS ) + FirstVNF_CPU ) )", "choosing": "Min( ( ( ( ( MUC / ( MLU + RCSe ) ) * CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ,( Min( RCSe ,MUR ) * ( DS * MLU ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6448926988559629}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( AMS * AMS ),Const ) ) / PN ) + Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe * MUM ) ) / ( Max( RMSe,RRSe ) + ( RMSe * ( MUR + DS ) ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.628667751614014}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,MUM ) )", "obj1": 0.6471734892787524, "obj2": 0.3158994573344418}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( CS / MLU ) - ( MLU * RRSe ) ) + ( Min( DS ,MUR ) - Min( CS ,RMSe ) ) )", "obj1": 0.3762183235867446, "obj2": 0.6244638834174415}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.6413255360623782, "obj2": 0.3263938412830812}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( DS / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.5243664717348928, "obj2": 0.42902392362555597}, {"determining": "( ( BR / MDR ) - ( FirstVNF_RAM + CRS ) )", "choosing": "( Max( ( MLU / Min( CS ,( Max( RRSe,( CS / MUR ) ) - ( DS / ( ( MUR * DS ) + CS ) ) ) ) ),( RMSe + RMSe ) ) / Min( ( RCSe / RMSe ) ,Min( ( MLU / RMSe ) ,( MUM - MUM ) ) ) )", "obj1": 0.9200779727095516, "obj2": 0.05343381759762634}, {"determining": "( ( FirstVNF_Mem + RRS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.621832358674464, "obj2": 0.34208275424882895}, {"determining": "( Max( FirstVNF_RAM,( CRS + ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) ) - ( ARS + AMS ) )", "choosing": "( ( ( ( ( MUR / RCSe ) - Min( MUC ,RMSe ) ) * ( ( MUC * MUM ) + ( DS - MLU ) ) ) / Max( ( Min( MUM ,DS ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) ) / ( MLU / RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.582877709886069}, {"determining": "Min( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( DDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.6549707602339181, "obj2": 0.3028202965493492}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ),( AMS * ( MRS - Const ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( RMSe + RMSe ) / ( Max( DS,MUC ) + ( RCSe / ( MUM / MUC ) ) ) )", "obj1": 0.4191033138401559, "obj2": 0.5666023704417551}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) + CRS ) ) - ( DDR / PN ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,( Max( ( MUR - RCSe ),MUM ) / RRSe ) ) ,MUM ) )", "obj1": 0.9454191033138402, "obj2": 0.026074816801419792}, {"determining": "( ( MRS - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6702620331209699}, {"determining": "Min( ( ( BR / MDR ) - Max( ( Const - BR ),ACS ) ) ,Min( FirstVNF_CPU_Server ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( Max( MUC,RMSe ) / ( Max( CS,CS ) / Min( MLU ,CS ) ) ) * ( Min( ( RMSe - ( MLU - ( MUM - MUC ) ) ) ,DS ) * CS ) )", "obj1": 0.8011695906432749, "obj2": 0.16512068642143196}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( MUC + Max( CS,Min( Max( MUC,CS ) ,MLU ) ) ) ,RRSe ) )", "obj1": 0.3391812865497076, "obj2": 0.6619851960965369}, {"determining": "Max( ( ( ACS + FirstVNF_Mem_Server ) / ( BR - ACS ) ),Min( FirstVNF_CPU ,ARS ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUR ) / MUM ),Min( MUM ,MUM ) )", "obj1": 0.3723196881091618, "obj2": 0.6261255912997546}, {"determining": "Min( ( DDR - PN ) ,Min( DDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( RMSe * DS ) ,MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( RCSe ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9746588693957114, "obj2": 0.01192862014420688}, {"determining": "Max( Min( ( Max( BR,FirstVNF_Mem_Server ) * ( RRS + FirstVNF_CPU_Server ) ) ,( Min( PN ,DDR ) * ( BR - ACS ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.35477582846003897, "obj2": 0.6428551066807904}, {"determining": "Min( Min( MDR ,MDR ) ,MDR )", "choosing": "Min( Min( MUM ,( Max( ( MLU / MUC ),MLU ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) ,( Min( Max( RCSe,RCSe ) ,MUC ) * Min( MUC ,MUR ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7008138696486639}, {"determining": "( Max( CRS,( ( BR / MDR ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( Max( CS,( ( CS / MUM ) * Min( MUC ,( CS - MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.9941520467836257, "obj2": 0.0028667325904443374}, {"determining": "Min( Min( MDR ,Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ,( ( BR / MDR ) - Max( RRS,MDR ) ) )", "choosing": "Min( Min( MUM ,MLU ) ,RRSe )", "obj1": 0.6627680311890838, "obj2": 0.3000916919716245}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "( ( MRS - PN ) * ( ( ARS - RRS ) - Max( DDR,ARS ) ) )", "choosing": "( ( CS / MUM ) * Min( MUC ,( CS - MLU ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6784977774581038}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( DS / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.5243664717348928, "obj2": 0.42902392362555597}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( RCSe ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.6491228070175439, "obj2": 0.31123754131797843}, {"determining": "( ( BR / ( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,ARS ) - ( PN - DDR ) ) ) - FirstVNF_Mem )", "choosing": "( Max( ( MUM * ( ( CS * MUR ) + ( RCSe - ( MUC * Max( CS,MLU ) ) ) ) ),( RMSe + MUR ) ) / MUC )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "Max( ( MUC - MUM ),MUC )", "obj1": 0.6491228070175439, "obj2": 0.31123754131797843}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.4191033138401559, "obj2": 0.5666023704417551}, {"determining": "( Max( ( ( Const + FirstVNF_CPU_Server ) + ( FirstVNF_RAM - MDR ) ),( Max( BR,FirstVNF_Mem_Server ) - Max( RRS,MDR ) ) ) / ( ( CRS - FirstVNF_RAM ) + RRS ) )", "choosing": "( ( ( RCSe - MLU ) + MUM ) + ( ( ( MLU + MUR ) + Min( MLU ,DS ) ) - ( Max( DS,RCSe ) * Min( MUR ,MUC ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7237960495874525}, {"determining": "Min( ( ( RRS * ( ( ( ( FirstVNF_Mem * ( ARS / FirstVNF_Mem ) ) / ACS ) * CRS ) * FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ,Max( MDR,MDR ) )", "choosing": "( Min( Min( Max( ( MUM / Max( Min( CS ,MLU ),MUR ) ),RRSe ) ,( DS / CS ) ) ,MLU ) - CS )", "obj1": 0.30994152046783624, "obj2": 0.6894948266747633}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ,PN ) - Max( Min( ( RRS + AMS ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( CS / MLU ),Min( MUC ,RMSe ) )", "obj1": 0.3391812865497076, "obj2": 0.6619851960965369}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( ( BR / MDR ) - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9590643274853801, "obj2": 0.020235933754639637}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_Mem_Server ) ) + PN ) - ( Min( Max( PN,FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ) - ( Min( DDR ,AMS ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( Max( ( RMSe * MUR ),( RCSe - DS ) ) - RRSe ) ,( Max( Max( ( RMSe - RRSe ),RRSe ),Min( MUC ,RRSe ) ) + MUC ) ) / Max( Min( RRSe ,MUC ),Min( MUC ,MUM ) ) ) ,( RRSe - CS ) )", "obj1": 0.3138401559454191, "obj2": 0.6843375102432491}, {"determining": "( Max( FirstVNF_Mem,( ( ( ( ( DDR + FirstVNF_Mem_Server ) + Max( BR,FirstVNF_Mem ) ) * FirstVNF_Mem_Server ) / Max( ACS,FirstVNF_RAM_Server ) ) + CRS ) ) - Min( Min( Const ,( Min( BR ,FirstVNF_CPU ) * ( CRS - ARS ) ) ) ,( FirstVNF_RAM * ARS ) ) )", "choosing": "( ( ( CS / DS ) / ( ( MUC * MUC ) + ( RMSe / Max( Min( RMSe ,CS ),MUR ) ) ) ) / RMSe )", "obj1": 0.31773879142300193, "obj2": 0.6834697389784845}, {"determining": "( ( Min( MRS ,AMS ) / MDR ) - FirstVNF_CPU_Server )", "choosing": "( Max( ( MLU / ( ( MUC - ( ( Min( RRSe ,RRSe ) / ( MUM * MUC ) ) / ( RMSe + ( MUM * CS ) ) ) ) + MLU ) ),( RMSe + RMSe ) ) / MUC )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "Max( ( BR * BR ),( Min( PN ,AMS ) * ( AMS - Const ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6717189932961813}, {"determining": "Min( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( DDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.6647173489278753, "obj2": 0.2938410910447369}, {"determining": "( Max( BR,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) - MDR )", "choosing": "( Max( ( MLU / MUC ),( RMSe / RMSe ) ) / ( Max( CS,Min( Min( MUC ,CS ) ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.6608187134502924, "obj2": 0.3016245471081389}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( DDR * FirstVNF_Mem ) * Const ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.31968810916179335, "obj2": 0.6814919592662911}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( CS / DS ) / ( ( MUC * MUC ) + ( Min( ( Min( ( MUC / MUM ) ,RCSe ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) ) ) / ( Max( MUC,MUC ) + ( RMSe / MUM ) ) )", "obj1": 0.9746588693957114, "obj2": 0.01192862014420688}, {"determining": "( ( FirstVNF_Mem + RRS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7111860473991829}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 0.3762183235867446, "obj2": 0.6244638834174415}, {"determining": "Min( Min( MDR ,MDR ) ,( ( BR / Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ) - Max( RRS,MDR ) ) )", "choosing": "Min( Min( MLU ,( RCSe + MLU ) ) ,( Min( Max( RCSe,RCSe ) ,MUC ) * Max( MUC,MUR ) ) )", "obj1": 0.6569200779727096, "obj2": 0.30234928668507494}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / Min( ARS ,FirstVNF_Mem ) ) + ( ARS * MDR ) )", "choosing": "( ( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.2962962962962963, "obj2": 0.707147400077198}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "Min( ( DS * CS ) ,Max( MUM,RMSe ) )", "obj1": 0.30409356725146197, "obj2": 0.6976558477930722}, {"determining": "( ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / Min( ARS ,FirstVNF_Mem ) ) + ( ARS * MDR ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.2962962962962963, "obj2": 0.707147400077198}, {"determining": "( ( FirstVNF_Mem + RRS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7111860473991829}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * ( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( ARS * MDR ) ) ) ) ) )", "choosing": "( ( ( MUC / Max( CS,( MUM / MUC ) ) ) * CS ) + ( RCSe + MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7189537760590059}, {"determining": "( ( BR / MDR ) - Max( ( PN / ( BR - ( PN - DDR ) ) ),( AMS - Max( CRS,( ( Max( PN,FirstVNF_RAM ) - PN ) * ( ( FirstVNF_Mem_Server / ARS ) / MRS ) ) ) ) ) )", "choosing": "( ( DS * MUR ) * ( MUM * ( ( MUR * CS ) + ( CS * ( MLU + Max( CS,DS ) ) ) ) ) )", "obj1": 0.9824561403508771, "obj2": 0.008221532230824004}, {"determining": "( Max( BR,PN ) - MDR )", "choosing": "( Max( ( MLU / MUC ),( RMSe / RMSe ) ) / ( Max( CS,Min( Min( MUC ,CS ) ,CS ) ) / Min( RCSe ,MUR ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1699750654673903}, {"determining": "( Max( CRS,( ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.9844054580896686, "obj2": 0.0075901512159367865}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + ( BR / MDR ) ) ) - ( DDR / PN ) )", "choosing": "( MUR / ( Min( MLU ,CS ) / Max( CS,MUM ) ) )", "obj1": 0.9883040935672515, "obj2": 0.0058415889532057496}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( FirstVNF_CPU / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( Max( RCSe,( MUC + CS ) ) - RCSe ),MUM ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9766081871345029, "obj2": 0.010500052179447956}, {"determining": "( RRS + ( ARS * MDR ) )", "choosing": "( Max( ( MLU / MUC ),MLU ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( RRS + ( ARS * MDR ) )", "choosing": "( Max( ( MLU / MUC ),MLU ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "Min( ( DDR - PN ) ,Min( DDR ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * CS ) ,Max( MUM,RMSe ) )", "obj1": 0.30409356725146197, "obj2": 0.6976558477930722}, {"determining": "( ( ( BR / ( FirstVNF_CPU_Server + ( ARS - Min( BR ,FirstVNF_Mem_Server ) ) ) ) - Max( RRS,MDR ) ) + ( ( Const * FirstVNF_Mem_Server ) * ( ARS * MDR ) ) )", "choosing": "( ( MLU / MUC ) / ( MUM - RMSe ) )", "obj1": 0.9805068226120858, "obj2": 0.009400989096251328}, {"determining": "( ( Max( RRS,MDR ) - Max( Max( Min( Max( MRS,FirstVNF_Mem_Server ) ,( BR + RRS ) ),AMS ),ACS ) ) + ( ARS * DDR ) )", "choosing": "( ( ( ( ( Max( DS,( Min( MLU ,CS ) - ( RCSe * DS ) ) ) + Max( MUR,( ( CS + MUC ) * RCSe ) ) ) + ( MUR * ( MUR - DS ) ) ) - Min( RRSe ,MUR ) ) + RMSe ) / ( MUM / MLU ) )", "obj1": 0.31189083820662766, "obj2": 0.6863765528013843}, {"determining": "( Max( CRS,( ( ( ( MDR * ACS ) * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( Max( Min( Max( CS,DS ) ,( RRSe * CS ) ),DS ) ,( RRSe * CS ) )", "obj1": 0.9902534113060428, "obj2": 0.0047234186254924496}, {"determining": "( Max( ( ( AMS + FirstVNF_CPU_Server ) + ( FirstVNF_RAM / MDR ) ),( Max( RRS,MDR ) - Max( BR,FirstVNF_Mem_Server ) ) ) / Max( Max( ( FirstVNF_CPU * BR ),( Const + ACS ) ),( ( BR - BR ) * ( ACS * MDR ) ) ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.28654970760233917, "obj2": 0.7207130316812101}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + Max( FirstVNF_CPU,ARS ) )", "choosing": "( ( MUM - MLU ) / ( RCSe / RMSe ) )", "obj1": 0.3079922027290448, "obj2": 0.691844913712783}], "7": [{"determining": "( ( MDR - CRS ) * ( ( ( MRS / ( Const + Max( ACS,FirstVNF_Mem_Server ) ) ) - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem / ( BR - ( ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ACS ) - DDR ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( ( Max( CRS,AMS ) - CRS ) * ( ( ARS - ( MRS / ( MRS + Max( ACS,FirstVNF_Mem_Server ) ) ) ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( Max( Min( ( MUM * ( ( ( MUM - MUM ) / ( Min( DS ,MUR ) + Min( RMSe ,DS ) ) ) * MUR ) ) ,RRSe ),( MUR - MUC ) ) / Min( Max( ( MUM - MLU ),RRSe ) ,( Min( RMSe ,RRSe ) * RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU + ARS ),( PN / ( ( ACS + FirstVNF_Mem ) - ( ( ( ( FirstVNF_Mem_Server / MDR ) - Const ) - PN ) - DDR ) ) ) )", "choosing": "Min( ( Max( MUR,MUC ) * MLU ) ,( RRSe - RCSe ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( ( ( ( FirstVNF_CPU_Server * AMS ) - ( MRS * FirstVNF_CPU_Server ) ) + ( CRS / FirstVNF_RAM_Server ) ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( FirstVNF_CPU * Max( ( DDR * AMS ),( BR + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( Min( ( MUC + MUR ) ,RCSe ) * ( DS * ( MUR * ( ( ( MUC - Max( MUC,RRSe ) ) / ( ( RRSe + RCSe ) / RCSe ) ) - Min( MUR ,MUM ) ) ) ) ) ,( ( CS * Min( DS ,RMSe ) ) * CS ) )", "obj1": 0.5555555555555556, "obj2": 0.36826639288887647}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + ( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.7115009746588694, "obj2": 0.2437676952758952}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( PN - ( CRS - CRS ) ) ,BR ) * FirstVNF_CPU_Server ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( ( AMS / BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( MUC + ( RCSe * Min( RRSe ,MLU ) ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07878014599196176}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) + RMSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.8927875243664717, "obj2": 0.07167452317116524}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5321637426900585, "obj2": 0.3978360195175024}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( Max( CS,DS ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.8128654970760234, "obj2": 0.10061365936536172}, {"determining": "Min( Min( MRS ,FirstVNF_Mem ) ,( MDR / ( CRS / FirstVNF_RAM ) ) )", "choosing": "( ( Max( ( MLU - MUC ),( RMSe + RMSe ) ) / Max( DS,MUR ) ) * ( DS * MUR ) )", "obj1": 0.7992202729044834, "obj2": 0.16772694739284763}, {"determining": "( ( MDR / BR ) - ( Max( FirstVNF_CPU_Server,AMS ) * FirstVNF_RAM_Server ) )", "choosing": "( CS - ( MLU + Min( Min( MUM ,Max( RRSe,( MUR / MUC ) ) ) ,( MLU - ( Min( MUC ,Max( DS,( DS / MUM ) ) ) - CS ) ) ) ) )", "obj1": 0.621832358674464, "obj2": 0.34208275424882895}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( ( Min( ( Max( MUR,( DS / RRSe ) ) - Min( CS ,MUC ) ) ,( MUC / MUR ) ) + ( RRSe * MUC ) ) ,CS ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1690190551543611}, {"determining": "Min( ( ( BR / MDR ) - DDR ) ,Min( FirstVNF_RAM ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( Min( ( ( MLU - ( MUM - MUC ) ) - RMSe ) ,DS ) * CS ) )", "obj1": 0.8011695906432749, "obj2": 0.16512068642143196}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + ( Max( ( MUC - MUM ),MUC ) + RMSe ) ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.7212475633528265, "obj2": 0.228233418641832}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + PN )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + Min( MUC ,( CS - MLU ) ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.4697855750487329, "obj2": 0.4947684043300629}, {"determining": "( ( MDR - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ) ,RRSe )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( ( Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8187134502923976, "obj2": 0.09389508420894402}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( PN - DDR ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,( Max( ( MLU / MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MUM ) ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.6705653021442495, "obj2": 0.2912047060890092}, {"determining": "( ( MRS + Const ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + ( DS / Min( MLU ,RRSe ) ) ) * ( Min( Max( ( Max( CS,DS ) / Max( ( Max( RRSe,MUC ) - MUM ),MLU ) ),RMSe ) ,Max( Max( ( RMSe * MUM ),MUC ),MLU ) ) * Min( MUC ,MLU ) ) )", "obj1": 0.4444444444444444, "obj2": 0.5016348647877655}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( PN - DDR ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUR - Max( CS,DS ) ),MUM ) / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.6705653021442495, "obj2": 0.2912047060890092}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( ( MDR - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ,( RRSe * CS ) )", "obj1": 0.49902534113060426, "obj2": 0.4481780594093909}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_RAM_Server ) / FirstVNF_RAM ) + ( AMS * FirstVNF_Mem_Server ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS - RRSe ) ) / ( ( Min( ( Min( ( MUC / MUM ) ,( MUM * RRSe ) ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5487876830339814}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.530214424951267, "obj2": 0.425882452326938}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( Max( CS,DS ) ,RRSe )", "obj1": 0.9298245614035088, "obj2": 0.03433255215411097}, {"determining": "( Max( CRS,( ( BR / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( DS,( DS / MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.9181286549707602, "obj2": 0.040677019026635036}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,DS ) ,( RRSe * CS ) )", "obj1": 0.4327485380116959, "obj2": 0.521146974902762}, {"determining": "( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( CS - ( MLU + Min( Max( DS,RRSe ) ,( RRSe - ( Min( MUC ,Max( DS,( DS / MUM ) ) ) - CS ) ) ) ) )", "obj1": 0.621832358674464, "obj2": 0.34208275424882895}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5092255009643568}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU / ( ACS + RRS ) ) + ARS ) ) / ( FirstVNF_Mem_Server * Max( ( ( MRS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,CS ) / Max( CS,Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.6276803118908382, "obj2": 0.3361462123732105}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.5087719298245614, "obj2": 0.4319227631916463}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.48148148148148145, "obj2": 0.47717954809446056}, {"determining": "( ( ( ( Max( FirstVNF_RAM_Server,AMS ) + FirstVNF_Mem_Server ) - ( FirstVNF_Mem + MDR ) ) - ( ( FirstVNF_Mem / ( PN - ( FirstVNF_Mem_Server - PN ) ) ) * BR ) ) - ( Max( ARS,MRS ) * Max( ACS,DDR ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( Min( ( CS * MLU ) ,CS ),( MUC + ( MLU - Max( RMSe,CS ) ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5582428636855415}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + BR )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( DS + ( RMSe / MUC ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6562343784854551}, {"determining": "( Max( CRS,( ( ACS / ( Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( Max( PN,ARS ) * ( MRS - FirstVNF_Mem ) ) ) * FirstVNF_Mem_Server ) ) * CRS ) ) - Min( DDR ,BR ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( ( RCSe / MLU ),DS ) ),( CS * RRSe ) ) / ( Max( MUR,( ( ( MUM * ( ( RMSe / MUC ) / ( MUC * RMSe ) ) ) / ( MUM - ( DS - MUM ) ) ) / MLU ) ) + ( RMSe * MUC ) ) )", "obj1": 0.38596491228070173, "obj2": 0.5995553471380247}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,( RCSe + MLU ) ) ,( Min( Max( RCSe,RCSe ) ,MUC ) * Max( MUC,MUR ) ) )", "obj1": 0.4834307992202729, "obj2": 0.4590693166289372}, {"determining": "( ( CRS / ARS ) + ( ( BR / MDR ) / ( Const + Const ) ) )", "choosing": "( Max( ( MUR * Min( RCSe ,RMSe ) ),( MUC + ( DS * Min( MLU ,( ( RRSe * ( MUR * MUC ) ) * MUR ) ) ) ) ) / ( Max( RRSe,( MUM * RRSe ) ) * ( RCSe - ( MUC - MUC ) ) ) )", "obj1": 0.6374269005847953, "obj2": 0.32656813434224063}, {"determining": "Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( MLU / MUC ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6339231838890576}, {"determining": "Max( ( PN / ( BR - ( ( FirstVNF_Mem + RRS ) - ( MDR * FirstVNF_RAM_Server ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.6232322719199355}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( ( MUC * ( ( MLU * CS ) - MUR ) ) - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6736249678212208}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS * RRSe ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5929604647729003}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.3820662768031189, "obj2": 0.6056720011006211}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.6393762183235867, "obj2": 0.32188466079716405}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,MUM ) / ( DS - ( ( ( Min( CS ,DS ) - CS ) * MUM ) - ( ( MUM - MUR ) + MLU ) ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.47717954809446056}, {"determining": "( Max( Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * ACS ) / FirstVNF_RAM ) + ( MDR + BR ) ) ) ),CRS ),CRS ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,Min( ( ( ( RCSe + DS ) / Min( ( RMSe / RCSe ) ,RMSe ) ) - Max( DS,( DS / Max( MUM,CS ) ) ) ) ,( MUR - RRSe ) ) ) + ( ( ( Max( CS,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) ) )", "obj1": 0.5224171539961013, "obj2": 0.42981979934671616}, {"determining": "( ( Max( MRS,ACS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) - ( DDR / PN ) )", "choosing": "( DS / ( Max( ( MUM / Max( ( ( RRSe * CS ) * RMSe ),( MUR - MLU ) ) ),MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "( ( ( BR / MDR ) - Max( RRS,PN ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( Max( RRS,CRS ) ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + ( Max( ( MUC - MUM ),MUC ) + RMSe ) ) ) ,CS ) - MUM ) / Min( ( MUC + Max( ( ( ( MUC - RRSe ) + ( MUC * RCSe ) ) * RCSe ),Min( RMSe ,MUM ) ) ) ,Max( DS,RMSe ) ) )", "obj1": 0.7212475633528265, "obj2": 0.228233418641832}, {"determining": "( Max( FirstVNF_RAM,( CRS + ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) ) - ( ARS + AMS ) )", "choosing": "( ( ( ( ( MUR / RCSe ) - Min( MUC ,RMSe ) ) * ( ( MUC * MUM ) + ( DS - MLU ) ) ) / Max( ( Min( MUM ,DS ) - ( MLU / MUC ) ),Min( ( RRSe * RRSe ) ,( MUM / RCSe ) ) ) ) / ( MLU / RMSe ) )", "obj1": 0.3996101364522417, "obj2": 0.582877709886069}, {"determining": "( ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( FirstVNF_CPU / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Max( DS,( MUC + CS ) ),( DS / MLU ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.35282651072124754, "obj2": 0.6397587530543997}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( FirstVNF_RAM / ( MDR * FirstVNF_CPU ) ),( AMS * ( MRS - Const ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( RMSe + RMSe ) / ( Max( DS,MUC ) + ( RCSe / ( MUM / MUC ) ) ) )", "obj1": 0.4191033138401559, "obj2": 0.5666023704417551}, {"determining": "Min( ( ( BR / MDR ) - DDR ) ,Min( FirstVNF_RAM ,( FirstVNF_CPU - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( Min( ( ( MLU - ( MUM - MUC ) ) - RMSe ) ,DS ) * CS ) )", "obj1": 0.8011695906432749, "obj2": 0.16512068642143196}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( ( BR / MDR ) - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( ( MUR - RCSe ),MUM ) + ( RMSe / MUC ) ) )", "obj1": 0.9941520467836257, "obj2": 0.0027035107858611987}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "Max( ( MUC - MUM ),MUC )", "obj1": 0.6510721247563352, "obj2": 0.30831726702510176}, {"determining": "( Min( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ,PN ) - Max( Min( ( RRS + AMS ) ,( FirstVNF_Mem - FirstVNF_RAM_Server ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Max( ( CS / MLU ),Min( MUC ,RMSe ) )", "obj1": 0.3391812865497076, "obj2": 0.6619851960965369}, {"determining": "Max( ( ( ACS + FirstVNF_Mem_Server ) / ( BR - ACS ) ),Min( FirstVNF_CPU ,ARS ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUR ) / MUM ),Min( MUM ,MUM ) )", "obj1": 0.3723196881091618, "obj2": 0.6261255912997546}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( CS,DS ) ,( RRSe * CS ) )", "obj1": 0.4327485380116959, "obj2": 0.521146974902762}, {"determining": "Min( ( DDR - PN ) ,Min( DDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( RMSe * DS ) ,MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( Max( FirstVNF_Mem_Server,DDR ) * ( ARS / MRS ) ) + FirstVNF_CPU )", "choosing": "( ( MLU / RRSe ) / ( Max( Min( MUR ,MUC ),Max( Max( ( MUM + RRSe ),( ( ( RRSe - MUR ) / CS ) * Min( MUR ,Min( DS ,DS ) ) ) ),CS ) ) - RMSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6448926988559629}, {"determining": "Max( ( BR * BR ),( Min( PN ,AMS ) * ( AMS - Const ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6717189932961813}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( RMSe + RMSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.4873294346978557, "obj2": 0.4539985300941225}, {"determining": "( Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ,MDR ),Max( MRS,AMS ) ) - ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( RMSe ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( Min( MUC ,( MUR / CS ) ) - ( RMSe + ( MUM + ( ( ( RMSe * MUM ) - Max( RCSe,DS ) ) * Min( RMSe ,RMSe ) ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.8148148148148148, "obj2": 0.09883241568748181}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,MUM ) )", "obj1": 0.6471734892787524, "obj2": 0.3158994573344418}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( DDR * FirstVNF_Mem ) * Const ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.31968810916179335, "obj2": 0.6814919592662911}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5735217630433272}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( AMS * AMS ),Const ) ) / PN ) + Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe * MUM ) ) / ( Max( RMSe,RRSe ) + ( RMSe * ( MUR + DS ) ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.628667751614014}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.41130604288499023, "obj2": 0.5685099655622012}, {"determining": "Min( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) )", "obj1": 0.6647173489278753, "obj2": 0.2938410910447369}, {"determining": "Min( Max( CRS,( ( ( FirstVNF_Mem_Server * BR ) / PN ) + CRS ) ) ,Min( DDR ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ,Max( MUM,RMSe ) )", "obj1": 0.30409356725146197, "obj2": 0.6973353674975435}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5087719298245614, "obj2": 0.4319227631916463}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( DS * Min( MLU ,RRSe ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5243664717348928, "obj2": 0.4288282783870147}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - PN ) + Max( ( PN / ( BR - ( Max( DDR,FirstVNF_RAM_Server ) / DDR ) ) ),( ARS - FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( RMSe * MUM ) ) ) ,Min( Max( CS,DS ) ,( DS - MLU ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.628667751614014}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + ( ( FirstVNF_RAM_Server - AMS ) + FirstVNF_CPU ) )", "choosing": "Min( ( ( ( ( MUC / ( MLU + RCSe ) ) * CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ,( Min( RCSe ,MUR ) * ( DS * MLU ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6448926988559629}, {"determining": "( ( Min( MRS ,AMS ) / MDR ) - FirstVNF_CPU_Server )", "choosing": "( Max( ( MLU / ( ( MUC - ( ( Min( RRSe ,RRSe ) / ( MUM * MUC ) ) / ( RMSe + ( MUM * CS ) ) ) ) + MLU ) ),( RMSe + RMSe ) ) / MUC )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ARS - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ) / Max( RMSe,MUM ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( MRS - PN ) * ( ( RRS - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RMSe ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6702620331209699}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( ( DS / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / ( MUR * MLU ) ) ) )", "obj1": 0.3820662768031189, "obj2": 0.6056720011006211}, {"determining": "Min( ( ( RRS * ( ( ( ( FirstVNF_Mem * ( ARS / FirstVNF_Mem ) ) / ACS ) * CRS ) * FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ,Max( MDR,MDR ) )", "choosing": "( Min( Min( Max( ( MUM / Max( Min( CS ,MLU ),MUR ) ),RRSe ) ,( DS / CS ) ) ,MLU ) - CS )", "obj1": 0.30994152046783624, "obj2": 0.6894948266747633}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),( CS / MLU ) )", "obj1": 0.4191033138401559, "obj2": 0.5666023704417551}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( ( AMS / ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) / PN ) + FirstVNF_CPU_Server ) ) - ( DDR / PN ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.9454191033138402, "obj2": 0.026074816801419792}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( DS ,RRSe ) - Min( ( MUC + Max( CS,Min( Max( MUC,CS ) ,MLU ) ) ) ,RRSe ) )", "obj1": 0.3391812865497076, "obj2": 0.6619851960965369}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * ( ( ( BR / MDR ) - MDR ) + ( ARS * MDR ) ) ) ) ) )", "choosing": "( ( ( MUC / Max( ( RRSe / ( Min( ( MUR / DS ) ,RRSe ) - MUM ) ),( MUM / MUC ) ) ) * CS ) + ( RCSe + MLU ) )", "obj1": 0.2884990253411306, "obj2": 0.7189537760590058}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_Mem_Server ) ) + PN ) - ( Min( Max( PN,FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ) - ( Min( DDR ,AMS ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( Max( ( RMSe * MUR ),( RCSe - DS ) ) - RRSe ) ,( Max( Max( ( RMSe - RRSe ),RRSe ),Min( MUC ,RRSe ) ) + MUC ) ) / Max( Min( RRSe ,MUC ),Min( MUC ,MUM ) ) ) ,( RRSe - CS ) )", "obj1": 0.3138401559454191, "obj2": 0.6843375102432491}, {"determining": "( ( FirstVNF_RAM_Server - PN ) + BR )", "choosing": "Min( ( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) ) ,( MUR - RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6945765861335446}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( RCSe ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9746588693957114, "obj2": 0.01192862014420688}, {"determining": "( ( Max( Min( MRS ,AMS ),ACS ) - Max( AMS,MDR ) ) + ( ARS * DDR ) )", "choosing": "( ( ( ( ( Max( DS,( Min( DS ,CS ) - Min( MLU ,DS ) ) ) + Max( MUR,( ( CS + MUC ) * RCSe ) ) ) + ( MUR * ( MUR - DS ) ) ) - Min( RRSe ,MUR ) ) + RMSe ) / ( MLU / MUM ) )", "obj1": 0.31189083820662766, "obj2": 0.6858733560618959}, {"determining": "( Max( ( ( Min( ( PN + CRS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( CS / DS ) / ( ( MUC * ( Max( MUC,MUC ) + ( RMSe / MUC ) ) ) + ( Min( ( Min( ( MUC / MUM ) ,RCSe ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) ) ) / ( Max( MUC,MUC ) + ( RMSe / MUM ) ) )", "obj1": 0.9902534113060428, "obj2": 0.004505851309768664}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + AMS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RMSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4853801169590643, "obj2": 0.4548237634589733}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( FirstVNF_CPU * DDR ) / ( AMS + Const ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS * RRSe ) ) / ( Max( ( ( Min( CS ,RRSe ) * ( RCSe + MLU ) ) - ( DS + MUM ) ),MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5929604647729003}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4074074074074074, "obj2": 0.5729527882820196}, {"determining": "( Max( CRS,( ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.9844054580896686, "obj2": 0.0075901512159367865}, {"determining": "Min( Min( MDR ,Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ,( ( BR / MDR ) - Max( RRS,MDR ) ) )", "choosing": "Min( Min( MUM ,MLU ) ,RRSe )", "obj1": 0.6627680311890838, "obj2": 0.3000916919716245}, {"determining": "( Max( BR,( FirstVNF_CPU * FirstVNF_Mem_Server ) ) - MDR )", "choosing": "( Max( ( MLU / MUC ),( RMSe / RMSe ) ) / ( Max( CS,Min( Min( MUC ,CS ) ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.6608187134502924, "obj2": 0.3016245471081389}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) )", "obj1": 0.6471734892787524, "obj2": 0.3158994573344418}, {"determining": "( Min( CRS ,( ( FirstVNF_Mem - AMS ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - Max( CS,DS ) ),MUM ) / ( Min( MUR ,( RRSe * MUC ) ) * MLU ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5794469294535602}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.4873294346978557, "obj2": 0.4539985300941225}, {"determining": "( ( FirstVNF_Mem + RRS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7111860473991829}, {"determining": "Min( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( FirstVNF_Mem + RRS ) - ( MDR * FirstVNF_RAM_Server ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUC,( RMSe * ( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.6549707602339181, "obj2": 0.3028202965493492}, {"determining": "Min( Min( MDR ,MDR ) ,( ( BR / Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ) - Max( RRS,MDR ) ) )", "choosing": "Min( Min( MLU ,( RCSe + MLU ) ) ,( Min( Max( RCSe,RCSe ) ,MUC ) * Max( MUC,MUR ) ) )", "obj1": 0.6569200779727096, "obj2": 0.30234928668507494}], "8": [{"determining": "( ( ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem - RRS ) ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( ( MDR - PN ) * ( Max( ARS,FirstVNF_CPU ) - ( RRS - ARS ) ) ) ) ) + RRS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RMSe ) / ( Max( CS,Min( MLU ,MUC ) ) / Min( MLU ,( MUR + ( RMSe + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem / ( BR - ( ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ACS ) - DDR ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( ( MDR - CRS ) * ( ( ( MRS / ( Const + Max( ACS,FirstVNF_Mem_Server ) ) ) - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU + ARS ),( PN / ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( Max( FirstVNF_Mem,( FirstVNF_Mem_Server - MDR ) ) + FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( MUR / MUC ) * MLU ) ,Min( MUR ,RCSe ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * RRS ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + CRS ) ) * FirstVNF_CPU ) ) ) ) / BR ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( CS - ( MLU + Min( DS ,Max( ( RRSe * ( DS * Min( ( RMSe * MUM ) ,MUM ) ) ),RCSe ) ) ) )", "obj1": 0.7719298245614035, "obj2": 0.16286071755784565}, {"determining": "( ( ( ( FirstVNF_CPU_Server * AMS ) - ( MRS * FirstVNF_CPU_Server ) ) + ( CRS / FirstVNF_RAM_Server ) ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( FirstVNF_CPU * Max( ( DDR * AMS ),( BR + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( Min( ( MUC + MUR ) ,RCSe ) * ( DS * ( MUR * ( ( ( MUC - Max( MUC,RRSe ) ) / ( ( RRSe + RCSe ) / RCSe ) ) - Min( MUR ,MUM ) ) ) ) ) ,( ( CS * Min( DS ,RMSe ) ) * CS ) )", "obj1": 0.5555555555555556, "obj2": 0.36826639288887647}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5321637426900585, "obj2": 0.3978360195175024}, {"determining": "( ( Max( ( FirstVNF_CPU_Server / AMS ),( ARS * FirstVNF_CPU_Server ) ) + ( ( Max( RRS,MDR ) - ( BR / MDR ) ) + ( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) ) - Max( ( ( ACS * FirstVNF_CPU ) + ( FirstVNF_Mem - FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( Max( ( ( RCSe / ( MUM * RRSe ) ) * MUR ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) + Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.6978557504873294, "obj2": 0.2597401219566294}, {"determining": "( ( MDR / BR ) - ( Max( FirstVNF_CPU_Server,AMS ) * FirstVNF_RAM_Server ) )", "choosing": "( CS - ( MLU + Min( Min( MUM ,Max( RRSe,( MUR / MUC ) ) ) ,( MLU - ( Min( MUC ,Max( DS,( DS / MUM ) ) ) - CS ) ) ) ) )", "obj1": 0.621832358674464, "obj2": 0.34208275424882895}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) + RMSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.8927875243664717, "obj2": 0.07167452317116524}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + ( Max( ( MUC - MUM ),MUC ) + RMSe ) ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.7212475633528265, "obj2": 0.228233418641832}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + MLU ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( MUC + ( DS * Min( MLU ,RRSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.10061365936536172}, {"determining": "( Max( BR,PN ) - MDR )", "choosing": "Max( ( Max( ( CS / MUR ),RCSe ) - ( MUR + ( MUC / CS ) ) ),( MUM - RMSe ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( PN - DDR ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,( Max( ( MLU / MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MUM ) ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.6744639376218323, "obj2": 0.2874090019227543}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( MUC + ( DS * Min( MLU ,RRSe ) ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07878014599196176}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + ( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.7115009746588694, "obj2": 0.2437676952758952}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ,Max( MUM,RMSe ) )", "obj1": 0.47368421052631576, "obj2": 0.46502979403936917}, {"determining": "( ( Max( ( AMS * ( MRS - FirstVNF_Mem ) ),( ( MDR * ACS ) / FirstVNF_RAM ) ) - ARS ) * ( ( FirstVNF_RAM_Server + CRS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( Max( MUR,RCSe ) + ( MLU / MUC ) ) )", "obj1": 0.8206627680311891, "obj2": 0.09299391394699028}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_RAM_Server ) / FirstVNF_RAM ) + ( AMS * FirstVNF_Mem_Server ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS - RRSe ) ) / ( ( Min( ( Min( ( MUC / MUM ) ,( MUM * RRSe ) ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5487876830339814}, {"determining": "( Max( BR,PN ) - MDR )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1690190551543611}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.48602618115773105}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( Max( CS,DS ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.8128654970760234, "obj2": 0.10061365936536172}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( Max( MUC,MUC ),( DS * Min( MLU ,RRSe ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5282651072124757, "obj2": 0.4225251741769528}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Min( ( PN - ( CRS - CRS ) ) ,BR ) * FirstVNF_CPU_Server ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( ( AMS / BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( MUC + ( RCSe * Min( RRSe ,MLU ) ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07878014599196176}, {"determining": "( ( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.6530214424951267, "obj2": 0.2932787490574746}, {"determining": "( ( MRS + Const ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM_Server ) )", "choosing": "( ( MUC + ( DS / Min( MLU ,RRSe ) ) ) * ( Min( Max( ( Max( CS,DS ) / Max( ( Max( RRSe,MUC ) - MUM ),MLU ) ),RMSe ) ,Max( Max( ( RMSe * MUM ),MUC ),MLU ) ) * Min( MUC ,MLU ) ) )", "obj1": 0.4444444444444444, "obj2": 0.5016348647877655}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.4327485380116959, "obj2": 0.521146974902762}, {"determining": "( Max( CRS,( ( ACS / ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) + CRS ) ) - ( ARS - ( FirstVNF_RAM + ( DDR * ( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + Max( MDR,( CRS + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( ( ( DS - MUR ) * ( RRSe - DS ) ) / Max( DS,DS ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) * Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.42105263157894735, "obj2": 0.5556142472488695}, {"determining": "( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.621832358674464, "obj2": 0.34208275424882895}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * ( DS - MUR ) ) )", "obj1": 0.4580896686159844, "obj2": 0.49491868323534793}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5092255009643568}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),Min( RRS ,FirstVNF_CPU ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( RMSe,DS ) ),Max( CS,MLU ) ) / ( ( Min( ( Min( ( MUC / MUM ) ,RCSe ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5592506097835915}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( DS / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5927544676257751}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( CS * CS ) * Min( Min( ( Max( Min( ( CS * MLU ) ,CS ),( MUC + ( MLU - Max( RMSe,CS ) ) ) ) - RRSe ) ,Min( CS ,MUR ) ) ,Min( MUC ,MLU ) ) )", "obj1": 0.49317738791423, "obj2": 0.4477110972518191}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( CRS / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( RMSe / MUC ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.2962962962962963, "obj2": 0.707147400077198}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) )", "obj1": 0.48148148148148145, "obj2": 0.45827992125176464}, {"determining": "( ( FirstVNF_RAM_Server - FirstVNF_CPU ) + BR )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( DS + ( RMSe / MUC ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6562343784854551}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( DDR - DDR ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "Max( ( MUC - MUM ),( ( MUM - MUC ) / MLU ) )", "obj1": 0.6510721247563352, "obj2": 0.30811096228443624}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( PN - DDR ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,( Max( ( MLU / MUC ),( RMSe + Min( Min( RCSe ,MUR ) ,MUM ) ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.6705653021442495, "obj2": 0.2912047060890092}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3937621832358674, "obj2": 0.5818218434720827}, {"determining": "Max( ( PN / ( FirstVNF_CPU_Server + ( MDR / FirstVNF_RAM_Server ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,RRSe ) / Min( MLU ,CS ) ) ) * ( Min( ( ( Min( RMSe ,( ( MUC - MLU ) / MLU ) ) - MUM ) - ( MLU - ( MUM - MUC ) ) ) ,DS ) * CS ) )", "obj1": 0.37816764132553604, "obj2": 0.6150366544996497}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( RMSe * DS ) ,MUM ) )", "obj1": 0.8927875243664717, "obj2": 0.07167452317116524}, {"determining": "( ( CRS - ( CRS + ( ACS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem / PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( ( ( ( DS * MUC ) + ( DS / MUM ) ) - MLU ) ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * RMSe ) )", "obj1": 0.38791423001949316, "obj2": 0.5871629548575703}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( ( MUC * ( ( MLU * CS ) - MUR ) ) - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6736249678212208}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.6393762183235867, "obj2": 0.32188466079716405}, {"determining": "( Max( ( Min( RRS ,Min( Max( ( MRS - MDR ),FirstVNF_RAM ) ,RRS ) ) + ( BR / Max( AMS,DDR ) ) ),Max( ( MDR * Max( MRS,Max( AMS,FirstVNF_Mem_Server ) ) ),CRS ) ) - ( PN - MDR ) )", "choosing": "Min( MUC ,Max( RMSe,CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6481148011871757}, {"determining": "( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( CS - ( MLU + Min( Max( DS,RRSe ) ,( RRSe - ( Min( MUC ,Max( DS,( DS / MUM ) ) ) - CS ) ) ) ) )", "obj1": 0.631578947368421, "obj2": 0.33235693224561275}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( DDR * FirstVNF_Mem ) * Const ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.31968810916179335, "obj2": 0.6814919592662911}, {"determining": "( ( CRS / ARS ) + ( ( BR / MDR ) / ( Const + Const ) ) )", "choosing": "( Max( ( MUR * Min( RCSe ,RMSe ) ),( MUC + ( DS * Min( MLU ,( ( RRSe * ( MUR * MUC ) ) * MUR ) ) ) ) ) / ( Max( RRSe,( MUM * RRSe ) ) * ( RCSe - ( MUC - MUC ) ) ) )", "obj1": 0.6374269005847953, "obj2": 0.32656813434224063}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( Max( CS,DS ) ,RRSe )", "obj1": 0.9298245614035088, "obj2": 0.03433255215411097}, {"determining": "( Max( CRS,( ( MDR / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - Max( RRS,ACS ) )", "choosing": "Min( Min( ( RCSe * CS ) ,DS ) ,RRSe )", "obj1": 0.9298245614035088, "obj2": 0.03433255215411097}, {"determining": "( Max( CRS,( ( BR / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( DS,( DS / MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.9181286549707602, "obj2": 0.040677019026635036}, {"determining": "( Min( CRS ,( ( FirstVNF_Mem - AMS ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - Max( CS,DS ) ),MUM ) / ( Min( MUR ,( RRSe * MUC ) ) * MLU ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5794469294535602}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ) ,RRSe )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( ( ( ACS / Max( BR,ARS ) ) + ACS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Max( DS,( ( RRSe + MUM ) - ( DS * ( RCSe + MLU ) ) ) ),( DS / ( MUR - ( CS - DS ) ) ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,MUC ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6985512447410996}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4074074074074074, "obj2": 0.5729527882820196}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( CS - ( Min( Max( DS,RRSe ) ,( DS / CS ) ) + MLU ) )", "obj1": 0.7212475633528265, "obj2": 0.228233418641832}, {"determining": "( ( ACS - ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) - Max( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.50682261208577, "obj2": 0.43466330709666456}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) + Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.6192328818818907}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.3820662768031189, "obj2": 0.6056720011006211}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU / ( ACS + RRS ) ) + ARS ) ) / ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.9571150097465887, "obj2": 0.020707548307415707}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( CS - ( MLU + Min( Max( DS,RRSe ) ,( RRSe - ( Min( MUC ,Max( DS,( DS / MUM ) ) ) - CS ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.4319227631916463}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4392737976157727}, {"determining": "( Max( ( ( BR / MDR ) * ( Max( BR,FirstVNF_Mem_Server ) - PN ) ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( Max( RMSe,( ( Min( ( RRSe + ( RCSe * RMSe ) ) ,MUR ) - MUC ) / ( ( CS / MUC ) / DS ) ) ),( CS * RRSe ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9181286549707602, "obj2": 0.040677019026635036}, {"determining": "Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( MLU / MUC ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6339231838890576}, {"determining": "( ( Max( MRS,ACS ) * Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) - ( DDR / PN ) )", "choosing": "( DS / ( Max( ( MUM / Max( ( ( RRSe * CS ) * RMSe ),( MUR - MLU ) ) ),MUC ) / ( RMSe / MUC ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01528010374459355}, {"determining": "Min( ( ( BR / MDR ) - Max( ( AMS - ( PN - DDR ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,( Max( ( MLU / MUC ),( RMSe + Min( Min( RCSe ,( CS / DS ) ) ,MUM ) ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.9649122807017544, "obj2": 0.017557089073139673}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6336149688745635}, {"determining": "( Max( Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * ACS ) / FirstVNF_RAM ) + ( MDR + BR ) ) ) ),CRS ),CRS ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,Min( ( ( ( RCSe + DS ) / Min( ( RMSe / RCSe ) ,RMSe ) ) - Max( DS,( DS / Max( MUM,CS ) ) ) ) ,( MUR - RRSe ) ) ) + ( ( ( Max( CS,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) ) )", "obj1": 0.5224171539961013, "obj2": 0.42981979934671616}, {"determining": "Min( ( ( RRS * ( ( ( ( FirstVNF_Mem * ( ARS / FirstVNF_Mem ) ) / ACS ) * CRS ) * FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ,Max( MDR,MDR ) )", "choosing": "( Min( Min( Max( ( MUM / Max( Min( CS ,MLU ),MUR ) ),RRSe ) ,( DS / CS ) ) ,MLU ) - CS )", "obj1": 0.30994152046783624, "obj2": 0.6894948266747633}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( ( BR / MDR ) - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( ( MUR - RCSe ),MUM ) + ( RMSe / MUC ) ) )", "obj1": 0.9941520467836257, "obj2": 0.0027035107858611987}, {"determining": "Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( DDR * FirstVNF_Mem ) * Const ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6425044674475092}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,DS ) ,( RRSe * CS ) )", "obj1": 0.4327485380116959, "obj2": 0.521146974902762}, {"determining": "( ( ( MRS / ( Const + Max( ACS,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_Mem_Server - DDR ) ) + ( Min( ARS ,BR ) / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( Min( DS ,MUR ) * Min( MLU ,( ( MUR * Max( MUC,RCSe ) ) * MUR ) ) ) ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.724462859952405}, {"determining": "Min( ( DDR - PN ) ,Min( DDR ,FirstVNF_Mem_Server ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( RMSe * DS ) ,MUM ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.33528265107212474, "obj2": 0.6645434957811144}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,MUM ) )", "obj1": 0.6471734892787524, "obj2": 0.3158994573344418}, {"determining": "Max( ( ( ACS + FirstVNF_Mem_Server ) / ( BR - ACS ) ),Min( FirstVNF_CPU ,ARS ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUR ) / MUM ),Min( MUM ,MUM ) )", "obj1": 0.3723196881091618, "obj2": 0.6261255912997546}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_Mem_Server ) ) + PN ) - ( Min( Max( PN,FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ) - ( Min( DDR ,AMS ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( Max( ( RMSe * MUR ),( RCSe - DS ) ) - RRSe ) ,( Max( Max( ( RMSe - RRSe ),RRSe ),Min( MUC ,RRSe ) ) + MUC ) ) / Max( Min( RRSe ,MUC ),Min( MUC ,MUM ) ) ) ,( RRSe - CS ) )", "obj1": 0.3138401559454191, "obj2": 0.6843375102432491}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + AMS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RMSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.48927875243664715, "obj2": 0.45315511184450297}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( ( Min( ( Max( MUR,( DS / RRSe ) ) - Min( CS ,MUC ) ) ,( MUC / MUR ) ) + ( RRSe * MUC ) ) ,CS ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1690190551543611}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - AMS ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - MUM ),MUC )", "obj1": 0.6491228070175439, "obj2": 0.31096636828694985}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( ( AMS / ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) / PN ) + FirstVNF_CPU_Server ) ) - ( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) / PN ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.949317738791423, "obj2": 0.023936262410249126}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( MDR * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),MUR ) )", "obj1": 0.3820662768031189, "obj2": 0.6056720011006211}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU / ( ACS + RRS ) ) + ARS ) ) / ( FirstVNF_Mem_Server * Max( ( ( RRS + FirstVNF_Mem ) / Max( CRS,DDR ) ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / Min( ( ( Min( RMSe ,MUM ) * MUC ) - DS ) ,MUR ) )", "obj1": 0.9532163742690059, "obj2": 0.022509888831323176}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) + Max( ( PN / ( Min( FirstVNF_RAM ,Const ) - ACS ) ),( ARS - FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( MUC - CS ) + ( ( RCSe + RRSe ) * CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.628667751614014}, {"determining": "Max( ( BR * BR ),( Min( PN ,AMS ) * ( AMS - Const ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6725442266610322}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( Max( CS,DS ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.49902534113060426, "obj2": 0.4392737976157727}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( ( AMS / ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_CPU ) ) ) / PN ) + FirstVNF_CPU_Server ) ) - ( DDR / PN ) ) )", "choosing": "Max( ( MUC - MUM ),MUC )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU / ( ACS + RRS ) ) + ARS ) ) / ( FirstVNF_Mem_Server * Max( ( ( MRS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ,Max( MUM,RMSe ) )", "obj1": 0.6276803118908382, "obj2": 0.3361462123732105}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5735217630433272}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU / ( ACS + RRS ) ) + ARS ) ) / ( FirstVNF_Mem_Server * Max( ( ( MRS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,CS ) / Max( CS,Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.6276803118908382, "obj2": 0.3361462123732105}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( ( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( ARS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) / PN ) + CRS ) ) - ( DDR / PN ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Max( DS,RMSe ) ) ) ,( RRSe * CS ) )", "obj1": 0.9785575048732943, "obj2": 0.010231750288153157}, {"determining": "Max( ( BR * BR ),( Min( PN ,AMS ) * ( AMS - Const ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6717189932961813}, {"determining": "( PN - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( DS,( DS / ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( Max( ( ( Min( ( PN + ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( DDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( RCSe ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9746588693957114, "obj2": 0.01192862014420688}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( DS * Min( MLU ,RRSe ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5243664717348928, "obj2": 0.4288282783870147}, {"determining": "Min( ( ( BR / MDR ) - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUR - RCSe ),MUM ) / RRSe ) / ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) )", "obj1": 0.6471734892787524, "obj2": 0.3158994573344418}], "9": [{"determining": "Max( ( FirstVNF_Mem / ( BR - ( ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ACS ) - DDR ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( ( MDR - CRS ) * ( ( ( MRS / ( Const + Max( ACS,FirstVNF_Mem_Server ) ) ) - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + ( FirstVNF_Mem - RRS ) ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( ( MDR - PN ) * ( Max( ARS,FirstVNF_CPU ) - ( RRS - ARS ) ) ) ) ) + RRS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM * RMSe ) / ( Max( CS,Min( MLU ,MUC ) ) / Min( MLU ,( MUR + ( RMSe + MUM ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( CRS / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7719298245614035, "obj2": 0.12553972513856465}, {"determining": "( Max( ( ( ( ( ( ( PN * Const ) / CRS ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / MRS ) * ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( ( FirstVNF_RAM * ACS ) * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) ) - CS ) ) / ( MLU / RRSe ) ) / ( Max( MUM,Min( MUR ,RCSe ) ) + ( MUC / RMSe ) ) )", "obj1": 0.6569200779727096, "obj2": 0.2521333769897122}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ( ( FirstVNF_CPU - Min( BR ,MDR ) ) * ACS ) - CRS ) ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07878014599196173}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( CS - ( Min( Max( DS,RRSe ) ,( DS / CS ) ) + MLU ) )", "obj1": 0.7056530214424951, "obj2": 0.23295021823481407}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5730994152046783, "obj2": 0.3347758663096093}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5964912280701754, "obj2": 0.3232115725071609}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( ( ( BR / MDR ) + CRS ),( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * RRSe ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.530214424951267, "obj2": 0.38816569294364345}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU / ( CRS + RRS ) ) / Min( Const ,RRS ) ) + CRS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( ( ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe + CS ) ) ) ) - RCSe ),MUM ) + ( RMSe / ( Max( ( ( RRSe - MUR ) - MUR ),Max( Max( MUR,DS ),( RMSe * ( DS + MUR ) ) ) ) + RMSe ) ) ) )", "obj1": 0.8031189083820662, "obj2": 0.11400231433931321}, {"determining": "( ( ( ( FirstVNF_CPU_Server * AMS ) - ( MRS * FirstVNF_CPU_Server ) ) + ( CRS / FirstVNF_RAM_Server ) ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( FirstVNF_CPU * Max( ( DDR * AMS ),( BR + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( Min( ( MUC + MUR ) ,RCSe ) * ( DS * ( MUR * ( ( ( MUC - Max( MUC,RRSe ) ) / ( ( RRSe + RCSe ) / RCSe ) ) - Min( MUR ,MUM ) ) ) ) ) ,( ( CS * Min( DS ,RMSe ) ) * CS ) )", "obj1": 0.5555555555555556, "obj2": 0.36826639288887647}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( CS - ( MLU + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.7076023391812866, "obj2": 0.21469258232530683}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( DS,( DS / ( MUM - MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.7134502923976608, "obj2": 0.18210166064869718}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) + RMSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.8927875243664717, "obj2": 0.07167452317116524}, {"determining": "( ( Max( ( AMS * ( MRS - FirstVNF_Mem ) ),( ( MDR * ACS ) / FirstVNF_RAM ) ) - ARS ) * ( ( FirstVNF_RAM_Server + CRS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( ( RMSe + RMSe ) / ( Max( MUR,RCSe ) + ( MLU / MUC ) ) )", "obj1": 0.8206627680311891, "obj2": 0.09299391394699028}, {"determining": "( ( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.6296296296296297, "obj2": 0.30758682274454585}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( Max( MUC,MUC ),( DS * Min( MLU ,RRSe ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5282651072124757, "obj2": 0.4225251741769528}, {"determining": "( Max( BR,PN ) - MDR )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1690190551543611}, {"determining": "( ( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.6530214424951267, "obj2": 0.2932787490574746}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.7290448343079922, "obj2": 0.1690190551543611}, {"determining": "( Max( CRS,( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / Max( RMSe,MUM ) )", "obj1": 0.9025341130604289, "obj2": 0.06695110454567281}, {"determining": "( ( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - DDR ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,Min( Min( RCSe ,MUR ) ,MUM ) )", "obj1": 0.6491228070175439, "obj2": 0.29449986116216037}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( MUC + ( DS * Min( MLU ,RRSe ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.36826639288887647}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_RAM_Server ) / FirstVNF_RAM ) + ( AMS * FirstVNF_Mem_Server ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS - RRSe ) ) / ( ( Min( ( Min( ( MUC / MUM ) ,( MUM * RRSe ) ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5487876830339814}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( ( BR / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) ) - MDR )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.6296296296296297, "obj2": 0.30758682274454585}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,DS ) ,( RRSe * CS ) )", "obj1": 0.4327485380116959, "obj2": 0.521146974902762}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - MUM ),MUC ) * CS ) )", "obj1": 0.42105263157894735, "obj2": 0.5546752630579712}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),Min( RRS ,FirstVNF_CPU ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( RMSe,DS ) ),Max( CS,MLU ) ) / ( ( Min( ( Min( ( MUC / MUM ) ,RCSe ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5592506097835915}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * ( PN / ( Min( FirstVNF_RAM ,Const ) - ACS ) ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( RCSe + RRSe ) * CS ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( MUC + ( DS * Min( MLU ,RRSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.10061365936536171}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_RAM ) ) + PN ) - Max( Min( ( BR - PN ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( Max( DS,( ( MLU / ( Max( Min( RRSe ,DS ),RRSe ) + RMSe ) ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ) ,RRSe )", "obj1": 0.4697855750487329, "obj2": 0.473202595696656}, {"determining": "( Max( BR,PN ) - MDR )", "choosing": "Max( ( Max( ( CS / MUR ),RCSe ) - ( MUR + ( MUC / CS ) ) ),( MUM - RMSe ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * ( DS - MUR ) ) )", "obj1": 0.4580896686159844, "obj2": 0.49491868323534793}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( ( DDR / PN ) - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) * ( DS - MUR ) ) )", "obj1": 0.4678362573099415, "obj2": 0.484520789164871}, {"determining": "Max( ( PN / ( FirstVNF_CPU_Server + ( MDR / FirstVNF_RAM_Server ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,RRSe ) / Min( MLU ,CS ) ) ) * ( Min( ( ( Min( RMSe ,( ( MUC - MLU ) / MLU ) ) - MUM ) - ( MLU - ( MUM - MUC ) ) ) ,DS ) * CS ) )", "obj1": 0.37816764132553604, "obj2": 0.6150366544996497}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( MUC + ( RCSe * Min( RRSe ,MLU ) ) ) )", "obj1": 0.4873294346978557, "obj2": 0.4514421911089019}, {"determining": "( Max( ( Min( RRS ,Min( Max( ( MRS - MDR ),FirstVNF_RAM ) ,RRS ) ) + ( BR / Max( AMS,DDR ) ) ),Max( ( MDR * Max( MRS,Max( AMS,FirstVNF_Mem_Server ) ) ),CRS ) ) - ( PN - MDR ) )", "choosing": "Min( MUC ,Max( RMSe,CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6481148011871757}, {"determining": "( ( DDR / PN ) - Max( CRS,( ( ( RRS - FirstVNF_CPU_Server ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( MRS + ACS ) ) ) + ( FirstVNF_CPU_Server / RRS ) ) ) )", "choosing": "Min( ( Min( Max( Max( ( MUR * MLU ),( MUM + ( Min( MLU ,RRSe ) * DS ) ) ),RRSe ) ,Min( DS ,RMSe ) ) / ( MUR / MUM ) ) ,( RRSe * CS ) )", "obj1": 0.33723196881091616, "obj2": 0.6543764633421149}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.33528265107212474, "obj2": 0.6645434957811144}, {"determining": "( Max( CRS,( ( BR / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( DS,( DS / MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.9181286549707602, "obj2": 0.040677019026635036}, {"determining": "( Min( CRS ,( ( FirstVNF_Mem - AMS ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - Max( CS,DS ) ),MUM ) / ( Min( MUR ,( RRSe * MUC ) ) * MLU ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5794469294535602}, {"determining": "( ( CRS - ( CRS + ( ACS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem / PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( ( ( ( DS * MUC ) + ( DS / MUM ) ) - MLU ) ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * RMSe ) )", "obj1": 0.38791423001949316, "obj2": 0.5871629548575703}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4074074074074074, "obj2": 0.5729527882820196}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( DS / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5927544676257751}, {"determining": "Max( ( ARS - FirstVNF_CPU ),( PN / ( BR - Min( CRS ,( ( MDR * Max( MRS,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) + CRS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( ( CS - MUM ) / Min( Min( MUC ,Max( CS,Max( ( MLU / MLU ),CS ) ) ) ,CS ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6275072761620224}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,CS ) / Max( CS,Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.8927875243664717, "obj2": 0.07167452317116524}, {"determining": "Min( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( BR * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) ,( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( ( ( ( DS * MUC ) + ( DS / MUM ) ) - MLU ) ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * RMSe ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.3820662768031189, "obj2": 0.6056720011006211}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.48602618115773105}, {"determining": "( ( ( ACS / Max( BR,ARS ) ) + ACS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Max( DS,( ( RRSe + MUM ) - ( DS * ( RCSe + MLU ) ) ) ),( DS / ( MUR - ( CS - DS ) ) ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,MUC ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6985512447410996}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * ( ( RRSe * CS ) - MUR ) ) )", "obj1": 0.4444444444444444, "obj2": 0.5016348647877655}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( MDR * FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( Max( DS,( Min( MLU ,CS ) - Min( MLU ,DS ) ) ) + Max( MUR,( ( CS + MUC ) * RCSe ) ) ) + ( MUR * Max( DS,( DS / MUM ) ) ) ) - Min( RRSe ,MUR ) ) + RMSe ) / ( MLU / MUM ) )", "obj1": 0.32943469785575047, "obj2": 0.6715276889802532}, {"determining": "Max( ( ( ACS + FirstVNF_Mem_Server ) / ( BR - ACS ) ),Min( FirstVNF_CPU ,ARS ) )", "choosing": "Max( ( ( ( RCSe / RRSe ) - MUR ) / MUM ),Min( MUM ,MUM ) )", "obj1": 0.3723196881091618, "obj2": 0.6261255912997546}, {"determining": "( Max( CRS,( ( BR / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.9181286549707602, "obj2": 0.040677019026635036}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) + BR )", "choosing": "( ( Max( ( Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) - RCSe ),MUM ) / RRSe ) / ( DS + ( RMSe / MUC ) ) )", "obj1": 0.341130604288499, "obj2": 0.6515747276662583}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.47368421052631576, "obj2": 0.46502979403936917}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5126705653021443, "obj2": 0.43152546284189325}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5092255009643568}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( BR + ( Const * FirstVNF_RAM_Server ) ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( Min( ( ( ( CS / RCSe ) / ( RRSe / RMSe ) ) + MUM ) ,Max( RRSe,MUC ) ),( Max( CS,MLU ) - DS ) ) + MUC ) + RMSe ) / ( MLU / MUM ) )", "obj1": 0.3216374269005848, "obj2": 0.6736249678212208}, {"determining": "Min( ( ( RRS * ( ( ( ( FirstVNF_Mem * ( ARS / FirstVNF_Mem ) ) / ACS ) * CRS ) * FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ,Max( MDR,MDR ) )", "choosing": "( Min( Min( Max( ( MUM / Max( Min( CS ,MLU ),MUR ) ),RRSe ) ,( DS / CS ) ) ,MLU ) - CS )", "obj1": 0.30994152046783624, "obj2": 0.6894948266747633}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) )", "obj1": 0.48148148148148145, "obj2": 0.45827992125176464}, {"determining": "( Max( Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * ACS ) / FirstVNF_RAM ) + ( MDR + BR ) ) ) ),CRS ),CRS ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,Min( ( ( ( RCSe + DS ) / Min( ( RMSe / RCSe ) ,RMSe ) ) - Max( DS,( DS / Max( MUM,CS ) ) ) ) ,( MUR - RRSe ) ) ) + ( ( ( Max( CS,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) ) )", "obj1": 0.5224171539961013, "obj2": 0.42981979934671616}, {"determining": "Min( PN ,( MRS * FirstVNF_RAM ) )", "choosing": "Max( ( Min( MUC ,Max( DS,( DS / MUM ) ) ) - MUM ),MUC )", "obj1": 0.3001949317738791, "obj2": 0.7024967403554979}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6336149688745635}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.4327485380116959, "obj2": 0.521146974902762}, {"determining": "( ( Max( BR,PN ) - MDR ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 0.9337231968810916, "obj2": 0.032857652761928896}, {"determining": "Max( ( BR * BR ),( Min( PN ,AMS ) * ( AMS - Const ) ) )", "choosing": "Min( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ) ,RRSe )", "obj1": 0.29239766081871343, "obj2": 0.7111860473991829}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + AMS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( Max( ( ( RCSe / ( MUM * RRSe ) ) * MUR ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) + Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.442495126705653, "obj2": 0.5043036384913253}, {"determining": "( ( ( MRS / ( Const + Max( ACS,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_Mem_Server - DDR ) ) + ( Min( ARS ,BR ) / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( Min( DS ,MUR ) * Min( MLU ,( ( MUR * Max( MUC,RCSe ) ) * MUR ) ) ) ) ) / Min( ( MUC + MUM ) ,Max( DS,RMSe ) ) )", "obj1": 0.28460038986354774, "obj2": 0.724462859952405}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( Max( CS,DS ) ,RRSe )", "obj1": 0.9298245614035088, "obj2": 0.03433255215411097}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3937621832358674, "obj2": 0.5818218434720827}, {"determining": "( Max( CRS,( ( ACS / MDR ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) * ( Min( Max( ( Max( CS,DS ) / Max( ( Max( RRSe,MUC ) - MUM ),MLU ) ),RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6690818721798315}, {"determining": "( Max( ( ( BR / MDR ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( Max( RMSe,( ( Min( ( RRSe + ( RCSe * RMSe ) ) ,MUR ) - MUC ) / ( ( CS / MUC ) / DS ) ) ),( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9395711500974658, "obj2": 0.030371997366348154}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( DS * Min( MLU ,RRSe ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.48148148148148145, "obj2": 0.45827992125176464}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.8167641325536062, "obj2": 0.09575226478392686}, {"determining": "Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( DDR * FirstVNF_Mem ) * Const ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6425044674475092}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( ( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( ARS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) / PN ) + CRS ) ) - ( DDR / PN ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Max( DS,RMSe ) ) ) ,( RRSe * CS ) )", "obj1": 0.9785575048732943, "obj2": 0.010231750288153157}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( DDR * FirstVNF_Mem ) * Const ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.31968810916179335, "obj2": 0.6814919592662911}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_Mem_Server ) ) + PN ) - ( Min( Max( PN,FirstVNF_CPU_Server ) ,( AMS * FirstVNF_CPU ) ) - ( Min( DDR ,AMS ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( Min( ( Max( ( RMSe * MUR ),( RCSe - DS ) ) - RRSe ) ,( Max( Max( ( RMSe - RRSe ),RRSe ),Min( MUC ,RRSe ) ) + MUC ) ) / Max( Min( RRSe ,MUC ),Min( MUC ,MUM ) ) ) ,( RRSe - CS ) )", "obj1": 0.3138401559454191, "obj2": 0.6843375102432491}, {"determining": "( Max( CRS,( ( ACS / ( ( ( FirstVNF_CPU / ( ACS + RRS ) ) + ARS ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) + Min( ( RMSe * DS ) ,MUM ) )", "obj1": 0.9844054580896686, "obj2": 0.007169609017911553}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4951267056530214, "obj2": 0.4467352171914445}, {"determining": "Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( DDR * FirstVNF_Mem ) * Const ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6425044674475092}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( ( MDR * ACS ) / FirstVNF_RAM ) ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / ( Max( MUC,Min( ( ( ( RCSe + DS ) / Min( ( RMSe / RCSe ) ,RMSe ) ) - Max( DS,( DS / Max( MUM,CS ) ) ) ) ,( MUR - RRSe ) ) ) + ( ( ( Max( CS,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4400990309806235}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.3820662768031189, "obj2": 0.6056720011006211}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( RCSe + MLU ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014929515184381424}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.43859649122807015, "obj2": 0.5092255009643568}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) + Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.6192328818818907}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ,Max( MUM,RMSe ) )", "obj1": 0.47368421052631576, "obj2": 0.46502979403936917}, {"determining": "( ( ACS - ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) - Max( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.50682261208577, "obj2": 0.43466330709666456}, {"determining": "Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( MLU / MUC ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3567251461988304, "obj2": 0.6339231838890576}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( Min( ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_CPU ) ) ,AMS ) / PN ) + FirstVNF_CPU_Server ) ) - ( ( MDR - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) / PN ) ) )", "choosing": "Min( ( Min( ( RMSe + MUM ) ,Min( MUR ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUR ,MUC ) ) ) ,( ( DS - MUR ) * RRSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.9298245614035088, "obj2": 0.03433255215411097}, {"determining": "Min( ( ( BR / MDR ) - Max( ( AMS - ( PN - DDR ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,( Max( ( MLU / MUC ),( RMSe + Min( Min( RCSe ,( CS / DS ) ) ,MUM ) ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.9649122807017544, "obj2": 0.017557089073139673}, {"determining": "( ( ( MRS / ( Const + Max( ACS,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_Mem_Server - DDR ) ) + ( Min( ARS ,BR ) / ( FirstVNF_RAM_Server * ARS ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( Max( CS,DS ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.724462859952405}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.40350877192982454, "obj2": 0.5735217630433272}, {"determining": "( Max( CRS,( ( ( ( DDR - FirstVNF_CPU ) + PN ) / ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + BR ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Max( CS,Max( ( MUR * MLU ),( ( DS * Min( MLU ,( RCSe + MLU ) ) ) + ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.9571150097465887, "obj2": 0.020707548307415707}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.49122807017543857, "obj2": 0.44887590819964635}], "10": [{"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( ( ( Max( ( ( RCSe / ( MUM * RRSe ) ) * MUR ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) + Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - CRS ) * ( ( ( MRS / ( Const + Max( ACS,FirstVNF_Mem_Server ) ) ) - ARS ) - Max( ARS,FirstVNF_CPU ) ) )", "choosing": "( Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),( DS / MLU ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2795524630378345}, {"determining": "( Max( ( ( ( ( ( ( PN * Const ) / CRS ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / MRS ) * ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( ( FirstVNF_RAM * ACS ) * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) ) - CS ) ) / ( MLU / RRSe ) ) / ( Max( MUM,Min( MUR ,RCSe ) ) + ( MUC / RMSe ) ) )", "obj1": 0.6569200779727096, "obj2": 0.2521333769897122}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ( ( FirstVNF_CPU - Min( BR ,MDR ) ) * ACS ) - CRS ) ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07878014599196173}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( PN - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUM * RMSe ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1590973184022731}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( CS - ( Min( Max( DS,RRSe ) ,( DS / CS ) ) + MLU ) )", "obj1": 0.7056530214424951, "obj2": 0.23295021823481407}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5964912280701754, "obj2": 0.3232115725071609}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5730994152046783, "obj2": 0.3347758663096093}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) + RMSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.8927875243664717, "obj2": 0.07167452317116524}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( DDR ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / Max( CS,DS ) ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7699805068226121, "obj2": 0.12644089540051834}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( FirstVNF_RAM_Server - Max( MDR,FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( Max( CS,Min( Max( MUC,CS ) ,MLU ) ) * Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( RRSe * ( DS - MUR ) ) / Max( ( MUR / MLU ),DS ) ) ) - MUM ),( DS / MUR ) ) * CS ) )", "obj1": 0.42105263157894735, "obj2": 0.5502451787472703}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ARS / ( RRS / MDR ) ) ) ) ) - Max( Min( MDR ,Const ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe - ( RMSe + MLU ) ) / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.35128849927844247}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,CS ) / Max( CS,Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.5224171539961013, "obj2": 0.4053970721903564}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.8206627680311891, "obj2": 0.09299391394699026}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU / ( CRS + RRS ) ) / Min( Const ,RRS ) ) + CRS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( ( ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe + CS ) ) ) ) - RCSe ),MUM ) + ( RMSe / ( Max( ( ( RRSe - MUR ) - MUR ),Max( Max( MUR,DS ),( RMSe * ( DS + MUR ) ) ) ) + RMSe ) ) ) )", "obj1": 0.8031189083820662, "obj2": 0.11400231433931321}, {"determining": "( ( ( ( FirstVNF_CPU_Server * AMS ) - ( MRS * FirstVNF_CPU_Server ) ) + ( CRS / FirstVNF_RAM_Server ) ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( FirstVNF_CPU * Max( ( DDR * AMS ),( BR + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( Min( ( MUC + MUR ) ,RCSe ) * ( DS * ( MUR * ( ( ( MUC - Max( MUC,RRSe ) ) / ( ( RRSe + RCSe ) / RCSe ) ) - Min( MUR ,MUM ) ) ) ) ) ,( ( CS * Min( DS ,RMSe ) ) * CS ) )", "obj1": 0.5555555555555556, "obj2": 0.36826639288887647}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( DDR + FirstVNF_Mem_Server ) ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( Max( ( ( RCSe / ( MUM * RRSe ) ) * MUR ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) + Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + ( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4269005847953216, "obj2": 0.52558838844923}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.8947368421052632, "obj2": 0.05169693845554439}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5964912280701754, "obj2": 0.3232115725071609}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),Min( RRS ,FirstVNF_CPU ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( RMSe,DS ) ),Max( CS,MLU ) ) / ( ( Min( ( Min( ( MUC / MUM ) ,RCSe ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5592506097835915}, {"determining": "( ( AMS + CRS ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ( ( ( BR / MDR ) + CRS ) / ( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( Min( MUR ,MUR ) / Min( Min( DS ,DS ) ,MUR ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.530214424951267, "obj2": 0.38816569294364345}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( RRS * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Min( Const ,CRS ) + FirstVNF_CPU_Server ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.7134502923976608, "obj2": 0.18210166064869718}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( CS - ( MLU + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.7076023391812866, "obj2": 0.21469258232530683}, {"determining": "( ( AMS + FirstVNF_RAM ) - Max( Min( Max( CRS,FirstVNF_CPU ) ,MDR ),( Min( AMS ,FirstVNF_CPU_Server ) / ( MRS - Max( MRS,( ( CRS * BR ) - PN ) ) ) ) ) )", "choosing": "Min( ( ( ( ( CS - CS ) / MUR ) * MLU ) * RMSe ) ,( MUR - CS ) )", "obj1": 0.7719298245614035, "obj2": 0.12553972513856465}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5126705653021443, "obj2": 0.43152546284189325}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( DS / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5986435669862958}, {"determining": "( ( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) - ( ARS * FirstVNF_CPU_Server ) ) + ( Const - FirstVNF_Mem_Server ) ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( BR ,AMS ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUM + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( Min( MUR ,Min( MUC ,( MUR * MUR ) ) ),RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.4697855750487329, "obj2": 0.4727361149326528}, {"determining": "Max( ( PN / ( FirstVNF_CPU_Server + ( MDR / FirstVNF_RAM_Server ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,RRSe ) / Min( MLU ,CS ) ) ) * ( Min( ( ( Min( RMSe ,( ( MUC - MLU ) / MLU ) ) - MUM ) - ( MLU - ( MUM - MUC ) ) ) ,DS ) * CS ) )", "obj1": 0.37816764132553604, "obj2": 0.6150366544996497}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ( ARS / RRS ) * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,MDR ),( Min( AMS ,BR ) / Max( Min( PN ,MRS ),( PN + ARS ) ) ) ) )", "choosing": "Min( ( ( RRSe - RMSe ) * DS ) ,( CS / ( MLU * MLU ) ) )", "obj1": 0.5282651072124757, "obj2": 0.39900127177990335}, {"determining": "( ( ( ( ( Const - ( FirstVNF_CPU * ( DDR + FirstVNF_CPU_Server ) ) ) * Const ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) / BR ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( RRSe - ( ( MUR - DS ) + ( ( Min( CS ,MUC ) + MUM ) / ( RMSe * RMSe ) ) ) )", "obj1": 0.7076023391812866, "obj2": 0.21469258232530683}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5555555555555556, "obj2": 0.36826639288887647}, {"determining": "Max( ( ARS - FirstVNF_CPU ),( PN / ( BR - Min( CRS ,( ( MDR * Max( MRS,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) + CRS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( ( CS - MUM ) / Min( Min( MUC ,Max( CS,Max( ( MLU / MLU ),CS ) ) ) ,CS ) ) )", "obj1": 0.3664717348927875, "obj2": 0.6275072761620224}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.48429977753092657}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( ( ( BR / MDR ) + CRS ),( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * RRSe ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.530214424951267, "obj2": 0.38816569294364345}, {"determining": "( ( FirstVNF_Mem * MRS ) - MDR )", "choosing": "Min( ( Min( ( ( ( MUR * MLU ) / ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( ( RRSe * CS ) ,Max( ( DS / ( MLU * MUC ) ),DS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.7290448343079922, "obj2": 0.1690190551543611}, {"determining": "( Max( ( ( ( FirstVNF_CPU / ( ACS + RRS ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( ( ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) - RCSe ),MUM ) + ( RMSe / MUC ) ) )", "obj1": 0.8031189083820662, "obj2": 0.11400231433931321}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,CS ) / Max( CS,Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.7056530214424951, "obj2": 0.23295021823481407}, {"determining": "Max( ( PN / ( ( Max( RRS,FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) - MDR ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ),Min( ( RCSe * ( MLU / Min( DS ,CS ) ) ) ,MLU ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3333333333333333, "obj2": 0.663563596558093}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( ( MDR * ACS ) / FirstVNF_RAM ) ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / ( Max( MUC,Min( ( ( ( RCSe + DS ) / Min( ( RMSe / RCSe ) ,RMSe ) ) - Max( DS,( DS / Max( MUM,CS ) ) ) ) ,( MUR - RRSe ) ) ) + ( ( ( Max( CS,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4400990309806235}, {"determining": "( Max( CRS,( ( ( ( DDR - FirstVNF_CPU ) + PN ) / ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + BR ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Max( CS,Max( ( MUR * MLU ),( ( DS * Min( MLU ,( RCSe + MLU ) ) ) + ( MUC / RRSe ) ) ) ) ) )", "obj1": 0.9571150097465887, "obj2": 0.020707548307415707}, {"determining": "( Max( CRS,( ( FirstVNF_RAM / ( ( ARS * MDR ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + ( FirstVNF_Mem_Server / ( Max( MDR,Max( DDR,FirstVNF_Mem ) ) - ( FirstVNF_RAM * PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe - RRSe ) / ( RMSe / MLU ) ) / ( Min( MLU ,CS ) / Max( CS,Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,CS ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6811706877945489}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( Min( ( FirstVNF_RAM * ( FirstVNF_Mem + FirstVNF_CPU ) ) ,AMS ) / PN ) + FirstVNF_CPU_Server ) ) - ( ( MDR - Max( ( ( MRS - FirstVNF_CPU ) - ( ( DDR + FirstVNF_Mem_Server ) + Max( Const,FirstVNF_Mem ) ) ),( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) / PN ) ) )", "choosing": "Min( ( Min( ( RMSe + MUM ) ,Min( MUR ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUR ,MUC ) ) ) ,( ( DS - MUR ) * RRSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( Max( BR,Min( CRS ,( ( MDR - ARS ) + DDR ) ) ) - BR ) - Max( ( MDR + ( RRS / ( ACS / FirstVNF_RAM_Server ) ) ),( Min( AMS ,BR ) / ( DDR * ( ( MDR * FirstVNF_RAM ) - ( BR / MDR ) ) ) ) ) )", "choosing": "( ( ( MLU / MUM ) + ( RCSe * RRSe ) ) - Max( Max( Max( Max( RRSe,CS ),Min( RMSe ,CS ) ),Max( DS,( ( ( MUM - ( DS * MUM ) ) + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ) ),( RMSe + RMSe ) ) )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Min( CRS ,( ( FirstVNF_Mem - AMS ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( MUR - Max( CS,DS ) ),MUM ) / ( Min( MUR ,( RRSe * MUC ) ) * MLU ) ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5794469294535602}, {"determining": "Max( ( PN / ( BR - ACS ) ),( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),Min( Max( MUM,RMSe ) ,MUC ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5132244073404489}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4074074074074074, "obj2": 0.5729527882820196}, {"determining": "( ( ( ( FirstVNF_CPU_Server / CRS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( Min( AMS ,BR ) / ( ( PN / ( Min( FirstVNF_RAM ,Const ) - ( ( RRS - PN ) - FirstVNF_CPU_Server ) ) ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( Max( RRSe,RRSe ) * CS ) * MUR ),( ( RCSe + RRSe ) * CS ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( MUC + ( DS * ( MLU + RRSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.10061365936536171}, {"determining": "( Max( Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / ( FirstVNF_Mem_Server * ( ( ( MDR * ACS ) / FirstVNF_RAM ) + ( MDR + BR ) ) ) ),CRS ),CRS ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,Min( ( ( ( RCSe + DS ) / Min( ( RMSe / RCSe ) ,RMSe ) ) - Max( DS,( DS / Max( MUM,CS ) ) ) ) ,( MUR - RRSe ) ) ) + ( ( ( Max( CS,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) ) )", "obj1": 0.37037037037037035, "obj2": 0.6181294138965884}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - FirstVNF_Mem_Server )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( RCSe + MLU ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014929515184381424}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.48602618115773105}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6336149688745635}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "( ( CRS - ( CRS + ( ACS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem / PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( ( ( ( DS * MUC ) + ( DS / MUM ) ) - MLU ) ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * RMSe ) )", "obj1": 0.38791423001949316, "obj2": 0.5871629548575703}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( MDR * FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( Max( DS,( Min( MLU ,CS ) - Min( MLU ,DS ) ) ) + Max( MUR,( ( CS + MUC ) * RCSe ) ) ) + ( MUR * Max( DS,( DS / MUM ) ) ) ) - Min( RRSe ,MUR ) ) + RMSe ) / ( MLU / MUM ) )", "obj1": 0.32943469785575047, "obj2": 0.6715276889802532}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( AMS - FirstVNF_CPU_Server ) ) + PN ) - ( FirstVNF_RAM / ( FirstVNF_Mem + MRS ) ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RCSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.3216374269005848, "obj2": 0.6736249678212208}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem ) * Const ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.2884990253411306, "obj2": 0.7233831821249308}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( Const + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) * CS ) )", "obj1": 0.5048732943469786, "obj2": 0.4372837238875344}, {"determining": "Min( ( ( BR / MDR ) - Max( ( AMS - ( PN - DDR ) ),MDR ) ) ,( MRS * FirstVNF_RAM ) )", "choosing": "( Max( MUM,( Max( ( MLU / MUC ),( RMSe + Min( Min( RCSe ,( CS / DS ) ) ,MUM ) ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) ) - Max( ( ( MUM + ( RCSe - RMSe ) ) - ( ( RCSe * RCSe ) * RMSe ) ),( Max( Min( RCSe ,CS ),RCSe ) * DS ) ) )", "obj1": 0.9649122807017544, "obj2": 0.017557089073139673}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server + ( ( FirstVNF_CPU / ( ACS + RRS ) ) + ARS ) ) / ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + BR ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,CS ) / Max( CS,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,( RCSe + MLU ) ) ) ) ) ) ) )", "obj1": 0.9571150097465887, "obj2": 0.020707548307415707}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * ( PN / ( Min( FirstVNF_RAM ,Const ) - ACS ) ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( RCSe + RRSe ) * CS ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( MUC + ( DS * Min( MLU ,RRSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.10061365936536171}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( DS / RRSe ) / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5927544676257751}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( RMSe,RRSe ) + ( Min( RMSe ,( Max( RCSe,MUC ) + Min( MLU ,RRSe ) ) ) * RMSe ) ) / ( Max( RMSe,RRSe ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.4756335282651072, "obj2": 0.46370864274244855}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,MDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( RRSe ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4502923976608187, "obj2": 0.5005357356389273}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - MDR ) + BR )", "choosing": "( ( Max( ( Min( RMSe ,MLU ) - RCSe ),MUM ) / RRSe ) / ( DS + ( RMSe / MUC ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6344640641316874}, {"determining": "( Max( ( Min( RRS ,Min( Max( ( MRS - MDR ),FirstVNF_RAM ) ,RRS ) ) + ( BR / Max( AMS,DDR ) ) ),Max( ( MDR * Max( MRS,Max( AMS,FirstVNF_Mem_Server ) ) ),CRS ) ) - ( PN - MDR ) )", "choosing": "Min( MUC ,Max( RMSe,CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6481148011871757}, {"determining": "( Max( BR,PN ) - MDR )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 0.7290448343079922, "obj2": 0.1690190551543611}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,DS ) ,( RRSe * CS ) )", "obj1": 0.4327485380116959, "obj2": 0.521146974902762}, {"determining": "( ( Max( BR,PN ) - MDR ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 0.9337231968810916, "obj2": 0.03285765276192889}, {"determining": "( Max( CRS,( ( BR / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( DS,( DS / MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.9181286549707602, "obj2": 0.040677019026635036}, {"determining": "( ( ACS - ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) - Max( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.50682261208577, "obj2": 0.43466330709666456}, {"determining": "( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * MUR ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * ( ( RRSe * CS ) - MUR ) ) )", "obj1": 0.45419103313840153, "obj2": 0.4968618289467213}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7719298245614035, "obj2": 0.12553972513856465}, {"determining": "( ( ( ACS / Max( BR,ARS ) ) + ACS ) - ( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Max( Max( Max( DS,( ( RRSe + MUM ) - ( DS * ( RCSe + MLU ) ) ) ),( DS / ( MUR - ( CS - DS ) ) ) ),( RMSe + RMSe ) ) / ( Max( CS,Min( MLU ,CS ) ) / Min( MLU ,MUC ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6985512447410996}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3937621832358674, "obj2": 0.5818218434720827}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Max( CS,Min( MLU ,RRSe ) ) ,RRSe )", "obj1": 0.33528265107212474, "obj2": 0.6572466079294683}, {"determining": "( ( ( ( ( ( FirstVNF_Mem * ( FirstVNF_RAM * Max( DDR,FirstVNF_Mem_Server ) ) ) / PN ) / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) - PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( Max( RRSe,( CS / RMSe ) ) + ( MUR / RCSe ) ) - RCSe ) + ( RRSe / MLU ) ) ,( RRSe * CS ) )", "obj1": 0.5126705653021443, "obj2": 0.43152546284189325}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * ( DS - MUR ) ) )", "obj1": 0.4580896686159844, "obj2": 0.49491868323534793}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * ( ( RRSe * CS ) - MUR ) ) )", "obj1": 0.4853801169590643, "obj2": 0.4548237634589733}, {"determining": "Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( DDR * FirstVNF_Mem ) * Const ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6425044674475092}, {"determining": "( Max( Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ACS ) ),CRS ),CRS ) - ( Const + FirstVNF_RAM ) )", "choosing": "( ( DS - RRSe ) / ( Max( MUC,Min( ( ( Max( ( MUM - MLU ),RRSe ) / Min( ( RMSe / RCSe ) ,RMSe ) ) - Max( DS,( DS / Max( MUM,CS ) ) ) ) ,( MUR - RRSe ) ) ) + ( ( ( Max( CS,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) ) )", "obj1": 0.9941520467836257, "obj2": 0.0031263629622271766}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( CS + RRSe ) ,( MUC + ( RCSe * Min( RRSe ,MLU ) ) ) )", "obj1": 0.4873294346978557, "obj2": 0.4514421911089019}, {"determining": "Min( ( ( RRS * ( ( ( ( FirstVNF_Mem * ( ARS / FirstVNF_Mem ) ) / ACS ) * CRS ) * FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ,Max( MDR,MDR ) )", "choosing": "( Min( Min( Max( ( MUM / Max( Min( CS ,MLU ),MUR ) ),RRSe ) ,( DS / CS ) ) ,MLU ) - CS )", "obj1": 0.30994152046783624, "obj2": 0.6894948266747633}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( MRS ,RRS ) / ( Max( RRS,( AMS + BR ) ) * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( ( RRSe + MUC ) / ( DS * MUR ) ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / DS ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.47173489278752434, "obj2": 0.46585502740421986}, {"determining": "( ( DDR / PN ) - Max( CRS,( ( ( RRS - FirstVNF_CPU_Server ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( MRS + ACS ) ) ) + ( FirstVNF_CPU_Server / RRS ) ) ) )", "choosing": "Min( ( Min( Max( Max( ( MUR * MLU ),( MUM + ( Min( MLU ,RRSe ) * DS ) ) ),RRSe ) ,Min( DS ,RMSe ) ) / ( MUR / MUM ) ) ,( RRSe * CS ) )", "obj1": 0.33723196881091616, "obj2": 0.6543764633421149}, {"determining": "( ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) + BR )", "choosing": "( ( Max( ( Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) - RCSe ),MUM ) / RRSe ) / ( DS + ( RMSe / MUC ) ) )", "obj1": 0.341130604288499, "obj2": 0.6515747276662583}, {"determining": "( Max( ( Max( ( PN / ( ACS - ( ( RRS / ACS ) * FirstVNF_RAM_Server ) ) ),( ARS - FirstVNF_CPU ) ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( Max( MUM,( ( Min( ( ( MUR * RCSe ) + ( RCSe * RMSe ) ) ,MUR ) - MUC ) / ( ( CS / MUC ) / DS ) ) ),( Max( RMSe,MUM ) + Min( ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) / ( ( Max( CS,MUM ) / Min( MLU ,CS ) ) + ( RMSe / MUC ) ) )", "obj1": 0.9902534113060428, "obj2": 0.004907606640107083}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( DS,( DS / ( MUM - MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.7153996101364523, "obj2": 0.18114565033566807}, {"determining": "( Max( BR,PN ) - MDR )", "choosing": "Min( ( Max( RRSe,RMSe ) + RCSe ) ,Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( Max( ( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ),( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) + Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( Max( DS,( DS / ( MUM - MLU ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.6181187024114421}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( ( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( ARS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) / PN ) + CRS ) ) - ( DDR / PN ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Max( DS,RMSe ) ) ) ,( RRSe * CS ) )", "obj1": 0.9785575048732943, "obj2": 0.010231750288153157}, {"determining": "Max( ( FirstVNF_Mem / ( BR - ( ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ACS ) - DDR ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "( ( ( Max( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6949258115017989}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( ( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( ARS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) / PN ) + CRS ) ) - ( DDR / PN ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Max( DS,RMSe ) ) ) ,( RRSe * CS ) )", "obj1": 0.9785575048732943, "obj2": 0.010231750288153157}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4951267056530214, "obj2": 0.4467352171914445}, {"determining": "Min( Max( CRS,( ( Min( ARS ,( FirstVNF_Mem_Server / Max( Const,RRS ) ) ) / ( FirstVNF_Mem_Server * Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( BR * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) ,( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,RCSe ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * ( DS - RCSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.707147400077198}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + Min( PN ,( MRS * FirstVNF_RAM ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( Max( DS,( DS / MUM ) ) ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.40350877192982454, "obj2": 0.5735217630433272}, {"determining": "Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( DDR * FirstVNF_Mem ) * Const ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6425044674475092}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5899168801888947}], "11": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( ( ( Max( ( ( RCSe / ( MUM * RRSe ) ) * MUR ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) + Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( ( ( Max( ( ( RCSe / ( MUM * RRSe ) ) * MUR ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) + Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) * FirstVNF_Mem ) * Const ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.847953216374269, "obj2": 0.0750158836670307}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( CS - ( Min( Max( DS,RRSe ) ,( DS / CS ) ) + MLU ) )", "obj1": 0.7056530214424951, "obj2": 0.23295021823481407}, {"determining": "( Max( ( ( ( ARS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.6569200779727096, "obj2": 0.2521333769897122}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5964912280701754, "obj2": 0.3232115725071609}, {"determining": "( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2795524630378345}, {"determining": "( Max( CRS,( ( ACS / ( Min( ( FirstVNF_Mem / ARS ) ,MRS ) * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( ( ( MLU - CS ) - Max( Max( RCSe,MUC ),MUM ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( MUR - DS ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUR - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.3645224171539961, "obj2": 0.6158839564215816}, {"determining": "( ( Const / AMS ) - Min( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ,Min( ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ,( RRS - ACS ) ) ) )", "choosing": "( ( ( MUC + Min( Max( Max( Min( ( CS - RRSe ) ,RRSe ),( DS + RMSe ) ),DS ) ,( RRSe / MUM ) ) ) - MUR ) / ( ( ( ( Max( MUR,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) + Max( RRSe,( Max( MLU,MUM ) / MLU ) ) ) )", "obj1": 0.5458089668615984, "obj2": 0.3757011029584816}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) / ( Max( RRS,( Max( FirstVNF_Mem_Server,ACS ) + Max( FirstVNF_Mem_Server,Const ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( DS * CS ) ,( ( ( DS - MUR ) * RRSe ) * RRSe ) )", "obj1": 0.645224171539961, "obj2": 0.25864560415326066}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.7115009746588694, "obj2": 0.21291133864742692}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( ( Max( RRS,( CRS - Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) * FirstVNF_CPU ) / Min( MRS ,BR ) ) ) )", "choosing": "Max( Max( DS,( MLU + MUR ) ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( MLU * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5255883884492297}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ),DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( DS * Min( MLU ,( RCSe + MLU ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5964912280701754, "obj2": 0.3232115725071609}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Max( ( CRS + FirstVNF_CPU_Server ),BR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * DDR ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( MUC * ( DS * Min( DS ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,( RRSe * CS ) )", "obj1": 0.5107212475633528, "obj2": 0.4298421360642653}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( RRS * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Min( Const ,CRS ) + FirstVNF_CPU_Server ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.7134502923976608, "obj2": 0.18210166064869718}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5886939571150097, "obj2": 0.33161237555090706}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7680311890838206, "obj2": 0.12739690571354748}, {"determining": "( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.631578947368421, "obj2": 0.2688468646067804}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( RRSe ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / RRSe ) ,( RRSe * CS ) )", "obj1": 0.5165692007797271, "obj2": 0.40870861357391386}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.37816764132553604, "obj2": 0.6025022082202762}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.8947368421052632, "obj2": 0.05169693845554439}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( AMS / FirstVNF_CPU_Server ) ) + PN ) - ( MDR - ( MRS * BR ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RMSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.142770966364574}, {"determining": "( Max( ( ( ( ( ( ( PN * Const ) / CRS ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / MRS ) * ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( ( FirstVNF_RAM * ACS ) * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) ) - CS ) ) / ( MLU / RRSe ) ) / ( Max( MUM,Min( MUR ,RCSe ) ) + ( MUC / RMSe ) ) )", "obj1": 0.6569200779727096, "obj2": 0.2521333769897122}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU / ( CRS + RRS ) ) / Min( Const ,RRS ) ) + CRS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( ( ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe + CS ) ) ) ) - RCSe ),MUM ) + ( RMSe / ( Max( ( ( RRSe - MUR ) - MUR ),Max( Max( MUR,DS ),( RMSe * ( DS + MUR ) ) ) ) + RMSe ) ) ) )", "obj1": 0.8031189083820662, "obj2": 0.11400231433931321}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( FirstVNF_RAM_Server - Max( MDR,FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( Max( CS,Min( Max( MUC,CS ) ,MLU ) ) * Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( RRSe * ( DS - MUR ) ) / Max( ( MUR / MLU ),DS ) ) ) - MUM ),( DS / MUR ) ) * CS ) )", "obj1": 0.42105263157894735, "obj2": 0.5502451787472703}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.571150097465887, "obj2": 0.34361054415905457}, {"determining": "( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2795524630378345}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5730994152046783, "obj2": 0.3347758663096093}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ( FirstVNF_Mem_Server * Max( ( RRS * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * ( ( RMSe * MLU ) / CS ) ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.35128849927844247}, {"determining": "( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * MUR ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * ( ( RRSe * CS ) - MUR ) ) )", "obj1": 0.44834307992202727, "obj2": 0.4958521216691232}, {"determining": "( Max( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ),CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( MUC * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.8206627680311891, "obj2": 0.09299391394699026}, {"determining": "Max( ( PN / ( BR - ACS ) ),( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),Min( Max( MUM,RMSe ) ,MUC ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5077088314693472}, {"determining": "( ( ( ( FirstVNF_CPU_Server * AMS ) - ( MRS * FirstVNF_CPU_Server ) ) + ( CRS / FirstVNF_RAM_Server ) ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( FirstVNF_CPU * Max( ( DDR * AMS ),( BR + FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( Min( ( MUC + MUR ) ,RCSe ) * ( DS * ( MUR * ( ( ( MUC - Max( MUC,RRSe ) ) / ( ( RRSe + RCSe ) / RCSe ) ) - Min( MUR ,MUM ) ) ) ) ) ,( ( CS * Min( DS ,RMSe ) ) * CS ) )", "obj1": 0.5555555555555556, "obj2": 0.36826639288887647}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( ( ( BR / MDR ) + CRS ),( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * RRSe ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.530214424951267, "obj2": 0.38816569294364345}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.4697855750487329, "obj2": 0.47064772036886154}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( ( MDR * ACS ) / FirstVNF_RAM ) ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) / ( Max( MUC,Min( ( ( ( RCSe + DS ) / Min( ( RMSe / RCSe ) ,RMSe ) ) - Max( DS,( DS / Max( MUM,CS ) ) ) ) ,( MUR - RRSe ) ) ) + ( ( ( Max( CS,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) ) )", "obj1": 0.4853801169590643, "obj2": 0.45434510751873075}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6336149688745635}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( BR + FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8089668615984406, "obj2": 0.10308135664344174}, {"determining": "Min( Max( CRS,( ( Min( ARS ,( FirstVNF_Mem_Server / Max( Const,RRS ) ) ) / ( FirstVNF_Mem_Server * Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( BR * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) ,( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,RCSe ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * ( DS - RCSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.707147400077198}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 0.7076023391812866, "obj2": 0.21469258232530683}, {"determining": "( Max( CRS,( ( ACS / ( ( ( MDR * ACS ) / FirstVNF_RAM ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6658461853225704}, {"determining": "Max( ( PN / ( BR - ACS ) ),( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( Max( RRS,MDR ) * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),Min( Max( MUM,RMSe ) ,MUC ) ) / ( CS - ( Min( Max( DS,RRSe ) ,( DS / CS ) ) + MLU ) ) )", "obj1": 0.45614035087719296, "obj2": 0.49476033278155357}, {"determining": "( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( Min( MLU ,CS ) / Max( CS,Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.7056530214424951, "obj2": 0.23295021823481407}, {"determining": "( Max( CRS,( ( ACS / ( ( FirstVNF_CPU_Server / AMS ) * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS * RRSe ) ) / ( ( Min( ( Min( ( MUC / MUM ) ,( RMSe - MUM ) ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.4152046783625731, "obj2": 0.553072986487266}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.7290448343079922, "obj2": 0.1690190551543611}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( PN - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUM * RMSe ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1590973184022731}, {"determining": "Min( ( ( RRS * ( ( ( ( FirstVNF_Mem * ( ARS / FirstVNF_Mem ) ) / ACS ) * CRS ) * FirstVNF_CPU_Server ) ) - Min( ( FirstVNF_Mem_Server - CRS ) ,ACS ) ) ,Max( MDR,MDR ) )", "choosing": "( Min( Min( Max( ( MUM / Max( Min( CS ,MLU ),MUR ) ),RRSe ) ,( DS / CS ) ) ,MLU ) - CS )", "obj1": 0.30994152046783624, "obj2": 0.6894948266747633}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( PN - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUM * RMSe ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.7504873294346979, "obj2": 0.15819614814031938}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.8206627680311891, "obj2": 0.09299391394699026}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5592506097835915}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ARS * FirstVNF_RAM_Server ) ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.391812865497076, "obj2": 0.5768670053677267}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ( ARS / RRS ) * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,MDR ),( Min( AMS ,BR ) / Max( Min( PN ,MRS ),( PN + ARS ) ) ) ) )", "choosing": "Min( ( ( RRSe - RMSe ) * DS ) ,( CS / ( MLU * MLU ) ) )", "obj1": 0.5282651072124757, "obj2": 0.39900127177990335}, {"determining": "( ( CRS - ( CRS + ( ACS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem / PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( ( ( ( DS * MUC ) + ( DS / MUM ) ) - MLU ) ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * RMSe ) )", "obj1": 0.38791423001949316, "obj2": 0.5871629548575703}, {"determining": "( Max( ( Min( RRS ,Min( Max( ( MRS - MDR ),FirstVNF_RAM ) ,RRS ) ) + ( BR / Max( AMS,DDR ) ) ),Max( ( MDR * Max( MRS,Max( AMS,FirstVNF_Mem_Server ) ) ),CRS ) ) - ( PN - MDR ) )", "choosing": "Min( MUC ,Max( RMSe,CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6481148011871757}, {"determining": "( ( CRS + ( ( BR / ( Max( ( ARS - MDR ),Min( ( FirstVNF_RAM_Server - AMS ) ,RRS ) ) + ( FirstVNF_RAM_Server / PN ) ) ) + ACS ) ) - ( MDR / CRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( MLU,RRSe ) + RCSe ) )", "obj1": 0.6296296296296297, "obj2": 0.2768668703630618}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4074074074074074, "obj2": 0.5729527882820196}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( AMS - FirstVNF_CPU_Server ) ) + PN ) - ( FirstVNF_RAM / ( FirstVNF_Mem + MRS ) ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RCSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.142770966364574}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( ( DDR + BR ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RCSe ) ) / ( Max( ( Min( RMSe ,( Min( MUR ,Max( CS,MUR ) ) + MUR ) ) - RCSe ),MUM ) / RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023441725459961715}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( DS,( DS / ( MUM - MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.7173489278752436, "obj2": 0.18018964002263896}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( PN - Max( Min( Max( ACS,DDR ) ,MDR ),( ( AMS * ( MRS - FirstVNF_Mem ) ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUM * RMSe ),Min( MUC ,MUR ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237307}, {"determining": "( ( Max( BR,PN ) - MDR ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 0.9337231968810916, "obj2": 0.03285765276192889}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( Min( AMS ,BR ) * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * RRSe ) ) ) - RRSe ) )", "obj1": 0.4951267056530214, "obj2": 0.4457675843457057}, {"determining": "Max( ( PN / ( ( Max( RRS,FirstVNF_CPU ) - ( MDR - FirstVNF_RAM ) ) - MDR ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ),Min( ( RCSe * ( MLU / Min( DS ,CS ) ) ) ,MLU ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3333333333333333, "obj2": 0.663563596558093}, {"determining": "( Max( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ),( ( ( ( DDR - FirstVNF_CPU ) + PN ) / ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + BR ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Max( CS,Max( ( MUR * MLU ),( ( DS * Min( MLU ,( RCSe + MLU ) ) ) + ( MLU / RRSe ) ) ) ) ) )", "obj1": 0.9142300194931774, "obj2": 0.041666681325248686}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.48429977753092657}, {"determining": "( Max( CRS,( ( ACS / ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5754728395057742}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "Max( ( FirstVNF_Mem / ( PN - ( ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ACS ) - DDR ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.3001949317738791, "obj2": 0.7024967403554979}, {"determining": "( Max( CRS,( ( PN / ( DDR / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( AMS + CRS ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ( ( ( BR / MDR ) + CRS ) / ( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( Min( MUR ,MUR ) / Min( Min( DS ,DS ) ,MUR ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.530214424951267, "obj2": 0.38816569294364345}, {"determining": "( Max( CRS,( ( ACS / ( ( ARS * MDR ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3157894736842105, "obj2": 0.6811706877945489}, {"determining": "Max( ( PN / ( BR - ACS ) ),( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),Min( Max( MUM,RMSe ) ,MUC ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.43664717348927873, "obj2": 0.5132244073404489}, {"determining": "( ( Max( BR,PN ) - MDR ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 0.9337231968810916, "obj2": 0.03285765276192889}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( AMS - FirstVNF_CPU_Server ) ) + PN ) - ( FirstVNF_RAM / ( FirstVNF_Mem + MRS ) ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RCSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.3216374269005848, "obj2": 0.6736249678212208}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,DS ) ,( RRSe * CS ) )", "obj1": 0.49122807017543857, "obj2": 0.45087052140706485}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * RRSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6736249678212208}, {"determining": "( Max( CRS,( ( FirstVNF_RAM / ( ( ARS * MDR ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + ( FirstVNF_Mem_Server / ( Max( MDR,Max( DDR,FirstVNF_Mem ) ) - ( FirstVNF_RAM * PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe - RRSe ) / ( RMSe / MLU ) ) / ( Min( MLU ,CS ) / Max( CS,Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,CS ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6811706877945489}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( FirstVNF_CPU - FirstVNF_CPU_Server ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( RMSe,RRSe ) + ( Min( RMSe ,( Max( RCSe,MUC ) + Min( MLU ,RRSe ) ) ) * RMSe ) ) / ( Max( RMSe,RRSe ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.4756335282651072, "obj2": 0.46370864274244855}, {"determining": "( ( ( ( ( AMS * ARS ) + ( ( Min( MRS ,( MDR / AMS ) ) - Max( ( Const + AMS ),FirstVNF_CPU ) ) * Max( Min( Max( AMS,FirstVNF_RAM_Server ) ,FirstVNF_Mem ),FirstVNF_CPU_Server ) ) ) - Const ) * ARS ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( Max( ( RRSe / CS ),( MUC - RMSe ) ) - ( RRSe * ( MLU - ( RCSe / RCSe ) ) ) ) + CS ),( RMSe + RMSe ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7247553596033225}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7719298245614035, "obj2": 0.12553972513856465}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.8148148148148148, "obj2": 0.09883241568748181}, {"determining": "Min( ( PN - DDR ) ,( Max( CRS,( ( ( ( ( BR / MDR ) - Max( RRS,MDR ) ) + ( Min( ARS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) / PN ) + ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) ) ) - ( DDR / PN ) ) )", "choosing": "Min( ( Max( CS,MUM ) / Min( MLU ,CS ) ) ,( RRSe * CS ) )", "obj1": 0.9727095516569201, "obj2": 0.013229259826775823}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5009746588693957, "obj2": 0.4372532892246446}, {"determining": "( ( AMS + FirstVNF_RAM ) - Max( Min( Max( CRS,FirstVNF_CPU ) ,MDR ),( Min( AMS ,FirstVNF_CPU_Server ) / ( MRS - Max( MRS,( ( CRS * BR ) - PN ) ) ) ) ) )", "choosing": "Min( ( ( ( ( CS - CS ) / MUR ) * MLU ) * RMSe ) ,( MUR - CS ) )", "obj1": 0.7719298245614035, "obj2": 0.12553972513856465}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ),( CS * RRSe ) ) / ( ( Min( ( Min( ( MUC / MUM ) ,RCSe ) / CS ) ,RCSe ) / Max( Min( RMSe ,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.4756335282651072, "obj2": 0.46370864274244855}, {"determining": "Max( ( PN / ( ( ( BR / MDR ) - ( MDR * FirstVNF_RAM ) ) - ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,( MDR * AMS ) ) ) - ( ( DDR * FirstVNF_Mem ) * Const ) ) ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ),Min( MLU ,CS ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) ) * ( DS * MUR ) ) / ( Max( ( MUM - MLU ),RRSe ) + ( MUM * RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6425044674475092}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( PN - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUM * RMSe ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1590973184022731}, {"determining": "( ( FirstVNF_Mem * MRS ) - MDR )", "choosing": "Min( ( Min( ( ( ( MUR * MLU ) / ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( ( RRSe * CS ) ,Max( ( DS / ( MLU * MUC ) ),DS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.7290448343079922, "obj2": 0.1690190551543611}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * ( PN / ( Min( FirstVNF_RAM ,Const ) - ACS ) ) ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.8187134502923976, "obj2": 0.093895084208944}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ARS / ( RRS / MDR ) ) ) ) ) - Max( Min( MDR ,Const ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe - ( RMSe + MLU ) ) / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.35128849927844247}, {"determining": "( ( DDR / PN ) - Max( CRS,( ( ( RRS - FirstVNF_CPU_Server ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( MRS + ACS ) ) ) + ( FirstVNF_CPU_Server / RRS ) ) ) )", "choosing": "Min( ( Min( Max( Max( ( MUR * MLU ),( MUM + ( Min( MLU ,RRSe ) * DS ) ) ),RRSe ) ,Min( DS ,RMSe ) ) / ( MUR / MUM ) ) ,( RRSe * CS ) )", "obj1": 0.33723196881091616, "obj2": 0.6543764633421149}, {"determining": "( ( ACS - ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) - Max( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.50682261208577, "obj2": 0.43466330709666456}], "12": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) - MDR ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( CS - ( Min( Max( DS,RRSe ) ,( DS / CS ) ) + MLU ) ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( DDR + FirstVNF_Mem_Server ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( ( ( Max( ( ( RCSe / ( MUM * RRSe ) ) * MUR ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) + Min( MUR ,RMSe ) ) / Max( ( RRSe / ( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) + MUM ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,Max( FirstVNF_CPU_Server,( BR - MRS ) ) ) ) - ( Const * ( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) * FirstVNF_Mem ) ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( Min( ( RMSe / Min( ( DS * CS ) ,MUR ) ) ,MUC ) * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( BR - ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) ) ) - Min( ( AMS - Min( MDR ,( Const * CRS ) ) ) ,Min( FirstVNF_Mem_Server ,MRS ) ) )", "choosing": "( ( MLU - RCSe ) - CS )", "obj1": 0.7017543859649122, "obj2": 0.21875273568674913}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ),( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,( RCSe / RRSe ) ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.6003898635477583, "obj2": 0.3201533572106503}, {"determining": "( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.621832358674464, "obj2": 0.28239649087444757}, {"determining": "( ( Max( BR,PN ) - MDR ) - ( ( ARS * MDR ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 0.8557504873294347, "obj2": 0.06886487172112474}, {"determining": "Max( ( PN / ( BR - ACS ) ),( ARS - FirstVNF_CPU ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6336149688745635}, {"determining": "( Max( Min( MRS ,FirstVNF_Mem_Server ),( ( ACS / ( ( FirstVNF_Mem_Server / AMS ) * ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + Max( ( ( MDR * ARS ) / FirstVNF_Mem ),RRS ) ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.341130604288499, "obj2": 0.6410393630704123}, {"determining": "( Max( ( ( ( ( ( ( PN * Const ) / CRS ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / MRS ) * ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( ( FirstVNF_RAM * ACS ) * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) ) - CS ) ) / ( MLU / RRSe ) ) / ( Max( MUM,Min( MUR ,RCSe ) ) + ( MUC / RMSe ) ) )", "obj1": 0.6569200779727096, "obj2": 0.2521333769897122}, {"determining": "( ( Const / AMS ) - Min( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ,Min( ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ,( RRS - ACS ) ) ) )", "choosing": "( ( ( MUC + Min( Max( Max( Min( ( CS - RRSe ) ,RRSe ),( DS + RMSe ) ),DS ) ,( RRSe / MUM ) ) ) - MUR ) / ( ( ( ( Max( MUR,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) + Max( RRSe,( Max( MLU,MUM ) / MLU ) ) ) )", "obj1": 0.5458089668615984, "obj2": 0.3757011029584816}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8265107212475633, "obj2": 0.08852630414435371}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( RRS * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Min( Const ,CRS ) + FirstVNF_CPU_Server ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.7134502923976608, "obj2": 0.18210166064869718}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU / ( CRS + RRS ) ) / Min( Const ,RRS ) ) + CRS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( ( ( Max( RMSe,MUM ) + Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe + CS ) ) ) ) - RCSe ),MUM ) + ( RMSe / ( Max( ( ( RRSe - MUR ) - MUR ),Max( Max( MUR,DS ),( RMSe * ( DS + MUR ) ) ) ) + RMSe ) ) ) )", "obj1": 0.8031189083820662, "obj2": 0.11400231433931321}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / MUC ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.42105263157894735, "obj2": 0.5240570093068926}, {"determining": "( Max( ( ( ( ARS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.6569200779727096, "obj2": 0.2521333769897122}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.8460038986354775, "obj2": 0.07591705392898443}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + Const ) ) - ( DDR / ( DDR * ARS ) ) )", "choosing": "Min( ( Min( Min( MUM ,( CS / RRSe ) ) ,Min( MUR ,RCSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5496584758610356}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.7115009746588694, "obj2": 0.21291133864742692}, {"determining": "( ( DDR / PN ) - Max( CRS,( ( ( RRS - FirstVNF_CPU_Server ) * ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) + ( MRS + ACS ) ) ) + ( FirstVNF_CPU_Server / RRS ) ) ) )", "choosing": "Min( ( Min( Max( Max( ( MUR * MLU ),( MUM + ( Min( MLU ,RRSe ) * DS ) ) ),RRSe ) ,Min( DS ,RMSe ) ) / ( MUR / MUM ) ) ,( RRSe * CS ) )", "obj1": 0.33723196881091616, "obj2": 0.6543764633421149}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.8947368421052632, "obj2": 0.05169693845554439}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( AMS / FirstVNF_CPU_Server ) ) + PN ) - ( MDR - ( MRS * BR ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RMSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.7563352826510721, "obj2": 0.14096862584066652}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5653021442495126, "obj2": 0.34027007768539846}, {"determining": "( ( CRS - ( CRS + ( ACS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem / PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( ( ( ( DS * MUC ) + ( DS / MUM ) ) - MLU ) ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * RMSe ) )", "obj1": 0.38791423001949316, "obj2": 0.5871629548575703}, {"determining": "( Max( ( FirstVNF_RAM / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ),( ( ( ( DDR - FirstVNF_CPU ) + PN ) / ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + BR ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Max( CS,Max( ( MUR * MLU ),( ( DS * Min( RMSe ,( RCSe + MLU ) ) ) + ( MLU / RRSe ) ) ) ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5710072422954636}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) + RMSe ) )", "obj1": 0.5321637426900585, "obj2": 0.38165287137470016}, {"determining": "( Max( CRS,( ( PN / ( ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.9649122807017544, "obj2": 0.01704824234482283}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( ARS * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / AMS ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( ( MRS + ( ARS * MRS ) ) * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( ( RCSe - RRSe ) + RMSe ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / MUC ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.45419103313840153, "obj2": 0.4921859947277404}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.5165692007797271, "obj2": 0.40870861357391386}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.5516569200779727, "obj2": 0.35837252210905585}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Max( ( CRS + FirstVNF_CPU_Server ),BR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * DDR ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( MUC * ( DS * Min( DS ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,( RRSe * CS ) )", "obj1": 0.5107212475633528, "obj2": 0.4298421360642653}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( ( MDR / ( Max( ( MRS * FirstVNF_RAM ),( FirstVNF_CPU * AMS ) ) - MDR ) ) - ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( ( RCSe / RRSe ) / CS ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - Max( DS,DS ) ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.6374269005847953, "obj2": 0.26687046235624945}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( PN - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUM * RMSe ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.7348927875243665, "obj2": 0.1660035145599785}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.48429977753092657}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),FirstVNF_Mem_Server ) )", "choosing": "( ( ( RMSe - ( RMSe + MLU ) ) / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( Max( CRS,( ( ( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( MDR / PN ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( MLU / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11952530186716799}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5886939571150097, "obj2": 0.33161237555090706}, {"determining": "( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( Max( Min( ( Min( ( AMS * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) )", "choosing": "Min( ( Min( ( ( MUC + ( DS * MUR ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * ( ( RRSe * CS ) - MUR ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6635153831096113}, {"determining": "( Min( ( FirstVNF_CPU + ARS ) ,FirstVNF_CPU ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - CS ) ) ) ) ,( ( MUC * Min( RRSe ,Min( Max( ( MUC + RCSe ),MUR ) ,MUM ) ) ) * CS ) )", "obj1": 0.9785575048732943, "obj2": 0.013141844601735798}, {"determining": "Max( ( PN / ( BR - ACS ) ),( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ARS,DDR ) ,MDR ),( Min( ( Max( RRS,MDR ) * ( MRS - FirstVNF_Mem ) ) ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( CS - Min( RRSe ,MUC ) ) / ( CS - ( Min( Max( DS,RRSe ) ,( DS / CS ) ) + MLU ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5194833846701974}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.3664717348927875, "obj2": 0.6054700009194215}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( PN - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.7504873294346979, "obj2": 0.15814130808924395}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ACS * RRS ) ) ) ) + Min( Max( ACS,DDR ) ,MDR ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) ,Min( DS ,RMSe ) ) / Max( Min( MUC ,MUR ),Max( ( RCSe - RMSe ),Min( Max( MUC,CS ) ,MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.3742690058479532, "obj2": 0.6053754295246674}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ARS * FirstVNF_RAM_Server ) ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5951295465232751}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.3645224171539961, "obj2": 0.6158839564215816}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( AMS / FirstVNF_CPU_Server ) ) + PN ) - ( MDR - ( MRS * BR ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RMSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.142770966364574}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( ( ( DS - MUR ) * RRSe ) / Max( DS,DS ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5750487329434698, "obj2": 0.333853599201628}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ( ARS / RRS ) * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,MDR ),( Min( AMS ,BR ) / Max( Min( PN ,MRS ),( PN + ARS ) ) ) ) )", "choosing": "Min( ( ( RRSe - RMSe ) * DS ) ,( CS / ( MLU * MLU ) ) )", "obj1": 0.5282651072124757, "obj2": 0.39900127177990335}, {"determining": "( Max( ( ( ( ARS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.6549707602339181, "obj2": 0.25308938730274133}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( ( DDR + BR ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RCSe ) ) / ( Max( ( Min( RMSe ,( Min( MUR ,Max( CS,MUR ) ) + MUR ) ) - RCSe ),MUM ) / RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023441725459961715}, {"determining": "Min( Max( CRS,( ( Min( ARS ,( FirstVNF_Mem_Server / Max( Const,RRS ) ) ) / ( FirstVNF_Mem_Server * Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( BR * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) ,( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,RCSe ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * ( DS - RCSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.707147400077198}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) / ( Max( RRS,( Max( FirstVNF_Mem_Server,ACS ) + Max( FirstVNF_Mem_Server,Const ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * RRSe ) )", "obj1": 0.645224171539961, "obj2": 0.25864560415326066}, {"determining": "( Max( CRS,( ( ACS / ( ( ( MDR * ACS ) / FirstVNF_RAM ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.32748538011695905, "obj2": 0.6658461853225704}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( Min( MDR ,FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + ( ( FirstVNF_RAM_Server - Max( PN,( Min( CRS ,MRS ) - FirstVNF_RAM_Server ) ) ) + ( BR * FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( Max( MUM,MUC ),MUM ) + Min( ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RMSe,RRSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( MUR * CS ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5592506097835915}, {"determining": "( ( ( ( FirstVNF_CPU_Server * BR ) + FirstVNF_CPU ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( BR * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Min( MUR ,RRSe ) * MUC ),( MUM + ( Min( MLU ,RRSe ) * DS ) ) ) - RRSe ) ,Min( DS ,MUC ) ) / Max( Max( ( RCSe - Min( ( DS - MUR ) ,( RRSe - MUC ) ) ),Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.7680311890838206, "obj2": 0.12739690571354748}, {"determining": "( ( ACS - ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) - Max( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.50682261208577, "obj2": 0.43466330709666456}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.847953216374269, "obj2": 0.0750158836670307}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( BR + FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8089668615984406, "obj2": 0.10308135664344174}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ARS * FirstVNF_RAM_Server ) ) ) + PN ) - ( MDR / ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,( ( CS - Min( RRSe ,MUC ) ) + RMSe ) ) ) ) * ( Min( Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5238412075460765}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5730994152046783, "obj2": 0.3347758663096093}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( Min( ( MUC / ( RCSe + MLU ) ) ,CS ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023441725459961715}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( Max( DDR,MRS ) * FirstVNF_CPU_Server ) ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,ARS ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( Max( ( Min( ( MUR + Max( CS,CS ) ) ,( Min( MUM ,CS ) + MLU ) ) / Min( ( RRSe + MLU ) ,MUC ) ),CS ) * Min( Max( ( MUR * MLU ),( MUC + ( DS * ( MLU * RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ,MUC ) * Min( ( MUR * ( ( ( MUC - Max( MUC,RRSe ) ) / ( ( RRSe + RCSe ) / RCSe ) ) - Min( MUR ,MUM ) ) ) ,MLU ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5970757561032628}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( BR + ( DDR / PN ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( DS,MUR ) - ( RMSe - MUM ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.5224171539961013, "obj2": 0.40448394211201466}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( ( ( MUR * MLU ) / ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( ( RRSe * CS ) ,Max( ( DS / ( MLU * MUC ) ),DS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.4697855750487329, "obj2": 0.47064772036886154}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( ( ( BR / MDR ) + CRS ),( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4556025482515701}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) + ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( Max( FirstVNF_RAM,MRS ),( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.5009746588693957, "obj2": 0.43719317048839157}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.8148148148148148, "obj2": 0.09883241568748181}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( ( Max( BR,PN ) - MDR ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 0.9337231968810916, "obj2": 0.03285765276192889}, {"determining": "Min( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( BR * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) ,( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.30409356725146197, "obj2": 0.6965321202227476}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( PN - Max( Min( Max( ACS,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUM * RMSe ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.7485380116959064, "obj2": 0.1590973184022731}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( PN / ( DDR / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( ( ( MDR * ACS ) / FirstVNF_RAM ) ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.49707602339181284, "obj2": 0.4400990309806235}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( DDR / PN ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,Min( MUR ,RRSe ) ) ) + RMSe ) )", "obj1": 0.44639376218323584, "obj2": 0.5007633952068111}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ARS * FirstVNF_RAM_Server ) ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) ) ) * ( Min( Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.391812865497076, "obj2": 0.5768670053677267}, {"determining": "( Max( CRS,( ( FirstVNF_RAM / ( ( ARS * MDR ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),FirstVNF_RAM ) ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem - ( FirstVNF_RAM * PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe - RRSe ) / ( RMSe / MLU ) ) / ( RCSe / RMSe ) )", "obj1": 0.3001949317738791, "obj2": 0.7003245470779873}, {"determining": "( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.631578947368421, "obj2": 0.2688468646067804}, {"determining": "( ( CRS + ( ( BR / ( Max( ( ARS - MDR ),Min( ( FirstVNF_RAM_Server - AMS ) ,RRS ) ) + ( FirstVNF_RAM_Server / PN ) ) ) + ACS ) ) - ( MDR / CRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( MLU,RRSe ) + RCSe ) )", "obj1": 0.6296296296296297, "obj2": 0.2768668703630618}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) - ( Max( ( BR + FirstVNF_RAM ),( FirstVNF_CPU_Server - Const ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( MUC + ( DS * Min( MLU ,MUC ) ) ) ) - MUR ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.46393762183235865, "obj2": 0.48429977753092657}, {"determining": "( ( ( ( ( AMS * ARS ) + ( ( Min( MRS ,( MDR / AMS ) ) - Max( ( Const + AMS ),FirstVNF_CPU ) ) * Max( Min( Max( AMS,FirstVNF_RAM_Server ) ,FirstVNF_Mem ),FirstVNF_CPU_Server ) ) ) - Const ) * ARS ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( RCSe / RCSe ) ) ) - Max( ( ( Max( ( RRSe / CS ),( MUC - RMSe ) ) - ( RRSe * ( MLU - ( RCSe / RCSe ) ) ) ) + CS ),( RMSe + RMSe ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7247553596033225}, {"determining": "( Max( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) ) ) ),( ( ( ( DDR - FirstVNF_CPU ) + PN ) / ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ) ) + BR ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Max( CS,Max( ( MUR * MLU ),( ( DS * Min( MLU ,Max( CS,MUM ) ) ) + ( MLU / RRSe ) ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7680311890838206, "obj2": 0.12739690571354748}, {"determining": "( ( ( Max( ARS,FirstVNF_CPU_Server ) - ( AMS - FirstVNF_CPU_Server ) ) + PN ) - ( FirstVNF_RAM / ( FirstVNF_Mem + MRS ) ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RCSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.3216374269005848, "obj2": 0.6736249678212208}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS * CS ) ,( ( ( DS - MUR ) * RRSe ) * RRSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6736249678212208}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) / ( Max( RRS,( Max( FirstVNF_Mem_Server,ACS ) + Max( FirstVNF_Mem_Server,Const ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( DS * CS ) ,( ( ( DS - MUR ) * RRSe ) * RRSe ) )", "obj1": 0.645224171539961, "obj2": 0.25864560415326066}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.35128849927844247}, {"determining": "( Max( CRS,( ( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) / ( ( MDR * ( CRS / ( MRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ) + CRS ) ) - ( PN / DDR ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6914181316289324}, {"determining": "( ( ( BR / ( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / ( Min( MLU ,CS ) / Max( CS,Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.9395711500974658, "obj2": 0.02975478258706995}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( ( FirstVNF_CPU_Server / AMS ) + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * RMSe ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.442495126705653, "obj2": 0.5043036384913253}, {"determining": "( ( AMS + CRS ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ( ( ( BR / MDR ) + CRS ) / ( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( Min( MUR ,MUR ) / Min( Min( DS ,DS ) ,MUR ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.530214424951267, "obj2": 0.38816569294364345}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( BR + FirstVNF_RAM ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),RRSe ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.9941520467836257, "obj2": 0.0057346798304176395}, {"determining": "( Max( CRS,( ( ACS / ( Min( ( FirstVNF_Mem / ARS ) ,MRS ) * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( ( ( MLU - CS ) - Max( Max( RCSe,MUC ),MUM ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( MUR - DS ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUR - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.3645224171539961, "obj2": 0.6158839564215816}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ),DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5964912280701754, "obj2": 0.3232115725071609}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.557504873294347, "obj2": 0.35542985262150856}], "13": [{"determining": "( Max( CRS,( ( ( Min( ( ( MDR * ACS ) / FirstVNF_RAM ) ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( ( DS * Min( MLU ,RRSe ) ),MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) - MDR ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUC,( RMSe * ( CS - ( Min( Max( DS,RRSe ) ,( DS / CS ) ) + MLU ) ) ) ) - Max( Max( Max( DS,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) ),Max( Max( RRSe,CS ),Min( RMSe ,CS ) ) ),( RMSe + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Const * BR ) ) + Min( ( BR / MRS ) ,Max( FirstVNF_CPU_Server,( BR - MRS ) ) ) ) - ( Const * ( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) * FirstVNF_Mem ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * ( Min( AMS ,Max( RRS,( Max( FirstVNF_Mem_Server,ACS ) + Max( FirstVNF_Mem_Server,Const ) ) ) ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,CS ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.22393836672327894}, {"determining": "( Max( CRS,( CRS + ( Max( ( ( Min( FirstVNF_CPU_Server ,BR ) / RRS ) + FirstVNF_CPU_Server ),RRS ) / ( ( ( Min( AMS ,FirstVNF_RAM_Server ) * RRS ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( Min( ( Min( RMSe ,( MUC - ( MUM - RMSe ) ) ) + CS ) ,Min( MUR ,( MLU * MUC ) ) ) * RCSe ) - DS ) ,( MLU / RMSe ) )", "obj1": 0.5984405458089669, "obj2": 0.304261776149925}, {"determining": "( Max( CRS,( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.7134502923976608, "obj2": 0.18148110152171773}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.6120857699805068, "obj2": 0.28190169723083236}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.8596491228070176, "obj2": 0.06802938529813754}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.7115009746588694, "obj2": 0.21291133864742692}, {"determining": "( Max( ( ( ( ARS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.6569200779727096, "obj2": 0.2521333769897122}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( ( ( MUR * MLU ) / ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( ( RRSe * CS ) ,Max( ( DS / ( MLU * MUC ) ),DS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.4697855750487329, "obj2": 0.47064772036886154}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUR ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7426900584795322, "obj2": 0.15169092773328008}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8265107212475633, "obj2": 0.08447594686470522}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) )", "obj1": 0.7348927875243665, "obj2": 0.16283187733440221}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Max( ( CRS + FirstVNF_CPU_Server ),BR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * DDR ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( MUC,MUC ) + ( RMSe / MUC ) ),( MUC * ( DS * Min( DS ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,( RRSe * CS ) )", "obj1": 0.5107212475633528, "obj2": 0.4298421360642653}, {"determining": "( Max( FirstVNF_CPU,Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,CRS ) ) - ( MDR / ( MDR - MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * Min( RCSe ,Max( MUR,MUR ) ) ),( MUC + ( ( RMSe - CS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / MUC ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8031189083820662, "obj2": 0.10290240280836734}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( MRS,( ( Const + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) - ( ( DDR + ( FirstVNF_CPU * ARS ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( ( ( ( MUC - Max( RRSe,MUR ) ) - ( Max( CS,MUC ) * ( DS + MUM ) ) ) + DS ) * MUC ) * RRSe ) ) ,( RRSe * MUM ) )", "obj1": 0.33723196881091616, "obj2": 0.6537492292554414}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( MUC - MUR ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6259388707919301}, {"determining": "( Max( Min( MRS ,FirstVNF_Mem_Server ),( ( ACS / ( ( FirstVNF_Mem_Server / AMS ) * ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + Max( ( ( MDR * ARS ) / FirstVNF_Mem ),RRS ) ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.341130604288499, "obj2": 0.6410393630704123}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * RRS ) ) ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) - ( DDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( DS ,( MUM / Min( ( MUM / MUC ) ,( ( MUC + MLU ) - Max( RCSe,RCSe ) ) ) ) ) / ( MUM * ( Max( ( ( MUR * MUM ) / MUC ),MUM ) / ( CS - ( RCSe + ( MUC / DS ) ) ) ) ) ) + RMSe ) )", "obj1": 0.4171539961013645, "obj2": 0.549604934158603}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ARS * AMS ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( ( RCSe - Max( RRSe,RRSe ) ) ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5663108172557975}, {"determining": "( Max( ( ( ( ( ( ( PN * Const ) / CRS ) / FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / MRS ) * ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( ( FirstVNF_RAM * ACS ) * FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) ) - CS ) ) / ( MLU / RRSe ) ) / ( Max( MUM,Min( MUR ,RCSe ) ) + ( MUC / RMSe ) ) )", "obj1": 0.6569200779727096, "obj2": 0.2521333769897122}, {"determining": "( Max( CRS,( ( ( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( MDR / PN ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.9727095516569201, "obj2": 0.013099781227240518}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.7680311890838206, "obj2": 0.12739690571354745}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.8148148148148148, "obj2": 0.09883241568748181}, {"determining": "( ( Const / AMS ) - Min( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ,Min( ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ,( RRS - ACS ) ) ) )", "choosing": "( ( ( MUC + Min( Max( Max( Min( ( CS - RRSe ) ,RRSe ),( DS + RMSe ) ),DS ) ,( RRSe / MUM ) ) ) - MUR ) / ( ( ( ( Max( MUR,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) + Max( RRSe,( Max( MLU,MUM ) / MLU ) ) ) )", "obj1": 0.5458089668615984, "obj2": 0.3757011029584816}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5886939571150097, "obj2": 0.33161237555090706}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) + RMSe ) )", "obj1": 0.5321637426900585, "obj2": 0.38165287137470016}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server * ARS ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,Max( Const,Const ) ),( Min( AMS ,BR ) / ( Max( RRS,( BR - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUC ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) * Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.48927875243664715, "obj2": 0.44810804986365815}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / MUC ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4249512670565302, "obj2": 0.5194741573445011}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5165692007797271, "obj2": 0.40870861357391386}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ),DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5964912280701754, "obj2": 0.3232115725071609}, {"determining": "( ( ( Max( AMS,FirstVNF_CPU_Server ) - ( AMS / FirstVNF_CPU_Server ) ) + PN ) - ( MDR - ( MRS * BR ) ) )", "choosing": "Min( ( Min( RRSe ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.7524366471734892, "obj2": 0.14194573299972324}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * FirstVNF_RAM ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8226120857699805, "obj2": 0.09038348471933655}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6413255360623782, "obj2": 0.25609412209459265}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,CS ) ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ARS * FirstVNF_RAM_Server ) ) ) + PN ) - ( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MLU - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,( ( CS - Min( RRSe ,MUC ) ) + RMSe ) ) ) ) * ( Min( Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.4775828460038986, "obj2": 0.45931477260004483}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.3645224171539961, "obj2": 0.6158839564215816}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( BR + ( ( PN / ( BR - ACS ) ) / PN ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.43664717348927873, "obj2": 0.5132244073404489}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.8947368421052632, "obj2": 0.05169693845554439}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.5497076023391813, "obj2": 0.36027275546459786}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ARS ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / CS ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.6198830409356725, "obj2": 0.277328298403185}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( Min( MDR ,FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + ( ( FirstVNF_RAM_Server - Max( PN,( Min( CRS ,MRS ) - FirstVNF_RAM_Server ) ) ) + ( BR * FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( Max( MUM,MUC ),MUM ) + Min( ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RMSe,RRSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( MUR * CS ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5592506097835915}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( PN - Max( Min( Max( ACS,DDR ) ,MDR ),Max( ( MRS * FirstVNF_RAM ),PN ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUM * RMSe ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RCSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.723196881091618, "obj2": 0.1718322460423731}, {"determining": "( Max( ( PN / ( FirstVNF_CPU_Server * Max( Max( FirstVNF_Mem,BR ),( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) ) ) ),( PN / MDR ) ) - ( DDR / PN ) )", "choosing": "( ( CS / ( RCSe / RRSe ) ) / ( ( MLU + CS ) * Min( ( Max( ( CS * Max( ( RRSe / MUC ),( RMSe / MUC ) ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.9142300194931774, "obj2": 0.041666681325248686}, {"determining": "( ( AMS + CRS ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ( ( ( BR / MDR ) + CRS ) / ( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( Min( MUR ,MUR ) / Min( Min( DS ,DS ) ,MUR ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.530214424951267, "obj2": 0.38816569294364345}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( RRS * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Min( Const ,CRS ) + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / ( RCSe - Min( ( DS - MUR ) ,( RRSe - MUC ) ) ) ) ) ) ) )", "obj1": 0.7251461988304093, "obj2": 0.1709310757804194}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.8460038986354775, "obj2": 0.07591705392898443}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,( ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_RAM * PN ) ) + ( AMS * BR ) ) ) / ( Max( RRS,( Max( FirstVNF_Mem_Server,ACS ) + Max( FirstVNF_Mem_Server,Const ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( DS * CS ) ,( ( ( DS - RRSe ) * RRSe ) * RRSe ) )", "obj1": 0.9844054580896686, "obj2": 0.0073962988659732175}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.3664717348927875, "obj2": 0.6054700009194215}, {"determining": "( ( CRS - ( CRS + ( ACS / ( FirstVNF_Mem_Server * ( FirstVNF_Mem / PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( ( ( ( DS * MUC ) + ( DS / MUM ) ) - MLU ) ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * RMSe ) )", "obj1": 0.38791423001949316, "obj2": 0.5871629548575703}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( BR + FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) + RMSe ) )", "obj1": 0.7758284600389863, "obj2": 0.12511643660694258}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ,( ( ( DS - MUR ) * RRSe ) * RRSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6858733560618959}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ( ARS / RRS ) * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,MDR ),( Min( AMS ,BR ) / Max( Min( PN ,MRS ),( PN + ARS ) ) ) ) )", "choosing": "Min( ( ( RRSe - RMSe ) * DS ) ,( CS / ( MLU * MLU ) ) )", "obj1": 0.5282651072124757, "obj2": 0.39900127177990335}, {"determining": "Min( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ) ) + CRS ) ) ,( CRS / PN ) )", "choosing": "Min( ( RRSe / Max( ( MUC / Max( CS,( DS / DS ) ) ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.2962962962962963, "obj2": 0.7070856189995492}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( Max( CRS,( ( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) / ( ( MDR * ( CRS / ( MRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ) + CRS ) ) - ( PN / DDR ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6914181316289324}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( ( DDR + BR ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RCSe ) ) / ( Max( ( Min( RMSe ,( Min( MUR ,Max( CS,MUR ) ) + MUR ) ) - RCSe ),MUM ) / RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023441725459961715}, {"determining": "( ( CRS + ( ( BR / ( Max( ( ARS - MDR ),Min( ( FirstVNF_RAM_Server - AMS ) ,RRS ) ) + ( FirstVNF_RAM_Server / PN ) ) ) + ACS ) ) - ( MDR / CRS ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( MLU,RRSe ) + RCSe ) )", "obj1": 0.6296296296296297, "obj2": 0.2768668703630618}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.48429977753092657}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5505596461229892}, {"determining": "( ( ACS - ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) - Max( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.50682261208577, "obj2": 0.43466330709666456}, {"determining": "( ( CRS * ( ( MDR / BR ) + ACS ) ) - ( Const + MDR ) )", "choosing": "Min( ( Min( Min( MUR ,RMSe ) ,( Max( ( Min( ( RRSe / CS ) ,Min( MUC ,MUR ) ) * ( RCSe / RMSe ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6374269005847953, "obj2": 0.26608851376984377}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5633528265107213, "obj2": 0.34997198955844905}, {"determining": "( Max( ( CRS + ( ( ARS * FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + CRS ) ) ),( Max( FirstVNF_Mem_Server,DDR ) + MDR ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( Min( RMSe ,MUR ),( MUC + ( DS * Min( RCSe ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.6530214424951267, "obj2": 0.2559338758219402}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.571150097465887, "obj2": 0.3347101506850945}, {"determining": "( ( CRS - ( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ( AMS / PN ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( RRSe * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / ( Max( ( Min( RMSe ,( Min( MUR ,Min( MUC ,MLU ) ) + MUR ) ) - RCSe ),MUM ) / RRSe ) )", "obj1": 0.9532163742690059, "obj2": 0.023441725459961715}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ACS * RRS ) ) ) ) + Min( Max( ACS,DDR ) ,MDR ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) ,Min( DS ,RMSe ) ) / Max( Min( MUC ,MUR ),Max( ( RCSe - RMSe ),Min( Max( MUC,CS ) ,MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.3742690058479532, "obj2": 0.6053754295246674}, {"determining": "( Max( CRS,( ( ACS / ( ( ( MDR * ACS ) / FirstVNF_RAM ) * FirstVNF_CPU ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5907347118445866}, {"determining": "( Max( CRS,( ( PN / ( ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.9649122807017544, "obj2": 0.01704824234482283}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,Min( FirstVNF_RAM ,FirstVNF_Mem ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * Max( FirstVNF_Mem,DDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( RRSe ,MLU ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( ( ( CS * RRSe ) * ( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),Max( ( CS / MUC ),DS ) ) * CS ) )", "obj1": 0.7076023391812866, "obj2": 0.21784423578103526}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( ARS * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / AMS ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( ( MRS + ( ARS * MRS ) ) * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( ( RCSe - RRSe ) + RMSe ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / MUC ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.7563352826510721, "obj2": 0.1390790004092789}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RMSe - ( Min( ( MUC - MUM ) ,MUR ) / MLU ) ) + ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,( ( CS - Min( RRSe ,MUC ) ) + RMSe ) ) ) ) * ( Min( Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.5653021442495126, "obj2": 0.34027007768539846}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( DDR / PN ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,MUM ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.5224171539961013, "obj2": 0.4040069444797322}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( ( ( BR / ( PN + FirstVNF_CPU_Server ) ) - Max( RRS,MDR ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / ( Min( MLU ,Min( ( DS * CS ) ,( ( ( DS - MUR ) * RRSe ) * RRSe ) ) ) / Max( CS,Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) )", "obj1": 0.9298245614035088, "obj2": 0.03499170465995805}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( ( ( ( ARS * FirstVNF_CPU_Server ) - ( FirstVNF_CPU_Server / AMS ) ) + PN ) - Max( Min( Max( ACS,DDR ) ,MDR ),( ( ( ( MRS + ( ARS * MRS ) ) * FirstVNF_CPU ) / FirstVNF_RAM ) / ( ARS * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,( ( ( RCSe - RRSe ) + RMSe ) - RCSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / MUC ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.7563352826510721, "obj2": 0.1390790004092789}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( ( PN + ( ( ( FirstVNF_CPU_Server / AMS ) / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS * Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,( ( CS - Min( RRSe ,MUC ) ) + RMSe ) ) ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.3937621832358674, "obj2": 0.5741705154532558}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( DS * CS ) ,( ( ( DS - MUR ) * RRSe ) * RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6787168611607974}, {"determining": "( Max( CRS,( ( PN / ( ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RMSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.9649122807017544, "obj2": 0.01704824234482283}, {"determining": "( Max( CRS,( ( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) / ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7133660613267541}, {"determining": "Min( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( BR * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) ,( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.7255805929681732}, {"determining": "( Max( CRS,( Max( Max( Max( ( ( FirstVNF_RAM_Server - MRS ) / FirstVNF_Mem ),RRS ),Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ),MRS ) + CRS ) ) - ( PN / DDR ) )", "choosing": "( ( ( ( CS * MUM ) + ( MUC - MLU ) ) * Max( RRSe,( MUM - MLU ) ) ) / ( Max( ( Min( RMSe ,( Min( MUC ,RRSe ) + ( ( CS + RRSe ) - Min( RCSe ,MUR ) ) ) ) - RCSe ),MUM ) / RRSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5769980506822612, "obj2": 0.3320603957073602}, {"determining": "( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),Min( ( ( FirstVNF_RAM_Server + ARS ) / FirstVNF_CPU ) ,DDR ) ) - ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC * MLU ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MLU ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4556025482515701}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( AMS,MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * Min( RRSe ,MUC ) ),( MUM + ( Min( MLU ,RRSe ) * DS ) ) ) - RRSe ) ,Min( DS ,RMSe ) ) / Max( Min( MUC ,MUR ),Max( ( RCSe - Min( ( DS - MUR ) ,( RRSe - MUC ) ) ),Min( Max( MUC,CS ) ,MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.8908382066276803, "obj2": 0.05277334439701711}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( RCSe + ( MUC / CS ) ) ),( MUM - RMSe ) )", "obj1": 0.4093567251461988, "obj2": 0.5592506097835915}, {"determining": "( Max( CRS,( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( ( MUR * MLU ),RRSe ) - RRSe ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023942}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Min( ARS ,RRS ) * ( ARS * FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_Mem_Server * Min( RRS ,AMS ) ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( ( RRSe - RMSe ) - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RCSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,RMSe ) ) ) ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( MUR - MUR ) * MLU ) )", "obj1": 0.391812865497076, "obj2": 0.5768670053677267}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) + ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( Max( FirstVNF_RAM,MRS ),( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.5009746588693957, "obj2": 0.43719317048839157}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.557504873294347, "obj2": 0.35542985262150856}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.3645224171539961, "obj2": 0.6158839564215816}, {"determining": "( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.631578947368421, "obj2": 0.2688468646067804}], "14": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( CRS,( ( ( MDR * ACS ) / FirstVNF_RAM ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,( RMSe + DS ) ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( ( Min( ( ( MDR * ACS ) / FirstVNF_RAM ) ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( ( DS * Min( MLU ,RRSe ) ),MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem / ( FirstVNF_CPU_Server - ( ( DDR * ( ACS / Min( ARS ,ARS ) ) ) - DDR ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( ( RCSe - DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Max( MLU,( RMSe / ( MLU * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( BR / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.6900584795321637, "obj2": 0.22992800779403752}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6491228070175439, "obj2": 0.2513630953567204}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) * Min( MLU ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.20135315761508193}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( ( RRSe - Min( Max( CS,DS ) ,CS ) ),RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.4697855750487329, "obj2": 0.45290884541928084}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.48429977753092657}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.49803467615353786}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5834835159480831}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( ( FirstVNF_Mem_Server * Max( ( ( ACS + FirstVNF_Mem ) / FirstVNF_RAM ),( AMS * ( FirstVNF_RAM - FirstVNF_Mem ) ) ) ),DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5964912280701754, "obj2": 0.3232115725071609}, {"determining": "( ( ACS - ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) - Max( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.50682261208577, "obj2": 0.43466330709666456}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8265107212475633, "obj2": 0.08447594686470522}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( ( RRS / ACS ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / PN ) )", "choosing": "Min( ( Min( Min( MUR ,RMSe ) ,( Max( ( MUR * MLU ),( ( MUR * ( RCSe / DS ) ) + ( DS * Min( MLU ,RRSe ) ) ) ) + RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( MUM + MUM ) - ( ( DS - CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.37037037037037035, "obj2": 0.5962441532513894}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( FirstVNF_CPU_Server / AMS ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.5107212475633528, "obj2": 0.4107070600189483}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( RCSe + ( MUC / CS ) ) ),( MUM - RMSe ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}, {"determining": "( Max( Min( MRS ,FirstVNF_Mem_Server ),( ( ACS / ( ( FirstVNF_Mem_Server / AMS ) * ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + Max( ( ( MDR * ARS ) / FirstVNF_Mem ),RRS ) ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.341130604288499, "obj2": 0.6410393630704123}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.5497076023391813, "obj2": 0.36027275546459786}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * RRS ) ) ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) - ( DDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( DS ,( MUM / Min( ( MUM / MUC ) ,( ( MUC + MLU ) - Max( RCSe,RCSe ) ) ) ) ) / ( MUM * ( Max( ( ( MUR * MUM ) / MUC ),MUM ) / ( CS - ( RCSe + ( MUC / DS ) ) ) ) ) ) + RMSe ) )", "obj1": 0.4171539961013645, "obj2": 0.549604934158603}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_CPU_Server * ARS ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,Max( Const,Const ) ),( Min( AMS ,BR ) / ( Max( RRS,( BR - FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUC ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) * Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.48927875243664715, "obj2": 0.44810804986365815}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( RRSe ,RRSe ) + MUR ) ) ) ) ) + RMSe ) )", "obj1": 0.6101364522417154, "obj2": 0.28723731964442994}, {"determining": "( Max( CRS,( ( Max( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ),( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( MLU - MUC ) ,RMSe ) ,( ( MUC - MLU ) * CS ) )", "obj1": 0.8148148148148148, "obj2": 0.09830592406688646}, {"determining": "( ( Const / AMS ) - Min( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ,Min( ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ,( RRS - ACS ) ) ) )", "choosing": "( ( ( MUC + Min( Max( Max( Min( ( CS - RRSe ) ,RRSe ),( DS + RMSe ) ),DS ) ,( RRSe / MUM ) ) ) - MUR ) / ( ( ( ( Max( MUR,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) + Max( RRSe,( Max( MLU,MUM ) / MLU ) ) ) )", "obj1": 0.5458089668615984, "obj2": 0.3757011029584816}, {"determining": "( Max( CRS,( ( Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.6023391812865497, "obj2": 0.3017205959589989}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5886939571150097, "obj2": 0.33161237555090706}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) + RMSe ) )", "obj1": 0.5321637426900585, "obj2": 0.38165287137470016}, {"determining": "( Max( CRS,( CRS + ( Max( ( ( Min( FirstVNF_CPU_Server ,BR ) / RRS ) + FirstVNF_CPU_Server ),RRS ) / ( ( ( Min( AMS ,FirstVNF_RAM_Server ) * RRS ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( Min( ( Min( RMSe ,( MUC - ( MUM - RMSe ) ) ) + CS ) ,Min( MUR ,( MLU * MUC ) ) ) * RCSe ) - DS ) ,( MLU / RMSe ) )", "obj1": 0.5984405458089669, "obj2": 0.304261776149925}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) + ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( Max( FirstVNF_RAM,MRS ),( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.5009746588693957, "obj2": 0.43719317048839157}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.3586744639376218, "obj2": 0.6231834613895603}, {"determining": "( Max( CRS,( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.7134502923976608, "obj2": 0.18148110152171773}, {"determining": "( Max( ( ( ( Max( ( AMS - ACS ),BR ) * FirstVNF_CPU_Server ) / MDR ) + ACS ),Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * Min( CRS ,AMS ) ),( FirstVNF_CPU_Server * MRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * ( RRSe / MLU ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / RRSe ),Min( MUC ,MUR ) ) ) ,( ( RRSe - ( ( RRSe - Max( RRSe,CS ) ) + RMSe ) ) * RMSe ) )", "obj1": 0.43859649122807015, "obj2": 0.5050142488580647}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5614035087719298, "obj2": 0.3441206219027288}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( ( AMS * FirstVNF_Mem_Server ),( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( Min( DS ,RRSe ) * DS ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RCSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.49317738791423, "obj2": 0.44580017227300894}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( Min( MDR ,FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + ( ( FirstVNF_RAM_Server - Max( PN,( Min( CRS ,MRS ) - FirstVNF_RAM_Server ) ) ) + ( BR * FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( Max( MUM,MUC ),MUM ) + Min( ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RMSe,RRSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( MUR * CS ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5592506097835915}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( Max( CRS,( ( Min( CRS ,PN ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + ( ( AMS / FirstVNF_CPU_Server ) - ( ARS * FirstVNF_CPU_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUR ,( DS - MLU ) ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) + Min( ( ( Max( ( MUR * MLU ),RRSe ) - RRSe ) / ( Max( RMSe,MUR ) - Max( RMSe,MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.8713450292397661, "obj2": 0.0609492556623207}, {"determining": "( Max( CRS,( ( Max( ARS,FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( FirstVNF_RAM / CRS ) )", "choosing": "Min( ( Min( ( Max( Max( ( RCSe * Min( CS ,MUC ) ),( RRSe / MUC ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / MUC ) ,( Max( MUC,MUC ) + ( DS / MUC ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6690109534335644}, {"determining": "( Max( ( PN / ( FirstVNF_CPU_Server * Max( Max( FirstVNF_Mem,BR ),( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) ) ) ),( PN / MDR ) ) - ( DDR / PN ) )", "choosing": "( ( CS / ( RCSe / RRSe ) ) / ( ( MLU + CS ) * Min( ( Max( ( CS * Max( ( RRSe / MUC ),( RMSe / MUC ) ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.9142300194931774, "obj2": 0.041666681325248686}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.847953216374269, "obj2": 0.07501588366703067}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5663108172557975}, {"determining": "( Max( MRS,( ( Const + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) - ( ( DDR + ( FirstVNF_CPU * ARS ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( ( ( ( MUC - Max( RRSe,MUR ) ) - ( Max( CS,MUC ) * ( DS + MUM ) ) ) + DS ) * MUC ) * RRSe ) ) ,( RRSe * MUM ) )", "obj1": 0.33723196881091616, "obj2": 0.6537492292554414}, {"determining": "( ( AMS + CRS ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ( ( ( BR / MDR ) + CRS ) / ( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( Min( MUR ,MUR ) / Min( Min( DS ,DS ) ,MUR ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.530214424951267, "obj2": 0.38816569294364345}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( ( MDR + FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * ( FirstVNF_Mem_Server + MDR ) ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( RCSe,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( Min( RRSe ,RCSe ) + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.6198830409356725, "obj2": 0.2752384743860457}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),( Max( RMSe,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) )", "obj1": 0.7348927875243665, "obj2": 0.16283187733440221}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( ( MUR * MLU ),RRSe ) - RRSe ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.7426900584795322, "obj2": 0.15169092773328008}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5769980506822612, "obj2": 0.3320603957073602}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( RRS * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Min( Const ,CRS ) + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( MUM - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) ) - CS ) ) / ( MLU / RRSe ) ) / ( Max( MUM,Min( MUR ,RCSe ) ) + ( MUC / RMSe ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934402}, {"determining": "( Max( FirstVNF_CPU,Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,CRS ) ) - ( MDR / ( MDR - MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * Min( RCSe ,Max( MUR,MUR ) ) ),( MUC + ( ( RMSe - CS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / MUC ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8031189083820662, "obj2": 0.10290240280836734}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.8460038986354775, "obj2": 0.07591705392898443}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( BR + ( ( PN / ( BR - ACS ) ) / PN ) ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.43664717348927873, "obj2": 0.5132244073404489}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.571150097465887, "obj2": 0.3347101506850945}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.46393762183235865, "obj2": 0.48429977753092657}, {"determining": "( Max( ( ( ( ARS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ARS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),RMSe ) ) ,( RRSe * CS ) )", "obj1": 0.3216374269005848, "obj2": 0.6755745108857169}, {"determining": "( ( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.7173489278752436, "obj2": 0.18018964002263896}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUR ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,RRSe )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166487}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.557504873294347, "obj2": 0.35542985262150856}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ( ARS / RRS ) * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,MDR ),( Min( AMS ,BR ) / Max( Min( PN ,MRS ),( PN + ARS ) ) ) ) )", "choosing": "Min( ( ( RRSe - RMSe ) * DS ) ,( CS / ( MLU * MLU ) ) )", "obj1": 0.5282651072124757, "obj2": 0.39900127177990335}, {"determining": "( Max( CRS,( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( DS * Min( MLU ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.7134502923976608, "obj2": 0.18148110152171773}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.6120857699805068, "obj2": 0.28190169723083236}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / FirstVNF_CPU_Server ) - Max( ( Min( MDR ,AMS ) - ( Max( ( MRS * FirstVNF_Mem ),FirstVNF_Mem ) * ( MDR + FirstVNF_Mem_Server ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( ARS * FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( RRSe,( DS - Min( RRSe ,( MUM + MUM ) ) ) ) * RCSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8693957115009746, "obj2": 0.06176357154385659}, {"determining": "( Max( CRS,( ( Max( RRS,( Max( FirstVNF_Mem_Server,ACS ) + Max( FirstVNF_Mem_Server,Const ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6632278917481063}, {"determining": "( Max( CRS,( ( ( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( MDR / PN ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.9727095516569201, "obj2": 0.013099781227240518}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.8596491228070176, "obj2": 0.06802938529813754}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUR ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( RMSe + RMSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7426900584795322, "obj2": 0.15169092773328008}, {"determining": "( ( Min( AMS ,BR ) / ( Max( RRS,( Min( Max( PN,( FirstVNF_RAM - AMS ) ) ,RRS ) + Max( FirstVNF_Mem_Server,Const ) ) ) * FirstVNF_CPU ) ) - Max( Min( AMS ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MUC / RCSe ) / ( ( CS - Min( RRSe ,MLU ) ) + RMSe ) )", "obj1": 0.9766081871345029, "obj2": 0.010762251739164416}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( Max( RRS,( BR + FirstVNF_RAM ) ) / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( ( MLU * MUM ) * Min( MLU ,MUM ) ) / ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.9941520467836257, "obj2": 0.0027035107858611987}, {"determining": "( Max( FirstVNF_CPU,CRS ) / ( PN - Max( Min( Max( ACS,DDR ) ,MDR ),Max( ( MRS * FirstVNF_RAM ),PN ) ) ) )", "choosing": "( ( MUC + ( DS * Min( Max( ( MUM * RMSe ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RCSe ) ) ) * ( Min( Max( MUM,RMSe ) ,MUC ) * Min( MUC ,MLU ) ) )", "obj1": 0.723196881091618, "obj2": 0.1718322460423731}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6413255360623782, "obj2": 0.25609412209459265}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( FirstVNF_Mem,Const ) ) ),MDR ) ) ) ) - ( DDR / ( ACS + ( ( CRS / FirstVNF_CPU_Server ) - ( PN - DDR ) ) ) ) )", "choosing": "( ( ( ( CS * CS ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( Min( ( MUM + ( Min( MUC ,MUR ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ),( Min( MUM ,DS ) * ( MLU / MUC ) ) ) )", "obj1": 0.8596491228070176, "obj2": 0.06802938529813754}, {"determining": "( Max( CRS,( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RMSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) - RRSe ) ,MUR ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.9376218323586745, "obj2": 0.029830635259043344}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ACS - FirstVNF_CPU ) ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( BR + ( ( PN / ( BR - ACS ) ) / PN ) ) * ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( Min( CS ,( ( MUR + DS ) * RCSe ) ) * ( CS - DS ) ) - MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MUC ,MLU ) - CS ) ) + Min( ( RCSe / RMSe ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8050682261208577, "obj2": 0.10194639249533824}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.3645224171539961, "obj2": 0.6158839564215816}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( Max( CRS,( ( PN / ( ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) ) + ( Min( AMS ,BR ) / ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) / ( Min( BR ,( FirstVNF_RAM * PN ) ) - ( CRS / PN ) ) ) ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) )", "obj1": 0.9454191033138402, "obj2": 0.026462498016501055}, {"determining": "( ( PN * MDR ) - ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( DDR / PN ) ) ) - MDR ) / MDR ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( Max( ( ( ( MUC - MLU ) * MLU ) - Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( RRSe,( RCSe / CS ) ) ) ) ),MUC ) * CS ) )", "obj1": 0.7348927875243665, "obj2": 0.16283187733440221}, {"determining": "( ( CRS * ( ( MDR / BR ) + ACS ) ) - ( Const + MDR ) )", "choosing": "Min( ( Min( Min( MUR ,RMSe ) ,( Max( ( Min( ( RRSe / CS ) ,Min( MUC ,MUR ) ) * ( RCSe / RMSe ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6374269005847953, "obj2": 0.26608851376984377}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RRSe * MUM ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6564410123986293}, {"determining": "( Max( CRS,( ( PN / ( ( FirstVNF_Mem_Server * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + ( FirstVNF_CPU_Server + ( FirstVNF_RAM_Server + Const ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( DS - MUR ) * MLU ) ,( Min( ( ( Max( MUM,DS ) - RRSe ) * CS ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) )", "obj1": 0.9610136452241715, "obj2": 0.01877481851749902}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ( ( FirstVNF_Mem_Server * Const ) * ( ARS * MDR ) ) * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( RRS + AMS ) ,( MDR * FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ,( ( ( DS - MUR ) * RRSe ) * RRSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6858733560618959}, {"determining": "( Max( CRS,( ( PN / MDR ) + ( Max( CRS,ACS ) - Const ) ) ) - ( FirstVNF_RAM_Server - BR ) )", "choosing": "Min( ( Min( ( ( CS + ( MUM * RRSe ) ) * Min( MUR ,( ( MUC - ( RMSe / RMSe ) ) * Max( Min( MUR ,RCSe ),MLU ) ) ) ) ,Min( MUR ,RMSe ) ) / MUC ) ,( ( MLU / MUC ) + ( MUC + MUC ) ) )", "obj1": 0.4249512670565302, "obj2": 0.5194741573445011}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( ( ACS / ( FirstVNF_Mem_Server * ( DDR / FirstVNF_RAM_Server ) ) ) / ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + Min( MUM ,DS ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6833243576888801}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MDR - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( Max( ( ( RMSe * MUC ) - MUM ),CS ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( BR / MDR ) + ACS ) ) - ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.631578947368421, "obj2": 0.2688468646067804}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,CS ) ) ) ) )", "obj1": 0.6179337231968811, "obj2": 0.27619448469907487}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Min( ARS ,RRS ) * ( ARS * FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_Mem_Server * Min( RRS ,AMS ) ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( ( RRSe - RMSe ) - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RCSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,RMSe ) ) ) ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( MUR - MUR ) * MLU ) )", "obj1": 0.391812865497076, "obj2": 0.5768670053677267}, {"determining": "( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8031189083820662, "obj2": 0.10290240280836734}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( MDR / Min( AMS ,( ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_RAM * PN ) ) + ( AMS * BR ) ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( ( ( DS - RRSe ) * RRSe ) - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.7797270955165692, "obj2": 0.11708163090334063}, {"determining": "Min( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( BR * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) ,FirstVNF_RAM_Server )", "choosing": "Min( ( RRSe / Max( ( MUC / RRSe ),Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( RRSe * CS ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.30409356725146197, "obj2": 0.6978487435997445}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( AMS,MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * Min( RRSe ,MUC ) ),( MUM + ( Min( MLU ,RRSe ) * DS ) ) ) - RRSe ) ,Min( DS ,RMSe ) ) / Max( Min( MUC ,MUR ),Max( ( RCSe - Min( ( DS - MUR ) ,( RRSe - MUC ) ) ),Min( Max( MUC,CS ) ,MLU ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.8908382066276803, "obj2": 0.05277334439701711}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.3684210526315789, "obj2": 0.6048376536931488}, {"determining": "( Min( AMS ,MDR ) - ( DDR / PN ) )", "choosing": "Min( ( Max( Max( ( MUR * ( ( ( RMSe + RRSe ) * ( RMSe + RCSe ) ) / RMSe ) ),( MUC + ( MUM * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) / Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6259388707919301}, {"determining": "( Max( CRS,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) - ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.9317738791423001, "obj2": 0.03457209708567096}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5592506097835915}, {"determining": "( Max( CRS,( ( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) / ( ( MDR * ( CRS / ( MRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ) + CRS ) ) - ( PN / DDR ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6914181316289324}], "15": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR + FirstVNF_Mem_Server ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Max( Max( ( DS * Min( MLU ,RRSe ) ),DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( ( MDR * ACS ) / FirstVNF_RAM ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,( RMSe + DS ) ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem / ( FirstVNF_CPU_Server - ( ( DDR * ( ACS / Min( ARS ,ARS ) ) ) - DDR ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( ( RCSe - DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Max( MLU,( RMSe / ( MLU * ( MLU - DS ) ) ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.6705653021442495, "obj2": 0.22274941966040993}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) * PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUR * MUC ) - MUM ),CS ) / Min( RMSe ,Min( Min( MUR ,MLU ) ,MUR ) ) ) ) ),( RMSe - CS ) ) )", "obj1": 0.4600389863547758, "obj2": 0.48602618115773105}, {"determining": "( Max( CRS,( ( ( ARS + FirstVNF_CPU ) + ( FirstVNF_Mem_Server * Max( ( AMS * ( MRS - FirstVNF_Mem ) ),( ( MDR * ARS ) / ( DDR / PN ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,( MUR * ( RCSe / MUC ) ) ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( ( RRSe - Min( Max( MUR,DS ) ,CS ) ),RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.4756335282651072, "obj2": 0.4434530360688875}, {"determining": "( ( Max( MRS,CRS ) + ( ( ARS / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * Const ) * ARS ) / CRS ) ,FirstVNF_CPU_Server ),( MDR / ( ( BR + ( PN / ( PN / ( FirstVNF_Mem - ACS ) ) ) ) * ( Max( FirstVNF_CPU,Min( ( BR * FirstVNF_Mem_Server ) ,CRS ) ) - ( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( ( ( Max( ( MUM - ( MUC / ( MUC * ( CS * MUR ) ) ) ),MUC ) - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Max( DS,MUC ) ) ) + RMSe ) / ( MLU / MUM ) )", "obj1": 0.6881091617933723, "obj2": 0.21740194071994076}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * RRS ) ) ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) - ( DDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( DS ,( MUM / Min( ( MUM / MUC ) ,( ( MUC + MLU ) - Max( RCSe,RCSe ) ) ) ) ) / ( MUM * ( Max( ( ( MUR * MUM ) / MUC ),MUM ) / ( CS - ( RCSe + ( MUC / DS ) ) ) ) ) ) + RMSe ) )", "obj1": 0.4171539961013645, "obj2": 0.549604934158603}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) + ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( Max( FirstVNF_RAM,MRS ),( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.5009746588693957, "obj2": 0.43719317048839157}, {"determining": "( Max( CRS,( ( Max( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ),( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( MLU - MUC ) ,RMSe ) ,( ( MUC - MLU ) * CS ) )", "obj1": 0.8148148148148148, "obj2": 0.09830592406688646}, {"determining": "( ( Const / AMS ) - Min( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ,Min( ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ,( RRS - ACS ) ) ) )", "choosing": "( ( ( MUC + Min( Max( Max( Min( ( CS - RRSe ) ,RRSe ),( DS + RMSe ) ),DS ) ,( RRSe / MUM ) ) ) - MUR ) / ( ( ( ( Max( MUR,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) + Max( RRSe,( Max( MLU,MUM ) / MLU ) ) ) )", "obj1": 0.5458089668615984, "obj2": 0.3757011029584816}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5886939571150097, "obj2": 0.33161237555090706}, {"determining": "( Max( CRS,( ( Max( RRS,Max( ACS,MDR ) ) / ( DDR / PN ) ) + FirstVNF_Mem ) ) - ( MDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - Min( RCSe ,CS ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.594541910331384, "obj2": 0.3071180198184962}, {"determining": "( ( ACS - ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) - Max( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.50682261208577, "obj2": 0.43466330709666456}, {"determining": "( Max( ( ( ( ARS * FirstVNF_CPU_Server ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ARS * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),RMSe ) ) ,( RRSe * CS ) )", "obj1": 0.3216374269005848, "obj2": 0.6755745108857169}, {"determining": "( ( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( Const * FirstVNF_CPU ) ) ) - ( MDR * MRS ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - ( ( ( MUC - CS ) + ( ( CS - MUR ) - CS ) ) + ( Max( ( MLU - MUM ),CS ) / ( RMSe * ( MUR + Min( RRSe ,RRSe ) ) ) ) ) ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.7933723196881092, "obj2": 0.10280202561593264}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.695906432748538, "obj2": 0.20135315761508193}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5560850367260571}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ACS * MRS ) ) + PN ) + Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,MUM ) ) ) ) - RRSe ),RRSe ) ) / Max( ( ( MUM / DS ) * ( MLU / MUC ) ),Min( ( MUM + ( Min( MUM ,( DS / ( RRSe * MUR ) ) ) / MUC ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.46778880240882525}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.8265107212475633, "obj2": 0.08447594686470522}, {"determining": "( ( RRS / ACS ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / PN ) )", "choosing": "Min( ( Min( Min( MUR ,RMSe ) ,( Max( ( MUR * MLU ),( ( MUR * ( RCSe / DS ) ) + ( DS * Min( MLU ,RRSe ) ) ) ) + RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( MUM + MUM ) - ( ( DS - CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.37037037037037035, "obj2": 0.5962441532513894}, {"determining": "( Max( Min( MRS ,FirstVNF_Mem_Server ),( ( ACS / ( ( FirstVNF_Mem_Server / AMS ) * ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + Max( ( ( MDR * ARS ) / FirstVNF_Mem ),RRS ) ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6585580651199869}, {"determining": "( Max( CRS,( ( PN / ( CRS - FirstVNF_RAM ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( ( MUR * MLU ),RRSe ) - RRSe ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,RRSe ) + MUR ) ) ) ,( RRSe * CS ) ) ) )", "obj1": 0.7504873294346979, "obj2": 0.1463260998536128}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6491228070175439, "obj2": 0.2513630953567204}, {"determining": "( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( FirstVNF_CPU_Server / AMS ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ( ( FirstVNF_RAM - PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( ( MLU * ( ( MUM + RCSe ) - MLU ) ) ,MLU ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.5107212475633528, "obj2": 0.4107070600189483}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) + RMSe ) )", "obj1": 0.5321637426900585, "obj2": 0.38165287137470016}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) * Min( MLU ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.20135315761508193}, {"determining": "( ( PN + ( Max( ( Const / FirstVNF_CPU_Server ),PN ) - MDR ) ) - Max( ( MDR / ( ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_RAM ) * ARS ) ),Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( ( ( ( MUC * CS ) + RCSe ) - MUR ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.7660818713450293, "obj2": 0.13579575510892883}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( FirstVNF_CPU_Server / AMS ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( RMSe ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.5165692007797271, "obj2": 0.40870861357391386}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6135266752479562}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / ( DS / ( RRSe * MUR ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5105280107455598}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.3684210526315789, "obj2": 0.6048376536931488}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( CRS,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) - ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.9317738791423001, "obj2": 0.03457209708567096}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( ( RRSe - Min( Max( CS,DS ) ,CS ) ),RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.4697855750487329, "obj2": 0.45290884541928084}, {"determining": "( Max( CRS,( ( FirstVNF_Mem / ( FirstVNF_Mem_Server * Min( AMS ,CRS ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( ( MUM + Min( MUM ,( MUR - MLU ) ) ) + ( ( MUC + ( DS * Min( RRSe ,MLU ) ) ) / MUC ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5834835159480831}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.3567251461988304, "obj2": 0.6190025985010655}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( RCSe + ( MUC / CS ) ) ),( MUM - RMSe ) )", "obj1": 0.5536062378167641, "obj2": 0.34594224739913765}, {"determining": "( Max( CRS,( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.7134502923976608, "obj2": 0.18148110152171773}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6491228070175439, "obj2": 0.2513630953567204}, {"determining": "( Max( ( PN / ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ),( PN / MDR ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( RMSe - CS ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.8927875243664717, "obj2": 0.051058929486090865}, {"determining": "( Min( PN ,ARS ) - ( FirstVNF_RAM / PN ) )", "choosing": "Max( ( RMSe + ( ( RRSe * ( Max( DS,( ( DS / MUR ) - ( MUM * MUC ) ) ) * MLU ) ) - Min( MUR ,MUR ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.2995104902320826}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Min( ARS ,RRS ) * ( ARS * FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_Mem_Server * Min( RRS ,AMS ) ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( ( RRSe - RMSe ) - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RCSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,RMSe ) ) ) ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( MUR - MUR ) * MLU ) )", "obj1": 0.391812865497076, "obj2": 0.5768670053677267}, {"determining": "( Max( ( Const * ( ACS / FirstVNF_CPU ) ),Max( MDR,AMS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( RMSe - DS ),Max( MUM,( ( CS + MLU ) / ( Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) / Max( ( ( RMSe * MUC ) - MUM ),RMSe ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.49803467615353786}, {"determining": "( Min( AMS ,MDR ) - ( DDR / PN ) )", "choosing": "Min( ( Max( Max( ( MUR * ( ( ( RMSe + RRSe ) * ( RMSe + RCSe ) ) / RMSe ) ),( MUC + ( MUM * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) / Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6259388707919301}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / Max( Min( ( ( ( MDR / BR ) - Const ) / Max( CRS,( MRS - PN ) ) ) ,MRS ),( PN + Min( FirstVNF_CPU ,PN ) ) ) ) ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.5263157894736842, "obj2": 0.3995376682527057}, {"determining": "( ( AMS + CRS ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( ( ( ( BR / MDR ) + CRS ) / ( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( Min( MUR ,MUR ) / Min( Min( DS ,DS ) ,MUR ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.530214424951267, "obj2": 0.38816569294364345}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS * FirstVNF_CPU ) ) ) ) / PN ) + ( ( ( ( MRS + FirstVNF_RAM ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( RMSe / Max( Min( ( MUM + ( MUC / Min( RMSe ,( ( MUM * RMSe ) / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ),( Min( MUM ,DS ) * ( MLU / MUC ) ) ) )", "obj1": 0.9571150097465887, "obj2": 0.021239106587136333}, {"determining": "( ( PN + ( ( AMS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + ACS ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * BR ) ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * ( ( MUR / MUR ) * MUC ) ),( MUC + ( DS * Min( RRSe ,MLU ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5750487329434698, "obj2": 0.3317505554571297}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( RRS / PN ) ),( AMS * ( ACS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( PN / DDR ) )", "choosing": "Min( ( Min( ( RCSe * RMSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( MUC * CS ) )", "obj1": 0.46588693957115007, "obj2": 0.45820827608560155}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.8460038986354775, "obj2": 0.07591705392898443}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8265107212475633, "obj2": 0.08447594686470522}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( RRSe ,RRSe ) + MUR ) ) ) ) ) + RMSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2890831736314821}, {"determining": "( Max( CRS,( ( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) / ( ( MDR * ( CRS / ( MRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ) + CRS ) ) - ( PN / DDR ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6914181316289324}, {"determining": "( ( CRS * ( ( MDR / BR ) + ACS ) ) - ( Const + MDR ) )", "choosing": "Min( ( Min( Min( MUR ,RMSe ) ,( Max( ( Min( ( RRSe / CS ) ,Min( MUC ,MUR ) ) * ( RCSe / RMSe ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6374269005847953, "obj2": 0.26608851376984377}, {"determining": "( Max( CRS,( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.8732943469785575, "obj2": 0.060048085400366956}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( Max( Min( MDR ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) - ( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) * Min( MLU ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.7173489278752436, "obj2": 0.17997295164890054}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( ( ( ( Min( AMS ,FirstVNF_RAM_Server ) * RRS ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) / PN ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( MUM - RMSe ) )", "obj1": 0.5653021442495126, "obj2": 0.34027007768539846}, {"determining": "( Max( CRS,( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.7134502923976608, "obj2": 0.18148110152171773}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( ( RRS / Const ) ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( DS * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * Min( ( DS / MUM ) ,( MUR * Min( Min( MUR ,DS ) ,RCSe ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.2819016972308323}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / FirstVNF_CPU_Server ) - Max( ( Min( MDR ,AMS ) - ( Max( ( MRS * FirstVNF_Mem ),FirstVNF_Mem ) * ( MDR + FirstVNF_Mem_Server ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( ARS * FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( RRSe,( DS - Min( RRSe ,( MUM + MUM ) ) ) ) * RCSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8693957115009746, "obj2": 0.06176357154385659}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.571150097465887, "obj2": 0.3347101506850945}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * ( DDR / PN ) ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,CS ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.5516569200779727, "obj2": 0.35837252210905585}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.621832358674464, "obj2": 0.27439214417516744}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Min( CRS ,( ( BR / MDR ) + ( CRS / CRS ) ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),( Max( RMSe,RRSe ) + ( Max( MUR,( MUC / ( Min( CS ,DS ) - Min( MUC ,MUR ) ) ) ) / Min( RMSe ,MUC ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.16116077444125881}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) - ( FirstVNF_Mem_Server * Min( RRS ,AMS ) ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),MUC ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( MUR - MUR ) * MLU ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166487}, {"determining": "( Max( CRS,( CRS + ( ACS / ( ( ( MDR * ( PN / MDR ) ) / FirstVNF_RAM ) * Max( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) ) - ( FirstVNF_RAM - FirstVNF_Mem ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),( MUC - Max( ( MUM / Max( Min( MUC ,CS ),( MUR / MLU ) ) ),MUR ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.28460038986354774, "obj2": 0.725580592968173}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5614035087719298, "obj2": 0.3441206219027288}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( Max( MUM,MUC ),MUM ) + Min( ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RMSe,RRSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( MUR * CS ) ) ) )", "obj1": 0.5497076023391813, "obj2": 0.36027275546459786}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RMSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) - RRSe ) ,MUR ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) )", "obj1": 0.9844054580896686, "obj2": 0.007352785402828462}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.4269005847953216, "obj2": 0.5185294736194026}, {"determining": "( Max( ( ( ( ARS * Max( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( ( MUR * ( RCSe / RMSe ) ) + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6466157181914327}, {"determining": "( ( DDR / PN ) - Max( CRS,( ( ( PN + RRS ) / ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) + CRS ) ) )", "choosing": "( Min( MUC ,MUR ) / ( Max( MUC,MUC ) + ( Max( ( MUR * MLU ),( MUR + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6810273678510761}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ARS * FirstVNF_RAM_Server ) ) ) + PN ) - ( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) / ( PN + ( ( FirstVNF_CPU_Server / ( CRS - MDR ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( RRSe + ( ( ( RMSe / MUM ) - RCSe ) / Max( DS,CS ) ) ) / ( MUR / Min( MUC ,Max( MUR,DS ) ) ) ) - Max( ( RRSe * MUC ),DS ) ) * MLU ) ,( Max( ( ( CS - Min( RRSe ,MUC ) ) + RMSe ),Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) )", "obj1": 0.28654970760233917, "obj2": 0.7207265280304982}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( RRSe * MUM ) ) ) ) - ( ( MUR - CS ) + ( CS / MUC ) ) ),( MUM - DS ) )", "obj1": 0.290448343079922, "obj2": 0.7149769278383676}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5834835159480831}, {"determining": "( Max( CRS,( CRS + ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) ) - ( DDR / Const ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + CS ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( ( MUC * RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5636506473872093}, {"determining": "( Max( ( ( ( Max( ( AMS - ACS ),BR ) * FirstVNF_CPU_Server ) / MDR ) + ACS ),Max( FirstVNF_CPU,Max( ( FirstVNF_Mem * Min( CRS ,AMS ) ),( FirstVNF_CPU_Server * MRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * ( RRSe / MLU ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / RRSe ),Min( MUC ,MUR ) ) ) ,( ( RRSe - ( ( RRSe - Max( RRSe,CS ) ) + RMSe ) ) * RMSe ) )", "obj1": 0.43859649122807015, "obj2": 0.5050142488580647}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / MDR ) + ( PN / MDR ) ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ) )", "obj1": 0.732943469785575, "obj2": 0.16464118988661003}, {"determining": "( Max( CRS,( CRS + ( Max( ( ( Min( FirstVNF_CPU_Server ,BR ) / RRS ) + FirstVNF_CPU_Server ),RRS ) / ( ( ( Min( AMS ,FirstVNF_RAM_Server ) * RRS ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( Min( ( Min( RMSe ,( MUC - ( MUM - RMSe ) ) ) + CS ) ,Min( MUR ,( MLU * MUC ) ) ) * RCSe ) - DS ) ,( MLU / RMSe ) )", "obj1": 0.5984405458089669, "obj2": 0.304261776149925}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ACS - FirstVNF_CPU ) ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( BR + ( ( PN / ( BR - ACS ) ) / PN ) ) * ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ( MDR / PN ) ) ) ) ) )", "choosing": "( ( ( Min( CS ,( ( MUR + DS ) * RCSe ) ) * ( CS - DS ) ) - MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MUC ,MLU ) - CS ) ) + Min( ( RCSe / RMSe ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8050682261208577, "obj2": 0.10194639249533824}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ( ARS / RRS ) * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,MDR ),( Min( AMS ,BR ) / Max( Min( PN ,MRS ),( PN + ARS ) ) ) ) )", "choosing": "Min( ( ( RRSe - RMSe ) * DS ) ,( CS / ( MLU * MLU ) ) )", "obj1": 0.5282651072124757, "obj2": 0.39900127177990335}, {"determining": "( ( ( ( ACS - ( ( AMS / AMS ) / ACS ) ) - MDR ) / MDR ) - ( PN / Max( RRS,( BR + FirstVNF_RAM ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MUM ) / CS ) ),Max( MUM,( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / ( DS * DS ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.017394131819569395}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * ( RRSe / MUM ) ) ) ) ,MLU ) )", "obj1": 0.3001949317738791, "obj2": 0.7057813748644647}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ( ( ( FirstVNF_Mem - ( MDR + AMS ) ) * ( ARS * ( MDR + FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RRSe - ( ( RRSe + ( ( MUM - ( MUR + MUM ) ) + CS ) ) - MUR ) ) + Min( ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( Max( ( RRSe - Min( Max( CS,DS ) ,CS ) ),RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.6179337231968811, "obj2": 0.2761944846990748}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "Min( Max( Min( FirstVNF_Mem_Server ,MRS ),( ( ACS / ( ( FirstVNF_CPU_Server / AMS ) * ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) ,( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7140833912626418}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( AMS * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,( DS * Min( MLU ,RRSe ) ) ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013368083118535313}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( ( MDR / ( ( MDR * ARS ) / FirstVNF_Mem ) ) + FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( CS + ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( CS ,RRSe ) + MUR ) ) ) ) ) + RMSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16992022541631488}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.49803467615353786}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,CS ) ) ) ) )", "obj1": 0.6393762183235867, "obj2": 0.2569952923565464}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( Max( MRS,( ( Const + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) - ( ( DDR + ( FirstVNF_CPU * ARS ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( ( ( ( MUC - Max( RRSe,MUR ) ) - ( Max( CS,MUC ) * ( DS + MUM ) ) ) + DS ) * MUC ) * RRSe ) ) ,( RRSe * MUM ) )", "obj1": 0.33723196881091616, "obj2": 0.6537492292554414}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( ( Min( BR ,ACS ) + ACS ) + CRS ) ) + PN ) - Max( Min( ( ( ( ( ( MRS * FirstVNF_RAM ) - PN ) - MDR ) / MDR ) - Max( ( ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) - Min( MDR ,AMS ) ),MDR ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) / ( ( MUR * ( MUR - MUM ) ) / RCSe ) )", "obj1": 0.7446393762183235, "obj2": 0.150734917420251}], "16": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "( Max( Max( MUM,MUC ),MUM ) + Min( ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RMSe,RRSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR + FirstVNF_Mem_Server ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Max( Max( ( DS * Min( MLU ,RRSe ) ),DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,AMS ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5458089668615984, "obj2": 0.35772920960715915}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) ) ,MDR ),( Min( AMS ,( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5886939571150097, "obj2": 0.33161237555090706}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * RRS ) ) ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) - ( DDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( DS ,( MUM / Min( ( MUM / MUC ) ,( ( MUC + MLU ) - Max( RCSe,RCSe ) ) ) ) ) / ( MUM * ( Max( ( ( MUR * MUM ) / MUC ),MUM ) / ( CS - ( RCSe + ( MUC / DS ) ) ) ) ) ) + RMSe ) )", "obj1": 0.4171539961013645, "obj2": 0.549604934158603}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( RCSe / RMSe ),( DS / ( MUM - MLU ) ) ) ) )", "obj1": 0.8557504873294347, "obj2": 0.06864050380355514}, {"determining": "( ( ACS - ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) - Max( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.50682261208577, "obj2": 0.43466330709666456}, {"determining": "( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( FirstVNF_CPU_Server / AMS ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ( ( FirstVNF_RAM - PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( ( MLU * ( ( MUM + RCSe ) - MLU ) ) ,MLU ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.5107212475633528, "obj2": 0.4107070600189483}, {"determining": "( Max( CRS,( ( PN / ( CRS - FirstVNF_RAM ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) * PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUR * MUC ) - MUM ),CS ) / Min( RMSe ,Min( Min( MUR ,MLU ) ,MUR ) ) ) ) ),( RMSe - CS ) ) )", "obj1": 0.4600389863547758, "obj2": 0.48602618115773105}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( CS + RMSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) + Min( ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.7076023391812866, "obj2": 0.18845697465035094}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.4873294346978557, "obj2": 0.43816231875583056}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Min( ACS ,PN ) / ( ARS * ( ( AMS * BR ) / ( ( AMS * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUR + Min( MLU ,MUM ) ) ) / Min( RRSe ,MLU ) )", "obj1": 0.6686159844054581, "obj2": 0.2319204130661044}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6135266752479562}, {"determining": "( Max( ( PN / ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ),( PN / MDR ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( RMSe - CS ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.8927875243664717, "obj2": 0.051058929486090865}, {"determining": "( ( Max( MRS,CRS ) + ( ( ARS / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * Const ) * ARS ) / CRS ) ,FirstVNF_CPU_Server ),( MDR / ( ( BR + ( PN / ( PN / ( FirstVNF_Mem - ACS ) ) ) ) * ( Max( FirstVNF_CPU,Min( ( BR * FirstVNF_Mem_Server ) ,CRS ) ) - ( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( ( ( Max( ( MUM - ( MUC / ( MUC * ( CS * MUR ) ) ) ),MUC ) - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Max( DS,MUC ) ) ) + RMSe ) / ( MLU / MUM ) )", "obj1": 0.6881091617933723, "obj2": 0.21740194071994076}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) * Min( MLU ,Min( DS ,MUM ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.20135315761508193}, {"determining": "( ( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( Const * FirstVNF_CPU ) ) ) - ( MDR * MRS ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( CS - ( ( ( MUC - CS ) + ( ( CS - MUR ) - CS ) ) + ( Max( ( MLU - MUM ),CS ) / ( RMSe * ( MUR + Min( RRSe ,RRSe ) ) ) ) ) ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.6627680311890838, "obj2": 0.24577561567916348}, {"determining": "( Max( CRS,( CRS + ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) ) - ( DDR / Const ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + CS ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( ( MUC * RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5636506473872093}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( ( MDR / ( ( MDR * ARS ) / FirstVNF_Mem ) ) + FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( CS + ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( CS ,RRSe ) + MUR ) ) ) ) ) + RMSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16992022541631488}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.8265107212475633, "obj2": 0.08447594686470522}, {"determining": "( Max( ( ( ( ( Min( Max( AMS,FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / ARS ) / FirstVNF_RAM_Server ) / ( DDR / PN ) ) + CRS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Min( RMSe ,MUR ) - ( MUM - RMSe ) ) / ( Max( RMSe,( DS * RRSe ) ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.594541910331384, "obj2": 0.3071180198184962}, {"determining": "( Max( CRS,( ( Max( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ),( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( MLU - MUC ) ,RMSe ) ,( ( MUC - MLU ) * CS ) )", "obj1": 0.8148148148148148, "obj2": 0.09830592406688646}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( ( RRSe - MUM ) ,MUR ) / MLU ) + RMSe ) )", "obj1": 0.5321637426900585, "obj2": 0.38165287137470016}, {"determining": "( Max( CRS,( ( Max( RRS,( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( Min( ( DS + ( CS * CS ) ) ,RRSe ) + RCSe ) ,MUR ) ) ) ,( MUR * RCSe ) )", "obj1": 0.8167641325536062, "obj2": 0.09740475380493274}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MLU / MUC ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.4327485380116959, "obj2": 0.5102015885588399}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( ( MUR * ( RCSe / RMSe ) ) + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.6705653021442495, "obj2": 0.22274941966040993}, {"determining": "( Max( CRS,( ( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) / ( ( MDR * ( CRS / ( MRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ) + CRS ) ) - ( PN / DDR ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6914181316289324}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( ( RRS / Const ) ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( DS * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * Min( ( DS / MUM ) ,( MUR * Min( Min( MUR ,DS ) ,RCSe ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.2819016972308323}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( ( ARS * FirstVNF_RAM_Server ) - FirstVNF_CPU ) - AMS ) ) ) ) - ( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * ( RRSe / Max( Max( MUM,MUC ),MUM ) ) ) ) ) ,MLU ) )", "obj1": 0.3138401559454191, "obj2": 0.6862057971349113}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( RCSe + ( MUC / CS ) ) ),( MUM - RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.5736024177294151}, {"determining": "( ( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.8401559454191033, "obj2": 0.07660406432777137}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_CPU_Server * Max( ( AMS * Min( FirstVNF_RAM ,BR ) ),( MDR * MDR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( Max( RCSe,RRSe ) ,( ( MUR - MUR ) * MLU ) )", "obj1": 0.4015594541910331, "obj2": 0.5560850367260571}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) + ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( Max( FirstVNF_RAM,MRS ),( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.5009746588693957, "obj2": 0.43719317048839157}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( BR + ( ( PN / ( BR - ACS ) ) / PN ) ) * ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ( MDR / ( AMS - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Max( ( MUM - MLU ),MUC ) - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( ( RCSe / RMSe ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.6861598440545809, "obj2": 0.22034414952490233}, {"determining": "( Max( CRS,( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM + ( RCSe / RMSe ) ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),( DS / MUC ) ) * CS ) )", "obj1": 0.34307992202729043, "obj2": 0.6404121782962681}, {"determining": "( Max( CRS,( ( PN / ( BR + MRS ) ) + CRS ) ) - ( DDR + PN ) )", "choosing": "( MLU / ( Max( MUC,RRSe ) + ( MUC / ( MUC + Max( MLU,CS ) ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5834835159480831}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( CRS,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) + PN ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.7855750487329435, "obj2": 0.11114346888959008}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * MDR ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( DS - MLU ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3255360623781676, "obj2": 0.6656918427775386}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( ARS * Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) )", "choosing": "Min( ( Max( ( MUR * MLU ),( Min( MUM ,( DS / ( RRSe * MUR ) ) ) + ( DS * Min( MLU ,RRSe ) ) ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7680311890838206, "obj2": 0.12739690571354745}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - CRS ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( ( MUR / MLU ) - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),CS ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.8460038986354775, "obj2": 0.07591705392898443}, {"determining": "( Max( CRS,( ( ACS / ( MDR * ( FirstVNF_RAM_Server / ( FirstVNF_Mem - ( RRS / FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - PN ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + ( CS + ( Max( RCSe,RMSe ) + MLU ) ) )", "obj1": 0.3898635477582846, "obj2": 0.579654301799302}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.530214424951267, "obj2": 0.38471867260941317}, {"determining": "( Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe / MUC ) - MUM ),MUC ) / Min( RMSe ,( MUR + Min( MUR ,MLU ) ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.49803467615353786}, {"determining": "( ( PN + ( ( AMS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + ACS ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * BR ) ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * ( ( MUR / MUR ) * MUC ) ),( MUC + ( DS * Min( RRSe ,MLU ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5750487329434698, "obj2": 0.3317505554571297}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( RRS / PN ) ),( AMS * ( ACS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( PN / DDR ) )", "choosing": "Min( ( Min( ( RCSe * RMSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( MUC * CS ) )", "obj1": 0.46588693957115007, "obj2": 0.45820827608560155}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.695906432748538, "obj2": 0.20135315761508193}, {"determining": "( ( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( RMSe ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10184601530290355}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / ( ( FirstVNF_Mem_Server / AMS ) * ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ,CS ) ) )", "obj1": 0.30214424951267055, "obj2": 0.699282702155785}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / MDR ) - Max( ( Min( MDR ,AMS ) + ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( ( MUM + MUM ) ,Max( DS,( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.46778880240882525}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - AMS ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,( MUR * ( RCSe / RMSe ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.1758091816465245}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( RCSe + ( MUC / CS ) ) ),( MUM - RMSe ) )", "obj1": 0.5536062378167641, "obj2": 0.34594224739913765}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.3567251461988304, "obj2": 0.6190025985010655}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.949317738791423, "obj2": 0.024203367462311328}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / MDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.732943469785575, "obj2": 0.1628323380169879}, {"determining": "( Max( CRS,( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.8732943469785575, "obj2": 0.060048085400366956}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( ( ( ( Min( AMS ,FirstVNF_RAM_Server ) * RRS ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) / PN ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( MUM - RMSe ) )", "obj1": 0.5653021442495126, "obj2": 0.34027007768539846}, {"determining": "( Max( Min( MRS ,FirstVNF_Mem_Server ),( ( ACS / ( ( FirstVNF_Mem_Server / AMS ) * ( ( ( MDR * FirstVNF_RAM ) / ( AMS + MDR ) ) + ( AMS * FirstVNF_RAM ) ) ) ) + Max( ( ( ARS * MDR ) / FirstVNF_Mem ),RRS ) ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUR * MLU ),( MUC + ( DS * Max( MUR,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6461069994620269}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ( ARS / RRS ) * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ,MDR ),( Min( AMS ,BR ) / Max( Min( PN ,MRS ),( PN + ARS ) ) ) ) )", "choosing": "Min( ( ( RRSe - RMSe ) * DS ) ,( CS / ( MLU * MLU ) ) )", "obj1": 0.5282651072124757, "obj2": 0.39900127177990335}, {"determining": "( Max( FirstVNF_CPU_Server,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( FirstVNF_CPU - ( Min( MDR ,FirstVNF_RAM ) - DDR ) ) - AMS ) ) ) ) - ( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) / ( BR + FirstVNF_RAM ) ) )", "choosing": "( Max( RMSe,MUM ) + Max( MUC,( RCSe * ( MUC - Min( MUR ,MUM ) ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7253380871243882}, {"determining": "( Max( ( ( ( ARS * Max( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( ( RRSe - RMSe ) - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RCSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,RMSe ) ) ) ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( MUR - MUR ) * MLU ) )", "obj1": 0.3157894736842105, "obj2": 0.676608428348071}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.571150097465887, "obj2": 0.3347101506850945}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.8265107212475633, "obj2": 0.08447594686470522}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5614035087719298, "obj2": 0.3441206219027288}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,CS ) ) ) ) )", "obj1": 0.6393762183235867, "obj2": 0.2569952923565464}, {"determining": "( Max( CRS,( ( ACS / ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - AMS ) ) - CRS ) ) - ( DDR / PN ) )", "choosing": "Max( ( DS * MUR ),Max( RCSe,( DS * Min( CS ,RRSe ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.010500052179447956}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC + Min( Max( Max( Min( ( CS - RRSe ) ,RRSe ),( DS + RMSe ) ),DS ) ,( RRSe / MUM ) ) ) - MUR ) / ( ( ( ( Max( MUR,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) + Max( RRSe,( Max( MLU,MUM ) / MLU ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.38165287137470016}, {"determining": "( ( RRS / ACS ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / PN ) )", "choosing": "Min( ( Min( Min( MUR ,RMSe ) ,( Max( ( MUR * MLU ),( ( MUR * ( RCSe / DS ) ) + ( DS * Min( MLU ,RRSe ) ) ) ) + RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( MUM + MUM ) - ( ( DS - CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.37037037037037035, "obj2": 0.5962441532513894}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,CS ) ) ) ) )", "obj1": 0.6393762183235867, "obj2": 0.2569952923565464}, {"determining": "( Max( CRS,( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) + CRS ) ) - ( MDR / ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RMSe ) + MUR ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) - RRSe ) ,MUR ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) )", "obj1": 0.9395711500974658, "obj2": 0.029016319377507448}, {"determining": "( ( PN + ( Max( ( Const / FirstVNF_CPU_Server ),PN ) - MDR ) ) - Max( ( MDR / ( ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_RAM ) * ARS ) ),Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( ( ( ( MUC * CS ) + RCSe ) - MUR ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.7660818713450293, "obj2": 0.13579575510892883}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.48602618115773105}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6491228070175439, "obj2": 0.2513630953567204}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( Min( ARS ,RRS ) * ( ARS * FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( ( RRSe - RMSe ) - MUM ) * ( RCSe / RMSe ) ),( ( ( CS + RCSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,RMSe ) ) ) ) ) ,Min( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( MUR - MUR ) * MLU ) )", "obj1": 0.2962962962962963, "obj2": 0.7066112284405693}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) - ( FirstVNF_Mem_Server * Min( RRS ,AMS ) ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166487}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( FirstVNF_Mem + ( PN / MDR ) ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM - MLU ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * ( Max( ( MUR * ( RCSe / RMSe ) ),Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) - RRSe ) ) )", "obj1": 0.5964912280701754, "obj2": 0.3036880086576306}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.6471734892787524, "obj2": 0.25330202805260815}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * ( RRSe / MUM ) ) ) ) ,MLU ) )", "obj1": 0.7504873294346979, "obj2": 0.1463260998536128}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ARS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.4756335282651072, "obj2": 0.4434530360688875}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.47368421052631576, "obj2": 0.447042182043889}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.6257309941520468, "obj2": 0.2657966861979755}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / FirstVNF_CPU_Server ) - Max( ( Min( MDR ,AMS ) - ( Max( ( MRS * FirstVNF_Mem ),FirstVNF_Mem ) * ( MDR + FirstVNF_Mem_Server ) ) ),MDR ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( ARS * FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Max( RRSe,( DS - Min( RRSe ,( MUM + MUM ) ) ) ) * RCSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8693957115009746, "obj2": 0.06176357154385659}, {"determining": "( ( Max( RRS,( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ) + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6042884990253411, "obj2": 0.2975343199794377}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,CS ) ) ) ) )", "obj1": 0.6062378167641326, "obj2": 0.2890831736314821}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / ( FirstVNF_CPU_Server / AMS ) ) )", "choosing": "( Max( ( MUM - MLU ),MUC ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( ( RRSe - Min( Max( CS,DS ) ,CS ) ),RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.29239766081871343, "obj2": 0.7135632685999412}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),( ( ( Min( AMS ,FirstVNF_RAM_Server ) * RRS ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) / PN ) ) - MDR ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( Const + FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM - ( Min( MUR ,( MLU * MUC ) ) / Min( MUM ,( DS / ( DS / CS ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9298245614035088, "obj2": 0.03535743433476602}, {"determining": "( Min( PN ,ARS ) - ( FirstVNF_RAM / PN ) )", "choosing": "Max( ( RMSe + ( ( RRSe * ( Max( DS,( ( DS / MUR ) - ( MUM * MUC ) ) ) * MLU ) ) - Min( MUR ,MUR ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( MLU - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.2995104902320826}, {"determining": "( Max( ( Const * ( ACS / FirstVNF_CPU ) ),Max( MDR,AMS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( RMSe - DS ),Max( MUM,( ( CS + MLU ) / ( Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) / Max( ( ( RMSe * MUC ) - MUM ),RMSe ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.49803467615353786}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) / PN ) )", "choosing": "Min( ( Max( Max( ( MUR * ( ( ( RMSe + RRSe ) * ( RMSe + RCSe ) ) / RMSe ) ),( MUC + ( MUM * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) / Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3235867446393762, "obj2": 0.6747916339575778}, {"determining": "( Max( CRS,( ( FirstVNF_Mem / ( FirstVNF_Mem_Server * Min( AMS ,CRS ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( MLU / ( ( MUM + Min( MUM ,( MUR - MLU ) ) ) + ( ( MUC + ( DS * Min( RRSe ,MLU ) ) ) / MUC ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5834835159480831}, {"determining": "( Max( MRS,( ( Const + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) - ( ( DDR + ( FirstVNF_CPU * ARS ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( ( ( ( MUC - Max( RRSe,MUR ) ) - ( Max( CS,MUC ) * ( DS + MUM ) ) ) + DS ) * MUC ) * RRSe ) ) ,( RRSe * MUM ) )", "obj1": 0.33723196881091616, "obj2": 0.6537492292554414}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}], "17": [{"determining": "( ( PN + ( ( ( AMS * ( AMS - FirstVNF_Mem ) ) / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,( Max( Const,AMS ) * CRS ) ),( BR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( RRSe / ( ( ( MUC - ( Max( MUR,MLU ) * MUC ) ) / RRSe ) - ( MUR / MUR ) ) ) ,Max( DS,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( RRS / BR ) - Const ) / Max( CRS,Min( BR ,BR ) ) )", "choosing": "( Max( Max( MUM,MUC ),MUM ) + Min( ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RMSe,RRSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( MUR * CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,AMS ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( FirstVNF_CPU_Server / AMS ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ( ( FirstVNF_RAM - PN ) / FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( RRSe ,MUC ) / Min( ( MLU * ( ( MUM + RCSe ) - MLU ) ) ,MLU ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.5107212475633528, "obj2": 0.4107070600189483}, {"determining": "( Max( CRS,( ( PN / ( CRS - FirstVNF_RAM ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( Min( MDR ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) + ( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC + Min( Max( Max( Min( ( CS - RRSe ) ,RRSe ),( DS + RMSe ) ),Max( Max( ( RMSe * MUC ),MUM ),CS ) ) ,( RRSe / MUM ) ) ) - MUR ) / ( ( ( ( Max( MUR,RRSe ) - ( CS / CS ) ) / CS ) * MUR ) + Max( RRSe,Max( ( Max( ( ( RMSe + MUC ) - Min( RRSe ,MUM ) ),MUC ) / ( ( RRSe - Min( MLU ,RCSe ) ) * MUC ) ),RRSe ) ) ) )", "obj1": 0.5282651072124757, "obj2": 0.38785909296505655}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( CS + RMSe ) + MUM ) + ( ( MLU * MUM ) * Min( MLU ,MUM ) ) ) + Min( ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) )", "obj1": 0.7076023391812866, "obj2": 0.18709319913431297}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ( FirstVNF_CPU_Server / AMS ) * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( ( MUC - ( Max( CS,CS ) * MUC ) ) ,( RRSe * CS ) )", "obj1": 0.580896686159844, "obj2": 0.3161434824850026}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * RRS ) ) ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) - ( DDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( DS ,( MUM / Min( ( MUM / MUC ) ,( ( MUC + MLU ) - Max( RCSe,RCSe ) ) ) ) ) / ( MUM * ( Max( ( ( MUR * MUM ) / MUC ),MUM ) / ( CS - ( RCSe + ( MUC / DS ) ) ) ) ) ) + RMSe ) )", "obj1": 0.4171539961013645, "obj2": 0.549604934158603}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),( AMS * ( Const - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( PN / MDR ) )", "choosing": "Max( Max( RCSe,DS ),Min( ( RMSe - ( ( RMSe * MLU ) / ( DS - CS ) ) ) ,Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.37476782776157996}, {"determining": "( ( ACS - ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) - Max( ( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) + FirstVNF_CPU ) ),Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( RRSe - Min( ( RRSe - MLU ) ,RMSe ) ) * RMSe ) )", "obj1": 0.50682261208577, "obj2": 0.43466330709666456}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * MDR ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( DS - MLU ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3255360623781676, "obj2": 0.6656918427775386}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) * PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUR * MUC ) - MUM ),CS ) / Min( RMSe ,Min( Min( MUR ,MLU ) ,MUR ) ) ) ) ),( RMSe - CS ) ) )", "obj1": 0.4600389863547758, "obj2": 0.48602618115773105}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / MDR ) - Max( ( Min( MDR ,AMS ) + ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( ( MUM + MUM ) ,Max( DS,( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.46778880240882525}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.3567251461988304, "obj2": 0.6190025985010655}, {"determining": "( Max( MRS,( ( Const + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) - ( ( DDR + ( FirstVNF_CPU * ARS ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( ( ( ( MUC - Max( RRSe,MUR ) ) - ( Max( CS,MUC ) * ( DS + MUM ) ) ) + DS ) * MUC ) * RRSe ) ) ,( RRSe * MUM ) )", "obj1": 0.33723196881091616, "obj2": 0.6537492292554414}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( RRS / PN ) ),( AMS * ( ACS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( PN / DDR ) )", "choosing": "Min( ( Min( ( RCSe * RMSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( MUC * CS ) )", "obj1": 0.46588693957115007, "obj2": 0.45820827608560155}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) * Min( MLU ,Min( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ,MUM ) ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.24381494324799954}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),( ACS * BR ) ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * ( RMSe / MUM ) ) ) ) ,MLU ) )", "obj1": 0.9590643274853801, "obj2": 0.02077804516416054}, {"determining": "( ( RRS / ACS ) - ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / PN ) )", "choosing": "Min( ( Min( Min( MUR ,RMSe ) ,( Max( ( MUR * MLU ),( ( MUR * ( RCSe / DS ) ) + ( DS * Min( MLU ,RRSe ) ) ) ) + RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( ( MUM + MUM ) - ( ( DS - CS ) / ( MUR + MLU ) ) ) )", "obj1": 0.37037037037037035, "obj2": 0.5962441532513894}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6135266752479562}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),( ( ( Min( AMS ,FirstVNF_RAM_Server ) * RRS ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) / PN ) ) - MDR ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( ( MDR / ( FirstVNF_Mem_Server * Min( RRS ,AMS ) ) ) + FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( DS * Min( MLU ,RRSe ) ),Min( ( MUM + ( Min( MUR ,( MLU * MUC ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05434787422961574}, {"determining": "( Max( ( ( ( ( Min( Max( AMS,FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / ARS ) / FirstVNF_RAM_Server ) / ( DDR / PN ) ) + CRS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Min( RMSe ,MUR ) - ( MUM - RMSe ) ) / ( Max( RMSe,( DS * RRSe ) ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.594541910331384, "obj2": 0.3071180198184962}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * DS ) ,( RRSe * CS ) ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.695906432748538, "obj2": 0.2013531576150819}, {"determining": "( ( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / ( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( DS / ( RRSe * ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) ) ) ) ) )", "obj1": 0.6627680311890838, "obj2": 0.23398532215254234}, {"determining": "( Max( CRS,( ( PN / MDR ) + ( ACS / PN ) ) ) - ( MDR - PN ) )", "choosing": "( Max( Min( MLU ,MUC ),( RMSe + RMSe ) ) / ( Min( RRSe ,RCSe ) / Min( CS ,MLU ) ) )", "obj1": 0.42884990253411304, "obj2": 0.5104056264962215}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( ( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( RMSe ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10184601530290355}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / MDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - ( MDR / ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( MUC ,MUR ) - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.6998050682261209, "obj2": 0.20130524670831998}, {"determining": "( Max( CRS,( ( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) / ( ( MDR * ( CRS / ( MRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ) + CRS ) ) - ( PN / DDR ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6914181316289324}, {"determining": "( Max( CRS,( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.8732943469785575, "obj2": 0.060048085400366956}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.6705653021442495, "obj2": 0.22274941966040993}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ACS / MRS ) ) ) ) - ( Min( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) ,( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * ( CS - CS ) ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.5458089668615984, "obj2": 0.35772920960715915}, {"determining": "( ( PN + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / Max( Min( PN ,MRS ),( PN + ARS ) ) ) ) )", "choosing": "Min( ( DS * ( RRSe - Max( ( MUR / MLU ),DS ) ) ) ,Min( CS ,RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6833549941343752}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ARS ) / ( DDR / PN ) ),Min( ( RRS - ARS ) ,CRS ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.47368421052631576, "obj2": 0.44612453252540624}, {"determining": "( Max( CRS,( ( ACS / ( MDR * ( FirstVNF_RAM_Server / ( FirstVNF_Mem - ( RRS / FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - PN ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + ( CS + ( Max( RCSe,RMSe ) + MLU ) ) )", "obj1": 0.3898635477582846, "obj2": 0.579654301799302}, {"determining": "( Max( ( Min( ( BR + AMS ) ,CRS ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "Min( ( Max( Max( ( MUC / ( MUM * Min( MLU ,RRSe ) ) ),( MUR * ( ( ( RRSe / RMSe ) - MUR ) / RMSe ) ) ),Min( MUC ,MUM ) ) / Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.43664717348927873, "obj2": 0.5052721037356962}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( RMSe - CS ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5707459693938283}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Min( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * ( RRSe / MUM ) ) ) ) ,MLU ) )", "obj1": 0.7504873294346979, "obj2": 0.1463260998536128}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),MUC ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( MUR - MUR ) * MLU ) )", "obj1": 0.4015594541910331, "obj2": 0.5560850367260571}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) + ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( Max( FirstVNF_RAM,MRS ),( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.5009746588693957, "obj2": 0.43719317048839157}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( CRS + MDR ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe / CS ),Max( MUM,( ( CS + MLU ) / ( ( RMSe / ( ( DS - RMSe ) + RMSe ) ) / Min( RMSe ,( Min( MLU ,MUR ) + MUR ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.49803467615353786}, {"determining": "( Max( CRS,( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM + ( RCSe / RMSe ) ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),( DS / MUC ) ) * CS ) )", "obj1": 0.34307992202729043, "obj2": 0.6404121782962681}, {"determining": "( ( ( MRS + ACS ) / BR ) - ( MRS / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( Max( RRSe,( RRSe * CS ) ) + ( MUC * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5834835159480831}, {"determining": "( Max( ( ( ( ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) / ACS ) * FirstVNF_RAM ) * AMS ),( ( Const / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUR / ( Max( CS,RRSe ) * Max( MUR,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.6257309941520468, "obj2": 0.2657966861979755}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( ( RRS / Const ) ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( DS * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * Min( ( DS / MUM ) ,( MUR * Min( Min( MUR ,DS ) ,RCSe ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.2819016972308323}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5614035087719298, "obj2": 0.3441206219027288}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.6120857699805068, "obj2": 0.2819016972308323}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) / PN ) )", "choosing": "Min( ( Max( Max( ( MUR * ( ( ( RMSe + RRSe ) * ( RMSe + RCSe ) ) / RMSe ) ),( MUC + ( MUM * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) / Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.3235867446393762, "obj2": 0.6747916339575778}, {"determining": "( Max( CRS,( ( Max( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ),( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( MLU - MUC ) ,RMSe ) ,( ( MUC - MLU ) * CS ) )", "obj1": 0.8148148148148148, "obj2": 0.09830592406688646}, {"determining": "( Max( CRS,( ( ACS / ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) ) - AMS ) ) - CRS ) ) - ( DDR / PN ) )", "choosing": "Max( ( DS * MUR ),Max( RCSe,( DS * Min( CS ,RRSe ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.010500052179447956}, {"determining": "( Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe / MUC ) - MUM ),MUC ) / Min( RMSe ,( MUR + Min( MUR ,MLU ) ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.49803467615353786}, {"determining": "( Max( CRS,( ( Max( RRS,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "Min( ( Max( MLU,( ( MUC * RCSe ) / MUC ) ) + DS ) ,( ( DS * Min( MLU ,RRSe ) ) + CS ) )", "obj1": 0.8206627680311891, "obj2": 0.09692798564991194}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.5536062378167641, "obj2": 0.34594224739913765}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.5458089668615984, "obj2": 0.35772920960715915}, {"determining": "( ( PN + ( ( AMS / FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server + ACS ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * BR ) ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * ( ( MUR / MUR ) * MUC ) ),( MUC + ( DS * Min( RRSe ,MLU ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.5750487329434698, "obj2": 0.3317505554571297}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( RCSe + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.5653021442495126, "obj2": 0.33663460348669605}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( ( Max( RRSe,( DS - Min( RRSe ,( MUM + MUM ) ) ) ) * RCSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( Max( CRS,( ( ACS / ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / FirstVNF_CPU_Server ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( Min( ( ( Max( RRSe,( DS - Min( RRSe ,( MUM + MUM ) ) ) ) * RCSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.7270955165692008, "obj2": 0.16992022541631485}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ( BR + ( ( PN / ( BR - ACS ) ) / PN ) ) * ( Max( FirstVNF_CPU,Min( Min( BR ,FirstVNF_Mem_Server ) ,CRS ) ) - ( MDR / ( AMS - FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Max( ( MUM - MLU ),MUC ) - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( ( RCSe / RMSe ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.6861598440545809, "obj2": 0.22034414952490233}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.8245614035087719, "obj2": 0.08543195717773432}, {"determining": "( ( Max( MRS,CRS ) + ( ( ARS / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( ( ( ( ( FirstVNF_CPU_Server * FirstVNF_Mem ) * Const ) * ARS ) / CRS ) ,FirstVNF_CPU_Server ),( MDR / ( ( BR + ( PN / ( PN / ( FirstVNF_Mem - ACS ) ) ) ) * ( Max( FirstVNF_CPU,Min( ( BR * FirstVNF_Mem_Server ) ,CRS ) ) - ( FirstVNF_RAM_Server / MDR ) ) ) ) ) )", "choosing": "( ( ( Max( ( MUM - ( MUC / ( MUC * ( CS * MUR ) ) ) ),MUC ) - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Max( DS,MUC ) ) ) + RMSe ) / ( MLU / MUM ) )", "obj1": 0.6881091617933723, "obj2": 0.21740194071994076}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( RCSe / RMSe ),( DS / ( MUM - MLU ) ) ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06959651411658427}, {"determining": "( Max( CRS,( ( Max( RRS,( MDR + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( ( Min( ( DS + ( CS * CS ) ) ,RRSe ) + RCSe ) ,MUR ) ) ) ,( MUR * RCSe ) )", "obj1": 0.9044834307992202, "obj2": 0.04578193066618772}, {"determining": "( Max( CRS,( ( Max( ( PN / ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ),( PN / MDR ) ) - ( DDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),( ( RCSe / RRSe ) / CS ) )", "obj1": 0.8674463937621832, "obj2": 0.06448951395579679}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / ( Max( BR,PN ) - MDR ) ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - Min( Const ,AMS ) )", "choosing": "( Max( ( Min( RMSe ,RRSe ) * RMSe ),MUM ) + Min( ( ( ( Min( CS ,( MLU / CS ) ) + RRSe ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.9902534113060428, "obj2": 0.005427444562822159}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * Max( MDR,PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) + PN ) ) + ACS ) )", "choosing": "( ( ( MUC + MLU ) * MLU ) / Min( RMSe ,Max( ( RCSe / RMSe ),( DS / ( MUM - MLU ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( Max( CRS,( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( Const * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,( ( CS - MUR ) - CS ) ) ,CS ) ) ) ) )", "obj1": 0.9824561403508771, "obj2": 0.008178018767679249}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - CRS ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.6257309941520468, "obj2": 0.2657966861979755}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.28654970760233917, "obj2": 0.7208772798386537}, {"determining": "( Max( CRS,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) + PN ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.7875243664717348, "obj2": 0.11018745857656095}, {"determining": "( ( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.7933723196881092, "obj2": 0.10280202561593264}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( AMS * FirstVNF_CPU ) / FirstVNF_RAM ) + ( MDR * FirstVNF_CPU ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,( DS * Min( MLU ,RRSe ) ) ),Max( ( RMSe - CS ),Max( ( ( MLU * MUM ) * Min( RRSe ,MUM ) ),( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.9766081871345029, "obj2": 0.010500052179447956}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( ( PN + ( Max( ( Const / FirstVNF_CPU_Server ),PN ) - MDR ) ) - Max( ( MDR / ( ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_RAM ) * ARS ) ),Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( ( ( ( MUC * CS ) + RCSe ) - MUR ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.7660818713450293, "obj2": 0.13579575510892883}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8576998050682261, "obj2": 0.06773933354160142}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( ( FirstVNF_Mem_Server * DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( AMS * MRS ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( DS,RCSe ),Max( Min( RMSe ,CS ),Max( MUM,Max( ( RMSe + CS ),CS ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.48602618115773105}, {"determining": "( Max( CRS,( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - AMS ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,( MUR * ( RCSe / RMSe ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.1758091816465245}, {"determining": "( ( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.8401559454191033, "obj2": 0.07660406432777137}, {"determining": "( Max( CRS,( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - AMS ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.7192982456140351, "obj2": 0.1758091816465245}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( Min( ACS ,PN ) / ( ARS * ( ( AMS * BR ) / ( ( AMS * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUR + Min( MLU ,MUM ) ) ) / Min( RRSe ,MLU ) )", "obj1": 0.6686159844054581, "obj2": 0.2319204130661044}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.8265107212475633, "obj2": 0.08447594686470522}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.571150097465887, "obj2": 0.3347101506850945}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.4873294346978557, "obj2": 0.43816231875583056}, {"determining": "( Max( ( ( ( ARS * ( FirstVNF_Mem / BR ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( RCSe / MUR ),Max( ( RMSe - DS ),Max( ( ( CS + MLU ) / ( Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) / Max( ( ( RMSe * MUC ) - MUM ),RMSe ) ) ),MUM ) ) )", "obj1": 0.3157894736842105, "obj2": 0.676608428348071}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.6062378167641326, "obj2": 0.2890831736314821}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( ( MUC - MUR ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.4834307992202729, "obj2": 0.4398127854855321}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + MUC ) )", "obj1": 0.6354775828460039, "obj2": 0.2618848679408935}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * ( RRSe / MUM ) ) ) ) ,MLU ) )", "obj1": 0.631578947368421, "obj2": 0.26303833536103904}, {"determining": "( Max( CRS,( ( PN / ( BR + MRS ) ) + CRS ) ) - ( DDR + PN ) )", "choosing": "( MLU / ( Max( MUC,RRSe ) + ( MUC / ( MUC + Max( MLU,CS ) ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5834835159480831}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - ( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.725294120473661}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( Max( CRS,( CRS + ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) ) - ( DDR / Const ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + CS ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( ( MUC * RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5636506473872093}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ) / PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,DS ) ,CS ) ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7169024879472663}, {"determining": "( Max( CRS,( ( ( MDR * FirstVNF_CPU ) / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( MUM / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.7446393762183235, "obj2": 0.15127345957143817}], "18": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,( MUC - ( Max( CS,CS ) * MUC ) ) ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe / MUC ) - MUM ),MUC ) / Min( RMSe ,( MUR + Min( MUR ,MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( ( ( AMS * ( AMS - FirstVNF_Mem ) ) / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,( Max( Const,AMS ) * CRS ) ),( BR / FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( RRSe / ( ( ( MUC - ( Max( MUR,MLU ) * MUC ) ) / RRSe ) - ( MUR / MUR ) ) ) ,Max( DS,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR / PN ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( CRS,( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( MLU / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452308}, {"determining": "( Max( ( ( ( ( Min( Max( AMS,FirstVNF_CPU ) ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ) ) / ARS ) / FirstVNF_RAM_Server ) / ( DDR / PN ) ) + CRS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Min( RMSe ,MUR ) - ( MUM - RMSe ) ) / ( Max( RMSe,( DS * RRSe ) ) + ( MUM * RMSe ) ) ) ,MLU ) )", "obj1": 0.594541910331384, "obj2": 0.3071180198184962}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) + ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( Max( FirstVNF_RAM,MRS ),( CRS + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.5009746588693957, "obj2": 0.43719317048839157}, {"determining": "( Max( CRS,( ( ( PN * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - AMS ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * RMSe ) + ( RRSe * Min( DS ,MUM ) ) ),Max( ( RMSe - ( ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( ( ( ( MUC - MUR ) - MUM ) + ( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.40727602099438515}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( FirstVNF_CPU_Server / ACS ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,MLU ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.5146198830409356, "obj2": 0.40583632374085815}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.5536062378167641, "obj2": 0.34594224739913765}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + MUC ) )", "obj1": 0.6413255360623782, "obj2": 0.2590830036408121}, {"determining": "( Max( CRS,( ( PN / ( CRS - FirstVNF_RAM ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) * PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ) ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUR * MUC ) - MUM ),CS ) / Min( RMSe ,Min( Min( MUR ,MLU ) ,MUR ) ) ) ) ),( RMSe - CS ) ) )", "obj1": 0.4600389863547758, "obj2": 0.48602618115773105}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / MDR ) - Max( ( Min( MDR ,AMS ) + ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( ( MUM + MUM ) ,Max( DS,( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.46778880240882525}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_CPU * Min( AMS ,MDR ) ) ) / Const ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( Max( MUM,Max( MLU,MUR ) ) / MUR ),( RMSe + ( MUR * Min( MLU ,RRSe ) ) ) ) - Min( MUC ,RMSe ) ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21083998915169072}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * RRS ) ) ) ) + ( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) - ( DDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( DS ,( MUM / Min( ( MUM / MUC ) ,( ( MUC + MLU ) - Max( RCSe,RCSe ) ) ) ) ) / ( MUM * ( Max( ( ( MUR * MUM ) / MUC ),MUM ) / ( CS - ( RCSe + ( MUC / DS ) ) ) ) ) ) + RMSe ) )", "obj1": 0.4171539961013645, "obj2": 0.549604934158603}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( RRS / PN ) ),( AMS * ( ACS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( PN / DDR ) )", "choosing": "Min( ( Min( ( RCSe * RMSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( MUC * CS ) )", "obj1": 0.46588693957115007, "obj2": 0.45820827608560155}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( RCSe + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.5614035087719298, "obj2": 0.3347570427638413}, {"determining": "( Max( CRS,( ( Max( MDR,FirstVNF_CPU ) / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) / PN ) )", "choosing": "Min( ( ( RMSe - RRSe ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( ( Min( MUR ,RMSe ) * Min( MLU ,RRSe ) ) + MUC ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.9337231968810916, "obj2": 0.03628795694887613}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6135266752479562}, {"determining": "( ( MRS + PN ) - ( ( MRS + ACS ) / Min( Max( MDR,FirstVNF_Mem_Server ) ,CRS ) ) )", "choosing": "Min( ( Min( ( RMSe / ( MUM * Max( RCSe,( MLU + Max( MUR,CS ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( PN + ( Max( ( RRS / FirstVNF_CPU_Server ),PN ) - MDR ) ) - Max( ( MDR / ( ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_RAM ) * ARS ) ),Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( MUM,Min( ( MUM + ( ( ( ( MUC * CS ) + RCSe ) - MUR ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.7660818713450293, "obj2": 0.13566497816075052}, {"determining": "( Max( MRS,( ( Const + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) - ( ( DDR + ( FirstVNF_CPU * ARS ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( ( ( ( MUC - Max( RRSe,MUR ) ) - ( Max( CS,MUC ) * ( DS + MUM ) ) ) + DS ) * MUC ) * RRSe ) ) ,( RRSe * MUM ) )", "obj1": 0.33723196881091616, "obj2": 0.6537492292554414}, {"determining": "( Max( CRS,( MDR + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,( MUR * ( RCSe / RMSe ) ) ) )", "obj1": 0.6179337231968811, "obj2": 0.28142169546058626}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * ( ARS / FirstVNF_RAM_Server ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR + ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( MUC + ( MUM * DS ) ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( MUR + Min( MUR ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3775912194347511}, {"determining": "( ( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / ( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( DS / ( RRSe * ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) ) ) ) ) )", "obj1": 0.6627680311890838, "obj2": 0.23398532215254234}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4346978557504873, "obj2": 0.5002660194572952}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( Max( ( ( RRS / ( ACS - FirstVNF_RAM_Server ) ) / FirstVNF_RAM ),( ( BR / ( ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUC * MLU ),( ( ( MUM / Max( CS,RCSe ) ) * Min( MLU ,RRSe ) ) + MUC ) ) / MUC ) ) )", "obj1": 0.6530214424951267, "obj2": 0.24381494324799954}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.5458089668615984, "obj2": 0.35772920960715915}, {"determining": "( Max( CRS,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / AMS ) ) + PN ) / PN ) )", "choosing": "Min( ( Min( ( Max( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.9571150097465887, "obj2": 0.02162876093639614}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + CS ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( ( MUC * RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5725453553066384}, {"determining": "( Max( CRS,Max( Const,FirstVNF_CPU_Server ) ) - ( MDR / PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,( ( MUR - MUR ) - CS ) ) ,CS ) ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.1582425713744226}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( Max( ( MRS * FirstVNF_RAM ),PN ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( Max( RMSe,RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / MDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - ( MDR / ARS ) )", "choosing": "( ( Max( CS,CS ) * MUC ) / ( ( Min( MUC ,MUR ) - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.7056530214424951, "obj2": 0.1919151077961196}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * ( RRSe / MUM ) ) ) ) ,MLU ) )", "obj1": 0.6237816764132553, "obj2": 0.26675269651100464}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( CS - Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19882159098678162}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3152872312783554}, {"determining": "( ( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.8401559454191033, "obj2": 0.07660406432777137}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6178845136086714}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - ( MDR / ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( MUC ,MUR ) - Min( RRSe ,MUC ) ) + ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.594527205022538}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( DS * Min( MLU ,RRSe ) ),Min( ( MUM + ( Min( MUR ,( MLU * MUC ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.6062378167641326, "obj2": 0.2890831736314821}, {"determining": "( Max( ( ( DDR * ( FirstVNF_CPU_Server / AMS ) ) / FirstVNF_RAM ),( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * ( MUM - MLU ) ) ,( RRSe * CS ) ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.6939571150097466, "obj2": 0.20303980816416814}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( CRS + MDR ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe / CS ),Max( MUM,( ( CS + MLU ) / ( ( RMSe / ( ( DS - RMSe ) + RMSe ) ) / Min( RMSe ,( Min( MLU ,MUR ) + MUR ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.49803467615353786}, {"determining": "( Max( CRS,( ( PN / MDR ) + ( Max( ( PN / ( ( MRS * FirstVNF_Mem_Server ) / FirstVNF_RAM ) ),( PN / MDR ) ) - ( DDR / PN ) ) ) ) - ( FirstVNF_RAM / MDR ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( Max( RMSe,DS ),( ( RCSe / RRSe ) / CS ) ) ) ,( MUM / ( MUM - Max( MUR,RRSe ) ) ) )", "obj1": 0.8304093567251462, "obj2": 0.08288827160868674}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) * Min( MLU ,Min( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ,MUM ) ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.24381494324799954}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( ( DDR * AMS ) - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( DS - MUM ) ) / ( MUR * ( MLU * CS ) ) ) ,MLU ) )", "obj1": 0.35282651072124754, "obj2": 0.626282863351824}, {"determining": "( Max( CRS,( ( PN / ( BR + MRS ) ) + CRS ) ) - ( DDR + PN ) )", "choosing": "( MLU / ( Max( MUC,RRSe ) + ( MUC / ( MUC + Max( MLU,CS ) ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5834835159480831}, {"determining": "( ( ( Max( ( FirstVNF_Mem + DDR ),( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ) - ( Min( Max( FirstVNF_Mem_Server,MDR ) ,MDR ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MLU * MUR ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( ( Max( MLU,( RRSe * Max( MUR,MLU ) ) ) / RCSe ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8460038986354775, "obj2": 0.07591705392898442}, {"determining": "( Max( ( ( ( ARS * Max( ( ( PN - MDR ) + ACS ),CRS ) ) / ( FirstVNF_Mem_Server * MDR ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / Min( DDR ,ACS ) ) )", "choosing": "( ( ( MUC - Min( RRSe ,MUC ) ) + RMSe ) / ( Max( ( RMSe + MUC ),( MUM - Min( RMSe ,MUR ) ) ) / MUM ) )", "obj1": 0.3235867446393762, "obj2": 0.6716018753663467}, {"determining": "( ( ( PN + ( Max( ( MRS * ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - RRSe ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( RMSe ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10184601530290355}, {"determining": "( Max( CRS,( ( PN / MDR ) + ( ACS / PN ) ) ) - ( MDR - PN ) )", "choosing": "( Max( Min( MLU ,MUC ),( RMSe + RMSe ) ) / ( Min( RRSe ,RCSe ) / Min( CS ,MLU ) ) )", "obj1": 0.6803118908382066, "obj2": 0.2214671514683617}, {"determining": "( Max( CRS,( ( Max( ( Min( Min( FirstVNF_CPU_Server ,MRS ) ,FirstVNF_CPU_Server ) * FirstVNF_Mem_Server ),( FirstVNF_CPU + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( MLU - MUC ) ,RMSe ) ,( ( MUC - MLU ) * CS ) )", "obj1": 0.8148148148148148, "obj2": 0.09830592406688646}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( RCSe / RMSe ),( DS / ( MUM - MLU ) ) ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06959651411658427}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ( FirstVNF_CPU_Server / AMS ) * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server + ( CRS - FirstVNF_RAM_Server ) ) + ( Min( ARS ,MDR ) + ( ( AMS - AMS ) * ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) / PN ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * RRSe ) - ( Max( CS,CS ) * MUC ) ) ,( RRSe + CS ) )", "obj1": 0.5750487329434698, "obj2": 0.31890183332193917}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * ( ACS / MRS ) ) ) ) - ( Min( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) ,( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * ( CS - CS ) ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.5458089668615984, "obj2": 0.35772920960715915}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * ( RRSe / MUM ) ) ) ) ,MLU ) )", "obj1": 0.4074074074074074, "obj2": 0.5536228176325625}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6433623390813604}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),( AMS * ( Const - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( PN / MDR ) )", "choosing": "Max( Max( RCSe,DS ),Min( ( RMSe - ( ( RMSe * MLU ) / ( DS - CS ) ) ) ,Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.37476782776157996}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.8245614035087719, "obj2": 0.08543195717773432}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( AMS * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( Max( MUC,Max( ( MUR * MLU ),( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( DS * Min( MLU ,RRSe ) ) ) ) ) ,( RRSe * CS ) )", "obj1": 0.9668615984405458, "obj2": 0.017169227614123036}, {"determining": "( Max( ( Max( ( Max( FirstVNF_RAM,Min( DDR ,AMS ) ) - FirstVNF_CPU ),( BR + AMS ) ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( Min( ( DS - MUR ) ,( ( ( CS + CS ) * ( MUC - MLU ) ) + MUM ) ) * CS ) * MUR ) - RRSe ) ,( RRSe * CS ) )", "obj1": 0.7290448343079922, "obj2": 0.16503740870839786}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4444444444444444, "obj2": 0.49803467615353786}, {"determining": "( Max( CRS,( ( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) / ( ( MDR * ( CRS / ( MRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ) + CRS ) ) - ( PN / DDR ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6914181316289324}, {"determining": "( Max( FirstVNF_Mem_Server,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) + ( RRS / ( AMS * ( AMS - FirstVNF_Mem ) ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( DS * Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( ( RMSe * MLU ) / CS ) ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.5730994152046783, "obj2": 0.3310086246231451}, {"determining": "( Max( CRS,( ( PN / ( ( Min( ( BR + FirstVNF_RAM ) ,( MDR / FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server / ARS ) ) / PN ) ) + CRS ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Min( RMSe ,Max( Max( ( MUC / DS ),MUM ),RCSe ) ) - ( RMSe - MUM ) ) / ( RMSe - CS ) ) ,MLU ) )", "obj1": 0.3313840155945419, "obj2": 0.6625634346141842}, {"determining": "( ( MDR / FirstVNF_CPU ) - Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe - MUC ) - MUM ),MUC ) / Min( Min( MUR ,Min( RRSe ,DS ) ) ,( MUR + Min( MUR ,MLU ) ) ) ) ) ) ) )", "obj1": 0.7426900584795322, "obj2": 0.15439413092560142}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_CPU + ARS ) ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( RRSe * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.37037037037037035, "obj2": 0.5960755963735846}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( CRS + ( FirstVNF_RAM / Max( RRS,( AMS * ( Max( ARS,ARS ) - FirstVNF_Mem ) ) ) ) ) ) - ( DDR / Const ) )", "choosing": "( ( CS / MUR ) / ( ( ( MUC * RCSe ) / Max( Max( MUC,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014344710136515016}, {"determining": "( Max( ( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) / Max( ARS,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( MDR * FirstVNF_RAM ) ) ) ),Min( Max( FirstVNF_Mem_Server,BR ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( MLU + Min( ( RRSe - MUM ) ,( RRSe - Min( Min( CS ,RMSe ) ,Min( ( RMSe * RMSe ) ,DS ) ) ) ) ) - CS )", "obj1": 0.30214424951267055, "obj2": 0.7009364072216259}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( ( ( PN / MDR ) + ACS ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Min( MLU ,CS ) ) )", "obj1": 0.43079922027290446, "obj2": 0.509572010625843}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8576998050682261, "obj2": 0.06773933354160142}, {"determining": "( Max( FirstVNF_Mem_Server,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * ( CS + ( MUC * MLU ) ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.47368421052631576, "obj2": 0.44612453252540624}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) * FirstVNF_CPU_Server ) ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( ( Min( ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,Min( Max( CS,DS ) ,( RRSe * CS ) ) ) / CS ) / Min( MUC ,Max( ( RCSe / RMSe ),( DS / ( MUM - MLU ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6909652494014725}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / ( Max( ( Max( BR,PN ) - MDR ),( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( MUM * RMSe ) ) ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.48602618115773105}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4269005847953216, "obj2": 0.5193052948276085}, {"determining": "( Max( FirstVNF_Mem_Server,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) + ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( DS * Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.571150097465887, "obj2": 0.3327732562073471}, {"determining": "( ( FirstVNF_Mem_Server / MRS ) - ( ( ( ( FirstVNF_RAM + BR ) * ( MDR / FirstVNF_RAM_Server ) ) - ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,( MUM / MUR ) )", "obj1": 0.7134502923976608, "obj2": 0.18146005617920152}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4873294346978557, "obj2": 0.43816231875583056}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( Max( CRS,( ( ACS / ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / ( Min( MRS ,( CRS - FirstVNF_RAM ) ) - DDR ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( MUC + MUM ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( ( ( Min( MUR ,MUC ) + MUM ) + RMSe ) ,Max( CS,DS ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.7251461988304093, "obj2": 0.17087623572934402}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( ( ( ( ARS * ( FirstVNF_CPU_Server + ( ( DDR + BR ) / ( ARS / AMS ) ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + ARS ),CRS ) - ( PN / ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "Max( Max( RCSe,Min( RMSe ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( ( CS + MLU ) / ( ( Max( RMSe,MUC ) / Max( DS,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.676608428348071}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.6705653021442495, "obj2": 0.22274941966040993}, {"determining": "( Max( CRS,( ( ACS / FirstVNF_Mem_Server ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,( DS * RMSe ) ),Max( ( RMSe - CS ),Max( ( ( MLU * MUM ) * Min( RRSe ,MUM ) ),( ( CS + MLU ) / ( Max( ( ( RMSe * MUC ) - MUM ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( DS - MLU ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.4152046783625731, "obj2": 0.5505596461229892}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( ( PN + PN ) - Max( Min( Max( FirstVNF_Mem_Server,DDR ) ,MDR ),( Min( AMS ,BR ) / Max( Min( PN ,MRS ),( PN + ARS ) ) ) ) )", "choosing": "Min( ( DS * ( RRSe - Max( ( MUR / MLU ),DS ) ) ) ,Min( CS ,RRSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7162654400249147}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.6062378167641326, "obj2": 0.2890831736314821}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( RMSe - CS ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5707459693938283}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),MUC ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( MUR - MUR ) * MLU ) )", "obj1": 0.4015594541910331, "obj2": 0.5560850367260571}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Min( ( Max( MUR,Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.8752436647173489, "obj2": 0.058993522176815846}, {"determining": "( Max( CRS,( ( Max( RRS,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "Min( ( Max( MLU,( ( MUC * RCSe ) / MUC ) ) + DS ) ,( ( DS * Min( MLU ,RRSe ) ) + CS ) )", "obj1": 0.8206627680311891, "obj2": 0.09692798564991194}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ARS ) / ( DDR / PN ) ),Min( ( RRS - ARS ) ,CRS ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.47368421052631576, "obj2": 0.44612453252540624}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( Max( CRS,( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM + ( RCSe / RMSe ) ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),( DS / MUC ) ) * CS ) )", "obj1": 0.34307992202729043, "obj2": 0.6404121782962681}, {"determining": "( ( PN + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.6101364522417154, "obj2": 0.2872808331075747}], "19": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( Const / MDR ) - Max( ( PN * ARS ),( ( PN / ( ( ( DDR / FirstVNF_CPU ) - ( ARS + FirstVNF_RAM_Server ) ) - CRS ) ) + ACS ) ) ) - ( Min( ARS ,BR ) + FirstVNF_RAM ) )", "choosing": "( ( ( Max( CS,MUM ) + ( DS - MLU ) ) * Max( ( ( ( MUR * ( RCSe / RMSe ) ) + ( ( Min( MLU ,RRSe ) * DS ) + MUC ) ) - RRSe ),RRSe ) ) / Max( ( ( CS / CS ) * Max( MLU,DS ) ),( ( Min( MLU ,Min( ( ( DS + MUC ) * MLU ) ,RMSe ) ) * ( RCSe * DS ) ) + ( CS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,( MUC - ( Max( CS,CS ) * MUC ) ) ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe / MUC ) - MUM ),MUC ) / Min( RMSe ,( MUR + Min( MUR ,MLU ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_CPU + ARS ),( FirstVNF_Mem_Server / ( PN - ( ACS * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + ( Max( MUM,RMSe ) - RCSe ) ) + ( Max( ( MUM - ( RMSe * MUC ) ),CS ) / Min( RMSe ,( Min( MUR ,MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( ACS - Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU ) ) - Max( DDR,PN ) )", "choosing": "Min( ( Min( ( ( DS * Min( MLU ,RRSe ) ) - Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / MUC ) ),Max( DS,DS ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( ( RRSe + MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4873294346978557, "obj2": 0.43477443137055444}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4100015198359218}, {"determining": "( Max( CRS,( ( Min( Const ,Min( ARS ,FirstVNF_RAM ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),( RMSe + ( CS + MUM ) ) ) + Min( MUM ,( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5438639821903234}, {"determining": "( ( PN / FirstVNF_CPU_Server ) - ( PN + MDR ) )", "choosing": "( ( ( RCSe + ( RMSe + ( MUR - RCSe ) ) ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,Max( DS,( RCSe * RRSe ) ) ) ,CS ) ) ) ) - MUC )", "obj1": 0.6530214424951267, "obj2": 0.2429098481072742}, {"determining": "( ( ( PN + ( Max( ( MRS * ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - RRSe ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( RMSe ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10184601530290355}, {"determining": "( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) - Max( Min( Min( Max( Const,FirstVNF_CPU_Server ) ,Max( RRS,( FirstVNF_CPU_Server / ACS ) ) ) ,MDR ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - MUM ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,MLU ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.5146198830409356, "obj2": 0.40583632374085815}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( DDR * ( FirstVNF_CPU_Server / AMS ) ) ) ) )", "choosing": "( ( ( CS - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * ( MUM - MLU ) ) ,( RRSe * CS ) ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( RMSe - CS ) ) ,MLU ) )", "obj1": 0.4522417153996101, "obj2": 0.49233374801468804}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / ( MUR + Min( MUR ,MLU ) ) ) ,RRSe ) )", "obj1": 0.7056530214424951, "obj2": 0.1888422665249845}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / MDR ) - Max( ( Min( MDR ,AMS ) + ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( ( MUM + MUM ) ,Max( DS,( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.47465532740654826}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( CRS,( ( PN / ( BR + MRS ) ) + CRS ) ) - ( DDR + PN ) )", "choosing": "( MLU / ( Max( MUC,RRSe ) + ( MUC / ( MUC + Max( MLU,CS ) ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5834835159480831}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.5536062378167641, "obj2": 0.34594224739913765}, {"determining": "( ( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * ACS ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.8050682261208577, "obj2": 0.09706349821608108}, {"determining": "( ( MDR / FirstVNF_CPU ) - Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( RMSe - MUC ) - MUM ),MUC ) / Min( Min( MUR ,Min( RRSe ,DS ) ) ,( MUR + Min( MUR ,MLU ) ) ) ) ) ) ) )", "obj1": 0.7426900584795322, "obj2": 0.15439413092560142}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6135266752479562}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ARS ) / ( DDR / PN ) ),Min( ( RRS - ARS ) ,CRS ) ) ) ) + MDR ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( ( DS - MUR ) * MLU ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.6413255360623782, "obj2": 0.2540936957161417}, {"determining": "( ( MRS + PN ) - ( ( MRS + ACS ) / Min( Max( MDR,FirstVNF_Mem_Server ) ,CRS ) ) )", "choosing": "Min( ( Min( ( RMSe / ( MUM * Max( RCSe,( MLU + Max( MUR,CS ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( Max( CRS,( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( MUC ,MUR ) - Min( RRSe ,MUC ) ) + ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452308}, {"determining": "( ( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) / ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) ) ,( MUR * ( RCSe / RMSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( ( PN + ( Max( ( RRS / FirstVNF_CPU_Server ),PN ) - MDR ) ) - Max( ( MDR / ( ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_RAM ) * ARS ) ),Min( MDR ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( MUM,Min( ( MUM + ( ( ( ( MUC * CS ) + RCSe ) - MUR ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.7660818713450293, "obj2": 0.13566497816075052}, {"determining": "( Max( CRS,( ( Max( RRS,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "Min( ( Max( MLU,( ( MUC * RCSe ) / MUC ) ) + DS ) ,( ( DS * Min( MLU ,RRSe ) ) + CS ) )", "obj1": 0.8206627680311891, "obj2": 0.09692798564991194}, {"determining": "( Max( MRS,( ( Const + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) - ( ( DDR + ( FirstVNF_CPU * ARS ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( ( ( ( MUC - Max( RRSe,MUR ) ) - ( Max( CS,MUC ) * ( DS + MUM ) ) ) + DS ) * MUC ) * RRSe ) ) ,( RRSe * MUM ) )", "obj1": 0.33723196881091616, "obj2": 0.6537492292554414}, {"determining": "( Max( CRS,( ( ( DDR + FirstVNF_RAM_Server ) + MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUR * CS ) ,( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,MUR ) ) ) ) - RRSe ) ,RMSe ) / Max( ( Min( MUM ,RRSe ) + MUR ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5082107479829299}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( Min( Const ,FirstVNF_RAM ) * FirstVNF_RAM_Server ),( AMS * ( Const - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( PN / MDR ) )", "choosing": "Max( Max( RCSe,DS ),Min( ( RMSe - ( ( RMSe * MLU ) / ( DS - CS ) ) ) ,Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.37476782776157996}, {"determining": "( ( PN - MDR ) - AMS )", "choosing": "( ( ( MUR * MLU ) / CS ) / ( Min( Min( DS ,( MUR - MUM ) ) ,MUR ) + MUR ) )", "obj1": 0.8693957115009746, "obj2": 0.06176357154385659}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.42300194931773877, "obj2": 0.5153343389104874}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( AMS,Min( ( RRS - ARS ) ,CRS ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( MUR,Max( MUR,RRSe ) ) - RRSe ) ,Min( RMSe ,MUR ) ) / Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) ) ,( RRSe * CS ) )", "obj1": 0.9824561403508771, "obj2": 0.008622592966003591}, {"determining": "( Max( ARS,FirstVNF_RAM ) - ( DDR / PN ) )", "choosing": "Min( Max( RRSe,CS ) ,( RRSe * MLU ) )", "obj1": 0.9902534113060428, "obj2": 0.0047234186254924496}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.46563629378017823}, {"determining": "( ( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / ( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( DS / ( RRSe * ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) ) ) ) ) )", "obj1": 0.6627680311890838, "obj2": 0.23398532215254234}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( Max( CRS,( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - MUM ) ,CS ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.5925925925925926, "obj2": 0.30199601913092}, {"determining": "( Max( CRS,( ( Min( RRS ,( AMS + AMS ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) * ( DS * RMSe ) ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.543859649122807, "obj2": 0.35863037986911295}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( RMSe - CS ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.38791423001949316, "obj2": 0.571503207311347}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.39766081871345027, "obj2": 0.5593852683079361}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( MDR / PN ) / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + ( MUC + ( DS * Min( MLU ,RRSe ) ) ) )", "obj1": 0.9317738791423001, "obj2": 0.03330460188814941}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( MDR / Const ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + Min( ( DS * ( RRSe - Max( ( MUR / MLU ),DS ) ) ) ,Min( CS ,RRSe ) ) ) / Min( ( Max( ( RMSe - CS ),( RMSe + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.6023391812865497, "obj2": 0.29726208248170466}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Max( Max( RCSe,Min( RMSe ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( ( CS + MLU ) / ( ( Max( RMSe,MUC ) / Max( DS,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.8752436647173489, "obj2": 0.058993522176815846}, {"determining": "( Max( CRS,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Const ) ) ) - ( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / AMS ) ) + PN ) / PN ) )", "choosing": "Min( ( Min( ( Max( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - ( ( ( MUR * MLU ) / CS ) * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.9473684210526315, "obj2": 0.026113278841393184}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21637787046094603}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_CPU * Min( AMS ,MDR ) ) ) / Const ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( Max( MUM,Max( MLU,MUR ) ) / MUR ),( RMSe + ( MUR * Min( MLU ,RRSe ) ) ) ) - Min( MUC ,RMSe ) ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21083998915169072}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,MUR ) / MUC ) ) )", "obj1": 0.5224171539961013, "obj2": 0.3794205865071033}, {"determining": "( ( CRS - ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / FirstVNF_Mem ) / ACS ) + ( FirstVNF_CPU + BR ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( ( MUC - RMSe ) * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.31189083820662766, "obj2": 0.6864821185117213}, {"determining": "( Max( CRS,( ( Max( CRS,( ( MDR / MDR ) + ( MDR * FirstVNF_RAM ) ) ) - ( MDR / PN ) ) + ACS ) ) - ( ( MRS * FirstVNF_RAM ) / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( DS * ( Min( MLU ,MUM ) * RRSe ) ) + RMSe ) ) / ( Max( CS,MUM ) / ( MLU / MUC ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7066726004136024}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.5906432748538012, "obj2": 0.3104820266746089}, {"determining": "( ( Max( CRS,( ( PN / ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - MUM ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.8440545808966862, "obj2": 0.07468846056276401}, {"determining": "( Max( ( ( ( ARS * Max( ( ( PN - MDR ) + ACS ),CRS ) ) / ( FirstVNF_Mem_Server * MDR ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / Min( DDR ,ACS ) ) )", "choosing": "( ( ( MUC - Min( RRSe ,MUC ) ) + RMSe ) / ( Max( ( RMSe + MUC ),( MUM - Min( RMSe ,MUR ) ) ) / MUM ) )", "obj1": 0.3235867446393762, "obj2": 0.6716018753663467}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8576998050682261, "obj2": 0.06773933354160142}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4346978557504873, "obj2": 0.5002660194572952}, {"determining": "( Max( CRS,( MDR + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.6198830409356725, "obj2": 0.2804108450964818}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * ( RRSe / MUM ) ) ) ) ,MLU ) )", "obj1": 0.6257309941520468, "obj2": 0.2658515262490509}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3152872312783554}, {"determining": "( Max( CRS,( ( PN / ( Min( MDR ,AMS ) + ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( MUM * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6374269005847953, "obj2": 0.2601002368689085}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - Max( CRS,( ( PN / MDR ) + ACS ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( MUC ,MUR ) - Min( RRSe ,MUC ) ) + ( RMSe - ( RCSe + ( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( MLU / MUC ) ) ) * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.4433376228859988}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * ( RRSe / MUM ) ) ) ) ,MLU ) )", "obj1": 0.4074074074074074, "obj2": 0.5536228176325625}, {"determining": "( Max( CRS,( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM + ( RCSe / RMSe ) ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),( DS / MUC ) ) * CS ) )", "obj1": 0.34307992202729043, "obj2": 0.6404121782962681}, {"determining": "( Max( CRS,( ( ( PN * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - AMS ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * RMSe ) + ( RRSe * Min( DS ,MUM ) ) ),Max( ( RMSe - ( ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( ( ( ( MUC - MUR ) - MUM ) + ( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.40727602099438515}, {"determining": "( Max( ( ( ( ARS * ( FirstVNF_CPU_Server + ( Min( MDR ,ARS ) / ( ARS / AMS ) ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( PN / ( FirstVNF_Mem_Server * AMS ) ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( ( CS + MLU ) / ( ( MLU / Max( MUR,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7219895395735028}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( Min( MUC ,Max( ( MLU + CS ),( DS / ( MUM + ( RCSe / RMSe ) ) ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),( DS / MUC ) ) * CS ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.5477582846003899, "obj2": 0.35684913619123293}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.6705653021442495, "obj2": 0.22274941966040993}, {"determining": "( Max( CRS,( ( PN / ( Max( DDR,( BR + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( RCSe + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) - RMSe ) )", "obj1": 0.5594541910331384, "obj2": 0.3374607260955741}, {"determining": "( Max( CRS,Max( Const,FirstVNF_CPU_Server ) ) - ( ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) - ( Max( BR,PN ) - MDR ) ) + PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,Min( MLU ,Min( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ,MUM ) ) ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,( ( MUR - MUR ) - CS ) ) ,CS ) ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7154570420989245}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * BR ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) + CRS ),Min( CRS ,ACS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( ( Max( ( MUC * Min( CS ,( DS - MUR ) ) ),Min( Max( Min( MUR ,RMSe ),Min( MUR ,RRSe ) ) ,MUR ) ) + ( DS * Min( MLU ,RRSe ) ) ) - MUC ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ( FirstVNF_CPU_Server / AMS ) * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server + ( CRS - FirstVNF_RAM_Server ) ) + ( Min( ARS ,MDR ) + ( ( AMS - AMS ) * ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) / PN ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * RRSe ) - ( Max( CS,CS ) * MUC ) ) ,( RRSe + CS ) )", "obj1": 0.5750487329434698, "obj2": 0.31890183332193917}, {"determining": "( Max( FirstVNF_Mem_Server,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) + ( RRS / ( AMS * ( AMS - FirstVNF_Mem ) ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( DS * Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( ( RMSe * MLU ) / CS ) ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.5730994152046783, "obj2": 0.3310086246231451}, {"determining": "( Max( ( ( ( ARS * Max( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( RMSe - DS ),Max( MUM,( ( CS + MLU ) / ( Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) / Max( ( ( RMSe * MUC ) - MUM ),RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.676608428348071}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / MDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( DDR / PN ) ) / MDR ) - ( MDR / ARS ) )", "choosing": "( ( Max( CS,( Min( MUM ,MLU ) + MUR ) ) * MUC ) / ( ( Min( MUC ,MUR ) - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.013360036774954162}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( MUC,MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / ( MUR * MLU ) ) ) )", "obj1": 0.8245614035087719, "obj2": 0.08543195717773432}, {"determining": "( Max( CRS,( ( PN / ( CRS - FirstVNF_RAM ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6271727070258472}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - ( MDR / ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( MUC ,MUR ) - Min( RRSe ,MUC ) ) + ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.594527205022538}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * MDR ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - Min( RRSe ,MUC ) ) + RMSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6656918427775386}, {"determining": "( Max( CRS,( ( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) / ( ( MDR * ( CRS / ( MRS + FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM ) ) + CRS ) ) - ( PN / DDR ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3060428849902534, "obj2": 0.6914181316289324}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * ( ARS / FirstVNF_RAM_Server ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR + ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( MUC + ( MUM * DS ) ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( MUR + Min( MUR ,RRSe ) ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3775912194347511}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.4697855750487329, "obj2": 0.45766911965057006}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / Min( PN ,FirstVNF_RAM_Server ) ),( ( BR / ( ( ( ( MDR * FirstVNF_RAM ) + FirstVNF_RAM ) - ( CRS - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / Max( Max( ( ( CS + ( MLU * MUR ) ) / RRSe ),MUC ),( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.6666666666666666, "obj2": 0.2304824554632125}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) - ( Max( BR,FirstVNF_CPU_Server ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( ( RRSe - MLU ) * Min( MLU ,Min( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17630821438075217}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( RRSe - Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),MUC ) ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),( MUC / MUR ) ) ) ,( ( MUR - MUR ) * MLU ) )", "obj1": 0.4015594541910331, "obj2": 0.5560850367260571}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) ) )", "obj1": 0.6237816764132553, "obj2": 0.26675269651100464}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ARS ) / ( DDR / PN ) ),Min( ( RRS - ARS ) ,FirstVNF_RAM ) ) ) ) + Min( BR ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( ( CS + MUC ) / ( ( ( MUR + Min( RCSe ,CS ) ) / CS ) + MUM ) ) ) ) )", "obj1": 0.47173489278752434, "obj2": 0.4479008811757709}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( RMSe - CS ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5707459693938283}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / PN ) + ACS ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,MUM )", "obj1": 0.9376218323586745, "obj2": 0.031239630888632137}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( PN / ( ( Min( ( BR + FirstVNF_RAM ) ,( MDR / FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem_Server / ARS ) ) / PN ) ) + CRS ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RMSe,MUM ) + Min( ( ( Min( RMSe ,Max( Max( ( MUC / DS ),MUM ),RCSe ) ) - ( RMSe - MUM ) ) / ( RMSe - CS ) ) ,MLU ) )", "obj1": 0.3313840155945419, "obj2": 0.6625634346141842}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( ( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( ( ( RMSe * MUC ) - MUM ) / MUC ) ) )", "obj1": 0.4775828460038986, "obj2": 0.44520709206394016}, {"determining": "( Max( CRS,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / AMS ) ) + PN ) / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( MLU / MUC ) ) )", "obj1": 0.9571150097465887, "obj2": 0.02162876093639614}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6433623390813604}, {"determining": "( Max( CRS,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) ) - ( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / AMS ) ) + PN ) / PN ) )", "choosing": "Min( ( Min( ( Max( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.9571150097465887, "obj2": 0.02162876093639614}, {"determining": "( Max( CRS,( AMS + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / RCSe ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9142300194931774, "obj2": 0.041666681325248686}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( CS - Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19882159098678162}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Min( ( Max( MUR,Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.8752436647173489, "obj2": 0.058993522176815846}], "20": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( FirstVNF_CPU * Max( RRS,( RRS * ( AMS - FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU_Server - ( RRS - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( ( AMS * RRS ) - Const ) ) ) ) ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( ( MUM * DS ) / RMSe ),( DS * ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const / MDR ) - Max( ( PN * ARS ),( ( PN / ( ( ( DDR / FirstVNF_CPU ) - ( ARS + FirstVNF_RAM_Server ) ) - CRS ) ) + ACS ) ) ) - ( Min( ARS ,BR ) + FirstVNF_RAM ) )", "choosing": "( ( ( Max( CS,MUM ) + ( DS - MLU ) ) * Max( ( ( ( MUR * ( RCSe / RMSe ) ) + ( ( Min( MLU ,RRSe ) * DS ) + MUC ) ) - RRSe ),RRSe ) ) / Max( ( ( CS / CS ) * Max( MLU,DS ) ),( ( Min( MLU ,Min( ( ( DS + MUC ) * MLU ) ,RMSe ) ) * ( RCSe * DS ) ) + ( CS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( BR / PN ) )", "choosing": "Min( ( ( RRSe - MUM ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( ACS - Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU ) ) - Max( DDR,PN ) )", "choosing": "Min( ( Min( ( ( DS * Min( MLU ,RRSe ) ) - Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / MUC ) ),Max( DS,DS ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( ( RRSe + MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4873294346978557, "obj2": 0.43477443137055444}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) )", "obj1": 0.44834307992202727, "obj2": 0.48431139780227145}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * BR ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) ) + CRS ),Min( CRS ,ACS ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( ( Max( ( MUC * Min( CS ,( DS - MUR ) ) ),Min( Max( Min( MUR ,RMSe ),Min( MUR ,RRSe ) ) ,MUR ) ) + ( DS * Min( MLU ,RRSe ) ) ) - MUC ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( CS - ( Min( ( RRSe - MLU ) ,RMSe ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,( ( MUR - MUR ) - CS ) ) ,CS ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.40448553486020433}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6135266752479562}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * ( ( ( CRS * ACS ) / ( DDR / PN ) ) / ( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( Min( CS ,MLU ) - CS ) + MUR ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( Max( RRSe,MUC ) + ( Max( ( RRSe / MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.36589322317631734}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.5165692007797271, "obj2": 0.38417668654774456}, {"determining": "( ( Max( CRS,( ( PN / ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - MUM ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.8440545808966862, "obj2": 0.07468846056276401}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6271727070258472}, {"determining": "( Max( CRS,( ( ( MRS / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - MUM ) ,CS ) / MLU ) ) - CS ) )", "obj1": 0.7290448343079922, "obj2": 0.16503740870839786}, {"determining": "( Max( CRS,( ( PN / ( ( PN * MRS ) * FirstVNF_CPU ) ) + ACS ) ) - ( PN / PN ) )", "choosing": "( ( ( RCSe / ( Max( Max( MUM,Max( RCSe,( RCSe * MLU ) ) ),( ( ( CS / RRSe ) + MUC ) + ( ( CS - RRSe ) - RRSe ) ) ) + MUR ) ) / CS ) / ( Max( CS,CS ) / Min( ( Max( ( RMSe / CS ),( RMSe + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.34584435456750307}, {"determining": "( Max( CRS,( ( Max( RRS,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "Min( ( Max( MLU,( ( MUC * RCSe ) / MUC ) ) + DS ) ,( ( DS * Min( MLU ,RRSe ) ) + CS ) )", "obj1": 0.8206627680311891, "obj2": 0.09692798564991194}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / PN ) ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.8245614035087719, "obj2": 0.08543195717773432}, {"determining": "( ( PN / FirstVNF_CPU_Server ) - ( PN + MDR ) )", "choosing": "( ( ( RCSe + ( RMSe + ( MUR - RCSe ) ) ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,Max( DS,( RCSe * RRSe ) ) ) ,CS ) ) ) ) - MUC )", "obj1": 0.6530214424951267, "obj2": 0.2429098481072742}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server + Const ) / ( Max( RRS,FirstVNF_Mem ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU + CS ) / Min( ( ( CS * DS ) - ( MLU / RMSe ) ) ,Min( MUR ,RMSe ) ) ) / ( ( RCSe / RRSe ) / CS ) )", "obj1": 0.37816764132553604, "obj2": 0.5854070104227129}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4100015198359218}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,MUR ) / MUC ) ) )", "obj1": 0.5224171539961013, "obj2": 0.3794205865071033}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( CS - Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19882159098678162}, {"determining": "( Max( ( ( ( ARS * Max( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( RMSe - DS ),Max( MUM,( ( CS + MLU ) / ( Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) / Max( ( ( RMSe * MUC ) - MUM ),RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.676608428348071}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( AMS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RMSe ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.7894736842105263, "obj2": 0.11192359715829547}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.5847953216374269, "obj2": 0.3152872312783554}, {"determining": "( Max( ( ( ( ARS * Max( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( RMSe - DS ),Max( MUM,( ( CS + MLU ) / ( Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) / Max( ( ( RMSe * MUC ) - MUM ),RMSe ) ) ) ) ) )", "obj1": 0.3313840155945419, "obj2": 0.6567815190313121}, {"determining": "( Max( CRS,( ( PN / ( Max( DDR,( BR + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( RCSe + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) - RMSe ) )", "obj1": 0.5633528265107213, "obj2": 0.3338671990898181}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - Max( CRS,( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / FirstVNF_Mem ) / ACS ) + ACS ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,Min( MLU ,RRSe ) ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6471734892787524, "obj2": 0.25353814478442155}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_CPU * Min( AMS ,MDR ) ) ) / Const ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( Max( MUM,Max( MLU,MUR ) ) / MUR ),( RMSe + ( MUR * Min( MLU ,RRSe ) ) ) ) - Min( MUC ,RMSe ) ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21083998915169072}, {"determining": "( ( DDR / PN ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.746588693957115, "obj2": 0.14747174621472836}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ARS ) / ( DDR / PN ) ),Min( ( RRS - ARS ) ,FirstVNF_RAM ) ) ) ) + Min( BR ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ) ) - ( ( ( MDR / PN ) - Max( CRS,( ( PN / ( CRS - FirstVNF_RAM ) ) + ACS ) ) ) - ( DDR / ( Const / ARS ) ) ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( ( ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) + MUC ) / ( ( ( MUR + Min( RCSe ,CS ) ) / CS ) + MUM ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.7008642841941273}, {"determining": "( Max( CRS,( ( Max( CRS,( ( MDR / MDR ) + ( MDR * FirstVNF_RAM ) ) ) - ( MDR / PN ) ) + ACS ) ) - ( ( MRS * FirstVNF_RAM ) / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( DS * ( Min( MLU ,MUM ) * RRSe ) ) + RMSe ) ) / ( Max( CS,MUM ) / ( MLU / MUC ) ) )", "obj1": 0.2962962962962963, "obj2": 0.7066726004136024}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( ( FirstVNF_Mem / ( ( FirstVNF_CPU * PN ) + ( FirstVNF_CPU_Server / AMS ) ) ) / PN ) )", "choosing": "( Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( ( MUM + RCSe ) ,Max( DS,( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) / ( DS + DS ) )", "obj1": 0.4346978557504873, "obj2": 0.5002660194572952}, {"determining": "( Max( CRS,( ( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( RRSe,( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6120857699805068, "obj2": 0.29478833000834354}, {"determining": "( Max( MRS,( ( Const + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) - ( ( DDR + ( FirstVNF_CPU * ARS ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( ( ( ( MUC - Max( RRSe,MUR ) ) - ( Max( CS,MUC ) * ( DS + MUM ) ) ) + DS ) * MUC ) * RRSe ) ) ,( RRSe * MUM ) )", "obj1": 0.33723196881091616, "obj2": 0.6537492292554414}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.5906432748538012, "obj2": 0.3104820266746089}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8576998050682261, "obj2": 0.06773933354160142}, {"determining": "( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5323790066626501}, {"determining": "( ( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * ACS ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - RRSe ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( RMSe ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.8050682261208577, "obj2": 0.09706349821608108}, {"determining": "( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.40350877192982454, "obj2": 0.5470561053347772}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4411102218166924}, {"determining": "( ( ( PN + ( Max( ( MRS * ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10184601530290355}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4346978557504873, "obj2": 0.5002660194572952}, {"determining": "( Max( RRS,( ( ( FirstVNF_CPU + ( RRS - ( FirstVNF_Mem / MDR ) ) ) / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( PN / MDR ) )", "choosing": "Max( Min( RCSe ,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5752313570860267}, {"determining": "( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5417898869848998}, {"determining": "( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( MUC + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.7426900584795322, "obj2": 0.15199126058252332}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( CRS,( ( PN / Max( CRS,( ( PN / MDR ) + ACS ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / MDR ) - Max( ( Min( MDR ,AMS ) + ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) / MUC ) ),Min( ( MUM + ( MUC / Min( ( MUM + MUM ) ,Max( DS,( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.025365273411390263}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.6666666666666666, "obj2": 0.2294833923696243}, {"determining": "( ( Max( CRS,( ( PN / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / ( ( BR / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( CS + ( Max( CS,( MLU - MUM ) ) / ( RMSe / ( Min( MUR ,MUM ) + MUR ) ) ) ) ) + RMSe ) )", "obj1": 0.6588693957115009, "obj2": 0.23470289242766176}, {"determining": "( ( CRS - ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / FirstVNF_Mem ) / ACS ) + ( FirstVNF_CPU + BR ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( ( MUC - RMSe ) * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.31189083820662766, "obj2": 0.6864821185117213}, {"determining": "( Max( CRS,( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( MUC * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.6140350877192983, "obj2": 0.2873692757686592}, {"determining": "( Max( CRS,( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MLU ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5543390564130055}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.39766081871345027, "obj2": 0.5593852683079361}, {"determining": "( ( ( ( ( Max( ( ( RRS / DDR ) * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( ACS ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( MDR * ARS ) )", "choosing": "( MLU / ( Max( MUM,Min( MUM ,RCSe ) ) + ( CS + MLU ) ) )", "obj1": 0.7699805068226121, "obj2": 0.1264957354515938}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.4619883040935672, "obj2": 0.4650018106263535}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_RAM_Server ) + MDR ) * FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( CS + ( Max( CS,( MLU - MUM ) ) / ( RMSe / ( Min( MUR ,MUM ) + Max( MUR,CS ) ) ) ) ) ) + RMSe ) )", "obj1": 0.9629629629629629, "obj2": 0.01873865115937141}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.4697855750487329, "obj2": 0.45766911965057006}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server / AMS ) - ( ( FirstVNF_CPU_Server / AMS ) * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server + ( CRS - FirstVNF_RAM_Server ) ) + ( Min( ARS ,MDR ) + ( ( AMS - AMS ) * ( Max( FirstVNF_Mem_Server,PN ) / ( FirstVNF_RAM_Server * ACS ) ) ) ) ) ) / PN ) )", "choosing": "Min( ( ( ( MUM + RCSe ) * RRSe ) - ( Max( CS,CS ) * MUC ) ) ,( RRSe + CS ) )", "obj1": 0.5750487329434698, "obj2": 0.31890183332193917}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4100015198359218}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5394132293535093}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - AMS ) ) ) ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.5663108172557975}, {"determining": "( Max( CRS,( ( Min( Const ,Min( ARS ,FirstVNF_RAM ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),( RMSe + ( CS + MUM ) ) ) + Min( MUM ,( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.557504873294347, "obj2": 0.33483538054047735}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.6705653021442495, "obj2": 0.22274941966040993}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / ( MUR + Min( MUR ,MLU ) ) ) ,RRSe ) )", "obj1": 0.7056530214424951, "obj2": 0.1888422665249845}, {"determining": "( Max( CRS,( ( ( DDR + FirstVNF_RAM_Server ) + MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUR * CS ) ,( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,MUR ) ) ) ) - RRSe ) ,RMSe ) / Max( ( Min( MUM ,RRSe ) + MUR ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5082107479829299}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) ) )", "obj1": 0.6237816764132553, "obj2": 0.26675269651100464}, {"determining": "( Max( CRS,( MDR + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe / ( MUM * Max( RCSe,( MLU + Max( MUR,CS ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.6159844054580896, "obj2": 0.280379547465295}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21637787046094603}, {"determining": "( Max( CRS,( ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( DS * Min( MLU ,RRSe ) ),Min( ( MUM + ( Min( MUR ,RRSe ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9298245614035088, "obj2": 0.038048124060371745}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.42300194931773877, "obj2": 0.5153343389104874}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( ( ( MRS - BR ) - AMS ) / Min( FirstVNF_RAM ,MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( Max( CRS,( ( BR / MDR ) + ( FirstVNF_Mem_Server * Const ) ) ) - ( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / AMS ) ) + PN ) / BR ) )", "choosing": "Min( ( Min( ( Max( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ),( MLU + ( DS * Min( MLU ,RRSe ) ) ) ) - ( ( ( DS * Min( MLU ,RRSe ) ) / CS ) * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.9688109161793372, "obj2": 0.015646366795724457}, {"determining": "( Max( CRS,( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( Max( RRS,( MDR / Const ) ) / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( MUC ,MUR ) - Min( RRSe ,MUC ) ) + ( RMSe - ( RCSe + ( DS * ( CS * MUM ) ) ) ) ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / ( MUR + Min( MUR ,MLU ) ) ) ,RRSe ) )", "obj1": 0.7056530214424951, "obj2": 0.1888422665249845}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + CRS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( RRS - ACS ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( PN,BR ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( RCSe + ( DS * Min( MLU ,RMSe ) ) ) ) ,MUR ) ) / MUC ) ,( RRSe * CS ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),( Max( CRS,ACS ) - ( MDR / PN ) ) ) - MDR ) / MDR ) - Max( CRS,( ( PN / MDR ) + ACS ) ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( MUC ,MUR ) - Min( RRSe ,MUC ) ) + ( RMSe - ( RCSe + ( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( MLU / MUC ) ) ) * ( DS * Min( MLU ,MLU ) ) ) ) ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07417184656958971}, {"determining": "( ( MDR / PN ) - ( FirstVNF_CPU - RRS ) )", "choosing": "Min( ( Max( ( RMSe / ( Max( RCSe,( ( MLU * MUM ) + Max( MUR,CS ) ) ) * MUM ) ),Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.6159844054580896, "obj2": 0.280379547465295}, {"determining": "( PN - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( ( MUR * CS ) ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.6296296296296297, "obj2": 0.2620836233966528}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( ( MDR / PN ) / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + ( MUC + ( DS * Min( MLU ,RRSe ) ) ) )", "obj1": 0.9317738791423001, "obj2": 0.03330460188814941}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( ( CS + MUC ) / ( Max( MUC,MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / ( MUR * MLU ) ) ) )", "obj1": 0.8245614035087719, "obj2": 0.08543195717773432}, {"determining": "( ( PN - MDR ) - AMS )", "choosing": "( ( ( MUR * MLU ) / CS ) / ( Min( Min( DS ,( MUR - MUM ) ) ,MUR ) + MUR ) )", "obj1": 0.8693957115009746, "obj2": 0.06176357154385659}, {"determining": "( ( PN + ( ( FirstVNF_CPU_Server - AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( FirstVNF_CPU_Server / DDR ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( ( CS / MUR ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,RRSe ) )", "obj1": 0.2826510721247563, "obj2": 0.725294120473661}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ARS ) / ( DDR / PN ) ),( ( RRS - ARS ) / CRS ) ) ) ) + FirstVNF_CPU ) ) - ( ( ACS * FirstVNF_RAM ) * ( Max( AMS,Min( RRS ,( PN + FirstVNF_RAM ) ) ) - ( ( DDR - DDR ) - DDR ) ) ) )", "choosing": "Max( Max( RCSe,Min( RMSe ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( RRSe / ( Max( MUR,MUM ) + MUM ) ) ) ) )", "obj1": 0.2884990253411306, "obj2": 0.716829650786594}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6433623390813604}, {"determining": "( Max( CRS,( ( PN / ( Min( MDR ,AMS ) + ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( MUM * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6374269005847953, "obj2": 0.2601002368689085}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( AMS / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( DDR * ( FirstVNF_CPU_Server / AMS ) ) ) ) )", "choosing": "( ( ( ( RMSe - ( ( RMSe * MLU ) / CS ) ) - ( ( ( MUC - CS ) + ( Min( MLU ,MUC ) - CS ) ) + Min( Min( ( CS * ( MUM - MLU ) ) ,( RRSe * CS ) ) ,( ( Max( DS,MUR ) - ( RMSe - MUC ) ) * ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ) + RMSe ) + Min( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( RMSe - CS ) ) ,MLU ) )", "obj1": 0.8927875243664717, "obj2": 0.054090692910764994}, {"determining": "( Max( BR,FirstVNF_CPU ) - Max( PN,MDR ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( Max( ( ( RMSe / MUC ) - MUM ),Min( RCSe ,RRSe ) ) / Min( RMSe ,( MUR + Min( MUR ,MLU ) ) ) ) / ( DS + MLU ) ) ) ) )", "obj1": 0.7368421052631579, "obj2": 0.15702170481435967}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( Max( ( ( ( ARS * Max( ( ( PN - MDR ) + ACS ),CRS ) ) / ( FirstVNF_Mem_Server * MDR ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / Min( DDR ,ACS ) ) )", "choosing": "( ( ( MUC - Min( RRSe ,MUC ) ) + RMSe ) / ( Max( ( RMSe + MUC ),( MUM - Min( RMSe ,MUR ) ) ) / MUM ) )", "obj1": 0.3235867446393762, "obj2": 0.6716018753663467}, {"determining": "( Max( CRS,( ( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) / MDR ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,CS ) ) ) ) ,MUR ) ) ) ,( RRSe * CS ) )", "obj1": 0.7192982456140351, "obj2": 0.1787072304493768}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Const * ARS ) ) / MDR ) ) * ( PN - ACS ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( ( MUM * RRSe ) - ( CS + Min( ( CS * Min( CS ,RMSe ) ) ,( RMSe / Max( ( MUM / CS ),( CS + RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8810916179337231, "obj2": 0.05744169991743743}, {"determining": "( Max( CRS,( ( PN / ( CRS - FirstVNF_RAM ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * MDR ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Min( ( Max( MUR,Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.30409356725146197, "obj2": 0.6922316433407149}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) - ( Max( BR,FirstVNF_CPU_Server ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( ( RRSe - MLU ) * Min( MLU ,Min( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ,MUM ) ) ) ) )", "obj1": 0.7212475633528265, "obj2": 0.17630821438075217}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_CPU_Server / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) + PN ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + Max( ARS,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( MDR * FirstVNF_RAM ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,RRSe ) + MUR ) ) ) ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6365299142117715}], "21": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( CRS,( ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( ( BR / BR ) + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) + CRS ) ) - ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( Min( FirstVNF_CPU_Server ,BR ) + ( MDR * Const ) ) ) ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ),Min( ( ( Min( MUR ,RRSe ) / Min( Max( ( CS * DS ),( CS - MUC ) ) ,( DS / ( RRSe * MUR ) ) ) ) + MUM ) ,( MUM / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * Max( RRS,( RRS * ( AMS - FirstVNF_Mem ) ) ) ) - ( FirstVNF_RAM - ( FirstVNF_CPU_Server - ( RRS - Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,( ( AMS * RRS ) - Const ) ) ) ) ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( ( MUM * DS ) / RMSe ),( DS * ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - Max( BR,PN ) )", "choosing": "Min( ( ( RRSe - MUM ) / Max( ( RRSe / MUC ),Min( Max( MUC,( RMSe / ( Min( MUR ,MUM ) + MUR ) ) ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) )", "obj1": 0.44834307992202727, "obj2": 0.48431139780227145}, {"determining": "( Max( CRS,( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / ( MDR / PN ) ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * RMSe ) )", "obj1": 0.4619883040935672, "obj2": 0.4643481967587493}, {"determining": "( Max( CRS,( ( PN / ( ( PN * MRS ) * FirstVNF_CPU ) ) + ACS ) ) - ( PN / PN ) )", "choosing": "( ( ( RCSe / ( Max( Max( MUM,Max( RCSe,( RCSe * MLU ) ) ),( ( ( CS / RRSe ) + MUC ) + ( ( CS - RRSe ) - RRSe ) ) ) + MUR ) ) / CS ) / ( Max( CS,CS ) / Min( ( Max( ( RMSe / CS ),( RMSe + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.34584435456750307}, {"determining": "( Max( CRS,( ( PN / ( Max( DDR,( BR + FirstVNF_CPU ) ) * ( BR / BR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) - RMSe ) )", "obj1": 0.6003898635477583, "obj2": 0.29657411454273547}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( ( ( Min( FirstVNF_RAM_Server ,ARS ) * Max( ( ( AMS * ACS ) / ( DDR / RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * ( MRS - FirstVNF_Mem ) ) ) ) / ( Const / DDR ) ) + ACS ) ) - ( MDR + PN ) )", "choosing": "Max( ( ( Min( MLU ,CS ) - CS ) / MUR ),Max( ( RMSe - ( ( MLU * RMSe ) / CS ) ),Max( MUM,Max( ( ( MUC - ( RRSe - CS ) ) + MLU ),( Max( Max( ( MUM - MUC ),MUM ),Min( RRSe ,CS ) ) / MUM ) ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4244796309745758}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,MUC ) ,MUR ) * MUM ) ) ) ) - ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.5867446393762183, "obj2": 0.3101891751470654}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - Max( CRS,( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / FirstVNF_Mem ) / ACS ) + ACS ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,Min( MLU ,RRSe ) ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6471734892787524, "obj2": 0.25353814478442155}, {"determining": "( Max( CRS,( ( Max( RRS,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) / ( DDR / PN ) ) + CRS ) ) - Max( FirstVNF_RAM_Server,DDR ) )", "choosing": "Min( ( Max( MLU,( ( MUC * RCSe ) / MUC ) ) + DS ) ,( ( DS * Min( MLU ,RRSe ) ) + CS ) )", "obj1": 0.8206627680311891, "obj2": 0.09692798564991194}, {"determining": "( ( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * ACS ) ) + ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - RRSe ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( MUR * MLU ),( MUC + ( DS * Min( RMSe ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.8050682261208577, "obj2": 0.09706349821608108}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,MUR ) / MUC ) ) )", "obj1": 0.5224171539961013, "obj2": 0.3794205865071033}, {"determining": "( Max( CRS,( ( ( PN / ( Max( DDR,( BR + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * RMSe ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6081678325957374}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + PN ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( MLU / ( Max( MUC,MUC ) + ( ( MUC + Min( MLU ,RRSe ) ) / MUC ) ) )", "obj1": 0.5107212475633528, "obj2": 0.3979474059654336}, {"determining": "( Max( CRS,( ( PN / ( Max( DDR,( BR + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( RCSe + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) - RMSe ) )", "obj1": 0.5633528265107213, "obj2": 0.3338671990898181}, {"determining": "( Max( CRS,( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) + ACS ) ) - ( Min( ( ( CRS * AMS ) * CRS ) ,FirstVNF_RAM_Server ) - Const ) )", "choosing": "Min( ( Min( ( Min( MUM ,( RMSe * MUR ) ) / RMSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( ( RCSe - MUM ) / ( RRSe * MUR ) ) ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.442495126705653, "obj2": 0.4950451400999091}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.391812865497076, "obj2": 0.5657517624876429}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.5730994152046783, "obj2": 0.3208263495693458}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,Min( MUR ,MUR ) ) / Max( ( MUM / MUC ),Min( MUC ,MUR ) ) ) ,( ( DS - MUR ) * MLU ) )", "obj1": 0.6705653021442495, "obj2": 0.22274941966040993}, {"determining": "( Max( ( Max( CRS,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) + MUR ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.3723196881091618, "obj2": 0.5962302170825843}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( Max( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( MLU / ( Max( MUC,MUC ) + ( CS + MLU ) ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( RRSe / MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.530214424951267, "obj2": 0.36769556370022477}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * ( ( ( CRS * ACS ) / ( DDR / PN ) ) / ( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( Min( CS ,MLU ) - CS ) + MUR ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( Max( RRSe,MUC ) + ( Max( ( RRSe / MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.36589322317631734}, {"determining": "( ( PN / FirstVNF_CPU_Server ) - ( PN + MDR ) )", "choosing": "( ( ( RCSe + ( RMSe + ( MUR - RCSe ) ) ) + Min( Max( DS,RRSe ) ,( RRSe - Min( Max( CS,Max( DS,( RCSe * RRSe ) ) ) ,CS ) ) ) ) - MUC )", "obj1": 0.6530214424951267, "obj2": 0.2429098481072742}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( Max( ( RRS - Const ),Min( ( AMS - ARS ) ,CRS ) ) * MDR ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( RMSe * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MLU * MUR ) ) / Min( ( Max( ( MUR * CS ),Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.2962962962962963, "obj2": 0.7065512745457333}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8576998050682261, "obj2": 0.06773933354160142}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( ( RRSe - MLU ) * Min( MLU ,Min( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ,MUM ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5323790066626501}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) ) ) + PN ) - FirstVNF_CPU )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( Max( CS,CS ) * MUC ),( DS / ( MUM - RCSe ) ) ) ) )", "obj1": 0.9571150097465887, "obj2": 0.02025184123501156}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Const * ARS ) ) / MDR ) ) * ( PN - ACS ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( ( MUM * RRSe ) - ( CS + Min( ( CS * Min( CS ,RMSe ) ) ,( RMSe / Max( ( MUM / CS ),( CS + RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8810916179337231, "obj2": 0.05744169991743743}, {"determining": "( ( ( MRS / FirstVNF_Mem ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( Max( MUC,MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / ( MUR * MLU ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.1073207259861166}, {"determining": "( Max( ( ( MRS / PN ) + ACS ),( ( FirstVNF_RAM_Server - PN ) - FirstVNF_RAM ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( ( ( MUR * MLU ) + ( MUC + ( DS * Min( MLU ,DS ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.3001949317738791, "obj2": 0.7003734992043149}, {"determining": "( ( DDR / PN ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.746588693957115, "obj2": 0.14747174621472836}, {"determining": "( Max( CRS,( ( PN / Max( CRS,( ACS + ( PN / MDR ) ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / ( MRS + ( ( FirstVNF_RAM_Server * CRS ) / ARS ) ) ) - ( Max( FirstVNF_Mem_Server,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( DS - MLU ) + ( CS * MUM ) ) * Min( ( RCSe / RMSe ) ,( DS / ( DS * Min( MLU ,RRSe ) ) ) ) ) / Min( MUM ,MUC ) )", "obj1": 0.9142300194931774, "obj2": 0.04166668132524869}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.4697855750487329, "obj2": 0.4550917447481728}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( MLU / ( Max( ( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6179035281086362}, {"determining": "( PN - ( ( Const * ( FirstVNF_CPU_Server + AMS ) ) + PN ) )", "choosing": "Min( ( MUC * CS ) ,Min( ( Max( MUR,Max( MUR,( Min( MUR ,Min( MUM ,MUR ) ) - RCSe ) ) ) - RRSe ) ,RRSe ) )", "obj1": 0.6179337231968811, "obj2": 0.2734654297729904}, {"determining": "( Max( MRS,( ( Const + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) - ( ( DDR + ( FirstVNF_CPU * ARS ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( ( ( ( MUC - Max( RRSe,MUR ) ) - ( Max( CS,MUC ) * ( DS + MUM ) ) ) + DS ) * MUC ) * RRSe ) ) ,( RRSe * MUM ) )", "obj1": 0.33723196881091616, "obj2": 0.6537492292554414}, {"determining": "( Max( ( ( RRS - DDR ) * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( CRS * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( CS / Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MLU / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.4756335282651072, "obj2": 0.4462608712467986}, {"determining": "( Max( CRS,( ( DDR / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.40350877192982454, "obj2": 0.5470561053347772}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( CS - Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19882159098678162}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( FirstVNF_RAM_Server - ( CRS - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( ( MUC + ( DS * Min( MUC ,RRSe ) ) ) / MUC ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.7037037037037037, "obj2": 0.19571742155927335}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / FirstVNF_RAM ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.5146198830409356, "obj2": 0.38607691990328646}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.5828460038986355, "obj2": 0.31441937369438716}, {"determining": "( ( PN + FirstVNF_RAM_Server ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( CS - Min( CS ,MLU ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( ( MUC + ( DS * MLU ) ) * MUM ),( Min( MLU ,CS ) * RCSe ) ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.36589322317631734}, {"determining": "( Max( CRS,( ( FirstVNF_Mem / ARS ) - ( FirstVNF_RAM_Server + BR ) ) ) - ( BR / BR ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * Max( RRSe,MUC ) ) ) + ( Max( RMSe,RRSe ) * RMSe ) ) ) ) ) )", "obj1": 0.7426900584795322, "obj2": 0.15169092773328008}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * MDR ) ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),CRS ) - ( PN / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( DS * Max( MUR,RMSe ) ) + RMSe ) ) / ( Max( CS,MUM ) / ( MLU / MUC ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6671498023177546}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( MDR / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.723196881091618, "obj2": 0.17106668808045403}, {"determining": "( Max( CRS,( ( Min( Const ,Min( ARS ,FirstVNF_RAM ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),( RMSe + ( CS + MUM ) ) ) + Min( MUM ,( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.557504873294347, "obj2": 0.33483538054047735}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / Max( MRS,MRS ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,RCSe ),Max( ( RMSe - ( ( DS * MUR ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4100015198359218}, {"determining": "( Max( CRS,( ( PN / ( ( MDR / PN ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( RCSe + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - CS ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) - RMSe ) )", "obj1": 0.6140350877192983, "obj2": 0.2823838151338887}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( ACS - Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU ) ) - Max( DDR,PN ) )", "choosing": "Min( ( Min( ( ( DS * Min( MLU ,RRSe ) ) - Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / MUC ) ),Max( DS,DS ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( ( RRSe + MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4873294346978557, "obj2": 0.43477443137055444}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.6666666666666666, "obj2": 0.2294833923696243}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5752313570860267}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_CPU * Min( AMS ,MDR ) ) ) / Const ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( Max( MUM,Max( MLU,MUR ) ) / MUR ),( RMSe + ( MUR * Min( MLU ,RRSe ) ) ) ) - Min( MUC ,RMSe ) ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21083998915169072}, {"determining": "( ( ( Max( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ),MDR ) - Max( ( DDR / ( FirstVNF_Mem + FirstVNF_CPU ) ),MDR ) ) + PN ) - FirstVNF_CPU )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( RRSe / ( ( MUC / Max( MUM,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( ( ( PN + ( Max( ( MRS * ( FirstVNF_Mem_Server * MDR ) ),PN ) - MDR ) ) - ( MDR * FirstVNF_RAM ) ) - Max( Min( MDR ,FirstVNF_CPU_Server ),( MDR / ( ARS * FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10184601530290353}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5394132293535093}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( ( MUM + MUM ) ,Max( DS,( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.46588693957115007, "obj2": 0.45820827608560155}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6271727070258472}, {"determining": "( Max( ( ( ( ARS * Max( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( RMSe - DS ),Max( MUM,( ( CS + MLU ) / ( Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) / Max( ( ( RMSe * MUC ) - MUM ),RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.676608428348071}, {"determining": "( Max( CRS,( ( PN / ( ( BR + FirstVNF_RAM ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( DS * Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.5555555555555556, "obj2": 0.3451170140342868}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4411102218166924}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5854070104227129}, {"determining": "( Max( Max( FirstVNF_Mem,( DDR + Max( FirstVNF_RAM,( ACS - Const ) ) ) ),( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( DS * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( Min( MUM ,( DS * Max( MUR,MUM ) ) ) ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.3391812865497076, "obj2": 0.6433623390813604}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) - Min( FirstVNF_RAM ,PN ) )", "choosing": "Min( ( Min( Min( ( RRSe - Max( ( ( MUC * DS ) / ( RCSe * RRSe ) ),MLU ) ) ,RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( ( MUC - DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.32943469785575047, "obj2": 0.6582593093745166}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( RRSe / ( ( MLU / Max( DS,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.5750487329434698, "obj2": 0.31798186105014703}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - FirstVNF_CPU )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( RCSe / RMSe ),( DS / ( MUM - RCSe ) ) ) ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server + Const ) / ( Max( RRS,FirstVNF_Mem ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU + CS ) / Min( ( ( CS * DS ) - ( MLU / RMSe ) ) ,Min( MUR ,RMSe ) ) ) / ( ( RCSe / RRSe ) / CS ) )", "obj1": 0.37816764132553604, "obj2": 0.5854070104227129}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( ( ACS * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS + MUC ) / ( Max( MUC,MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / ( MUR * MLU ) ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13103403161776725}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_RAM ) * FirstVNF_RAM_Server ) ) ) - ( CRS + DDR ) )", "choosing": "( ( MLU / MUM ) / ( ( DS * Min( MLU ,RRSe ) ) + CS ) )", "obj1": 0.9415204678362573, "obj2": 0.030693137391829287}, {"determining": "( Max( RRS,( ( ( FirstVNF_CPU + ( RRS - ( FirstVNF_Mem / MDR ) ) ) / ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( PN / MDR ) )", "choosing": "Max( Min( RCSe ,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.3840155945419103, "obj2": 0.5752313570860267}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( RRSe / ( ( MLU / Max( DS,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.4191033138401559, "obj2": 0.5209371782666229}, {"determining": "( Max( CRS,( ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( DS * Min( MLU ,RRSe ) ),Min( ( MUM + ( Min( MUR ,RRSe ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9298245614035088, "obj2": 0.038048124060371745}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( DDR / Const ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( RMSe - CS ),( RMSe + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21083998915169072}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.2162795169467259}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( ( ( MRS - BR ) - AMS ) / Min( FirstVNF_RAM ,MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( Max( CRS,( ( DDR - ( FirstVNF_CPU * ( DDR + FirstVNF_Mem ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / MDR ) - Max( ( Min( MDR ,AMS ) + ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_RAM ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( DS / ( DS * Min( ( CS + ( RMSe - MUM ) ) ,RRSe ) ) ),( RCSe / RMSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.025365273411390263}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),FirstVNF_CPU ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( MLU ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + MUC ) )", "obj1": 0.9746588693957114, "obj2": 0.012130240270688018}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( Min( ( RMSe / ( MUM * Max( RCSe,( MLU + Max( MUR,CS ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ),( MUM - RMSe ) )", "obj1": 0.7134502923976608, "obj2": 0.18386248337320094}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / AMS ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / ( MUR + Min( MUR ,MLU ) ) ) ,RRSe ) )", "obj1": 0.7056530214424951, "obj2": 0.1888422665249845}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * ( ( PN - AMS ) * FirstVNF_Mem ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( ( ( ( RRSe * DS ) * ( MLU + RRSe ) ) * Min( Min( DS ,RCSe ) ,RRSe ) ) ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( RMSe - DS ),Max( MUM,( ( CS + MLU ) / ( Min( RMSe ,( Min( MUM ,MLU ) + ( RMSe * MLU ) ) ) / Max( ( ( RMSe * MUC ) - MUM ),RMSe ) ) ) ) ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4346978557504873, "obj2": 0.5002660194572952}, {"determining": "( Max( CRS,( ( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( RRSe,( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6120857699805068, "obj2": 0.29478833000834354}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) + MDR ) / MDR ) - ( MDR - AMS ) ) + PN ) - Max( Max( RRS,( FirstVNF_RAM + BR ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM + MLU ),RRSe ) ) / Max( ( DS * Min( MLU ,RRSe ) ),Min( ( MUM + ( Max( ( CS + ( MLU / MUC ) ),( MUC / RCSe ) ) / ( ( Min( MLU ,RMSe ) - Max( CS,MUR ) ) * MUC ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06959651411658425}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * MDR ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MUM ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Min( ( Max( MUR,Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.30409356725146197, "obj2": 0.6922316433407149}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( ( MDR / ( PN / ( CRS - ( ( DDR / FirstVNF_CPU ) - ( ARS + FirstVNF_RAM_Server ) ) ) ) ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / ( ( Min( MLU ,RRSe ) * DS ) + MUC ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9688109161793372, "obj2": 0.015050665686989774}, {"determining": "( Max( CRS,( ( ( Max( DDR,( BR + DDR ) ) * FirstVNF_CPU ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) - FirstVNF_CPU ) ) + ( DDR + MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RCSe / ( ( MLU * CS ) - ( MUC - CS ) ) ),MUR ),( MUR - MUM ) ) + Min( Min( ( CS + ( Min( MUC ,MUR ) - RCSe ) ) ,CS ) ,( Max( ( DS - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ),MUC ) + ( MUC + Max( MUR,Max( ( RCSe - MUM ),Max( Min( DS ,RCSe ),( MUR / MUC ) ) ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6896569762010735}, {"determining": "( Max( CRS,( ( ( BR / MDR ) + ( FirstVNF_Mem_Server * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( ( ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) + MUC ) / ( ( ( MUR + Min( RCSe ,CS ) ) / CS ) + MUM ) ) ) ) )", "obj1": 0.6101364522417154, "obj2": 0.2952826262769364}, {"determining": "( Max( Max( RRS,( BR * FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) / Min( MUR ,DS ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5153343389104874}], "22": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_RAM_Server ) + Max( DDR,( BR + FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) - ( CS + ( Max( CS,( MLU - MUM ) ) / ( RMSe / ( Min( MLU ,MUM ) + MUR ) ) ) ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( ( BR / BR ) + FirstVNF_RAM_Server ) ) + FirstVNF_Mem_Server ) ) + CRS ) ) - ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( Min( FirstVNF_CPU_Server ,BR ) + ( MDR * Const ) ) ) ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ),Min( ( ( Min( MUR ,RRSe ) / Min( Max( ( CS * DS ),( CS - MUC ) ) ,( DS / ( RRSe * MUR ) ) ) ) + MUM ) ,( MUM / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - Max( DDR,( BR + FirstVNF_CPU ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,( MUC + ( DS * RMSe ) ) ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( ( ( MRS - BR ) - AMS ) / Min( FirstVNF_RAM ,Max( ( MRS * FirstVNF_RAM ),PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( RMSe * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.8089668615984406, "obj2": 0.0939262879297301}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( CRS,( ( ( Max( MRS,ACS ) - ( ACS - FirstVNF_Mem_Server ) ) / ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / ( MDR * FirstVNF_RAM ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( MUC + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / MUC ) + ( MUC / ( CS * ( MUR + RMSe ) ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.3909662519957801}, {"determining": "( PN - ( ( Max( ( MRS + Const ),AMS ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / ARS ) )", "choosing": "( MLU / ( ( ( MUC + ( DS * Min( ( DS - RCSe ) ,RRSe ) ) ) / MUR ) + ( RMSe / MUC ) ) )", "obj1": 0.6140350877192983, "obj2": 0.27526777029689786}, {"determining": "( Max( Max( RRS,( BR + FirstVNF_RAM ) ),( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / ( MLU / MUC ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.5477582846003899, "obj2": 0.35044238966055263}, {"determining": "( Max( CRS,( ( ( ( MDR * ACS ) / ( DDR / PN ) ) / Max( BR,ARS ) ) + ACS ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( Max( RMSe,MUR ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( DS * Max( MLU,MUR ) ) )", "obj1": 0.6530214424951267, "obj2": 0.24150508900354548}, {"determining": "( Max( CRS,( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / ( MDR / PN ) ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * RMSe ) )", "obj1": 0.4619883040935672, "obj2": 0.4643481967587493}, {"determining": "( ( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( DS,( RRSe - MUC ) ) * MLU ),( MUC + ( DS * Min( MUM ,RRSe ) ) ) ) / RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.4093567251461988, "obj2": 0.5374782417751416}, {"determining": "( Max( CRS,( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) )", "obj1": 0.4502923976608187, "obj2": 0.48167609400445466}, {"determining": "( Max( Max( FirstVNF_Mem,( DDR + Max( FirstVNF_RAM,( ACS - Const ) ) ) ),( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( DS * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( Min( MUM ,( DS * Max( MUR,MUM ) ) ) ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.3391812865497076, "obj2": 0.6433623390813604}, {"determining": "( Max( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.40350877192982454, "obj2": 0.5452989260421119}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( Min( Min( Const ,ACS ) ,( AMS / ARS ) ) ,( BR / BR ) ) * MDR ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + ( Min( Max( ( MUC * ( CS * Max( MUC,RCSe ) ) ),MUC ) ,MUR ) * MUM ) )", "obj1": 0.5614035087719298, "obj2": 0.33178724396626474}, {"determining": "( Max( CRS,( ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( MUR,Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) + ( RMSe / MUC ) ) )", "obj1": 0.7115009746588694, "obj2": 0.18332886554024855}, {"determining": "( Max( Max( RRS,( BR + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.4171539961013645, "obj2": 0.5249150946671431}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4100015198359218}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( MLU / ( Max( ( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6179035281086362}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / Max( MRS,MRS ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,RCSe ),Max( ( RMSe - ( ( DS * MUR ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4100015198359218}, {"determining": "( ACS - ( MDR / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( Min( Max( MUC,DS ) ,MUR ) * MUM ) ) ) ) - ( RCSe + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,Max( RMSe,RRSe ) ) + ( MUM * RMSe ) ) ) ) ) ),( Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) - RMSe ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442255}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( MLU * MUM ),MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / ( MUR * MLU ) ) ) )", "obj1": 0.7680311890838206, "obj2": 0.12822213907839825}, {"determining": "( Max( CRS,( ( DDR - ( FirstVNF_CPU * ( DDR + FirstVNF_Mem ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / MDR ) - Max( ( Min( MDR ,AMS ) + ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_RAM ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( DS / ( DS * Min( ( CS + ( RMSe - MUM ) ) ,RRSe ) ) ),( RCSe / RMSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.025365273411390263}, {"determining": "( Max( CRS,( ( FirstVNF_Mem / ARS ) - ( FirstVNF_RAM_Server + BR ) ) ) - ( BR / BR ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * Max( RRSe,MUC ) ) ) + ( Max( RMSe,RRSe ) * RMSe ) ) ) ) ) )", "obj1": 0.7426900584795322, "obj2": 0.15169092773328008}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( ( DDR / PN ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.746588693957115, "obj2": 0.14747174621472836}, {"determining": "( Max( MRS,( ( Const + FirstVNF_Mem ) + ( FirstVNF_RAM * PN ) ) ) - ( ( DDR + ( FirstVNF_CPU * ARS ) ) * FirstVNF_Mem ) )", "choosing": "Min( ( RMSe + ( ( ( ( ( MUC - Max( RRSe,MUR ) ) - ( Max( CS,MUC ) * ( DS + MUM ) ) ) + DS ) * MUC ) * RRSe ) ) ,( RRSe * MUM ) )", "obj1": 0.33723196881091616, "obj2": 0.6537492292554414}, {"determining": "( Max( CRS,( ( PN / Max( CRS,( ( PN / MDR ) + ACS ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / MDR ) - ( Max( RRS,( AMS * ( AMS - FirstVNF_Mem ) ) ) * FirstVNF_CPU ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.9142300194931774, "obj2": 0.041666681325248686}, {"determining": "( Max( ( MRS * Max( ( ARS / FirstVNF_Mem ),FirstVNF_RAM ) ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( FirstVNF_Mem - MRS ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( MUR / ( ( Max( MUC,DS ) - RRSe ) + Max( MLU,MUM ) ) ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.4697855750487329, "obj2": 0.4529088454192807}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * ( ( PN - AMS ) * FirstVNF_Mem ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( ( ( ( RRSe * DS ) * ( MLU + RRSe ) ) * Min( Min( DS ,RCSe ) ,RRSe ) ) ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( Max( ( ( RRS - DDR ) * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( CRS * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( CS / Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MLU / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.4756335282651072, "obj2": 0.4462608712467986}, {"determining": "( Max( ( Min( ACS ,Max( ( ( FirstVNF_RAM_Server * ARS ) * ( FirstVNF_RAM - Min( FirstVNF_CPU_Server ,MDR ) ) ),AMS ) ) + ACS ),CRS ) - ( MDR / CRS ) )", "choosing": "( ( ( MLU + ( RMSe + ( RCSe - MUR ) ) ) + Min( ( Max( RMSe,( MLU + Min( MLU ,DS ) ) ) + Min( RCSe ,Min( ( CS / Max( MUC,CS ) ) ,MUR ) ) ) ,( RRSe - Min( Max( ( ( MUR - RMSe ) - CS ),CS ) ,CS ) ) ) ) - MUC )", "obj1": 0.594541910331384, "obj2": 0.3067250413055258}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( PN / MDR ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / Min( FirstVNF_Mem_Server ,( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( Max( MRS,BR ) * BR ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( MUC / RRSe ),Min( ( MUC * DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + ( RMSe * MUM ) ) )", "obj1": 0.39766081871345027, "obj2": 0.557177192976301}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( ( ( MUC - ( Max( CS,CS ) * MUC ) ) / RRSe ) * ( MUR / MUR ) ) / RRSe ) ,RRSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6271727070258472}, {"determining": "( Max( CRS,( ( PN / MDR ) * ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / ( DDR * CRS ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( ( MUC / DS ) ,MUR ) ) ) ,Min( ( RRSe / RRSe ) ,MUC ) )", "obj1": 0.4346978557504873, "obj2": 0.5002660194572952}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( ( CRS - MDR ) ,PN ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( DS + MLU ) ,( ( DS * Min( MLU ,RRSe ) ) + ( RCSe / MUC ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06936796530467318}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( ( MUM - MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8576998050682261, "obj2": 0.06773933354160142}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( ( ( Min( FirstVNF_RAM_Server ,ARS ) * Max( ( ( AMS * ACS ) / ( DDR / RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * ( MRS - FirstVNF_Mem ) ) ) ) / ( Const / DDR ) ) + ACS ) ) - ( MDR + PN ) )", "choosing": "Max( ( ( Min( MLU ,CS ) - CS ) / MUR ),Max( ( RMSe - ( ( MLU * RMSe ) / CS ) ),Max( MUM,Max( ( ( MUC - ( RRSe - CS ) ) + MLU ),( Max( Max( ( MUM - MUC ),MUM ),Min( RRSe ,CS ) ) / MUM ) ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4244796309745758}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,MUR ) / MUC ) ) )", "obj1": 0.5224171539961013, "obj2": 0.3794205865071033}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Min( CS ,MUM ) / ( Min( ( RRSe + MUM ) ,MUR ) / MUC ) ) )", "obj1": 0.5282651072124757, "obj2": 0.3753968136683488}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.6666666666666666, "obj2": 0.2294833923696243}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.391812865497076, "obj2": 0.5657517624876429}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * ( ( ( CRS * ACS ) / ( DDR / PN ) ) / ( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( Min( CS ,MLU ) - CS ) + MUR ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( Max( RRSe,MUC ) + ( Max( ( RRSe / MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.36589322317631734}, {"determining": "( Max( Max( RRS,( BR * FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) / Min( MUR ,DS ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5153343389104874}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / FirstVNF_Mem ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU - RRSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6834707956350952}, {"determining": "( Max( CRS,( ACS + ( Min( Const ,Min( ARS ,FirstVNF_RAM ) ) / ( ( ( FirstVNF_Mem / Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ) ) - Min( MRS ,ACS ) )", "choosing": "( ( RMSe * RRSe ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUM ) ) ) ,CS ) ,( Max( ( MUM - MLU ),( RMSe + ( CS + MUM ) ) ) + Min( MUM ,( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.29852045485049516}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * MDR ) ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),CRS ) - ( PN / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( DS * Max( MUR,RMSe ) ) + RMSe ) ) / ( Max( CS,MUM ) / ( MLU / MUC ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6671498023177546}, {"determining": "( Max( CRS,( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) + ACS ) ) - ( Min( ( ( CRS * AMS ) * CRS ) ,FirstVNF_RAM_Server ) - Const ) )", "choosing": "Min( ( Min( ( Min( MUM ,( RMSe * MUR ) ) / RMSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( ( RCSe - MUM ) / ( RRSe * MUR ) ) ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.442495126705653, "obj2": 0.4950451400999091}, {"determining": "( ( PN + ( ( Max( CRS,( Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,ARS ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( MDR / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Min( ( ( ( MDR / FirstVNF_RAM_Server ) * ( BR + FirstVNF_RAM ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ,PN ) )", "choosing": "Min( MUC ,Min( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - CS ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ,( ( ( ( CS - MUR ) - Min( MUM ,MUM ) ) + RMSe ) + MLU ) ) )", "obj1": 0.723196881091618, "obj2": 0.17106668808045403}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + PN ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + MUC ) ) - RRSe ),RRSe ) ) / Max( ( Min( MUM ,DS ) * ( MLU / MUC ) ),Min( ( MUM + ( MUC / Min( ( MUM + MUM ) ,Max( DS,( RRSe * MUC ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.6491228070175439, "obj2": 0.24738603804303894}, {"determining": "( Max( CRS,( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * RMSe ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.695906432748538, "obj2": 0.19882159098678162}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( FirstVNF_CPU + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + DDR ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + MUM ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( CRS,( ( ( PN / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM + ( Max( ( CS + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.36062378167641324, "obj2": 0.6111642562758436}, {"determining": "( ( ( PN * ACS ) / ( DDR / PN ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( RMSe - CS ),( RMSe + MLU ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( Max( Max( RRS,( BR + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( MUM + RRSe ) - ( ( RRSe - MLU ) * Min( MLU ,Min( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) ,MUM ) ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5153343389104874}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + DDR ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9649122807017544, "obj2": 0.015998097621630375}, {"determining": "( Max( ( ( MRS / PN ) + ACS ),( ( FirstVNF_RAM_Server - PN ) - FirstVNF_RAM ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( ( ( MUR * MLU ) + ( MUC + ( DS * Min( MLU ,DS ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.3001949317738791, "obj2": 0.7003734992043149}, {"determining": "( Max( CRS,( ( ( FirstVNF_CPU_Server + Const ) / ( Max( RRS,FirstVNF_Mem ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU + CS ) / Min( ( ( CS * DS ) - ( MLU / RMSe ) ) ,Min( MUR ,RMSe ) ) ) / ( ( RCSe / RRSe ) / CS ) )", "obj1": 0.37816764132553604, "obj2": 0.5854070104227129}, {"determining": "( Max( ( Max( CRS,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( ( Min( MUM ,RRSe ) + MUR ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.3723196881091618, "obj2": 0.5962302170825843}, {"determining": "( Max( ( ( ( ARS * Max( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ),( ( PN / MDR ) + PN ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( RMSe - DS ),Max( MUM,( Min( Max( MUC,DS ) ,MUR ) / ( Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) / Max( ( ( RMSe * MUC ) - MUM ),RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.676608428348071}, {"determining": "( Max( CRS,( ( ( Max( DDR,( BR + DDR ) ) * FirstVNF_CPU ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) - FirstVNF_CPU ) ) + ( DDR + MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RCSe / ( ( MLU * CS ) - ( MUC - CS ) ) ),MUR ),( MUR - MUM ) ) + Min( Min( ( CS + ( Min( MUC ,MUR ) - RCSe ) ) ,CS ) ,( Max( ( DS - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ),MUC ) + ( MUC + Max( MUR,Max( ( RCSe - MUM ),Max( Min( DS ,RCSe ),( MUR / MUC ) ) ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6896569762010735}, {"determining": "( Max( CRS,( ( Max( BR,PN ) / MDR ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Max( ( Max( ( MUR * ( RCSe / RMSe ) ),( ( DS * Min( MLU ,RRSe ) ) + ( MUM - RMSe ) ) ) - RRSe ),RRSe ) )", "obj1": 0.44639376218323584, "obj2": 0.48775580044569045}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.6764132553606238, "obj2": 0.21818021098485352}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( ( PN / MDR ) + ACS ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.49317738791423, "obj2": 0.4244796309745758}, {"determining": "( ( ( MDR + ( BR * FirstVNF_RAM ) ) + PN ) - FirstVNF_CPU )", "choosing": "( ( ( MLU / RCSe ) + ( RRSe - RMSe ) ) / ( MUC * Max( ( RCSe / RMSe ),( DS / ( MUM - RCSe ) ) ) ) )", "obj1": 0.8752436647173489, "obj2": 0.05932062389924892}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / MUM ) ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * MDR ) ) + CRS ),CRS ) - ( ( MDR * FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( MUC - MUM ) * ( RCSe / RMSe ) ),( MUC + ( ( MLU * MUM ) * Min( RRSe ,MLU ) ) ) ) - RRSe ) ,( MUR * MUR ) ) / Min( ( Max( MUR,Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) - RRSe ) ,Min( RMSe ,MUR ) ) ) ,Max( MUR,CS ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( Max( CRS,( ( ( ( ( AMS * BR ) + ( ( PN / MDR ) + ACS ) ) * Max( ( ( MDR * ACS ) / ( DDR + PN ) ),( AMS + ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_CPU_Server / Max( ACS,RRS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MLU * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,CS ) ) ) ,( Max( ( Max( ( CS * ( CS + MUM ) ),( ( ( MUC - MUR ) * RRSe ) / Max( DS,( MUR / MLU ) ) ) ) - ( DS + ( DS - ( DS + MLU ) ) ) ),MUC ) * CS ) )", "obj1": 0.935672514619883, "obj2": 0.031454987515670746}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( Min( ( Max( RRSe,( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5854070104227129}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - Max( CRS,( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / FirstVNF_Mem ) / ACS ) + ACS ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,Min( MLU ,RRSe ) ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6471734892787524, "obj2": 0.25353814478442155}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( Min( ( RMSe / ( MUM * Max( RCSe,( MLU + Max( MUR,CS ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( ( MDR / PN ) - ( PN + Min( FirstVNF_Mem ,DDR ) ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( MUM * Min( Max( MUC,DS ) ,MUR ) ) ) ) ) - Max( MLU,Min( Max( CS,Min( ( ( RCSe / MLU ) - ( DS + RCSe ) ) ,Min( RCSe ,MUC ) ) ) ,( RMSe + MUC ) ) ) ),( Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) - RMSe ) )", "obj1": 0.6335282651072125, "obj2": 0.26386813972130657}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( RRSe / MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5341130604288499, "obj2": 0.36589322317631734}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) / ( MDR / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.723196881091618, "obj2": 0.17106668808045403}, {"determining": "( Max( CRS,( ( PN / ( ( BR + FirstVNF_RAM ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.34299986604830435}, {"determining": "( Max( CRS,( ( ( Max( DDR,( BR + FirstVNF_CPU ) ) * FirstVNF_CPU ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.29239766081871343, "obj2": 0.711948063440568}, {"determining": "( ( Max( CRS,( ( DDR / ( Min( ( ACS * ARS ) ,( BR / BR ) ) * ACS ) ) + ACS ) ) - Min( MDR ,PN ) ) - ( ( BR + FirstVNF_RAM ) / PN ) )", "choosing": "( ( ( ( MUR - RCSe ) * ( ( Min( MLU ,RMSe ) - ( Min( ( MLU - RRSe ) ,MUR ) / MLU ) ) - CS ) ) / Max( RMSe,Max( ( ( Min( MLU ,RRSe ) * DS ) * MLU ),( MUC + ( ( MUC * RMSe ) / Min( RMSe ,RRSe ) ) ) ) ) ) / ( Max( Min( MUR ,RCSe ),MUM ) + ( MUC / RMSe ) ) )", "obj1": 0.98635477582846, "obj2": 0.00944811961521196}, {"determining": "( Max( Min( ( Max( MDR,( Min( ( MRS / FirstVNF_RAM ) ,MDR ) / MRS ) ) * FirstVNF_CPU ) ,FirstVNF_RAM ),( ( BR / ( ( ( FirstVNF_RAM / ( MDR * FirstVNF_RAM ) ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,RCSe ),Max( ( RMSe - ( ( DS * MUR ) / CS ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16771011968939853}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.5730994152046783, "obj2": 0.3208263495693458}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,MUR ) / MUC ) ) )", "obj1": 0.5165692007797271, "obj2": 0.38322151390077275}, {"determining": "( Max( CRS,( ( PN / ( Max( ( ( MDR + FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( DS * Min( MLU ,RRSe ) ),Min( ( MUM + ( Min( MUR ,RRSe ) / Min( MUM ,( MUC / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9785575048732943, "obj2": 0.01063835180302165}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.39571150097465885, "obj2": 0.5586242448219336}, {"determining": "( Max( CRS,( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) * FirstVNF_CPU ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5722542429406813}, {"determining": "( ( ( Max( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ),MDR ) - Max( ( DDR / ( FirstVNF_Mem + FirstVNF_CPU ) ),MDR ) ) + PN ) - FirstVNF_CPU )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( RRSe / ( ( MUC / Max( MUM,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( ACS - Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU ) ) - Max( DDR,PN ) )", "choosing": "Min( ( Min( ( ( DS * Min( MLU ,RRSe ) ) - Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / MUC ) ),Max( DS,DS ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( ( RRSe + MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4873294346978557, "obj2": 0.43477443137055444}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.4834307992202729, "obj2": 0.43641339896645376}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.2162795169467259}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) ) ) + PN ) - FirstVNF_CPU )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( Max( CS,CS ) * MUC ),( DS / ( MUM - RCSe ) ) ) ) )", "obj1": 0.9571150097465887, "obj2": 0.02025184123501156}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( CRS * MDR ) / FirstVNF_RAM ) - ( CRS - Const ) ) + PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - ( RMSe * Min( DS ,Min( ( MUM - DS ) ,DS ) ) ) ),Max( MUM,( ( CS + MLU ) / ( Max( ( ( MUC - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.2294833923696243}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_CPU * Min( AMS ,MDR ) ) ) / Const ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / CS ) / ( ( MLU + CS ) / Min( ( Max( ( Max( MUM,Max( MLU,MUR ) ) / MUR ),( RMSe + ( MUR * Min( MLU ,RRSe ) ) ) ) - Min( MUC ,RMSe ) ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21083998915169072}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Const * ARS ) ) / MDR ) ) * ( PN - ACS ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( ( MUM * RRSe ) - ( CS + Min( ( CS * Min( CS ,RMSe ) ) ,( RMSe / Max( ( MUM / CS ),( CS + RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8810916179337231, "obj2": 0.05744169991743743}], "23": [{"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( Min( ( Max( RRSe,( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Max( CS,MUM ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_RAM_Server ) + Max( DDR,( BR + FirstVNF_CPU ) ) ) * FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MLU / MUM ) / ( ( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) - ( CS + ( Max( CS,( MLU - MUM ) ) / ( RMSe / ( Min( MLU ,MUM ) + MUR ) ) ) ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - Max( DDR,( BR + FirstVNF_CPU ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,( MUC + ( DS * RMSe ) ) ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.5730994152046783, "obj2": 0.3208263495693458}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( Max( ( Min( ACS ,Max( ( ( FirstVNF_RAM_Server * ARS ) * ( FirstVNF_RAM - Min( FirstVNF_CPU_Server ,MDR ) ) ),AMS ) ) + ACS ),CRS ) - ( MDR / CRS ) )", "choosing": "( ( ( MLU + ( RMSe + ( RCSe - MUR ) ) ) + Min( ( Max( RMSe,( MLU + Min( MLU ,DS ) ) ) + Min( RCSe ,Min( ( CS / Max( MUC,CS ) ) ,MUR ) ) ) ,( RRSe - Min( Max( ( ( MUR - RMSe ) - CS ),CS ) ,CS ) ) ) ) - MUC )", "obj1": 0.594541910331384, "obj2": 0.3067250413055258}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( ( ( MRS - BR ) - AMS ) / Min( FirstVNF_RAM ,Max( ( MRS * FirstVNF_RAM ),PN ) ) ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( CS + ( Max( CS,Min( CS ,RMSe ) ) / ( RMSe / DS ) ) ) ) + RMSe ) )", "obj1": 0.7894736842105263, "obj2": 0.10930095360021928}, {"determining": "( Max( CRS,( ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( RRSe ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3333333333333333, "obj2": 0.652950176981464}, {"determining": "( Max( CRS,( ( ( Max( MRS,ACS ) - ( ACS - FirstVNF_Mem_Server ) ) / ( ( ( ( PN / MDR ) / ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) / ( MDR * FirstVNF_RAM ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( MUC + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / MUC ) + ( MUC / ( CS * ( MUR + RMSe ) ) ) ) )", "obj1": 0.5107212475633528, "obj2": 0.3909662519957801}, {"determining": "( Max( Max( RRS,( BR + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5238400946764519}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( DDR + FirstVNF_RAM ) ) ) / ( FirstVNF_CPU / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( RMSe + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.6042884990253411, "obj2": 0.28998755431764633}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.40350877192982454, "obj2": 0.5452989260421119}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5029239766081871, "obj2": 0.40620102100369393}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( Min( Min( Const ,ACS ) ,( AMS / ARS ) ) ,( BR / BR ) ) * MDR ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + ( Min( Max( ( MUC * ( CS * Max( MUC,RCSe ) ) ),MUC ) ,MUR ) * MUM ) )", "obj1": 0.5614035087719298, "obj2": 0.33178724396626474}, {"determining": "( Max( CRS,( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( Min( MUM ,MLU ) + ( RCSe - Min( MUC ,MUM ) ) ) ,CS ) ,( Max( ( MUM - MLU ),( RMSe + ( CS + MUM ) ) ) + Min( MUM ,( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.4731863934250868}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Const * ARS ) ) / MDR ) ) * ( PN - ACS ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( ( MUM * RRSe ) - ( CS + Min( ( CS * Min( CS ,RMSe ) ) ,( RMSe / Max( ( MUM / CS ),( CS + RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8810916179337231, "obj2": 0.05744169991743743}, {"determining": "( ( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.7017543859649122, "obj2": 0.1960197266867003}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( Max( CRS,( ( BR / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUM ) ) ) ,CS ) ,( Max( ( MUM - MLU ),( ( ( MUC - MUR ) - MUM ) + ( CS + MUM ) ) ) + Min( MUM ,( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1831059668544435}, {"determining": "( Max( CRS,( ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( MUC + ( DS * Min( MLU ,RRSe ) ) ),Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) + ( RMSe / MUC ) ) )", "obj1": 0.6588693957115009, "obj2": 0.23681686369336954}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * ( ( PN - AMS ) * FirstVNF_Mem ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( ( ( ( RRSe * DS ) * ( MLU + RRSe ) ) * Min( Min( DS ,RCSe ) ,RRSe ) ) ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / MUM ) ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( Max( ( Max( CRS,( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Min( ( ( DS * Min( MLU ,RRSe ) ) - Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / MUC ) ),Max( DS,DS ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( ( RRSe + MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.38596491228070173, "obj2": 0.5849407186752256}, {"determining": "( PN - ( ( ( ( Min( FirstVNF_Mem ,ACS ) * PN ) / DDR ) * ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),Max( DS,DS ) ) - Max( DS,( ( ( MLU / MUM ) - ( RCSe - RCSe ) ) - ( MUR + DS ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6140350877192983, "obj2": 0.27526777029689786}, {"determining": "( Max( CRS,( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) + ACS ) ) - ( Min( ( ( CRS * AMS ) * CRS ) ,FirstVNF_RAM_Server ) - Const ) )", "choosing": "Min( ( Min( ( Min( MUM ,( RMSe * MUR ) ) / RMSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( ( RCSe - MUM ) / ( RRSe * MUR ) ) ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.442495126705653, "obj2": 0.4950451400999091}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * MDR ) ) + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ),CRS ) - ( PN / Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( DS * Max( MUR,RMSe ) ) + RMSe ) ) / ( Max( CS,MUM ) / ( MLU / MUC ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6671498023177546}, {"determining": "( Max( CRS,( ( DDR - ( FirstVNF_CPU * ( DDR + FirstVNF_Mem ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / MDR ) - Max( ( Min( MDR ,AMS ) + ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_RAM ) ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( DS / ( DS * Min( ( CS + ( RMSe - MUM ) ) ,RRSe ) ) ),( RCSe / RMSe ) ) ) )", "obj1": 0.9473684210526315, "obj2": 0.025365273411390263}, {"determining": "( Max( Max( RRS,( BR + FirstVNF_RAM ) ),( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / ( MLU / MUC ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.5477582846003899, "obj2": 0.35044238966055263}, {"determining": "( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4346978557504873, "obj2": 0.5002660194572952}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( ( ( MRS - BR ) - AMS ) / Min( FirstVNF_RAM ,Max( ( MRS * FirstVNF_RAM ),PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( RMSe * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.8089668615984406, "obj2": 0.0939262879297301}, {"determining": "( ( DDR / PN ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.746588693957115, "obj2": 0.14747174621472836}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( FirstVNF_RAM_Server / Const ) - MRS ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Max( ( ( MUR - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / ( RCSe / ( Max( ( MLU * ( MUM / MUM ) ),RMSe ) - MLU ) ) ) ) / MLU )", "obj1": 0.6881091617933723, "obj2": 0.20956009185955782}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( PN / MDR ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / Min( FirstVNF_Mem_Server ,( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( Max( MRS,BR ) * BR ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( MUC / RRSe ),Min( ( MUC * DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + ( RMSe * MUM ) ) )", "obj1": 0.39766081871345027, "obj2": 0.557177192976301}, {"determining": "( Max( CRS,( ( PN / AMS ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6413255360623782, "obj2": 0.2542421889027905}, {"determining": "( Max( CRS,( ( ( ( ( PN + FirstVNF_RAM_Server ) - ( MDR / PN ) ) / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RCSe ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.6705653021442495, "obj2": 0.2246711772102233}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6254421339090005}, {"determining": "( Max( Max( RRS,( BR * FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) / Min( MUR ,DS ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5153343389104874}, {"determining": "( Max( CRS,( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU ) / ( MDR / PN ) ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC / Max( ( RRSe / MUC ),Min( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ,MUR ) ) ) ,( RRSe * RMSe ) )", "obj1": 0.4619883040935672, "obj2": 0.4643481967587493}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( ( ( Min( FirstVNF_RAM_Server ,ARS ) * Max( ( ( AMS * ACS ) / ( DDR / RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * ( MRS - FirstVNF_Mem ) ) ) ) / ( Const / DDR ) ) + ACS ) ) - ( MDR + PN ) )", "choosing": "Max( ( ( Min( MLU ,CS ) - CS ) / MUR ),Max( ( RMSe - ( ( MLU * RMSe ) / CS ) ),Max( MUM,Max( ( ( MUC - ( RRSe - CS ) ) + MLU ),( Max( Max( ( MUM - MUC ),MUM ),Min( RRSe ,CS ) ) / MUM ) ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4244796309745758}, {"determining": "( Max( Max( RRS,( BR + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5153343389104874}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( RMSe - CS ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17676895234498013}, {"determining": "( Max( CRS,( ACS + ( PN / ( ( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) - DDR ) * MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,Min( MUR ,RRSe ) ),( ( CS - RMSe ) * Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6428272148508175}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( Min( ( Max( RRSe,( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( MDR * FirstVNF_RAM_Server ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( RCSe * MLU ) / ( Min( CS ,MLU ) - CS ) ),Max( Min( RMSe ,( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( RRSe / MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( ( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( DS,( RRSe - MUC ) ) * MLU ),( MUC + ( DS * Min( MUM ,RRSe ) ) ) ) / RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.4093567251461988, "obj2": 0.5374782417751416}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( ( ( MRS - BR ) - AMS ) / Min( FirstVNF_RAM ,Max( ( MRS * FirstVNF_RAM ),PN ) ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( RMSe * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.8089668615984406, "obj2": 0.0939262879297301}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( ( MDR / FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,FirstVNF_RAM ) / MDR ) ) * ( PN - MDR ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / MUM ) ),Max( DS,DS ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014930914753460204}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7680311890838206, "obj2": 0.12822213907839825}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_Mem_Server ,RRS ) + DDR ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9649122807017544, "obj2": 0.015998097621630375}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( Min( Max( MUC,MUC ) ,MUR ) * MUM ) )", "obj1": 0.557504873294347, "obj2": 0.33483538054047735}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / FirstVNF_Mem ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU - RRSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6834707956350952}, {"determining": "( Max( CRS,( ( Min( Const ,Min( ARS ,FirstVNF_RAM ) ) / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.5964912280701754, "obj2": 0.29638152347585284}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( Max( CS,CS ) * MUC ),( DS / ( MUM - RCSe ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4100015198359218}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( PN - ( ( Max( ( MRS + Const ),AMS ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / ARS ) )", "choosing": "( MLU / ( ( ( MUC + ( DS * Min( ( DS - RCSe ) ,RRSe ) ) ) / MUR ) + ( RMSe / MUC ) ) )", "obj1": 0.6140350877192983, "obj2": 0.27526777029689786}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( Min( ( RMSe / ( MUM * Max( RCSe,( MLU + Max( MUR,CS ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( Max( CRS,( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) * FirstVNF_CPU ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.3723196881091618, "obj2": 0.5949752975445546}, {"determining": "( Max( CRS,( ( PN / ( Max( ( ( MDR + FirstVNF_Mem_Server ) * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( DS * Min( MLU ,RRSe ) ),Min( ( MUM + ( Min( MUR ,RRSe ) / Min( MUM ,( MUC / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9785575048732943, "obj2": 0.01063835180302165}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( DS * Min( MLU ,RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07122514587965605}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4411102218166924}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.6803118908382066, "obj2": 0.2162795169467259}, {"determining": "( Max( CRS,( ( ( ( MDR * ACS ) / ( DDR / PN ) ) / Max( BR,ARS ) ) + ACS ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( Max( RMSe,MUR ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( DS * Max( MLU,MUR ) ) )", "obj1": 0.6530214424951267, "obj2": 0.24150508900354548}, {"determining": "( Max( ( ( PN / ( ( RRS + MDR ) * FirstVNF_CPU ) ) + ACS ),CRS ) - ( MDR / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * RMSe ) ) ) - RRSe ) ,RMSe ) / Min( ( RRSe / MUC ) ,Min( Max( MUC,DS ) ,MUR ) ) ) ,( RMSe / ( RRSe / MUC ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5854070104227129}, {"determining": "( Max( CRS,( ( ( ( ( AMS * BR ) + ( ( PN / MDR ) + ACS ) ) * Max( ( ( MDR * ACS ) / ( DDR + PN ) ),( AMS + ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_CPU_Server / Max( ACS,RRS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MLU * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,CS ) ) ) ,( Max( ( Max( ( CS * ( CS + MUM ) ),( ( ( MUC - MUR ) * RRSe ) / Max( DS,( MUR / MLU ) ) ) ) - ( DS + ( DS - ( DS + MLU ) ) ) ),MUC ) * CS ) )", "obj1": 0.935672514619883, "obj2": 0.031454987515670746}, {"determining": "( Max( ( ( ( ARS * Max( CRS,( ( PN / MDR ) + ACS ) ) ) / ( FirstVNF_Mem_Server * MDR ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( DS * Min( MLU ,RRSe ) ) + RMSe ) ) / ( Max( CS,MUM ) / ( MLU / MUC ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6671498023177546}, {"determining": "( Max( CRS,( ( PN / MDR ) * ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / ( DDR * CRS ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( ( MUC / DS ) ,MUR ) ) ) ,Min( ( RRSe / RRSe ) ,MUC ) )", "obj1": 0.4346978557504873, "obj2": 0.5002660194572952}, {"determining": "( Max( ( ( ( ARS * Max( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ),( ( PN / MDR ) + PN ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Max( ( ( RMSe - ( RCSe + ( DS * ( MUM * Min( Max( MUC,DS ) ,MUR ) ) ) ) ) - Max( MLU,Min( Max( CS,Min( ( ( RCSe / MLU ) - ( DS + RCSe ) ) ,Min( RCSe ,MUC ) ) ) ,( RMSe + MUC ) ) ) ),( Max( Max( ( MUR * ( RCSe / RMSe ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ),Min( MUC ,MUM ) ) - RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.676608428348071}, {"determining": "( Max( ( MRS * Max( ( ARS / FirstVNF_Mem ),FirstVNF_RAM ) ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( FirstVNF_Mem - MRS ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( MUR / ( ( Max( MUC,DS ) - RRSe ) + Max( MLU,MUM ) ) ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.4697855750487329, "obj2": 0.4529088454192807}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS + MUC ) / ( Max( ( MLU * MUM ),MUC ) + ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / ( MUR * MLU ) ) ) )", "obj1": 0.7680311890838206, "obj2": 0.12822213907839825}, {"determining": "( Max( ( ( MRS / PN ) + ACS ),( ( FirstVNF_RAM_Server - PN ) - FirstVNF_RAM ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( ( ( MUR * MLU ) + ( MUC + ( DS * Min( MLU ,DS ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.3001949317738791, "obj2": 0.7003734992043149}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( ( PN / MDR ) + ACS ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.49317738791423, "obj2": 0.4244796309745758}, {"determining": "( Max( CRS,( ( PN / PN ) + ( PN / MDR ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUM ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.4093567251461988, "obj2": 0.5374782417751416}, {"determining": "( Max( CRS,( ( ( PN / ( ( FirstVNF_CPU / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM + ( Max( ( CS + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.36062378167641324, "obj2": 0.6111642562758436}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * ( ( BR / BR ) + FirstVNF_RAM_Server ) ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.2982456140350877, "obj2": 0.705710249603514}, {"determining": "( Max( CRS,( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) * FirstVNF_CPU ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5722542429406813}, {"determining": "( Max( CRS,( ( Min( Const ,Min( ARS ,FirstVNF_RAM ) ) / ( ( ( PN / MDR ) + ACS ) * FirstVNF_RAM_Server ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUM ) ) ) ,CS ) ,( Max( ( MUM - MLU ),( RMSe + ( CS + MUM ) ) ) + Min( MUM ,( ( RCSe - DS ) / ( ( RMSe + RMSe ) * MUR ) ) ) ) ) )", "obj1": 0.6861598440545809, "obj2": 0.21038741418966336}, {"determining": "( Max( CRS,( ARS * Max( CRS,( ( PN / MDR ) + ( FirstVNF_CPU_Server * Min( Const ,RRS ) ) ) ) ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / RMSe ) ) + MUC ) ) - RRSe ),RRSe ) )", "obj1": 0.7368421052631579, "obj2": 0.1572865610613935}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( Max( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ),MDR ) - Max( ( DDR / ( FirstVNF_Mem + FirstVNF_CPU ) ),MDR ) ) + PN ) - FirstVNF_CPU )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( RRSe / ( ( MUC / Max( MUM,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( ACS - Max( ARS,FirstVNF_RAM_Server ) ) ) + FirstVNF_CPU ) ) - Max( DDR,PN ) )", "choosing": "Min( ( Min( ( ( DS * Min( MLU ,RRSe ) ) - Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / MUC ) ),Max( DS,DS ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( ( RRSe + MLU ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4873294346978557, "obj2": 0.43477443137055444}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.4834307992202729, "obj2": 0.43641339896645376}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) ) ) + PN ) - FirstVNF_CPU )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( Max( CS,CS ) * MUC ),( DS / ( MUM - RCSe ) ) ) ) )", "obj1": 0.9571150097465887, "obj2": 0.02025184123501156}, {"determining": "( Max( CRS,( ( PN / ( ( BR + FirstVNF_RAM ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,DS ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.34299986604830435}, {"determining": "( Max( CRS,( ( ( Max( DDR,( BR + DDR ) ) * FirstVNF_CPU ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) - FirstVNF_CPU ) ) + ( DDR + MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RCSe / ( ( MLU * CS ) - ( MUC - CS ) ) ),MUR ),( MUR - MUM ) ) + Min( Min( ( CS + ( Min( MUC ,MUR ) - RCSe ) ) ,CS ) ,( Max( ( DS - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUM * RMSe ) ) ) ),MUC ) + ( MUC + Max( MUR,Max( ( RCSe - MUM ),Max( Min( DS ,RCSe ),( MUR / MUC ) ) ) ) ) ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6896569762010735}, {"determining": "( Max( CRS,( ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( DS * Min( MLU ,RRSe ) ),Min( ( MUM + ( Max( ( CS + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / Min( MUM ,( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( ( ( PN * ACS ) / ( DDR / PN ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( ( MUC / RRSe ),Min( Min( RCSe ,MUR ) ,Min( Max( CS,DS ) ,( ( ( MUR - MUC ) + MUM ) + RMSe ) ) ) ) ) ,( RRSe * MLU ) )", "obj1": 0.3391812865497076, "obj2": 0.6433623390813604}, {"determining": "( Max( ( ( ( ARS * Max( ( ( FirstVNF_Mem_Server - MDR ) + Max( ARS,MDR ) ),( ( PN / MDR ) + PN ) ) ) / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( RMSe - DS ),Max( MUM,( Min( Max( MUC,DS ) ,MUR ) / ( Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) / Max( ( ( RMSe * MUC ) - MUM ),RMSe ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.676608428348071}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.46588693957115007, "obj2": 0.4584439384699575}, {"determining": "( Max( CRS,( ( ( ( ( ( PN / MDR ) + ACS ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MLU * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,MUR ) ) ) ,( Max( ( Max( ( CS * RRSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) )", "obj1": 0.935672514619883, "obj2": 0.031454987515670746}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),MUC )", "obj1": 0.2884990253411306, "obj2": 0.716829650786594}], "24": [{"determining": "( Max( CRS,( ( PN / ( Max( ( ( Const + CRS ) / CRS ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( DS * Min( MLU ,RRSe ) ),Min( ( MUM + ( Min( MUR ,( RCSe / Max( DS,MUM ) ) ) / Min( MUM ,( MUC / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( Min( ( Max( RRSe,( MUC + ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUM ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Max( CS,MUM ) * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( RRS,( BR * FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,( MUC + ( DS * RMSe ) ) ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_Mem_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.8362573099415205, "obj2": 0.08258322566996651}, {"determining": "( Max( CRS,( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) * FirstVNF_CPU ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5722542429406813}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452309}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) / ( MDR / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( MUM + ( Min( MUR ,RRSe ) / Min( MUM ,( MUC / ( RRSe * MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.30948908907631567}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( RCSe - MUM ),Max( Min( DS ,RCSe ),( MUR / MUC ) ) ) + ( RMSe / MUC ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4764651594963947}, {"determining": "( ( DDR / PN ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.746588693957115, "obj2": 0.14747174621472836}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( ( ( MRS - BR ) - AMS ) / Min( FirstVNF_RAM ,Max( ( MRS * FirstVNF_RAM ),PN ) ) ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MLU / MUM ) / ( ( CS - ( CS + ( Max( CS,Min( CS ,RMSe ) ) / ( RMSe / DS ) ) ) ) + RMSe ) )", "obj1": 0.7894736842105263, "obj2": 0.10930095360021928}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,( Max( RRSe,MUM ) + ( Min( Max( MUC,MUC ) ,MUR ) * MUM ) ) ) ,( ( DS * Min( MLU ,RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.8518518518518519, "obj2": 0.07026913556662691}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( Min( DS ,MUC ) ,MLU ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) - ( Max( ( MUR * MLU ),( MUC + ( MUM * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.6881091617933723, "obj2": 0.20742390204851138}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( Min( Min( Const ,ACS ) ,( AMS / ARS ) ) ,( BR / BR ) ) * MDR ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + ( Min( Max( ( MUC * ( CS * Max( MUC,RCSe ) ) ),MUC ) ,MUR ) * MUM ) )", "obj1": 0.5614035087719298, "obj2": 0.33178724396626474}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.797270955165692, "obj2": 0.09882870726689635}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( ( RCSe - Min( MUC ,MUM ) ) + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5015403246802952}, {"determining": "( Max( CRS,( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) + ACS ) ) - ( Min( ( ( CRS * AMS ) * CRS ) ,FirstVNF_RAM_Server ) - Const ) )", "choosing": "Min( ( Min( ( Min( MUM ,( RMSe * MUR ) ) / RMSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( ( RCSe - MUM ) / ( RRSe * MUR ) ) ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.442495126705653, "obj2": 0.4950451400999091}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6803118908382066, "obj2": 0.21549825772760559}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( Max( CRS,( ( PN / AMS ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6413255360623782, "obj2": 0.2542421889027905}, {"determining": "( Max( CRS,( Max( FirstVNF_Mem,Max( Const,Const ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( ( MUM - MLU ),( ( ( MUC - MUR ) - MUM ) + ( CS + MUM ) ) ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5822689722662999}, {"determining": "( Max( CRS,( ( ( ( MDR * ACS ) / ( DDR / PN ) ) / Max( BR,ARS ) ) + ACS ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( Max( RMSe,MUR ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( DS * Max( MLU,MUR ) ) )", "obj1": 0.6530214424951267, "obj2": 0.24150508900354548}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MLU * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,CS ) ) ) ,( Max( ( Max( ( CS * ( CS + MUM ) ),( ( ( MUC - MUR ) * RRSe ) / Max( DS,( MUR / MLU ) ) ) ) - ( DS + ( DS - ( DS + MLU ) ) ) ),MUC ) * CS ) )", "obj1": 0.5730994152046783, "obj2": 0.3208263495693458}, {"determining": "( PN - ( ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.6140350877192983, "obj2": 0.27526777029689786}, {"determining": "( Max( CRS,( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( Max( ( AMS / PN ),Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) + ( ( RRS + FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( Min( MUM ,MUC ) + ( RCSe - Min( MUC ,( ( RCSe + MUM ) * MLU ) ) ) ) ,CS ) ,( Max( ( MUM - MLU ),( RMSe + ( CS + MUM ) ) ) + Min( MUM ,( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.6471734892787524, "obj2": 0.24981832906706866}, {"determining": "( Max( Max( RRS,( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.4171539961013645, "obj2": 0.5236044322920957}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( FirstVNF_RAM_Server / Const ) - MRS ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / ( PN / MDR ) ) )", "choosing": "( ( Max( ( ( MUR - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),( MUC / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / ( RCSe / ( Max( ( MLU * ( MUM / MUM ) ),RMSe ) - MLU ) ) ) ) / MLU )", "obj1": 0.2807017543859649, "obj2": 0.7275687256850425}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.5730994152046783, "obj2": 0.3208263495693458}, {"determining": "( Max( CRS,( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / FirstVNF_CPU ) ) / ( ( MDR - ( FirstVNF_Mem_Server - Max( Const,BR ) ) ) * ( Max( AMS,AMS ) - BR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,( MUC + CS ) ) + Min( Max( RCSe,RMSe ) ,( Max( ( MUM - MLU ),( ( CS + MUM ) + RMSe ) ) + Min( MUM ,( ( DS - RCSe ) / ( RRSe * DS ) ) ) ) ) )", "obj1": 0.45419103313840153, "obj2": 0.4719563389396299}, {"determining": "( Max( ( Min( ACS ,Max( ( ( FirstVNF_RAM_Server * ARS ) * ( FirstVNF_RAM - Min( FirstVNF_CPU_Server ,MDR ) ) ),AMS ) ) + ACS ),CRS ) - ( MDR / CRS ) )", "choosing": "( ( ( MLU + ( RMSe + ( RCSe - MUR ) ) ) + Min( ( Max( RMSe,( MLU + Min( MLU ,DS ) ) ) + Min( RCSe ,Min( ( CS / Max( MUC,CS ) ) ,MUR ) ) ) ,( RRSe - Min( Max( ( ( MUR - RMSe ) - CS ),CS ) ,CS ) ) ) ) - MUC )", "obj1": 0.594541910331384, "obj2": 0.3067250413055258}, {"determining": "( Max( ( ( PN / ( ( RRS + MDR ) * FirstVNF_CPU ) ) + ACS ),CRS ) - ( MDR / ( FirstVNF_Mem_Server + AMS ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * RMSe ) ) ) - RRSe ) ,RMSe ) / Min( ( RRSe / MUC ) ,Min( Max( MUC,DS ) ,MUR ) ) ) ,( RMSe / ( RRSe / MUC ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5854070104227129}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Const * ARS ) ) / MDR ) ) * ( PN - ACS ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( ( MUM * RRSe ) - ( CS + Min( ( CS * Min( CS ,RMSe ) ) ,( RMSe / Max( ( MUM / CS ),( CS + RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8810916179337231, "obj2": 0.05744169991743743}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / ( DDR / PN ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,( DS * Min( MLU ,RRSe ) ) ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.4853801169590643, "obj2": 0.4317947371488137}, {"determining": "( Max( CRS,( ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( MLU + Min( ( RRSe - MUM ) ,( RRSe - Min( Min( CS ,RMSe ) ,Min( ( RMSe * ( RMSe / MLU ) ) ,DS ) ) ) ) ) - CS )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( Max( CRS,( ( PN / Max( CRS,( ( PN / MDR ) + ACS ) ) ) + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( RRS ,MDR ) ) / MDR ) - Max( ( Min( MDR ,AMS ) + ( MDR / PN ) ),MDR ) ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( MUR * MLU ) / CS ) / Min( MUC ,Max( ( RCSe / RMSe ),( DS / ( DS * ( MLU + ( MUR * CS ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.03604786575172893}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_RAM * MDR ) / FirstVNF_RAM ) - ( CRS - Const ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.4600389863547758, "obj2": 0.4632144675422095}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),Max( DS,DS ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.39766081871345027, "obj2": 0.557177192976301}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( DDR + FirstVNF_RAM ) ) ) / ( FirstVNF_CPU / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( RMSe + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.6042884990253411, "obj2": 0.28998755431764633}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( CRS * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Max( CRS,( ( PN / PN ) + ACS ) ) - ( MDR / PN ) ) ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * AMS ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( ( ( RRSe / MLU ) * MUR ) ,MLU ) ),Min( MUC ,RMSe ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.4951267056530214, "obj2": 0.41412737915378445}, {"determining": "( Max( CRS,( Max( ( MRS * FirstVNF_RAM ),PN ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( Min( Max( ( DS * Min( MLU ,RRSe ) ),MUC ) ,MUR ) * MUM ) )", "obj1": 0.6354775828460039, "obj2": 0.26301048292249757}, {"determining": "( Max( CRS,( ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( RRSe ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3333333333333333, "obj2": 0.652950176981464}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( MDR / PN ) ) ) + PN ) - FirstVNF_CPU )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ),Max( MUM,( RRSe / ( ( MLU / Max( DS,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.8869395711500975, "obj2": 0.05442381112671869}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) / ( MDR / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) )", "choosing": "Min( MUC ,Min( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) ,RRSe ) )", "obj1": 0.7699805068226121, "obj2": 0.1270696264039446}, {"determining": "( ( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( DS,( RRSe - MUC ) ) * MLU ),( MUC + ( DS * Min( MUM ,RRSe ) ) ) ) / RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.4093567251461988, "obj2": 0.5374782417751416}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( PN / MDR ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / Min( FirstVNF_Mem_Server ,( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( Max( MRS,BR ) * BR ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( MUC / RRSe ),Min( ( MUC * DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + ( RMSe * MUM ) ) )", "obj1": 0.39766081871345027, "obj2": 0.557177192976301}, {"determining": "( ACS - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( MLU ,RRSe ) ) ) ,( MUR * CS ) )", "obj1": 0.7387914230019493, "obj2": 0.15633055074836433}, {"determining": "( Max( ( RRS - FirstVNF_RAM ),( Min( PN ,( ( ( ( FirstVNF_Mem + ACS ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) ) + CRS ) ) - Max( ARS,Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( Min( MUC ,RRSe ) ,( MLU + ( MUR * ( Min( Min( Max( ( MUC / DS ),RRSe ) ,RMSe ) ,Max( ( ( MLU * RMSe ) + DS ),Max( RRSe,RMSe ) ) ) - RCSe ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6751775620543656}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( ( FirstVNF_RAM / FirstVNF_Mem ) / ACS ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.6744639376218323, "obj2": 0.2229983345511597}, {"determining": "( Max( CRS,( ( Min( Const ,Min( ARS ,FirstVNF_RAM ) ) / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.5964912280701754, "obj2": 0.29638152347585284}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( ( ( Max( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ),MDR ) - Max( ( DDR / ( FirstVNF_Mem + FirstVNF_CPU ) ),MDR ) ) + PN ) - FirstVNF_CPU )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( RRSe / ( ( MUC / Max( MUM,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( PN - ( ( ( ( Min( FirstVNF_Mem ,ACS ) * PN ) / DDR ) * ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),Max( DS,DS ) ) - Max( DS,( ( ( MLU / MUM ) - ( RCSe - RCSe ) ) - ( MUR + DS ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6140350877192983, "obj2": 0.27526777029689786}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( ( ( Min( FirstVNF_RAM_Server ,ARS ) * Max( ( ( AMS * ACS ) / ( DDR / RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * ( MRS - FirstVNF_Mem ) ) ) ) / ( Const / DDR ) ) + ACS ) ) - ( MDR + PN ) )", "choosing": "Max( ( ( Min( MLU ,CS ) - CS ) / MUR ),Max( ( RMSe - ( ( MLU * RMSe ) / CS ) ),Max( MUM,Max( ( ( MUC - ( RRSe - CS ) ) + MLU ),( Max( Max( ( MUM - MUC ),MUM ),Min( RRSe ,CS ) ) / MUM ) ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4244796309745758}, {"determining": "( Max( CRS,( ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( MUC + ( DS * Min( MLU ,RRSe ) ) ),Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) + ( RMSe / MUC ) ) )", "obj1": 0.6588693957115009, "obj2": 0.23681686369336954}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "Min( ( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) / Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RCSe ) ,RMSe ) ) ,( Max( Min( MLU ,RMSe ),MUR ) + MUM ) )", "obj1": 0.40350877192982454, "obj2": 0.5452989260421119}, {"determining": "( Max( ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) + ACS ),( ( FirstVNF_RAM_Server - PN ) - FirstVNF_RAM ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( ( ( MUR * MLU ) + ( MUC + ( DS * Min( MLU ,DS ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( Max( MUC,DS ) + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.2962962962962963, "obj2": 0.7140833912626418}, {"determining": "( Max( Max( RRS,( BR * FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) / Min( MUR ,DS ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5153343389104874}, {"determining": "( ( RRS / MDR ) - Max( FirstVNF_RAM,( FirstVNF_RAM_Server / ( MDR / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUM + ( Max( ( CS + ( Min( Min( RCSe ,RMSe ) ,MUC ) / MLU ) ),( MUC / RCSe ) ) / ( RRSe - MUR ) ) ) ,( MUR + CS ) )", "obj1": 0.3586744639376218, "obj2": 0.6171238063790944}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( DDR * FirstVNF_CPU ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( Max( ( CS - DS ),( RCSe / RRSe ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( RMSe - CS ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.17250934457599781}, {"determining": "( Max( CRS,( ( ( ( ( RRS * FirstVNF_Mem_Server ) * ARS ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( MUC * Min( ( Min( RCSe ,RCSe ) * CS ) ,CS ) ) + Min( RCSe ,RMSe ) ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( MUR * RRSe ) ) ) ) ) ,( MUM * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6065758280977287}, {"determining": "( Max( Max( RRS,( BR + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( DS * Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5153343389104874}, {"determining": "( Max( ( ( DDR * MDR ) / FirstVNF_RAM ),( ( BR / ( ( ( CRS - MDR ) - ( PN - ( AMS / PN ) ) ) + Max( FirstVNF_CPU_Server,Max( CRS,DDR ) ) ) ) + BR ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ) + MUC ) + ( Max( ( MUC * MLU ),( ( CS / ( MUC - RCSe ) ) + ( Max( ( MUC - RRSe ),( RCSe / MUC ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.7056530214424951, "obj2": 0.19293235882614193}, {"determining": "( ( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.7017543859649122, "obj2": 0.1960197266867003}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( MUC + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.5107212475633528, "obj2": 0.3909662519957801}, {"determining": "( Max( CRS,( ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( MUC + ( DS * Min( MLU ,RRSe ) ) ),Max( MUR,( Min( MUR ,MLU ) - RCSe ) ) ) + ( RMSe / MUC ) ) )", "obj1": 0.6588693957115009, "obj2": 0.23681686369336954}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6229816137452534}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + PN ) - FirstVNF_CPU )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( DS - DS ),Max( MUM,( RRSe / ( ( MLU / Max( DS,MUR ) ) + MUM ) ) ) ) )", "obj1": 0.8713450292397661, "obj2": 0.060862401281902845}, {"determining": "( Max( CRS,( ( ( ( ( PN + FirstVNF_RAM_Server ) - ( MDR / PN ) ) / FirstVNF_Mem ) / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),MUC )", "obj1": 0.6705653021442495, "obj2": 0.2246711772102233}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6254421339090005}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6861598440545809, "obj2": 0.20933546199198402}, {"determining": "( ( Min( FirstVNF_Mem_Server ,RRS ) + DDR ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014440847850735634}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * ( ( PN - AMS ) * FirstVNF_Mem ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( ( ( ( RRSe * DS ) * ( MLU + RRSe ) ) * Min( Min( DS ,RCSe ) ,RRSe ) ) ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( FirstVNF_RAM_Server / Const ) - MRS ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Max( ( ( MUR - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / ( RCSe / ( Max( ( MLU * ( MUM / MUM ) ),RMSe ) - MLU ) ) ) ) / MLU )", "obj1": 0.7095516569200779, "obj2": 0.18699009192914312}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( Max( Const,FirstVNF_CPU ),( AMS * ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( ( ( MUR + RRSe ) / MLU ),( ( CS + MLU ) + ( Max( Min( ( MUC - MUC ) ,MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4411102218166924}, {"determining": "( Max( ( MRS * Max( ( ARS / FirstVNF_Mem ),FirstVNF_RAM ) ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( FirstVNF_Mem - MRS ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( ( MUR / ( ( Max( MUC,DS ) - RRSe ) + Max( MLU,MUM ) ) ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.4697855750487329, "obj2": 0.4529088454192807}, {"determining": "( Max( CRS,( ( PN / PN ) + ( PN / MDR ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUM ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.4093567251461988, "obj2": 0.5374782417751416}, {"determining": "( Max( CRS,( ARS * Max( CRS,( ( PN / MDR ) + ( FirstVNF_CPU_Server * Min( Const ,RRS ) ) ) ) ) ) - ( ( MDR / FirstVNF_RAM_Server ) / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / RMSe ) ) + MUC ) ) - RRSe ),RRSe ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442255}, {"determining": "( Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_CPU_Server / ( ( MRS - FirstVNF_CPU ) - AMS ) ) ) ) - ( DDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / MUM ) ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6311427016034251}, {"determining": "( Max( CRS,( ACS + ( PN / ( ( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) - DDR ) * MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,Min( MUR ,RRSe ) ),( ( CS - RMSe ) * Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6428272148508175}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( MDR * FirstVNF_RAM_Server ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( RCSe * MLU ) / ( Min( CS ,MLU ) - CS ) ),Max( Min( RMSe ,( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( RRSe / MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( Max( CRS,( ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.6335282651072125, "obj2": 0.26672724853151947}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( CRS * MDR ) / PN ) - ( CRS - Const ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( FirstVNF_RAM_Server * Max( ARS,Const ) ) )", "choosing": "Max( Max( RCSe,Min( MUR ,RRSe ) ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( ( RCSe - MUM ) / ( MUC * RRSe ) ) + MUR ) ) ) ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6500369025813648}, {"determining": "( ( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.7017543859649122, "obj2": 0.1960197266867003}, {"determining": "( ( ( Max( ( ( FirstVNF_RAM_Server - Const ) + CRS ),MDR ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) / MDR ) / MDR ) ) + PN ) - ( ( ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / PN ) ) / PN ) ) / ( ( ( FirstVNF_CPU_Server / AMS ) - ( Max( BR,PN ) - MDR ) ) + PN ) ) + ACS ) )", "choosing": "Min( ( Min( ( ( ( MUR * MLU ) + ( MUC + ( DS * Min( MLU ,DS ) ) ) ) - RRSe ) ,RMSe ) / Max( ( MUR + MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( DS * RCSe ) * Min( MLU ,Min( RMSe ,( ( CS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.8947368421052632, "obj2": 0.050971003873109634}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( DS * Min( MLU ,RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.557504873294347, "obj2": 0.33383631744688913}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( DS * Min( MLU ,RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07122514587965605}, {"determining": "( Max( ( ARS * FirstVNF_RAM ),( ( PN / ( Max( ( Min( RRS ,MDR ) * FirstVNF_CPU ),FirstVNF_CPU_Server ) * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( Max( CS,( Min( ( ( MUR / MUC ) * RMSe ) ,RCSe ) * Min( ( DS / Max( RMSe,MLU ) ) ,RRSe ) ) ) / ( ( RCSe * DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.4697855750487329, "obj2": 0.4529088454192807}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4411102218166924}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MLU ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}], "25": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( Max( ( ( Const + CRS ) / CRS ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( DS * Min( MLU ,RRSe ) ),Min( ( MUM + ( Min( MUR ,( RCSe / Max( DS,MUM ) ) ) / Min( MUM ,( MUC / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / AMS ) + ACS ) ) - ( ( MDR / FirstVNF_RAM_Server ) / ( MDR / PN ) ) )", "choosing": "Min( ( CS / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( Min( FirstVNF_Mem_Server ,RRS ) + DDR ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014440847850735634}, {"determining": "( Max( CRS,( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) + ACS ) ) - ( Min( ( ( CRS * AMS ) * CRS ) ,FirstVNF_RAM_Server ) - Const ) )", "choosing": "Min( ( Min( ( Min( MUM ,( RMSe * MUR ) ) / RMSe ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / ( ( RCSe - MUM ) / ( RRSe * MUR ) ) ),Min( MUC ,MUR ) ) ) ,Min( RRSe ,Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) ) )", "obj1": 0.442495126705653, "obj2": 0.4950451400999091}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( CRS * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Max( CRS,( ( PN / PN ) + ACS ) ) - ( MDR / PN ) ) ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * AMS ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( ( ( RRSe / MLU ) * MUR ) ,MLU ) ),Min( MUC ,RMSe ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.4951267056530214, "obj2": 0.41412737915378445}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( FirstVNF_Mem - MRS ) ) ) ) / ( FirstVNF_Mem_Server - Max( ( AMS + RRS ),MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Max( ( CS - MLU ),MUC ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( RRSe / MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RCSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.35384359350080347}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( MDR * FirstVNF_RAM_Server ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) + ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( Const,ARS ) ) - PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,Max( MLU,MUM ) ),( ( Min( RCSe ,RRSe ) - MUM ) * Max( CS,CS ) ) ) / ( Max( CS,MUM ) / Max( ( ( RCSe - CS ) / RMSe ),( RMSe + RMSe ) ) ) )", "obj1": 0.8206627680311891, "obj2": 0.08789133553976032}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( ( RCSe - Min( MUC ,MUM ) ) + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.50682261208577, "obj2": 0.399786207976158}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.10930095360021926}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( Min( Min( Const ,ACS ) ,( AMS / ARS ) ) ,( BR / BR ) ) * MDR ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + ( Min( Max( ( MUC * ( CS * Max( MUC,RCSe ) ) ),MUC ) ,MUR ) * MUM ) )", "obj1": 0.5614035087719298, "obj2": 0.33178724396626474}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( DDR + FirstVNF_RAM ) ) ) / ( FirstVNF_CPU / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( RMSe + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.6042884990253411, "obj2": 0.28998755431764633}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452309}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( DS * Min( MLU ,RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.557504873294347, "obj2": 0.33383631744688913}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_Mem ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) / FirstVNF_Mem ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( CS * CS ) ) )", "obj1": 0.6705653021442495, "obj2": 0.22253449882539014}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( ( ( Min( FirstVNF_RAM_Server ,ARS ) * Max( ( ( AMS * ACS ) / ( DDR / RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * ( MRS - FirstVNF_Mem ) ) ) ) / ( Const / DDR ) ) + ACS ) ) - ( MDR + PN ) )", "choosing": "Max( ( ( Min( MLU ,CS ) - CS ) / MUR ),Max( ( RMSe - ( ( MLU * RMSe ) / CS ) ),Max( MUM,Max( ( ( MUC - ( RRSe - CS ) ) + MLU ),( Max( Max( ( MUM - MUC ),MUM ),Min( RRSe ,CS ) ) / MUM ) ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4244796309745758}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) / ( MDR / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( MUM + ( Min( MUR ,RRSe ) / Min( MUM ,( MUC / ( RRSe * MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5867446393762183, "obj2": 0.30948908907631567}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( PN / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( MUC + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.5107212475633528, "obj2": 0.3909662519957801}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * RMSe ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( Max( CRS,( ( ( ( ( RRS * FirstVNF_Mem_Server ) * ARS ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( MUC * Min( ( Min( RCSe ,RCSe ) * CS ) ,CS ) ) + Min( RCSe ,RMSe ) ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( MUR * RRSe ) ) ) ) ) ,( MUM * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6065758280977287}, {"determining": "( Max( CRS,( ( ( ( Min( ( ACS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) * FirstVNF_CPU ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( DS * Min( MLU ,RRSe ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3937621832358674, "obj2": 0.5685408031558871}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( PN - ( ( ( ( CRS + FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ),MDR ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( ( RRSe / ( ( MUC / Max( MUM,MUR ) ) + MUM ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( ( RRS / MDR ) - Max( FirstVNF_RAM,( FirstVNF_RAM_Server / ( MDR / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUM + ( Max( ( CS + ( Min( Min( RCSe ,RMSe ) ,MUC ) / MLU ) ),( MUC / RCSe ) ) / ( RRSe - MUR ) ) ) ,( MUR + CS ) )", "obj1": 0.3586744639376218, "obj2": 0.6171238063790944}, {"determining": "( Max( ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( DS * ( RRSe * DS ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MLU ) )", "obj1": 0.43079922027290446, "obj2": 0.5087576431663371}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( ( PN + ( ( ( Max( MDR,PN ) - MDR ) / MDR ) - Max( MDR,( ( Min( ( ARS * FirstVNF_Mem ) ,( FirstVNF_RAM / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * ( ( FirstVNF_Mem / CRS ) * RRS ) ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUR / MLU ) / ( MUR - ( MUC + Min( RRSe ,Max( RRSe,MUM ) ) ) ) ) - CS ) / ( RMSe + ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.0979275370049426}, {"determining": "( Max( CRS,( ( ( ( MDR * ACS ) / ( DDR / PN ) ) / Max( BR,ARS ) ) + ACS ) ) - Min( MDR ,PN ) )", "choosing": "Min( ( Max( RMSe,MUR ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( DS * Max( MLU,MUR ) ) )", "obj1": 0.6530214424951267, "obj2": 0.24150508900354548}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5906432748538012, "obj2": 0.30091535211314324}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / FirstVNF_Mem_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.8362573099415205, "obj2": 0.08258322566996651}, {"determining": "( Max( CRS,( ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( MRS * FirstVNF_RAM ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( ( MUC + ( DS * Min( MLU ,RRSe ) ) ) / MUC ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),RRSe ) * Min( RRSe ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.3333333333333333, "obj2": 0.652950176981464}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM * MDR ) / ( ( ( MDR / FirstVNF_RAM_Server ) + Max( FirstVNF_Mem,Max( MRS,Const ) ) ) * FirstVNF_RAM_Server ) ) + AMS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) - ( Min( ( MUR * MLU ) ,( Min( Min( MLU ,DS ) ,MLU ) / ( ( ( MUR * MUR ) + CS ) + CS ) ) ) / MUC ) ) )", "obj1": 0.6471734892787524, "obj2": 0.24796642050286616}, {"determining": "( Max( CRS,( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( Min( MUM ,MLU ) ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6627104748729612}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Const * ARS ) ) / MDR ) ) * ( PN - ACS ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( ( MUM * RRSe ) - ( CS + Min( ( CS * Min( CS ,RMSe ) ) ,( RMSe / Max( ( MUM / CS ),( CS + RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8810916179337231, "obj2": 0.05744169991743743}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( Max( FirstVNF_RAM_Server,ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - DDR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.935672514619883, "obj2": 0.033611837155744895}, {"determining": "( Max( CRS,( ( ( PN / ( ARS * FirstVNF_Mem ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM + ( Max( ( CS + ( Min( MUC ,MUR ) / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.34307992202729043, "obj2": 0.6424225620324951}, {"determining": "( Max( CRS,( ( PN / PN ) + ( PN / MDR ) ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.41325536062378165, "obj2": 0.5359875005326932}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( ACS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( Min( ( MLU - ( ( ( MUM - ( CS + ( RCSe + RCSe ) ) ) - Min( RRSe ,( RRSe + RRSe ) ) ) - ( MUC / MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( MUR * RRSe ) ) ) ) )", "obj1": 0.4756335282651072, "obj2": 0.4460495505107163}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.797270955165692, "obj2": 0.09882870726689633}, {"determining": "( ( ( BR / ( MDR / PN ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( CS - ( RMSe / ( ( MUR / DS ) + MUR ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.1846976232678092}, {"determining": "( Max( CRS,( ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( BR / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( MUC + ( DS * Min( MLU ,RRSe ) ) ),Max( MUR,( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ) + ( RMSe / MUC ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16503740870839786}, {"determining": "( Max( CRS,( ( PN / Max( RRS,( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * RMSe ) ) ) - RRSe ) ,Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.30214424951267055, "obj2": 0.6991896541296941}, {"determining": "( ( MDR / PN ) - Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( Max( CRS,ARS ) / ( ACS + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) )", "choosing": "Min( ( Min( ( Max( Min( MLU ,( DS * DS ) ),Max( DS,DS ) ) - ( DS * Min( MLU ,MUC ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4764651594963947}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6881091617933723, "obj2": 0.20647232608041174}, {"determining": "( Max( FirstVNF_Mem,MRS ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( ( RRSe + ( Min( ( RRSe / MUC ) ,( Min( ( DS / MUC ) ,( DS / MUC ) ) + MUC ) ) / ( ( DS / RRSe ) / MLU ) ) ) + MUC ) )", "obj1": 0.3723196881091618, "obj2": 0.5897176470210028}, {"determining": "( PN - ( ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( FirstVNF_Mem_Server * ( ( BR + FirstVNF_RAM ) / ( ARS * DDR ) ) ) + FirstVNF_RAM_Server ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( RMSe ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.9941520467836257, "obj2": 0.0027035107858611987}, {"determining": "( ( ( RRS - ( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( AMS - DDR ) )", "choosing": "( MLU / ( DS - DS ) )", "obj1": 0.46588693957115007, "obj2": 0.4601571436811583}, {"determining": "( Max( CRS,( ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,( MUC + CS ) ) + Min( Max( RCSe,RMSe ) ,( Max( ( MUM - MLU ),( ( CS + MUM ) + RMSe ) ) + Min( MUM ,( ( DS - RCSe ) / ( RRSe * DS ) ) ) ) ) )", "obj1": 0.6647173489278753, "obj2": 0.2340036728053576}, {"determining": "( Max( CRS,( ( ( ( BR + FirstVNF_RAM ) / Min( MRS ,( Min( FirstVNF_CPU_Server ,MRS ) * FirstVNF_Mem_Server ) ) ) / PN ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( ( MUC - MUC ) - MUM ),( MLU - MUC ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ,( ( ( RCSe * DS ) * Min( ( ( Max( MUC,MUR ) * DS ) / MUR ) ,( RMSe - ( ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.7192982456140351, "obj2": 0.17567546061594336}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( Min( MUM ,( DS / ( RRSe * MUR ) ) ),Max( Min( DS ,RCSe ),( MUR / MUC ) ) ) + ( RMSe / MUC ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3784683638885377}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( MDR * FirstVNF_RAM_Server ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "( ( ( MLU + ( RMSe + ( RCSe - MUR ) ) ) + Min( ( Max( RMSe,( MLU + Min( MLU ,DS ) ) ) + Min( RCSe ,Min( ( CS / Max( MUC,CS ) ) ,MUR ) ) ) ,( RRSe - Min( Max( ( ( MUR - RMSe ) - CS ),CS ) ,CS ) ) ) ) - MUC )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( DDR / PN ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.746588693957115, "obj2": 0.14747174621472836}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( ( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19882159098678165}, {"determining": "( ( DDR / PN ) - ( AMS * Min( FirstVNF_Mem ,RRS ) ) )", "choosing": "Max( Max( Max( RMSe,CS ),Max( ( ( CS + MLU ) / Min( RMSe ,( ( DS * ( MUR * DS ) ) + MUR ) ) ),MUM ) ),Max( RCSe,DS ) )", "obj1": 0.3001949317738791, "obj2": 0.7124914342038915}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( MDR / PN ) ) ) + MDR ) - FirstVNF_CPU )", "choosing": "Max( Max( RCSe,Min( CS ,RMSe ) ),Max( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ),Max( MUM,( RRSe / ( ( RRSe / MUC ) + MUM ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276318}, {"determining": "( Max( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.3996101364522417, "obj2": 0.5531278473425479}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( ( ( MUR + RRSe ) / MLU ),( ( CS + MLU ) + ( Max( Min( ( MUC - MUC ) ,MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5789473684210527, "obj2": 0.3160811670120193}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / ( DDR / PN ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.4853801169590643, "obj2": 0.4317947371488137}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe / ( MUM * Max( RCSe,( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( DS / RMSe ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5015403246802952}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),( MUR + RRSe ) ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7719298245614035, "obj2": 0.12649573545159376}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.6861598440545809, "obj2": 0.20933546199198402}, {"determining": "( ( MDR / PN ) - Max( ( FirstVNF_CPU + CRS ),( ( ( ( FirstVNF_Mem_Server - ( AMS * PN ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) )", "choosing": "Min( ( ( ( RCSe * DS ) * Min( ( MUM - ( RRSe / MLU ) ) ,MUM ) ) + MUC ) ,( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUM ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe * MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.6764132553606238, "obj2": 0.21818021098485352}, {"determining": "( ( ( BR / ( FirstVNF_Mem_Server * ( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,( MLU / MUC ) ) ) ) )", "obj1": 0.7446393762183235, "obj2": 0.15078975747132634}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_Mem ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / FirstVNF_Mem ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( MUR * CS ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6751775620543656}, {"determining": "( Max( ( RRS - FirstVNF_RAM ),( Min( PN ,( ( ( ( FirstVNF_Mem + ACS ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) / FirstVNF_Mem ) ) + CRS ) ) - Max( ARS,Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( Min( MUC ,RRSe ) ,( MLU + ( MUR * ( Min( Min( Max( ( MUC / DS ),RRSe ) ,RMSe ) ,Max( ( ( MLU * RMSe ) + DS ),Max( RRSe,RMSe ) ) ) - RCSe ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6751775620543656}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( RRSe / MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.36579533034468287}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MLU * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( Max( MUC,CS ) ,MLU ) ),Min( MUC ,CS ) ) ) ,( Max( ( Max( ( CS * ( CS + MUM ) ),( ( ( MUC - MUR ) * RRSe ) / Max( DS,( MUR / MLU ) ) ) ) - ( DS + ( DS - ( DS + MLU ) ) ) ),MUC ) * CS ) )", "obj1": 0.5730994152046783, "obj2": 0.3208263495693458}, {"determining": "( Max( CRS,( ( PN / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.6335282651072125, "obj2": 0.2639116531844514}, {"determining": "( Max( CRS,( Max( FirstVNF_Mem,Max( Const,Const ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( ( MUM - MLU ),( ( ( MUC - MUR ) - MUM ) + ( CS + MUM ) ) ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5822689722662999}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( DS * Min( MLU ,RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07122514587965605}, {"determining": "( Max( CRS,( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) * FirstVNF_CPU ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( FirstVNF_CPU / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( MUM - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( Max( BR,PN ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.5730994152046783, "obj2": 0.3208263495693458}, {"determining": "( Max( CRS,( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( Min( MUM ,MLU ) + ( RCSe - Min( MUC ,MUM ) ) ) ,CS ) ,( Max( ( MUM - MLU ),( RMSe + ( CS + MUM ) ) ) + Min( MUM ,( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.46928484248311125}, {"determining": "( Max( ( MDR / PN ),( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( Min( Min( Const ,ACS ) ,( AMS / ARS ) ) ,( BR / BR ) ) * MDR ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RMSe,MUM ) + ( Min( Max( ( MUC * ( CS * Max( MUC,RCSe ) ) ),MUC ) ,( MUC * ( CS * Max( MUC,RCSe ) ) ) ) * MUM ) )", "obj1": 0.3157894736842105, "obj2": 0.6858141420831786}, {"determining": "( Max( Max( RRS,( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ),( ( PN / MDR ) + ACS ) ) - ( ( ( Max( ( ( FirstVNF_RAM_Server - Const ) + CRS ),MDR ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) / MDR ) / MDR ) ) + PN ) / PN ) )", "choosing": "( Max( ( ( ( MUR * MLU ) + ( MUC + ( DS * Min( MLU ,DS ) ) ) ) - RRSe ),( RMSe + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.28460038986354774, "obj2": 0.722451701814707}, {"determining": "( Max( ( ( CRS - Min( Const ,( ( DDR / MDR ) - FirstVNF_RAM ) ) ) - RRS ),( ( DDR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + MUC ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.4171539961013645, "obj2": 0.5236044322920957}, {"determining": "( ( ( Max( CRS,( ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) + ( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( RCSe + MUR ) / ( ( Max( MUC,DS ) - RRSe ) + Max( MLU,RCSe ) ) ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( Max( RRS,( ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / ( DS * Min( MLU ,RRSe ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.4191033138401559, "obj2": 0.5207273284250553}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( FirstVNF_RAM_Server / Const ) - MRS ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Max( ( ( MUR - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / ( RCSe / ( Max( ( MLU * ( MUM / MUM ) ),RMSe ) - MLU ) ) ) ) / MLU )", "obj1": 0.7095516569200779, "obj2": 0.18699009192914312}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( FirstVNF_RAM_Server / Const ) - MRS ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / ( PN / MDR ) ) )", "choosing": "( ( Max( ( ( MUR - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),( MUC / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / ( RCSe / ( Max( ( MLU * ( MUM / MUM ) ),RMSe ) - MLU ) ) ) ) / MLU )", "obj1": 0.2807017543859649, "obj2": 0.7275687256850425}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * ( ( PN - AMS ) * FirstVNF_Mem ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( ( ( ( RRSe * DS ) * ( MLU + RRSe ) ) * Min( Min( DS ,RCSe ) ,RRSe ) ) ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6458131666605091}, {"determining": "( Max( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.40350877192982454, "obj2": 0.5452989260421119}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / PN ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,( Max( RRSe,MUM ) + ( Min( Max( MUC,( ( DS - MUR ) * RRSe ) ) ,MUR ) * MUM ) ) ) ,( ( DS * Min( MLU ,RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.8557504873294347, "obj2": 0.06864050380355514}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( Max( CRS,( ACS + ( PN / ( ( Min( ARS ,Max( FirstVNF_RAM_Server,BR ) ) - DDR ) * MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,Min( MUR ,RRSe ) ),( ( CS - RMSe ) * Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6625070129415251}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( MLU / ( Max( ( RCSe - MUM ),Max( Min( DS ,RCSe ),( MUR / MUC ) ) ) + ( RMSe / MUC ) ) )", "obj1": 0.39766081871345027, "obj2": 0.557177192976301}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),MDR ) ) ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( MLU,MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) )", "obj1": 0.31189083820662766, "obj2": 0.6898157004507076}], "26": [{"determining": "Max( ( FirstVNF_Mem_Server / ( PN - ( ( ( Const + CRS ) / CRS ) * FirstVNF_CPU_Server ) ) ),( FirstVNF_CPU + ARS ) )", "choosing": "Max( Max( RCSe,( MLU / Max( ( DS / MUR ),( ( Max( MUR,DS ) / ( RCSe / Max( DS,MUM ) ) ) * DS ) ) ) ),Max( ( RMSe - CS ),Max( Min( ( CS + MLU ) ,( Max( ( ( MUC * MUC ) - MUM ),CS ) / ( RMSe + ( Min( MUR ,MLU ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( CRS - ( MDR / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( ( DS + MUM ) / DS ) + RMSe ) / ( ( RRSe + ( Min( ( ( Max( CS,CS ) * Min( MLU ,RRSe ) ) / MUC ) ,( Min( ( DS / MUC ) ,( DS / MUC ) ) + MUC ) ) / ( ( DS / RRSe ) + MLU ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) ) + ACS ) ) - ( MDR / ( Max( BR,PN ) + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( Min( MUM ,MLU ) + ( RCSe - Min( MUC ,MUM ) ) ) ,CS ) ,Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7306408737721249}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( PN - ( ( ( ( CRS + FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ),MDR ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( ( RRSe / ( ( MUC / Max( MUM,MUR ) ) + MUM ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( RRS / MDR ) - Max( FirstVNF_RAM,( FirstVNF_RAM_Server / ( MDR / Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUM + ( Max( ( CS + ( Min( Min( RCSe ,RMSe ) ,MUC ) / MLU ) ),( MUC / RCSe ) ) / ( RRSe - MUR ) ) ) ,( MUR + CS ) )", "obj1": 0.3586744639376218, "obj2": 0.6171238063790944}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( MDR / PN ) ) ) + ( MDR / PN ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RCSe,( Max( CS,MUM ) / Max( ( ( RCSe - RMSe ) / RMSe ),( RMSe + RMSe ) ) ) ),Max( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ),Max( MUM,( RRSe / ( ( RRSe / MUC ) + MUM ) ) ) ) )", "obj1": 0.8693957115009746, "obj2": 0.06176357154385659}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.3366377210643848}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( MDR * FirstVNF_RAM_Server ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "( Max( RRSe,( MUC + CS ) ) + Min( Max( RCSe,RMSe ) ,( Max( ( MUM - MLU ),( ( CS + MUM ) + RMSe ) ) + Min( MUM ,( ( DS - RCSe ) / ( RRSe * DS ) ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( ( ( CRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - MRS ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( CS - Min( CS ,MLU ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / MUM ) ),Max( MUM,( MLU + MLU ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6308253873665105}, {"determining": "( Max( ( Max( CRS,( ( ( ( FirstVNF_Mem + ACS ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),Min( Min( Max( ( MUC / DS ),RRSe ) ,RMSe ) ,Max( ( ( MLU * RMSe ) + DS ),Max( RRSe,RMSe ) ) ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8304093567251462, "obj2": 0.08185679112605991}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Const * ARS ) ) / MDR ) ) * ( PN - ACS ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( ( MUM * RRSe ) - ( CS + Min( ( CS * Min( CS ,RMSe ) ) ,( RMSe / Max( ( MUM / CS ),( CS + RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8810916179337231, "obj2": 0.05744169991743743}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( ( Min( FirstVNF_Mem_Server ,RRS ) + DDR ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014440847850735634}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( Min( CRS ,( ( PN / ( Max( ( MRS * ( FirstVNF_RAM_Server * MRS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + CRS ) ) - ( DDR / PN ) )", "choosing": "( ( ( ( CS * MUM ) + ( DS - MLU ) ) * Max( ( MUM - MLU ),RRSe ) ) / Max( ( RCSe + MLU ),Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04496761478465183}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( DDR + FirstVNF_RAM ) ) ) / ( FirstVNF_CPU / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( RMSe + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.6042884990253411, "obj2": 0.28998755431764633}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452309}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5906432748538012, "obj2": 0.30091535211314324}, {"determining": "( Max( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / ( PN + DDR ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),RCSe ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.4444444444444444, "obj2": 0.494893444678879}, {"determining": "( Max( CRS,( ( ( PN / ( ARS * ( ( PN / PN ) + ( PN / MDR ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM + ( Max( ( CS + ( Min( MUC ,MUR ) / MLU ) ),( MUC / MLU ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( Max( CRS,( ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / PN ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( DS * ( RCSe / RMSe ) ),Max( DS,DS ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6374269005847953, "obj2": 0.2584033943739804}, {"determining": "( ( ( RRS - ( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( AMS - DDR ) )", "choosing": "( MLU / ( DS - DS ) )", "obj1": 0.46588693957115007, "obj2": 0.4601571436811583}, {"determining": "( Max( CRS,( Max( FirstVNF_Mem,Max( Const,Const ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( ( MUM - MLU ),( ( ( MUC - MUR ) - MUM ) + ( CS + MUM ) ) ) / ( Min( Max( MUC,DS ) ,( Min( MUM ,MLU ) + MUR ) ) / MUC ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5822689722662999}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( Max( CRS,( ( ( ( ( RRS * FirstVNF_Mem_Server ) * ARS ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( MUC * Min( ( Min( RCSe ,RCSe ) * CS ) ,CS ) ) + Min( RCSe ,RMSe ) ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( MUR * RRSe ) ) ) ) ) ,( MUM * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6065758280977287}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( MLU / ( Max( ( RCSe - MUM ),Max( Min( DS ,RCSe ),( MUR / MUC ) ) ) + ( RMSe / ( MUC - MLU ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5665761066084665}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ARS / Max( ACS,RRS ) ) - ( ( ( ( Const * RRS ) * AMS ) - CRS ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Min( Max( Max( Min( MUR ,( Max( RMSe,DS ) * ( MUC / Min( RMSe ,CS ) ) ) ),( CS - RRSe ) ),MUM ) ,( MUR * MUM ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( Max( ( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,ARS ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( DS + MUC ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.2403545573537191}, {"determining": "( Max( CRS,( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) * FirstVNF_CPU ) / ( Min( ( ARS * Min( FirstVNF_Mem_Server ,RRS ) ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( FirstVNF_CPU / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( MUM + CS ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( MUM - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.9785575048732943, "obj2": 0.012705979101025224}, {"determining": "( Max( ( ( MDR / FirstVNF_RAM ) - Max( CRS,( MDR + FirstVNF_RAM_Server ) ) ),( ( Max( CRS,( ( ( MDR + BR ) / FirstVNF_CPU_Server ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Max( RRSe,( Min( Min( MUM ,DS ) ,( Max( ( MLU / MUC ),Max( MUM,RRSe ) ) / RMSe ) ) / MUM ) ) ,RRSe ) ,( RRSe + ( MUR * CS ) ) )", "obj1": 0.28654970760233917, "obj2": 0.719134133570989}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( ( ( FirstVNF_CPU + CRS ) - ( ( ( Min( FirstVNF_RAM_Server ,ARS ) * Max( ( ( AMS * ACS ) / ( DDR / RRS ) ),( ( FirstVNF_RAM_Server + FirstVNF_RAM ) * ( MRS - FirstVNF_Mem ) ) ) ) / ( Const / DDR ) ) + ACS ) ) - ( MDR + PN ) )", "choosing": "Max( ( ( Min( MLU ,CS ) - CS ) / MUR ),Max( ( RMSe - ( ( MLU * RMSe ) / CS ) ),Max( MUM,Max( ( ( MUC - ( RRSe - CS ) ) + MLU ),( Max( Max( ( MUM - MUC ),MUM ),Min( RRSe ,CS ) ) / MUM ) ) ) ) )", "obj1": 0.49317738791423, "obj2": 0.4244796309745758}, {"determining": "( Max( CRS,( ( PN / ( ( FirstVNF_Mem + FirstVNF_Mem_Server ) - ( CRS - MDR ) ) ) + ACS ) ) - ( PN / MDR ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),Max( DS,DS ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe * MUC ),Min( MUC ,MUR ) ) ) ,( Max( ( Min( ( MUM / RMSe ) ,RCSe ) - ( Max( MUC,RCSe ) - ( MUM - MLU ) ) ),MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4764651594963947}, {"determining": "( Max( CRS,( ( PN / ACS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.6335282651072125, "obj2": 0.26381329967023115}, {"determining": "( ( DDR / PN ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.29434697855750486, "obj2": 0.7091058079556364}, {"determining": "( Max( ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( MDR / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( DS * ( RRSe * DS ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MLU ) )", "obj1": 0.43079922027290446, "obj2": 0.5087576431663371}, {"determining": "( ( Min( FirstVNF_Mem_Server ,RRS ) + DDR ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe / ( MUM * Max( RCSe,( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( DS / RMSe ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014440847850735634}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),MRS ) - MDR ) / MDR ) - Max( ( ( ( ( BR / PN ) + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( BR / BR ) ) * FirstVNF_CPU ) ),MDR ) ) ) - Min( ( ACS - ( Const * DDR ) ) ,Const ) )", "choosing": "( ( ( ( Max( ( ( ( MLU / DS ) + ( CS - RMSe ) ) / Min( DS ,RRSe ) ),( ( RRSe * ( DS - MUR ) ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / RCSe ) ) + MUC ) * CS ) / ( ( Max( RRSe,CS ) - ( ( MLU - ( RRSe / ( DS - ( CS + CS ) ) ) ) + Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8011695906432749, "obj2": 0.09702636674298887}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( ACS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( Min( ( MLU - ( ( ( MUM - ( CS + ( RCSe + RCSe ) ) ) - Min( RRSe ,( RRSe + RRSe ) ) ) - ( MUC / MUR ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( MUR * RRSe ) ) ) ) )", "obj1": 0.4756335282651072, "obj2": 0.4460495505107163}, {"determining": "( Max( CRS,( ( ( ( BR + FirstVNF_RAM ) / Min( MRS ,( Min( FirstVNF_CPU_Server ,MRS ) * FirstVNF_Mem_Server ) ) ) / PN ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( ( MUC - MUC ) - MUM ),( MLU - MUC ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ,( ( ( RCSe * DS ) * Min( ( ( Max( MUC,MUR ) * DS ) / MUR ) ,( RMSe - ( ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.7192982456140351, "obj2": 0.17567546061594336}, {"determining": "( Max( ( ( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) / ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * ( ( PN - AMS ) * FirstVNF_Mem ) ) ) + CRS ),CRS ) - ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) / PN ) )", "choosing": "( Max( ( ( ( DS - MUR ) * RRSe ) + Max( DS,DS ) ),( ( CS + ( ( RCSe * RMSe ) / Min( MLU ,( MLU + MUR ) ) ) ) / Max( Min( ( ( ( RRSe * DS ) * ( MLU + RRSe ) ) * Min( Min( DS ,RCSe ) ,RRSe ) ) ,( MLU * MUM ) ),RRSe ) ) ) / ( ( Min( ( ( MLU - RRSe ) / CS ) ,RCSe ) / Max( Max( RMSe,CS ),MUR ) ) + ( RMSe / MUC ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5994627690151569}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( Max( FirstVNF_RAM_Server,ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - DDR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.935672514619883, "obj2": 0.033611837155744895}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( MDR * FirstVNF_RAM_Server ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( DDR / PN ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.746588693957115, "obj2": 0.14747174621472836}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( CRS * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Max( CRS,( ( PN / PN ) + ACS ) ) - ( MDR / PN ) ) ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * AMS ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( ( ( RRSe / MLU ) * MUR ) ,MLU ) ),Min( MUC ,RMSe ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.4951267056530214, "obj2": 0.41412737915378445}, {"determining": "( Max( Max( Min( ACS ,MRS ),( Max( Const,FirstVNF_Mem ) + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / Const ) )", "choosing": "Min( ( ( DS * ( ( RRSe / MUR ) * MUR ) ) + MUM ) ,( Min( ( Max( Max( MUR,MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / ( DS * Min( MLU ,RRSe ) ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5408615094398144}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( BR / ( ( ( ( FirstVNF_RAM_Server / Const ) - MRS ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Max( ( ( MUR - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / ( RCSe / ( Max( ( MLU * ( MUM / MUM ) ),RMSe ) - MLU ) ) ) ) / MLU )", "obj1": 0.7095516569200779, "obj2": 0.18699009192914312}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),( MUR + RRSe ) ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7719298245614035, "obj2": 0.12649573545159376}, {"determining": "( Max( CRS,( ( Max( BR,PN ) + FirstVNF_CPU ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( MUC,DS ) + Min( Min( ( Min( MUM ,MLU ) + ( RCSe - Min( MUC ,MUM ) ) ) ,CS ) ,( Max( ( MUM - MLU ),( RMSe + ( CS + MUM ) ) ) + Min( MUM ,( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6629964973055724}, {"determining": "( Max( ( ( CRS - Min( Const ,( ( DDR / MDR ) - FirstVNF_RAM ) ) ) - RRS ),( ( DDR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + MUC ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.4171539961013645, "obj2": 0.5236044322920957}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6458131666605091}, {"determining": "( Max( CRS,( ( PN / ( ( BR / BR ) + FirstVNF_RAM_Server ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) / Max( ( PN - MRS ),FirstVNF_CPU_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( Min( MUM ,( ( RCSe - DS ) - ( RRSe * MUR ) ) ) - ( ( MLU - ( RRSe / ( ( MUR - DS ) - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7017543859649122, "obj2": 0.1936471890645674}, {"determining": "( Max( CRS,( ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,( MUC + CS ) ) + Min( Max( RCSe,RMSe ) ,( Max( ( MUM - MLU ),( ( CS + MUM ) + RMSe ) ) + Min( MUM ,( ( DS - RCSe ) / ( RRSe * DS ) ) ) ) ) )", "obj1": 0.6647173489278753, "obj2": 0.2340036728053576}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( DS * Min( MLU ,RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07122514587965605}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM_Server + MDR ) + ( PN / FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) - ( MDR / Max( MDR,ACS ) ) )", "choosing": "Max( Min( ( Max( ( MUC * MLU ),( RCSe + ( DS * Min( MLU ,( MUM * CS ) ) ) ) ) - RRSe ) ,RMSe ),Max( Max( MUM,( MUM + MUM ) ),( RMSe - CS ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6604995314799874}, {"determining": "( Max( CRS,( ( PN / ( ( MDR * FirstVNF_RAM ) / ( Max( CRS,ARS ) / ( ACS + BR ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + MUC ) ) - RRSe ) ,Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.34307992202729043, "obj2": 0.6363919125627151}, {"determining": "( Max( Max( RRS,( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ),( ( PN / ( MDR / ( MDR - Min( Const ,FirstVNF_CPU ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.7251461988304093, "obj2": 0.16957440329080692}, {"determining": "( ( FirstVNF_CPU + DDR ) - ( PN / DDR ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUM ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,Max( CS,Max( ( ( MUM - MUC ) * Min( RCSe ,MLU ) ),RCSe ) ) ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22785655492638635}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * RMSe ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3762183235867446, "obj2": 0.5868117865287709}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3391812865497076, "obj2": 0.6405844820571878}, {"determining": "( Max( Max( RRS,( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.42884990253411304, "obj2": 0.5196051068385512}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( RMSe + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.4697855750487329, "obj2": 0.45438463603380086}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),( MUR + RRSe ) ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7719298245614035, "obj2": 0.12649573545159376}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUM ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.682261208576998, "obj2": 0.21454224741457645}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.10930095360021926}, {"determining": "( ( ( AMS / ACS ) * Max( ( FirstVNF_Mem_Server / ( ARS * FirstVNF_RAM_Server ) ),( ( MDR / PN ) + ACS ) ) ) - ( MDR / PN ) )", "choosing": "( ( MLU + Max( ( CS - ( CS * RCSe ) ),RCSe ) ) + Min( Max( RCSe,RMSe ) ,( Max( ( MUM - MLU ),( RMSe + ( CS + MUM ) ) ) + Min( MUM ,( ( DS - RCSe ) / ( MUR * DS ) ) ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.5015027784105812}, {"determining": "( ( ( FirstVNF_RAM + Min( FirstVNF_RAM ,AMS ) ) + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - AMS ),( ( PN / PN ) * ( PN / MDR ) ) ) )", "choosing": "Min( ( CS - DS ) ,( MUR * MUC ) )", "obj1": 0.4152046783625731, "obj2": 0.5351398719731717}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.5769980506822612, "obj2": 0.31601630756097376}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( ( RCSe - Min( MUC ,MUM ) ) + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.50682261208577, "obj2": 0.399786207976158}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / PN ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,( DS * Min( MLU ,RRSe ) ) ) ) ) / Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) ) + ( RMSe / MUC ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6800089471056565}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + MDR ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / FirstVNF_Mem ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( MUR * MUM ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6850580088642141}, {"determining": "( Max( CRS,( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) / Min( Const ,( ( CRS * CRS ) + FirstVNF_CPU ) ) ) + ACS ) ) - ( MDR / FirstVNF_Mem_Server ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( DS * Min( MUR ,( MUM - MLU ) ) ) + ( MLU / MUC ) ) )", "obj1": 0.5692007797270955, "obj2": 0.3284538870729034}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.37037037037037035, "obj2": 0.5948436502314914}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) / ( MDR / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( ( Max( ( AMS / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( ( MUM + ( Min( MUR ,RRSe ) / Min( MUM ,( MUC / ( RRSe * MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.6900584795321637, "obj2": 0.20407821017283906}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( Max( CRS,( ACS - ARS ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Max( ( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ),( Min( MUM ,MLU ) / RMSe ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( ( CS + RRSe ) - RMSe ) + RMSe ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.4873294346978557, "obj2": 0.42894246714258644}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5015403246802952}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / PN ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,( Max( RRSe,MUM ) + ( Min( Max( MUC,( ( DS - MUR ) * RRSe ) ) ,MUR ) * MUM ) ) ) ,( ( DS * Min( MLU ,RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.8557504873294347, "obj2": 0.06864050380355514}, {"determining": "( Max( CRS,( ( PN / Max( RRS,( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.30214424951267055, "obj2": 0.6982928720769339}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * RMSe ) ) ) - RRSe ) ,MUR ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.2982456140350877, "obj2": 0.7036939264374247}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_Mem ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / FirstVNF_Mem ) ) + CRS ) ) - ( ARS / Max( ( ACS * BR ),AMS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( MUR * CS ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6751775620543656}, {"determining": "( Max( CRS,( ( Min( Const ,( Min( BR ,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ( MDR * FirstVNF_RAM_Server ) ) ) - ( MDR / ( BR - RRS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,Min( CS ,DS ) ) ) ) ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( ( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.695906432748538, "obj2": 0.19882159098678165}, {"determining": "( ( ( RRS - ( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( DDR * FirstVNF_CPU ) )", "choosing": "( MLU / ( Max( ( ( RCSe * MLU ) / ( Min( CS ,MLU ) - CS ) ),( DS - ( MUM + CS ) ) ) - DS ) )", "obj1": 0.6861598440545809, "obj2": 0.20783070664488304}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) + ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( Const,ARS ) ) - PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,Max( MLU,MUM ) ),( ( Min( RCSe ,RRSe ) - MUM ) * Max( CS,CS ) ) ) / ( Max( CS,MUM ) / Max( ( ( RCSe - CS ) / RMSe ),( RMSe + RMSe ) ) ) )", "obj1": 0.8206627680311891, "obj2": 0.08789133553976032}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),Max( CRS,( ( ACS / ( FirstVNF_Mem_Server * ( MDR / FirstVNF_RAM_Server ) ) ) + ( ( ( MRS - BR ) - AMS ) / Min( FirstVNF_RAM ,Max( ( MRS * FirstVNF_RAM ),PN ) ) ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / RMSe ) ) + MUC ) ) - RRSe ),RRSe ) )", "obj1": 0.7894736842105263, "obj2": 0.10930095360021926}, {"determining": "( Max( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.40350877192982454, "obj2": 0.5452989260421119}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,ARS ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,Max( MLU,MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8206627680311891, "obj2": 0.08789133553976032}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( Max( FirstVNF_Mem,Const ) / Max( MRS,RRS ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe - MUM ) ),( RMSe + RMSe ) ) / ( Min( CS ,DS ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}], "27": [{"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( Max( CRS,( ( ( PN / ( ARS / RRS ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( RCSe * Max( DS,MLU ) ) + ( Max( ( RMSe + ( MUC / MLU ) ),CS ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * Min( CS ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( CRS - ( MDR / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) )", "choosing": "( ( ( ( DS + MUM ) / DS ) + RMSe ) / ( ( RRSe + ( Min( ( ( Max( CS,CS ) * Min( MLU ,RRSe ) ) / MUC ) ,( Min( ( DS / MUC ) ,( DS / MUC ) ) + MUC ) ) / ( ( DS / RRSe ) + MLU ) ) ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ACS,FirstVNF_CPU_Server ) ) - ( ( ACS - ( AMS + FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452309}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.4873294346978557, "obj2": 0.42894246714258644}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / RRS ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),Max( ( RRSe - MUM ),DS ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6432748538011696, "obj2": 0.25162066959097606}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.35477582846003897, "obj2": 0.6167130299516692}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / ( DS + MUC ) ) )", "obj1": 0.5692007797270955, "obj2": 0.32754135625422065}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( ACS / MDR ) ) * FirstVNF_RAM_Server ) ) ) - Max( ( Const * FirstVNF_Mem_Server ),( FirstVNF_Mem + ( FirstVNF_RAM_Server * CRS ) ) ) )", "choosing": "( ( MLU * MUM ) / ( ( CS - ( RRSe - ( RCSe + DS ) ) ) + RMSe ) )", "obj1": 0.7621832358674464, "obj2": 0.1375221587357334}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.4726536916028818}, {"determining": "( ( ( RRS - ( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( AMS - DDR ) )", "choosing": "( MLU / ( DS - DS ) )", "obj1": 0.46588693957115007, "obj2": 0.4601571436811583}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6458131666605091}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( ( DDR / PN ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.746588693957115, "obj2": 0.14747174621472836}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Const * ARS ) ) / MDR ) ) * ( PN - ACS ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( ( MUM * RRSe ) - ( CS + Min( ( CS * Min( CS ,RMSe ) ) ,( RMSe / Max( ( MUM / CS ),( CS + RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8810916179337231, "obj2": 0.05744169991743743}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( Max( Max( RRS,( FirstVNF_Mem + ( Max( RRS,MDR ) * FirstVNF_CPU ) ) ),( ( PN / ( PN + DDR ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),RCSe ) - RRSe ) ,RMSe ) / Max( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.5458089668615984, "obj2": 0.3517202435656435}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR / PN ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( RRSe / ( RRSe * MUR ) ) ) ) )", "obj1": 0.9571150097465887, "obj2": 0.02088075550639322}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.5789473684210527, "obj2": 0.3131718190417749}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( DDR + FirstVNF_RAM ) ) ) / ( FirstVNF_CPU / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( RMSe + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.6042884990253411, "obj2": 0.28998755431764633}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( ( RCSe - Min( MUC ,MUM ) ) + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.50682261208577, "obj2": 0.399786207976158}, {"determining": "( Max( CRS,( ( PN / ( ( BR / BR ) + FirstVNF_RAM_Server ) ) + ( PN / MDR ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( MUR * CS ) ) )", "obj1": 0.7017543859649122, "obj2": 0.19364718906456738}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( Min( MLU ,( Max( RRSe,MUM ) + ( Min( Max( MUC,( ( DS - MUR ) * RRSe ) ) ,MUR ) * MUM ) ) ) ,( ( DS * Min( MLU ,RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5553668186341942}, {"determining": "( Max( CRS,( ACS - ARS ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Max( ( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ),( Min( MUM ,MLU ) / RMSe ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( ( CS + RRSe ) - RMSe ) + RMSe ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( ( MDR / FirstVNF_RAM_Server ) + PN ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.442495126705653, "obj2": 0.49171610830267876}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.37816764132553604, "obj2": 0.5818640494325745}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( ( ( FirstVNF_RAM + Min( FirstVNF_RAM ,AMS ) ) + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - AMS ),( ( PN / PN ) * ( PN / MDR ) ) ) )", "choosing": "Min( ( CS - DS ) ,( MUR * MUC ) )", "obj1": 0.4152046783625731, "obj2": 0.5351398719731717}, {"determining": "( Max( CRS,FirstVNF_Mem ) - PN )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU * CS ) / Min( ( ( ( DS - CS ) - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( Max( Max( RRS,( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.42884990253411304, "obj2": 0.5196051068385512}, {"determining": "( Max( CRS,( ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / PN ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + ( AMS * ( AMS - FirstVNF_Mem ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.9766081871345029, "obj2": 0.010892568004757054}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),MRS ) - MDR ) / MDR ) - Max( ( ( ( ( BR / PN ) + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( BR / BR ) ) * FirstVNF_CPU ) ),MDR ) ) ) - Min( ( ACS - ( Const * DDR ) ) ,Const ) )", "choosing": "( ( ( ( Max( ( ( ( MLU / DS ) + ( CS - RMSe ) ) / Min( DS ,RRSe ) ),( ( RRSe * ( DS - MUR ) ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / RCSe ) ) + MUC ) * CS ) / ( ( Max( RRSe,CS ) - ( ( MLU - ( RRSe / ( DS - ( CS + CS ) ) ) ) + Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8011695906432749, "obj2": 0.09702636674298887}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.49317738791423, "obj2": 0.4225537705158469}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( Max( CRS,( ( ( ( Max( Min( FirstVNF_RAM ,DDR ),MDR ) * Min( Const ,PN ) ) * FirstVNF_RAM ) * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( Max( Const,Const ),FirstVNF_Mem ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + Const ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MUM ,MUM ) ,RRSe ) ,( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( Max( ( CS - DS ),RRSe ) ,Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6283961643326373}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.43079922027290446, "obj2": 0.5029916986678146}, {"determining": "( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) - ( MDR / FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS * Min( MLU ,RRSe ) ) ,( ( DS * Min( MUR ,( MUM - MLU ) ) ) + ( MLU / MUC ) ) )", "obj1": 0.9103313840155945, "obj2": 0.044445073851406294}, {"determining": "( Max( CRS,( ( ( ( BR + FirstVNF_RAM ) / Min( MRS ,( Min( FirstVNF_CPU_Server ,MRS ) * FirstVNF_Mem_Server ) ) ) / PN ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( ( MUC - MUC ) - MUM ),( MLU - MUC ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ,( ( ( RCSe * DS ) * Min( ( ( Max( MUC,MUR ) * DS ) / MUR ) ,( RMSe - ( ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.7192982456140351, "obj2": 0.17567546061594336}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( PN * ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( MDR * FirstVNF_RAM_Server ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( ( RCSe - Min( MUC ,MUM ) ) + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.50682261208577, "obj2": 0.399786207976158}, {"determining": "( Max( Max( RRS,( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ),( ACS + ( DDR * ACS ) ) ) - ( MDR / FirstVNF_Mem ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * DS ) / CS ) ),Max( MUM,( RMSe / ( RCSe / ( MLU + MUC ) ) ) ) ) )", "obj1": 0.7309941520467836, "obj2": 0.1669468294020486}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),Max( DS,DS ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4764651594963947}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * RMSe ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3762183235867446, "obj2": 0.5868117865287709}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( CRS,( ( ( ( Min( ( ARS * FirstVNF_Mem ) ,FirstVNF_Mem ) * FirstVNF_CPU ) * FirstVNF_CPU ) / ( Min( ( ARS * Min( FirstVNF_Mem_Server ,RRS ) ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) ),MDR ) ) ) - ( FirstVNF_CPU / PN ) )", "choosing": "( Max( RRSe,MUM ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( MUC,MUR ) - ( MUM + CS ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( MUM - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3937621832358674, "obj2": 0.562671611584088}, {"determining": "( ( ( RRS - ( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( Min( FirstVNF_RAM ,Max( ( MRS * FirstVNF_RAM ),PN ) ) / PN ) ) ) ) - ( AMS - DDR ) )", "choosing": "( MLU / ( DS - Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / RMSe ) ) + MUC ) ) - RRSe ),RRSe ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15649534188116637}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5981510000203443}, {"determining": "( Max( ( FirstVNF_CPU - CRS ),( ( CRS * FirstVNF_RAM ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MLU * MLU ),( MUC + ( RRSe * Min( RRSe ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,( CS * Max( MUC,RCSe ) ) ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.6744639376218323, "obj2": 0.2240986803132759}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( MUR + RCSe ) - RRSe ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.7095516569200779, "obj2": 0.18431573229473128}, {"determining": "( Max( CRS,( ( Min( ( Max( BR,PN ) + AMS ) ,Const ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server / AMS ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( ( DS * MUC ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( ( ( ( RCSe * MLU ) - ( RRSe * RCSe ) ) * DS ) - DS ) - RRSe ) ,Min( MUC ,RMSe ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.3366377210643848}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ACS ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.797270955165692, "obj2": 0.09882870726689633}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),( MUR + RRSe ) ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7719298245614035, "obj2": 0.12649573545159376}, {"determining": "( Max( CRS,( ( PN / ACS ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.7914230019493177, "obj2": 0.10586284711508462}, {"determining": "( PN - ( ( ( ( CRS + FirstVNF_RAM ) * Max( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ),MDR ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / PN ) )", "choosing": "Min( ( RRSe / ( ( MUC / Max( MUM,MUR ) ) + MUM ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,CS ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.5614035087719298, "obj2": 0.33313007375970033}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / BR ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,( Max( RRSe,MUM ) + ( Min( Max( MUC,( ( DS - MUR ) * RRSe ) ) ,MUR ) * MUM ) ) ) ,Max( ( MUM - ( ( Max( RMSe,MUR ) - ( MUM + CS ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) )", "obj1": 0.8654970760233918, "obj2": 0.06418179749193237}, {"determining": "( Max( CRS,( ( Const * ( PN * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( MRS / DDR ) ) / PN ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( CS * Max( ( ( Min( ( Min( RCSe ,MLU ) / ( RCSe * MUM ) ) ,MUM ) * MUM ) + ( CS - Max( MUC,Min( MUC ,MUR ) ) ) ),RCSe ) ) / ( RMSe + DS ) )", "obj1": 0.34307992202729043, "obj2": 0.6341126512617862}, {"determining": "( Max( Max( RRS,( CRS - ( ( PN / PN ) + Min( RRS ,FirstVNF_RAM_Server ) ) ) ),( ( PN / ( MDR / ( MDR - Min( Const ,FirstVNF_CPU ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.7251461988304093, "obj2": 0.16957440329080692}, {"determining": "( ( ( RRS - ( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( DDR * FirstVNF_CPU ) )", "choosing": "( MLU / ( Max( ( ( RCSe * MLU ) / ( Min( CS ,MLU ) - CS ) ),( DS - ( MUM + CS ) ) ) - DS ) )", "obj1": 0.682261208576998, "obj2": 0.20981736581940127}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( CRS * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Max( CRS,( ( PN / PN ) + ACS ) ) - ( MDR / PN ) ) ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * AMS ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( ( ( RRSe / MLU ) * MUR ) ,MLU ) ),Min( MUC ,RMSe ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.4951267056530214, "obj2": 0.41412737915378445}, {"determining": "( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) - ( MDR / PN ) )", "choosing": "Max( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( Min( MUM ,MLU ) ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.4346978557504873, "obj2": 0.5005016818416512}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),( MUR + RRSe ) ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7719298245614035, "obj2": 0.12649573545159376}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Max( ( ( MUR - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / ( RCSe / ( Max( ( MLU * ( MUM / MUM ) ),RMSe ) - MLU ) ) ) ) / MLU )", "obj1": 0.4405458089668616, "obj2": 0.49243699511736383}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM_Server + MDR ) + ( PN / FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) - ( MDR / Max( MDR,ACS ) ) )", "choosing": "Max( Min( ( Max( ( MUC * MLU ),( RCSe + ( DS * Min( MLU ,( MUM * CS ) ) ) ) ) - RRSe ) ,RMSe ),Max( Max( MUM,( MUM + MUM ) ),( RMSe - CS ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6604995314799874}, {"determining": "( Max( CRS,( ( ( ( ( RRS * FirstVNF_Mem_Server ) * ARS ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( MUC * Min( ( Min( RCSe ,RCSe ) * CS ) ,CS ) ) + Min( RCSe ,RMSe ) ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( MUR * RRSe ) ) ) ) ) ,( MUM * CS ) )", "obj1": 0.7095516569200779, "obj2": 0.18431573229473128}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( CRS,( ( ( ( ( RRS * FirstVNF_Mem_Server ) * ARS ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( MUC * Min( ( Min( RCSe ,RCSe ) * CS ) ,CS ) ) + Min( RCSe ,RMSe ) ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( MUR * RRSe ) ) ) ) ) ,( MUM * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6065758280977287}, {"determining": "( Max( ( ( CRS - Min( Const ,( ( DDR / MDR ) - FirstVNF_RAM ) ) ) - RRS ),( ( DDR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + MUC ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.4171539961013645, "obj2": 0.5236044322920957}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ( MDR * FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / ( ACS + FirstVNF_RAM_Server ) ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * AMS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) - ( ( RRSe - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + ( CS * MUR ) ) )", "obj1": 0.5906432748538012, "obj2": 0.30091535211314324}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + ( MDR / PN ) ) * Max( Const,FirstVNF_Mem ) ) ),( MDR / PN ) ) ) + ( MDR / PN ) ) - FirstVNF_CPU )", "choosing": "Max( Max( RCSe,( Max( CS,MUM ) / Max( ( ( MUC - MUC ) / RMSe ),( RMSe + RMSe ) ) ) ),Max( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ),Max( MUM,( RRSe / ( ( RRSe / MUC ) + MUM ) ) ) ) )", "obj1": 0.8713450292397661, "obj2": 0.060862401281902845}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.669710513120242}, {"determining": "( Max( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.40350877192982454, "obj2": 0.5452989260421119}, {"determining": "( Max( CRS,( ( PN / Max( RRS,( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.30994152046783624, "obj2": 0.691950761844502}, {"determining": "( Max( ( Max( CRS,( ( ( ( FirstVNF_Mem + ACS ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.8284600389863548, "obj2": 0.08281280143908903}, {"determining": "( Max( ( ( ( ( DDR / PN ) - Min( AMS ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6779174566233679}, {"determining": "( Max( CRS,( ( Min( Const ,( Min( BR ,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ( MDR * FirstVNF_RAM_Server ) ) ) - ( MDR / ( BR - RRS ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,Min( CS ,DS ) ) ) ) ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ARS / Max( ACS,RRS ) ) - ( ( ( ( Const * RRS ) * AMS ) - CRS ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Min( Max( Max( Min( MUR ,( Max( RMSe,DS ) * ( MUC / Min( RMSe ,CS ) ) ) ),( CS - RRSe ) ),MUM ) ,( MUR * MUM ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( FirstVNF_Mem_Server - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - Max( ( RCSe - MUM ),Max( Min( DS ,RCSe ),( MUR / MUC ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442255}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / ( DDR / MRS ) ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),( MDR / FirstVNF_RAM_Server ) ) ) ),MDR ) ) + ( PN / ( MDR * FirstVNF_CPU ) ) ) - Max( Max( RRS,Min( BR ,FirstVNF_RAM ) ),( Min( AMS ,BR ) + ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( MLU ,( ( RRSe / MUM ) + ( Min( Max( MUC,( Min( MUC ,RRSe ) * RRSe ) ) ,MUR ) * MUM ) ) ) ,( ( Min( RRSe ,( RMSe * ( CS - CS ) ) ) * DS ) + ( MLU / MLU ) ) )", "obj1": 0.8576998050682261, "obj2": 0.0677941735926768}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,( MDR / PN ) ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6783625730994152, "obj2": 0.217235527259755}, {"determining": "( ( ( BR / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( ( PN / ( ( ( ( BR + MDR ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) / FirstVNF_Mem ) ) / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / ( MLU + ( MUR * MUM ) ) ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6950524414028326}, {"determining": "( Max( CRS,( ( ( Max( ARS,CRS ) / ( ( FirstVNF_RAM_Server / ( BR + DDR ) ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM + ( Max( ( MLU + ( ( RMSe * MUM ) / MUC ) ),CS ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6065758280977287}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),Max( BR,PN ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MUM ,RRSe ) ) ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,( CS * Max( MUC,RCSe ) ) ) ) ) ,( ( ( RCSe * DS ) * Min( MLU ,Min( RMSe ,( ( DS + MUC ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.6666666666666666, "obj2": 0.22785655492638635}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5906432748538012, "obj2": 0.30091535211314324}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( Max( FirstVNF_RAM_Server,ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - DDR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.935672514619883, "obj2": 0.033611837155744895}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( ( ( CRS + FirstVNF_RAM ) * ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - MRS ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( CS - Min( CS ,MLU ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / MUM ) ),Max( MUM,( MLU + MLU ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6308253873665105}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.5769980506822612, "obj2": 0.31601630756097376}, {"determining": "( ( MDR / FirstVNF_CPU ) - Max( Max( RRS,( ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MDR * ARS ) ) ) / PN ) + FirstVNF_RAM ) ),( ( PN / DDR ) + ACS ) ) )", "choosing": "Min( ( Min( ( Max( ( RCSe * MUR ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / ( DS * Min( MLU ,RRSe ) ) ) ,( ( MLU / Max( RRSe,MUR ) ) + Min( MUM ,DS ) ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ACS + ( Max( CRS,( ( PN / Max( Const,FirstVNF_Mem ) ) + PN ) ) - ( ( BR - ( FirstVNF_RAM_Server * ( ACS / FirstVNF_RAM_Server ) ) ) / PN ) ) ) ) - Max( MRS,ARS ) )", "choosing": "( ( Max( CS,MUM ) - Max( ( MLU / ( MUR - Min( CS ,Min( MUC ,( MUR * MUM ) ) ) ) ),( RMSe + RMSe ) ) ) / Max( Min( RRSe ,( RRSe / MUM ) ),Max( RMSe,RMSe ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}], "28": [{"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Max( BR,FirstVNF_CPU ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( CRS / PN ) )", "choosing": "( MLU / ( Max( ( Min( RRSe ,DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( ( RCSe - DS ) + ( Max( ( CS - DS ),( RCSe / RCSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( ( PN / ( ARS / RRS ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( RCSe * Max( DS,MLU ) ) + ( Max( ( RMSe + ( MUC / MLU ) ),CS ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * Min( CS ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ACS,FirstVNF_CPU_Server ) ) - ( ( ACS - ( AMS + FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( ( ( RRS - ( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( AMS - DDR ) )", "choosing": "( MLU / ( DS - DS ) )", "obj1": 0.46588693957115007, "obj2": 0.4601571436811583}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452309}, {"determining": "( Max( CRS,( ( PN / ( CRS + FirstVNF_RAM_Server ) ) + ( PN / MDR ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( MUR * ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.6608187134502924, "obj2": 0.23396107865482135}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / RRS ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,MUR ) ) * ( RCSe / RMSe ) ),Max( ( RRSe - MUM ),DS ) ) - ( DS * Min( MLU ,RRSe ) ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.6491228070175439, "obj2": 0.24887364534197012}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Max( ( MUR * MLU ),( MUC + ( DS * RMSe ) ) ) ) / ( ( MLU + CS ) / ( DS + MUC ) ) )", "obj1": 0.6354775828460039, "obj2": 0.261378905069416}, {"determining": "( Max( ( ( ARS - FirstVNF_RAM_Server ) - RRS ),( ( PN / MDR ) + ACS ) ) - Max( PN,MDR ) )", "choosing": "( Max( Max( MLU,MUC ),Max( ( ( RCSe * ( Max( CS,MUM ) - Min( RCSe ,( MLU * MUR ) ) ) ) - Min( RCSe ,( CS + CS ) ) ),RMSe ) ) / ( MUC + DS ) )", "obj1": 0.42105263157894735, "obj2": 0.5180058353670063}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.35477582846003897, "obj2": 0.6167130299516692}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / ( DS + MUC ) ) )", "obj1": 0.5692007797270955, "obj2": 0.3275413562542206}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUR + RCSe ) - RRSe ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( Min( MUR ,RRSe ) * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.6881091617933723, "obj2": 0.20439735508055934}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.43079922027290446, "obj2": 0.5029916986678146}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem / ACS ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( CRS * ( FirstVNF_RAM * MRS ) ),AMS ) ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - ( MUM / RRSe ) ),( MUC - MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.9688109161793372, "obj2": 0.01771670157076554}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( MUR * CS ) ) )", "obj1": 0.4834307992202729, "obj2": 0.4287255525121458}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( CS - ( CS + ( ( CS * Min( CS ,RMSe ) ) / ( RMSe / Max( ( CS + RMSe ),( MUM / CS ) ) ) ) ) ) + ( Max( ( MUC * MLU ),( ( RCSe - Min( MUC ,MUM ) ) + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.543859649122807, "obj2": 0.3471350534419244}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Const * ARS ) ) / MDR ) ) * ( PN - ACS ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( ( MUM * RRSe ) - ( CS + Min( ( CS * Min( CS ,RMSe ) ) ,( RMSe / Max( ( MUM / CS ),( CS + RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8810916179337231, "obj2": 0.05744169991743743}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( ( RCSe - Min( MUC ,MUM ) ) + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.50682261208577, "obj2": 0.399786207976158}, {"determining": "( Max( CRS,( ( ( FirstVNF_RAM_Server + MDR ) + ( PN / FirstVNF_RAM_Server ) ) + FirstVNF_RAM ) ) - ( MDR / Max( MDR,ACS ) ) )", "choosing": "Max( Min( ( Max( ( MUC * MLU ),( RCSe + ( DS * Min( MLU ,( MUM * CS ) ) ) ) ) - RRSe ) ,RMSe ),Max( Max( MUM,( MUM + MUM ) ),( RMSe - CS ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6604995314799874}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ),DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.39571150097465885, "obj2": 0.5552115616826431}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.4726536916028818}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( Max( CRS,( ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / PN ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) + ( AMS * ( AMS - FirstVNF_Mem ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.9766081871345029, "obj2": 0.010892568004757054}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.37816764132553604, "obj2": 0.5818640494325745}, {"determining": "( ( ARS / Max( ACS,RRS ) ) - ( ( ( ( Const * RRS ) * AMS ) - CRS ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Min( Max( Max( Min( MUR ,( Max( RMSe,DS ) * ( MUC / Min( RMSe ,CS ) ) ) ),( CS - RRSe ) ),MUM ) ,( MUR * MUM ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( BR * AMS ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * RRS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( PN / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * ( MUR / Min( RCSe ,( MLU * MLU ) ) ) ) / Min( ( ( Max( CS,MUR ) * Min( MLU ,RRSe ) ) / MUC ) ,( Min( ( DS / MUC ) ,( DS / MUC ) ) + MUC ) ) ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1954874021098942}, {"determining": "( Max( CRS,( ( Min( ( Max( BR,PN ) + AMS ) ,Const ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ( FirstVNF_RAM_Server / AMS ) ) ) - ( DDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( ( DS * MUC ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( ( ( ( RCSe * MLU ) - ( RRSe * RCSe ) ) * DS ) - DS ) - RRSe ) ,Min( MUC ,RMSe ) ) ) )", "obj1": 0.5536062378167641, "obj2": 0.3366377210643848}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.5769980506822612, "obj2": 0.31601630756097376}, {"determining": "( Max( CRS,( ( MRS * ( ACS / MRS ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Min( RMSe ,( ( ( CS * MUC ) - Min( CS ,RRSe ) ) + MUC ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.580896686159844, "obj2": 0.3122158087287458}, {"determining": "( Max( CRS,( ( PN / ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ) ) + MRS ) ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "Min( ( ( RCSe - RRSe ) / Max( ( RRSe / MLU ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MLU ) + ( MUC / MLU ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13323410910539596}, {"determining": "( Max( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),( MDR / FirstVNF_RAM_Server ) ) ) ),( ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) + FirstVNF_RAM ) ),( ( PN / DDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( Min( Max( MUC,( MUC * RRSe ) ) ,MUR ) * MUM ) / ( DS * Min( MLU ,RRSe ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( ( MDR / PN ) - Max( CRS,( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( ( MUM + ( ( MUR * RMSe ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( MUM ,Min( MUC ,RRSe ) ) ) * CS ) )", "obj1": 0.44834307992202727, "obj2": 0.4841632462214688}, {"determining": "( Max( ( ( CRS - Min( Const ,( ( DDR / MDR ) - FirstVNF_RAM ) ) ) - RRS ),( ( DDR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + MUC ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.4171539961013645, "obj2": 0.5236044322920957}, {"determining": "( ( ( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) - ( ( ( Const + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ) / MDR ) ) + PN ) - Max( ( Min( MDR ,ACS ) / FirstVNF_RAM ),( ( PN * DDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / ( ( RRSe / MUC ) * Min( ( Min( RRSe ,( DS + ( CS * CS ) ) ) + RCSe ) ,MUR ) ) ) ,( Min( CS ,MLU ) * RCSe ) )", "obj1": 0.783625730994152, "obj2": 0.11516076138435684}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),Const ) - Max( MRS,ARS ) )", "choosing": "( ( RRSe / ( DS - ( MUM + CS ) ) ) / Max( Min( RRSe ,( RRSe / MUM ) ),Max( RMSe,RMSe ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359178}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6140350877192983, "obj2": 0.2762193462649975}, {"determining": "( Max( CRS,( ( ( ( BR + FirstVNF_RAM ) / Min( MRS ,( Min( FirstVNF_CPU_Server ,MRS ) * FirstVNF_Mem_Server ) ) ) / PN ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( ( MUC - MUC ) - MUM ),( MLU - MUC ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ,( ( ( RCSe * DS ) * Min( ( ( Max( MUC,MUR ) * DS ) / MUR ) ,( RMSe - ( ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.7192982456140351, "obj2": 0.17567546061594336}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( FirstVNF_Mem_Server * Max( ( MDR / PN ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_CPU ) ) - ( DDR / PN ) )", "choosing": "Min( Min( ( CS + ( RCSe - ( RMSe - CS ) ) ) ,CS ) ,( Max( ( MUM - MLU ),MUC ) + ( MUM / ( RRSe / ( RRSe * MUR ) ) ) ) )", "obj1": 0.9571150097465887, "obj2": 0.02088075550639322}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( Max( ( ( RRSe - DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( ( RCSe - Min( MUC ,MUM ) ) + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.50682261208577, "obj2": 0.399786207976158}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( ARS,Max( Min( PN ,RRS ),CRS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( CS / CS ) - MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + ( Max( ( Max( CS,RCSe ) / ( MUR - MLU ) ),( CS + MLU ) ) - MUC ) ) ) ,( Max( MUC,DS ) * ( RCSe / RMSe ) ) ) )", "obj1": 0.3723196881091618, "obj2": 0.5975975213370094}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,CS ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.5614035087719298, "obj2": 0.33313007375970033}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( ARS / PN ) ),( ( Max( ( PN - ( FirstVNF_RAM + MRS ) ),( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) / ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( MUM ,( MUM / RRSe ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MLU ) ) )", "obj1": 0.8304093567251462, "obj2": 0.08185679112605991}, {"determining": "( FirstVNF_Mem_Server - ( MDR / Max( CRS,FirstVNF_Mem ) ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - Max( ( RCSe - MUM ),Max( Min( DS ,RCSe ),( ( MLU * CS ) / MUC ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.28460038986354774, "obj2": 0.7235323892747503}, {"determining": "( Max( CRS,( ( PN / ( PN / MDR ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( ( ( MUR - MLU ) / Max( CS,RCSe ) ) / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6101364522417154, "obj2": 0.2872228981076163}, {"determining": "( ( ARS * Max( ( MDR / ( ARS * FirstVNF_RAM_Server ) ),( ( PN / MDR ) + ACS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.4346978557504873, "obj2": 0.5002660194572952}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( RMSe ,( MUR * CS ) )", "obj1": 0.3138401559454191, "obj2": 0.6787720800652144}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ),( MDR / FirstVNF_RAM_Server ) ) ) ),MDR ) ) + ( PN / Min( MDR ,FirstVNF_CPU ) ) ) - Max( Max( RRS,Min( BR ,FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( ( CS + RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + ( RMSe + Max( ( Max( ( MUM * Min( CS ,MUR ) ),MUM ) * MUR ),CS ) ) ) )", "obj1": 0.3391812865497076, "obj2": 0.6416500476681413}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( Max( FirstVNF_RAM_Server,ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - DDR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.935672514619883, "obj2": 0.033611837155744895}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3937621832358674, "obj2": 0.562671611584088}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ACS ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.797270955165692, "obj2": 0.09882870726689631}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ) - ( MDR / FirstVNF_RAM ) )", "choosing": "Max( ( MUR * ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * ( Max( MUC,DS ) * ( RCSe / RMSe ) ) ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( MUC * ( ( MLU * DS ) * CS ) ) ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6458131666605091}, {"determining": "( Max( CRS,( ( PN / ( MDR + ARS ) ) + ( PN / ( FirstVNF_RAM_Server + ( MDR - ( RRS + DDR ) ) ) ) ) ) - ( ( BR - FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( DS + ( MUR * ( DS * Min( Max( ( ( MUR - RRSe ) * Min( MLU ,MUR ) ),( MUC - ( MUC + DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( Max( CRS,( ( PN / PN ) + ( ( MRS * FirstVNF_RAM ) / MDR ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM + ( Max( ( CS + ( Min( MUC ,MUR ) / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( ( MUR * MLU ) * CS ) )", "obj1": 0.7115009746588694, "obj2": 0.18404856674549705}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( CS - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7070041344800222}, {"determining": "( Max( Max( RRS,( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5452989260421119}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - BR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( Min( RMSe ,( RRSe / RCSe ) ) * MLU ) / ( Min( MLU ,CS ) - CS ) ),( ( MUC * ( MUM + DS ) ) - RMSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),MRS ) - MDR ) / MDR ) - Max( ( ( ( ( BR / PN ) + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) * ( ( ( ARS * FirstVNF_Mem ) + ( BR / BR ) ) * FirstVNF_CPU ) ),MDR ) ) ) - Min( ( ACS - ( Const * DDR ) ) ,Const ) )", "choosing": "( ( ( ( Max( ( ( ( MLU / DS ) + ( CS - RMSe ) ) / Min( DS ,RRSe ) ),( ( RRSe * ( DS - MUR ) ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / RCSe ) ) + MUC ) * CS ) / ( ( Max( RRSe,CS ) - ( ( MLU - ( RRSe / ( DS - ( CS + CS ) ) ) ) + Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8011695906432749, "obj2": 0.09702636674298887}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / BR ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8654970760233918, "obj2": 0.06418179749193234}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( CRS * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Max( CRS,( ( PN / PN ) + ACS ) ) - ( MDR / PN ) ) ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * AMS ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( ( ( RRSe / MLU ) * MUR ) ,MLU ) ),Min( MUC ,RMSe ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.4951267056530214, "obj2": 0.41412737915378445}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( FirstVNF_Mem / ACS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( Min( ( RMSe / ( MLU + Max( ( MUC + CS ),MUM ) ) ) ,( MUM - Min( Min( RRSe ,Min( RMSe ,RRSe ) ) ,( CS * MUC ) ) ) ),MUM ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8576998050682261, "obj2": 0.06744856982440506}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5906432748538012, "obj2": 0.30091535211314324}, {"determining": "( ( ( ( ( Max( ( MRS / FirstVNF_RAM ),PN ) - MDR ) / ( FirstVNF_Mem * BR ) ) - Max( ( Min( MDR ,AMS ) - ( Max( ( ARS * CRS ),FirstVNF_Mem ) * Max( MDR,FirstVNF_Mem_Server ) ) ),MDR ) ) + ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / BR ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - ( ACS - ARS ) )", "choosing": "Min( Min( MLU ,( Max( MUM,( Max( Max( RRSe,( RMSe + MLU ) ),RRSe ) + ( Min( Max( MUC,MUM ) ,DS ) + ( RMSe + ( MUC * MUR ) ) ) ) ) + ( Min( Max( MUC,( ( DS - MUR ) * RRSe ) ) ,MUR ) * MUM ) ) ) ,Max( ( MUM - ( ( Max( RMSe,MUR ) - ( MUM + Max( ( MUR / MLU ),DS ) ) ) / ( Max( RMSe,RRSe ) + ( MUC - RMSe ) ) ) ),MUC ) )", "obj1": 0.7719298245614035, "obj2": 0.12459504141346617}, {"determining": "( Max( CRS,( ( PN / ACS ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.10681885742811373}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( ( DDR / FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ),( ( Min( RCSe ,( CS + CS ) ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.5964912280701754, "obj2": 0.29805096477545456}, {"determining": "( Max( ( Max( CRS,( ( ( ( FirstVNF_Mem + ACS ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.8284600389863548, "obj2": 0.08281280143908903}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.49317738791423, "obj2": 0.4225537705158469}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( DDR + FirstVNF_RAM ) ) ) / ( FirstVNF_CPU / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( RMSe + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.6042884990253411, "obj2": 0.28998755431764633}, {"determining": "( Max( CRS,( ( ( ( ( RRS * FirstVNF_Mem_Server ) * ARS ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( MUC * Min( ( Min( RCSe ,RCSe ) * CS ) ,CS ) ) + Min( RCSe ,RMSe ) ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( MUR * RRSe ) ) ) ) ) ,( MUM * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6065758280977287}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Max( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,RMSe ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( Min( MUM ,MLU ) ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5688310241471705}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) + ( RMSe / MUC ) ) )", "obj1": 0.48927875243664715, "obj2": 0.4248636817068848}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( FirstVNF_RAM + Min( FirstVNF_RAM ,AMS ) ) + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - AMS ),( ( PN / PN ) * ( PN / MDR ) ) ) )", "choosing": "Min( ( CS - DS ) ,( MUR * MUC ) )", "obj1": 0.4152046783625731, "obj2": 0.5351398719731717}, {"determining": "( Max( CRS,( ( PN / ACS ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.7914230019493177, "obj2": 0.10586284711508462}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / RRS ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.6432748538011696, "obj2": 0.25162066959097606}, {"determining": "( Max( CRS,( ( ( ( Max( Min( FirstVNF_RAM ,DDR ),MDR ) * Min( Const ,PN ) ) * FirstVNF_RAM ) * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( Max( Const,Const ),FirstVNF_Mem ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + Const ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MUM ,MUM ) ,RRSe ) ,( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( Max( ( CS - DS ),RRSe ) ,Min( MUR ,RMSe ) ) ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6283961643326373}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ( Max( ( FirstVNF_Mem_Server / ( FirstVNF_RAM_Server + RRS ) ),ARS ) / FirstVNF_Mem_Server ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( ( MUC * DS ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( ( ( ( RCSe * MLU ) - ( RRSe * MUM ) ) * DS ) - DS ) - RRSe ) ,Min( MUR ,RMSe ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.3556822829010002}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) / ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + DS ) ) ) ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6978163601100412}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Max( CRS,( ( PN / Max( RRS,( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.30994152046783624, "obj2": 0.691950761844502}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,MRS ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6636268818002347}, {"determining": "( Max( CRS,( ACS + ( CRS + DDR ) ) ) - ( MDR + PN ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( Max( MUR,MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( ( ( MUR + MLU ) - DS ) - Min( RRSe ,MUR ) ) + RMSe ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( Max( CRS,( ( Const * ( PN * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( MRS / DDR ) ) / PN ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( CS * Max( ( ( Min( ( Min( RCSe ,MLU ) / ( RCSe * MUM ) ) ,MUM ) * MUM ) + ( CS - Max( MUC,Min( MUC ,MUR ) ) ) ),RCSe ) ) / ( RMSe + DS ) )", "obj1": 0.34307992202729043, "obj2": 0.6341126512617862}, {"determining": "( ( BR * FirstVNF_CPU ) - ( DDR - MRS ) )", "choosing": "Min( ( ( ( MLU / ( Max( CS,( ( MUM + MUM ) + MUM ) ) * MUM ) ) / ( RMSe + ( MLU / MUC ) ) ) / ( DS + MUC ) ) ,Min( MUR ,CS ) )", "obj1": 0.9922027290448343, "obj2": 0.004067286301899219}, {"determining": "( Max( ( ACS * Max( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ),Max( CRS,DDR ) ) ),( FirstVNF_Mem * ( ( ACS / FirstVNF_RAM_Server ) - ( AMS + BR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( MUM + ( RMSe / ( ( DS + Min( MLU ,MUC ) ) - ( MLU + ( MUR / MUC ) ) ) ) ) + ( MUC / RMSe ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423578}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( Min( MLU ,RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.7056530214424951, "obj2": 0.19007914601944942}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5981510000203443}, {"determining": "( Max( CRS,( ( PN / RRS ) + ( Max( CRS,( ( PN / ACS ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( ( FirstVNF_CPU_Server + ACS ) / PN ) )", "choosing": "Max( ( MUC / ( ( ( MUM - RMSe ) - Max( RMSe,MUR ) ) / ( ( ( MUM - DS ) * MUM ) + ( MUM * RMSe ) ) ) ),( ( RCSe + DS ) * ( RRSe / RMSe ) ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Max( CRS,( ( ( Max( ARS,CRS ) / ( ( FirstVNF_RAM_Server / ( BR + DDR ) ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM + ( Max( ( MLU + ( ( RMSe * MUM ) / MUC ) ),CS ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6065758280977287}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),( MUR + RRSe ) ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - Min( MUC ,( MUR * MUM ) ) ) + RMSe ) )", "obj1": 0.7524366471734892, "obj2": 0.1448441723259701}], "29": [{"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( DDR + FirstVNF_RAM ) ) ) / ( FirstVNF_CPU / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( RMSe + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Max( BR,FirstVNF_CPU ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( CRS / PN ) )", "choosing": "( MLU / ( Max( ( Min( RRSe ,DS ) + ( DS * Min( MLU ,RRSe ) ) ),MUC ) + ( Max( ( MUC * MLU ),( ( RCSe - DS ) + ( Max( ( CS - DS ),( RCSe / RCSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ACS,FirstVNF_CPU_Server ) ) - ( ( ACS - ( AMS + FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "Min( RMSe ,( MUR * CS ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.4619883040935672, "obj2": 0.45994022905071746}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452309}, {"determining": "( Max( Max( CRS,( BR - Const ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * ARS ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RRSe + MUR ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6803118908382066, "obj2": 0.21632303040987064}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( MUR + RCSe ) - RRSe ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( Min( MUR ,RRSe ) * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.6881091617933723, "obj2": 0.20439735508055934}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_RAM_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( CS - DS ) ) ) ) ,RRSe ) )", "obj1": 0.6686159844054581, "obj2": 0.22586387122594037}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( Max( ( ( ARS - FirstVNF_RAM_Server ) - RRS ),( ( PN / MDR ) + ACS ) ) - Max( PN,MDR ) )", "choosing": "( Max( Max( MLU,MUC ),Max( ( ( RCSe * ( Max( CS,MUM ) - Min( RCSe ,( MLU * MUR ) ) ) ) - Min( RCSe ,( CS + CS ) ) ),RMSe ) ) / ( MUC + DS ) )", "obj1": 0.42105263157894735, "obj2": 0.5180058353670063}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / BR ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8654970760233918, "obj2": 0.06418179749193234}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( Max( FirstVNF_RAM_Server,ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - DDR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.935672514619883, "obj2": 0.033611837155744895}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( MDR / FirstVNF_RAM_Server ) * ( PN - MDR ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( CS - ( CS + Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ) + RMSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16992022541631488}, {"determining": "( Max( Const,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MLU ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3508771929824561, "obj2": 0.6218388522186963}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.37816764132553604, "obj2": 0.5818640494325745}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + MUC ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.6140350877192983, "obj2": 0.27607854107753155}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( FirstVNF_CPU_Server * PN ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) + ( RMSe / ( ( MUM / DS ) + DS ) ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6715152620024825}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6569200779727096, "obj2": 0.24537895782718613}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Const * ARS ) ) / MDR ) ) * ( PN - ACS ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( ( MUM * RRSe ) - ( CS + Min( ( CS * Min( CS ,RMSe ) ) ,( RMSe / Max( ( MUM / CS ),( CS + RMSe ) ) ) ) ) ) + RMSe ) )", "obj1": 0.8810916179337231, "obj2": 0.05744169991743743}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( ( ( MUR - MLU ) / Max( CS,RCSe ) ) / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5107212475633528, "obj2": 0.3952904150612003}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( MDR / ( FirstVNF_Mem_Server + DDR ) ) - ( MDR / PN ) )", "choosing": "( ( MUR * RCSe ) / ( Min( Max( MUC,DS ) ,MUR ) / ( RMSe / RRSe ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08855938417145037}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / ( DS + MUC ) ) )", "obj1": 0.5692007797270955, "obj2": 0.3275413562542206}, {"determining": "( ( PN / ( Max( RRS,( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( ( ( MUC + ( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9766081871345029, "obj2": 0.010762251739164412}, {"determining": "( Max( ( ( CRS - Min( Const ,( ( DDR / MDR ) - FirstVNF_RAM ) ) ) - RRS ),( ( DDR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + MUC ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.4171539961013645, "obj2": 0.5236044322920957}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),Const ) - Max( MRS,ARS ) )", "choosing": "( ( RRSe / ( DS - ( MUM + CS ) ) ) / Max( Min( RRSe ,( RRSe / MUM ) ),Max( RMSe,RMSe ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359178}, {"determining": "( Max( ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,MRS ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6579625495031645}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( MUR * CS ) ) )", "obj1": 0.4834307992202729, "obj2": 0.4287255525121458}, {"determining": "( ACS - ( MDR * ( FirstVNF_RAM * FirstVNF_Mem ) ) )", "choosing": "Min( Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( ( ( RCSe / MUM ) * MUR ) / DS ) ) ) ) ,( MUM / RCSe ) ) ,( Min( ( RMSe + Max( Max( MUC,DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442263}, {"determining": "( Max( CRS,( ( PN / Max( ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) / ( FirstVNF_RAM / DDR ) ) - Min( MDR ,AMS ) ) ) ) + FirstVNF_CPU_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,Min( CS ,Min( Max( ( ( MUM - CS ) * RRSe ),RMSe ) ,( CS - RRSe ) ) ) ) / Max( Min( Min( MUC ,DS ) ,MUR ),( Max( ( MLU * ( MUR + MLU ) ),( MUC / DS ) ) / ( ( CS - DS ) * ( RMSe / ( Min( RRSe ,MUR ) + ( MLU / RCSe ) ) ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.41325536062378165, "obj2": 0.5376221575459624}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem / ACS ) ) / PN ) ) + CRS ) ) - ( ARS / Max( ( CRS * ( FirstVNF_RAM * MRS ) ),AMS ) ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - ( MUM / RRSe ) ),( MUC - MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.9688109161793372, "obj2": 0.01771670157076554}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.5880590242202992}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) / Max( ( RRSe / MUC ),Min( Max( ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ),DS ) ,MUR ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.39571150097465885, "obj2": 0.555038569619963}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( ( ARS / Max( ACS,RRS ) ) - ( ( ( ( Const * RRS ) * AMS ) - CRS ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Min( Max( Max( Min( MUR ,( Max( RMSe,DS ) * ( MUC / Min( RMSe ,CS ) ) ) ),( CS - RRSe ) ),MUM ) ,( MUR * MUM ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( Max( Max( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ),CRS ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * ( ARS / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( ( DS * ( MUC / RCSe ) ) - ( ( ( RRSe / ( DS - ( RRSe + CS ) ) ) - MLU ) + CS ) ) + CS ) )", "obj1": 0.5886939571150097, "obj2": 0.301740585477994}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( ARS / PN ) ),( ( Max( ( PN - ( FirstVNF_RAM + MRS ) ),( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) / ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( MUM ,( MUM / RRSe ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( RMSe,MLU ) ) )", "obj1": 0.8304093567251462, "obj2": 0.08185679112605991}, {"determining": "( Max( CRS,( ( PN / Max( RRS,( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.30994152046783624, "obj2": 0.691950761844502}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.4726536916028818}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( ( MDR / FirstVNF_RAM_Server ) + PN ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / ( DS + MUC ) ) )", "obj1": 0.43859649122807015, "obj2": 0.49369273923790913}, {"determining": "( Max( CRS,( ( PN / ( MDR + ARS ) ) + ( PN / ( FirstVNF_RAM_Server + ( MDR - ( RRS + DDR ) ) ) ) ) ) - ( ( BR - FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( DS + ( MUR * ( DS * Min( Max( ( ( MUR - RRSe ) * Min( MLU ,MUR ) ),( MUC - ( MUC + DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3937621832358674, "obj2": 0.562671611584088}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 0.47953216374269003, "obj2": 0.436966993626865}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.3391812865497076, "obj2": 0.6405844820571878}, {"determining": "( Max( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),( MDR / FirstVNF_RAM_Server ) ) ) ),( ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) + FirstVNF_RAM ) ),( ( PN / DDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( Min( Max( MUC,( MUC * RRSe ) ) ,MUR ) * MUM ) / ( DS * Min( MLU ,RRSe ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * FirstVNF_CPU ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.5750487329434698, "obj2": 0.3227961736968942}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.44639376218323584, "obj2": 0.4920333994043971}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * Min( MRS ,Const ) ) ) * Max( ( ( PN * CRS ) / ( CRS / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( ( RRSe - ( CS - ( CS + Min( ( ( MUM * MUR ) - Min( MUR ,DS ) ) ,RRSe ) ) ) ) - MUM ) )", "obj1": 0.6101364522417154, "obj2": 0.280749237820981}, {"determining": "( Max( CRS,( ( PN / ( CRS + FirstVNF_RAM_Server ) ) + ( PN / MDR ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( MUR * ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.6608187134502924, "obj2": 0.23396107865482135}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 0.48927875243664715, "obj2": 0.4243561110397544}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Min( ( DS + MUC ) ,MUM ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6787720800652144}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5981510000203443}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( Max( Min( ( PN * FirstVNF_Mem ) ,( MRS / BR ) ),FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ACS ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - Min( Min( MUM ,RRSe ) ,Max( RMSe,MUC ) ) ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( ( MUR + MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.7699805068226121, "obj2": 0.12548618343613224}, {"determining": "( ( ( RRS - ( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( AMS - DDR ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + Max( ( ( DS - RMSe ) + Min( ( Min( RMSe ,MUC ) + ( RCSe + RMSe ) ) ,RMSe ) ),MUR ) ) ) / ( Max( CS,MUM ) / ( Min( Max( MUC,DS ) ,MUR ) / ( ( RCSe / RMSe ) / ( DS / ( MUR * ( RMSe / RRSe ) ) ) ) ) ) )", "obj1": 0.7446393762183235, "obj2": 0.15384092586967882}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5536062378167641, "obj2": 0.3366377210643848}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / Max( ( CS - DS ),( RCSe / RRSe ) ) )", "obj1": 0.847953216374269, "obj2": 0.07402242600973216}, {"determining": "( ( ( FirstVNF_RAM + Min( FirstVNF_RAM ,AMS ) ) + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - AMS ),( ( PN / PN ) * ( PN / MDR ) ) ) )", "choosing": "Min( ( CS - DS ) ,( MUR * MUC ) )", "obj1": 0.4152046783625731, "obj2": 0.5351398719731717}, {"determining": "( ( ( Max( BR,PN ) / ( ACS * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU + CS ) / MUC ) / ( ( RCSe / RRSe ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5490866557972119}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - BR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( Min( RMSe ,( RRSe / RCSe ) ) * MLU ) / ( Min( MLU ,CS ) - CS ) ),( ( MUC * ( MUM + DS ) ) - RMSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( BR * FirstVNF_CPU ) - ( DDR - MRS ) )", "choosing": "Min( ( ( ( MLU / ( Max( CS,( ( MUM + MUM ) + MUM ) ) * MUM ) ) / ( RMSe + ( MLU / MUC ) ) ) / ( DS + MUC ) ) ,Min( MUR ,CS ) )", "obj1": 0.9922027290448343, "obj2": 0.004067286301899219}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( MUM * RMSe ) ) ) ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.4726536916028818}, {"determining": "( ( Max( CRS,( ( PN / ( PN / MDR ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( MUR * ( ( Max( CS,( ( MUR - MLU ) / Max( CS,RCSe ) ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05606336037310536}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / RRS ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),Max( RCSe,DS ) )", "obj1": 0.6432748538011696, "obj2": 0.25162066959097606}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( BR * AMS ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * RRS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( PN / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * ( MUR / Min( RCSe ,( MLU * MLU ) ) ) ) / Min( ( ( Max( CS,MUR ) * Min( MLU ,RRSe ) ) / MUC ) ,( Min( ( DS / MUC ) ,( DS / MUC ) ) + MUC ) ) ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1954874021098942}, {"determining": "( Max( ( ( DDR * DDR ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + Min( ( DDR / FirstVNF_RAM_Server ) ,( ( Max( DDR,( PN - FirstVNF_RAM ) ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( RMSe,MUM ) / MUC ) + RMSe ) ) / ( RRSe + MUC ) )", "obj1": 0.43079922027290446, "obj2": 0.5029916986678146}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( CS - ( CS + ( ( CS * Min( CS ,RMSe ) ) / ( RMSe / Max( ( CS + RMSe ),( MUM / CS ) ) ) ) ) ) + ( Max( ( MUC * MLU ),( ( RCSe - Min( MUC ,MUM ) ) + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.543859649122807, "obj2": 0.3471350534419244}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.7504873294346979, "obj2": 0.1455597255886701}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - ( FirstVNF_Mem / ACS ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06925091034831252}, {"determining": "( Max( CRS,( ( ( ( ( RRS * FirstVNF_Mem_Server ) * ARS ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( MUC * Min( ( Min( RCSe ,RCSe ) * CS ) ,CS ) ) + Min( RCSe ,RMSe ) ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( MUR * RRSe ) ) ) ) ) ,( MUM * CS ) )", "obj1": 0.36257309941520466, "obj2": 0.6065758280977287}, {"determining": "( Max( CRS,( ( PN / PN ) + ( ( MRS * FirstVNF_RAM ) / MDR ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM + ( Max( ( CS + ( Min( MUC ,MUR ) / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( ( MUR * MLU ) * CS ) )", "obj1": 0.7134502923976608, "obj2": 0.18309255643246794}, {"determining": "( Max( CRS,( ( Const * ( PN * ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( MRS / DDR ) ) / PN ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( CS * Max( ( ( Min( ( Min( RCSe ,MLU ) / ( RCSe * MUM ) ) ,MUM ) * MUM ) + ( CS - Max( MUC,Min( MUC ,MUR ) ) ) ),RCSe ) ) / ( RMSe + DS ) )", "obj1": 0.34307992202729043, "obj2": 0.6341126512617862}, {"determining": "( ( ( RRS + ( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( Min( FirstVNF_RAM ,MRS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.49317738791423, "obj2": 0.41943099539317436}, {"determining": "( Max( CRS,( ( ( ( BR + FirstVNF_RAM ) / Min( MRS ,( Min( FirstVNF_CPU_Server ,MRS ) * FirstVNF_Mem_Server ) ) ) / PN ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( ( MUC - MUC ) - MUM ),( MLU - MUC ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ,( ( ( RCSe * DS ) * Min( ( ( Max( MUC,MUR ) * DS ) / MUR ) ,( RMSe - ( ( ( RCSe * DS ) * Min( MLU ,RRSe ) ) * MLU ) ) ) ) + MUC ) )", "obj1": 0.7192982456140351, "obj2": 0.17567546061594336}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6458131666605091}, {"determining": "( Max( DDR,( MRS + ( RRS / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / Max( ( ( RRSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.7621832358674464, "obj2": 0.13323410910539596}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( CRS,( ( ARS / ( Max( RRS,( ( MDR / FirstVNF_RAM_Server ) + PN ) ) * FirstVNF_CPU ) ) + Min( FirstVNF_Mem_Server ,Min( DDR ,Max( Max( CRS,AMS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) - ( MUM / RCSe ) ) ,( MUR + RMSe ) )", "obj1": 0.44834307992202727, "obj2": 0.4841632462214688}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( Max( CRS,( ( PN / ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ) ) + MRS ) ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "Min( ( ( RCSe - RRSe ) / Max( ( RRSe / MLU ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MLU ) + ( MUC / MLU ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13323410910539596}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( ARS,Max( Min( PN ,RRS ),CRS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( CS / CS ) - MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + ( Max( ( Max( CS,RCSe ) / ( MUR - MLU ) ),( CS + MLU ) ) - MUC ) ) ) ,( Max( MUC,DS ) * ( RCSe / RMSe ) ) ) )", "obj1": 0.3723196881091618, "obj2": 0.5975975213370094}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( FirstVNF_Mem_Server + PN ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),AMS ) ) )", "choosing": "Min( Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ,( CS * ( ( MLU + CS ) / ( DS + Min( RCSe ,Max( Max( Max( DS,CS ),MUM ),MUR ) ) ) ) ) )", "obj1": 0.6062378167641326, "obj2": 0.2875811352524836}, {"determining": "( Max( CRS,( ( PN / ACS ) + ( Max( CRS,( ( PN / ACS ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( Min( ( MLU + RRSe ) ,( ( DS * ( MLU * RRSe ) ) + ( MLU / MUC ) ) ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.018861621319946908}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / Min( ( ( Max( CS,CS ) * Min( MLU ,RRSe ) ) / MUC ) ,( Min( ( DS / MUC ) ,( DS / MUC ) ) + MUC ) ) ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1954874021098942}, {"determining": "( FirstVNF_CPU - ( ( FirstVNF_Mem / ACS ) + ( BR - ARS ) ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( ( DS * MUC ) ,MUR ) ) / ( ( MLU + CS ) / Min( ( ( ( ( ( RCSe * MLU ) - ( RRSe * RCSe ) ) * DS ) - DS ) - RRSe ) ,Min( MUC ,RMSe ) ) ) )", "obj1": 0.2787524366471735, "obj2": 0.7301628117021072}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.34307992202729043, "obj2": 0.6341126512617862}, {"determining": "( Max( CRS,( ( ( PN / ( ARS * ( ( PN / PN ) + ( PN / MDR ) ) ) ) / MDR ) + Max( Min( FirstVNF_Mem ,Const ),( MDR / ( MDR - Max( FirstVNF_RAM,MRS ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( DS * ( MLU * RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.7855750487329435, "obj2": 0.11295626169377591}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),( ( PN / ( CRS * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ( Max( CRS,( ( PN / PN ) + ACS ) ) - ( MDR / PN ) ) ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * AMS ) )", "choosing": "Min( ( Min( ( Max( ( MUR * MLU ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) - RRSe ) ,Min( MUR ,RMSe ) ) / Max( Max( CS,Min( ( ( RRSe / MLU ) * MUR ) ,MLU ) ),Min( MUC ,RMSe ) ) ) ,( ( ( Max( ( Min( DS ,RRSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) )", "obj1": 0.4951267056530214, "obj2": 0.41412737915378445}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.36257309941520466, "obj2": 0.6065758280977287}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.35477582846003897, "obj2": 0.6167130299516692}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( Min( MLU ,( ( ( ( RCSe * MLU ) - ( RRSe * MUM ) ) * DS ) - DS ) ) + ( RMSe / MUC ) ) )", "obj1": 0.6296296296296297, "obj2": 0.2638402663172629}], "30": [{"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),Const ) - Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) )", "choosing": "( ( RMSe / ( RMSe + RMSe ) ) / Max( Min( RRSe ,( RRSe / MUM ) ),Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( ( Max( CRS,( ( PN / MDR ) / ( DDR + FirstVNF_RAM ) ) ) / ( FirstVNF_CPU / PN ) ) - ( ARS * FirstVNF_CPU_Server ) ) ) - ( PN / ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( RMSe + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ACS,FirstVNF_CPU_Server ) ) - ( ( ACS - ( AMS + FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( ( MLU + CS ) / ( DS + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.4619883040935672, "obj2": 0.45994022905071746}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,MRS ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6579625495031645}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( Max( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ),CRS ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * ( ARS / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( FirstVNF_Mem_Server + FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( ( DS * ( MUC / RCSe ) ) - ( ( ( RRSe / ( DS - ( RRSe + CS ) ) ) - MLU ) + CS ) ) + CS ) )", "obj1": 0.5886939571150097, "obj2": 0.301740585477994}, {"determining": "( Max( Max( CRS,( BR - Const ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * ARS ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RRSe + MUR ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6803118908382066, "obj2": 0.21632303040987064}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( Max( CRS,( ( ( ( ( PN * PN ) / FirstVNF_RAM_Server ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( ( MUR * CS ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5769980506822612, "obj2": 0.3170258507371179}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452309}, {"determining": "( Max( CRS,( ( ( PN / ( ARS * ( ( PN / PN ) + ( PN / MDR ) ) ) ) / MDR ) + Max( Min( FirstVNF_Mem ,Const ),( MDR / ( MDR - Max( FirstVNF_RAM,MRS ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( Min( Max( MUC,( MUC * RRSe ) ) ,MUR ) * MUM ) / ( DS * Min( MLU ,RRSe ) ) ) ,( ( MLU / Max( DS,MUR ) ) + MUM ) )", "obj1": 0.7855750487329435, "obj2": 0.11295626169377591}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( Max( CRS,( ( ( PN / ( ARS * ( ( PN / PN ) + ( PN / MDR ) ) ) ) / MDR ) + Max( Min( FirstVNF_Mem ,Const ),( MDR / ( MDR - Max( FirstVNF_RAM,MRS ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( DS * ( MLU * RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.7855750487329435, "obj2": 0.11295626169377591}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6458131666605091}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_RAM_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( CS - DS ) ) ) ) ,RRSe ) )", "obj1": 0.6686159844054581, "obj2": 0.22586387122594037}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Max( ( ( CRS - Min( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) ,( ARS - FirstVNF_RAM ) ) ) - RRS ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( ( MLU / MUC ) + DS ) )", "obj1": 0.42300194931773877, "obj2": 0.5153343389104874}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Min( ( DS + MUC ) ,MUM ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6787720800652144}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( Max( CRS,( ( PN / ACS ) + ( Max( CRS,( ( PN / ACS ) + ( ( PN * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Const ) )", "choosing": "Max( Min( ( MLU + RRSe ) ,( ( DS * ( MLU * RRSe ) ) + ( MLU / MUC ) ) ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.018861621319946908}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( ( MDR / FirstVNF_RAM_Server ) + PN ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.43859649122807015, "obj2": 0.49182229208749934}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3723196881091618, "obj2": 0.5877554676995672}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,FirstVNF_Mem_Server ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( MLU ,RRSe ),( ( Min( RCSe ,( CS + CS ) ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.30214424951267055, "obj2": 0.6984246919531368}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( RCSe - RRSe ) / Max( ( RRSe / MLU ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MLU ) + ( MUC / MLU ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5465024228257268}, {"determining": "( Max( CRS,( ( PN / Max( ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) / ( FirstVNF_RAM / DDR ) ) - Min( MDR ,AMS ) ) ) ) + FirstVNF_CPU_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,Min( CS ,Min( Max( ( ( MUM - CS ) * RRSe ),RMSe ) ,( CS - RRSe ) ) ) ) / Max( Min( Min( MUC ,DS ) ,MUR ),( Max( ( MLU * ( MUR + MLU ) ),( MUC / DS ) ) / ( ( CS - DS ) * ( RMSe / ( Min( RRSe ,MUR ) + ( MLU / RCSe ) ) ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.41325536062378165, "obj2": 0.5376221575459624}, {"determining": "( Max( ( ( CRS - Min( Const ,( ( DDR / MDR ) - FirstVNF_RAM ) ) ) - RRS ),( ( DDR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + MUC ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.4171539961013645, "obj2": 0.5236044322920957}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,( FirstVNF_Mem_Server + PN ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / Max( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ),AMS ) ) )", "choosing": "Min( Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ,( CS * ( ( MLU + CS ) / ( DS + Min( RCSe ,Max( Max( Max( DS,CS ),MUM ),MUR ) ) ) ) ) )", "obj1": 0.6062378167641326, "obj2": 0.2875811352524836}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( Max( Min( ( PN * FirstVNF_Mem ) ,( MRS / BR ) ),FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ACS ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - Min( Min( MUM ,RRSe ) ,Max( RMSe,MUC ) ) ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( ( MUR + MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.7699805068226121, "obj2": 0.12548618343613224}, {"determining": "( ( Max( CRS,( ( PN / ( MDR / MDR ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,( Max( ( CS + ( Min( MUC ,MUR ) / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MLU + ( MUR * ( ( Max( CS,( ( MUR - MLU ) / Max( CS,RCSe ) ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.8791423001949318, "obj2": 0.05805713312006857}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( Max( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ),( FirstVNF_Mem * FirstVNF_RAM_Server ) ) + ( Max( PN,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( RCSe ,( MLU * MUR ) ) ,( MLU / ( ( RRSe * CS ) * ( DS - CS ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.4862742997432844}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( Max( FirstVNF_RAM_Server,ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - DDR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.935672514619883, "obj2": 0.033611837155744895}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( MUM * RMSe ) ) ) ),Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.44834307992202727, "obj2": 0.4793096480155934}, {"determining": "( ( ARS / Max( ACS,RRS ) ) - ( ( ( ( Const * RRS ) * AMS ) - CRS ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Min( Max( Max( Min( MUR ,( Max( RMSe,DS ) * ( MUC / Min( RMSe ,CS ) ) ) ),( CS - RRSe ) ),MUM ) ,( MUR * MUM ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7017543859649122, "obj2": 0.19458623184794047}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC / ( RMSe / RMSe ) ) + ( Max( ( CS + ( Min( MUC ,MUR ) / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.5516569200779727, "obj2": 0.3424764692494458}, {"determining": "( Max( CRS,( ( ( MDR - RRS ) / ( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) + ACS ) ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR * CS ) / RRSe ) / Min( Max( MUC,CS ) ,MUR ) ) / ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( RMSe * MUM ) ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.298208979212405}, {"determining": "( Max( AMS,( ( ( ( MDR * ACS ) / ( DDR / PN ) ) - RRS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Min( Max( MUC,DS ) ,MUR ) / ( RCSe / RRSe ) ) / ( ( MLU + CS ) / Min( ( ( Min( RCSe ,DS ) - DS ) - RRSe ) ,Max( MUC,DS ) ) ) )", "obj1": 0.6861598440545809, "obj2": 0.20837991236154055}, {"determining": "( Max( CRS,( ( PN / Max( RRS,( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.30994152046783624, "obj2": 0.691950761844502}, {"determining": "( Max( ( FirstVNF_CPU_Server + DDR ),( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + MRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5165692007797271, "obj2": 0.393524737385057}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 0.47953216374269003, "obj2": 0.436966993626865}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( Max( RRS,( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / Min( ( ( Max( CS,CS ) * Min( MLU ,RRSe ) ) / MUC ) ,( Min( ( DS / MUC ) ,( DS / MUC ) ) + MUC ) ) ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( MUC - MLU ) ) ) ) ) ) )", "obj1": 0.7309941520467836, "obj2": 0.16277246293040606}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( FirstVNF_CPU_Server * PN ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) + ( RMSe / ( ( MUM / DS ) + DS ) ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6715152620024825}, {"determining": "( Max( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),( MDR / FirstVNF_RAM_Server ) ) ) ),( ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) + FirstVNF_RAM ) ),( ( PN / DDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( DS * ( MLU * RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * Min( MRS ,Const ) ) ) * Max( ( ( PN * CRS ) / ( CRS / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( ( RRSe - ( CS - ( CS + Min( ( ( MUM * MUR ) - Min( MUR ,DS ) ) ,RRSe ) ) ) ) - MUM ) )", "obj1": 0.6101364522417154, "obj2": 0.280749237820981}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( BR - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + ( RRSe * RCSe ) ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.621832358674464, "obj2": 0.27275521242345785}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.4346978557504873, "obj2": 0.5002662319474216}, {"determining": "( ( Max( CRS,Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) - ( MDR / PN ) ) - ( FirstVNF_CPU / ( FirstVNF_CPU * ARS ) ) )", "choosing": "Min( ( MLU + ( MUR * ( ( Max( CS,( ( RMSe - MLU ) / Max( CS,RMSe ) ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) ,Min( RMSe ,MUC ) )", "obj1": 0.9278752436647173, "obj2": 0.035899406862375124}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3820662768031189, "obj2": 0.5802242841148726}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / BR ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.8654970760233918, "obj2": 0.06418179749193234}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.4580896686159844, "obj2": 0.47164727837810444}, {"determining": "( Max( ( ( CRS - Min( Const ,( ARS - FirstVNF_RAM ) ) ) - RRS ),( ( ( Min( Const ,FirstVNF_Mem_Server ) / Const ) / MDR ) + ( DDR / BR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) - ( ( MUC - Max( DS,( CS - RMSe ) ) ) * Max( RRSe,( MUM * MUR ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.2982456140350877, "obj2": 0.7037027902017811}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( Min( MLU ,( ( ( ( RCSe * MLU ) - ( RRSe * MUM ) ) * DS ) - DS ) ) + ( RMSe / MUC ) ) )", "obj1": 0.6296296296296297, "obj2": 0.2638402663172629}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MLU ) ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009446}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5614035087719298, "obj2": 0.33286851986334376}, {"determining": "( Max( FirstVNF_Mem,MDR ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / ( MUM * Min( RMSe ,( ( MUC + MUM ) + MUC ) ) ) ),( MUM / MLU ) ) / ( MUC + DS ) )", "obj1": 0.3586744639376218, "obj2": 0.6107713385304265}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / BR ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( ARS * FirstVNF_CPU ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.8654970760233918, "obj2": 0.06418179749193234}, {"determining": "( ( ( FirstVNF_RAM + Min( FirstVNF_RAM ,AMS ) ) + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - AMS ),( ( PN / PN ) * ( PN / MDR ) ) ) )", "choosing": "Min( ( CS - DS ) ,( MUR * MUC ) )", "obj1": 0.4152046783625731, "obj2": 0.5351398719731717}, {"determining": "( Max( CRS,( ( PN / ( MDR + ARS ) ) + ( PN / ( FirstVNF_RAM_Server + ( MDR - ( RRS + DDR ) ) ) ) ) ) - ( ( BR - FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( DS + ( MUR * ( DS * Min( Max( ( ( MUR - RRSe ) * Min( MLU ,MUR ) ),( MUC - ( MUC + DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( ( Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU + ( MUR * ( ( Max( CS,( ( MUR - MLU ) / Max( CS,RCSe ) ) ) + ( Min( RMSe ,RRSe ) * Min( Max( MUC,RRSe ) ,MUM ) ) ) + RMSe ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442255}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / ( MUR * ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) ,( MUR * CS ) )", "obj1": 0.6374269005847953, "obj2": 0.2621852495576468}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + DS ) ) ) ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6715152620024825}, {"determining": "( ( ( RRS + ( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / PN ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( Min( FirstVNF_RAM ,MRS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6884815930095882}, {"determining": "( Max( ( Max( ( ( ( FirstVNF_Mem + ( CRS - CRS ) ) / PN ) + FirstVNF_RAM_Server ),CRS ) - ( MDR / PN ) ),Const ) - Max( AMS,ARS ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - ( ( MUM + ( MUM - MUC ) ) * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / Max( ( CS - RMSe ),( RCSe / RRSe ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * MUR ) ) ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5981510000203443}, {"determining": "( ( ( Max( BR,PN ) / ( ACS * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU + CS ) / MUC ) / ( ( RCSe / RRSe ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5490866557972119}, {"determining": "( ( ( RRS + ( BR + Max( ( ( FirstVNF_RAM - BR ) - Max( MRS,Const ) ),MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( Min( FirstVNF_RAM ,MRS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - MLU ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5977768427163297}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.43079922027290446, "obj2": 0.5029916986678146}, {"determining": "( Max( Min( MDR ,FirstVNF_CPU_Server ),( PN / ( ( MDR / FirstVNF_RAM_Server ) * ( PN - MDR ) ) ) ) - ( ( FirstVNF_Mem_Server - RRS ) + DDR ) )", "choosing": "( ( MUM / MLU ) / ( ( CS - ( CS + Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) ) ) + RMSe ) )", "obj1": 0.7270955165692008, "obj2": 0.16992022541631488}, {"determining": "( ( PN + ( Max( DDR,( MRS + ( RRS / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( Max( ( CS - RMSe ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.9512670565302144, "obj2": 0.024036396327011787}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( MUR + RCSe ) - RRSe ) + ( ( ( CS + ( MLU / MUC ) ) * CS ) / Min( MUM ,( DS / ( Min( MUR ,RRSe ) * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.5107212475633528, "obj2": 0.3952904150612003}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( ( ( MUR - MLU ) / Max( CS,RCSe ) ) / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6881091617933723, "obj2": 0.20439735508055934}, {"determining": "( ( CRS + ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( ( MDR / FirstVNF_RAM_Server ) + Max( FirstVNF_Mem,Max( Const,Const ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( MUR + ( MUC * RCSe ) ),Min( Max( DS,DS ) ,MUR ) ) / Max( RMSe,MUC ) ) ,( MUR * CS ) )", "obj1": 0.34307992202729043, "obj2": 0.6334782684695036}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + MRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.7680311890838206, "obj2": 0.13060653521663776}, {"determining": "( ( MDR / ( FirstVNF_Mem_Server + DDR ) ) - ( MDR / PN ) )", "choosing": "( ( MUR * RCSe ) / ( Min( Max( MUC,DS ) ,MUR ) / ( RMSe / RRSe ) ) )", "obj1": 0.8226120857699805, "obj2": 0.08855938417145037}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - BR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( Min( RMSe ,( RRSe / RCSe ) ) * MLU ) / ( Min( MLU ,CS ) - CS ) ),( ( MUC * ( MUM + DS ) ) - RMSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3937621832358674, "obj2": 0.562671611584088}, {"determining": "( Max( ( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( FirstVNF_Mem - MRS ) ) ) ) + Min( Max( ( Max( MRS,( DDR * FirstVNF_CPU_Server ) ) - FirstVNF_RAM ),RRS ) ,MDR ) ),FirstVNF_Mem_Server ) - Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( Max( ( CS / MUC ),( ( Max( RRSe,CS ) + ( MUM - RRSe ) ) + RMSe ) ) / Min( Min( Min( RMSe ,( ( ( MUR + RRSe ) - CS ) + CS ) ) ,MLU ) ,RMSe ) )", "obj1": 0.6588693957115009, "obj2": 0.2425344693079873}, {"determining": "( ( PN / ( Max( RRS,( ( MDR / FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( ( ( MUC + ( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9766081871345029, "obj2": 0.010762251739164412}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.543859649122807, "obj2": 0.3471350534419244}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( ARS / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.8284600389863548, "obj2": 0.08281280143908903}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47276301417838695}, {"determining": "( ( BR * FirstVNF_CPU ) - ( DDR - MRS ) )", "choosing": "Min( ( ( ( MLU / ( Max( CS,( ( MUM + MUM ) + MUM ) ) * MUM ) ) / ( RMSe + ( MLU / MUC ) ) ) / ( DS + MUC ) ) ,Min( MUR ,CS ) )", "obj1": 0.9922027290448343, "obj2": 0.004067286301899219}, {"determining": "( Max( ( Max( ( Max( MDR,ARS ) / FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) * MRS ),( ( PN / ( ( AMS / FirstVNF_CPU_Server ) - ( CRS - MDR ) ) ) * ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Min( MUM ,( DS / ( RRSe * MUR ) ) ) - CS ),Max( MUM,( ( CS + RMSe ) / Min( RMSe ,( Min( MLU ,MUM ) + MUR ) ) ) ) ) )", "obj1": 0.6471734892787524, "obj2": 0.24971997555284844}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN / PN ) + Max( RRS,DDR ) ) ) ) / MDR ) + Max( Min( FirstVNF_Mem ,Const ),CRS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * DS ) + ( MLU / ( Min( ( ( RCSe * RCSe ) - MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15493501340404195}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * ( MDR / PN ) ) / RRS ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( ( DS * ( RRSe * DS ) ) + MUR ) ) ) ) ),( DS + MUC ) )", "obj1": 0.6530214424951267, "obj2": 0.2471570119732625}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / Max( ( ( RRSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.746588693957115, "obj2": 0.1474717462147284}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( FirstVNF_Mem / ACS ) ) / PN ) ) + CRS ) ) - ( ARS / FirstVNF_Mem ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - RRSe ),( MUC - MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.009209505295225622}, {"determining": "( Max( CRS,( ( PN / ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ) ) + MRS ) ) - ( FirstVNF_RAM_Server + RRS ) )", "choosing": "Min( ( ( RCSe - RRSe ) / Max( ( RRSe / MLU ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MLU ) + ( MUC / MLU ) ) )", "obj1": 0.7621832358674464, "obj2": 0.13323410910539596}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( ( ( MUR - MLU ) / Max( CS,RCSe ) ) / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5107212475633528, "obj2": 0.3952904150612003}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / Min( ( ( Max( CS,CS ) * Min( MLU ,RRSe ) ) / MUC ) ,( Min( ( DS / MUC ) ,( DS / MUC ) ) + MUC ) ) ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.555038569619963}], "31": [{"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - ( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR * ACS ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - Min( Min( MUM ,RRSe ) ,Max( RMSe,MUC ) ) ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( ( MUR + MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),Const ) - Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) )", "choosing": "( ( RMSe / ( RMSe + RMSe ) ) / Max( Min( RRSe ,( RRSe / MUM ) ),Max( RMSe,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( RRS,( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ),FirstVNF_CPU_Server ) ) - ( ( ACS - ( AMS + FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "( ( ( RCSe / RRSe ) / Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( MUC - MLU ) ) ) ) ) / ( ( MLU + CS ) / ( DS + MUC ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5614035087719298, "obj2": 0.33286851986334376}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),MDR ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - Max( CS,RCSe ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.7992202729044834, "obj2": 0.10687572115740367}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( CRS,( ( ( MDR * FirstVNF_RAM_Server ) * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / ( MUR * ( ( Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) ,( MUR * CS ) )", "obj1": 0.7115009746588694, "obj2": 0.18592693797278928}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( MUM * RMSe ) ) ) ),Max( ( RMSe - CS ),Max( MUM,( Max( CS,RRSe ) / Min( RMSe ,( Min( MUM ,MLU ) + MUR ) ) ) ) ) )", "obj1": 0.48927875243664715, "obj2": 0.4206589290198175}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( FirstVNF_CPU * Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( ( Max( FirstVNF_CPU,CRS ) + ACS ) ,Min( MRS ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( MLU + Min( Max( DS,( MLU + MLU ) ) ,MUM ) ) + ( RMSe / MUC ) ) )", "obj1": 0.8518518518518519, "obj2": 0.0703277552567537}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452309}, {"determining": "( Max( CRS,( ( ( ( ( PN * PN ) / FirstVNF_RAM_Server ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.5750487329434698, "obj2": 0.31798186105014703}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5886939571150097, "obj2": 0.30174058547799393}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( BR * PN ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ACS ) )", "choosing": "( ( Max( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MLU ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.7777777777777778, "obj2": 0.1177663170619161}, {"determining": "( ( CRS + ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( ( MDR / FirstVNF_RAM_Server ) + Max( FirstVNF_Mem,Max( Const,Const ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( MUR + ( MUC * RCSe ) ),Min( Max( DS,DS ) ,MUR ) ) / Max( RMSe,MUC ) ) ,( MUR * CS ) )", "obj1": 0.34307992202729043, "obj2": 0.6334782684695036}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( BR - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + ( RRSe * RCSe ) ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.621832358674464, "obj2": 0.27275521242345785}, {"determining": "( Max( ( ( CRS - Min( Const ,( ( DDR / MDR ) - FirstVNF_RAM ) ) ) - RRS ),( ( DDR / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + MUC ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.4171539961013645, "obj2": 0.5236044322920957}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / Max( ( ( RRSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.746588693957115, "obj2": 0.1474717462147284}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + PN ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * DS ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5789473684210527, "obj2": 0.3126602273980894}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_RAM_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( CS - DS ) ) ) ) ,RRSe ) )", "obj1": 0.6686159844054581, "obj2": 0.22586387122594037}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / MDR ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( ( FirstVNF_CPU_Server / AMS ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RCSe * Max( DS,MLU ) ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUR + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7212475633528265, "obj2": 0.17513274841754536}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.35282651072124754, "obj2": 0.6223813591929098}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( FirstVNF_Mem_Server * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( RMSe + RMSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.3937621832358674, "obj2": 0.562671611584088}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC / ( RMSe / RMSe ) ) + ( Max( ( CS + ( Min( MUC ,MUR ) / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.5516569200779727, "obj2": 0.3424764692494458}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.4619883040935672, "obj2": 0.45994022905071746}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( CS,MUM ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.8206627680311891, "obj2": 0.08789133553976032}, {"determining": "( Max( Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ),( MDR / FirstVNF_RAM_Server ) ) ) ),( ( Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) / PN ) + FirstVNF_RAM ) ),( ( PN / DDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( DS * ( MLU * Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) ) + ( MLU / MUC ) ) )", "obj1": 0.47368421052631576, "obj2": 0.4478777292258347}, {"determining": "( Max( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - Max( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RRSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.28460038986354774, "obj2": 0.723971268150495}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.46588693957115007, "obj2": 0.45492825902371986}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / ( MUR * ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) ,( MUR * CS ) )", "obj1": 0.6900584795321637, "obj2": 0.2034961848186056}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( Max( ( FirstVNF_CPU_Server + DDR ),( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) ) ) + MRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( MUC - Min( Min( MUM ,RRSe ) ,Max( RMSe,MUC ) ) ) )", "obj1": 0.50682261208577, "obj2": 0.4030642595901991}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.6101364522417154, "obj2": 0.2807379112330503}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.4580896686159844, "obj2": 0.47164727837810444}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3723196881091618, "obj2": 0.5877554676995672}, {"determining": "( Max( ( FirstVNF_CPU_Server + DDR ),( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + MRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( DS * ( MLU * RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.5165692007797271, "obj2": 0.3924497373943658}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / Min( ( ( Max( CS,CS ) * Min( MLU ,RRSe ) ) / MUC ) ,( Min( ( DS / MUC ) ,( DS / MUC ) ) + MUC ) ) ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( ( MUR / DS ) + MUR ) ) ) ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.555038569619963}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.43122274797595034}, {"determining": "( ( ( ( ( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) / MDR ) + ACS ) * ARS ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM / FirstVNF_CPU ) ) )", "choosing": "( ( MUM + DS ) / Max( CS,RRSe ) )", "obj1": 0.3489278752436647, "obj2": 0.6266218092886862}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU + CS ) / MUC ) / ( ( RCSe / RRSe ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) ) )", "obj1": 0.6393762183235867, "obj2": 0.2601500181859143}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7017543859649122, "obj2": 0.19458623184794047}, {"determining": "( Max( ( ( PN / MDR ) + ACS ),Max( CRS,( ( PN / ( Max( RRS,MDR ) + ( Max( Const,ACS ) + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( Min( RMSe ,CS ) + ( RMSe / DS ) ) / ( ( MLU / MUC ) + DS ) )", "obj1": 0.4269005847953216, "obj2": 0.5118054222139038}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( DS - ( ( RMSe - ( ( DS - MLU ) * DS ) ) + CS ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6427330157569542}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - BR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( Min( MLU ,CS ) - CS ) ) ,MUR ) )", "obj1": 0.8635477582846004, "obj2": 0.06488098060731297}, {"determining": "( ( Max( CRS,( ( PN / ( MDR / MDR ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,( Max( ( CS + ( Min( MUC ,MUR ) / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MLU + ( MUR * ( ( Max( CS,( ( MUR - MLU ) / Max( CS,RCSe ) ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.8791423001949318, "obj2": 0.05805713312006857}, {"determining": "( ( Max( CRS,( ( PN / ( MDR / MDR ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,( Max( ( CS + ( Min( MUC ,MUR ) / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MLU + ( MUR * ( ( Max( CS,( ( MUR - MLU ) / Max( CS,RCSe ) ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) )", "obj1": 0.8791423001949318, "obj2": 0.05805713312006857}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( ( ( DS - ( MUM + CS ) ) / Max( CS,RCSe ) ) / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6042884990253411, "obj2": 0.2843967781637618}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ACS,FirstVNF_CPU_Server ) ) - ( ( ACS - ( AMS + FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "Min( Min( ( MUM + ( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUM / RCSe ) ) ,( Min( Min( RMSe ,Max( ( MUC / DS ),RRSe ) ) ,Min( Max( MUC,RRSe ) ,MUM ) ) * CS ) )", "obj1": 0.29434697855750486, "obj2": 0.7091058079556364}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.3586744639376218, "obj2": 0.6107713385304265}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.43079922027290446, "obj2": 0.5029916986678146}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4321783491843637}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) + ( RMSe / ( ( MUM / DS ) + DS ) ) ) ) ) ) )", "obj1": 0.7017543859649122, "obj2": 0.19458623184794047}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( RMSe - MUM ) )", "obj1": 0.4093567251461988, "obj2": 0.5435710799261103}, {"determining": "( Max( FirstVNF_Mem,MDR ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / ( MUM * Min( RMSe ,( ( MUC + MUM ) + MUC ) ) ) ),( MUM / MLU ) ) / ( MUC + DS ) )", "obj1": 0.3586744639376218, "obj2": 0.6107713385304265}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) + ( RMSe / ( ( MUM / DS ) + DS ) ) ) ) ) ) )", "obj1": 0.6627680311890838, "obj2": 0.2407321287840799}, {"determining": "( Max( ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,MRS ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6579625495031645}, {"determining": "( ( ( FirstVNF_RAM + Min( FirstVNF_RAM ,AMS ) ) + FirstVNF_Mem_Server ) - Max( ( ( FirstVNF_Mem_Server * FirstVNF_RAM ) - AMS ),( ( PN / PN ) * ( PN / MDR ) ) ) )", "choosing": "Min( ( CS - DS ) ,( MUR * MUC ) )", "obj1": 0.4152046783625731, "obj2": 0.5351398719731717}, {"determining": "( Max( CRS,( ( PN / ( MDR + ARS ) ) + ( PN / ( FirstVNF_RAM_Server + ( MDR - ( RRS + DDR ) ) ) ) ) ) - ( ( BR - FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( DS + ( MUR * ( DS * Min( Max( ( ( MUR - RRSe ) * Min( MLU ,MUR ) ),( MUC - ( MUC + DS ) ) ) ,RRSe ) ) ) ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47276301417838695}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( RCSe ,( CS + CS ) ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.8128654970760234, "obj2": 0.09147419420407474}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ( ACS / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ( AMS * ( BR + AMS ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( ( Max( ( ( ( MUC + DS ) * Max( MUC,( RCSe - RMSe ) ) ) + CS ),DS ) + MLU ) + ( ( RCSe / MUC ) / Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5833343670017076}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( Max( CRS,( BR - Const ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * ARS ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RRSe + MUR ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6803118908382066, "obj2": 0.21536748077942722}, {"determining": "( Max( CRS,( ( ( PN / ( ARS * ( ( PN / PN ) + ( PN / MDR ) ) ) ) / MDR ) + Max( Min( FirstVNF_Mem ,Const ),( MDR / ( MDR - Max( FirstVNF_RAM,MRS ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.1110442410677177}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) - Min( ( DDR / FirstVNF_Mem ) ,( RRS * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / Min( MUC ,MLU ) ) ) ,Min( Max( RRSe,DS ) ,MUR ) )", "obj1": 0.3235867446393762, "obj2": 0.6633845972466516}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5981510000203443}, {"determining": "( ( ( Max( BR,PN ) / ( ACS * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU + CS ) / MUC ) / ( ( RCSe / RRSe ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5490866557972119}, {"determining": "( Max( CRS,( ( PN / ( ( FirstVNF_CPU_Server / AMS ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RCSe * Max( DS,MLU ) ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6471734892787524, "obj2": 0.24971997555284844}, {"determining": "( ( ( RRS + ( BR + Max( ( ( FirstVNF_RAM - BR ) - Max( MRS,Const ) ),MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( Min( FirstVNF_RAM ,MRS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - MLU ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5977768427163297}, {"determining": "( DDR - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( ( ( MUC + ( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9688109161793372, "obj2": 0.015396858163764753}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 0.7602339181286549, "obj2": 0.1344697548158603}, {"determining": "( Max( CRS,( ( ( MDR - RRS ) / ( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) + ACS ) ) - ( PN / FirstVNF_Mem ) )", "choosing": "( ( ( ( MUR * CS ) / RRSe ) / Min( Max( MUC,CS ) ,MUR ) ) / ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( RMSe * MUM ) ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.298208979212405}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.543859649122807, "obj2": 0.3471350534419244}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( Max( FirstVNF_RAM_Server,ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - DDR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.935672514619883, "obj2": 0.033611837155744895}, {"determining": "( ( PN + ( Max( DDR,( MRS + ( RRS / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( Max( ( CS - RMSe ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ,( Max( MUC,MUC ) + ( Max( RRSe,MUM ) / MUC ) ) )", "obj1": 0.9610136452241715, "obj2": 0.019258728969025713}, {"determining": "( ( ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( ( ARS * FirstVNF_Mem ),FirstVNF_Mem ) ) ),MDR ) ) + ( PN / ( Max( Max( FirstVNF_Mem_Server,( MDR / BR ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) ) ) - Max( Max( RRS,( BR + FirstVNF_RAM ) ),( Min( AMS ,BR ) / ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) )", "choosing": "Min( ( Min( ( Max( ( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.8654970760233918, "obj2": 0.06418179749193234}, {"determining": "( Max( Max( CRS,( BR - Const ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * ( MDR * DDR ) ) ) * Max( ( ( PN * ACS ) / ( DDR - PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * ARS ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RRSe + MUR ) / Min( ( DS * Max( RCSe,MUC ) ) ,Max( CS,DS ) ) )", "obj1": 0.6803118908382066, "obj2": 0.21536748077942722}, {"determining": "( ( Max( CRS,( ( PN / ( MDR / Min( BR ,FirstVNF_CPU ) ) ) + ( MDR / PN ) ) ) - ( MDR + PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Min( ( MLU + CS ) ,MUC ) / Min( MUM ,( DS / Min( RRSe ,MUR ) ) ) ) ,MLU ) ,( ( ( ( MUR - MLU ) / Max( CS,RCSe ) ) / MUC ) + RMSe ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( Max( CRS,( ( PN / Max( ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) / ( FirstVNF_RAM / DDR ) ) - Min( MDR ,AMS ) ) ) ) + FirstVNF_CPU_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,Min( CS ,Min( Max( ( ( MUM - CS ) * RRSe ),RMSe ) ,( CS - RRSe ) ) ) ) / Max( Min( Min( MUC ,DS ) ,MUR ),( Max( ( MLU * ( MUR + MLU ) ),( MUC / DS ) ) / ( ( CS - DS ) * ( RMSe / ( Min( RRSe ,MUR ) + ( MLU / RCSe ) ) ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.41325536062378165, "obj2": 0.5376221575459624}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.28654970760233917, "obj2": 0.719134133570989}, {"determining": "( ( ARS / Max( ACS,RRS ) ) - ( ( ( ( Const * RRS ) * AMS ) - CRS ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Min( Max( Max( Min( MUR ,( Max( RMSe,DS ) * ( MUC / Min( RMSe ,CS ) ) ) ),( CS - RRSe ) ),MUM ) ,( MUR * MUM ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( Const + MRS ) ) ) ) / ( ( ( CRS + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6458131666605091}, {"determining": "( Max( ( ( CRS - Min( Const ,( ARS - FirstVNF_RAM ) ) ) - RRS ),( ( ( Min( Const ,FirstVNF_Mem_Server ) / Const ) / MDR ) + ( DDR / BR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) - ( ( MUC - Max( DS,( CS - RMSe ) ) ) * Max( RRSe,( MUM * MUR ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.2982456140350877, "obj2": 0.7037027902017811}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( BR + FirstVNF_RAM ) * ( MDR / FirstVNF_RAM_Server ) ) * ( MDR / PN ) ) / PN ) ) + CRS ) ) - ( ARS / FirstVNF_Mem ) )", "choosing": "Max( ( MUR / ( ( MLU / MUC ) + RMSe ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - RRSe ),( MUC - MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.949317738791423, "obj2": 0.02445278899640833}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Min( ( DS + MUC ) ,MUM ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6787720800652144}, {"determining": "( ( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( FirstVNF_CPU_Server * PN ) ,( BR / BR ) ) - FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) ) - ( ( ( Max( ( ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) - Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / ( ( ( ARS + FirstVNF_Mem_Server ) + CRS ) - DDR ) ) ) / PN ) )", "choosing": "Min( ( Min( ( Max( ( MLU * ( DS * Min( MLU ,RRSe ) ) ),( Max( ( RRSe / MUC ),Min( MUM ,CS ) ) * ( RCSe / RMSe ) ) ) - ( Min( Max( ( MLU - MUM ),( DS + RRSe ) ) ,RRSe ) * DS ) ) ,Min( RCSe ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - ( RMSe / ( ( MUM / DS ) + DS ) ) ) ) ) ,( Max( MUC,( RRSe - DS ) ) + ( MLU / MLU ) ) )", "obj1": 0.6374269005847953, "obj2": 0.26070604012918525}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( RCSe - RRSe ) / Max( ( RRSe / MLU ),Min( MUC ,MUR ) ) ) ,( Max( MUC,MLU ) + ( MUC / MLU ) ) )", "obj1": 0.40350877192982454, "obj2": 0.5465024228257268}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MLU ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3820662768031189, "obj2": 0.5802242841148726}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + MRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.7680311890838206, "obj2": 0.13060653521663776}, {"determining": "( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + ( MDR / BR ) ) ) + ( PN / MDR ) ) ) - ( Min( BR ,FirstVNF_CPU_Server ) * FirstVNF_RAM ) )", "choosing": "( ( ( ( ( MUR * CS ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3079922027290448, "obj2": 0.6936798502165203}], "32": [{"determining": "( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( MUC * Max( Min( ( MUR - CS ) ,MUM ),MLU ) ) ,( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - ( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR * ACS ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - Min( Min( MUM ,RRSe ) ,Max( RMSe,MUC ) ) ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( ( MUR + MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( RRS,( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ),FirstVNF_CPU_Server ) ) - ( ( ACS - ( AMS + FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( ( ( ACS / FirstVNF_RAM_Server ) / ( MDR * ( PN * Min( Const ,RRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( ( RMSe - ( ( RCSe + CS ) * Max( ( RMSe / MUC ),( MLU + ( MUM / RMSe ) ) ) ) ) ,Min( MUR ,RMSe ) ) / Max( Min( MUC ,MUR ),( RRSe / MUC ) ) ) ,Min( RRSe ,( CS / RMSe ) ) )", "obj1": 0.8421052631578947, "obj2": 0.07564447087579312}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( BR / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( RMSe / Max( ( ( ( RCSe / RRSe ) / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.7387914230019493, "obj2": 0.15512190002025938}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6097940347568805}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( ( FirstVNF_RAM - BR ) * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( RRSe ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.6549707602339181, "obj2": 0.23920636072605675}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( Max( FirstVNF_RAM_Server,ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - DDR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.935672514619883, "obj2": 0.033611837155744895}, {"determining": "( Max( CRS,( ( ( PN / ( ARS * ( ( PN / PN ) + ( PN / MDR ) ) ) ) / MDR ) + Max( Min( FirstVNF_Mem ,Const ),( MDR / ( MDR - Max( FirstVNF_RAM,MRS ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( RMSe + RMSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.1110442410677177}, {"determining": "( Max( CRS,( ( ( ( ( PN * PN ) / FirstVNF_RAM_Server ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.5750487329434698, "obj2": 0.31798186105014703}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452309}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( Max( ( ( DDR * ( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) )", "obj1": 0.43859649122807015, "obj2": 0.4934373466837151}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - Max( RRS,( BR + FirstVNF_RAM ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( ( RRSe + ( MUC / MLU ) ),Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) + ( RMSe / ( ( MUM / DS ) + DS ) ) ) ) ) ) )", "obj1": 0.7309941520467836, "obj2": 0.1700336352480258}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.33134883008182037}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / ( MUR * ( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) ,( MUR * CS ) )", "obj1": 0.6900584795321637, "obj2": 0.2034961848186056}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MLU * MUM ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5886939571150097, "obj2": 0.30174058547799393}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( Min( MLU ,Min( Max( MUC,RRSe ) ,MUM ) ) + ( RMSe / MUC ) ) )", "obj1": 0.8518518518518519, "obj2": 0.07032775525675367}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( Min( MLU ,CS ) - CS ) ) ,MUR ) )", "obj1": 0.35282651072124754, "obj2": 0.6187590960740884}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( BR * PN ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ACS ) )", "choosing": "( ( Max( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MLU ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ),MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.7777777777777778, "obj2": 0.1177663170619161}, {"determining": "( Max( CRS,( ( ( MDR * FirstVNF_RAM_Server ) * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / ( MUR * ( ( Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) ) ,( MUR * CS ) )", "obj1": 0.7095516569200779, "obj2": 0.18546433271870497}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.4619883040935672, "obj2": 0.45994022905071746}, {"determining": "( ( Max( RRS,FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR / PN ) )", "choosing": "( ( RRSe + MUR ) / ( Max( MUC,MLU ) + ( MUC / MLU ) ) )", "obj1": 0.8050682261208577, "obj2": 0.1006374570303756}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) + PN ) - ( ACS / PN ) )", "choosing": "Min( ( Min( ( Max( ( ( RCSe * Max( MUM,MUC ) ) * ( RCSe / RMSe ) ),( MLU * ( DS * Min( MLU ,RRSe ) ) ) ) - Min( CS ,RCSe ) ) ,Min( MUR ,RMSe ) ) / Max( ( RRSe / MUC ),( MUC - MUR ) ) ) ,( Max( MUC,MUC ) + ( MLU / MUC ) ) )", "obj1": 0.7992202729044834, "obj2": 0.10687572115740365}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( CRS + ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( ( MDR / FirstVNF_RAM_Server ) + Max( FirstVNF_Mem,Max( Const,Const ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( MUR + ( MUC * RCSe ) ),Min( Max( DS,DS ) ,MUR ) ) / Max( RMSe,MUC ) ) ,( MUR * CS ) )", "obj1": 0.34307992202729043, "obj2": 0.6334782684695036}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( Max( CRS,( ( PN / Max( ( FirstVNF_Mem + ( FirstVNF_Mem + MRS ) ),( ( Max( FirstVNF_Mem_Server,RRS ) / ( FirstVNF_RAM / DDR ) ) - Min( MDR ,AMS ) ) ) ) + FirstVNF_CPU_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,Min( Min( Max( ( ( MUM - CS ) * RMSe ),RMSe ) ,( CS - RRSe ) ) ,CS ) ) / Max( Min( Min( MUC ,DS ) ,MUR ),( Max( ( MLU * ( MUR + MLU ) ),( MUC / DS ) ) / ( ( CS - DS ) * ( RMSe / ( Min( RRSe ,MUR ) + ( MLU / RCSe ) ) ) ) ) ) ) ,( Min( Max( MUM,RRSe ) ,CS ) * CS ) )", "obj1": 0.6647173489278753, "obj2": 0.23006729388176012}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5980750631232413}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( Max( CRS,( ( PN / ( ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + DDR ) * FirstVNF_CPU ) ) + DDR ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Max( Const,ACS ) + FirstVNF_RAM ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * Min( ( RMSe / ( MUR * ( MUR / ( MUR / MUM ) ) ) ) ,MUC ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,( DS + ( MLU / MUC ) ) ) ) / ( Min( RMSe ,CS ) - CS ) ) )", "obj1": 0.9083820662768031, "obj2": 0.04361095284105886}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.33528265107212474, "obj2": 0.6453045646131154}, {"determining": "( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) / ( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) + DS ) )", "obj1": 0.9415204678362573, "obj2": 0.025864164681481464}, {"determining": "( Max( ( FirstVNF_CPU_Server + DDR ),( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + MRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( RCSe + RRSe ) ,( ( DS * ( MLU * RRSe ) ) + ( MLU / MUC ) ) )", "obj1": 0.5165692007797271, "obj2": 0.3924497373943658}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.6101364522417154, "obj2": 0.2807379112330503}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - Max( BR,PN ) )", "choosing": "( Max( ( RMSe / Max( ( ( RCSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( CS,MUM ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + ( Max( MUC,MLU ) + ( MUC / MLU ) ) ) ) / ( MUC + DS ) )", "obj1": 0.8206627680311891, "obj2": 0.08789133553976032}, {"determining": "( Max( ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ),( ( ( Max( CRS,( ( BR / MDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,MRS ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + RRSe )", "obj1": 0.44834307992202727, "obj2": 0.48312684751664864}, {"determining": "( Max( Max( CRS,( BR - Const ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * MDR ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * ARS ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RRSe / MUM ) + MUR ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7173489278752436, "obj2": 0.1781032192189496}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) )", "obj1": 0.45614035087719296, "obj2": 0.4713537754545518}, {"determining": "( Max( CRS,( ( PN / Max( ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) / ( PN / DDR ) ) - Min( MDR ,AMS ) ) ) ) + FirstVNF_CPU_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,Min( CS ,Min( Max( ( ( MUM - CS ) * RRSe ),RMSe ) ,( CS - RRSe ) ) ) ) / Max( Min( Min( MUC ,( MLU + RRSe ) ) ,MUR ),( Max( ( MLU * ( MUR + MLU ) ),( MUC / DS ) ) / ( ( CS - DS ) * ( RMSe / ( Min( RRSe ,MUR ) + ( MLU / RCSe ) ) ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.6842105263157895, "obj2": 0.2102366322539377}, {"determining": "( ( ARS / Max( ACS,RRS ) ) - ( ( ( ( Const * RRS ) * AMS ) - CRS ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) )", "choosing": "Min( Max( Max( Min( MUR ,( Max( RMSe,DS ) * ( MUC / Min( RMSe ,CS ) ) ) ),( CS - RRSe ) ),MUM ) ,( MUR * MUM ) )", "obj1": 0.4775828460038986, "obj2": 0.4424376811472201}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.43122274797595034}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( ( PN + DDR ) * FirstVNF_CPU ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Min( MUM ,( DS / ( RRSe * MUR ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6841818771218093}, {"determining": "( ( CRS + ( ( PN / ( Max( RRS,( ARS / RRS ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( RCSe * Max( Min( ( CS * ( DS + DS ) ) ,MUM ),MLU ) ) ,( MUR * CS ) )", "obj1": 0.580896686159844, "obj2": 0.3126334680628428}, {"determining": "( Min( MDR ,PN ) - Max( ( Max( CRS,( ( BR / DDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( MRS / ( Min( FirstVNF_RAM ,( MDR / Const ) ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Min( MUR ,( ( CS / ( ( MLU + CS ) / MUR ) ) / DS ) ) / DS ) ) / ( Max( CS,MUM ) / Max( ( MLU / RCSe ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1973486604230722}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( CRS,( ( PN / ( ( ( PN * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - ( DS - MUR ) ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.48652449937235515}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.29820897921240497}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47181879113587394}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 0.47953216374269003, "obj2": 0.4321783491843637}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.407094136218391}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( Min( Const ,ARS ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( MUC,RRSe ) ,( ( MUC / MLU ) + Max( RRSe,MLU ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5429841354757441}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Min( ( DS + MUC ) ,MUM ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6787720800652144}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,PN ) * FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( Min( RRSe ,( RRSe / MUM ) ) / ( RMSe - MUM ) )", "obj1": 0.6491228070175439, "obj2": 0.24828004520734687}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) / ( ( MLU / MUC ) + DS ) )", "obj1": 0.4152046783625731, "obj2": 0.531387599459624}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + MRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.7680311890838206, "obj2": 0.13060653521663776}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( BR - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( ( DS + ( RRSe * RCSe ) ),MUR ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( DS ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.621832358674464, "obj2": 0.27275521242345785}, {"determining": "( Max( ( ( ( PN / ( Max( ( CRS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5107212475633528, "obj2": 0.3963267371716733}, {"determining": "( Max( CRS,( ( PN / Max( ( FirstVNF_Mem + Min( ACS ,FirstVNF_CPU ) ),( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) / ( FirstVNF_RAM / DDR ) ) - Min( MDR ,AMS ) ) ) ) + FirstVNF_CPU_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,Min( CS ,Min( Max( ( ( MUM - CS ) * RRSe ),RMSe ) ,( CS - RRSe ) ) ) ) / Max( Min( Min( MUC ,DS ) ,MUR ),( Max( ( MLU * ( MUR + MLU ) ),( MUC / DS ) ) / ( ( CS - DS ) * ( RMSe / ( Min( RRSe ,MUR ) + ( MLU / RCSe ) ) ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.41325536062378165, "obj2": 0.5376221575459624}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - ( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR * ( Max( CRS,( ( PN / FirstVNF_RAM_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - Min( Min( MUM ,RRSe ) ,Max( RMSe,MUC ) ) ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( CS - DS ) ) ) + Min( ( Max( ( MUR + MLU ),( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.9980506822612085, "obj2": 0.0029964236801061726}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),PN ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.6335282651072125, "obj2": 0.2639116531844514}, {"determining": "( Max( ( Max( CRS,( ( BR / ( FirstVNF_Mem_Server / Min( FirstVNF_Mem ,AMS ) ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,( ( RMSe + Max( Max( RMSe,Min( RRSe ,MUM ) ),RRSe ) ) - MLU ) )", "obj1": 0.8109161793372319, "obj2": 0.09243020451710383}, {"determining": "( Max( FirstVNF_Mem_Server,( ( ( FirstVNF_Mem_Server / RRS ) * Max( ( MDR * MDR ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( BR / MDR ) ) ) - ( ( ( Max( ( Min( ( PN + FirstVNF_RAM_Server ) ,AMS ) - ( Min( PN ,MRS ) * Max( Const,FirstVNF_Mem ) ) ),( Max( ( MRS - FirstVNF_RAM ),PN ) - MDR ) ) - ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) ) - ( RRS / Const ) ) / PN ) )", "choosing": "Max( ( MUR / ( Min( CS ,MLU ) - CS ) ),Max( ( RMSe - ( ( RMSe * MLU ) / RCSe ) ),Max( MUM,Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) + ( RMSe / ( ( MUM / DS ) + DS ) ) ) ) ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05606336037310536}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( ( ( AMS * BR ) + ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) ) * ( PN * FirstVNF_RAM ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,( ( ( ( ( DS / RRSe ) + DS ) + DS ) - CS ) / MUC ) ) / Max( ( RRSe / ( Max( ( ( MUC + MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR * CS ) )", "obj1": 0.7056530214424951, "obj2": 0.19272905127295756}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5029916986678146}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.48927875243664715, "obj2": 0.4206589290198175}, {"determining": "( ( ( Max( BR,PN ) / ( ACS * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU + CS ) / MUC ) / ( ( RCSe / RRSe ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5490866557972119}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( ( MDR / PN ) - Max( CRS,( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( ( AMS / PN ) ,PN ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + BR ) ) - ( ( PN / Max( MRS,FirstVNF_Mem ) ) / ( RRS * MDR ) ) )", "choosing": "( Max( ( MUC / MLU ),( Max( MUR,MUC ) - Min( ( CS * RRSe ) ,( RRSe / MUM ) ) ) ) / ( CS + MUC ) )", "obj1": 0.3898635477582846, "obj2": 0.570719106428012}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * FirstVNF_RAM_Server ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( ( RCSe / RRSe ) / Max( ( CS + MLU ),( Max( MLU,( MUC - MLU ) ) / ( RMSe / ( MUC - MLU ) ) ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.3216374269005848, "obj2": 0.6727096784817169}, {"determining": "( ( PN + ( Max( DDR,( MRS + ( RRS / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( Max( ( CS - RMSe ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ,( Max( MUC,MUC ) + ( Max( RRSe,MUM ) / MUC ) ) )", "obj1": 0.9610136452241715, "obj2": 0.019258728969025713}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( RMSe - MUM ) - Max( RMSe,MUR ) ) )", "obj1": 0.672514619883041, "obj2": 0.22151664170365035}, {"determining": "( Min( ( ( Max( CRS,( ( CRS / ( PN / FirstVNF_CPU ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RCSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.8460038986354775, "obj2": 0.07506064912625193}, {"determining": "( ( MDR / PN ) - ( ( CRS + ( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( ( MRS - ( Const - ( FirstVNF_RAM_Server / PN ) ) ) / PN ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) / MDR ) ) ) ) )", "choosing": "Max( ( ( ( MUM + DS ) * MUC ) - RMSe ),( Min( Max( MLU,RMSe ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - ( MUC / Max( ( CS - ( MUC / MUR ) ),RCSe ) ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.3471350534419244}, {"determining": "( ( Max( ( FirstVNF_RAM + BR ),( ( ( FirstVNF_Mem_Server * RRS ) - ( ARS + MRS ) ) + MRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( FirstVNF_RAM * BR ) / MDR ) + ( ( PN * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( Max( Max( AMS,BR ),Min( FirstVNF_CPU_Server ,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ) - Min( Const ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + MUC ) / ( MUC / ( Min( MLU ,( RCSe + RMSe ) ) / RRSe ) ) )", "obj1": 0.4678362573099415, "obj2": 0.45410302565886906}, {"determining": "( Max( CRS,( ( PN + ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_CPU_Server,Max( ACS,( FirstVNF_CPU_Server * PN ) ) ) - ( ( ( AMS + FirstVNF_Mem_Server ) - ACS ) + DDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RMSe + ( MUM * ( ( Max( CS,MUR ) + ( MUC - MUR ) ) - MUC ) ) ) + ( MUC - ( ( CS - ( ( MUM / RCSe ) * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3001949317738791, "obj2": 0.6998709693731492}, {"determining": "( Max( ( ( ( PN / ( Max( ( PN + PN ),Min( AMS ,AMS ) ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / ( ( MLU - ( ( RCSe - RCSe ) + Max( MUM,DS ) ) ) - RRSe ) ) / MUC ),( ( MUC / MLU ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5048732943469786, "obj2": 0.39819440666852945}, {"determining": "( DDR - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( ( ( MUC + ( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9688109161793372, "obj2": 0.015396858163764753}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( Max( ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,MRS ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6579625495031645}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) - Min( ( DDR / FirstVNF_Mem ) ,( RRS * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / Min( MUC ,MLU ) ) ) ,Min( Max( RRSe,DS ) ,MUR ) )", "obj1": 0.4951267056530214, "obj2": 0.41785192887579353}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( CS,MUM ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.8206627680311891, "obj2": 0.08789133553976032}, {"determining": "( Max( Max( CRS,( ( BR / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ),( ( PN / MDR ) + ACS ) ) - ( ACS / Min( RRS ,RRS ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + MLU ) ) / ( DS + ( ( RRSe / RCSe ) / Min( ( CS + MUR ) ,MUR ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5159252082396253}, {"determining": "( ( AMS + FirstVNF_Mem_Server ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( ( MUC - MLU ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6947271827320392}, {"determining": "( Max( Max( CRS,( BR - Const ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * ARS ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / Max( ( ( RRSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6764132553606238, "obj2": 0.21818021098485355}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + MUR ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7485380116959064, "obj2": 0.14651573590169925}, {"determining": "( Max( CRS,Max( ( FirstVNF_RAM - Min( PN ,Const ) ),Min( FirstVNF_CPU ,Min( ( CRS * MDR ) ,FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Min( RRSe ,( MUR + ( MUR + CS ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3723196881091618, "obj2": 0.5877554676995672}, {"determining": "( ( ( RRS + ( BR + Max( ( ( FirstVNF_RAM - BR ) - Max( MRS,Const ) ),MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( Min( FirstVNF_RAM ,MRS ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - MLU ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5977768427163297}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / AMS ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * Min( RRS ,( MRS - ACS ) ) ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( Min( MUR ,CS ) ,Max( ( Max( ( MUR * RMSe ),( ( DS * ( DS / ( MUM + MUM ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.31773879142300193, "obj2": 0.6733286848445008}, {"determining": "( ( ( ( ( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) / MDR ) + ACS ) * ARS ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM / FirstVNF_CPU ) ) )", "choosing": "( ( MUM + DS ) / Max( CS,RRSe ) )", "obj1": 0.3489278752436647, "obj2": 0.6266218092886862}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( FirstVNF_Mem - FirstVNF_CPU ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC / ( RMSe / RMSe ) ) + ( Max( ( CS + ( Min( MUC ,MUR ) / MLU ) ),( MUC / RCSe ) ) / Min( MUM ,( DS / ( RRSe * MUR ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.5516569200779727, "obj2": 0.3424764692494458}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.4191033138401559, "obj2": 0.5227058866384107}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5536062378167641, "obj2": 0.3366377210643848}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.39571150097465885, "obj2": 0.555038569619963}], "33": [{"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) + ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( MUC * Max( Min( ( MUR - CS ) ,MUM ),MLU ) ) ,( MUR * CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_CPU_Server,Max( ( Max( RRS,( Min( MDR ,AMS ) - ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,FirstVNF_Mem ) ) ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ),FirstVNF_CPU_Server ) ) - ( ( ACS - ( AMS + FirstVNF_Mem_Server ) ) + DDR ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( ( PN + ( Max( DDR,( MRS + ( RRS / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( Max( ( CS - RMSe ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ,( Max( MUC,MUC ) + ( Max( RRSe,MUM ) / MUC ) ) )", "obj1": 0.9610136452241715, "obj2": 0.019258728969025713}, {"determining": "( ( PN + ( ( ( ( ( FirstVNF_RAM * MRS ) / Max( BR,FirstVNF_Mem ) ) - MDR ) / MDR ) - Max( ( ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) * ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ),( FirstVNF_CPU + CRS ) ) ) ) - ( MDR * ACS ) )", "choosing": "( Min( DS ,Min( RRSe ,MLU ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + MUM ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( Max( ( Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) - ( MDR / ACS ) ),( ( Max( CRS,( Min( BR ,Max( PN,ARS ) ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - Min( FirstVNF_Mem_Server ,RRS ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.530214424951267, "obj2": 0.3737814972642761}, {"determining": "( Max( CRS,( ( ( ( ( Max( RRS,FirstVNF_CPU_Server ) * FirstVNF_CPU ) - ( MDR / PN ) ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / ( MUR * ( ( RRSe + MUR ) + RMSe ) ) ) ,( MUR * CS ) )", "obj1": 0.8382066276803118, "obj2": 0.08059987575673673}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.43484984564088247}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( Max( FirstVNF_RAM_Server,ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - DDR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.935672514619883, "obj2": 0.033611837155744895}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) + ( Max( RRS,PN ) * FirstVNF_CPU ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( RRSe / MUM ) / RRSe ) / Min( Max( MUC,DS ) ,MUR ) ) / ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3820662768031189, "obj2": 0.5796483292132203}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( ( MDR / PN ),PN ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + MUR ) / ( ( Max( CS,MUM ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.797270955165692, "obj2": 0.09882870726689635}, {"determining": "( DDR - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( ( ( MUC + ( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9707602339181286, "obj2": 0.014440847850735638}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) / ( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) + DS ) )", "obj1": 0.9415204678362573, "obj2": 0.025864164681481464}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5029916986678146}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + PN ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( ( MUC - MUC ) - MUM ) ) ) ) )", "obj1": 0.571150097465887, "obj2": 0.32762865370805255}, {"determining": "( Max( Max( ( ACS / FirstVNF_RAM_Server ),( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( FirstVNF_RAM_Server / AMS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( DDR / Const ) ) - ( MDR / PN ) )", "choosing": "( ( ( CS + RMSe ) * MLU ) / ( ( ( MUC + ( Max( ( CS - DS ),( MUR / ( MUC + DS ) ) ) * Min( RRSe ,MLU ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - DS ) ) ) + ( DS / RRSe ) ) ) + RMSe ) )", "obj1": 0.6413255360623782, "obj2": 0.252134459393925}, {"determining": "( ( AMS + FirstVNF_Mem_Server ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( ( MUC - MLU ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.30409356725146197, "obj2": 0.6947271827320392}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,Max( ( MUR * MLU ),( MUC + ( MUM * ( DS * CS ) ) ) ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.5750487329434698, "obj2": 0.3153989102646524}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( ( ( ( ( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) / MDR ) + ACS ) * ARS ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM / FirstVNF_CPU ) ) )", "choosing": "( ( MUM + DS ) / Max( CS,RRSe ) )", "obj1": 0.3489278752436647, "obj2": 0.6266218092886862}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.5185185185185185, "obj2": 0.3813212805452309}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.48927875243664715, "obj2": 0.4206589290198175}, {"determining": "( ( Max( ( FirstVNF_RAM + BR ),( ( ( FirstVNF_Mem_Server * RRS ) - ( ARS + MRS ) ) + MRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( FirstVNF_RAM * BR ) / MDR ) + ( ( PN * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( Max( Max( AMS,BR ),Min( FirstVNF_CPU_Server ,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ) - Min( Const ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + MUC ) / ( MUC / ( Min( MLU ,( RCSe + RMSe ) ) / RRSe ) ) )", "obj1": 0.4678362573099415, "obj2": 0.45410302565886906}, {"determining": "( Max( ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,MRS ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6579625495031645}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,Min( CS ,Min( Max( ( ( MUM - CS ) * RRSe ),RMSe ) ,( CS - RRSe ) ) ) ) / Max( Min( Min( MUC ,DS ) ,MUR ),( Max( ( MLU * ( MUR + MLU ) ),( MUC / DS ) ) / ( ( CS - DS ) * ( RMSe / ( Min( RRSe ,MUR ) + ( MLU / RRSe ) ) ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.5165692007797271, "obj2": 0.38322151390077275}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.6081871345029239, "obj2": 0.2816939215460795}, {"determining": "( Max( ( ( ( PN / ( Max( ( PN + PN ),Min( AMS ,AMS ) ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / ( ( MLU - ( ( RCSe - RCSe ) + Max( MUM,DS ) ) ) - RRSe ) ) / MUC ),( ( MUC / MLU ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5048732943469786, "obj2": 0.39819440666852945}, {"determining": "( Max( ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ),( ( ( Max( CRS,( ( BR / MDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,MRS ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + RRSe )", "obj1": 0.44834307992202727, "obj2": 0.48312684751664864}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( RRSe,MUM ) + ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 0.3664717348927875, "obj2": 0.5980750631232413}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( Max( CRS,( BR - Const ) ) + Const ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( DS + MUC ) )", "obj1": 0.3937621832358674, "obj2": 0.5579046770344765}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( ( MDR / PN ) - Max( CRS,( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( ( AMS / PN ) ,PN ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + BR ) ) - ( ( PN / Max( MRS,FirstVNF_Mem ) ) / ( RRS * MDR ) ) )", "choosing": "( Max( ( MUC / MLU ),( Max( MUR,MUC ) - Min( ( CS * RRSe ) ,( RRSe / MUM ) ) ) ) / ( CS + MUC ) )", "obj1": 0.3898635477582846, "obj2": 0.570719106428012}, {"determining": "( Max( CRS,( ( ( PN / ( ( MDR / PN ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( Min( MLU ,CS ) - CS ) ) ,MUR ) )", "obj1": 0.4269005847953216, "obj2": 0.5089783570898962}, {"determining": "( Max( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.4191033138401559, "obj2": 0.5209371782666229}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6453045646131154}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.07032775525675367}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( Min( Const ,ARS ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( MUC,RRSe ) ,( ( MUC / MLU ) + Max( RRSe,MLU ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5429841354757441}, {"determining": "( Max( CRS,( ( PN / ( ( ( PN * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - ( DS - MUR ) ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.48652449937235515}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7953216374269005, "obj2": 0.106416453919769}, {"determining": "( Max( CRS,( ( PN / ( MDR * ARS ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.41325536062378165, "obj2": 0.5312480239900292}, {"determining": "( Max( Max( CRS,( ( BR / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ),( ( PN / MDR ) + ACS ) ) - ( ACS / Min( RRS ,RRS ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + MLU ) ) / ( DS + ( ( RRSe / RCSe ) / Min( ( CS + MUR ) ,MUR ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5159252082396253}, {"determining": "( Max( CRS,( ( PN / ( ( FirstVNF_RAM + FirstVNF_Mem ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / ARS ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - RRSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( RRSe ,MUR ) + MUM ) ) ) ),Min( Max( MUC,( MUM + DS ) ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.3723196881091618, "obj2": 0.5877554676995672}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) - Min( ( DDR / FirstVNF_Mem ) ,( RRS * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / Min( MUC ,MLU ) ) ) ,Min( Max( RRSe,DS ) ,MUR ) )", "obj1": 0.4951267056530214, "obj2": 0.41785192887579353}, {"determining": "( ( ( Max( BR,PN ) / ( ACS * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU + CS ) / MUC ) / ( ( RCSe / RRSe ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5490866557972119}, {"determining": "( Max( Max( CRS,( BR - Const ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * ARS ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / Max( ( ( RRSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6764132553606238, "obj2": 0.21818021098485352}, {"determining": "( Max( ( ( ( PN / ( Max( ( CRS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5107212475633528, "obj2": 0.3963267371716733}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + MRS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Min( MUM ,( DS / ( RRSe * MUR ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.7621832358674464, "obj2": 0.13323410910539596}, {"determining": "( Max( CRS,( ( PN + ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_CPU_Server,Max( ACS,( FirstVNF_CPU_Server * PN ) ) ) - ( ( ( AMS + FirstVNF_Mem_Server ) - ACS ) + DDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RMSe + ( MUM * ( ( Max( CS,MUR ) + ( MUC - MUR ) ) - MUC ) ) ) + ( MUC - ( ( CS - ( ( MUM / RCSe ) * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3001949317738791, "obj2": 0.6998709693731492}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.40709413621839097}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + MUR ) / ( Max( MUC,MLU ) + ( MUC / MLU ) ) )", "obj1": 0.6900584795321637, "obj2": 0.20344134476753023}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + MDR ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / ( RRSe + MUR ) ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.30605054346133725}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MLU,MUC ),( ( Max( CS,MUM ) - ( RCSe * ( Min( MUC ,RMSe ) - Min( RCSe ,( MLU * MUR ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.8206627680311891, "obj2": 0.08789133553976032}, {"determining": "( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) - Min( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + RMSe ) ) )", "obj1": 0.9200779727095516, "obj2": 0.04155350255023711}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ACS ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.7816764132553606, "obj2": 0.11590913648693332}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Max( BR,PN ) + FirstVNF_CPU ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / ( ( CS / RRSe ) + ( MUM * RMSe ) ) ) ) ),RCSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7103549522829031}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6334782684695036}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.33528265107212474, "obj2": 0.6453045646131154}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6097940347568805}, {"determining": "( Max( ( Max( CRS,( ( BR / ( FirstVNF_Mem_Server / Min( FirstVNF_Mem ,AMS ) ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,( ( RMSe + Max( Max( RMSe,Min( RRSe ,MUM ) ),RRSe ) ) - MLU ) )", "obj1": 0.8109161793372319, "obj2": 0.09243020451710383}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.5555555555555556, "obj2": 0.3347374877088428}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Max( Const,ACS ) + FirstVNF_RAM ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,( ( MLU / MUC ) + DS ) ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.9083820662768031, "obj2": 0.04361095284105886}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3586744639376218, "obj2": 0.6097940347568805}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - Max( BR,PN ) )", "choosing": "( Max( ( RMSe / Max( ( ( RCSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.28460038986354774, "obj2": 0.7218957841107663}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.43122274797595034}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3684210526315789, "obj2": 0.5973257666554935}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - MLU ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.4152046783625731, "obj2": 0.5287933173386852}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( ( FirstVNF_CPU_Server * ( ( ( RRS - FirstVNF_CPU ) / ( FirstVNF_CPU * BR ) ) + FirstVNF_CPU ) ) + RRS ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + MDR ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,( ( ( MLU * ( MUR + RRSe ) ) * MLU ) * ( MUC + ( DS * ( DS * CS ) ) ) ) ) ,Max( RCSe,MLU ) )", "obj1": 0.6647173489278753, "obj2": 0.22889607432142117}, {"determining": "( ( ( RRS * ARS ) - BR ) - Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( FirstVNF_RAM / Max( DDR,FirstVNF_Mem ) ) + PN ) ) * ( MDR / PN ) ) + ACS ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( DS,MUC ) + MUR ) ) ) ,Max( ( ( ( MUR * MUR ) / ( ( DS * ( DS / ( MUM + CS ) ) ) + ( RMSe * DS ) ) ) - Max( RMSe,RCSe ) ),RRSe ) )", "obj1": 0.682261208576998, "obj2": 0.21235309426660046}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),PN ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.6335282651072125, "obj2": 0.2639116531844514}, {"determining": "( Max( ( ( DDR * ( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) )", "obj1": 0.43859649122807015, "obj2": 0.4934373466837151}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( ARS * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( PN - Min( ( FirstVNF_RAM_Server * ( ARS + ( BR / FirstVNF_CPU ) ) ) ,PN ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + ( MLU / MUC ) ) ) / ( DS + ( MUM - Min( Min( CS ,RMSe ) ,Min( ( ( ( DS - RRSe ) * MUC ) * Max( DS,MUC ) ) ,DS ) ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22508930842212285}, {"determining": "( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RRSe + MUR ) / ( Max( MUC,MLU ) + ( CS / MLU ) ) )", "obj1": 0.7134502923976608, "obj2": 0.18240371166867303}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47181879113587394}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( Max( MRS,FirstVNF_Mem ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( ( MUC + CS ) + DS ) ) ) )", "obj1": 0.32748538011695905, "obj2": 0.6603906463052415}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + Max( Const,PN ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.6608187134502924, "obj2": 0.23305393265051194}, {"determining": "( Max( Max( ( CRS / ( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( ( FirstVNF_RAM - BR ) * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / Max( PN,Const ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( DS * RCSe ) * DS ) ,( Max( MUC,( DS * Min( RRSe ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ) )", "obj1": 0.6530214424951267, "obj2": 0.24020588450223063}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( ( PN + DDR ) * FirstVNF_CPU ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.705761366132899}, {"determining": "( Max( ( ( DDR * ( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) )", "obj1": 0.43859649122807015, "obj2": 0.4934373466837151}, {"determining": "( ( CRS + ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( ( MDR / FirstVNF_RAM_Server ) + Max( FirstVNF_Mem,Max( Const,Const ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( MUR + ( MUC * RCSe ) ),Min( Max( DS,DS ) ,MUR ) ) / Max( RMSe,MUC ) ) ,( MUR * CS ) )", "obj1": 0.34307992202729043, "obj2": 0.6334782684695036}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( DDR - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( ( ( MUC + ( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9688109161793372, "obj2": 0.015396858163764753}, {"determining": "( Min( MDR ,PN ) - Max( ( Max( CRS,( ( BR / DDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( MRS / ( Min( FirstVNF_RAM ,( MDR / Const ) ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Min( MUR ,( ( CS / ( ( MLU + CS ) / MUR ) ) / DS ) ) / DS ) ) / ( Max( CS,MUM ) / Max( ( MLU / RCSe ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1973486604230722}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + FirstVNF_CPU_Server ) ) - ( Min( BR ,DDR ) - Const ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Min( ( DS + MUC ) ,MUM ) ) ,Max( ( Max( ( MUR * MUR ),( ( ( MUM + ( MUC - MUM ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.8187134502923976, "obj2": 0.08884734585278942}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RRSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.8109161793372319, "obj2": 0.09243020451710383}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Min( ( DS + MUC ) ,MUM ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6787720800652144}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5435995064158978}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + Const ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,Min( ( DS * MUC ) ,RMSe ) ) ,MUR ) )", "obj1": 0.35282651072124754, "obj2": 0.6187590960740884}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5653021442495126, "obj2": 0.33134883008182037}, {"determining": "( Min( ( ( Max( CRS,( ( CRS / ( PN / FirstVNF_CPU ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RCSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU * MUC ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.8771929824561403, "obj2": 0.05891855030430398}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( CS - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.732943469785575, "obj2": 0.1612924657936543}], "34": [{"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( ( MDR / PN ) - Max( CRS,( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( ( AMS / PN ) ,PN ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + BR ) ) - ( ( PN / Max( MRS,FirstVNF_Mem ) ) / ( PN * MDR ) ) )", "choosing": "( Max( ( MUC / MLU ),( Max( MUR,MUC ) - Min( ( CS * RMSe ) ,( RRSe / MUM ) ) ) ) / ( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "( Max( RRSe,MUM ) + ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Max( ( FirstVNF_RAM + BR ),( ( ( FirstVNF_Mem_Server * RRS ) - ( ARS + MRS ) ) + MRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( FirstVNF_RAM * BR ) / MDR ) + ( ( PN * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( Max( Max( AMS,BR ),Min( FirstVNF_CPU_Server ,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ) - Min( Const ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + MUC ) / ( MUC / ( Min( MLU ,( RCSe + RMSe ) ) / RRSe ) ) )", "obj1": 0.4678362573099415, "obj2": 0.45410302565886906}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47181879113587394}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( ( Max( BR,( MDR + CRS ) ) + CRS ) - ( PN / MDR ) )", "choosing": "( Max( ( MLU / MUC ),Min( ( RCSe * MUM ) ,RCSe ) ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MUR ,RMSe ) ,( RCSe / RRSe ) ) ) - ( CS / MUM ) ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15824908279473315}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.6081871345029239, "obj2": 0.2816939215460795}, {"determining": "( Min( MDR ,PN ) - Max( ( Max( CRS,( ( BR / DDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( MRS / ( Min( FirstVNF_RAM ,( MDR / Const ) ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Min( MUR ,( ( CS / ( ( MLU + CS ) / MUR ) ) / DS ) ) / DS ) ) / ( Max( CS,MUM ) / Max( ( MLU / RCSe ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1973486604230722}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.5536062378167641, "obj2": 0.3375638951492715}, {"determining": "( ( Max( RRS,( FirstVNF_CPU + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,CRS ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,Min( RRSe ,( MUM / MUM ) ) ) ) ) / MUR ) + ( RMSe / MUC ) ) )", "obj1": 0.7153996101364523, "obj2": 0.17910340866791047}, {"determining": "( Max( Max( ( RRS / ( DDR - FirstVNF_CPU_Server ) ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ),CRS ) - ( MDR / PN ) )", "choosing": "( ( ( ( RRSe / MUM ) / RRSe ) / Min( Max( MUC,DS ) ,( Max( MUC,( ( Min( RCSe ,MLU ) + RCSe ) * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - MLU ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ) ) / ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + Min( MUM ,RMSe ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16503740870839786}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.530214424951267, "obj2": 0.3648090488504215}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),AMS ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( MUC,RRSe ) ,( ( MLU / MLU ) + Max( RRSe,MLU ) ) )", "obj1": 0.6198830409356725, "obj2": 0.2773795312450284}, {"determining": "( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,Min( CS ,Min( Max( ( ( MUM - CS ) * RRSe ),RMSe ) ,( CS - RRSe ) ) ) ) / Max( Min( Min( MUC ,DS ) ,MUR ),( Max( ( MLU * ( MUR + MLU ) ),( MUC / DS ) ) / ( ( CS - DS ) * ( RMSe / ( Min( RRSe ,MUR ) + ( MLU / RRSe ) ) ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.7095516569200779, "obj2": 0.18431573229473128}, {"determining": "( Max( ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,Min( CS ,Min( Max( ( ( MUM - CS ) * RRSe ),RMSe ) ,( MUR - RRSe ) ) ) ) / Max( Min( Min( MUC ,DS ) ,MUR ),( Max( ( MLU * ( MUR + MLU ) ),( MUC / DS ) ) / ( ( CS - DS ) * ( RMSe / ( Min( RRSe ,MUR ) + ( MLU / RRSe ) ) ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.52046783625731, "obj2": 0.38036527023220174}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6771611080472756}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6603516377104774}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8187134502923976, "obj2": 0.08666188405628665}, {"determining": "( Max( ( ( ( PN / ( Max( ( CRS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5107212475633528, "obj2": 0.3963267371716733}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( Max( CRS,( BR - Const ) ) + Const ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( DS + MUC ) )", "obj1": 0.3937621832358674, "obj2": 0.5579046770344765}, {"determining": "( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ) / MUC ) + RMSe ) ) )", "obj1": 0.9532163742690059, "obj2": 0.023633235095359174}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,( DS + RMSe ) ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6881885708542137}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / RRS ) * ( FirstVNF_RAM - ACS ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM + RRSe ) / ( Max( MLU,MUC ) + ( ( ( MLU * ( MUM + DS ) ) - RMSe ) / MLU ) ) )", "obj1": 0.783625730994152, "obj2": 0.11339024820969076}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + MDR ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / ( RRSe + MUR ) ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.30605054346133725}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( ( PN + ( Max( DDR,( MRS + ( RRS / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) - ( ( ( ( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) * ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUC + ( Max( ( CS - RMSe ),( RCSe / RRSe ) ) * Min( MLU ,RRSe ) ) ) ,( Max( MUC,MUC ) + ( Max( RRSe,MUM ) / MUC ) ) )", "obj1": 0.9610136452241715, "obj2": 0.01925872896902571}, {"determining": "( Max( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + ( PN + CRS ) ) ),( Min( MDR ,PN ) + ACS ) ) - ( Min( ARS ,FirstVNF_Mem_Server ) / PN ) )", "choosing": "( Min( ( MLU / MUC ) ,( RMSe + ( MLU / MUC ) ) ) / ( DS + ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,Max( Max( RRSe,MUC ),( Max( ( DS / RCSe ),DS ) + MUR ) ) ) ) ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) - ( MDR / PN ) )", "choosing": "( ( RCSe - Min( MUC ,MUR ) ) / ( ( ( MUC + ( Max( ( RRSe / MUC ),Min( Max( MUC,DS ) ,MUR ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( Max( MUC,DS ) / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7933723196881092, "obj2": 0.10280202561593264}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * Min( FirstVNF_CPU ,MDR ) ) ) + Max( MRS,BR ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - Min( MLU ,Min( Min( RCSe ,( ( RRSe * RCSe ) - RCSe ) ) ,MUM ) ) ),Max( MUM,( ( CS + MLU ) / ( ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) / Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) ) ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.43484984564088247}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + MDR ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * ( MDR * FirstVNF_RAM_Server ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / ( RRSe + MUR ) ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.5847953216374269, "obj2": 0.30605054346133725}, {"determining": "( Min( ( ( Max( CRS,( ( CRS / ( PN / BR ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU * MUC ) ) ) ) ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.8791423001949318, "obj2": 0.05805713312006857}, {"determining": "( ( ( FirstVNF_CPU + ( ( FirstVNF_CPU * MDR ) / FirstVNF_RAM ) ) + ( ( ( FirstVNF_Mem_Server * Max( ( Max( FirstVNF_RAM_Server,ACS ) - ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Max( ( ( FirstVNF_RAM - DDR ) - Max( MRS,Const ) ),MDR ) * FirstVNF_Mem_Server ) ) + ACS ) ) - ( ( DDR * FirstVNF_CPU ) / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.935672514619883, "obj2": 0.033611837155744895}, {"determining": "( Max( ( ( ( PN / ( Max( ( PN + PN ),Min( AMS ,AMS ) ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / ( ( MLU - ( ( RCSe - RCSe ) + Max( MUM,DS ) ) ) - RRSe ) ) / MUC ),( ( MUC / MLU ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5048732943469786, "obj2": 0.39819440666852945}, {"determining": "( Max( ( ( CRS - MDR ) - ( ( MDR * FirstVNF_RAM ) / ( ( RRS / MDR ) / ( FirstVNF_RAM_Server + BR ) ) ) ),( ( ( Max( CRS,( ( BR / MDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,MRS ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + RRSe )", "obj1": 0.44834307992202727, "obj2": 0.48312684751664864}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + PN ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( ( MUC - MUC ) - MUM ) ) ) ) )", "obj1": 0.571150097465887, "obj2": 0.32762865370805255}, {"determining": "( Max( MDR,PN ) - Max( ( FirstVNF_CPU + CRS ),( ACS + ( ( FirstVNF_Mem_Server * Max( ( Min( FirstVNF_CPU_Server ,Const ) / ( DDR / BR ) ),( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem_Server * Max( MDR,( MDR * FirstVNF_RAM_Server ) ) ) ) ) ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5360623781676414, "obj2": 0.3638946363065552}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.5750487329434698, "obj2": 0.3153989102646524}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / ( ( RRSe + MUR ) / ( Max( MUC,MLU ) + ( MUC / MLU ) ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RRSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24581991487339955}, {"determining": "( ( ( RRS * ARS ) - BR ) - Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( FirstVNF_RAM / Max( DDR,FirstVNF_Mem ) ) + PN ) ) * ( MDR / PN ) ) + ACS ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( DS,MUC ) + MUR ) ) ) ,Max( ( ( ( MUR * MUR ) / ( ( DS * ( DS / ( MUM + CS ) ) ) + ( RMSe * DS ) ) ) - Max( RMSe,RCSe ) ),RRSe ) )", "obj1": 0.682261208576998, "obj2": 0.21235309426660046}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( ( MDR / PN ),PN ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( MLU + Min( ( RRSe + MUM ) ,( RRSe - Min( Min( CS ,RMSe ) ,Min( ( RMSe * ( MUC / MLU ) ) ,DS ) ) ) ) ) - CS )", "obj1": 0.8011695906432749, "obj2": 0.09697152669191349}, {"determining": "( Max( ( ( DDR * ( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) / FirstVNF_RAM ),( ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / Max( ( MUR * MLU ),( MUC + ( Min( RRSe ,( RRSe / MUM ) ) - ( MUM / CS ) ) ) ) )", "obj1": 0.8304093567251462, "obj2": 0.08483690695425516}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( ( DS * MUC ) ,MLU ),( RMSe + RMSe ) ) / ( ( ( MLU * CS ) * ( MUR * MLU ) ) - ( Max( ( MUR * MLU ),( MUC + ( DS * ( DS * CS ) ) ) ) / MUC ) ) )", "obj1": 0.5653021442495126, "obj2": 0.32809887468984167}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,RRSe ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.341130604288499, "obj2": 0.6408196376035027}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / FirstVNF_RAM_Server ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6413255360623782, "obj2": 0.252134459393925}, {"determining": "( ( MDR / PN ) - Max( CRS,Min( Max( ( ( DDR - MRS ) / ( ( Min( PN ,ARS ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ,ACS ) ) )", "choosing": "Min( Max( Max( ( RMSe * ( Min( ( ( DS - DS ) - ( MLU * DS ) ) ,RCSe ) * MUR ) ),RCSe ),RCSe ) ,Min( RRSe ,MLU ) )", "obj1": 0.36062378167641324, "obj2": 0.6049988068144517}, {"determining": "( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.9415204678362573, "obj2": 0.02586416468148146}, {"determining": "( Max( ( Max( CRS,( ( BR / FirstVNF_RAM_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Min( ( DS + MUC ) ,MUM ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( RRSe + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.8421052631578947, "obj2": 0.07659819939597419}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Max( BR,PN ) + FirstVNF_CPU ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * MDR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / ( ( CS / RRSe ) + ( RMSe * MLU ) ) ) ) ),RCSe ) )", "obj1": 0.49317738791423, "obj2": 0.4157080226516611}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / ( MDR / PN ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( ARS * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + ( RRSe - Min( Min( CS ,RMSe ) ,( ( MUC / MLU ) + Max( RRSe,MLU ) ) ) ) ) )", "obj1": 0.9278752436647173, "obj2": 0.034727035253037365}, {"determining": "( Max( CRS,( ( PN + ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_CPU_Server,Max( ACS,( FirstVNF_CPU_Server * PN ) ) ) - ( ( ( AMS + FirstVNF_Mem_Server ) - ACS ) + DDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RMSe + ( MUM * ( ( Max( CS,MUR ) + ( MUC - MUR ) ) - MUC ) ) ) + ( MUC - ( ( CS - ( ( MUM / RCSe ) * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3001949317738791, "obj2": 0.6998709693731492}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.40709413621839097}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3820662768031189, "obj2": 0.5796483292132203}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) - Min( ( DDR / FirstVNF_Mem ) ,( RRS * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / Max( ( MLU / MUC ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.4853801169590643, "obj2": 0.42708157776014705}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( ( PN / Max( MRS,FirstVNF_Mem ) ) / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + Min( RRSe ,( RRSe / MUM ) ) ) ) / ( DS + MUC ) )", "obj1": 0.3898635477582846, "obj2": 0.5676790654164892}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / ( ( PN / MDR ) + ACS ) ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( DS * ( DS / ( MUM + RMSe ) ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.5422825629796125}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( Min( Const ,ARS ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( DS + MUC ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6523741336988291}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Max( Const,ACS ) + FirstVNF_RAM ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( RRSe + MUR ) / ( Max( MUC,MLU ) + ( MUC / MLU ) ) )", "obj1": 0.9083820662768031, "obj2": 0.04361095284105886}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( FirstVNF_RAM / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,( CS - RMSe ) ),Max( ( MUM / RRSe ),Max( Min( ( RMSe / ( MLU + Max( ( MUC + CS ),( RMSe / MLU ) ) ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.6881091617933723, "obj2": 0.20935558472797777}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( Max( CRS,( BR - Const ) ) + Const ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / Max( ( MDR * FirstVNF_RAM_Server ),( ( Min( Const ,ARS ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( ( ( MUC / MLU ) + Max( RRSe,MLU ) ) + CS ) ) ) ) / ( DS + MUC ) )", "obj1": 0.3996101364522417, "obj2": 0.5510022439100339}, {"determining": "( ( PN + ( ( ( ( ( FirstVNF_RAM * MRS ) / Max( BR,FirstVNF_Mem ) ) - MDR ) / MDR ) - Max( ( ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) * ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ),( FirstVNF_CPU + CRS ) ) ) ) - ( MDR * ACS ) )", "choosing": "( Min( DS ,Min( RRSe ,MLU ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + MUM ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( CS - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.557504873294347, "obj2": 0.3337814773958137}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( Min( Const ,ARS ) + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * ( ( MUC / MLU ) + Max( RRSe,MLU ) ) ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.3684210526315789, "obj2": 0.5941055774245987}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.3723196881091618, "obj2": 0.5877554676995672}, {"determining": "( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Min( ( DS + MUC ) ,MUM ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / RMSe ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928874}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( CS - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.7602339181286549, "obj2": 0.13864517903402834}, {"determining": "( ( ( ( ( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) / MDR ) + ACS ) * ARS ) - ( FirstVNF_CPU_Server / ( FirstVNF_RAM / FirstVNF_CPU ) ) )", "choosing": "( ( MUM + DS ) / Max( CS,RRSe ) )", "obj1": 0.3489278752436647, "obj2": 0.6266218092886862}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),PN ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.6335282651072125, "obj2": 0.2639116531844514}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( DDR / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( MLU / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4313150824674872}, {"determining": "( Max( ( Max( CRS,( ( BR / ( FirstVNF_Mem_Server / Min( FirstVNF_Mem ,AMS ) ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,( ( RMSe + Max( Max( RMSe,Min( RRSe ,MUM ) ),RRSe ) ) - MLU ) )", "obj1": 0.8109161793372319, "obj2": 0.09243020451710383}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.5165692007797271, "obj2": 0.38322151390077275}, {"determining": "( Max( CRS,( ( PN / ( ( PN / MDR ) + ACS ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ),Max( ( RMSe - CS ),Max( MUM,( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.6744639376218323, "obj2": 0.22050997173903336}, {"determining": "( DDR - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014440847850735638}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + Max( Const,PN ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.6608187134502924, "obj2": 0.23305393265051194}, {"determining": "( ( PN + ( ( ( MRS * Min( ( PN * Min( Const ,ACS ) ) ,FirstVNF_Mem_Server ) ) / MDR ) - Max( ( ( Min( ( PN * FirstVNF_Mem ) ,( FirstVNF_CPU - ACS ) ) * FirstVNF_CPU ) * ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ACS ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( ( CS * MUR ) - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( MUC + Min( RMSe ,( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ) ) ) + DS ) )", "obj1": 0.7719298245614035, "obj2": 0.12559456518964}, {"determining": "( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) - Min( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + RMSe ) ) )", "obj1": 0.9200779727095516, "obj2": 0.04155350255023711}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( Max( Max( ( ACS / FirstVNF_RAM_Server ),( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( FirstVNF_RAM_Server / AMS ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( DDR / Const ) ) - ( MDR / PN ) )", "choosing": "( ( ( CS + RMSe ) * MLU ) / ( ( ( MUC + ( Max( ( CS - DS ),( MUR / ( MUC + DS ) ) ) * Min( RRSe ,MLU ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - DS ) ) ) + ( DS / RRSe ) ) ) + RMSe ) )", "obj1": 0.6413255360623782, "obj2": 0.252134459393925}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5435995064158978}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( Const,PN ) ) ),MDR ) ) ) - Max( BR,PN ) )", "choosing": "( Max( ( RMSe / Max( ( ( RCSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.7738791423001949, "obj2": 0.12172960717166484}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ACS ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.7777777777777778, "obj2": 0.11776631706191612}, {"determining": "( Max( ( Max( CRS,( MDR + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + Max( Const,PN ) ) ) * ( MDR / PN ) ) + Max( ( MDR * FirstVNF_CPU ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7218957841107663}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.43484984564088247}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.3138401559454191, "obj2": 0.6787720800652144}, {"determining": "( ( ( Max( BR,PN ) / ( ACS * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU + CS ) / MUC ) / ( ( RCSe / RRSe ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) ) )", "obj1": 0.4015594541910331, "obj2": 0.5490866557972119}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( ( PN + DDR ) * FirstVNF_CPU ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.705761366132899}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,Max( ( MUR * MLU ),( MUC + ( MUM * ( DS * CS ) ) ) ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.5750487329434698, "obj2": 0.3153989102646524}, {"determining": "( Max( CRS,( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,MUM ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6334782684695036}, {"determining": "( ( ( ( PN / Max( FirstVNF_Mem,Max( Const,Const ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Min( ( Max( ( MUR + ( MUC * RCSe ) ),Min( Max( DS,DS ) ,MUR ) ) / Max( RMSe,MUC ) ) ,( MUR * CS ) ) + MUR ) / ( Max( MUC,MLU ) + ( CS / MLU ) ) )", "obj1": 0.6939571150097466, "obj2": 0.20235619933528742}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( FirstVNF_RAM / MDR ) + ( Max( CRS,( ( PN / Min( FirstVNF_RAM_Server ,MRS ) ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / Max( ( ( RRSe / CS ) * MLU ),MUC ) ),( RMSe + ( Max( CS,RRSe ) + ( Min( RMSe ,Max( ( MLU + MUC ),MUR ) ) * RMSe ) ) ) ) / Max( DS,MUC ) )", "obj1": 0.33528265107212474, "obj2": 0.6453045646131154}, {"determining": "( Max( ( ( Max( RRS,AMS ) * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( ( ( FirstVNF_CPU_Server * MRS ) * BR ),( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + MUR ) ) / ( ( RCSe - RMSe ) / ( DS - ( MUM + CS ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.49305967433824427}], "35": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( CRS * ( ( ( MDR - ( MDR / PN ) ) / ( ( FirstVNF_RAM_Server + Const ) / ( ACS - ACS ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( ( MDR / PN ) - Max( CRS,( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( ( AMS / PN ) ,PN ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + BR ) ) - ( ( PN / Max( MRS,FirstVNF_Mem ) ) / ( PN * MDR ) ) )", "choosing": "( Max( ( MUC / MLU ),( Max( MUR,MUC ) - Min( ( CS * RMSe ) ,( RRSe / MUM ) ) ) ) / ( CS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Max( ( FirstVNF_RAM + BR ),( ( ( FirstVNF_Mem_Server * RRS ) - ( ARS + MRS ) ) + MRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( FirstVNF_RAM * BR ) / MDR ) + ( ( PN * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( Max( Max( AMS,BR ),Min( FirstVNF_CPU_Server ,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ) - Min( Const ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + MUC ) / ( MUC / ( Min( MLU ,( RCSe + RMSe ) ) / RRSe ) ) )", "obj1": 0.4678362573099415, "obj2": 0.45410302565886906}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47181879113587394}, {"determining": "( Max( CRS,( ( ( Max( CRS,Const ) / ( ( Max( BR,FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( PN / MDR ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( RRSe / MUC ) )", "obj1": 0.3489278752436647, "obj2": 0.6260422665474787}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,RRSe ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.4269005847953216, "obj2": 0.5120676806301322}, {"determining": "( Max( ( ( Max( RRS,AMS ) * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( ( ( FirstVNF_CPU_Server * MRS ) * BR ),( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + MUR ) ) / ( ( RCSe - RMSe ) / ( DS - ( MUM + CS ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.49305967433824427}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Min( MDR ,PN ) - Max( ( Max( CRS,( ( BR / DDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( MRS / ( Min( FirstVNF_RAM ,( MDR / Const ) ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Min( MUR ,( ( CS / ( ( MLU + CS ) / MUR ) ) / DS ) ) / DS ) ) / ( Max( CS,MUM ) / Max( ( MLU / RCSe ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1973486604230722}, {"determining": "( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) / Max( ( ( RRSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.44639376218323584, "obj2": 0.48147191078915236}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - Max( CRS,( ( FirstVNF_RAM / Max( DDR,FirstVNF_Mem ) ) + PN ) ) )", "choosing": "( MLU / ( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( DS,MUC ) + MUR ) ) ) + ( RMSe / MUC ) ) )", "obj1": 0.4346978557504873, "obj2": 0.5049366329110285}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / ( MDR / PN ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( ARS * FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + ( RRSe - Min( Min( CS ,RMSe ) ,( ( MUC / MLU ) + Max( RRSe,MLU ) ) ) ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14450844174235186}, {"determining": "( ( MDR / PN ) - Max( CRS,( Min( MDR ,BR ) * ( ARS / FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( ( Min( MUM ,RMSe ) / RMSe ) ,CS ) ) ) ),RCSe ),Max( ( RMSe - ( ( RMSe * ( ( MUC / MLU ) + Max( RCSe,MLU ) ) ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MUM - ( MUC - MUC ) ),( MUC + MLU ) ) / ( ( DS + RMSe ) + ( ( MUR / MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5263513348332369}, {"determining": "( Max( ( ( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / Max( DS,( MUM + CS ) ) ) ) / ( RMSe + RMSe ) )", "obj1": 0.5458089668615984, "obj2": 0.3512817994211006}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.5536062378167641, "obj2": 0.3366196721067587}, {"determining": "( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( DS + MUC ) )", "obj1": 0.7095516569200779, "obj2": 0.18431573229473125}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( Max( ( ( ( PN / ( Max( ( CRS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5107212475633528, "obj2": 0.3946436744621419}, {"determining": "( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.9415204678362573, "obj2": 0.02586416468148146}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN / CRS ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ACS ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.9532163742690059, "obj2": 0.022310325950449784}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( Min( ARS ,FirstVNF_RAM ) - Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / ACS ) + ACS ) ) )", "choosing": "( ( DS * Min( MLU ,RRSe ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + ( ( DS - MUR ) / RRSe ) ) )", "obj1": 0.36062378167641324, "obj2": 0.6049988068144517}, {"determining": "( Max( ( Max( CRS,( ( BR / ( FirstVNF_Mem_Server / Min( FirstVNF_Mem ,AMS ) ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,( ( RMSe + Max( Max( RMSe,Min( RRSe ,MUM ) ),RRSe ) ) - MLU ) )", "obj1": 0.8109161793372319, "obj2": 0.09243020451710383}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( ( RRSe / CS ) * MLU ),MUC ) ) )", "obj1": 0.6159844054580896, "obj2": 0.27526333595196834}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( ( ( ( PN / Max( FirstVNF_Mem,Max( Const,Const ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Min( ( Max( ( MUR + ( MUC * RCSe ) ),Min( Max( DS,DS ) ,MUR ) ) / Max( RMSe,MUC ) ) ,( MUR * CS ) ) + MUR ) / ( Max( MUC,MLU ) + ( CS / MLU ) ) )", "obj1": 0.6939571150097466, "obj2": 0.20235619933528742}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( Max( CRS,( ( ( FirstVNF_Mem + FirstVNF_RAM ) * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),( Max( FirstVNF_Mem,Max( Const,Const ) ) + ( MDR / FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUC * ( MUM + DS ) ) - RMSe ),( Min( Max( MLU,( DS + RMSe ) ) ,Min( RCSe ,RRSe ) ) / ( Min( MLU ,CS ) - CS ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6881885708542137}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN * ( AMS * RRS ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) / ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.935672514619883, "obj2": 0.030967370656438595}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + PN ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( ( MUC - MUC ) - MUM ) ) ) ) )", "obj1": 0.571150097465887, "obj2": 0.32762865370805255}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.5341130604288499, "obj2": 0.36384125126687616}, {"determining": "( Max( ( Max( CRS,( ( PN / MDR ) + MDR ) ) * ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( RRS,FirstVNF_CPU_Server ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( Max( ( CS + ( MUC / ( RMSe / ( MUM - MUC ) ) ) ),RCSe ) + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + Min( MUM ,RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.30265791217197113}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,Max( ( MUR * MLU ),( MUC + ( MUM * ( DS * CS ) ) ) ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.5750487329434698, "obj2": 0.3153989102646524}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / ( ( PN / MDR ) + ACS ) ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5404653727827206}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( MRS,ARS ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( ( ( RMSe * MLU ) / CS ),MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.52046783625731, "obj2": 0.3770656460580481}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6603516377104774}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.4775828460038986, "obj2": 0.43484984564088247}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( PN / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) + PN ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( RRSe + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.29239766081871343, "obj2": 0.7109412162866894}, {"determining": "( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / ( ( CS / RRSe ) + ( MUM * RMSe ) ) ) ) ) + RMSe ) ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16503740870839786}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( ( ( Max( BR,PN ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( PN / ( ( MDR * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) + ( FirstVNF_CPU_Server / AMS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / MUC ) ) )", "obj1": 0.6393762183235867, "obj2": 0.2574815236174826}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / FirstVNF_RAM_Server ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24417321577309284}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( DS * ( DS / ( MUM + RMSe ) ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.67404486454911}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3645224171539961, "obj2": 0.5989762333851951}, {"determining": "( Min( MDR ,DDR ) - ( DDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( Min( CS ,Min( MUC ,MLU ) ) - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014440847850735638}, {"determining": "( Max( ( ( ( PN / ( Max( ( PN + PN ),Min( AMS ,AMS ) ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / ( ( MLU - ( ( RCSe - RCSe ) + Max( MUM,DS ) ) ) - RRSe ) ) / MUC ),( ( MUC / MLU ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5048732943469786, "obj2": 0.39819440666852945}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5243664717348928, "obj2": 0.3693999251397485}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),PN ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.6335282651072125, "obj2": 0.2639116531844514}, {"determining": "( Max( ( ( DDR * ( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) / FirstVNF_RAM ),( ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / Max( ( MUR * MLU ),( MUC + ( Min( RRSe ,( RRSe / MUM ) ) - ( MUM / CS ) ) ) ) )", "obj1": 0.8304093567251462, "obj2": 0.08483690695425516}, {"determining": "( ( MDR / PN ) - Max( CRS,Min( Max( ( ( DDR - MRS ) / ( ( Min( PN ,ARS ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ,ACS ) ) )", "choosing": "Min( Max( Max( ( RMSe * ( Min( ( ( DS - DS ) - ( MLU * DS ) ) ,RCSe ) * MUR ) ),RCSe ),RCSe ) ,Min( RRSe ,MLU ) )", "obj1": 0.36062378167641324, "obj2": 0.6049988068144517}, {"determining": "( ( Max( BR,PN ) + FirstVNF_CPU ) - ( MDR / PN ) )", "choosing": "( ( ( ( RRSe / MUM ) / RRSe ) / Min( Max( MUC,DS ) ,( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - MLU ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ) ) / ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + ( MUM * RMSe ) ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15824908279473315}, {"determining": "( ( Max( BR,( MDR + CRS ) ) + CRS ) - ( PN / MDR ) )", "choosing": "( Max( ( MLU / MUC ),Min( ( RCSe * MUM ) ,RCSe ) ) / Max( ( MUR * MLU ),( MUC + ( ( RRSe * Min( Min( MUR ,RMSe ) ,( RCSe / RRSe ) ) ) - ( CS / MUM ) ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15824908279473315}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + MDR ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / ( FirstVNF_CPU + CRS ) ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.6549707602339181, "obj2": 0.2400338440694838}, {"determining": "( ( ( PN / ( MDR / PN ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( ARS * PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) - ( ( PN / Max( MRS,FirstVNF_Mem ) ) / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + Min( RRSe ,( RRSe / MUM ) ) ) ) / ( ( Max( ( MLU / MUC ),( ( MLU / MUC ) + RMSe ) ) / ( DS + ( RRSe - Min( Min( CS ,RMSe ) ,( ( MUC / MLU ) + Max( RRSe,MLU ) ) ) ) ) ) + MUC ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,CRS ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,Min( RRSe ,( RRSe / MUM ) ) ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.7153996101364523, "obj2": 0.17910340866791047}, {"determining": "( Min( ( ( Max( CRS,( ( ( FirstVNF_CPU / PN ) * ( PN / BR ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( CS / Max( ( DS - ( ( ( ( RRSe * MUC ) + RCSe ) + RMSe ) * MUM ) ),RCSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07864350779056636}, {"determining": "( DDR - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014440847850735638}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.341130604288499, "obj2": 0.63624600207055}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( Max( CRS,( ( PN * CRS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ),Max( ( RMSe - CS ),Max( MUM,( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUC + MUR ) ) ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.16227905787146124}, {"determining": "( ( PN + ( ( ( ( ( FirstVNF_RAM * MRS ) / Max( BR,FirstVNF_Mem ) ) - MDR ) / MDR ) - Max( ( ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) * ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ),( FirstVNF_CPU + CRS ) ) ) ) - ( MDR * ACS ) )", "choosing": "( Min( DS ,Min( RRSe ,MLU ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + MUM ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( Max( Max( ( RRS / ( DDR - FirstVNF_CPU_Server ) ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ),CRS ) - ( MDR / PN ) )", "choosing": "( ( ( ( RRSe / MUM ) / RRSe ) / Min( Max( MUC,DS ) ,( Max( MUC,( ( Min( RCSe ,MLU ) + RCSe ) * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - MLU ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ) ) / ( MUC / ( ( ( RMSe - MUM ) - Max( RMSe,MUR ) ) / ( ( ( MUM + DS ) * MUM ) + Min( MUM ,RMSe ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16503740870839786}, {"determining": "( Max( CRS,( ( PN * ( ( PN / ( RRS - FirstVNF_CPU ) ) + ACS ) ) + ACS ) ) - ( PN / MDR ) )", "choosing": "Max( ( ( ( Max( ( MLU + RCSe ),( RRSe * ( MUR * RMSe ) ) ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ),Max( ( RMSe - CS ),Max( MUM,( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.6783625730994152, "obj2": 0.21652911125611038}, {"determining": "( Max( CRS,( ( PN + ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_CPU_Server,Max( ACS,( FirstVNF_CPU_Server * PN ) ) ) - ( ( ( AMS + FirstVNF_Mem_Server ) - ACS ) + DDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RMSe + ( MUM * ( ( Max( CS,MUR ) + ( MUC - MUR ) ) - MUC ) ) ) + ( MUC - ( ( CS - ( ( MUM / RCSe ) * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3001949317738791, "obj2": 0.6998709693731492}, {"determining": "( ( Max( RRS,( FirstVNF_CPU + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,CRS ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,Min( RRSe ,( MUM / MUM ) ) ) ) ) / MUR ) + ( RMSe / MUC ) ) )", "obj1": 0.7153996101364523, "obj2": 0.17910340866791047}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( Max( CRS,( BR - Const ) ) + Const ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( DS + MUC ) )", "obj1": 0.3937621832358674, "obj2": 0.5579046770344765}, {"determining": "( Max( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + ( PN + CRS ) ) ),( Min( MDR ,PN ) + ACS ) ) - ( Min( ARS ,FirstVNF_Mem_Server ) / PN ) )", "choosing": "( Min( ( MLU / MUC ) ,( RMSe + ( MLU / MUC ) ) ) / ( DS + ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,Max( Max( RRSe,MUC ),( Max( ( DS / RCSe ),DS ) + MUR ) ) ) ) ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Max( ( ( FirstVNF_RAM_Server / ( ( MRS * BR ) / ( ( ACS + Const ) * FirstVNF_Mem ) ) ) * DDR ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MUC ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5852040672666561}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 0.5165692007797271, "obj2": 0.38322151390077275}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,RRSe ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.33723196881091616, "obj2": 0.6444033943511616}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Max( Const,ACS ) + FirstVNF_RAM ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.9083820662768031, "obj2": 0.04361095284105886}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5029239766081871, "obj2": 0.40529179569448354}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( MDR + FirstVNF_Mem_Server ) * Max( ( MDR / PN ),PN ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( Min( Max( FirstVNF_Mem_Server,( MDR / PN ) ) ,MDR ),( Min( AMS ,BR ) / ( Max( RRS,( BR + FirstVNF_RAM ) ) * FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.8011695906432749, "obj2": 0.09697152669191349}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / RRS ) * ( FirstVNF_RAM - ACS ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUM + RRSe ) / ( Max( MLU,MUC ) + ( ( ( MLU * ( MUM + DS ) ) - RMSe ) / MLU ) ) )", "obj1": 0.783625730994152, "obj2": 0.11339024820969076}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MUC / MLU ),( Max( MUR,MUC ) - Min( ( CS * RMSe ) ,( RRSe / MUM ) ) ) ) / ( CS + MUC ) )", "obj1": 0.6120857699805068, "obj2": 0.2797819009200212}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * Max( BR,PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.2884990253411306, "obj2": 0.7180661856160386}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + PN ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( MUR + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22718451305670312}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / Max( ( ( RRSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6081871345029239, "obj2": 0.2816939215460795}, {"determining": "( ( Max( Max( CRS,( ( PN / Max( CRS,( MDR / MRS ) ) ) + ACS ) ),( ( BR / PN ) + FirstVNF_RAM_Server ) ) / ( MDR / PN ) ) - Min( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( Max( CS,MUM ) / CS ),Min( DS ,( DS / Max( MUM,DS ) ) ) ) )", "obj1": 0.9181286549707602, "obj2": 0.042378735915087895}, {"determining": "( ( ( FirstVNF_RAM * PN ) - Min( CRS ,( MDR / ( Max( Max( ( FirstVNF_CPU_Server + DDR ),FirstVNF_RAM ),FirstVNF_CPU ) - Max( FirstVNF_RAM,MRS ) ) ) ) ) - Min( PN ,ARS ) )", "choosing": "( Max( RRSe,MUM ) + Min( ( ( Max( DS,MUR ) - ( MUC - MUM ) ) / ( ( ( Min( RMSe ,RRSe ) * RMSe ) + Max( RCSe,( ( MUM * MUM ) + ( CS / RRSe ) ) ) ) + ( Max( ( ( MUR - MLU ) / Max( DS,RCSe ) ),( RMSe * ( CS - RCSe ) ) ) - MUC ) ) ) ,( Max( MUC,DS ) * Max( RCSe,RRSe ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14135684064245496}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + RRS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + RRSe ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10184601530290356}, {"determining": "( Max( ( ( DDR * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( ( PN / Max( MRS,FirstVNF_Mem ) ) / PN ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + Min( RRSe ,( RRSe / MUM ) ) ) ) / ( DS + MUC ) )", "obj1": 0.3898635477582846, "obj2": 0.5676790654164892}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + MUR ) / ( Max( MUC,MLU ) + ( ( ( MUC * ( MUM + DS ) ) - RMSe ) / MLU ) ) )", "obj1": 0.783625730994152, "obj2": 0.11339024820969076}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( MDR / BR ) ,( DDR + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) * ( FirstVNF_CPU * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( ARS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * ( Min( MUM ,Max( MLU,( Min( MUM ,MUM ) / Min( MLU ,RRSe ) ) ) ) - ( RMSe * CS ) ) ),( ( DS * ( DS / ( CS + RMSe ) ) ) + ( DS * DS ) ) ) / ( Min( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) ,( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8167641325536062, "obj2": 0.08784134092171397}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + FirstVNF_CPU ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( DDR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( CS - MUC ) - MUM ),( MUC - MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5594541910331384, "obj2": 0.33289163372179054}, {"determining": "( Max( ( ( FirstVNF_CPU_Server / FirstVNF_CPU ) + FirstVNF_RAM_Server ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUR - ( ( MLU / MUC ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6826375352880607}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + MDR ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * ( MDR * FirstVNF_RAM_Server ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ),Max( ( RMSe - CS ),Max( MUM,( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.5847953216374269, "obj2": 0.30605054346133725}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.5750487329434698, "obj2": 0.3153989102646524}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) + MDR ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( ( MDR / PN ) * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * ( MDR * FirstVNF_RAM_Server ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5886939571150097, "obj2": 0.3041498494232096}, {"determining": "( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Max( Max( RCSe,( CS - RMSe ) ),Max( ( MUM / RRSe ),Max( Min( ( RMSe / ( MLU + Max( ( MUC + CS ),( RMSe / MLU ) ) ) ) ,( MUM - Min( Min( Max( DS,MUC ) ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.8499025341130604, "obj2": 0.07306687637928873}, {"determining": "( Max( Max( ( BR + MDR ),( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / FirstVNF_RAM_Server ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * Min( MRS ,FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RRSe * MLU ) / ( ( ( ( MLU / MUR ) + RCSe ) / RRSe ) + RMSe ) )", "obj1": 0.6413255360623782, "obj2": 0.252134459393925}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS * Min( MLU ,RRSe ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8187134502923976, "obj2": 0.08666188405628665}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}], "36": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Max( BR,( MDR + CRS ) ) + CRS ) - ( PN / MDR ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS * ( ( ( MDR - ( MDR / PN ) ) / ( ( FirstVNF_RAM_Server + Const ) / ( ACS - ACS ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( MUM + CS ) + Min( Min( ( CS + ( RCSe - Min( MUC ,MUR ) ) ) ,CS ) ,( Max( ( MUM - ( ( Max( RMSe,MUR ) - ( RMSe - MUM ) ) / ( Max( RMSe,RRSe ) + ( MUC * RMSe ) ) ) ),MUC ) + ( MUM / ( ( RCSe - DS ) / ( RRSe * ( RCSe - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.4775828460038986, "obj2": 0.43466636465632913}, {"determining": "( ( Max( ( FirstVNF_RAM + BR ),( ( ( FirstVNF_Mem_Server * RRS ) - ( ARS + MRS ) ) + MRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( FirstVNF_RAM * BR ) / MDR ) + ( ( PN * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( Max( Max( AMS,BR ),Min( FirstVNF_CPU_Server ,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ) - Min( Const ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + MUC ) / ( MUC / ( Min( MLU ,( RCSe + RMSe ) ) / RRSe ) ) )", "obj1": 0.4678362573099415, "obj2": 0.45410302565886906}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6603516377104774}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( Max( RRS,( FirstVNF_CPU + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,CRS ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( CS - RMSe ),RCSe ),Max( ( MUM / RRSe ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6189233327782987}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( Max( RMSe,MUC ),RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.4346978557504873, "obj2": 0.5005496208104083}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( ( ( PN / Max( RRS,Max( Const,Const ) ) ) / MDR ) + ( ACS - FirstVNF_CPU ) ) - ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) * ( DDR - ARS ) ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( ( MUM - RRSe ) + ( ( RRSe - RMSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6900584795321637, "obj2": 0.2042682199613457}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( Max( ( ( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.5458089668615984, "obj2": 0.3486212009910709}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( ( ( FirstVNF_CPU - ACS ) + ( ( PN / ( ( RRS / MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) - ( MDR / PN ) )", "choosing": "( ( DS + MUC ) / Max( Min( MUR ,( Max( RMSe,MUC ) * ( ( MLU - ( ( RCSe / CS ) - MLU ) ) / Min( MUR ,CS ) ) ) ),RCSe ) )", "obj1": 0.7504873294346979, "obj2": 0.14733929054497058}, {"determining": "( Min( ( PN / MDR ) ,Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( MLU / ( MUC - ( MUC * RMSe ) ) ) ),( MLU / Max( ( RMSe + CS ),DS ) ) ) / ( RMSe + MUR ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( Max( ( ( ( PN / ( Max( ( CRS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5107212475633528, "obj2": 0.3946436744621419}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / MUC ) )", "obj1": 0.5165692007797271, "obj2": 0.3776042095805491}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.39571150097465885, "obj2": 0.555038569619963}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),MDR ),( ( ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) / ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( Min( AMS ,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / FirstVNF_CPU ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( Min( MLU ,RRSe ) * DS ) ) + ( RCSe - ( ( ( CS + RRSe ) / MUC ) + RMSe ) ) ) ,Max( ( ( RRSe / CS ) * MLU ),MUC ) ) )", "obj1": 0.7368421052631579, "obj2": 0.1572865610613935}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / ( ( PN / MDR ) + ACS ) ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5428360416629474}, {"determining": "( Max( BR,( FirstVNF_RAM_Server / FirstVNF_RAM ) ) - ( FirstVNF_Mem / ( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + ( Min( MUC ,Min( RRSe ,MUR ) ) * CS ) ) / Max( CS,RRSe ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MLU ),( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.4249512670565302, "obj2": 0.5126652544270991}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( ( Max( ( FirstVNF_RAM + FirstVNF_Mem_Server ),( ( BR / AMS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / MDR ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / ( ( ( PN / MDR ) + ACS ) * ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( DS * ( DS / ( MUM + RMSe ) ) ) ) )", "obj1": 0.3216374269005848, "obj2": 0.67404486454911}, {"determining": "( ( MDR / PN ) - ( Min( CRS ,( MDR + ( ( ( MRS + DDR ) - MRS ) - MRS ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( Max( RCSe,( CS - RMSe ) ),Max( ( MUM / RRSe ),Max( Min( ( RMSe / ( MLU + Max( ( MUC + CS ),( RMSe / MLU ) ) ) ) ,( MUR - Min( Min( Max( MUC,DS ) ,Min( RRSe ,RMSe ) ) ,( MLU * MUC ) ) ) ),( MLU - RRSe ) ) ) )", "obj1": 0.8830409356725146, "obj2": 0.05606336037310536}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Max( ( ( DDR * ( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) / FirstVNF_RAM ),( ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( DS,( ( MLU / MUC ) + RMSe ) ) / Max( ( MUR * MLU ),( MUC + ( Min( RRSe ,( RRSe / MUM ) ) - ( MUM / CS ) ) ) ) )", "obj1": 0.7797270955165692, "obj2": 0.11701702059416834}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( Max( CRS,( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + ( PN + CRS ) ) ),( Min( MDR ,PN ) + ACS ) ) - ( Min( ARS ,FirstVNF_Mem_Server ) / PN ) )", "choosing": "( Min( ( MLU / MUC ) ,( RMSe + ( MLU / MUC ) ) ) / ( DS + ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,Max( Max( RRSe,MUC ),( Max( ( DS / RCSe ),DS ) + MUR ) ) ) ) ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Max( Max( ( BR + MDR ),( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / FirstVNF_RAM_Server ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * Min( MRS ,FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RRSe * MLU ) / ( ( ( ( MLU / MUR ) + RCSe ) / RRSe ) + RMSe ) )", "obj1": 0.6413255360623782, "obj2": 0.252134459393925}, {"determining": "( Max( ( Max( CRS,( ( BR / ( FirstVNF_Mem_Server / Min( FirstVNF_Mem ,AMS ) ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( FirstVNF_RAM,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,Max( RRSe,( MUC + RMSe ) ) ) + MUR ) ) ) ,( ( RMSe + Max( Max( RMSe,Min( RRSe ,MUM ) ),RRSe ) ) - MLU ) )", "obj1": 0.7719298245614035, "obj2": 0.12620184182039296}, {"determining": "( Min( MDR ,PN ) - Max( ( Max( CRS,( ( BR / DDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( MRS / ( Min( FirstVNF_RAM ,( MDR / Const ) ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Min( MUR ,( ( CS / ( ( MLU + CS ) / MUR ) ) / DS ) ) / DS ) ) / ( Max( CS,MUM ) / Max( ( MLU / RCSe ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1973486604230722}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / ( ( PN / MDR ) + ACS ) ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,Max( DS,( MUM + CS ) ) ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5792217996916106}, {"determining": "( Max( ( FirstVNF_CPU + CRS ),( ( ( FirstVNF_Mem_Server * Max( ( ( MDR * ACS ) / ( DDR / PN ) ),PN ) ) / Max( ( MRS + ( PN - FirstVNF_RAM_Server ) ),ARS ) ) + FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.6335282651072125, "obj2": 0.2639116531844514}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS * Min( MLU ,RRSe ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( RMSe + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8499025341130604, "obj2": 0.07037774338621082}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,RRSe ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.4269005847953216, "obj2": 0.5120676806301322}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( BR,PN ) + PN ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( ( MUC - MUC ) - MUM ) ) ) ) )", "obj1": 0.571150097465887, "obj2": 0.32762865370805255}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47181879113587394}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3898635477582846, "obj2": 0.5616271019811122}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( PN / BR ) ) + PN ) ) - ( MDR / ( Min( ARS ,FirstVNF_Mem_Server ) / PN ) ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( Max( Max( RRSe,MUC ),( Max( ( DS / RCSe ),DS ) + MUR ) ) + RMSe ) ) / ( RRSe + MUR ) )", "obj1": 0.6764132553606238, "obj2": 0.22068985604471464}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) ) - ( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + MUR ) / ( Max( MUC,MLU ) + ( ( ( MUC * ( MUM + DS ) ) - RMSe ) / MLU ) ) )", "obj1": 0.7875243664717348, "obj2": 0.11158790768578333}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( Max( CRS,( ( PN / ( ( PN / MDR ) + ( Min( ( FirstVNF_RAM / PN ) ,ARS ) * FirstVNF_RAM ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ),Max( ( RMSe - CS ),Max( MUM,( ( ( ( MUM / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.6647173489278753, "obj2": 0.23191957942922786}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.3723196881091618, "obj2": 0.5877554676995672}, {"determining": "( Min( ( ( Max( CRS,( ( MDR / ( ARS / BR ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Min( CRS ,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( DS / ( MUM + RRSe ) ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - RCSe ) - ( Max( MUC,RRSe ) + ( MLU / RCSe ) ) ) ) ) + RMSe ) ) / ( RRSe + MUR ) )", "obj1": 0.8752436647173489, "obj2": 0.059732866185839874}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( Max( ( Max( CRS,( ( PN / MDR ) + MDR ) ) * ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( RRS,FirstVNF_CPU_Server ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( Max( ( CS + ( MUC / ( RMSe / ( MUM - MUC ) ) ) ),RCSe ) + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * MUC ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + Min( MUM ,RMSe ) ) ) + MLU ) + ( Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) / ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.30265791217197113}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( ( RRSe / CS ) * MLU ),MLU ) ) )", "obj1": 0.6159844054580896, "obj2": 0.2752520093640378}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * RRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU / ( ( RRSe + RMSe ) / MUC ) ) )", "obj1": 0.5769980506822612, "obj2": 0.31358591711231737}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5970041391347469}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN * ( AMS * RRS ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) / ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.935672514619883, "obj2": 0.030967370656438595}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5009746588693957, "obj2": 0.4051939028628491}, {"determining": "( Max( CRS,( ( PN / ( Max( MRS,MDR ) * FirstVNF_CPU ) ) + Max( CRS,( ( PN / MDR ) + ( ACS * MDR ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( Max( ( MLU + RCSe ),RRSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) ) ) ,( RMSe * MLU ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7061146175064211}, {"determining": "( Max( CRS,( ( PN + ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_CPU_Server,Max( ACS,( FirstVNF_CPU_Server * PN ) ) ) - ( ( ( AMS + FirstVNF_Mem_Server ) - ACS ) + DDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RMSe + ( MUM * ( ( Max( CS,MUR ) + ( MUC - MUR ) ) - MUC ) ) ) + ( MUC - ( ( CS - ( ( MUM / RCSe ) * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3001949317738791, "obj2": 0.6998709693731492}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6800089471056565}, {"determining": "( Max( ( ( FirstVNF_RAM_Server / ( ( MRS * BR ) / ( ( ACS + Const ) * FirstVNF_Mem ) ) ) * DDR ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MUC ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5852040672666561}, {"determining": "( Min( ( ( Max( CRS,( ( ( FirstVNF_CPU / PN ) * ( PN / BR ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( CS / Max( ( DS - ( ( ( ( RRSe * MUC ) + RCSe ) + RMSe ) * MUM ) ),RCSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07864350779056636}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3469785575048733, "obj2": 0.628702436416067}, {"determining": "( ( MDR / PN ) - Max( CRS,Min( Max( ( ( DDR - MRS ) / ( ( Min( PN ,ARS ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ,ACS ) ) )", "choosing": "Min( Max( Max( ( RMSe * ( Min( ( ( DS - DS ) - ( MLU * DS ) ) ,RCSe ) * MUR ) ),RCSe ),RCSe ) ,Min( RRSe ,MLU ) )", "obj1": 0.36062378167641324, "obj2": 0.6049988068144517}, {"determining": "( ( PN + ( ( ( ( ( FirstVNF_RAM * MRS ) / Max( BR,FirstVNF_Mem ) ) - MDR ) / MDR ) - Max( ( ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) * ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ),( FirstVNF_CPU + CRS ) ) ) ) - ( MDR * ACS ) )", "choosing": "( Min( DS ,Min( RRSe ,MLU ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + MUM ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( ( ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),( FirstVNF_CPU + CRS ) ) ) ) - ( MDR * ACS ) )", "choosing": "( MUC / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.7933723196881092, "obj2": 0.10285686566700804}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( MDR / RRS ) / ( FirstVNF_RAM_Server + FirstVNF_Mem ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,Max( ( ( RRSe - MLU ) + MUR ),( MUC - MLU ) ) ) ,MUR ) )", "obj1": 0.5399610136452242, "obj2": 0.36117016391497314}, {"determining": "( Max( ( Min( Max( MDR,( ARS - FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,Min( MDR ,FirstVNF_Mem ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( Const + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe + MUM ),( RRSe - ( RRSe / MUM ) ) ) / ( Max( CS,MUM ) / ( ( MUR + MLU ) * MLU ) ) )", "obj1": 0.442495126705653, "obj2": 0.48749704874241256}, {"determining": "( ( ( ( PN / ( ( ( BR + ( MDR / PN ) ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( CS + MLU ) ) / ( DS + MUC ) )", "obj1": 0.7680311890838206, "obj2": 0.12746151602271977}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.5653021442495126, "obj2": 0.3313856211752697}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.7621832358674464, "obj2": 0.1337372348100885}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.5730994152046783, "obj2": 0.3172991436201944}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( PN / BR ) ) + PN ) ) - ( MDR / PN ) ) + Max( Max( AMS,AMS ),MRS ) ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU / MUC ) - ( RMSe + ( MLU / MUC ) ) ) / ( DS + ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,Max( Max( RRSe,MUC ),( Max( ( RCSe / RCSe ),DS ) + MUR ) ) ) ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07864350779056636}, {"determining": "( Max( CRS,( ( PN / ( ( PN / MDR ) + ACS ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( ( CS - RMSe ),RCSe ),Max( ( MUM / RRSe ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.6783625730994152, "obj2": 0.21652911125611038}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * Max( BR,PN ) ) ) + Max( MRS,MDR ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( ( MUC * RCSe ) / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,RMSe ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.2807017543859649, "obj2": 0.727595678632479}, {"determining": "( Max( ( ( ( PN / ( Max( ( PN + PN ),Min( AMS ,AMS ) ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / ( ( MLU - ( ( RCSe - RCSe ) + Max( MUM,DS ) ) ) - RRSe ) ) / MUC ),( ( MUC / MLU ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5048732943469786, "obj2": 0.39819440666852945}, {"determining": "( ( MDR / PN ) - Max( CRS,( Min( MDR ,BR ) * ( ARS / FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( ( Min( MUM ,RMSe ) / RMSe ) ,CS ) ) ) ),RCSe ),Max( ( RMSe - ( ( RMSe * ( ( MUC / MLU ) + Max( RCSe,MLU ) ) ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MUM - ( MUC - MUC ) ),( MUC + MLU ) ) / ( ( DS + RMSe ) + ( ( MUR / MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5263513348332369}, {"determining": "( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) / Max( ( ( RRSe / CS ) * MLU ),MUC ) ),( ( Max( CS,RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.4502923976608187, "obj2": 0.47794299409256863}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUC * Max( Min( ( MUR - CS ) ,MUM ),MLU ) ) ,( MUR * CS ) )", "obj1": 0.5243664717348928, "obj2": 0.3693999251397485}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( CS - MUC ) - MUM ),( MUC - MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3646978274841251}, {"determining": "( ( ( FirstVNF_Mem_Server + Const ) - ( MDR / ARS ) ) - ( MDR * ( Max( BR,( PN + CRS ) ) + CRS ) ) )", "choosing": "( ( ( ( Max( ( Min( DS ,RMSe ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / Min( Min( MUR ,RMSe ) ,( RCSe / RRSe ) ) ) ) + Min( Max( CS,MUC ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.9454191033138402, "obj2": 0.025773785832486466}, {"determining": "( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( Max( Max( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ),( DS - MUR ) ),( MUC + ( DS * Min( MLU ,RRSe ) ) ) ) / MUC ) ) )", "obj1": 0.9415204678362573, "obj2": 0.02586416468148146}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) - MDR ) ),( ( PN / MDR ) / Max( ( FirstVNF_RAM_Server * MRS ),( CRS / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( ( RRS - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_RAM_Server ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( ( Max( ( CS + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ),Max( ( CS - RMSe ),Max( MUM,( ( ( ( Max( MUR,MUM ) / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6937629373378152}, {"determining": "( Max( ( ( Max( RRS,MDR ) * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,( ( BR / BR ) + MDR ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( Min( RRSe ,( RRSe / ( Max( ( MUM - ( MUC - MUC ) ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MLU ) + MUR ) ) ) ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( DS - ( MUM + CS ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.23703433731537507}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Max( Const,ACS ) + FirstVNF_RAM ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.9083820662768031, "obj2": 0.04361095284105886}, {"determining": "( DDR - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( DS + MUC ) )", "obj1": 0.9707602339181286, "obj2": 0.014440847850735638}, {"determining": "( ( ( ( MDR / ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / ( FirstVNF_RAM / ( ( PN + FirstVNF_RAM ) * Min( ( MDR + MRS ) ,FirstVNF_Mem_Server ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( ( ( ( RCSe + DS ) + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RCSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.8031189083820662, "obj2": 0.09596205837556605}, {"determining": "( Max( CRS,( ( PN * ( ( PN / ( RRS - FirstVNF_CPU ) ) + ACS ) ) + ACS ) ) - ( PN / MDR ) )", "choosing": "Max( ( ( ( Max( ( MLU + RCSe ),( RRSe * ( MUR * RMSe ) ) ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ),Max( ( RMSe - CS ),Max( MUM,( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.6783625730994152, "obj2": 0.21652911125611038}, {"determining": "( Max( ( Max( CRS,( ( BR / ( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU * MUC ) ) ) ) ) + RMSe ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RRSe ) ) ) + ( DS * DS ) ) ) - RRSe ),RRSe ) )", "obj1": 0.8284600389863548, "obj2": 0.08281280143908903}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.30409356725146197, "obj2": 0.6973353674975435}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.5536062378167641, "obj2": 0.3366196721067587}, {"determining": "( Max( ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RRSe ) ) ) + ( DS * MLU ) ) ) - RRSe ),RRSe ) )", "obj1": 0.7037037037037037, "obj2": 0.18996517795942058}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / ( ACS - MRS ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Min( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ) ,( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( ( ( CS * Min( MUR ,( MUM * MUR ) ) ) + MLU ) * RMSe ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + MUR ) ) + RMSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24417321577309284}, {"determining": "( ( Min( FirstVNF_CPU ,PN ) - Max( ACS,FirstVNF_CPU_Server ) ) - ( CRS - Min( Min( ARS ,AMS ) ,ACS ) ) )", "choosing": "Min( ( Max( RRSe,CS ) / Max( Max( RRSe,MUC ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( Min( ( MUC - DS ) ,( RRSe * MLU ) ) * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) - RRSe ),( CS + ( DS + RCSe ) ) ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / ( MDR / PN ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( ( MLU / MUC ) + Min( RRSe ,( RRSe / MUM ) ) ) ) / ( DS + MUC ) )", "obj1": 0.935672514619883, "obj2": 0.030967370656438595}, {"determining": "( ( MDR - AMS ) - ( MDR / PN ) )", "choosing": "( ( DS * Min( MLU ,RRSe ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( RCSe + RMSe ) ) - RRSe ) ,CS ) ) ) + RMSe ) )", "obj1": 0.8284600389863548, "obj2": 0.08281280143908903}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( MDR / BR ) ,( DDR + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) * ( FirstVNF_CPU * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( ARS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * ( Min( MUM ,Max( MLU,( Min( MUM ,MUM ) / Min( MLU ,RRSe ) ) ) ) - ( RMSe * CS ) ) ),( ( DS * ( DS / ( CS + RMSe ) ) ) + ( DS * DS ) ) ) / ( Min( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) ,( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8167641325536062, "obj2": 0.08784134092171397}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),( FirstVNF_CPU + CRS ) ) ) ) - ( MDR * ACS ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( ( Max( Max( CRS,( ( PN / Max( CRS,( MDR / MRS ) ) ) + ACS ) ),( ( BR / PN ) + FirstVNF_RAM_Server ) ) / ( MDR / PN ) ) - Min( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( Max( CS,MUM ) / CS ),Min( DS ,( DS / Max( MUM,DS ) ) ) ) )", "obj1": 0.9181286549707602, "obj2": 0.042378735915087895}], "37": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_RAM + BR ) * ( AMS / FirstVNF_RAM_Server ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - ( ARS / Min( ( CRS * ( FirstVNF_RAM * MRS ) ) ,AMS ) ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( CS - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( RMSe / ( RCSe / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( BR,( MDR + CRS ) ) + CRS ) - ( PN / MDR ) )", "choosing": "( ( ( ( Max( ( Min( DS ,MLU ) / RMSe ),( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) - ( ( MUC - MLU ) / MLU ) ) + MUC ) * CS ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Max( ( FirstVNF_RAM + BR ),( ( ( FirstVNF_Mem_Server * RRS ) - ( ARS + MRS ) ) + MRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( FirstVNF_RAM * BR ) / MDR ) + ( ( PN * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( Max( Max( AMS,BR ),Min( FirstVNF_CPU_Server ,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ) - Min( Const ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + MUC ) / ( MUC / ( Min( MLU ,( RCSe + RMSe ) ) / RRSe ) ) )", "obj1": 0.4678362573099415, "obj2": 0.45410302565886906}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( Max( RMSe,MUC ),RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.4346978557504873, "obj2": 0.5005496208104083}, {"determining": "( Max( ( Max( CRS,( ( BR / ( PN + CRS ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( MRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,( Max( ( DS / RCSe ),DS ) + MUR ) ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RRSe ) ) ) + ( DS * MLU ) ) ) - RRSe ),RRSe ) )", "obj1": 0.7056530214424951, "obj2": 0.18906400769746687}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6745627220956089}, {"determining": "( ( ( PN / Max( MRS,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) + PN ) - ( MDR / PN ) )", "choosing": "( Max( ( Min( RMSe ,RCSe ) * MUR ),( MLU / MUC ) ) / ( DS + Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RRSe ) ) ) + ( DS * DS ) ) ) ) )", "obj1": 0.9649122807017544, "obj2": 0.016831448682283992}, {"determining": "( Max( ( Min( Max( MDR,( ARS - FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,Min( MDR ,FirstVNF_Mem ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( Const + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe + MUM ),( RRSe - ( RRSe / MUM ) ) ) / ( Max( CS,MUM ) / ( ( MUR + MLU ) * MLU ) ) )", "obj1": 0.442495126705653, "obj2": 0.48749704874241256}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Max( Const,ACS ) + FirstVNF_RAM ) ) / MDR ) ) ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ),RCSe ) )", "obj1": 0.5886939571150097, "obj2": 0.3027514552989243}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( MDR / PN ) - Max( CRS,( Min( MDR ,BR ) * ( ARS / FirstVNF_CPU ) ) ) )", "choosing": "Max( Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( ( Min( MUM ,RMSe ) / RMSe ) ,CS ) ) ) ),RCSe ),Max( ( RMSe - ( ( RMSe * ( ( MUC / MLU ) + Max( RCSe,MLU ) ) ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MUM - ( MUC - MUC ) ),( MUC + MLU ) ) / ( ( DS + RMSe ) + ( ( MUR / MLU ) + MUR ) ) ) ) ) ) )", "obj1": 0.4152046783625731, "obj2": 0.5263513348332369}, {"determining": "( Max( CRS,( ( ( PN / ( ( FirstVNF_Mem / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC + ( DS * ( DS * CS ) ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.34307992202729043, "obj2": 0.6418005668789475}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Max( Max( ( CS - RMSe ),RCSe ),Max( ( MUM / RRSe ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.4775828460038986, "obj2": 0.43466636465632913}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / ( ACS - MRS ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Min( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ) ,( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( ( ( CS * Min( MUR ,( MUM * MUR ) ) ) + MLU ) * RMSe ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + MUR ) ) + RMSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24417321577309284}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3898635477582846, "obj2": 0.5616271019811122}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( MRS + DDR ) - MRS ) + CRS ) ) - ( MDR / ( ( MDR * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( RRSe - ( MUM + CS ) ) ) ) ) / MUC ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.7602339181286549, "obj2": 0.14176923340980846}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( Min( MDR ,PN ) - Max( ( Max( CRS,( ( BR / DDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( MRS / ( Min( FirstVNF_RAM ,( MDR / Const ) ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Min( MUR ,( ( CS / ( ( MLU + CS ) / MUR ) ) / DS ) ) / DS ) ) / ( Max( CS,MUM ) / Max( ( MLU / RCSe ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1973486604230722}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( RRSe + MUR ) )", "obj1": 0.6842105263157895, "obj2": 0.21602391892664924}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.31968810916179335, "obj2": 0.6699501596680056}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5970041391347469}, {"determining": "( Max( Max( Max( CRS,( ( PN / MDR ) - MDR ) ),( ( PN / MDR ) / Max( ( FirstVNF_RAM_Server * MRS ),( CRS / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( ( RRS - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_RAM_Server ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( ( Max( ( CS + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ),Max( ( CS - RMSe ),Max( MUM,( ( ( ( Max( MUR,MUM ) / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.3079922027290448, "obj2": 0.6937629373378152}, {"determining": "( ( DDR - RRS ) - Min( FirstVNF_Mem ,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( MUR - ( MUM + ( DS / CS ) ) ) ) ) ) / MUC ) )", "obj1": 0.5165692007797271, "obj2": 0.3776042095805491}, {"determining": "( Max( ( ( ( PN / ( Max( ( CRS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5107212475633528, "obj2": 0.3946436744621419}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.39571150097465885, "obj2": 0.554802907235607}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / ( ( PN / MDR ) + ACS ) ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,Max( DS,( MUM + CS ) ) ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5792217996916106}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS * Min( MLU ,RRSe ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( RMSe + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8499025341130604, "obj2": 0.07037774338621082}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( Min( ( PN / MDR ) ,Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU_Server / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( MLU / ( MUC - ( MUC * RMSe ) ) ) ),( MLU / Max( ( RMSe + CS ),DS ) ) ) / ( RMSe + MUR ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( Max( RRS,Const ) + ( ( MDR / MDR ) + ( Max( CRS,Max( ( BR + FirstVNF_CPU ),( ( FirstVNF_Mem_Server * BR ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( MUR ,Max( MUR,( CS + ( CS - CS ) ) ) ) )", "obj1": 0.571150097465887, "obj2": 0.3192929163671576}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.4853801169590643, "obj2": 0.4301596542580565}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5492043103105175}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / Const ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( ( DS + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.44834307992202727, "obj2": 0.4805061071069547}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN + MDR ) + CRS ) ) - ( PN / MDR ) )", "choosing": "Max( ( MLU - ( Min( Max( ( Min( ( RCSe + RRSe ) ,RRSe ) - RCSe ),Min( Max( MUC,MLU ) ,CS ) ) ,CS ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MLU + MUC ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.033521263247452256}, {"determining": "( ( ( FirstVNF_CPU - ACS ) + ( ( PN / ( ( RRS / MDR ) * FirstVNF_Mem_Server ) ) + MDR ) ) - ( MDR / PN ) )", "choosing": "( ( DS + MUC ) / Max( Min( MUR ,( Max( RMSe,MUC ) * ( ( MLU - ( ( RCSe / CS ) - MLU ) ) / Min( MUR ,CS ) ) ) ),RCSe ) )", "obj1": 0.7504873294346979, "obj2": 0.14733929054497058}, {"determining": "( Max( FirstVNF_CPU_Server,( RRS * FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,Min( ( MDR / FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + Max( RRSe,RRSe ) ) + ( Max( ( ( MUM - CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.594541910331384, "obj2": 0.29756708050954733}, {"determining": "( ( Max( RRS,( FirstVNF_CPU + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,CRS ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( CS - RMSe ),RCSe ),Max( ( MUM / RRSe ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6189233327782987}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8031189083820662, "obj2": 0.09596205837556605}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( Min( FirstVNF_RAM_Server ,Const ),FirstVNF_Mem_Server ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Max( MLU,MUM ) / DS ),( RCSe / ( MUC + DS ) ) ) * Min( MLU ,RRSe ) ) ) - ( ( ( RRSe / ( DS - ( MUM + CS ) ) ) - MLU ) + CS ) ) + RMSe ) )", "obj1": 0.6120857699805068, "obj2": 0.27716402999009604}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5516569200779727, "obj2": 0.3375208423687124}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN / CRS ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ( Max( BR,( MDR + CRS ) ) + CRS ) ) )", "choosing": "Min( ( MUC * Max( Min( ( MUR - CS ) ,MUM ),MLU ) ) ,( MUR * CS ) )", "obj1": 0.9454191033138402, "obj2": 0.025773785832486466}, {"determining": "( ( BR / MDR ) - ( ( Max( DDR,AMS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) * ( Max( AMS,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "Min( Max( ( RRSe * ( MUC / ( CS + MUM ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUM / Min( ( RCSe - ( MLU - CS ) ) ,CS ) ) ) ),RCSe ) )", "obj1": 0.33723196881091616, "obj2": 0.6468874295496647}, {"determining": "( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.3586744639376218, "obj2": 0.6170138093231573}, {"determining": "( Min( ( ( Max( CRS,( ( MDR / ( ARS / BR ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Min( CRS ,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( DS / ( MUM + RRSe ) ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - RCSe ) - ( Max( MUC,RRSe ) + ( MLU / RCSe ) ) ) ) ) + RMSe ) ) / ( RRSe + MUR ) )", "obj1": 0.8752436647173489, "obj2": 0.059732866185839874}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( PN + ( ( ( FirstVNF_RAM - Max( ( MRS * FirstVNF_RAM ),PN ) ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) / ( ( ( MUC + ( Min( MUC ,RRSe ) * Max( MLU,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( ( MUR + MUR ),( MUM + MUM ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7719298245614035, "obj2": 0.12370493975825236}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( ( RRSe / CS ) * MLU ),MLU ) ) )", "obj1": 0.6159844054580896, "obj2": 0.2752520093640378}, {"determining": "( Min( ( PN / MDR ) ,Max( ( MRS * FirstVNF_RAM_Server ),( Max( CRS,( ( PN / MDR ) + ACS ) ) / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( MLU / ( RRSe - ( MUC * RMSe ) ) ) ),( MLU / Max( ( RMSe + CS ),DS ) ) ) / ( RMSe + MUR ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( MDR / PN ) - Max( CRS,Min( Max( ( ( DDR - MRS ) / ( ( Min( PN ,ARS ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ,ACS ) ) )", "choosing": "Min( Max( Max( ( RMSe * ( Min( ( ( DS - DS ) - ( MLU * DS ) ) ,RCSe ) * MUR ) ),RCSe ),RCSe ) ,Min( RRSe ,MLU ) )", "obj1": 0.36062378167641324, "obj2": 0.6049988068144517}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / Min( ( FirstVNF_RAM * FirstVNF_CPU ) ,( FirstVNF_Mem + ARS ) ) ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_CPU * FirstVNF_Mem ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN - MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( MRS * FirstVNF_RAM ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RCSe ) ,Max( ( MUC + ( ( DS * CS ) * DS ) ),CS ) ) ,Max( ( DS - MLU ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.2575073708389268}, {"determining": "( ( Max( CRS,( ( PN / ( ( PN + DDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR * ( ( Max( MDR,Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( Max( Const,ACS ) + FirstVNF_RAM ) ) / MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,Max( ( ( ( DS / MUR ) + Min( DS ,RMSe ) ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ) ) )", "obj1": 0.9122807017543859, "obj2": 0.041711148046958545}, {"determining": "( Max( ( ( FirstVNF_RAM_Server / ( ( MRS * BR ) / ( ( ACS + Const ) * FirstVNF_Mem ) ) ) * DDR ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUC ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / MUC ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5852040672666561}, {"determining": "( Min( ( ( Max( CRS,( ( ( FirstVNF_CPU / PN ) * ( PN / BR ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( CS / Max( ( DS - ( ( ( ( RRSe * MUC ) + RCSe ) + RMSe ) * MUM ) ),RCSe ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07864350779056636}, {"determining": "( ( ( ( MDR / ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / ( FirstVNF_RAM / ( ( PN + FirstVNF_RAM ) * Min( ( MDR + MRS ) ,FirstVNF_Mem_Server ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( ( ( ( RCSe + DS ) + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RCSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ),MUM ) ) )", "obj1": 0.8031189083820662, "obj2": 0.09596205837556605}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3645224171539961, "obj2": 0.6038216902762777}, {"determining": "( ( Max( FirstVNF_CPU,( BR + FirstVNF_RAM ) ) + ( ( PN / Min( ACS ,MRS ) ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( ( DDR / PN ) / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / Min( MUM ,MUM ) )", "obj1": 0.9746588693957114, "obj2": 0.012130240270688018}, {"determining": "( ( PN + ( ( ( ( ( FirstVNF_RAM * MRS ) / Max( BR,FirstVNF_Mem ) ) - MDR ) / MDR ) - Max( ( ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) * ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ),( FirstVNF_CPU + CRS ) ) ) ) - ( MDR * ACS ) )", "choosing": "( Min( DS ,Min( RRSe ,MLU ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + MUM ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3489278752436647, "obj2": 0.6279855848047239}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( CS - MUC ) - MUM ),( MUC - MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6603516377104774}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6666666666666666, "obj2": 0.22785655492638632}, {"determining": "( Max( Max( ( BR + MDR ),( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / FirstVNF_RAM_Server ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * Min( MRS ,FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RRSe * MLU ) / ( ( ( ( MLU / MUR ) + RCSe ) / RRSe ) + RMSe ) )", "obj1": 0.6413255360623782, "obj2": 0.252134459393925}, {"determining": "( Max( CRS,( ( Min( Const ,( Max( ( MDR / PN ),PN ) + PN ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MUR / Min( Min( CS ,MLU ) ,CS ) ),Max( ( RMSe + ( ( ( ( ( RRSe / MLU ) / DS ) / ( ( MUM * MLU ) * RMSe ) ) * MLU ) / CS ) ),Max( MUM,( ( Min( MLU ,( ( CS / RRSe ) + ( MUM * RMSe ) ) ) + MLU ) + ( ( MUC - MUC ) - MUM ) ) ) ) )", "obj1": 0.5614035087719298, "obj2": 0.33307523370862485}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_CPU ) * FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * ( CS - RMSe ) ) ) ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8206627680311891, "obj2": 0.08489913211675239}, {"determining": "( ( ( ( PN / Max( FirstVNF_Mem,Max( Const,Const ) ) ) / MDR ) + Min( ARS ,ARS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU / ( ( CS * Max( RCSe,( RMSe / ( ( MUM * CS ) * ( CS * DS ) ) ) ) ) - Max( CS,Min( RMSe ,DS ) ) ) ) )", "obj1": 0.6920077972709552, "obj2": 0.2023679866058038}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( MDR / BR ) ,( DDR + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) * ( FirstVNF_CPU * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( ARS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * ( Min( MUM ,Max( MLU,( Min( MUM ,MUM ) / Min( MLU ,RRSe ) ) ) ) - ( RMSe * CS ) ) ),( ( DS * ( DS / ( CS + RMSe ) ) ) + ( DS * DS ) ) ) / ( Min( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) ,( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8167641325536062, "obj2": 0.08784134092171397}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5377139041594976}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Min( ( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( ACS / AMS ) ) + PN ) ,( CRS + FirstVNF_Mem ) ) - Max( CRS,( ( PN / MDR ) + Min( RRS ,( ( AMS * ( MDR + FirstVNF_Mem ) ) * AMS ) ) ) ) )", "choosing": "Min( Max( ( RRSe / ( ( DS + MUM ) / ( Min( RMSe ,Min( MUM ,Min( MUC ,RCSe ) ) ) + MUR ) ) ),( MUC / RCSe ) ) ,Max( ( MLU / MLU ),( ( CS + MLU ) / Min( ( MUR + MUR ) ,RMSe ) ) ) )", "obj1": 0.5224171539961013, "obj2": 0.37597117173416417}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.5653021442495126, "obj2": 0.3313856211752697}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( PN / BR ) ) + PN ) ) - ( MDR / PN ) ) + Max( Max( AMS,AMS ),MRS ) ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU / MUC ) - ( RMSe + ( MLU / MUC ) ) ) / ( DS + ( ( RCSe / RRSe ) / Min( Max( MUC,DS ) ,Max( Max( RRSe,MUC ),( Max( ( RCSe / RCSe ),DS ) + MUR ) ) ) ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07864350779056636}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / FirstVNF_RAM_Server ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( ( RRSe / CS ) * MLU ),MLU ) ) )", "obj1": 0.645224171539961, "obj2": 0.2502224387678667}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS / FirstVNF_Mem ),ARS ) + ( ( Max( FirstVNF_Mem_Server,( CRS + DDR ) ) * AMS ) / CRS ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + ( MLU * DS ) ) ) )", "obj1": 0.4249512670565302, "obj2": 0.5126652544270991}, {"determining": "( ( MRS - MDR ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.5360623781676414, "obj2": 0.3602935892236567}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.3723196881091618, "obj2": 0.5877554676995672}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3469785575048733, "obj2": 0.628702436416067}, {"determining": "( Max( ( ( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( RRSe / ( Min( MUR ,RRSe ) + MUR ) ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.5458089668615984, "obj2": 0.3486212009910709}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN * ( AMS * RRS ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) / ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.935672514619883, "obj2": 0.030967370656438595}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),MDR ),( ( ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) / ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( Min( AMS ,( ( FirstVNF_Mem - FirstVNF_RAM_Server ) / FirstVNF_CPU ) ) / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( Min( MLU ,RRSe ) * DS ) ) + ( RCSe - ( ( ( CS + RRSe ) / MUC ) + RMSe ) ) ) ,Max( ( ( RRSe / CS ) * MLU ),MUC ) ) )", "obj1": 0.7368421052631579, "obj2": 0.1572865610613935}, {"determining": "( ( ( PN / ( MDR / PN ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( Min( RRSe ,( RRSe / MUM ) ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.9824561403508771, "obj2": 0.008438274315392893}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( Max( ( ( DDR * ( PN / ( Max( RRS,FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_Mem ) ) ) ) / FirstVNF_RAM ),( ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.7777777777777778, "obj2": 0.1179730309071974}, {"determining": "( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) - ( MDR / PN ) )", "choosing": "( Max( DS,( ( MLU / MUC ) + RMSe ) ) / Max( ( MUR * MLU ),( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6603516377104774}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5243664717348928, "obj2": 0.3693999251397485}, {"determining": "( Max( ( ( ( PN / ( Max( ( CRS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5048732943469786, "obj2": 0.3972501515048726}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),RCSe ) )", "obj1": 0.4775828460038986, "obj2": 0.43466636465632913}, {"determining": "( Min( ( ( Max( CRS,( ( ( FirstVNF_CPU / PN ) * ( PN / BR ) ) + ( BR / ACS ) ) ) - ( MDR / PN ) ) + ACS ) ,( Max( ( Max( MDR,FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ),CRS ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( ( Min( ( Max( RRSe,( MUC + RMSe ) ) - RRSe ) ,RMSe ) + ( CS - ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Max( ( CS - DS ),( ( Max( MUR,( Max( MUM,MLU ) + Min( RRSe ,RRSe ) ) ) - RMSe ) - RMSe ) ) )", "obj1": 0.672514619883041, "obj2": 0.2225470366196975}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( BR + FirstVNF_RAM ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.732943469785575, "obj2": 0.1612728762349697}, {"determining": "( ( Max( Max( CRS,( ( PN / ( MDR + ACS ) ) + ACS ) ),( ( ACS + PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) - Min( Min( MRS ,FirstVNF_Mem_Server ) ,( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU + RCSe ) ,( MUC - ( RMSe - DS ) ) )", "obj1": 0.8908382066276803, "obj2": 0.05499816822923517}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5009746588693957, "obj2": 0.4051939028628491}], "38": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( BR / MDR ) - ( ( Max( DDR,AMS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( FirstVNF_Mem ,MDR ) * ( Max( ( FirstVNF_Mem_Server + CRS ),( MRS + FirstVNF_Mem ) ) * RRS ) ) + Max( ARS,( CRS + FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( RRSe * ( MUC / ( MLU * RCSe ) ) ),( MUC / RCSe ) ) ,( MUM * Max( MLU,( ( MUC - ( MUC / ( RCSe * RRSe ) ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_RAM + BR ) * ( AMS / FirstVNF_RAM_Server ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - ( ARS / Min( ( CRS * ( FirstVNF_RAM * MRS ) ) ,AMS ) ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( CS - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( RMSe / ( RCSe / MUR ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( MRS + ( Max( FirstVNF_RAM_Server,ARS ) - Max( ( ( MDR / FirstVNF_CPU ) + ( ( ( PN / CRS ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ( Max( BR,( MDR + CRS ) ) + CRS ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( MUM,Min( ( RMSe / ( RCSe / RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( MUM ,MUC ) ) ,( CS * ( DS - MUR ) ) ) ) ) ) ) )", "obj1": 0.9454191033138402, "obj2": 0.02577378583248646}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.7543859649122807, "obj2": 0.14080639479118648}, {"determining": "( Min( ( PN / MDR ) ,Max( ( MRS * FirstVNF_RAM_Server ),( Max( CRS,( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( MLU / ( RRSe - ( MUC * RMSe ) ) ) ),( ( ( RCSe + DS ) + MLU ) / Max( ( RMSe + CS ),DS ) ) ) / ( RMSe + MUR ) )", "obj1": 0.7914230019493177, "obj2": 0.1110008422675155}, {"determining": "( ( Max( ( FirstVNF_RAM + BR ),( ( ( FirstVNF_Mem_Server * RRS ) - ( ARS + MRS ) ) + MRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( FirstVNF_RAM * BR ) / MDR ) + ( ( PN * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( Max( Max( AMS,BR ),Min( FirstVNF_CPU_Server ,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ) - Min( Const ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + MUC ) / ( MUC / ( Min( MLU ,( RCSe + RMSe ) ) / RRSe ) ) )", "obj1": 0.4678362573099415, "obj2": 0.45410302565886906}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( Max( RMSe,MUC ),RRSe ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5614035087719298, "obj2": 0.33077636790802944}, {"determining": "( Max( ( ( ( PN / ( ( BR + FirstVNF_RAM ) + FirstVNF_CPU ) ) / AMS ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( ( RRSe / Min( MUM ,MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5107212475633528, "obj2": 0.3933632589748125}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / FirstVNF_RAM_Server ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( FirstVNF_Mem / ACS ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( Min( MLU ,RRSe ) - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5847953216374269, "obj2": 0.31374704928010005}, {"determining": "( ( Max( RRS,( BR + ACS ) ) + Min( PN ,PN ) ) - Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "( MLU / ( ( MUM * RCSe ) * MUC ) )", "obj1": 0.9649122807017544, "obj2": 0.01664718160964325}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * MUR ),Min( ( Max( RCSe,MUM ) / RCSe ) ,( RCSe / MUR ) ) ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.834307992202729, "obj2": 0.07821823202833587}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( ( Max( CRS,( ( BR / ( PN + CRS ) ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( ( Max( CRS,( ( PN / Max( CRS,FirstVNF_Mem ) ) + PN ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_Mem + FirstVNF_RAM ) ) ) + Max( MRS,ARS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( Max( RRSe,( Max( ( DS / RCSe ),DS ) + MUR ) ),( Max( MUC,DS ) + MUR ) ) ) ,Max( ( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + CS ) ) ) + ( DS * MLU ) ) ) - RRSe ),RRSe ) )", "obj1": 0.7095516569200779, "obj2": 0.1871519870714086}, {"determining": "( ( DDR - RRS ) - Min( FirstVNF_Mem ,Min( PN ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( MUR - ( MUM + ( DS / CS ) ) ) ) ) ) / MUC ) )", "obj1": 0.5165692007797271, "obj2": 0.3776042095805491}, {"determining": "( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Max( Max( RMSe,MUC ),RRSe ),DS ) ,MUR ) )", "obj1": 0.6608187134502924, "obj2": 0.23396107865482135}, {"determining": "( ( ( ( ( ( MRS / FirstVNF_Mem_Server ) / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) + MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / ( RMSe - ( ( CS + RMSe ) * MLU ) ) ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,RMSe ),MLU ) )", "obj1": 0.8031189083820662, "obj2": 0.09596205837556604}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN * ( AMS * RRS ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) / ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.935672514619883, "obj2": 0.030967370656438595}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.34307992202729043, "obj2": 0.6408724100136028}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3898635477582846, "obj2": 0.5616271019811122}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( ( Max( RRS,Const ) + ( ( Max( CRS,Max( ( BR + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,ACS ) ) ) - ( MDR / PN ) ) + Max( PN,MDR ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.571150097465887, "obj2": 0.3192929163671576}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6745627220956089}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( Max( ( ( FirstVNF_RAM * ( PN + PN ) ) * FirstVNF_CPU ),( ( ( PN / CRS ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ( Max( BR,( MDR + CRS ) ) + CRS ) ) )", "choosing": "Min( ( MUM - Min( Min( RRSe ,( ( ( MUM * ( MUM / MUM ) ) + ( MLU / ( MUM + MUC ) ) ) - CS ) ) ,( CS * MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.7485380116959064, "obj2": 0.14745953038277043}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.31968810916179335, "obj2": 0.6699501596680056}, {"determining": "( Min( MDR ,PN ) - Max( ( Max( CRS,( ( BR / DDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( MRS / ( Min( FirstVNF_RAM ,( MDR / Const ) ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Min( MUR ,( ( CS / ( ( MLU + CS ) / MUR ) ) / DS ) ) / DS ) ) / ( Max( CS,MUM ) / Max( ( MLU / RCSe ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1973486604230722}, {"determining": "( Max( CRS,( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5970041391347469}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( CS - ( RMSe * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.8401559454191033, "obj2": 0.07382033575612416}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5377139041594976}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( CRS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / PN ) ) + Min( ( ARS * AMS ) ,( DDR * Const ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( CS - ( RMSe * CS ) ) ),( RCSe / MUC ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( Min( ( MUR - CS ) ,MUM ) / ( MUC + ( RCSe + MLU ) ) ) ) ),RCSe ) )", "obj1": 0.49122807017543857, "obj2": 0.4178025673188104}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.3723196881091618, "obj2": 0.5877554676995672}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( Max( RMSe,MUC ),RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.4346978557504873, "obj2": 0.5005496208104083}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( Max( FirstVNF_RAM,( ( PN / ( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) + CRS ) ) - Min( AMS ,FirstVNF_RAM_Server ) )", "choosing": "Max( ( MLU - ( ( CS * CS ) + ( RRSe - Min( ( Min( ( CS + MUR ) ,Min( RRSe ,MLU ) ) + MLU ) ,RCSe ) ) ) ),Max( ( RMSe * ( ( RMSe * MLU ) / CS ) ),( MUM / ( ( ( MUM + MUC ) + MUM ) / ( RCSe / MUR ) ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2667526965110046}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( ( Max( RRS,( FirstVNF_CPU + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,CRS ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( CS - RMSe ),RCSe ),Max( ( MUM / RRSe ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6189233327782987}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN + MDR ) + CRS ) ) - ( PN / MDR ) )", "choosing": "Max( ( MLU - ( Min( Max( ( Min( ( RCSe + RRSe ) ,RRSe ) - RCSe ),Min( Max( MUC,MLU ) ,CS ) ) ,CS ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MLU + MUC ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.033521263247452256}, {"determining": "( ( ( ( PN / Max( FirstVNF_Mem,Max( Const,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU / ( MUC / ( RRSe + Min( ( RCSe - DS ) ,MLU ) ) ) ) )", "obj1": 0.6920077972709552, "obj2": 0.2023679866058038}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( MLU / ( ( ( Max( Max( MLU,RCSe ),RCSe ) + ( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.5419103313840156, "obj2": 0.3541884770031469}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( CS * ( DS / Max( ( ( RCSe / MUM ) * ( CS / MUC ) ),( MUR - MUR ) ) ) ) ,( MUR * CS ) )", "obj1": 0.4775828460038986, "obj2": 0.43466636465632913}, {"determining": "( Max( Max( ( ( Max( CRS,( ( AMS / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + MDR ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC * MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,Min( ( ( RRSe - MUM ) + ( RCSe * MUR ) ) ,RCSe ) ) * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.40545808966861596, "obj2": 0.5450056433052904}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * ( MUC / Min( MUC ,CS ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.7797270955165692, "obj2": 0.11693800686036777}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( FirstVNF_CPU_Server,( RRS * FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,Min( ( MDR / FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + Max( RRSe,RRSe ) ) + ( Max( ( ( MUM - CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.30994152046783624, "obj2": 0.6932311077053183}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( ( ( ( PN * ( ( FirstVNF_CPU - MRS ) + ( ( ACS * FirstVNF_RAM ) / FirstVNF_CPU_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ARS / MDR ) + ( Max( CRS,( ( PN / ( ARS / FirstVNF_Mem ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUC ) ) ) ) ,( RMSe * RRSe ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5516569200779727, "obj2": 0.3375208423687124}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( Max( RMSe,MUC ),RRSe ) + ( Min( RMSe ,RRSe ) * RMSe ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.4346978557504873, "obj2": 0.5005496208104083}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( RMSe - CS ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.45614035087719296, "obj2": 0.47051870456383704}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5492043103105175}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3489278752436647, "obj2": 0.6279855848047239}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( RMSe + RMSe ) ) / ( Max( CS,MUM ) / ( DS - ( MUM + CS ) ) ) )", "obj1": 0.7719298245614035, "obj2": 0.12370493975825236}, {"determining": "( Max( ( ( Max( RRS,MDR ) * FirstVNF_CPU ) / FirstVNF_RAM ),( ( Min( Max( CRS,( FirstVNF_RAM_Server + ( BR / BR ) ) ) ,( MDR / PN ) ) / ( Const + Const ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + Max( RRSe,( Max( MUC,MLU ) / ( Max( ( CS / RCSe ),MUC ) + Min( MLU ,RCSe ) ) ) ) ) ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + MUC ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.442495126705653, "obj2": 0.48749704874241256}, {"determining": "( ( PN + ( ( ( FirstVNF_RAM - Max( ( MRS * FirstVNF_RAM ),PN ) ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) / ( ( ( MUC + ( Min( MUC ,RRSe ) * Max( MLU,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( ( MUR + MUR ),( MUM + MUM ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.7719298245614035, "obj2": 0.12370493975825236}, {"determining": "( ( Max( Max( CRS,( ( PN / ( MDR + ACS ) ) + ACS ) ),( ( ACS + PN ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) - Min( Min( MRS ,FirstVNF_Mem_Server ) ,( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU + RCSe ) ,( MUC - ( RMSe - DS ) ) )", "obj1": 0.8908382066276803, "obj2": 0.05499816822923517}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( RRS,PN ) / ( MRS - PN ) ) ) - Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( Min( Max( CS,MUM ) ,MUC ),( RMSe + ( Min( MLU ,Min( Max( MUC,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5175399155839608}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),CS ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.34502923976608185, "obj2": 0.6283303129264172}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6573194346149966}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( ( ( FirstVNF_CPU_Server * PN ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( ( DS * ( DS * CS ) ) + MUM ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUC - ( RRSe + ( RCSe * RCSe ) ) ) )", "obj1": 0.6276803118908382, "obj2": 0.2647650945171544}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / FirstVNF_RAM_Server ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24417321577309284}, {"determining": "( Max( ( ( ( BR * FirstVNF_RAM ) * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( FirstVNF_RAM,( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / DDR ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RRSe + ( RRSe / MUM ) ),( Max( MUR,MLU ) + ( RMSe * ( MUM / RRSe ) ) ) ) / ( Max( CS,MUM ) / ( DS - ( MUM + CS ) ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47824080331785124}, {"determining": "( ( MRS - MDR ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.5360623781676414, "obj2": 0.3602935892236567}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3645224171539961, "obj2": 0.6038216902762777}, {"determining": "( Min( ( ( Max( CRS,( ( MDR / ( PN / BR ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8752436647173489, "obj2": 0.059732866185839874}, {"determining": "( ( PN + ( ( ( ( ( FirstVNF_RAM * MRS ) / Max( BR,FirstVNF_Mem ) ) - MDR ) / MDR ) - Max( ( ( ( ( PN / MDR ) + ACS ) * Max( Const,FirstVNF_Mem ) ) * ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ),( FirstVNF_CPU + CRS ) ) ) ) - ( MDR * ACS ) )", "choosing": "( Min( DS ,Min( RRSe ,MLU ) ) / ( ( CS - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( Max( RRSe,( MUC + MUM ) ) - RRSe ) ,RMSe ) ) ) + RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( Min( ( PN / MDR ) ,Max( ( MRS * FirstVNF_RAM_Server ),( Max( CRS,( ( PN / MDR ) + ACS ) ) / AMS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( Min( MLU ,RRSe ) * DS ) ) + ( RCSe - ( ( ( CS + RRSe ) / MUC ) + RMSe ) ) ) ,Max( ( ( RRSe / CS ) * MLU ),MUC ) ) )", "obj1": 0.7270955165692008, "obj2": 0.17002990551846564}, {"determining": "( ( PN + ( ( ( ( AMS * BR ) - Max( ( MRS * FirstVNF_RAM ),PN ) ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( DDR + DDR ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) / ( ( ( MUC + ( Min( MUC ,RRSe ) * Max( MLU,RRSe ) ) ) - ( ( ( RRSe / CS ) - ( RRSe / Max( ( MUR + MUR ),( MUM + MUM ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9980506822612085, "obj2": 0.0009560103130291191}, {"determining": "( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) - ( MDR / PN ) )", "choosing": "( Max( DS,( ( MLU / MUC ) + RMSe ) ) / Max( ( MUR * MLU ),( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( CS - ( RMSe * CS ) ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( Min( ( ( Max( CRS,( ( ( FirstVNF_CPU / PN ) * ( PN / BR ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( CS - ( RMSe * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.5321637426900585, "obj2": 0.36219428326178427}, {"determining": "( ( ( FirstVNF_RAM * Const ) * RRS ) - Min( Max( ( PN * FirstVNF_RAM ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( RCSe ,MLU ) ,Max( ( MUC + ( ( DS * CS ) * DS ) ),CS ) ) ,Max( ( DS - MLU ),( Max( ( DS / ( RMSe * ( Min( DS ,MLU ) / DS ) ) ),MLU ) / MUC ) ) )", "obj1": 0.7992202729044834, "obj2": 0.0978731576364529}, {"determining": "( Max( ( ( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ACS ) ) / MDR ) + ( MDR - ( CRS * FirstVNF_CPU_Server ) ) ),PN ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( Max( MUM,( ( CS + MLU ) / ( RMSe / ( DS + Min( CS ,RCSe ) ) ) ) ) ,Min( MUM ,( MUM + MUR ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.3476765172659723}, {"determining": "( Max( Max( ( ( ( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MDR ) - ( PN - ( AMS / PN ) ) ) + ( MDR / PN ) ) / ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ),( ( ( RRS / MDR ) * FirstVNF_Mem_Server ) + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe * Max( DS,( MUM + CS ) ) ) ) / Min( MUR ,( RRSe / MUM ) ) )", "obj1": 0.4171539961013645, "obj2": 0.5236044322920957}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Min( ( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( ACS / AMS ) ) + PN ) ,( CRS + FirstVNF_Mem ) ) - Max( CRS,( ( PN / MDR ) + Min( RRS ,( ( AMS * ( MDR + FirstVNF_Mem ) ) * AMS ) ) ) ) )", "choosing": "Min( Max( ( RRSe / ( ( DS + MUM ) / ( Min( RMSe ,Min( MUM ,Min( MUC ,RCSe ) ) ) + MUR ) ) ),( MUC / RCSe ) ) ,Max( ( MLU / MLU ),( ( CS + MLU ) / Min( ( MUR + MUR ) ,RMSe ) ) ) )", "obj1": 0.5224171539961013, "obj2": 0.37597117173416417}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( ( PN + ( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_CPU ) * FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( BR * Const ) ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * ( CS - RMSe ) ) ) ) / Min( ( ( MUC + ( Max( ( RRSe - ( RRSe - RMSe ) ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) ,RMSe ) )", "obj1": 0.8206627680311891, "obj2": 0.08489913211675239}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( RRSe + MUR ) )", "obj1": 0.6842105263157895, "obj2": 0.21602391892664924}, {"determining": "( ( MDR / PN ) - Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * ( ( ( ARS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU - AMS ) ) * FirstVNF_Mem_Server ) ) ) + Max( MRS,ARS ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Min( ( ( DS * RCSe ) + MUC ) ,MUR ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,( ( ( DS * MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5818640494325745}, {"determining": "( ( Max( RRS,Const ) + ( ( MDR / MDR ) + ( Max( CRS,Max( ( BR + FirstVNF_CPU ),( ( FirstVNF_Mem_Server * BR ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( MUR ,Max( MUR,( CS + ( CS - CS ) ) ) ) )", "obj1": 0.571150097465887, "obj2": 0.3192929163671576}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( MRS * FirstVNF_RAM ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6335282651072125, "obj2": 0.25846338115195594}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN / ( ( PN / MDR ) + ACS ) ) + ( Max( CRS,( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,FirstVNF_CPU ) )", "choosing": "( MLU / ( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,Max( DS,( MUM + CS ) ) ) * Min( MLU ,RRSe ) ) ) / RRSe ) + ( RMSe / MUC ) ) )", "obj1": 0.3820662768031189, "obj2": 0.5792217996916106}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / ( ACS - MRS ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Min( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ) ,( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( ( ( CS * Min( MUR ,( MUM * MUR ) ) ) + MLU ) * RMSe ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + MUR ) ) + RMSe ) )", "obj1": 0.7212475633528265, "obj2": 0.17509233003518151}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + FirstVNF_CPU ) ) - ( MDR / PN ) ) ) ) - Min( MDR ,( MRS + Min( AMS ,CRS ) ) ) )", "choosing": "Max( MUR,Max( ( RMSe - ( ( Min( ( ( DS + MLU ) * RCSe ) ,( ( RCSe * MLU ) + MUR ) ) - CS ) + Max( ( RRSe + Max( MLU,MUR ) ),( Max( RMSe,DS ) + Max( RRSe,( RRSe * RMSe ) ) ) ) ) ),Max( MUM,( ( MLU + Min( RRSe ,( RRSe / MUM ) ) ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.5263157894736842, "obj2": 0.36749969178420655}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + ( ( ( MLU / MUR ) + RCSe ) / RRSe ) ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.30214424951267055, "obj2": 0.6942321256373685}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN - MDR ) + ( Max( ( Max( DDR,MRS ) - MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server / RRS ) + FirstVNF_RAM ) ) / MDR ) ) ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( Max( MLU,RRSe ) * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( MLU,RCSe ) )", "obj1": 0.5867446393762183, "obj2": 0.30365262556087813}, {"determining": "( Max( ( Min( Max( MDR,( ARS - FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( CRS,Min( MDR ,FirstVNF_Mem ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( Const + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe + MUM ),( RRSe - ( RRSe / MUM ) ) ) / ( Max( CS,MUM ) / ( ( MUR + MLU ) * MLU ) ) )", "obj1": 0.442495126705653, "obj2": 0.48749704874241256}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( MDR / BR ) ,( DDR + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) * ( FirstVNF_CPU * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( ARS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * ( Min( MUM ,Max( MLU,( Min( MUM ,MUM ) / Min( MLU ,RRSe ) ) ) ) - ( RMSe * CS ) ) ),( ( DS * ( DS / ( CS + RMSe ) ) ) + ( DS * DS ) ) ) / ( Min( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) ,( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8167641325536062, "obj2": 0.08784134092171397}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + RMSe ) ) )", "obj1": 0.4249512670565302, "obj2": 0.5126652544270991}, {"determining": "( ( ( FirstVNF_RAM_Server - PN ) + ( PN / ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( Max( CRS,MRS ) / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,MLU ) ) ) + ( MUC - ( ( ( ( MUC / CS ) * RCSe ) / RRSe ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.7037037037037037, "obj2": 0.1902387535667389}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / ( ACS - MRS ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Min( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ) ,( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( ( ( CS * Min( MUR ,( MUM * MUR ) ) ) + MLU ) * RMSe ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + MUR ) ) + RMSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24417321577309284}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS / FirstVNF_Mem ),ARS ) + ( ( Max( FirstVNF_Mem_Server,( CRS + DDR ) ) * AMS ) / CRS ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + ( MLU * DS ) ) ) )", "obj1": 0.4249512670565302, "obj2": 0.5126652544270991}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / ( ACS - MRS ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Min( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ) ,( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( ( ( CS * Min( MUR ,( MUM * MUR ) ) ) + MLU ) * RMSe ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + MUR ) ) + RMSe ) )", "obj1": 0.7212475633528265, "obj2": 0.17509233003518151}, {"determining": "( Max( ( Min( ( ( Max( ( CRS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) / PN ) ,MDR ) + ACS ),( Min( ( CRS / BR ) ,ACS ) - DDR ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( RRSe + RMSe ) ) ) + ( DS * DS ) ) ) / ( ( ( MUC + ( Min( MUC ,RRSe ) * Max( MLU,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( ( MUR + MUR ),( MUM + MUM ) ) ) ) + CS ) ) + ( MUM * RRSe ) ) )", "obj1": 0.5048732943469786, "obj2": 0.3972501515048726}], "39": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( CRS - Min( ARS ,FirstVNF_Mem ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * Min( ( RCSe * Min( MUC ,MUC ) ) ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - RMSe ) ) ) + MUR ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / MDR ) - ( ( Max( DDR,AMS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( FirstVNF_Mem ,MDR ) * ( Max( ( FirstVNF_Mem_Server + CRS ),( MRS + FirstVNF_Mem ) ) * RRS ) ) + Max( ARS,( CRS + FirstVNF_Mem ) ) ) ) )", "choosing": "Min( Max( ( RRSe * ( MUC / ( MLU * RCSe ) ) ),( MUC / RCSe ) ) ,( MUM * Max( MLU,( ( MUC - ( MUC / ( RCSe * RRSe ) ) ) + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3645224171539961, "obj2": 0.5989762333851951}, {"determining": "( ( Max( ( FirstVNF_RAM + BR ),( ( ( FirstVNF_Mem_Server * RRS ) - ( ARS + MRS ) ) + MRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( FirstVNF_RAM * BR ) / MDR ) + ( ( PN * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( Max( Max( AMS,BR ),Min( FirstVNF_CPU_Server ,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ) - Min( Const ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + MUC ) / ( MUC / ( Min( MLU ,( RCSe + RMSe ) ) / RRSe ) ) )", "obj1": 0.4678362573099415, "obj2": 0.45410302565886906}, {"determining": "( ( Max( RRS,( FirstVNF_CPU + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,CRS ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( CS - RMSe ),RCSe ),Max( ( MUM / RRSe ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6189233327782987}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( Max( RMSe,MUC ),RRSe ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5614035087719298, "obj2": 0.33077636790802944}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN - MDR ) + ( Max( ( Max( DDR,MRS ) - MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server / RRS ) + FirstVNF_RAM ) ) / MDR ) ) ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( Max( MLU,RRSe ) * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( MLU,RCSe ) )", "obj1": 0.5867446393762183, "obj2": 0.30365262556087813}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( CS * ( DS / Max( ( ( RCSe / MUM ) * ( CS / MUC ) ),( MUR - MUR ) ) ) ) ,( MUR * CS ) )", "obj1": 0.4775828460038986, "obj2": 0.43466636465632913}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( ( PN / Max( FirstVNF_Mem,Max( Const,( FirstVNF_Mem - FirstVNF_CPU ) ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU / ( MUC / ( RRSe + Min( ( RCSe - DS ) ,MLU ) ) ) ) )", "obj1": 0.6920077972709552, "obj2": 0.2023679866058038}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6764132553606238, "obj2": 0.2197931201276903}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ARS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * PN ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / Min( CRS ,ACS ) ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( MUC / RCSe ),( CS + ( CS - ( RCSe + RMSe ) ) ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.7641325536062378, "obj2": 0.13814369349414374}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.31968810916179335, "obj2": 0.6699501596680056}, {"determining": "( ( Max( Max( CRS,( ( PN / ( MDR * RRS ) ) + ACS ) ),( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) - ( MDR * PN ) ) - Min( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( Max( Min( RRSe ,RRSe ),MUM ) / MUC ),( ( MLU / ( MUM / Min( RCSe ,MUR ) ) ) + RMSe ) ) ,( MLU + RCSe ) )", "obj1": 0.9629629629629629, "obj2": 0.016734681655086302}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( MDR / BR ) ,( DDR + FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) * ( FirstVNF_CPU * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( ARS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * ( Min( MUM ,Max( MLU,( Min( MUM ,MUM ) / Min( MLU ,RRSe ) ) ) ) - ( RMSe * CS ) ) ),( ( DS * ( DS / ( CS + RMSe ) ) ) + ( DS * DS ) ) ) / ( Min( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) ,( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8167641325536062, "obj2": 0.08784134092171397}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( RMSe / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.31189083820662766, "obj2": 0.6817953280019056}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN * ( AMS * RRS ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) / ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.935672514619883, "obj2": 0.030967370656438595}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( ( ( AMS / ( ACS + ACS ) ) - ( MDR / PN ) ) / ( FirstVNF_RAM_Server - RRS ) ) + Max( MRS,BR ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,( Min( Min( MLU ,( DS + MUR ) ) ,DS ) * Min( MLU ,RRSe ) ) ) ,Max( ( MLU - Min( MUC ,RMSe ) ),( Max( CS,MUM ) / MUC ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.8869395711500975, "obj2": 0.054347874229615734}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / ( ACS - MRS ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Min( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ) ,( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( Min( ( FirstVNF_Mem_Server / Const ) ,FirstVNF_RAM_Server ),( ( AMS - FirstVNF_Mem ) * ( BR / PN ) ) ) ) ) + ACS ) ) - ARS )", "choosing": "( ( RMSe * MLU ) / ( ( ( ( ( CS * Min( MUR ,( MUC * MUR ) ) ) + MLU ) * RMSe ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + ( MLU - ( ( RCSe - ( CS - CS ) ) + ( CS * CS ) ) ) ) ) + RMSe ) )", "obj1": 0.7115009746588694, "obj2": 0.18528286366199975}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6237816764132553, "obj2": 0.2667517536916726}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / ( ACS - MRS ) ) ),( ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Min( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ) ,( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( ( ( CS * Min( MUR ,( MUM * MUR ) ) ) + MLU ) * RMSe ) - ( ( Min( MUR ,Max( MLU,RMSe ) ) - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + MUR ) ) + RMSe ) )", "obj1": 0.7212475633528265, "obj2": 0.1750923300351815}, {"determining": "( Max( ( ( ( PN / ( ( BR + FirstVNF_RAM ) + FirstVNF_CPU ) ) / AMS ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( ( RRSe / Min( MUM ,MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5107212475633528, "obj2": 0.3933632589748125}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Min( MDR ,PN ) - Max( ( Max( CRS,( ( BR / DDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( MRS / ( Min( FirstVNF_RAM ,( MDR / Const ) ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Min( MUR ,( ( CS / ( ( MLU + CS ) / MUR ) ) / DS ) ) / DS ) ) / ( Max( CS,MUM ) / Max( ( MLU / RCSe ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1973486604230722}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( BR + FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) )", "choosing": "Min( MLU ,Min( Max( MUC,DS ) ,Max( MUC,DS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.22920477426352212}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / FirstVNF_RAM_Server ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * FirstVNF_CPU ) ) * Max( ( ( PN * ACS ) / ( FirstVNF_Mem / ACS ) ),( AMS * ( AMS + RRS ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( Min( Max( CRS,( FirstVNF_RAM_Server + ( BR / BR ) ) ) ,( MDR / PN ) ) / ( Const + Const ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Min( MUC ,RRSe ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( Min( MUC ,RRSe ) - ( MUM + MUC ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8635477582846004, "obj2": 0.06481876596436713}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN / CRS ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ( Max( BR,( MDR + CRS ) ) + CRS ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.9454191033138402, "obj2": 0.02577378583248646}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + Max( PN,AMS ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( CS + ( CS - ( RMSe * CS ) ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.580896686159844, "obj2": 0.31089344630442645}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + ( ( ( MLU / MUR ) + RCSe ) / RRSe ) ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.30409356725146197, "obj2": 0.6926214733520868}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( CS * ( DS / Max( ( ( RCSe / MUM ) * ( CS / MUC ) ),( MUR - Max( ( CS / RCSe ),MUC ) ) ) ) ) ,( MUR * CS ) )", "obj1": 0.6510721247563352, "obj2": 0.24205169056269413}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / MUC ) )", "obj1": 0.5165692007797271, "obj2": 0.3776042095805491}, {"determining": "( Max( ( ( MDR / PN ) - Max( CRS,( ( BR / DDR ) + FirstVNF_RAM_Server ) ) ),( MRS / Min( Min( FirstVNF_RAM ,( FirstVNF_RAM - MDR ) ) ,( RRS - FirstVNF_CPU_Server ) ) ) ) - ( ( Max( Const,( FirstVNF_Mem_Server / PN ) ) - CRS ) * ( Max( CRS,( ( BR / ( ( PN + RRS ) - FirstVNF_RAM_Server ) ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( ( RRSe / ( Max( RRSe,( ( MUR + RRSe ) * MUR ) ) + RMSe ) ) ,RRSe ),( CS + RMSe ) ) / Min( CS ,RRSe ) )", "obj1": 0.7387914230019493, "obj2": 0.15570460698995722}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( RRSe + MUR ) )", "obj1": 0.6842105263157895, "obj2": 0.21602391892664924}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,( ( ( DS - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.341130604288499, "obj2": 0.6427887520415846}, {"determining": "( Min( ( ( Max( CRS,( ( FirstVNF_RAM_Server / ( PN / BR ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( MLU ,RRSe ) ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8245614035087719, "obj2": 0.08485367548875178}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5516569200779727, "obj2": 0.3375208423687124}, {"determining": "( Min( ( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( ACS / AMS ) ) + PN ) ,( CRS + FirstVNF_Mem ) ) - Max( CRS,( ( PN / MDR ) + Min( RRS ,( ( AMS * ( MDR + FirstVNF_Mem ) ) * AMS ) ) ) ) )", "choosing": "Min( Max( ( RRSe / ( ( DS + MUM ) / ( Min( RMSe ,Min( MUM ,Min( MUC ,RCSe ) ) ) + MUR ) ) ),( MUC / RCSe ) ) ,Max( ( MLU / MLU ),( ( CS + MLU ) / Min( ( MUR + MUR ) ,RMSe ) ) ) )", "obj1": 0.5224171539961013, "obj2": 0.37597117173416417}, {"determining": "( Min( ( PN / MDR ) ,Max( ( MRS * FirstVNF_RAM_Server ),( Max( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ),( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) / AMS ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( MLU / ( RRSe - ( MUC * RMSe ) ) ) ),( ( ( RCSe + DS ) + MLU ) / Max( ( RMSe + CS ),DS ) ) ) / Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + RMSe ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16907389520543653}, {"determining": "( Max( ACS,RRS ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442252}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( ( ( PN / ( ( ( FirstVNF_Mem_Server * CRS ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( FirstVNF_RAM_Server - PN ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.48625961108703164}, {"determining": "( Max( ( ( MRS * FirstVNF_RAM ) * PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( ( PN * FirstVNF_Mem_Server ) / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( Max( ( ( MUC / ( DS - RRSe ) ) - DS ),( MLU - MUM ) ) + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.37037037037037035, "obj2": 0.5946220833237608}, {"determining": "( ( MRS + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( MDR / FirstVNF_CPU ) * ( ( PN + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ( Max( BR,( MDR + CRS ) ) + CRS ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe / ( MLU / MUC ) ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * ( MUR - MUR ) ) ) ) ),MUM ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11420512805479935}, {"determining": "( ( Max( RRS,Const ) + ( ( Max( CRS,Max( ( BR + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,ACS ) ) ) - ( MDR / PN ) ) + Max( PN,MDR ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.04354147200711924}, {"determining": "( ( MRS + ( Max( FirstVNF_RAM_Server,ARS ) - Max( ( ( MDR / FirstVNF_CPU ) + ( ( ( PN / CRS ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ( Max( BR,( MDR + CRS ) ) + CRS ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( MUM,Min( ( RMSe / ( RCSe / RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( MUM ,MUC ) ) ,( CS * ( DS - MUR ) ) ) ) ) ) ) )", "obj1": 0.9454191033138402, "obj2": 0.02577378583248646}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( RRS,PN ) / ( MRS - PN ) ) ) - Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( Min( Max( CS,MUM ) ,MUC ),( RMSe + ( Min( MLU ,Min( Max( MUC,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5175399155839608}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6573194346149966}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5377139041594976}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( MDR / PN ) - Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * ( ( ( ARS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU - AMS ) ) * FirstVNF_Mem_Server ) ) ) + Max( MRS,ARS ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Min( ( ( DS * RCSe ) + MUC ) ,MUR ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,( ( ( DS * MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5818640494325745}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * MUR ),Min( ( Max( RCSe,MUM ) / RCSe ) ,( RCSe / MUR ) ) ) / ( ( ( MUC + RRSe ) - ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.847953216374269, "obj2": 0.07155720025163814}, {"determining": "( Max( ( ( ( PN / ( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + Min( RMSe ,( MUR + MUR ) ) ) ) / ( ( ( MUC + ( Min( MUC ,RRSe ) * Max( MLU,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( ( MUR + MUR ),( MUM + MUM ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5419103313840156, "obj2": 0.35332329864669415}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ( BR * BR ) - Const ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( MRS * MRS ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( Min( ( MUR - CS ) ,MUM ) + ( DS * ( RMSe * CS ) ) ),( DS - Min( Max( MUM,( MUR - ( MUC + MLU ) ) ) ,Min( RCSe ,( DS - RRSe ) ) ) ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.49902534113060426, "obj2": 0.4072477912079006}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.29434697855750486, "obj2": 0.7136582572934276}, {"determining": "( ( ( ( ( PN / ( ( MDR / PN ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * ( MUC / Max( MUC,DS ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.7953216374269005, "obj2": 0.10184601530290353}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.34502923976608185, "obj2": 0.6283303129264172}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( Min( MLU ,RRSe ) * DS ) ) + ( RCSe - ( ( ( CS + RRSe ) / MUC ) + RMSe ) ) ) ,Max( ( ( RRSe / CS ) * MLU ),MUC ) ) )", "obj1": 0.7719298245614035, "obj2": 0.12370493975825236}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN / PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Min( Const ,Const ),CRS ) ) ) - Max( MDR,Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( ( ( ( DS / MUR ) + Min( DS ,RMSe ) ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) - MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7039799856886094}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( BR * ( Max( ( PN + FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) - RRS ) ) + ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / DDR ) ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),ARS ) + ( CRS / FirstVNF_CPU_Server ) ) + PN ) ) )", "choosing": "Min( ( ( ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) + MUC ) - ( ( MLU - ( RRSe / ( MUR - RCSe ) ) ) + MUC ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.39571150097465885, "obj2": 0.555873165130127}, {"determining": "( Max( ( ( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ACS ) ) / MDR ) + ( MDR - ( CRS * FirstVNF_CPU_Server ) ) ),PN ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( Max( MUM,( ( CS + MLU ) / ( RMSe / ( DS + Min( CS ,RCSe ) ) ) ) ) ,Min( MUM ,( MUM + MUR ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.3476765172659723}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / FirstVNF_RAM_Server ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6491228070175439, "obj2": 0.24417321577309284}, {"determining": "( Max( Max( CRS,( ( Max( ACS,Min( ( ARS * CRS ) ,ARS ) ) / ( ARS * AMS ) ) / ( ACS - MRS ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Min( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ) ,( AMS * ( MRS - Const ) ) ) ) / ( FirstVNF_Mem_Server * ( ( MDR * FirstVNF_RAM_Server ) * ( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) - ACS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( MUC + ( ( ( ( CS * ( ( CS + MUR ) - MUM ) ) + Max( MUR,RCSe ) ) * MUC ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) ) )", "obj1": 0.9746588693957114, "obj2": 0.012000676235833695}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( DDR / FirstVNF_CPU_Server ) / ( FirstVNF_RAM_Server + PN ) ) ) - ( CRS - ( MRS - FirstVNF_RAM_Server ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( Min( RCSe ,RRSe ),RRSe ),Max( ( CS - RMSe ),Max( MUM,( ( CS + MLU ) / Min( RMSe ,( RMSe + MUR ) ) ) ) ) )", "obj1": 0.45419103313840153, "obj2": 0.470862780822845}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * ( AMS / PN ) ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( PN / MRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( MUC,Min( RMSe ,Max( ( RCSe * RMSe ),MUR ) ) ) - MUR ) )", "obj1": 0.6491228070175439, "obj2": 0.24417321577309284}, {"determining": "( Max( ( ( ( BR * FirstVNF_RAM ) * FirstVNF_CPU ) / FirstVNF_RAM ),( ( ( Max( FirstVNF_RAM,( ( FirstVNF_CPU_Server / FirstVNF_Mem ) / DDR ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( FirstVNF_CPU_Server + Const ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RRSe + ( RRSe / MUM ) ),( Max( MUR,MLU ) + ( RMSe * ( MUM / RRSe ) ) ) ) / ( Max( CS,MUM ) / ( DS - ( MUM + CS ) ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47824080331785124}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + Max( RRSe,( Max( MUC,MLU ) / ( Max( ( CS / RCSe ),MUC ) + Min( MLU ,RCSe ) ) ) ) ) ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + MUC ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4291934645823146}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.033521263247452256}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( RRSe + RMSe ) ) ) + ( DS * DS ) ) ) / ( ( ( MUC + ( Min( MUC ,RRSe ) * Max( MLU,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( ( MUR + MUR ),( MUM + MUM ) ) ) ) + CS ) ) + ( MUM * RRSe ) ) )", "obj1": 0.3508771929824561, "obj2": 0.6234145201128489}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( Max( CS,MUM ) / MUC ),( ( MLU / MUC ) + Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ) ) ) )", "obj1": 0.8031189083820662, "obj2": 0.09596205837556604}, {"determining": "( Max( CRS,( ( PN / ( ( ( ( FirstVNF_RAM + BR ) * ( AMS / FirstVNF_RAM_Server ) ) * ( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) / PN ) ) + CRS ) ) - ( ARS / Min( ( CRS * ( FirstVNF_RAM * MRS ) ) ,AMS ) ) )", "choosing": "Max( ( ( ( ( CS * Min( MUR ,( MUM * MUR ) ) ) + MLU ) * RMSe ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + MUR ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( RMSe / ( RCSe / MUR ) ) ) ) )", "obj1": 0.9941520467836257, "obj2": 0.004498711495615151}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe / RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * ( MUR - MUR ) ) ) ) ),MUM ) ) )", "obj1": 0.43859649122807015, "obj2": 0.49286909840929444}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.34307992202729043, "obj2": 0.6408724100136028}, {"determining": "( ( PN / FirstVNF_CPU ) - ( MDR / PN ) )", "choosing": "( Max( DS,( ( MLU / MUC ) + RMSe ) ) / Max( ( MUR * MLU ),( Max( MUC,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( Max( ( ( MUM - MUR ) - MUM ),MUR ) * ( MLU * ( RRSe + MUR ) ) ) ) ) ) )", "obj1": 0.9805068226120858, "obj2": 0.008992334649215136}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( BR + FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.5769980506822612, "obj2": 0.31643621201600075}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * MUR ),Min( ( Max( RCSe,MUM ) / RCSe ) ,( RCSe / MUR ) ) ) / ( ( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.834307992202729, "obj2": 0.07821823202833587}, {"determining": "( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Max( Max( RMSe,MUC ),RRSe ),DS ) ,MUR ) )", "obj1": 0.6608187134502924, "obj2": 0.23396107865482135}, {"determining": "( ( ( FirstVNF_RAM_Server - PN ) + ( PN / ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( Max( CRS,MRS ) / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,MLU ) ) ) + ( MUC - ( ( ( ( MUC / CS ) * RCSe ) / RRSe ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.7037037037037037, "obj2": 0.1902387535667389}, {"determining": "( Min( ( ( Max( CRS,( ( MDR / ( PN / BR ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),CS ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.8752436647173489, "obj2": 0.059732866185839874}, {"determining": "( ( ( FirstVNF_CPU_Server * PN ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( ( DS * ( DS * CS ) ) + MUM ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUC - ( RRSe + ( RCSe * RCSe ) ) ) )", "obj1": 0.7894736842105263, "obj2": 0.10776354115321221}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.7504873294346979, "obj2": 0.1448219282547246}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / BR ) + FirstVNF_RAM_Server ) ) - ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( ( RMSe * MLU ),( MUM + ( ( ( MLU / MUR ) + RCSe ) / RRSe ) ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.2962962962962963, "obj2": 0.7046175194235726}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( BR + FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( CS - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( RMSe / ( RCSe / MUR ) ) ) ) )", "obj1": 0.571150097465887, "obj2": 0.3192929163671576}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6573194346149966}, {"determining": "( ( MRS - MDR ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.5360623781676414, "obj2": 0.3602935892236567}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.38791423001949316, "obj2": 0.5647072528846672}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6745627220956089}], "40": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( FirstVNF_Mem_Server - Min( FirstVNF_Mem_Server ,DDR ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RCSe - MUR ) + Max( MLU,CS ) ),Max( CS,( ( ( RCSe + CS ) / MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Min( ARS ,FirstVNF_Mem ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( CS - DS ),( RCSe / ( MUC + DS ) ) ) * Min( ( RCSe * Min( MUC ,MUC ) ) ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - RMSe ) ) ) + MUR ) ) + RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( PN + RRS ) ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Max( ( FirstVNF_RAM + BR ),( ( ( FirstVNF_Mem_Server * RRS ) - ( ARS + MRS ) ) + MRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( FirstVNF_RAM * BR ) / MDR ) + ( ( PN * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( Max( Max( AMS,BR ),Min( FirstVNF_CPU_Server ,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ) - Min( Const ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + MUC ) / ( MUC / ( Min( MLU ,( RCSe + RMSe ) ) / RRSe ) ) )", "obj1": 0.4678362573099415, "obj2": 0.45410302565886906}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ) + PN ) ) )", "choosing": "Min( ( CS * ( Max( ( ( ( DS / MUR ) + Min( DS ,RMSe ) ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ) / Max( ( ( RCSe / MUM ) * ( CS / MUC ) ),( MUR - MUR ) ) ) ) ,( MUR * CS ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( RRS,PN ) / ( MRS - PN ) ) ) - Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( Min( Max( CS,MUM ) ,MUC ),( RMSe + ( Min( MLU ,Min( Max( MUC,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5175399155839608}, {"determining": "( ( ( ( ( CRS / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Max( Const,Const ) ) ) / MDR ) + FirstVNF_RAM ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + MUR ) ) ) + RMSe ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5096231509901269}, {"determining": "( ( Max( RRS,( FirstVNF_CPU + FirstVNF_RAM ) ) + ( ( PN / MDR ) + ( Max( CRS,CRS ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( CS - RMSe ),RCSe ),Max( ( MUM / RRSe ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6189233327782987}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( AMS + Min( MRS ,( ARS + FirstVNF_RAM ) ) ) - Min( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RRSe / ( CS + ( MUC + MUC ) ) ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * ( MUR - MUR ) ) ) ) ),MUM ) ) )", "obj1": 0.9629629629629629, "obj2": 0.0167346816550863}, {"determining": "( ( Max( RRS,Const ) + ( AMS + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + MUR ) ,( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / MUC ) )", "obj1": 0.530214424951267, "obj2": 0.3683136172846041}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MUR - CS ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6571008052190886}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ( BR * BR ) - Const ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( MRS * MRS ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( Min( ( MUR - CS ) ,MUM ) + ( DS * ( RMSe * CS ) ) ),( DS - Min( Max( MUM,( MUR - ( MUC + MLU ) ) ) ,Min( RCSe ,( DS - RRSe ) ) ) ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.49902534113060426, "obj2": 0.4072477912079006}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ARS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * PN ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / Min( CRS ,ACS ) ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( MUC / RCSe ),( CS + ( CS - ( RCSe + RMSe ) ) ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.7641325536062378, "obj2": 0.13814369349414374}, {"determining": "( ( Max( RRS,Const ) + ( ( Max( CRS,Max( ( BR + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,ACS ) ) ) - ( MDR / PN ) ) + Max( PN,MDR ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.04354147200711924}, {"determining": "( ( MRS + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( MDR / FirstVNF_CPU ) * ( ( PN + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ( Max( BR,( MDR + CRS ) ) + CRS ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe / ( MLU / MUC ) ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * ( MUR - MUR ) ) ) ) ),MUM ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11420512805479935}, {"determining": "( Max( ( ( ( PN / ( ( BR + FirstVNF_RAM ) + FirstVNF_CPU ) ) / AMS ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( ( RRSe / Min( MUM ,MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.5107212475633528, "obj2": 0.3933632589748125}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN * ( AMS * RRS ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) / ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.935672514619883, "obj2": 0.030967370656438595}, {"determining": "( ( BR - FirstVNF_RAM_Server ) - ( ACS / MDR ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( Min( ( MUR - CS ) ,MUM ) * MLU ) / CS ) ),Max( MUM,( ( RMSe * ( RCSe / RRSe ) ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.6432748538011696, "obj2": 0.24677990984343778}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( ( ( RCSe - ( DS / CS ) ) + MUC ) * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( MLU,MUM ) )", "obj1": 0.7504873294346979, "obj2": 0.14388905125696827}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3645224171539961, "obj2": 0.5989762333851951}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47446831618145985}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( Max( RMSe,MUC ),RRSe ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.5614035087719298, "obj2": 0.33077636790802944}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Min( MLU ,RRSe ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( Min( MLU ,RRSe ) - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.43664717348927873, "obj2": 0.496362884148261}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5516569200779727, "obj2": 0.3375208423687124}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.5185185185185185, "obj2": 0.37475972106135025}, {"determining": "( ( MRS - MDR ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.5360623781676414, "obj2": 0.3602935892236567}, {"determining": "( ( MRS + ( Max( FirstVNF_RAM_Server,ARS ) - Max( ( ( MDR / FirstVNF_CPU ) + ( ( ( PN / CRS ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ( Max( BR,( MDR + CRS ) ) + CRS ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( MUM,Min( ( RMSe / ( RCSe / RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( MUM ,MUC ) ) ,( CS * ( DS - MUR ) ) ) ) ) ) ) )", "obj1": 0.9454191033138402, "obj2": 0.02577378583248646}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.6179337231968811, "obj2": 0.27430732563893917}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( ARS * FirstVNF_Mem ) ,( MDR / BR ) ) * FirstVNF_CPU ) * ( FirstVNF_CPU * ( ( BR + AMS ) / FirstVNF_RAM_Server ) ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( RRS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) * FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( MUR * ( RRSe * MUM ) ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) ) ) ) / ( Min( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) ,( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8226120857699805, "obj2": 0.08394312180372325}, {"determining": "( ( ( Max( DDR,AMS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( FirstVNF_Mem ,MDR ) * ( Max( ( FirstVNF_Mem_Server + CRS ),( MRS + FirstVNF_Mem ) ) * RRS ) ) + Max( ARS,( CRS + FirstVNF_Mem ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),( RCSe * RRSe ) ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.5126705653021443, "obj2": 0.3932355260230574}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( ( ( PN / ( ( ( MDR / PN ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( FirstVNF_RAM_Server - PN ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + ( DS - MUR ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.746588693957115, "obj2": 0.14747174621472836}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( Min( MDR ,PN ) - Max( ( Max( CRS,( ( BR / DDR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ),( MRS / ( Min( FirstVNF_RAM ,( MDR / Const ) ) - ( FirstVNF_CPU_Server - RRS ) ) ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Min( MUR ,( ( CS / ( ( MLU + CS ) / MUR ) ) / DS ) ) / DS ) ) / ( Max( CS,MUM ) / Max( ( MLU / RCSe ),( ( MUC + CS ) + RMSe ) ) ) )", "obj1": 0.6998050682261209, "obj2": 0.1973486604230722}, {"determining": "( ( ( FirstVNF_RAM_Server - PN ) + ( PN / ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( Max( CRS,MRS ) / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,MLU ) ) ) + ( MUC - ( ( ( ( MUC / CS ) * RCSe ) / RRSe ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.7037037037037037, "obj2": 0.1902387535667389}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( Const,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( CS - ( RMSe * CS ) ) ),( ( MLU - ( RRSe / ( Min( MLU ,RRSe ) - ( MUM + CS ) ) ) ) + CS ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.8401559454191033, "obj2": 0.07382033575612416}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_Mem ) - ( DDR / PN ) )", "choosing": "Min( ( ( RRSe + ( MUC / MLU ) ) - ( MUC / RCSe ) ) ,Max( Min( ( MLU * ( MUC / Min( ( RRSe / ( MLU / MUC ) ) ,MUR ) ) ) ,MUR ),RCSe ) )", "obj1": 0.3723196881091618, "obj2": 0.5936660730107317}, {"determining": "( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Max( Max( RMSe,MUC ),RRSe ),DS ) ,MUR ) )", "obj1": 0.6608187134502924, "obj2": 0.23396107865482135}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.4015594541910331, "obj2": 0.5495225330662756}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / MDR ) + ( ( AMS * BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( ( FirstVNF_RAM_Server + Const ) / PN ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( Max( RMSe,MUC ),RRSe ) + ( Min( RMSe ,RRSe ) * Min( MUM ,RRSe ) ) ) + RMSe ) ) / ( MUC * CS ) )", "obj1": 0.4074074074074074, "obj2": 0.5385391375243485}, {"determining": "( ( Max( ( FirstVNF_RAM * MRS ),PN ) - ( ( PN / ( Max( ( FirstVNF_RAM - MDR ),MDR ) - FirstVNF_CPU ) ) + ( ( ARS + BR ) * ( ACS + FirstVNF_Mem ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( Max( MLU,( RRSe / ( MUM * RCSe ) ) ) + CS ) - ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,( CS * DS ) ) ) ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.37816764132553604, "obj2": 0.5818640494325745}, {"determining": "( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.16503740870839786}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - FirstVNF_CPU_Server ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( ( MDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( ( MUR - RRSe ) + MLU ) ) ) ),( RCSe / MUC ) ) ,RRSe ) ,Min( Max( MUC,RCSe ) ,MUR ) )", "obj1": 0.7738791423001949, "obj2": 0.12280376949629866}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6744639376218323, "obj2": 0.22069429038964405}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_Mem ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + Min( MLU ,RRSe ) ),Max( Min( ( RMSe / ( RCSe / RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * ( MUR - MUR ) ) ) ) ),MUM ) ) )", "obj1": 0.5477582846003899, "obj2": 0.3452933315933878}, {"determining": "( ( PN + ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ( PN * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) * ( ( ( PN / CRS ) + ACS ) * Max( Const,FirstVNF_Mem ) ) ),MDR ) ) ) - ( MDR * ( Max( BR,( MDR + CRS ) ) + CRS ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.9454191033138402, "obj2": 0.02577378583248646}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / BR ) + FirstVNF_RAM_Server ) ) - ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( ( RMSe * MLU ),( MUM + ( ( ( MLU / MUR ) + RCSe ) / RRSe ) ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.30994152046783624, "obj2": 0.6908744476222561}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.34307992202729043, "obj2": 0.6408724100136028}, {"determining": "( Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) - ( ( ( PN * ( ( ( ACS * Const ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + ( FirstVNF_RAM / ARS ) ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MLU ) - MUC ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.6276803118908382, "obj2": 0.26471025446607904}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / Max( ( ( BR + FirstVNF_RAM ) * MDR ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC + ( Max( ( RCSe / RRSe ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.594541910331384, "obj2": 0.2954947792170792}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.5165692007797271, "obj2": 0.3776042095805491}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( ( MRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8323586744639376, "obj2": 0.07894192709910791}, {"determining": "( ( ( MDR / PN ) - Max( ( Max( DDR,MRS ) - MDR ),( Max( ( Max( Const,BR ) - ( FirstVNF_Mem - BR ) ),MDR ) + CRS ) ) ) - FirstVNF_CPU )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( MUM * MUM ) ,( MUM - ( Min( RRSe ,Min( DS ,RMSe ) ) / ( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423575}, {"determining": "( ( ( ( ( ( ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) / PN ) + ( FirstVNF_CPU - MRS ) ) * RRS ) - Min( MRS ,CRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( MRS * FirstVNF_RAM ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( ( RMSe + DS ) * ( RMSe + MUR ) ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6081871345029239, "obj2": 0.2845536639135064}, {"determining": "( Min( ( ( Max( CRS,( ( MDR / ( PN / BR ) ) + PN ) ) - ( MDR / ( MDR / PN ) ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( Max( RCSe,RMSe ),CS ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.7153996101364523, "obj2": 0.180579931259764}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( Max( CRS,Max( CRS,Max( ( BR + FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Max( Max( RMSe,Min( MLU ,Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ) ),RRSe ),DS ) ,MUR ) )", "obj1": 0.7212475633528265, "obj2": 0.17358774933167756}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( MDR / PN ) - Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) * ( ( ( ARS + FirstVNF_Mem_Server ) - ( FirstVNF_CPU - AMS ) ) * FirstVNF_Mem_Server ) ) ) + Max( MRS,ARS ) ) ) )", "choosing": "Min( ( Max( RMSe,MUC ) / Max( ( RRSe / ( Min( ( ( DS * RCSe ) + MUC ) ,MUR ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( RRSe * Min( Min( MLU ,( ( ( DS * MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5818640494325745}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( ( DS * ( DS * CS ) ),MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.29434697855750486, "obj2": 0.7092646022889866}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.38791423001949316, "obj2": 0.5647072528846672}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.391812865497076, "obj2": 0.5600099693518428}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / Min( MDR ,PN ) ) + PN ) ) - ( MDR / PN ) ) ) ) - ( PN * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( ( MUM + MLU ),DS ) ) ) / ( MUC / Min( MUC ,Max( MLU,( ( MUC / MUC ) + MUC ) ) ) ) )", "obj1": 0.5594541910331384, "obj2": 0.3326766012635713}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6283303129264172}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( Min( MLU ,RRSe ) * DS ) ) + ( RCSe - ( ( ( CS + RRSe ) / MUC ) + RMSe ) ) ) ,Max( ( ( RRSe / CS ) * MLU ),MUC ) ) )", "obj1": 0.7719298245614035, "obj2": 0.12370493975825236}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),PN ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( DS * ( MUC / Max( MUC,DS ) ) ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15542938048641064}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server / RRS ) + FirstVNF_RAM ) ) / MDR ) ) ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) + RMSe ) ) / ( Max( CS,MUM ) / ( DS - ( MUM + CS ) ) ) )", "obj1": 0.5906432748538012, "obj2": 0.30174190328346284}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ARS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * PN ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / Min( CRS ,ACS ) ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( MUC / RCSe ),( CS + ( CS - ( RCSe + RMSe ) ) ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( MLU / ( RRSe + MUR ) )", "obj1": 0.6842105263157895, "obj2": 0.21602391892664924}, {"determining": "( ( ( ( PN / Max( FirstVNF_Mem,Max( Const,Const ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.6920077972709552, "obj2": 0.2023679866058038}, {"determining": "( ( ( FirstVNF_CPU_Server * PN ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( MUC,Min( RMSe ,Max( ( RCSe * RMSe ),MUR ) ) ) - MUR ) )", "obj1": 0.7875243664717348, "obj2": 0.10866471141516597}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + ( ( ( MLU / MUR ) + RCSe ) / RRSe ) ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.30409356725146197, "obj2": 0.6926214733520868}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.033521263247452256}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ( ( Min( Const ,FirstVNF_CPU_Server ) / MDR ) + CRS ),CRS ) - ( MDR / PN ) ) ) ) - Min( Max( ( MRS * FirstVNF_RAM ),PN ) ,( ( MDR / PN ) + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR + MLU ) ,Max( MLU,Min( ( MUR - MUR ) ,MUM ) ) )", "obj1": 0.6335282651072125, "obj2": 0.25846338115195594}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5374782417751416}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) / ( ACS - MRS ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Min( ( ( PN * ACS ) / ( FirstVNF_Mem / PN ) ) ,( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( FirstVNF_Mem_Server * Max( ( MDR * FirstVNF_RAM_Server ),( ( BR / PN ) * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ARS )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU / ( ( RRSe + RMSe ) / MUC ) ) )", "obj1": 0.7095516569200779, "obj2": 0.1861840339239535}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( BR + FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) )", "choosing": "Min( MLU ,Min( Max( MUC,DS ) ,Max( MUC,DS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.22920477426352212}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.6549707602339181, "obj2": 0.2378821846053363}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3645224171539961, "obj2": 0.5989762333851951}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6233386723725569}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.06176357154385659}, {"determining": "( Max( ( ( ( PN / ( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) / MDR ) + ACS ),CRS ) - ( MDR / PN ) )", "choosing": "( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + Min( RMSe ,( MUR + MUR ) ) ) ) / ( ( ( MUC + ( Min( MUC ,RRSe ) * Max( MLU,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( ( MUR + MUR ),( MUM + MUM ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.5458089668615984, "obj2": 0.3505218950291985}, {"determining": "( ( ( ( PN / Max( ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Const ) ) ),Max( Const,Const ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,Min( MUR ,( MUM - MUR ) ) ) ,( MLU / ( ( RRSe + ( DS - MUR ) ) / MUC ) ) )", "obj1": 0.2787524366471735, "obj2": 0.730861804803562}, {"determining": "( ( ( PN / ( ( ( FirstVNF_Mem_Server * CRS ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( FirstVNF_RAM_Server - PN ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.48625961108703164}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * PN ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.7641325536062378, "obj2": 0.13814369349414374}, {"determining": "( ( Max( RRS,CRS ) + ( ( PN / MDR ) + ( Max( Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ),Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + FirstVNF_CPU ),( ( CRS * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MLU - ( ( ( RMSe + MUM ) - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - CS ),Max( MUM,( RMSe / ( RCSe / MUR ) ) ) ) )", "obj1": 0.571150097465887, "obj2": 0.3192929163671576}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Min( RRSe ,RCSe ) / RRSe ) + Max( ( MUM - RCSe ),MUC ) ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( Max( ( ( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ACS ) ) / MDR ) + ( MDR - ( CRS * FirstVNF_CPU_Server ) ) ),PN ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( ( RMSe * MLU ),( MUM + ( ( ( MLU / MUR ) + RCSe ) / RRSe ) ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.8148148148148148, "obj2": 0.09024862890462423}], "41": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Min( FirstVNF_Mem ,MRS ) / MRS ) - ( ( ( PN / MDR ) + Max( FirstVNF_CPU_Server,RRS ) ) - ( ( CRS * PN ) - ( ACS * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MLU + RCSe ) ,( ( Max( CS,MUM ) / MUC ) + ( ( MLU / MUC ) + Min( MUR ,( ( MUM / ( DS * RRSe ) ) * ( MUC / Min( RMSe ,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server - Min( FirstVNF_Mem_Server ,DDR ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) )", "choosing": "Max( ( ( RCSe - MUR ) + Max( MLU,CS ) ),Max( CS,( ( ( RCSe + CS ) / MUR ) / RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ACS / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( PN + RRS ) ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,MUC ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6166394266205423}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.6432748538011696, "obj2": 0.24583568680092502}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( MUR + Max( ( MUM - RCSe ),MUC ) ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.5867446393762183, "obj2": 0.3033849460527817}, {"determining": "( ( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.5263157894736842, "obj2": 0.3681767903178313}, {"determining": "( Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) - ( ( ( PN * ( ( ( ACS * Const ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( FirstVNF_RAM + ( FirstVNF_RAM / ARS ) ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MLU ) - MUC ) + RMSe ) ) / ( MUC + DS ) )", "obj1": 0.6276803118908382, "obj2": 0.26471025446607904}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.06176357154385659}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MUR - CS ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6571008052190886}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( CS - ( RMSe * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ),RCSe ) )", "obj1": 0.6842105263157895, "obj2": 0.20940786901597427}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( DS + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.47173489278752434, "obj2": 0.44728604831535074}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( Max( ( Min( AMS ,BR ) / Max( ARS,( ( Min( ( MDR / FirstVNF_Mem_Server ) ,MRS ) / MDR ) - ( AMS * FirstVNF_RAM ) ) ) ),Min( Max( BR,FirstVNF_Mem_Server ) ,Min( MRS ,Const ) ) ) - ( Max( BR,PN ) - MDR ) )", "choosing": "( ( DS + ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ) - CS )", "obj1": 0.9220272904483431, "obj2": 0.03879783178809885}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * Max( CRS,( ( RRS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.4522417153996101, "obj2": 0.47212871043983645}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - PN ) ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),MUC ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.9532163742690059, "obj2": 0.022028278566650017}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( RMSe + ( ( RCSe * MLU ) - MUM ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( ( AMS + Min( MRS ,( ARS + FirstVNF_RAM ) ) ) - Min( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RRSe / ( CS + ( MUC + MUC ) ) ) ) ,( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * ( MUR - MUR ) ) ) ) ),MUM ) ) )", "obj1": 0.9629629629629629, "obj2": 0.0167346816550863}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.06176357154385659}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.6179337231968811, "obj2": 0.27430732563893917}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( ( Max( MDR,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Max( CRS,( ( MRS * PN ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( ( DS * CS ) * DS ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Min( Max( ( ( Max( ( ( MUC / RCSe ) + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MUM ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.5029239766081871, "obj2": 0.40160701270818644}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6752058890960095}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6283303129264172}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( BR + FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) )", "choosing": "Min( MLU ,Min( Max( MUC,DS ) ,Max( MUC,DS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.22920477426352212}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Min( MLU ,RRSe ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( Min( MLU ,RRSe ) - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.43664717348927873, "obj2": 0.496362884148261}, {"determining": "( ( Max( RRS,CRS ) + ( ( PN / MDR ) + ( Max( Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ),Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + FirstVNF_CPU ),( ( CRS * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MLU - ( ( ( RMSe + MUM ) - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - CS ),Max( MUM,( RMSe / ( RCSe / MUR ) ) ) ) )", "obj1": 0.571150097465887, "obj2": 0.3192929163671576}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Max( Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ),Max( ( FirstVNF_RAM_Server - MRS ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( ( CS + ( DS * MUM ) ) + RRSe ),Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( MLU,MLU ) )", "obj1": 0.571150097465887, "obj2": 0.3192929163671576}, {"determining": "( ( MRS - MDR ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.5360623781676414, "obj2": 0.3602935892236567}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ARS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * PN ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / Min( CRS ,ACS ) ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( MUC / RCSe ),( CS + ( CS - ( RCSe + RMSe ) ) ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ) + PN ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Max( MLU,Min( Min( RCSe ,CS ) ,Max( DS,MLU ) ) ) / MLU ),MLU ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.5087719298245614, "obj2": 0.3932155055832021}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( Max( RRS,CRS ) + ( ( PN / MDR ) + ( Max( Min( Max( MRS,MDR ) ,FirstVNF_Mem_Server ),Max( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + FirstVNF_CPU ),( ( CRS * FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Min( MLU ,RRSe ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( Min( MLU ,RRSe ) - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.4191033138401559, "obj2": 0.5254988773736036}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.033521263247452256}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3645224171539961, "obj2": 0.5989762333851951}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( MRS * FirstVNF_RAM ),PN ) ,Min( ( ( PN + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6849387068548303}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6229373234118494}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( AMS * ( MRS - FirstVNF_Mem ) ) ) ) - ( MDR / PN ) ) ) ) - Min( ( MDR * ( ( MDR / FirstVNF_CPU ) + ( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server / RRS ) + FirstVNF_RAM ) ) / MDR ) ) ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( MUR / ( Max( CS,MUM ) / ( DS - ( MUM + CS ) ) ) )", "obj1": 0.7660818713450293, "obj2": 0.13112057840464522}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( PN / MDR ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5633528265107213, "obj2": 0.3265733335368113}, {"determining": "( ( ( ( CRS * ( ( ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) * FirstVNF_RAM ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * ( MUR + MUR ) ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),RMSe ) )", "obj1": 0.6998050682261209, "obj2": 0.1920382916913312}, {"determining": "( Min( ( ( Max( CRS,( ( MDR / ( FirstVNF_Mem_Server / ACS ) ) + PN ) ) - ( MDR / ( MDR / PN ) ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( Max( RCSe,RMSe ),CS ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),RCSe ) ,MUR ) )", "obj1": 0.6764132553606238, "obj2": 0.22068985604471467}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( ( Max( RRS,Const ) + ( ( PN / MDR ) + ( Min( FirstVNF_RAM ,( MDR / Const ) ) - ( MDR / PN ) ) ) ) - ( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( MUR ,( ( CS / ( ( MLU + CS ) / MUR ) ) / DS ) ) ,Min( Max( MUC,DS ) ,Max( MUC,DS ) ) )", "obj1": 0.7582846003898636, "obj2": 0.1368911564405228}, {"determining": "( ( ( MDR / PN ) - Max( ( Max( DDR,MRS ) - MDR ),( Max( ( Max( Const,BR ) - ( FirstVNF_Mem - BR ) ),MDR ) + CRS ) ) ) - FirstVNF_CPU )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( MUM * MUM ) ,( MUM - ( Min( RRSe ,Min( DS ,RMSe ) ) / ( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423575}, {"determining": "( Max( CRS,( ( PN / MDR ) + PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Max( Max( RMSe,MUC ),RRSe ),DS ) ,MUR ) )", "obj1": 0.6608187134502924, "obj2": 0.23396107865482135}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + ( ( ( MLU / MUR ) + RCSe ) / RRSe ) ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.30409356725146197, "obj2": 0.6926214733520868}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / ARS ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( Max( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ),MDR ) * FirstVNF_RAM ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU / ( ( RRSe + ( RCSe - ( RRSe - CS ) ) ) / MUC ) ) )", "obj1": 0.2982456140350877, "obj2": 0.6989626916926551}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),PN ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( DS * ( MUC / Max( MUC,DS ) ) ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15542938048641064}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN * ( AMS * RRS ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) / ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.935672514619883, "obj2": 0.030967370656438595}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( ( ( RCSe - ( DS / CS ) ) + MUC ) * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( MLU,MUM ) )", "obj1": 0.7816764132553606, "obj2": 0.11394487250708568}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - FirstVNF_CPU_Server ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( ( MDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( ( MUR - RRSe ) + MLU ) ) ) ),( RCSe / MUC ) ) ,RRSe ) ,Min( Max( MUC,RCSe ) ,MUR ) )", "obj1": 0.7738791423001949, "obj2": 0.12280376949629866}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( RRS,PN ) / ( MRS - PN ) ) ) - Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( Min( Max( CS,MUM ) ,MUC ),( RMSe + ( Min( MLU ,Min( Max( MUC,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5175399155839608}, {"determining": "( ( ( ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) / ARS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( PN * MDR ) ) ) - Min( ( MRS * MDR ) ,PN ) ) ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "Max( ( MLU - ( ( ( MUR + MUM ) - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - CS ),Min( MUM ,( MLU + MUR ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.503318172432504}, {"determining": "( ( Max( RRS,Const ) + ( ( Max( CRS,Max( ( BR + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,ACS ) ) ) - ( MDR / PN ) ) + Max( PN,MDR ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.04354147200711924}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( ( MLU / MUR ) + RCSe ) / RRSe ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.3820662768031189, "obj2": 0.5759990021174671}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.5185185185185185, "obj2": 0.37475972106135025}, {"determining": "( Max( Max( ( ( Max( CRS,Min( ( BR / BR ) ,FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( CRS - AMS ) ),( ( PN / MDR ) + ACS ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( Min( RMSe ,( RRSe / MUM ) ),Min( CS ,Min( MUR ,( RCSe + MLU ) ) ) ) / ( DS + MUC ) )", "obj1": 0.6939571150097466, "obj2": 0.2016757632120516}, {"determining": "( ( ( ( PN / Max( ( FirstVNF_Mem / ( FirstVNF_CPU / ( FirstVNF_CPU + Const ) ) ),Max( Const,Const ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,Min( MUR ,( MUM - MUR ) ) ) ,( MLU / ( ( RRSe + ( DS - MUR ) ) / MUC ) ) )", "obj1": 0.2787524366471735, "obj2": 0.730861804803562}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ) + PN ) ) )", "choosing": "Min( ( CS * ( Max( ( ( ( DS / MUR ) + Min( DS ,RMSe ) ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ) / Max( ( ( RCSe / MUM ) * ( CS / MUC ) ),( MUR - MUR ) ) ) ) ,( MUR * CS ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( ( ( PN / ( ( ( FirstVNF_Mem_Server * CRS ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( FirstVNF_RAM_Server - PN ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.442495126705653, "obj2": 0.4893397619905866}, {"determining": "( Max( CRS,( ( ( BR + FirstVNF_CPU ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * ( ( MLU / MUC ) + RMSe ) ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.28460038986354774, "obj2": 0.7218957841107663}, {"determining": "( ( ( PN / ( ( ( FirstVNF_Mem_Server * CRS ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) ) ) + ( FirstVNF_RAM_Server - PN ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( Min( ( MUR - CS ) ,MUM ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.9902534113060428, "obj2": 0.004505851309768664}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5447193833009049}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( ( DS * ( DS * CS ) ),MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.29434697855750486, "obj2": 0.7092646022889866}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( Const * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / Min( MDR ,PN ) ) + PN ) ) - ( MDR / PN ) ) ) ) - ( PN * FirstVNF_RAM ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( ( MUM + MLU ),DS ) ) ) / ( MUC / Min( MUC ,Max( MLU,( ( MUC / MUC ) + MUC ) ) ) ) )", "obj1": 0.5594541910331384, "obj2": 0.3326766012635713}, {"determining": "( Max( Min( Min( MRS ,( FirstVNF_CPU_Server - ARS ) ) ,DDR ),( ( PN / ( Max( FirstVNF_RAM,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( PN / MDR ) )", "choosing": "Max( ( MLU - Min( ( MUC * ( RRSe + RCSe ) ) ,DS ) ),Max( ( RMSe + ( ( Min( ( MUR - CS ) ,MUM ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) * ( Max( ( MUC / MLU ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUC / MUR ) + MUR ) ) ) ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.590640762158252}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.34307992202729043, "obj2": 0.6408724100136028}, {"determining": "( ( ( ( ( CRS / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Max( Const,Const ) ) ) / MDR ) + FirstVNF_RAM ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + MUR ) ) ) + RMSe ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5096231509901269}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),PN ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Min( RRSe ,RCSe ) / RRSe ) + Max( ( MUM - RCSe ),MUC ) ),( MUM + ( ( RCSe - ( DS / CS ) ) + MUC ) ) ) ,MUR ) )", "obj1": 0.7251461988304093, "obj2": 0.16956730026438138}, {"determining": "( ( ( FirstVNF_CPU_Server * PN ) + ( ( Min( AMS ,( DDR + BR ) ) / MDR ) + ( Max( CRS,( ( FirstVNF_RAM / FirstVNF_Mem_Server ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( Min( FirstVNF_Mem_Server ,( MDR / PN ) ) + FirstVNF_Mem ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( ( RMSe * ( RRSe / MUM ) ) - MUR ) )", "obj1": 0.672514619883041, "obj2": 0.22195834476057552}, {"determining": "( ( ( PN / ( ( ( MDR / PN ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( PN / ( Max( ( FirstVNF_RAM_Server + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ) ) ) + ( FirstVNF_RAM_Server - PN ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Min( MUC ,RRSe ) - CS ),Max( MUM,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.7290448343079922, "obj2": 0.16503740870839786}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ARS,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( MLU / MUC ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.5087719298245614, "obj2": 0.3932155055832021}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( PN / ( ( ( FirstVNF_Mem_Server * CRS ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( FirstVNF_RAM_Server - PN ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.48625961108703164}, {"determining": "( ( Max( ( FirstVNF_RAM + BR ),( ( ( FirstVNF_Mem_Server * RRS ) - ( ARS + MRS ) ) + MRS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( ( FirstVNF_RAM * BR ) / MDR ) + ( ( PN * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( Max( Max( AMS,BR ),Min( FirstVNF_CPU_Server ,AMS ) ) - FirstVNF_CPU_Server ) ) ) ) ) - Min( Const ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + MUC ) / ( MUC / ( Min( MLU ,( RCSe + RMSe ) ) / RRSe ) ) )", "obj1": 0.4678362573099415, "obj2": 0.45410302565886906}, {"determining": "( ( ( ( PN / Max( FirstVNF_Mem,Max( Const,Const ) ) ) / MDR ) + FirstVNF_RAM ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU / ( ( ( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) + RMSe ) / MUC ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5138647277033491}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.6549707602339181, "obj2": 0.2378821846053363}, {"determining": "( ( ( FirstVNF_RAM_Server - PN ) + ( PN / ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( Max( CRS,MRS ) / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,MLU ) ) ) + ( MUC - ( ( ( ( MUC / CS ) * RCSe ) / RRSe ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.7037037037037037, "obj2": 0.1902387535667389}, {"determining": "( Max( PN,Min( ( FirstVNF_CPU / MRS ) ,( Max( BR,Max( Const,BR ) ) - ( CRS * FirstVNF_CPU_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( Min( MLU ,RMSe ) / MUC ) / Max( ( ( MLU - MLU ) / MUC ),( RRSe / Max( ( RMSe * MLU ),( MUM + ( ( ( RMSe / MUR ) + RCSe ) / RRSe ) ) ) ) ) )", "obj1": 0.7953216374269005, "obj2": 0.10081536644141449}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Min( RRSe ,( RRSe / MUM ) ),( Max( ( MUR * MUR ),( ( DS * ( DS / ( MUM + RMSe ) ) ) + ( DS * DS ) ) ) + RMSe ) ) / ( Max( CS,MUM ) / ( DS - ( MUM + CS ) ) ) )", "obj1": 0.5516569200779727, "obj2": 0.3375208423687124}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),PN ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( DS * ( MUC / Max( MUC,DS ) ) ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15542938048641064}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( CS - ( RMSe * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.8421052631578947, "obj2": 0.07286432544309505}, {"determining": "( Max( CRS,Max( CRS,Max( ( BR + FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Max( Max( RMSe,Min( MLU ,Min( Max( MUC,DS ) ,Max( MUC,DS ) ) ) ),RRSe ),DS ) ,MUR ) )", "obj1": 0.7212475633528265, "obj2": 0.1735877493316775}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ( ( Min( Const ,FirstVNF_CPU_Server ) / MDR ) + CRS ),CRS ) - ( MDR / PN ) ) ) ) - Min( Max( ( MRS * FirstVNF_RAM ),PN ) ,( ( MDR / PN ) + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR + MLU ) ,Max( MLU,Min( ( MUR - MUR ) ,MUM ) ) )", "obj1": 0.6335282651072125, "obj2": 0.25846338115195594}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.4093567251461988, "obj2": 0.5374782417751416}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( ( MRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8323586744639376, "obj2": 0.07894192709910791}, {"determining": "( Max( CRS,Max( CRS,( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ACS ) ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.6900584795321637, "obj2": 0.2049629862291621}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( ( ( PN / ( ( ( MDR / PN ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) ) ) + ( FirstVNF_RAM_Server - PN ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( MLU,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.7543859649122807, "obj2": 0.1403710520436995}, {"determining": "( ( Max( ( Min( ( CRS / Max( ( DDR + AMS ),FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_Mem_Server ),( FirstVNF_RAM_Server / PN ) ) / PN ) - ( CRS * ( ( PN + PN ) + ACS ) ) )", "choosing": "( Max( RRSe,MUR ) + ( DS + ( Min( ( MUM - Min( Min( RRSe ,Min( RRSe ,RMSe ) ) ,( CS * MUC ) ) ) ,( Max( RCSe,MUM ) / Max( ( MUC * MUR ),Max( MUC,MLU ) ) ) ) + CS ) ) )", "obj1": 0.2826510721247563, "obj2": 0.725294120473661}], "42": [{"determining": "( ( ( PN / ( ( ( FirstVNF_Mem_Server * CRS ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) ) ) + ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - PN ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( Min( ( MUR - CS ) ,MUM ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Min( FirstVNF_Mem ,MRS ) / MRS ) - ( ( ( PN / MDR ) + Max( FirstVNF_CPU_Server,RRS ) ) - ( ( CRS * PN ) - ( ACS * Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MLU + RCSe ) ,( ( Max( CS,MUM ) / MUC ) + ( ( MLU / MUC ) + Min( MUR ,( ( MUM / ( DS * RRSe ) ) * ( MUC / Min( RMSe ,CS ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ACS / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( PN + RRS ) ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( MUM * MUM ) ,( MUM - ( Min( RRSe ,Min( DS ,RMSe ) ) / ( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3645224171539961, "obj2": 0.5989762333851951}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( Min( Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( ( RRSe + ( Min( Min( RMSe ,( MUR + MUR ) ) ,Max( ( RCSe * RMSe ),MUR ) ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.8187134502923976, "obj2": 0.0875468930104352}, {"determining": "( ( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Max( ( ( RCSe - MUR ) + Max( MLU,CS ) ),Max( CS,( ( ( RCSe + CS ) / MUR ) / RCSe ) ) )", "obj1": 0.5477582846003899, "obj2": 0.3573105423865164}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( ( ( FirstVNF_RAM_Server - PN ) + ( PN / ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - FirstVNF_Mem_Server ) ) ) ) - ( Max( CRS,MRS ) / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MUC,( DS * Min( MLU ,MLU ) ) ) + ( MUC - ( ( ( ( MUC / CS ) * RCSe ) / RRSe ) + RMSe ) ) ) ,RRSe ) )", "obj1": 0.7037037037037037, "obj2": 0.1902387535667389}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MUR - CS ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3255360623781676, "obj2": 0.6571008052190886}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( Max( ( ( ( PN / ( Max( PN,ARS ) + MDR ) ) / MDR ) + ( MDR - ( CRS * FirstVNF_CPU_Server ) ) ),PN ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( ( RMSe * MLU ),( MUM + ( ( ( RCSe / MUR ) + RCSe ) / RRSe ) ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.7173489278752436, "obj2": 0.17781092779439978}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5539776738707561}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_Mem_Server + MDR ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( Min( AMS ,BR ) / FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( PN,FirstVNF_CPU_Server ) + ACS ) ) - ( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / ( ( MUM * DS ) - RRSe ) ) ,Min( ( CS / RRSe ) ,MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.31154910022481314}, {"determining": "( Max( ( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) - Max( FirstVNF_RAM,MRS ) ),CRS ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( ( RMSe / ( ( DS * MUM ) + ( ( RRSe + MLU ) + MUM ) ) ) + RMSe ),( MUC + ( DS * ( DS * CS ) ) ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.3567251461988304, "obj2": 0.6158790615460545}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * Max( CRS,( ( RRS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.4522417153996101, "obj2": 0.47212871043983645}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( ( MRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( MUC ,RMSe ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.9434697855750487, "obj2": 0.025038931316630677}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( DS + CS ) ) ) ) + CS ) ) ,Min( MUM ,MUR ) )", "obj1": 0.6101364522417154, "obj2": 0.2844605996268131}, {"determining": "( ( MRS - MDR ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.5360623781676414, "obj2": 0.3602935892236567}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN * ( AMS * RRS ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) / ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.935672514619883, "obj2": 0.030967370656438595}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( ARS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( CRS / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) + RMSe ) ) / Min( MUC ,( RCSe - MLU ) ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( PN / MDR ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5633528265107213, "obj2": 0.3265733335368113}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - PN ) ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),MUC ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.9532163742690059, "obj2": 0.022028278566650017}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( ( ( DS / MUR ) + Min( DS ,RMSe ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.5706146501160704}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.34307992202729043, "obj2": 0.6408724100136028}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.7914230019493177, "obj2": 0.10679866052647637}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6752058890960095}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( ( DS * CS ) * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5497076023391813, "obj2": 0.33942107572425434}, {"determining": "( ( MDR / PN ) - Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( Const - ARS ) ) ) ) / ( ( ( Max( MRS,FirstVNF_Mem_Server ) + Max( FirstVNF_CPU,MRS ) ) + MRS ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) )", "choosing": "Min( ( MLU / RRSe ) ,Min( Max( ( MUR + Max( ( MUM - RCSe ),Min( RMSe ,( MLU / DS ) ) ) ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.5906432748538012, "obj2": 0.3014742237753664}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ) + PN ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Max( MLU,Min( Min( RCSe ,CS ) ,( MLU * ( RMSe - DS ) ) ) ) / MLU ),MLU ) )", "obj1": 0.49317738791423, "obj2": 0.4192885545451359}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR - MUR ) )", "obj1": 0.5146198830409356, "obj2": 0.3885686765400959}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) - Min( Max( ( MRS * FirstVNF_RAM ),PN ) ,Min( ( ( PN + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( CS - ( RMSe * CS ) ) ,RRSe ) )", "obj1": 0.44834307992202727, "obj2": 0.4816562955070702}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "Min( ( Min( MLU ,RRSe ) + Max( ( MUC + ( DS * ( DS * CS ) ) ),CS ) ) ,( MLU - Max( Max( ( ( CS / ( Min( DS ,MUR ) - MUC ) ) + DS ),MUM ),RMSe ) ) )", "obj1": 0.4834307992202729, "obj2": 0.43193610802998195}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.5029239766081871, "obj2": 0.39868840565721664}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,Max( Max( ( MLU / MUC ),( RMSe + RMSe ) ),( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) )", "obj1": 0.6179337231968811, "obj2": 0.27430732563893917}, {"determining": "( ( Max( RRS,Const ) + ( ( Max( CRS,Max( ( BR + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,ACS ) ) ) - ( MDR / PN ) ) + Max( PN,MDR ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.043541472007119233}, {"determining": "( Max( Min( Min( MRS ,( FirstVNF_CPU_Server - ARS ) ) ,DDR ),( ( PN / ( Max( FirstVNF_RAM,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( PN / MDR ) )", "choosing": "Max( ( MLU - Min( ( MUC * ( RRSe + RCSe ) ) ,DS ) ),Max( ( RMSe + ( ( Min( ( MUR - CS ) ,MUM ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) * ( Max( ( MUC / MLU ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUC / MUR ) + MUR ) ) ) ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.590640762158252}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( ( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.5263157894736842, "obj2": 0.3681767903178313}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4678362573099415, "obj2": 0.45321022705551883}, {"determining": "( Max( CRS,( ( PN / ( PN / MDR ) ) + PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Max( Max( ( MUC + ( DS * ( DS * CS ) ) ),MUC ),RRSe ),DS ) ,MUR ) )", "obj1": 0.9844054580896686, "obj2": 0.00735278540282846}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( ( MRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8323586744639376, "obj2": 0.07894192709910791}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.645224171539961, "obj2": 0.24487967648789585}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - FirstVNF_CPU_Server ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( ( MDR / Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( ( RRSe + ( ( MUM + DS ) / Max( CS,( ( MUR - RRSe ) + MLU ) ) ) ),( RCSe / MUC ) ) ,RRSe ) ,Min( Max( MUC,RCSe ) ,MUR ) )", "obj1": 0.7738791423001949, "obj2": 0.12280376949629866}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server / RRS ) / ( Max( FirstVNF_CPU,Const ) + ( RRS - FirstVNF_RAM ) ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( AMS,( ( PN / MDR ) + ( FirstVNF_RAM_Server / ( ARS * ACS ) ) ) ) - ( Max( Const,MDR ) * PN ) ) ) ) - Min( FirstVNF_Mem ,Max( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ),( MDR * CRS ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( Min( ( Max( ( RCSe * RMSe ),( RRSe / RMSe ) ) * ( CS / ( MUC + RCSe ) ) ) ,RRSe ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( ( MRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.8323586744639376, "obj2": 0.07894192709910791}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.5185185185185185, "obj2": 0.37475972106135025}, {"determining": "( ( ( ( PN * ( ( PN / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / CS ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.7446393762183235, "obj2": 0.15035617480002664}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( MUC + MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.7407407407407407, "obj2": 0.1538850914966103}, {"determining": "( ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUR + MUR ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.530214424951267, "obj2": 0.3658112251129275}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( MRS * FirstVNF_RAM ),PN ) ,Min( ( ( PN + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6849387068548303}, {"determining": "( ( ( MDR / PN ) - Max( ( Max( DDR,MRS ) - MDR ),( Max( ( Max( Const,BR ) - ( FirstVNF_Mem - BR ) ),MDR ) + CRS ) ) ) - FirstVNF_CPU )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( MUM * MUM ) ,( MUM - ( Min( RRSe ,Min( DS ,RMSe ) ) / ( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423575}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5492043103105175}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / ( Min( Const ,Const ) / CRS ) ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MLU + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.4191033138401559, "obj2": 0.522779198927245}, {"determining": "( ( ( ( ( CRS / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Max( Const,Const ) ) ) / MDR ) + FirstVNF_RAM ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + MUR ) ) ) + RMSe ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5096231509901269}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.783625730994152, "obj2": 0.11304370224513197}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + Max( ( ( DS - CS ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ),MUR ) ) ) / ( Max( CS,MUM ) / ( Max( DS,MLU ) - RCSe ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC + ( Max( Max( MUR,MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( DS + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.47173489278752434, "obj2": 0.44728604831535074}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( ( ( Const / DDR ) - FirstVNF_Mem ) / PN ) )", "choosing": "Min( Min( ( ( CS + ( ( MUR - Min( ( MLU * RCSe ) ,RCSe ) ) * ( MUR + Min( MUM ,RCSe ) ) ) ) + RRSe ) ,Max( ( MUC + ( ( DS * CS ) * DS ) ),( ( MLU / CS ) + RMSe ) ) ) ,Min( Max( Max( Max( RMSe,MUC ),RRSe ),DS ) ,MUR ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442252}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6283303129264172}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( Min( ( FirstVNF_Mem_Server / Min( MDR ,FirstVNF_CPU ) ) ,Const ) / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( ( ( MUR - CS ) - MUM ) * MLU ) / CS ) ),Max( ( RRSe / RRSe ),( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5813056035373947}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( PN * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Max( MUC,Min( Min( RMSe ,( MUR + MUR ) ) ,Max( ( RCSe * RMSe ),MUR ) ) ) - MUR ) )", "obj1": 0.7719298245614035, "obj2": 0.12370493975825239}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( RRS,PN ) / ( MRS - PN ) ) ) - Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( Min( Max( CS,MUM ) ,MUC ),( RMSe + ( Min( MLU ,Min( Max( MUC,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5175399155839608}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( RRS,PN ) / ( MRS - PN ) ) ) - Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.9727095516569201, "obj2": 0.012616383667352255}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( ACS * FirstVNF_Mem ) ),Min( ( RRS - FirstVNF_Mem_Server ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( BR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( ( RMSe * ( MLU + MUM ) ) - CS ) ),( MUC / RMSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.8421052631578947, "obj2": 0.07286432544309505}, {"determining": "( ( ( ( PN / Max( FirstVNF_Mem,Max( Const,Const ) ) ) / MDR ) + FirstVNF_RAM ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( MLU / ( ( ( ( CS + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) + RMSe ) / MUC ) ) )", "obj1": 0.4249512670565302, "obj2": 0.5125109804265987}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( ( ARS - ( ( DDR * FirstVNF_CPU_Server ) + AMS ) ) - Min( AMS ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MUC ,MUR ) ,Max( DS,MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3172991436201944}, {"determining": "( Max( CRS,Max( CRS,( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ACS ) ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.6900584795321637, "obj2": 0.2049629862291621}, {"determining": "( ( Max( ( Max( DDR,MRS ) - MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) - FirstVNF_CPU )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( DS ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423575}, {"determining": "( ( ( ( PN / ( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ) + PN ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Max( MLU,Min( Min( RCSe ,CS ) ,Max( DS,MLU ) ) ) / Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) ),MLU ) )", "obj1": 0.6257309941520468, "obj2": 0.266653935332767}, {"determining": "( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.6198830409356725, "obj2": 0.27241996828594983}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( ( DS * ( DS * CS ) ),MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.29434697855750486, "obj2": 0.7092646022889866}, {"determining": "( ( Max( RRS,( FirstVNF_RAM + ( Min( Const ,( Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN - PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / PN ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) - ( ( DS - Min( ( MUM + MUM ) ,RCSe ) ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ) ),( MLU / MUC ) ) / ( RMSe + RMSe ) )", "obj1": 0.8518518518518519, "obj2": 0.07032775525675368}, {"determining": "( ( Max( Max( CRS,( ( PN / ( MDR + ACS ) ) + ACS ) ),( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ,ARS ) ) / PN ) ) - ( MDR / PN ) ) - Min( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe / RCSe ) ) ,Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) ),MUM ) ) )", "obj1": 0.9610136452241715, "obj2": 0.017690691968115416}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( RRS,PN ) / ( MRS - PN ) ) ) - Min( FirstVNF_Mem ,( Max( ( MDR / PN ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( Min( Max( CS,MUM ) ,MUC ),( RMSe + ( Min( MLU ,Min( Max( MUM,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) ) ) )", "obj1": 0.9727095516569201, "obj2": 0.012616383667352255}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.033521263247452256}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / ( PN / MDR ) ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MUR ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.9922027290448343, "obj2": 0.0038102775347424607}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / ( PN / MDR ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( ( Max( MUM,( Min( RMSe ,( MUR + MUR ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.2962962962962963, "obj2": 0.7060987028980507}, {"determining": "( ( Max( Max( CRS,( ( PN / ( MDR + ACS ) ) + ACS ) ),( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) - ( MDR / PN ) ) - MDR )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( ( ( MUC - MUC ) - MUM ),MUM ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14555972558867014}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUM,( Min( RMSe ,( MUR + MUR ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.30409356725146197, "obj2": 0.6926214733520868}, {"determining": "( ( Max( ( Max( DDR,MRS ) * MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( ( ( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) / Max( RCSe,RRSe ) ) ) ) ) - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( DS ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.797270955165692, "obj2": 0.09882870726689633}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.6549707602339181, "obj2": 0.2378821846053363}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.6432748538011696, "obj2": 0.24583568680092502}, {"determining": "( ( ( ( CRS * ( ( ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) * FirstVNF_RAM ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * ( MUR + MUR ) ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),RMSe ) )", "obj1": 0.6998050682261209, "obj2": 0.1920382916913312}, {"determining": "( Max( Max( ( ( Max( CRS,Min( ( BR / BR ) ,FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( CRS - AMS ) ),( ( PN / MDR ) + ACS ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( Min( RMSe ,( RRSe / MUM ) ),Min( CS ,Min( MUR ,( RCSe + MLU ) ) ) ) / ( DS + MUC ) )", "obj1": 0.6939571150097466, "obj2": 0.2016757632120516}, {"determining": "( Min( ( ( Max( CRS,( ( MDR / ( FirstVNF_Mem_Server / ACS ) ) + PN ) ) - ( MDR / ( MDR / PN ) ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( Max( RCSe,RMSe ),CS ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),RCSe ) ,MUR ) )", "obj1": 0.6764132553606238, "obj2": 0.22068985604471467}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Min( MLU ,RRSe ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( Min( MLU ,RRSe ) - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6842105263157895, "obj2": 0.20940786901597427}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}], "43": [{"determining": "( Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) - ( Max( Max( BR,MDR ),FirstVNF_Mem ) / ( PN * Min( Max( PN,( FirstVNF_RAM_Server + MRS ) ) ,DDR ) ) ) )", "choosing": "Max( MUR,( DS - ( ( MUC - MUM ) * ( ( RMSe / RMSe ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( PN / ( ( ( FirstVNF_Mem_Server * CRS ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) ) ) + ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - PN ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( Min( ( MUR - CS ) ,MUM ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( ARS * FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( ( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) - Max( FirstVNF_RAM,MRS ) ),CRS ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( ( RMSe / ( ( DS * MUM ) + ( ( RRSe + MLU ) + MUM ) ) ) + RMSe ),( MUC + ( DS * ( DS * CS ) ) ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.3567251461988304, "obj2": 0.6158790615460545}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( Min( Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( ( RRSe + ( Min( Min( RMSe ,( MUR + MUR ) ) ,Max( ( RCSe * RMSe ),MUR ) ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.8187134502923976, "obj2": 0.0875468930104352}, {"determining": "( Max( CRS,FirstVNF_Mem_Server ) - ( ( ( Const / DDR ) - FirstVNF_Mem ) / PN ) )", "choosing": "Min( Min( ( ( CS + ( ( MUR - Min( ( MLU * RCSe ) ,RCSe ) ) * ( MUR + Min( MUM ,RCSe ) ) ) ) + RRSe ) ,Max( ( MUC + ( ( DS * CS ) * DS ) ),( ( MLU / CS ) + RMSe ) ) ) ,Min( Max( Max( Max( RMSe,MUC ),RRSe ),DS ) ,MUR ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442252}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) - ( PN / MDR ) ) ) ) - ( ( FirstVNF_Mem - FirstVNF_RAM ) / Const ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * RCSe ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) + Max( CS,MLU ) ) ) ) )", "obj1": 0.6569200779727096, "obj2": 0.23698101434338256}, {"determining": "( Min( ( ( Max( CRS,( ( MDR / ( FirstVNF_Mem_Server / ACS ) ) + PN ) ) - ( MDR / ( MDR / PN ) ) ) + ACS ) ,( Max( CRS,( ( MDR + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( Max( RCSe,RMSe ),CS ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),RCSe ) ,MUR ) )", "obj1": 0.672514619883041, "obj2": 0.2225470366196975}, {"determining": "( ( Max( RRS,Const ) + ( ( Max( CRS,Max( ( BR + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,ACS ) ) ) - ( MDR / PN ) ) + Max( PN,MDR ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.043541472007119233}, {"determining": "( Max( Min( Min( MRS ,( FirstVNF_CPU_Server - ARS ) ) ,DDR ),( ( PN / ( Max( FirstVNF_RAM,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( PN / MDR ) )", "choosing": "Max( ( MLU - Min( ( MUC * ( RRSe + RCSe ) ) ,DS ) ),Max( ( RMSe + ( ( Min( ( MUR - CS ) ,MUM ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) * ( Max( ( MUC / MLU ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUC / MUR ) + MUR ) ) ) ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.590640762158252}, {"determining": "( ( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Max( ( ( RCSe - MUR ) + Max( MLU,CS ) ),Max( CS,( ( ( RCSe + CS ) / MUR ) / RCSe ) ) )", "obj1": 0.5477582846003899, "obj2": 0.3573105423865164}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( Max( CRS,( Min( ( FirstVNF_Mem_Server * ACS ) ,MRS ) + ( ( PN * ( ( ARS - RRS ) + CRS ) ) / FirstVNF_RAM_Server ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( CS - DS ) ) * Min( RRSe ,MLU ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,CS ) ,( MLU / DS ) ) )", "obj1": 0.43859649122807015, "obj2": 0.49794030927802535}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.39766081871345027, "obj2": 0.5539776738707561}, {"determining": "( ( ( ( CRS * ( ( ( ACS * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( MRS * FirstVNF_RAM ),PN ) ,Min( ( ( PN + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.31189083820662766, "obj2": 0.6849387068548303}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.3645224171539961, "obj2": 0.5989762333851951}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Min( MLU ,RRSe ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( Min( MLU ,RRSe ) - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.6842105263157895, "obj2": 0.20940786901597427}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( ( ( CRS / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Max( Const,Const ) ) ) / MDR ) + FirstVNF_RAM ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + MUR ) ) ) + RMSe ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5096231509901269}, {"determining": "( ( Max( Max( CRS,( ( PN / ( MDR + ACS ) ) + ACS ) ),( ( ( ( RRS + BR ) * ( FirstVNF_RAM_Server / AMS ) ) * Min( ( ARS * PN ) ,ARS ) ) / PN ) ) - ( MDR / PN ) ) - MDR )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( ( ( MUC - Min( ( Max( RCSe,MUM ) / RCSe ) ,( RCSe / MUR ) ) ) - MUM ),MUM ) ) )", "obj1": 0.7524366471734892, "obj2": 0.1446585553267164}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( ( Max( RRS,( BR + FirstVNF_RAM ) ) + ( ( PN * ( AMS * RRS ) ) + ( Max( CRS,( Min( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ,MRS ) + ( ( PN * FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) / ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.935672514619883, "obj2": 0.030967370656438595}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_Mem_Server + MDR ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( Min( AMS ,BR ) / FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( PN,FirstVNF_CPU_Server ) + ACS ) ) - ( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / ( ( MUM * DS ) - RRSe ) ) ,Min( ( CS / RRSe ) ,MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.31154910022481314}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.4405458089668616, "obj2": 0.48937949714256895}, {"determining": "( ( MDR / PN ) - Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( Const - ARS ) ) ) ) / ( ( ( Max( MRS,FirstVNF_Mem_Server ) + Max( FirstVNF_CPU,MRS ) ) + MRS ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) )", "choosing": "Min( ( MLU / RRSe ) ,Min( Max( ( MUR + Max( ( MUM - RCSe ),Min( RMSe ,( MLU / DS ) ) ) ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.5906432748538012, "obj2": 0.3014742237753664}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.3469785575048733, "obj2": 0.6279137340086024}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR - MUR ) )", "obj1": 0.5146198830409356, "obj2": 0.3885686765400959}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( DS - MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.34307992202729043, "obj2": 0.6408724100136028}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( ( DS * CS ) * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5497076023391813, "obj2": 0.33942107572425434}, {"determining": "( ( ( ( CRS * ( ( ( ( DDR / MDR ) / ( FirstVNF_RAM_Server + PN ) ) / PN ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) * ( Max( Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),MDR ) * ( MDR / PN ) ) ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( Min( MUM ,MUR ) + ( DS * ( DS * ( MUR + MUR ) ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),RMSe ) )", "obj1": 0.7115009746588694, "obj2": 0.18154528009881138}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ) + PN ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Max( MLU,Min( Min( RCSe ,CS ) ,( MLU * ( RMSe - DS ) ) ) ) / MLU ),MLU ) )", "obj1": 0.49317738791423, "obj2": 0.4192885545451359}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( PN / MDR ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5614035087719298, "obj2": 0.3284735668923533}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( ( DS * CS ) * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5516569200779727, "obj2": 0.3375208423687124}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( ( ( DS / MUR ) + Min( DS ,RMSe ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.5706146501160704}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( MRS,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + MDR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * ( ( MUC * MUR ) / Max( RMSe,( RRSe * MUR ) ) ) ) ) + ( MUC - ( ( MLU + ( ( RRSe / CS ) * MLU ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5029239766081871, "obj2": 0.39868840565721664}, {"determining": "( Max( CRS,Max( CRS,( ( PN / ( Max( ( ARS + MRS ),ARS ) + ACS ) ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( ( MLU + RCSe ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.6764132553606238, "obj2": 0.21973828007661492}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - AMS )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( MLU - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.5867446393762183, "obj2": 0.3048876968107889}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / ( ( FirstVNF_Mem * FirstVNF_CPU ) / CRS ) ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MLU + ( ( CS + MLU ) + RRSe ) ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.4191033138401559, "obj2": 0.5227791989272449}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5492043103105175}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.033521263247452256}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - PN ) ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),MUC ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.9532163742690059, "obj2": 0.022028278566650017}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server / RRS ) / ( Max( FirstVNF_CPU,Const ) + ( RRS - FirstVNF_RAM ) ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( AMS,( ( PN / MDR ) + ( FirstVNF_RAM_Server / ( ARS * ACS ) ) ) ) - ( Max( Const,MDR ) * PN ) ) ) ) - Min( FirstVNF_Mem ,Max( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ),( MDR * CRS ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( Min( ( Max( ( RCSe * RMSe ),( RRSe / RMSe ) ) * ( CS / ( MUC + RCSe ) ) ) ,RRSe ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe / RCSe ) ) ,Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) ),MUM ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6441921073026784}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( ACS * FirstVNF_Mem ) ),Min( ( RRS - FirstVNF_Mem_Server ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( BR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( ( RMSe * ( MLU + MUM ) ) - CS ) ),( MUC / RMSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.8421052631578947, "obj2": 0.07286432544309505}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Min( MUM ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.6549707602339181, "obj2": 0.23788218460533625}, {"determining": "( Max( Max( CRS,( ( PN / MDR ) + CRS ) ),FirstVNF_Mem_Server ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( ( DS * ( MUR + MUR ) ) * DS ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Min( Max( Max( Max( RMSe,MUC ),RRSe ),DS ) ,MUR ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( PN + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( ( Max( DS,MLU ) - RCSe ) * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8791423001949318, "obj2": 0.058057133120068556}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( PN / MDR ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( ( ( DS / MUR ) + Min( DS ,RMSe ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.571150097465887, "obj2": 0.3218536333868697}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( ( ( ( PN / PN ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( Min( ( MUR - CS ) ,MUM ) / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.2884990253411306, "obj2": 0.7159430942322824}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( ( ( ( DS / MUR ) + Min( DS ,RMSe ) ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) - MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.3996101364522417, "obj2": 0.5492043103105175}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4756335282651072, "obj2": 0.44489283846230565}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( PN * PN ) ),( ( PN / MDR ) + ACS ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ) ),( MLU / MUC ) ) / ( DS + MUC ) )", "obj1": 0.7056530214424951, "obj2": 0.1893610889947076}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 0.5185185185185185, "obj2": 0.37475972106135025}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3820662768031189, "obj2": 0.5774532430986286}, {"determining": "( ( Max( AMS,PN ) / FirstVNF_RAM_Server ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( Min( MUC ,RRSe ) / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.17183224604237313}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( MUC + MLU ) - DS ) - Min( RCSe ,( MLU / MUC ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.7407407407407407, "obj2": 0.1538850914966103}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( Max( Max( ( DS * ( DS * CS ) ),MUC ),( CS - DS ) ) * Min( MLU ,RRSe ) ) ) - ( ( MLU - ( RRSe / Max( DS,( Min( MLU ,RRSe ) + CS ) ) ) ) + CS ) ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.29434697855750486, "obj2": 0.7092646022889866}, {"determining": "( ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) - Min( Max( ( MRS * FirstVNF_RAM ),PN ) ,Min( ( ( PN + FirstVNF_CPU_Server ) / FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( CS - ( RMSe * CS ) ) ,RRSe ) )", "obj1": 0.44834307992202727, "obj2": 0.4816562955070702}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.34502923976608185, "obj2": 0.6283303129264172}, {"determining": "( Max( Max( ( ( Max( CRS,( ( MDR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUM,( Min( RMSe ,( MUR + MUR ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.30409356725146197, "obj2": 0.6926214733520868}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + Max( ( ( DS - CS ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ),MUR ) ) ) / ( Min( MLU ,Min( Max( MUC,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.3645224171539961, "obj2": 0.5989762333851951}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( RRS,PN ) / ( MRS - PN ) ) ) - Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( Min( Max( CS,MUM ) ,MUC ),( RMSe + ( Min( MLU ,Min( Max( MUC,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5175399155839608}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.5029239766081871, "obj2": 0.39868840565721664}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( ( MRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( MUC ,RMSe ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.9434697855750487, "obj2": 0.025038931316630677}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.3255360623781676, "obj2": 0.6571008052190886}, {"determining": "( ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( MUC - MUC ) - MUM ) - ( MUM / CS ) ) )", "obj1": 0.7758284600389863, "obj2": 0.11988349520342197}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / MDR ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUM,( Min( RMSe ,( MUR + MUR ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6978557504873294, "obj2": 0.1985956123084967}, {"determining": "( ( Max( ( ( PN / ( ARS * ( ( PN / PN ) + Max( RRS,MRS ) ) ) ) - MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( ( ( ( CS + MLU ) + ( Max( ( ( DS / MUR ) + Min( DS ,RMSe ) ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( DS ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.8011695906432749, "obj2": 0.09702636674298887}, {"determining": "( ( ( ( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) - ( ACS * Max( CRS,( ( RRS * FirstVNF_Mem ) + FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.4522417153996101, "obj2": 0.47212871043983645}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "Min( ( Min( MLU ,RRSe ) + Max( ( MUC + ( DS * ( DS * CS ) ) ),CS ) ) ,( MLU - Max( Max( ( ( CS / ( Min( DS ,MUR ) - MUC ) ) + DS ),MUM ),RMSe ) ) )", "obj1": 0.4834307992202729, "obj2": 0.43193610802998195}, {"determining": "( ( Max( ( Max( DDR,MRS ) * MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( ( ( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) / Max( RCSe,RRSe ) ) ) ) ) - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( DS ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13133780062862566}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe / RCSe ) ) ,Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) ),MUM ) ) )", "obj1": 0.6120857699805068, "obj2": 0.27716402999009604}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.5380116959064327, "obj2": 0.3583499508408753}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7816764132553606, "obj2": 0.11394487250708571}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( ( MRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8323586744639376, "obj2": 0.07894192709910791}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( MDR / PN ) / ( MDR / PN ) ) ),MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( DS / Max( DS,( MUM + RRSe ) ) ) ) + CS ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( ACS,RRS ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( MUM ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.6335282651072125, "obj2": 0.2630067225370712}, {"determining": "( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + Max( ( Max( Min( ( MUR - CS ) ,MUM ),MLU ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ),MUR ) ) ) / ( Max( CS,MUM ) / ( Max( DS,MLU ) - RCSe ) ) )", "obj1": 0.9766081871345029, "obj2": 0.010892568004757052}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUM,( Min( RMSe ,( MUR + MUR ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6432748538011696, "obj2": 0.24583568680092502}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6752058890960095}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - ( ( RCSe - ( MLU - RCSe ) ) + ( CS * CS ) ) ),Max( ( RMSe - ( ( Min( ( MUR - CS ) ,MUM ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5813056035373947}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM_Server ,ARS ) + PN ) ) * FirstVNF_Mem ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ARS ) + CRS ) ) - ( MDR / ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM - CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,RMSe ) ,Max( Min( MUR ,( Max( RMSe,( ( ( RRSe / DS ) * ( RCSe + MUC ) ) / DS ) ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.30214424951267055, "obj2": 0.7015211331270619}, {"determining": "( ( ( ( Max( ACS,( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( MUR - CS ) / Min( DS ,( MLU * MUM ) ) ) ) ) ,RRSe ) )", "obj1": 0.32943469785575047, "obj2": 0.651352505001114}, {"determining": "( ( PN / DDR ) - ( MDR + ACS ) )", "choosing": "( Max( RRSe,MUM ) + Max( ( RMSe + Max( RMSe,Max( RMSe,CS ) ) ),RCSe ) )", "obj1": 0.2826510721247563, "obj2": 0.7285558584355505}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07655375069069847}], "44": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) - ( Max( Max( BR,MDR ),FirstVNF_Mem ) / ( PN * Min( Max( PN,( FirstVNF_RAM_Server + MRS ) ) ,DDR ) ) ) )", "choosing": "Max( MUR,( DS - ( ( MUC - MUM ) * ( ( RMSe / RMSe ) + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( ARS * FirstVNF_Mem_Server ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( PN / ( Max( ( ARS + FirstVNF_Mem ),ARS ) + FirstVNF_CPU ) ),MDR ) ) ) - ( ( ( Min( Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) * FirstVNF_RAM_Server ) * FirstVNF_RAM ) * ( Max( CRS,( ( BR / PN ) + FirstVNF_RAM_Server ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( ( RRSe + ( Min( Min( RMSe ,( MUR + MUR ) ) ,Max( ( RCSe * RMSe ),MUR ) ) / Max( CS,( CS + MLU ) ) ) ),( MUC / RCSe ) ) ,RRSe ) ,Min( Max( MUC,DS ) ,MUR ) )", "obj1": 0.8187134502923976, "obj2": 0.0875468930104352}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUM,( Min( RMSe ,( MUR + MUR ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6432748538011696, "obj2": 0.24583568680092496}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4756335282651072, "obj2": 0.44489283846230565}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( BR + FirstVNF_RAM ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( ( DS * CS ) * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / ( ( MUR - CS ) / Min( DS ,( MLU * MUM ) ) ) ) ) ) ,RRSe ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( ( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Max( ( ( RCSe - MUR ) + Max( MLU,CS ) ),Max( CS,( ( ( RCSe + CS ) / MUR ) / RCSe ) ) )", "obj1": 0.5477582846003899, "obj2": 0.3573105423865164}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / ( FirstVNF_RAM_Server - PN ) ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),MUC ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),DS ) ,MUR ) )", "obj1": 0.9532163742690059, "obj2": 0.022028278566650017}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),( PN / MDR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( CS - ( ( ( DS / MUR ) + Min( DS ,RMSe ) ) / ( MLU * ( RMSe - DS ) ) ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.7933723196881092, "obj2": 0.10369186928995576}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( Max( ACS,ACS ) / PN ) + CRS ) ) - ( MDR / PN ) ) ) ) - Max( FirstVNF_RAM,Min( ( MDR / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,Min( MLU ,RRSe ) ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( Min( MLU ,RRSe ) * DS ) ),RMSe ) ),( ( MUM - Max( RMSe,MUC ) ) + ( RCSe + RRSe ) ) ) )", "obj1": 0.6257309941520468, "obj2": 0.2658505834297188}, {"determining": "( ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( MUC - MUC ) - MUM ) - ( MUM / CS ) ) )", "obj1": 0.7758284600389863, "obj2": 0.11988349520342197}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( ( ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) + ACS ) / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + CS ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.9688109161793372, "obj2": 0.0184404542644271}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( DS ,( MLU * MLU ) ) ) ,MUR ) + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.935672514619883, "obj2": 0.02884523518902939}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( ( CS + ( CS - ( RMSe * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.6159844054580896, "obj2": 0.27526333595196834}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( ( ( MRS - FirstVNF_Mem ) + FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) ) - ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( MUC ,RMSe ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.9434697855750487, "obj2": 0.025038931316630677}, {"determining": "( ( ( ( Max( ACS,RRS ) / ( ( RRS * Const ) - ( PN * DDR ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) * ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Min( DS ,RMSe ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( RRSe * ( RMSe - MUR ) ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.44834307992202727, "obj2": 0.47875757418699083}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( Max( RRS,Const ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Max( CRS,( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( MLU ,RRSe ) + Max( ( MUC + ( DS * ( DS * CS ) ) ),CS ) ) ,( MLU - Max( Max( ( ( CS / ( Min( DS ,MUR ) - MUC ) ) + DS ),MUM ),RMSe ) ) )", "obj1": 0.5263157894736842, "obj2": 0.3730097750146572}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.3489278752436647, "obj2": 0.6233386723725569}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,Max( Const,Const ) ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + MUR ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.34307992202729043, "obj2": 0.639841071645081}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3898635477582846, "obj2": 0.5693852139328478}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( ( DS * CS ) * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5497076023391813, "obj2": 0.33942107572425434}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / Max( FirstVNF_Mem_Server,Max( Const,Const ) ) ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( RMSe / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7252941204736609}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUR - MLU ) + ( MUC - ( ( ( MLU * ( MUC / CS ) ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3567251461988304, "obj2": 0.6135819288928486}, {"determining": "( ( Max( ( Max( DDR,MRS ) * MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( ( ( MUC - Min( ( Max( RCSe,MUM ) / RCSe ) ,( RCSe / MUR ) ) ) - MUM ),MUM ) ) )", "obj1": 0.7680311890838206, "obj2": 0.12948062005364283}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.556981887877208}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server / RRS ) / ( Max( FirstVNF_CPU,Const ) + ( RRS - FirstVNF_RAM ) ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( AMS,( ( PN / MDR ) + ( FirstVNF_RAM_Server / ( ARS * ACS ) ) ) ) - ( Max( Const,MDR ) * PN ) ) ) ) - Min( FirstVNF_Mem ,Max( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ),( MDR * CRS ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( Min( ( Max( ( RCSe * RMSe ),( RRSe / RMSe ) ) * ( CS / ( MUC + RCSe ) ) ) ,RRSe ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( FirstVNF_CPU - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Min( MLU ,RRSe ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( Min( MLU ,RRSe ) - ( MUM + CS ) ) ) ) + ( MLU * ( Min( ( MUR - CS ) ,MUM ) / Min( MUC ,CS ) ) ) ) ) + RMSe ) )", "obj1": 0.3586744639376218, "obj2": 0.6098196023106031}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( MUC + MLU ) - DS ) - Min( RCSe ,( MLU / RRSe ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.8265107212475633, "obj2": 0.08271169157247558}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.2269695557947371}, {"determining": "( Max( CRS,( ( CRS / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ),RCSe ) )", "obj1": 0.6939571150097466, "obj2": 0.2015100303876072}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / ( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.4834307992202729, "obj2": 0.43017227703283456}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.5107212475633528, "obj2": 0.3903710170640034}, {"determining": "( ( ACS + Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM_Server * ( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + RRSe ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.4191033138401559, "obj2": 0.5209371782666229}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + Min( ( ( RCSe * RCSe ) - MUM ) ,RRSe ) ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.6627680311890838, "obj2": 0.2350492712705627}, {"determining": "( ( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( Max( ( ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) * ( Max( Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ),MDR ) * ( MDR / PN ) ) ),PN ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( Min( MUM ,MUR ) + ( DS * Min( RMSe ,RRSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),RMSe ) )", "obj1": 0.571150097465887, "obj2": 0.3202848850330812}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_Mem_Server + MDR ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( Min( AMS ,BR ) / FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( PN,FirstVNF_CPU_Server ) + ACS ) ) - ( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / ( ( MUM * DS ) - RRSe ) ) ,Min( ( CS / RRSe ) ,MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.31154910022481314}, {"determining": "( Max( Min( Min( MRS ,( FirstVNF_CPU_Server - ARS ) ) ,DDR ),( ( PN / ( Max( FirstVNF_RAM,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( PN / MDR ) )", "choosing": "Max( ( MLU - Min( ( MUC * ( RRSe + RCSe ) ) ,DS ) ),Max( ( RMSe + ( ( Min( ( MUR - CS ) ,MUM ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) * ( Max( ( MUC / MLU ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUC / MUR ) + MUR ) ) ) ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.590640762158252}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / PN ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - AMS )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,( RRSe / CS ) )", "obj1": 0.9902534113060428, "obj2": 0.004539594514816491}, {"determining": "( ( MDR / PN ) - ( DDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( CS * RRSe ) - RRSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.5947191384893378}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( MDR / PN ) / ( MDR / PN ) ) ),MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( DS / Max( DS,( MUM + RRSe ) ) ) ) + CS ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( MDR / ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.19123335793473478}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ) + PN ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Max( MLU,Min( Min( RCSe ,CS ) ,( MLU * ( RMSe - DS ) ) ) ) / MLU ),MLU ) )", "obj1": 0.49317738791423, "obj2": 0.4192885545451359}, {"determining": "( ( Max( RRS,Const ) + ( ( Max( CRS,Max( ( BR + FirstVNF_CPU ),Max( FirstVNF_CPU_Server,ACS ) ) ) - ( MDR / PN ) ) + Max( PN,MDR ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.9083820662768031, "obj2": 0.043541472007119233}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( ( Max( ( ( PN / ( ARS * ( ( FirstVNF_Mem / PN ) + Max( RRS,MRS ) ) ) ) - MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( ( ( ( CS + MLU ) + ( Max( ( ( DS / MUR ) + Min( DS ,RMSe ) ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ),MUM ) ) )", "obj1": 0.8011695906432749, "obj2": 0.09702636674298887}, {"determining": "( ( PN + ( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ) - MRS ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( ( CS - ( RMSe * CS ) ) - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.7582846003898636, "obj2": 0.13687473132694572}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.41130604288499023, "obj2": 0.5359859385514963}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.488782933557531}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.5029239766081871, "obj2": 0.39868840565721664}, {"determining": "( Max( CRS,( ( CRS + RRS ) + ( MDR / ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) - ( ACS / MDR ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * Min( DS ,CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21552353258345858}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( ACS,RRS ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( MUM ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.6335282651072125, "obj2": 0.2630067225370712}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6752058890960095}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7816764132553606, "obj2": 0.11394487250708571}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_Mem ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe / RMSe ) ) ,Max( Max( MLU,MUC ),( MUC - MLU ) ) ),MUM ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6649982018986964}, {"determining": "( Max( Min( ( MDR * FirstVNF_CPU ) ,DDR ),( ( BR / ( Max( FirstVNF_RAM,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - Min( ( MUC * ( RRSe + RCSe ) ) ,DS ) ),Max( ( RMSe - ( ( Min( ( MUR - CS ) ,MUM ) * MLU ) / CS ) ),Max( MUM,RCSe ) ) )", "obj1": 0.6861598440545809, "obj2": 0.20885495565162754}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( ( MDR / PN ) - ( BR - Const ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( PN * PN ) ),( ( PN / MDR ) + ACS ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.7173489278752436, "obj2": 0.17897905807189649}, {"determining": "( ( MDR / PN ) - ( BR - Const ) )", "choosing": "( Max( RRSe,MUM ) + ( DS + ( Min( ( Max( RCSe,MUM ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( ( DS / RCSe ),( MLU / MUC ) ) - MUR ) ),CS ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6981281601447012}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ARS ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),RMSe ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.7056530214424951, "obj2": 0.18712350397284389}, {"determining": "( ( Max( ( Max( DDR,MRS ) * MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( ( ( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) / Max( RCSe,RRSe ) ) ) ) ) - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,( MUM - Min( Min( RRSe ,Min( DS ,RMSe ) ) ,( CS * MUC ) ) ) ),MUM ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13133780062862566}, {"determining": "( ( ( ( ( CRS / FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,Max( Const,Const ) ) ) / MDR ) + FirstVNF_RAM ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + MUR ) ) ) + RMSe ) ) ) )", "obj1": 0.43079922027290446, "obj2": 0.5096231509901269}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + FirstVNF_CPU ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.557504873294347, "obj2": 0.3367304051329506}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + Max( ( ( DS - CS ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ),MUR ) ) ) / ( Min( MLU ,Min( Max( MUC,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) )", "obj1": 0.8538011695906432, "obj2": 0.06942658499479995}, {"determining": "( ( PN + ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( ( Min( ACS ,( MDR / BR ) ) * FirstVNF_CPU ) * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_CPU ) ),MDR ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( DS,( MUM + RRSe ) ) ) ) + CS ) + RMSe ) ) / Min( MUC ,RMSe ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,CRS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( ( ( ( DS / MUR ) + Min( DS ,MUR ) ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) - MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5420478868443861}, {"determining": "( ( Max( CRS,Max( ( Const * ACS ),BR ) ) + ( ( PN / ( AMS + Min( RRS ,FirstVNF_RAM ) ) ) + ( Max( CRS,( Max( PN,MDR ) / ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( Min( Max( ( PN - FirstVNF_CPU ),( FirstVNF_CPU - DDR ) ) ,MDR ),FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7043239264627478}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7816764132553606, "obj2": 0.11394487250708571}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3820662768031189, "obj2": 0.5774532430986286}, {"determining": "( ( CRS * ( ( ( ( Max( MDR,MDR ) - FirstVNF_Mem_Server ) - ( ( PN / MRS ) - Max( ( MRS - MDR ),Min( FirstVNF_CPU_Server ,PN ) ) ) ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU - ACS ) ) ) - ( FirstVNF_RAM / PN ) )", "choosing": "Min( ( CS * Max( MLU,( ( MLU * RRSe ) - MUC ) ) ) ,( MUR * CS ) )", "obj1": 0.38596491228070173, "obj2": 0.5708464634617477}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR - MUR ) )", "obj1": 0.5146198830409356, "obj2": 0.3885686765400959}, {"determining": "( ( Max( CRS,( Min( ( FirstVNF_Mem_Server * ACS ) ,MRS ) + ( ( PN * ( ( ARS - RRS ) + CRS ) ) / FirstVNF_RAM_Server ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.4249512670565302, "obj2": 0.5129387900728376}, {"determining": "( ( ( ( ( PN / PN ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM_Server ,ARS ) + PN ) ) * FirstVNF_Mem ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( MLU * ( Min( ( MUR - CS ) ,MUM ) / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6873515341239453}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * RCSe ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) + Max( CS,MLU ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.27716402999009604}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( ( ( ( MDR / PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( MDR,PN ) / ( MRS - PN ) ) ) - Min( ( ACS / FirstVNF_CPU_Server ) ,MDR ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( Min( Max( CS,MUM ) ,MUC ),( RMSe + ( Min( MLU ,Min( Max( ( RRSe * RRSe ),( MUM * CS ) ) ,RRSe ) ) / MUC ) ) ) )", "obj1": 0.9727095516569201, "obj2": 0.012616383667352255}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( ACS * FirstVNF_Mem ) ),Min( ( RRS - FirstVNF_Mem_Server ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( BR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( ( RMSe * ( MLU + MUM ) ) - CS ) ),( MUC / RMSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.8421052631578947, "obj2": 0.07286432544309505}, {"determining": "( ( Max( RRS,( ( Min( Const ,( Max( BR,PN ) + AMS ) ) / ( Min( ( ARS * FirstVNF_Mem ) ,( BR / BR ) ) * FirstVNF_CPU ) ) + FirstVNF_RAM ) ) + ( CRS + ( Max( CRS,( ( PN / MDR ) + ( ( PN * PN ) / FirstVNF_RAM_Server ) ) ) - Max( CRS,( ( PN / ( PN / AMS ) ) + Max( MRS,ARS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RMSe + Max( ( ( DS - CS ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ),MUR ) ) ) / ( Min( MLU ,Min( Max( MUC,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) )", "obj1": 0.8518518518518519, "obj2": 0.0703277552567537}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / ( ( FirstVNF_Mem * FirstVNF_CPU ) / CRS ) ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( ( FirstVNF_CPU - ACS ) / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MLU + RMSe ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7218053543023706}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.4405458089668616, "obj2": 0.48937949714256895}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( MUM,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.033521263247452256}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / PN ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / ( MLU + ( ( CS + MLU ) + RRSe ) ) ),( ( Max( MUM,( Min( RMSe ,( MUR + MUR ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.9824561403508771, "obj2": 0.00829746912792695}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( MRS,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + MDR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * ( ( MUC * MUR ) / Max( RMSe,( RRSe * MUR ) ) ) ) ) + ( MUC - ( ( MLU + ( ( RRSe / CS ) * MLU ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5029239766081871, "obj2": 0.39868840565721664}, {"determining": "( Min( ( ( Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) - ( MDR / PN ) ) + ACS ) ,( Max( CRS,( PN + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( ( Max( DS,MLU ) - RCSe ) * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8791423001949318, "obj2": 0.058057133120068556}, {"determining": "( Max( CRS,( ( Max( ( MRS * FirstVNF_RAM ),PN ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.42300194931773877, "obj2": 0.5174120219554657}, {"determining": "( ( ( ( PN * PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Const / Max( FirstVNF_CPU,MRS ) ) + Max( MRS,Min( Const ,FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( ( DS * ( DS * CS ) ) ,RRSe ) ) ) + ( RCSe - ( ( MLU + ( ( RRSe / CS ) * ( RRSe - RCSe ) ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.7543859649122807, "obj2": 0.14006527068887062}], "45": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( PN * PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Const / Max( FirstVNF_CPU,MRS ) ) + Max( MRS,Min( Const ,FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,FirstVNF_RAM ) - ( FirstVNF_Mem_Server / PN ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MUM + CS ) ) ) ) / ( ( RMSe * MLU ) + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + MRS ) - ( DDR - ( MDR / PN ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( ( ( Min( ( CS * DS ) ,DS ) * ( MLU - MUM ) ) + DS ) - ( ( MLU / ( MLU * MUR ) ) * RCSe ) ) * MUR ),MLU ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUM,( Min( RMSe ,( MUR + MUR ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6432748538011696, "obj2": 0.24583568680092496}, {"determining": "( Max( Min( ( MDR * FirstVNF_CPU ) ,DDR ),( ( RRS / ( Max( FirstVNF_RAM,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( MLU - Min( ( MUC * ( RRSe + RCSe ) ) ,DS ) ),Max( ( RMSe - ( ( Min( ( MUC - CS ) ,MUM ) * MLU ) / CS ) ),Max( MUM,RCSe ) ) )", "obj1": 0.7368421052631579, "obj2": 0.15734140111246883}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.6627680311890838, "obj2": 0.22972660828303068}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( ACS * ARS ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( RRSe + ( MUC / MLU ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.8187134502923976, "obj2": 0.0867498500045457}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM_Server ,ARS ) + PN ) ) * FirstVNF_Mem ) ) ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),MLU ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.580896686159844, "obj2": 0.3077016332662824}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,( CS + MLU ) ) ) ) ,( MUR - MUR ) )", "obj1": 0.543859649122807, "obj2": 0.34922945205395284}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( ( FirstVNF_CPU_Server / CRS ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( Min( Max( MUC,CS ) ,( MLU / DS ) ) ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.7290448343079922, "obj2": 0.16503740870839786}, {"determining": "( ( Max( CRS,( Min( ( FirstVNF_Mem_Server * ACS ) ,MRS ) + ( ( PN * ( ( ARS - RRS ) + CRS ) ) / FirstVNF_RAM_Server ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.4346978557504873, "obj2": 0.5043243671222353}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.556981887877208}, {"determining": "( Max( Min( Min( MRS ,( FirstVNF_CPU_Server - ARS ) ) ,DDR ),( ( PN / ( Max( FirstVNF_RAM,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( PN / MDR ) )", "choosing": "Max( ( MLU - Min( ( MUC * ( RRSe + RCSe ) ) ,DS ) ),Max( ( RMSe + ( ( Min( ( MUR - CS ) ,MUM ) * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) * ( Max( ( MUC / MLU ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUC / MUR ) + MUR ) ) ) ) ) ) )", "obj1": 0.3762183235867446, "obj2": 0.590640762158252}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( MDR * Max( ( MDR * PN ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Max( ( MLU / MUC ),( MUC + MLU ) ),( MUM + ( MUC + ( DS * ( DS * CS ) ) ) ) ) ,MUR ) )", "obj1": 0.5692007797270955, "obj2": 0.33077542306734126}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ARS ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),RMSe ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.7056530214424951, "obj2": 0.1869940253733086}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( CS - ( RMSe * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.8401559454191033, "obj2": 0.07382033575612416}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( MDR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * Max( Min( ( MUR - CS ) ,MUM ),MLU ) ) ) ) ,MUR ) )", "obj1": 0.38791423001949316, "obj2": 0.5681316732332711}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( ( PN + ( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Max( CS,MUM ) / ( ( DS * MLU ) - RCSe ) ) )", "obj1": 0.8576998050682261, "obj2": 0.0677941735926768}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ) + PN ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Max( MLU,Min( Min( RCSe ,CS ) ,( MLU * ( RMSe - DS ) ) ) ) / MLU ),MLU ) )", "obj1": 0.49317738791423, "obj2": 0.4165191652569827}, {"determining": "( ( ( ( ( PN / PN ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM_Server ,ARS ) + PN ) ) * FirstVNF_Mem ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( MUC ,RMSe ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.32943469785575047, "obj2": 0.6611672755664567}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server / RRS ) / ( Max( FirstVNF_CPU,Const ) + ( RRS - FirstVNF_RAM ) ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( AMS,( ( PN / MDR ) + ( FirstVNF_RAM_Server / ( ARS * ACS ) ) ) ) - ( Max( Const,MDR ) * PN ) ) ) ) - Min( FirstVNF_Mem ,Max( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ),( MDR * CRS ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( Min( ( Max( ( RCSe * RMSe ),( RRSe / RMSe ) ) * ( CS / ( MUC + RCSe ) ) ) ,RRSe ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( FirstVNF_CPU - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Min( MLU ,RRSe ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( Min( MLU ,RRSe ) - ( MUM + CS ) ) ) ) + ( MLU * ( Min( ( MUR - CS ) ,MUM ) / Min( MUC ,CS ) ) ) ) ) + RMSe ) )", "obj1": 0.3586744639376218, "obj2": 0.6098196023106031}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( ( DS * CS ) * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5497076023391813, "obj2": 0.33942107572425434}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( CS - ( RMSe * CS ) ) ) ,RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6338306879522806}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.7914230019493177, "obj2": 0.10452842924273716}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4756335282651072, "obj2": 0.44489283846230565}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.33723196881091616, "obj2": 0.6459685889465511}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM_Server ,ARS ) + PN ) ) * FirstVNF_Mem ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe / RCSe ) ) ,Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) ),MUM ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7112065209521617}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( DDR + BR ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( BR,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,Min( MUR ,CS ) ) - CS ) ,( ( Max( ( ( MLU + ( DS / RRSe ) ) + MUR ),( DS * Min( MLU ,RRSe ) ) ) * Min( Min( MLU ,( ( ( RCSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.557504873294347, "obj2": 0.33269644916583496}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUR - MLU ) + ( MUC - ( ( ( MLU * ( MUC / CS ) ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3567251461988304, "obj2": 0.6135819288928486}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Max( FirstVNF_Mem,Min( ( MDR / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( DS * Min( MLU ,RRSe ) ) ),RMSe ) ),( ( MUM - Max( RMSe,MUC ) ) + MUC ) ) )", "obj1": 0.6257309941520468, "obj2": 0.26566626477910815}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / PN ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - AMS )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,( RRSe / CS ) )", "obj1": 0.9902534113060428, "obj2": 0.004539594514816491}, {"determining": "( ( MDR / PN ) - ( DDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( CS * RRSe ) - RRSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.5947191384893378}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Max( CRS,Min( ACS ,BR ) ) / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,MLU ) ) - ( MUM / CS ) ) )", "obj1": 0.723196881091618, "obj2": 0.17555501687896966}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( ( ACS - FirstVNF_Mem ) - ( BR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + MUM ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * DS ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) ,Max( ( ( MLU + MLU ) * Max( CS,Max( RCSe,MUR ) ) ),Max( MUM,( ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) + Max( CS,MLU ) ) ) ) )", "obj1": 0.6198830409356725, "obj2": 0.27348209227408843}, {"determining": "( ( PN + ( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) + ACS ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( ( DS * MLU ) / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017525913832033165}, {"determining": "( ( ( ( PN * PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU / MUC ),( RRSe / Max( DS,( MLU + RMSe ) ) ) ) / ( MUC / Min( MUC ,CS ) ) )", "obj1": 0.7543859649122807, "obj2": 0.14006527068887062}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.4405458089668616, "obj2": 0.48937949714256895}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN / MDR ) + CRS ) ) - ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) )", "choosing": "Max( MUR,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( RRSe,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.9103313840155945, "obj2": 0.0418913772978217}, {"determining": "( ( ( ( PN * PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Const / Max( FirstVNF_CPU,MRS ) ) + Max( MRS,Min( Const ,FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( ( DS * ( DS * CS ) ) ,RRSe ) ) ) + ( RCSe - ( ( MLU + ( ( RRSe / CS ) * ( RRSe - RCSe ) ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.7543859649122807, "obj2": 0.14006527068887062}, {"determining": "( ( Max( ( ( PN / ( ARS * ( ( FirstVNF_Mem / PN ) + Max( RRS,MRS ) ) ) ) - MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.8011695906432749, "obj2": 0.09702636674298887}, {"determining": "( ( Max( CRS,( Min( ( FirstVNF_Mem_Server * ACS ) ,MRS ) + ( ( PN * ( ( ARS - RRS ) + CRS ) ) / FirstVNF_RAM_Server ) ) ) + ( ( PN / MDR ) + ( Max( ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ),( ( PN / MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ) )", "obj1": 0.42884990253411304, "obj2": 0.5090334058044318}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.44834307992202727, "obj2": 0.47875757418699083}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_CPU * DDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( ( Min( Min( PN ,FirstVNF_CPU ) ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) * ARS ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR * CS ),( DS - ( ( MUC - MUM ) * ( ( MUC / RMSe ) + RMSe ) ) ) )", "obj1": 0.8265107212475633, "obj2": 0.08271169157247558}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( DS ,( MLU * MLU ) ) ) ,MUR ) + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.935672514619883, "obj2": 0.02884523518902939}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM_Server ,ARS ) + PN ) ) * FirstVNF_Mem ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,( PN / MDR ) ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ) ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6967534951277807}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_Mem ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe / RMSe ) ) ,Max( Max( MLU,MUC ),( MUC - MLU ) ) ),MUM ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6649982018986964}, {"determining": "( ( ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / CRS ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( ( ( AMS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) - RRS ) ) ) ) + ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( DS * Max( CS,RRSe ) ) / ( Min( MLU ,RCSe ) + MLU ) )", "obj1": 0.3508771929824561, "obj2": 0.6232754173988522}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,CRS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( ( ( ( DS / MUR ) + Min( DS ,MUR ) ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) - MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5420478868443861}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( ( PN / ( ARS * ( ( FirstVNF_Mem / PN ) + Max( RRS,MRS ) ) ) ) - MDR ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / MUC ) + RMSe ) ) ) ,Max( Min( DS ,RMSe ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.7719298245614035, "obj2": 0.12357546115871708}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ( MDR / ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21552353258345858}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.2269695557947371}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( MUC + MLU ) - DS ) - Min( RCSe ,( MLU / RRSe ) ) ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.8265107212475633, "obj2": 0.08271169157247558}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( ( ( ( CS + MLU ) + ( Max( ( ( DS / MUR ) + Min( DS ,RMSe ) ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + MUR ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4756335282651072, "obj2": 0.44489283846230565}, {"determining": "( ( Max( RRS,FirstVNF_RAM_Server ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Min( ACS ,BR ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( CS,MLU ) + RRSe ) ,Max( ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,Max( CS,( ( ( RCSe + CS ) / MUR ) / RCSe ) ) ),MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3157950584203946}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( ( MDR / PN ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( Max( Min( CS ,( Max( ( DS / RCSe ),( MLU / MUC ) ) - MUR ) ),CS ) ,( ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.29239766081871343, "obj2": 0.7198228227907575}, {"determining": "( ( ( ( Max( ACS,RRS ) / ( ( RRS * Const ) - ( PN * DDR ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) * ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Min( DS ,RMSe ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( RRSe * ( RMSe - MUR ) ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.44834307992202727, "obj2": 0.47875757418699083}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.3996101364522417, "obj2": 0.5492043103105175}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6752058890960095}, {"determining": "( ( ( ( ( PN / PN ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM_Server ,ARS ) + PN ) ) * FirstVNF_Mem ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( MLU * ( Min( ( MUR - CS ) ,MUM ) / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6873515341239453}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_Mem_Server + MDR ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( Min( AMS ,BR ) / FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( PN,FirstVNF_CPU_Server ) + ACS ) ) - ( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / ( ( MUM * DS ) - RRSe ) ) ,Min( ( CS / RRSe ) ,MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.31154910022481314}, {"determining": "( ( ACS + Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM_Server * ( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + RRSe ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.4191033138401559, "obj2": 0.5209371782666229}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( MUR - MUR ) )", "obj1": 0.5146198830409356, "obj2": 0.3885686765400959}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + Min( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) ,( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - Min( MDR ,FirstVNF_RAM ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( MLU / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( ( MLU / MUC ) + RMSe ),( MUC + ( DS * ( DS * CS ) ) ) ) ) ,Max( MUC,MUR ) )", "obj1": 0.7816764132553606, "obj2": 0.11394487250708571}, {"determining": "( ( Max( CRS,Max( ( Const * ACS ),BR ) ) + ( ( PN / ( AMS + Min( RRS ,FirstVNF_RAM ) ) ) + ( Max( CRS,( Max( PN,MDR ) / ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( Min( Max( ( PN - FirstVNF_CPU ),( FirstVNF_CPU - DDR ) ) ,MDR ),FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.530214424951267, "obj2": 0.3679757761038442}, {"determining": "( ( Max( ( Max( DDR,MRS ) * MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / Min( ( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ,FirstVNF_CPU ) ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Max( Max( ( RMSe - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( ( ( MUC - Min( ( Max( RCSe,MUM ) / RCSe ) ,( RCSe / MUR ) ) ) - MUM ),MUM ) ) )", "obj1": 0.7680311890838206, "obj2": 0.12948062005364283}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( Max( MRS,FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( MDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUM + ( DS * ( DS * CS ) ) ),( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * RRSe ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) + Max( CS,MLU ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.27716402999009604}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( ( MLU + RCSe ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7816764132553606, "obj2": 0.11394487250708571}, {"determining": "( ( ( ( ( PN / PN ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM_Server ,ARS ) + PN ) ) * FirstVNF_Mem ) ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( MLU * ( Min( ( MUR - CS ) ,MUM ) / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6873515341239453}, {"determining": "( ( ( ( PN * ( Max( Max( BR,MDR ),FirstVNF_Mem ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( MUC + MLU ) - DS ) - Min( RCSe ,( MLU / RRSe ) ) ) ) ) + ( ( MUC - MUM ) * ( ( RMSe / RMSe ) + RMSe ) ) ) ) / ( MUC + RMSe ) )", "obj1": 0.8518518518518519, "obj2": 0.06997109378364041}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( PN / MDR ) ) / ( BR + ARS ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6881091617933723, "obj2": 0.20534733489595972}, {"determining": "( Max( CRS,( ( CRS + RRS ) + ( MDR / ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) - ( ACS / MDR ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * Min( DS ,CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21552353258345858}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( ( DS * ( DS * CS ) ) ,RRSe ) ) ) + ( RCSe - ( ( MLU + ( ( RRSe / CS ) * ( RRSe - RCSe ) ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3820662768031189, "obj2": 0.5774532430986286}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / ( ( FirstVNF_Mem * FirstVNF_CPU ) / CRS ) ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( ( FirstVNF_CPU - ACS ) / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( ( DS * ( DS * CS ) ) ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.30214424951267055, "obj2": 0.6972250933462361}, {"determining": "( ( ( ( ( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / ( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( ( MUR - DS ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.40350877192982454, "obj2": 0.5486251115643133}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( ( ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) + ACS ) / PN ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + CS ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.9707602339181286, "obj2": 0.017484443951397977}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Max( RRS,PN ) / ( MRS - PN ) ) ) - Min( FirstVNF_Mem ,( Max( ( BR - FirstVNF_CPU ),( ( FirstVNF_Mem_Server * CRS ) + FirstVNF_RAM_Server ) ) + PN ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( Min( Max( CS,MUM ) ,MUC ),( RMSe + ( Min( MLU ,Min( Max( MUC,Min( CS ,MUC ) ) ,MUR ) ) / MUC ) ) ) )", "obj1": 0.9727095516569201, "obj2": 0.012616383667352255}, {"determining": "( ( Const - PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( Min( Max( ( MUR - CS ),RRSe ) ,MUR ) * DS ) / ( MLU + RMSe ) ) / Min( DS ,( MLU + ( RRSe + ( CS + MLU ) ) ) ) ) ) / ( ( ( ( MUR + ( CS / RRSe ) ) * CS ) + MUR ) / Min( MUC ,CS ) ) )", "obj1": 0.5536062378167641, "obj2": 0.3366196721067587}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( BR + FirstVNF_RAM ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUC ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6842105263157895, "obj2": 0.21020629234795118}, {"determining": "( Max( CRS,( ( CRS / MDR ) + ( Max( CRS,( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ),RCSe ) )", "obj1": 0.9337231968810916, "obj2": 0.03303137592328777}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( RRSe ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.5029239766081871, "obj2": 0.39868840565721664}, {"determining": "( Max( ( PN / ( ( FirstVNF_Mem * FirstVNF_CPU ) / CRS ) ),( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) + ACS ) ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUM,( Min( RMSe ,( MUR + CS ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,MUC ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.9980506822612085, "obj2": 0.0008252333648507869}], "46": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Max( RRS,( ( FirstVNF_Mem_Server / PN ) / FirstVNF_CPU ) ) * FirstVNF_CPU ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ACS ) )", "choosing": "( Max( ( ( Max( MUM,( Min( RRSe ,CS ) * RRSe ) ) + ( Min( RMSe ,MUC ) * Min( MLU ,DS ) ) ) + RMSe ),MLU ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN * PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Const / Max( FirstVNF_CPU,MRS ) ) + Max( MRS,Min( Const ,FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Min( Const ,Const ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.8693957115009746, "obj2": 0.06176357154385659}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.6627680311890838, "obj2": 0.22972660828303068}, {"determining": "( ( Max( CRS,Max( ( Const * ACS ),BR ) ) + ( ( PN / ( AMS + Min( RRS ,FirstVNF_RAM ) ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_RAM_Server ,( ( Max( ( ARS * FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / DS ) ,Max( MUC,CS ) ) )", "obj1": 0.9454191033138402, "obj2": 0.02646141215798456}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Min( Max( ( RRS - ( FirstVNF_Mem * ACS ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( CS + ( CS - ( RMSe * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) )", "obj1": 0.8401559454191033, "obj2": 0.07382033575612416}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server / RRS ) / ( Max( FirstVNF_CPU,Const ) + ( RRS - FirstVNF_RAM ) ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( AMS,( ( PN / MDR ) + ( FirstVNF_RAM_Server / ( ARS * ACS ) ) ) ) - ( Max( Const,MDR ) * PN ) ) ) ) - Min( FirstVNF_Mem ,Max( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ),( MDR * CRS ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( Min( ( Max( ( RCSe * RMSe ),( RRSe / RMSe ) ) * ( CS / ( MUC + RCSe ) ) ) ,RRSe ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( Max( MRS,FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( BR + MDR ) / FirstVNF_RAM_Server ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUM + ( DS * ( DS * CS ) ) ),( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * RRSe ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) + Max( CS,MLU ) ) ) ) )", "obj1": 0.5964912280701754, "obj2": 0.30758669170893527}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( ( ACS + Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM_Server * ( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + RRSe ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.4191033138401559, "obj2": 0.5209371782666229}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUM,( Min( RMSe ,( MUR + MUR ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6432748538011696, "obj2": 0.24583568680092496}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6603516377104774}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( ( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( ( MLU + ( DS / RRSe ) ) + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.7504873294346979, "obj2": 0.14510372835468788}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.33723196881091616, "obj2": 0.6459685889465511}, {"determining": "( ( ( ( ARS / Max( ACS,RRS ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_Mem ) ) ) + ( FirstVNF_Mem * RRS ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( ( MUC + ( DS * Min( ( ( RMSe - CS ) + Min( MUR ,RMSe ) ) ,CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ,( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) * Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.7134502923976608, "obj2": 0.1810923761387313}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Max( PN,AMS ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RMSe * MLU ) ) + CS ) ) + RMSe ) )", "obj1": 0.3723196881091618, "obj2": 0.5904404471849217}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( Min( RCSe ,( RMSe * DS ) ) + MUR ) / Min( RMSe ,( MUR + MUR ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.7368421052631579, "obj2": 0.1572865610613935}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( ( FirstVNF_CPU_Server - RRS ) * MDR ) - Max( MDR,PN ) )", "choosing": "( Max( Max( MUC,( MUC - ( MUM / Min( ( RMSe * RMSe ) ,( RMSe - MUC ) ) ) ) ),( ( Min( Max( RCSe,( Min( MUM ,MUC ) + RRSe ) ) ,( RCSe + ( ( MUM - RCSe ) / MLU ) ) ) / ( MLU * ( DS - CS ) ) ) + RMSe ) ) / ( RMSe + RCSe ) )", "obj1": 0.47368421052631576, "obj2": 0.4446145518588321}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( CS - ( RMSe * CS ) ) ) ,RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6338306879522806}, {"determining": "( ( ( ( PN * ( Max( Max( BR,MDR ),FirstVNF_Mem ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Max( CS,MUM ) - ( RCSe * ( ( ( MUC + MLU ) - RRSe ) - Min( RCSe ,( MLU / RRSe ) ) ) ) ) + ( ( MUC - MUM ) * ( ( RMSe / RMSe ) + RMSe ) ) ) ) / ( MUC + RMSe ) )", "obj1": 0.9824561403508771, "obj2": 0.008178018767679249}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( PN / MDR ) ) / ( BR + ARS ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6881091617933723, "obj2": 0.20534733489595972}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( CRS + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.5126705653021443, "obj2": 0.38834687398525264}, {"determining": "( ( MDR / PN ) - Max( Min( ( MRS * FirstVNF_RAM ) ,( FirstVNF_RAM * ( FirstVNF_CPU * AMS ) ) ),( PN + DDR ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( Max( DS,RRSe ) - ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,Min( ( MUM * Min( MUM ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4678362573099415, "obj2": 0.4522111639619306}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),CRS ) ) / ( MDR * Max( ( MDR * PN ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Max( CS,CS ) ,RRSe ) ,Min( Max( Max( ( MLU / MUC ),( MUC + MLU ) ),( MUM + ( MUC + ( DS * ( DS * CS ) ) ) ) ) ,MUR ) )", "obj1": 0.571150097465887, "obj2": 0.3255720502328482}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUM,( Min( RMSe ,( MUR + MUR ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( DS + MUC ) )", "obj1": 0.6432748538011696, "obj2": 0.24583568680092496}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) + ( Max( CS,CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7641325536062378, "obj2": 0.13170665306780988}, {"determining": "( ( ( ( ( ARS / ( ( ( CRS + CRS ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( ( CS + CS ) ,( MLU * MLU ) ) ) ,MUR ) + ( ( DS * CS ) * DS ) ),( ( CS / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.9298245614035088, "obj2": 0.03157362049007953}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,CRS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( ( ( ( DS / MUR ) + Min( DS ,MUR ) ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) - MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5420478868443861}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( ( Max( RRS,FirstVNF_RAM_Server ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Min( ACS ,BR ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( CS,MLU ) + RRSe ) ,Max( ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,Max( CS,( ( ( RCSe + CS ) / MUR ) / RCSe ) ) ),MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3157950584203946}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( CRS * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * Max( CRS,Const ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( ( DS * CS ) * RRSe ) ) + ( MUC - ( ( ( ( RRSe / MUM ) + MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.4269005847953216, "obj2": 0.5116015194876343}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( ( Max( Min( ( MDR * FirstVNF_CPU ) ,DDR ),( ( RRS / ( Max( FirstVNF_RAM,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( BR,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( MLU ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUM ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.5614035087719298, "obj2": 0.3286143720798192}, {"determining": "( ( Max( CRS,( Min( ( FirstVNF_Mem_Server * ACS ) ,MRS ) + ( ( PN * ( ( ARS - RRS ) + CRS ) ) / FirstVNF_RAM_Server ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.4346978557504873, "obj2": 0.5043243671222353}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( BR * ACS ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.29434697855750486, "obj2": 0.7092646022889866}, {"determining": "( ( Max( CRS,Max( ( Const * ACS ),BR ) ) + ( ( PN / ( AMS + Min( RRS ,FirstVNF_RAM ) ) ) + ( Max( CRS,( Max( PN,MDR ) / ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( Min( Max( ( PN - FirstVNF_CPU ),( FirstVNF_CPU - DDR ) ) ,MDR ),FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.530214424951267, "obj2": 0.3679757761038442}, {"determining": "( ( ACS + Min( ( FirstVNF_RAM_Server + CRS ) ,FirstVNF_RAM_Server ) ) - ( Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) - ( Max( Max( BR,MDR ),FirstVNF_Mem ) / ( PN * Min( DDR ,Max( PN,( Min( AMS ,BR ) + MRS ) ) ) ) ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( MLU + RMSe ) ) / Min( DS ,( MLU + ( ( ( RCSe * DS ) + MLU ) * ( ( RMSe / RMSe ) + RMSe ) ) ) ) ) ) / ( ( ( ( MUR + ( CS / RRSe ) ) * CS ) + MUR ) / Min( MUC ,CS ) ) )", "obj1": 0.2982456140350877, "obj2": 0.7026562808603114}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM ,RRS ) + PN ) ) * BR ) ) ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Max( ( MLU / MUC ),( MUC + MLU ) ),( MUM + ( MUC + ( Min( RMSe ,RCSe ) / ( DS * CS ) ) ) ) ) ,MUR ) )", "obj1": 0.580896686159844, "obj2": 0.3077016332662824}, {"determining": "( ( ( ( Max( PN,PN ) / MDR ) + ( ( CRS - ( Min( FirstVNF_CPU ,BR ) + FirstVNF_CPU ) ) - ACS ) ) - ( ( FirstVNF_Mem / PN ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( Min( ( Max( RMSe,Max( Min( RRSe ,MUR ),( RCSe + CS ) ) ) - Min( ( ( RMSe * RMSe ) + Min( RCSe ,MLU ) ) ,MUM ) ) ,MUM ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( ( MLU / RMSe ) + RMSe ),( MUC + ( DS * ( DS * CS ) ) ) ) ) ,Max( Min( MUR ,( MLU * ( Min( CS ,MUM ) / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.7017543859649122, "obj2": 0.1918324333154668}, {"determining": "( ( PN + ( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) + ACS ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( ( DS * MLU ) / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017525913832033165}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.4405458089668616, "obj2": 0.48937949714256895}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN / MDR ) + CRS ) ) - ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,( CS + MLU ) ) ) ) ,( MUR - MUR ) )", "obj1": 0.9103313840155945, "obj2": 0.0418913772978217}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / PN ) ) ) ) - Const )", "choosing": "Min( MUC ,Min( ( Max( MLU,( ( DS * CS ) * Min( MLU ,RRSe ) ) ) + ( ( MLU / MUC ) - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.41130604288499023, "obj2": 0.5343456597426255}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * PN ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,( DS - ( Max( RMSe,RMSe ) * ( ( RMSe / RMSe ) + RMSe ) ) ) )", "obj1": 0.7563352826510721, "obj2": 0.13925281068119044}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( Max( CRS,( ( MDR / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),MUR ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.27680311890838205, "obj2": 0.7334573643629778}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUR - MLU ) + ( MUC - ( ( ( MLU * ( MUC / CS ) ) + CS ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.683730930444323}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Max( FirstVNF_Mem,Min( ( MDR / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( DS * Min( MLU ,RRSe ) ) ),RMSe ) ),( ( MUM - Max( RMSe,MUC ) ) + MUC ) ) )", "obj1": 0.6296296296296297, "obj2": 0.26420011670001725}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / ( ( FirstVNF_Mem * FirstVNF_CPU ) / CRS ) ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( ( FirstVNF_CPU - ACS ) / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( ( DS * ( DS * CS ) ) ,RRSe ) ) ) + ( MUC - ( ( ( ( RRSe / CS ) * MLU ) + MLU ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7234840288027085}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,MRS ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( CS + ( DS * ( DS * CS ) ) ),( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * RCSe ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) + Max( CS,MLU ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.27716402999009604}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( FirstVNF_RAM * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( Min( Max( MUC,Max( MUC,DS ) ) ,( MLU / DS ) ) ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.6101364522417154, "obj2": 0.2867954647266548}, {"determining": "( ( Max( ( ( PN / ( ARS * ( ( FirstVNF_Mem / PN ) + MDR ) ) ) - MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / Max( MUC,( MUM + CS ) ) ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09787269695386722}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.2269695557947371}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUR - MLU ) + ( MUC - ( ( ( MLU * ( MUC / CS ) ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3567251461988304, "obj2": 0.6135819288928486}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,( CS + MLU ) ) ) ) ,( MUR - MUR ) )", "obj1": 0.5399610136452242, "obj2": 0.35203085567144865}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( ( DS * ( DS * CS ) ) ,RRSe ) ) ) + ( RCSe - ( ( MLU + ( ( RRSe / CS ) * ( RRSe - RCSe ) ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3820662768031189, "obj2": 0.5774532430986286}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( ( ( ( CS + MLU ) + ( Max( ( ( DS / MUR ) + Min( DS ,RMSe ) ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( MDR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * Max( Min( ( MUR - CS ) ,MUM ),MLU ) ) ) ) ,MUR ) )", "obj1": 0.38791423001949316, "obj2": 0.5681316732332711}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,( DS - ( ( MUC - MUM ) * ( ( RMSe / RMSe ) + RMSe ) ) ) )", "obj1": 0.8265107212475633, "obj2": 0.08271169157247558}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( BR + FirstVNF_RAM ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUC ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6842105263157895, "obj2": 0.21020629234795118}, {"determining": "( ( ( ( PN * ( ( ( Max( ACS,RRS ) / ARS ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,Min( ( PN / MDR ) ,CRS ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,( ( ( RRSe / CS ) * Max( MUR,RMSe ) ) + MLU ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.7777777777777778, "obj2": 0.11884177773519294}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + ( RRS - FirstVNF_RAM ) ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( AMS,( ( PN / MDR ) + ( FirstVNF_RAM_Server / ( ARS * ACS ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Max( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ),( MDR * CRS ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.3489278752436647, "obj2": 0.6319009733467096}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ),PN ),( ( PN / ( ( FirstVNF_CPU_Server / CRS ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( Max( ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ),( ( MLU / MUC ) + RMSe ) ) ,MUR ) )", "obj1": 0.7251461988304093, "obj2": 0.16956730026438138}, {"determining": "( ( MDR / PN ) - ( DDR - FirstVNF_Mem_Server ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( CS * RRSe ) - RRSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.5947191384893378}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.7914230019493177, "obj2": 0.10452842924273716}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Max( FirstVNF_Mem,Min( ( MDR / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( DS * Min( MLU ,RRSe ) ) ),RMSe ) ),( ( MUM - Max( RMSe,MUC ) ) + MUC ) ) )", "obj1": 0.6257309941520468, "obj2": 0.26566626477910815}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.3996101364522417, "obj2": 0.5492043103105175}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( Max( ACS,BR ),( BR + FirstVNF_RAM ) ) ) ) / MDR ) + ( MDR / ( ( MRS - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.7680311890838206, "obj2": 0.12751635607379516}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_Mem_Server + MDR ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( Min( AMS ,BR ) / FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( PN,FirstVNF_CPU_Server ) + ACS ) ) - ( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / ( ( MUM * DS ) - RRSe ) ) ,Min( ( CS / RRSe ) ,MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.31154910022481314}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( DDR + BR ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( BR,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RCSe ,Min( MUR ,CS ) ) - CS ) ,( ( Max( ( ( MLU + ( DS / RRSe ) ) + MUR ),( DS * Min( MLU ,RRSe ) ) ) * Min( Min( MLU ,( ( ( RCSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.557504873294347, "obj2": 0.33269644916583496}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Max( CRS,Min( ACS ,BR ) ) / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,MLU ) ) - ( MUM / CS ) ) )", "obj1": 0.723196881091618, "obj2": 0.17555501687896966}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * ( ( ( FirstVNF_CPU + BR ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( ACS + BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( MUC + Max( ( DS * MUC ),CS ) ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.34515532229262463}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.556981887877208}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.35282651072124754, "obj2": 0.6208797970869936}, {"determining": "( ( ( PN / FirstVNF_Mem ) + ( ( PN / MDR ) + ( ( MDR / PN ) - Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + Min( ( CRS - MRS ) ,( PN + ARS ) ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( ( ( MLU - RCSe ) * ( RRSe * RMSe ) ) * MUM ) * Min( Min( MLU ,( ( ( MUR - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( RMSe / Min( CS ,RRSe ) ) ) )", "obj1": 0.38596491228070173, "obj2": 0.5769289202707707}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.39571150097465885, "obj2": 0.556981887877208}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - RMSe ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6752058890960094}, {"determining": "( ( ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / CRS ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( ( ( AMS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) - RRS ) ) ) ) + ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( DS * Max( CS,RRSe ) ) / ( Min( MLU ,RCSe ) + MLU ) )", "obj1": 0.3508771929824561, "obj2": 0.6232754173988522}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_CPU * DDR ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( ( Min( Min( PN ,FirstVNF_CPU ) ,Min( FirstVNF_Mem_Server ,Min( BR ,FirstVNF_Mem_Server ) ) ) * ARS ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR * CS ),( DS - ( ( MUC - MUM ) * ( ( MUC / RMSe ) + RMSe ) ) ) )", "obj1": 0.8265107212475633, "obj2": 0.08271169157247558}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.44834307992202727, "obj2": 0.47875757418699083}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( DDR - ( MDR / PN ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( MUC,CS ) ,( MLU / DS ) ) )", "obj1": 0.9668615984405458, "obj2": 0.01581386564302095}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUC / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09219978054430018}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.7914230019493177, "obj2": 0.10452842924273716}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * DS ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) + Max( CS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.39868840565721664}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.5224171539961013, "obj2": 0.3715593603056316}], "47": [{"determining": "( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( MLU ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUM ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Max( RRS,( ( FirstVNF_Mem_Server / PN ) / FirstVNF_CPU ) ) * FirstVNF_CPU ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ACS ) )", "choosing": "( Max( ( ( Max( MUM,( Min( RRSe ,CS ) * RRSe ) ) + ( Min( RMSe ,MUC ) * Min( MLU ,DS ) ) ) + RMSe ),MLU ) / ( DS + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),( RRSe - ( MUR / ( RRSe + RCSe ) ) ) ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUC ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Max( CRS,Max( ( Const * ACS ),BR ) ) + ( ( PN / ( AMS + Min( RRS ,FirstVNF_RAM ) ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_RAM_Server ,( ( Max( ( ARS * FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / DS ) ,Max( MUC,CS ) ) )", "obj1": 0.9454191033138402, "obj2": 0.02646141215798456}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUR - MLU ) + ( MUC - ( ( ( MLU * ( MUC / CS ) ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3567251461988304, "obj2": 0.6135819288928486}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8713450292397661, "obj2": 0.06086240128190286}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( MUM / Max( ( ( ( RMSe / ( CS - DS ) ) / ( RMSe * RCSe ) ) / RRSe ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( ( MUC / MLU ) * Max( ( CS - ( MUM / MUM ) ),( ( MLU / Max( RCSe,MUR ) ) / ( RMSe / MUR ) ) ) ) - MUM ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22689361889763426}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) ) ,( ( ( MUM - ( Max( ( ( DS * CS ) - ( DS / DS ) ),CS ) * RMSe ) ) * Min( Min( RMSe ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6441921073026784}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( BR + FirstVNF_RAM ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUC ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21496280149320818}, {"determining": "( ( PN + ( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) + ACS ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( ( DS * MLU ) / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.9629629629629629, "obj2": 0.017525913832033165}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( ( ACS + Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM_Server * ( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + RRSe ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.4191033138401559, "obj2": 0.5209371782666229}, {"determining": "( ( ( ( BR * ( ( ( ( FirstVNF_Mem * FirstVNF_CPU ) * ACS ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( MRS ,FirstVNF_CPU ) - ARS ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Max( ( ( Max( MUM,CS ) + ( ( CS * RMSe ) / RRSe ) ) * MLU ),RCSe ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MLU + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,( ( ( RRSe / CS ) * Max( MUR,RMSe ) ) + MLU ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.7816764132553606, "obj2": 0.11420512805479935}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server / RRS ) / ( Max( FirstVNF_CPU,Const ) + ( RRS - FirstVNF_RAM ) ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( AMS,( ( PN / MDR ) + ( FirstVNF_RAM_Server / ( ARS * ACS ) ) ) ) - ( Max( Const,MDR ) * PN ) ) ) ) - Min( FirstVNF_Mem ,Max( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ),( MDR * CRS ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( Min( ( Max( ( RCSe * RMSe ),( RRSe / RMSe ) ) * ( CS / ( MUC + RCSe ) ) ) ,RRSe ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / Max( MDR,MDR ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( RRS / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( MDR + FirstVNF_Mem_Server ) / Max( ACS,BR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS - RMSe ) ,( ( MUM / Min( MLU ,RRSe ) ) - Min( RCSe ,Max( MLU,RRSe ) ) ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,MRS ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( MUC,CS ) ,( MLU / DS ) ) )", "obj1": 0.6159844054580896, "obj2": 0.2753616894661885}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),CRS ) ) / ( MDR * Max( ( MDR * PN ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Max( CS,CS ) ,RRSe ) ,Min( Max( Max( ( MLU / MUC ),( MUC + MLU ) ),( MUM + ( MUC + ( DS * ( DS * CS ) ) ) ) ) ,MUR ) )", "obj1": 0.571150097465887, "obj2": 0.3255720502328482}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( CRS + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.5126705653021443, "obj2": 0.38834687398525264}, {"determining": "( ( FirstVNF_Mem_Server * Min( ARS ,( DDR - ( AMS + ( FirstVNF_RAM - CRS ) ) ) ) ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) )", "choosing": "Max( CS,( ( MUM + RCSe ) * MLU ) )", "obj1": 0.4873294346978557, "obj2": 0.42255916237535945}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( DDR - ( MDR / PN ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - Max( ( MLU / MUC ),( MUC + MLU ) ) ) + CS ) ) ,Min( Max( MUC,CS ) ,( MLU / DS ) ) )", "obj1": 0.8206627680311891, "obj2": 0.08875430060941183}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / ( ( MRS * FirstVNF_RAM_Server ) - ( PN / MDR ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( ( ( FirstVNF_CPU_Server + PN ) + MRS ) / PN ) )", "choosing": "Min( Min( RCSe ,RRSe ) ,Min( Max( ( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - CS ) * ( RCSe + ( MUC / Min( MUC ,MUM ) ) ) ) + RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.6549707602339181, "obj2": 0.2401803007292416}, {"determining": "( ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.9298245614035088, "obj2": 0.03157362049007953}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,( DS - ( ( MUC - MUM ) * ( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * DS ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07658906942348735}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.5497076023391813, "obj2": 0.3394210757242544}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( DS * RMSe ) / ( Min( MLU ,RCSe ) + MLU ) )", "obj1": 0.39571150097465885, "obj2": 0.5548029072356069}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( ( FirstVNF_CPU / DDR ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) + ( MDR / PN ) ) ) ) - Min( ( ( BR + MDR ) / FirstVNF_RAM_Server ) ,FirstVNF_Mem ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MUC / MLU ) + RMSe ) ) ) / Max( ( Min( Min( CS ,MUC ) ,( MUC / MUM ) ) / MUR ),MUR ) )", "obj1": 0.391812865497076, "obj2": 0.5627364784440799}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Const * ACS ) ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( CRS / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( RMSe ,( ( CS - DS ) * Min( MLU ,MUC ) ) ) ) ),( Min( DS ,MUC ) / MUC ) ) / MUC )", "obj1": 0.7270955165692008, "obj2": 0.1695080712595143}, {"determining": "( ( ( PN / MDR ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + Min( ( CRS - MRS ) ,( PN + FirstVNF_Mem ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MUC - MUM ) * ( ( RMSe / RMSe ) + RMSe ) ) ) * Min( Min( MLU ,( ( ( MUR - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - Min( RMSe ,Min( CS ,RRSe ) ) ) )", "obj1": 0.49122807017543857, "obj2": 0.4172262859456816}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( ( ACS * Const ),BR ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( ( Max( RRSe,MUR ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6729506534695295}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( MRS - AMS ) / MDR ) + ( Max( CRS,( ( MDR / PN ) / FirstVNF_RAM_Server ) ) - ( MDR / MDR ) ) ) ) - MDR )", "choosing": "Min( ( ( MUR * MUR ) + MUR ) ,( MUM / Max( Min( Max( MUC,Max( RCSe,DS ) ) ,MUR ),( RRSe / ( Max( ( ( MUC / MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ) ) ) )", "obj1": 0.5886939571150097, "obj2": 0.30161556068021406}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( Max( Max( ( FirstVNF_RAM * MDR ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( Max( ( ( ( CS + MLU ) + ( Max( ( MUM + Min( DS ,RMSe ) ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) + ( Max( ( DS * CS ),CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7446393762183235, "obj2": 0.1492965033557531}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( FirstVNF_CPU * BR ) - Const ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,RRSe ) ,MUR ) ) ) ,( Min( Max( MLU,RRSe ) ,RCSe ) - Max( MLU,RMSe ) ) )", "obj1": 0.5029239766081871, "obj2": 0.39868840565721664}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Max( CRS,Min( ACS ,BR ) ) / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.7153996101364523, "obj2": 0.18019120587677756}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.45614035087719296, "obj2": 0.4764291596238921}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM ,RRS ) + PN ) ) * BR ) ) ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Max( ( MLU / MUC ),( MUC + MLU ) ),( MUM + ( MUC + ( Min( RMSe ,RCSe ) / ( DS * CS ) ) ) ) ) ,MUR ) )", "obj1": 0.580896686159844, "obj2": 0.3077016332662824}, {"determining": "( ( ( ( ( PN / PN ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( FirstVNF_Mem / PN ) + CRS ) ) - ( MDR / Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( Max( MUM,( Min( RMSe ,( MUR + CS ) ) / ( CS * MLU ) ) ) + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( MLU * ( Min( CS ,MUM ) / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.5925925925925926, "obj2": 0.29892536207840975}, {"determining": "( ( PN + ( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.8538011695906432, "obj2": 0.06959651411658427}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6603516377104774}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( ( DS * ( DS * CS ) ) ,RRSe ) ) ) + ( RCSe - ( ( MLU + ( ( RRSe / CS ) * ( RRSe - RCSe ) ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3820662768031189, "obj2": 0.5774532430986286}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4444444444444444, "obj2": 0.48386351216685136}, {"determining": "( ( Max( ( ( PN / ( ARS * ( ( FirstVNF_Mem / PN ) + MDR ) ) ) - MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / Max( MUC,( MUM + CS ) ) ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09787269695386722}, {"determining": "( ( ( ( Max( ACS,( Max( ACS,RRS ) - ( MDR / PN ) ) ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( Min( PN ,MDR ) + ( FirstVNF_RAM_Server / Max( AMS,PN ) ) ) ) - ( MDR / PN ) ) ) ) - ( ( Const + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) / ( BR - Const ) ) )", "choosing": "( ( Max( Max( ( DS - MUR ),Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,( ( ( RRSe / MUR ) * Max( MUR,RMSe ) ) + MLU ) ) ) / ( DS + ( RRSe + RCSe ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6598893880768311}, {"determining": "( ( Max( CRS,Max( ( Const * ACS ),BR ) ) + ( ( PN / ( AMS + Min( RRS ,FirstVNF_RAM ) ) ) + ( Max( CRS,( Max( PN,MDR ) / ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( Min( Max( ( PN - FirstVNF_CPU ),( FirstVNF_CPU - DDR ) ) ,MDR ),FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.530214424951267, "obj2": 0.3679757761038442}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.6608187134502924, "obj2": 0.2306826185960598}, {"determining": "( ( ( Max( MRS,RRS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,( ( ( MUC + RMSe ) / ( MUC * ( ( ( RRSe + ( MUC - RRSe ) ) / CS ) - Min( MUM ,RRSe ) ) ) ) - ( ( Min( MLU ,RCSe ) + MLU ) * ( RMSe + ( RMSe / RMSe ) ) ) ) )", "obj1": 0.8460038986354775, "obj2": 0.07287338501753857}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( DS * Min( MLU ,RRSe ) ) ),RMSe ) ),( ( MUM - Max( RMSe,MUC ) ) + MUC ) ) )", "obj1": 0.8265107212475633, "obj2": 0.08271169157247558}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,RRSe )", "obj1": 0.9785575048732943, "obj2": 0.010034738660076406}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6432748538011696, "obj2": 0.24583568680092496}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( DDR - ( MDR / PN ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( MUC,CS ) ,( MLU / DS ) ) )", "obj1": 0.9688109161793372, "obj2": 0.014857855329991834}, {"determining": "( Max( Max( ( ( Max( CRS,( ( BR / BR ) + FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( ( PN / ( ( FirstVNF_Mem * FirstVNF_CPU ) / CRS ) ) + ( Max( AMS,BR ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) + ACS ) ) - ( ( FirstVNF_CPU - ACS ) / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),RMSe ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.3079922027290448, "obj2": 0.6905804751551702}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( RRSe / ( DS - ( MUM + CS ) ) ) / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.6491228070175439, "obj2": 0.24226657797977735}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,MRS ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( CS + ( DS * ( DS * CS ) ) ),( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * RCSe ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) + Max( CS,MLU ) ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( ( Max( CRS,( Min( ( FirstVNF_Mem_Server * ACS ) ,MRS ) + ( ( PN * ( ( ARS - RRS ) + CRS ) ) / FirstVNF_RAM_Server ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Max( ( RRSe + ( MUC / MLU ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,( MLU * ( MUC / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.4249512670565302, "obj2": 0.5129387900728376}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) )", "obj1": 0.42884990253411304, "obj2": 0.5086713970363389}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( ( FirstVNF_CPU_Server - RRS ) * MDR ) - Max( MDR,PN ) )", "choosing": "( Max( Max( MUC,( MUC - ( MUM / Min( ( RMSe * RMSe ) ,( RMSe - MUC ) ) ) ) ),( ( Min( Max( RCSe,( Min( MUM ,MUC ) + RRSe ) ) ,( RCSe + ( ( MUM - RCSe ) / MLU ) ) ) / ( MLU * ( DS - CS ) ) ) + RMSe ) ) / ( RMSe + RCSe ) )", "obj1": 0.47368421052631576, "obj2": 0.4446145518588321}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUR - MLU ) + ( MUC - ( ( ( MLU * ( MUC / CS ) ) + CS ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.683730930444323}, {"determining": "( ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( DS ,( MLU * MLU ) ) ) ,MUR ) + ( DS * ( DS * CS ) ) ),( ( RRSe / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( MUM - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.9044834307992202, "obj2": 0.04367449819157449}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( ( DS * ( DS * CS ) ) ,DS ) ) ) + ( RCSe - ( ( MLU + ( ( RRSe / CS ) * ( RRSe - RCSe ) ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.6900584795321637, "obj2": 0.20054502279664616}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * DS ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) + Max( CS,MLU ) ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.39868840565721664}, {"determining": "( ( MDR / PN ) - Max( Min( ( MRS * FirstVNF_RAM ) ,( FirstVNF_RAM * ( FirstVNF_CPU * AMS ) ) ),( PN + DDR ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( Max( DS,RRSe ) - ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,Min( ( MUM * Min( MUM ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4678362573099415, "obj2": 0.4522111639619306}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_Mem_Server + MDR ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( Min( AMS ,BR ) / FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( PN,FirstVNF_CPU_Server ) + ACS ) ) - ( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / ( ( MUM * DS ) - RRSe ) ) ,Min( ( CS / RRSe ) ,MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.31154910022481314}, {"determining": "( ( Max( ARS,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server * MDR ) / MDR ) + ( Max( CRS,Min( ACS ,BR ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / FirstVNF_Mem ) + RRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,Min( ( RCSe * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) ,Max( Min( MUM ,( MUR / ( RRSe - RMSe ) ) ),MLU ) )", "obj1": 0.7076023391812866, "obj2": 0.18815621414545658}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( MDR + FirstVNF_RAM ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * Max( Min( ( MUR - CS ) ,MUM ),MLU ) ) ) ) ,MUR ) )", "obj1": 0.38791423001949316, "obj2": 0.5681316732332711}, {"determining": "( Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) - ( MDR / PN ) )", "choosing": "( ( ( MLU - ( RMSe * DS ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15633055074836433}, {"determining": "( ( PN + ( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ) - Max( ( Const - ACS ),( AMS * FirstVNF_RAM ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( CS - ( RMSe * CS ) ) ,RMSe ) )", "obj1": 0.8538011695906432, "obj2": 0.06959651411658427}, {"determining": "( ( Max( RRS,FirstVNF_RAM_Server ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Min( ACS ,BR ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( CS,MLU ) + RRSe ) ,Max( ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,Max( CS,( ( ( RCSe + CS ) / MUR ) / RCSe ) ) ),MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3157950584203946}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5146198830409356, "obj2": 0.3859562107799428}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.35282651072124754, "obj2": 0.6208797970869936}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( PN / MDR ) ) / ( BR + ARS ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6881091617933723, "obj2": 0.20534733489595972}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( FirstVNF_RAM * MRS ),PN ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUC / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.8109161793372319, "obj2": 0.09107424236477688}, {"determining": "( ( ( Max( PN,MRS ) - ( FirstVNF_Mem / ACS ) ) - MDR ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( ( MUC - MUC ) - Min( ( RMSe + Max( RRSe,RMSe ) ) ,( RCSe * ( Min( MUM ,CS ) * MUM ) ) ) ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.38596491228070173, "obj2": 0.5727067348693166}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ACS ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( FirstVNF_Mem_Server + ARS ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUR ,Max( ( ( CS * ( MLU - RCSe ) ) * MUM ),MUC ) )", "obj1": 0.40545808966861596, "obj2": 0.5430038971574153}, {"determining": "( ( ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / CRS ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( ( ( AMS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) - RRS ) ) ) ) + ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( DS * Max( CS,RRSe ) ) / ( Min( MLU ,RCSe ) + MLU ) )", "obj1": 0.3508771929824561, "obj2": 0.6232754173988522}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( RRSe,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.3469576628165322}, {"determining": "( ( Max( RRS,( ( FirstVNF_Mem_Server / PN ) / FirstVNF_CPU ) ) * FirstVNF_CPU ) - ( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) / ACS ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.28654970760233917, "obj2": 0.719134133570989}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU - Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.37816764132553604, "obj2": 0.5837015525185109}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * ( ( ( FirstVNF_CPU + BR ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( ACS + BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( ( ( CS + MLU ) + ( Max( ( ( DS / MUR ) + Min( DS ,RMSe ) ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ),MUM ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5003812211056561}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,CRS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( ( ( ( DS / MUR ) + Min( DS ,MUR ) ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) - MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5420478868443861}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.4405458089668616, "obj2": 0.48937949714256895}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( CS - ( RMSe * CS ) ) ) ,RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6338306879522806}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / FirstVNF_CPU ) ) ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( DS * RMSe ) / ( Min( MUC ,RCSe ) + MLU ) )", "obj1": 0.2807017543859649, "obj2": 0.7280924155154087}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( CRS + BR ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( BR,FirstVNF_CPU ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( RCSe ,Min( MUR ,CS ) ) ,CS ) ,( ( Max( ( ( MLU + ( DS / RRSe ) ) + MUR ),( DS * Min( MLU ,RRSe ) ) ) * ( MUR + DS ) ) - ( MUM / CS ) ) )", "obj1": 0.4756335282651072, "obj2": 0.438435206507371}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Max( FirstVNF_Mem,Min( ( MDR / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( DS * Min( MLU ,RRSe ) ) ),RMSe ) ),( ( MUM - Max( RMSe,MUC ) ) + MUC ) ) )", "obj1": 0.6257309941520468, "obj2": 0.26566626477910815}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) / Max( ( FirstVNF_CPU - FirstVNF_Mem_Server ),BR ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( PN / MDR ) + CRS ) ) - ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe * ( ( DS / MLU ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,( CS + MLU ) ) ) ) ,( MUR - MUR ) )", "obj1": 0.9103313840155945, "obj2": 0.0418913772978217}], "48": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU - RRS ) ),Const ) - ( Max( ( FirstVNF_CPU - ( Const - FirstVNF_CPU_Server ) ),ACS ) / PN ) )", "choosing": "( Max( RRSe,( ( ( ( ( RMSe * MUR ) + Min( RMSe ,MUC ) ) - Max( ( MUR + Max( CS,MUR ) ),CS ) ) * ( ( MUR - MUC ) / RRSe ) ) - MLU ) ) + ( DS + ( Min( ( Max( RCSe,MUC ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( ( DS / RCSe ),( MLU / MUC ) ) - MUR ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( MRS * FirstVNF_RAM ),PN ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( MLU ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUM ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) * Max( ( MDR * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,MRS ) ) ) ) + ACS ) ) - Min( PN ,( AMS / PN ) ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( CS + ( DS * ( DS * CS ) ) ),( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * RCSe ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RMSe ) + MUR ) ) ) + Max( CS,MLU ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) + ( Max( ( DS * MUM ),CS ) * Min( MLU ,RRSe ) ) ) / RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7816764132553606, "obj2": 0.11394487250708568}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( Max( ACS,RRS ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( ( DS * ( DS * CS ) ) ,DS ) ) ) + ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ) ,RRSe ) )", "obj1": 0.7699805068226121, "obj2": 0.12603805617728422}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - Max( FirstVNF_Mem,Min( ( MDR / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( DS * Min( MLU ,RRSe ) ) ),RMSe ) ),( ( MUM - Max( RMSe,MUC ) ) + MUC ) ) )", "obj1": 0.6257309941520468, "obj2": 0.26566626477910815}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( CS - ( RMSe * CS ) ) ) ,RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6338306879522806}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8713450292397661, "obj2": 0.06086240128190286}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.9298245614035088, "obj2": 0.03157362049007953}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,( DS - ( ( MUC - MUM ) * ( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * DS ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07658906942348735}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( DS * RMSe ) / ( Min( MLU ,RCSe ) + MLU ) )", "obj1": 0.39571150097465885, "obj2": 0.5548029072356069}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( MUM / Max( ( ( ( RMSe / ( CS - DS ) ) / ( RMSe * RCSe ) ) / RRSe ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( ( MUC / MLU ) * Max( ( CS - ( MUM / MUM ) ),( ( MLU / Max( RCSe,MUR ) ) / ( RMSe / MUR ) ) ) ) - MUM ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22689361889763426}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( Max( ( ( PN / ( ARS * ( ( FirstVNF_Mem / PN ) + MDR ) ) ) - MDR ),( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) - Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( ( CS + MLU ) + ( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / RRSe ) + MUR ) ) ) ) ,Max( ( Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) + ( DS * ( DS * CS ) ) ),( ( ( MLU / ( RCSe + RCSe ) ) / Max( MUC,( MUM + CS ) ) ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),Min( Max( ( CS + ( CS - ( ( DS - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09787269695386722}, {"determining": "( ( ACS + Min( ( FirstVNF_RAM_Server + PN ) ,FirstVNF_RAM_Server ) ) - ( FirstVNF_RAM_Server * ( AMS + FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + RRSe ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.4191033138401559, "obj2": 0.5209371782666229}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( ( Max( RRS,FirstVNF_CPU ) + ( ( ( MDR * FirstVNF_RAM_Server ) / ( Const - FirstVNF_RAM_Server ) ) + ( Max( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ),Min( ACS ,BR ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( Max( MUM,MLU ),MLU ) + RRSe ) ,Max( ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR / CS ) ,MUM ),MLU ) )", "obj1": 0.7621832358674464, "obj2": 0.1337178112055079}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( MDR + FirstVNF_CPU ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * Max( Min( ( MUR - CS ) ,MUM ),Min( RCSe ,( RMSe * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 0.40545808966861596, "obj2": 0.5402835006582458}, {"determining": "( Max( CRS,( ( MDR / Min( ( Const / FirstVNF_RAM ) ,ACS ) ) + ACS ) ) - ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / AMS ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( RRSe / MLU ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6829257725087772}, {"determining": "( Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( RRSe,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.15824257137442255}, {"determining": "( ( MDR / PN ) - Max( Min( ( MRS * FirstVNF_RAM ) ,( FirstVNF_RAM * ( FirstVNF_CPU * AMS ) ) ),( PN + DDR ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( Max( DS,RRSe ) - ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,Min( ( MUM * Min( MUM ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4678362573099415, "obj2": 0.4522111639619306}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( ARS - ARS ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Min( MLU ,Max( ( MLU / MUC ),( CS - CS ) ) ) + MLU ) / ( MLU / RMSe ) )", "obj1": 0.40350877192982454, "obj2": 0.5456207970547121}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + PN ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( DS * Min( MLU ,RRSe ) ) ),RMSe ) ),( ( MUM - Max( RMSe,( CS / ( MUC + RCSe ) ) ) ) + MUC ) ) )", "obj1": 0.8187134502923976, "obj2": 0.08652640345214749}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) ) ,( ( ( MUM - ( Max( ( ( DS * CS ) - ( DS / DS ) ),CS ) * RMSe ) ) * Min( Min( RMSe ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6441921073026784}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / Max( MDR,MDR ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( RRS / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( MDR + FirstVNF_Mem_Server ) / Max( ACS,BR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS - RMSe ) ,( ( MUM / Min( MLU ,RRSe ) ) - Min( RCSe ,Max( MLU,RRSe ) ) ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),CRS ) ) / ( MDR * Max( ( MDR * PN ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Min( Max( CS,CS ) ,RRSe ) ,Min( Max( Max( ( MLU / MUC ),( MUC + MLU ) ),( MUM + ( MUC + ( DS * ( DS * CS ) ) ) ) ) ,MUR ) )", "obj1": 0.571150097465887, "obj2": 0.3255720502328482}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( PN + ( ( ( Max( PN,MDR ) - MDR ) / MDR ) - Max( ( Const - ACS ),( AMS * FirstVNF_RAM ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / MLU ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( CS - ( RMSe * CS ) ) ,RMSe ) )", "obj1": 0.8557504873294347, "obj2": 0.06869534385463054}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.45419103313840153, "obj2": 0.48134447115502593}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Max( CRS,Min( ACS ,BR ) ) / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( RRSe,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.7153996101364523, "obj2": 0.1791921427831894}, {"determining": "( ( PN + ( Max( PN,( MRS * FirstVNF_RAM ) ) - Max( ( Const - ACS ),( AMS * FirstVNF_RAM ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( RMSe + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( CS - ( RMSe * CS ) ) ,RMSe ) )", "obj1": 0.9922027290448343, "obj2": 0.0036590604163046266}, {"determining": "( ( ( PN / MDR ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + Min( ( CRS - MRS ) ,( PN + FirstVNF_Mem ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MUC - MUM ) * ( ( RMSe / RMSe ) + RMSe ) ) ) * Min( Min( MLU ,( ( ( MUR - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - Min( RMSe ,Min( CS ,RRSe ) ) ) )", "obj1": 0.49122807017543857, "obj2": 0.4172262859456816}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * ( ( ( FirstVNF_CPU + BR ) / FirstVNF_RAM_Server ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN / FirstVNF_RAM ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ) )", "choosing": "Max( Max( ( ( ( CS + MLU ) + ( Max( ( ( DS / MUR ) + Min( DS ,RMSe ) ),( MUC + MLU ) ) / ( MUM + CS ) ) ) - RMSe ),RCSe ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ),MUM ) ) )", "obj1": 0.4853801169590643, "obj2": 0.43305372658128416}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,RRSe ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.5224171539961013, "obj2": 0.3706151051419747}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( MUM - MLU ),( DS * Min( ( DS * ( DS * CS ) ) ,RRSe ) ) ) + ( RCSe - ( ( MLU + ( ( RRSe / CS ) * ( RRSe - RCSe ) ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.36257309941520466, "obj2": 0.6116311006261806}, {"determining": "( ( Max( CRS,Max( ( Const * ACS ),BR ) ) + ( ( PN / ( AMS + Min( RRS ,FirstVNF_RAM ) ) ) + ( Max( CRS,( Max( PN,MDR ) / ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( Min( Max( ( PN - FirstVNF_CPU ),( FirstVNF_CPU - DDR ) ) ,MDR ),FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.530214424951267, "obj2": 0.3679757761038442}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Const * ACS ) ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( CRS / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( RMSe ,( ( CS - DS ) * Min( MLU ,MUC ) ) ) ) ),( Min( DS ,MUC ) / MUC ) ) / MUC )", "obj1": 0.7270955165692008, "obj2": 0.1695080712595143}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * MDR ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( MLU ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ),( DS - ( ( Min( MLU ,RCSe ) + MLU ) * ( ( RMSe / RMSe ) + RMSe ) ) ) )", "obj1": 0.7524366471734892, "obj2": 0.14274913139794418}, {"determining": "( ( ( PN / MDR ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + Min( ( CRS - MRS ) ,( PN + FirstVNF_Mem ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.4873294346978557, "obj2": 0.4219784095295815}, {"determining": "( ( ( FirstVNF_CPU_Server - RRS ) * MDR ) - Max( MDR,PN ) )", "choosing": "( Max( Max( MUC,( MUC - ( MUM / Min( ( RMSe * RMSe ) ,( RMSe - MUC ) ) ) ) ),( ( Min( Max( RCSe,( Min( MUM ,MUC ) + RRSe ) ) ,( RCSe + ( ( MUM - RCSe ) / MLU ) ) ) / ( MLU * ( DS - CS ) ) ) + RMSe ) ) / ( RMSe + RCSe ) )", "obj1": 0.47368421052631576, "obj2": 0.4446145518588321}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6432748538011696, "obj2": 0.24583568680092496}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),Min( RCSe ,Max( MLU,RRSe ) ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.45614035087719296, "obj2": 0.47266597565755225}, {"determining": "( ( ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / CRS ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( ( ( AMS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) - RRS ) ) ) ) + ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,FirstVNF_Mem ) )", "choosing": "( ( DS * Max( CS,RRSe ) ) / ( Min( MLU ,RCSe ) + MLU ) )", "obj1": 0.3508771929824561, "obj2": 0.6232754173988522}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( MRS - AMS ) / MDR ) + ( Max( CRS,( ( MDR / PN ) / FirstVNF_RAM_Server ) ) - ( MDR / MDR ) ) ) ) - MDR )", "choosing": "Min( ( ( MUR * MUR ) + MUR ) ,( MUM / Max( Min( Max( MUC,Max( RCSe,DS ) ) ,MUR ),( RRSe / ( Max( ( ( MUC / MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ) ) ) )", "obj1": 0.5886939571150097, "obj2": 0.30161556068021406}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( FirstVNF_CPU * BR ) - Const ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,RRSe ) ,MUR ) ) ) ,( Min( Max( MLU,RRSe ) ,RCSe ) - Max( MLU,RMSe ) ) )", "obj1": 0.557504873294347, "obj2": 0.3326964491658349}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( ( ( CS - DS ) * Max( MLU,MUC ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.6608187134502924, "obj2": 0.2306826185960598}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU - Min( ( ( CS + Max( MLU,RCSe ) ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.37037037037037035, "obj2": 0.5903185445894281}, {"determining": "( ( ( ( ( ( ( Max( AMS,CRS ) / ( FirstVNF_Mem_Server / Const ) ) / ( BR + ( BR + FirstVNF_RAM ) ) ) + MDR ) * PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( BR ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( Min( RRSe ,( Max( RMSe,DS ) + Min( RRSe ,MUR ) ) ) / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21496280149320818}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,MRS ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( MLU / DS ) ) )", "obj1": 0.6179337231968811, "obj2": 0.2745364561013377}, {"determining": "( ( ( ( PN * Max( ( ( ACS * ( PN / FirstVNF_RAM_Server ) ) / ( BR + ARS ) ),MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + ( Min( MUR ,RCSe ) - MUR ) ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.6861598440545809, "obj2": 0.2081171848666986}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + Min( ( ACS * ARS ) ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( MDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / RCSe ) + RMSe ) ) ) / Max( MLU,( Min( ( RMSe - ( MUM * ( DS * RMSe ) ) ) ,( MUC / MUM ) ) / MUR ) ) )", "obj1": 0.391812865497076, "obj2": 0.5626057014959015}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUR - MLU ) + ( MUC - ( ( ( MLU * ( MUC / CS ) ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3567251461988304, "obj2": 0.6135819288928486}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( CRS / MDR ) ) / ( BR + ARS ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.7563352826510721, "obj2": 0.13910926037584148}, {"determining": "( Min( FirstVNF_Mem ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( Max( MDR,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( ( RMSe + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ) )", "obj1": 0.43664717348927873, "obj2": 0.49790660024855615}, {"determining": "( ( Max( CRS,Max( ( Const * ACS ),BR ) ) + ( ( PN / ( AMS + Min( RRS ,FirstVNF_RAM ) ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_RAM_Server ,( ( Max( ( ARS * FirstVNF_Mem ),ARS ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / DS ) ,Max( MUC,CS ) ) )", "obj1": 0.9454191033138402, "obj2": 0.02646141215798456}, {"determining": "( ( Max( ARS,FirstVNF_CPU ) + ( ( ( FirstVNF_RAM_Server * MDR ) / MDR ) + ( Max( CRS,Min( ACS ,BR ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) / FirstVNF_Mem ) + RRS ) ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,Min( ( RCSe * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) ,Max( Min( MUM ,( MUR / ( RRSe - RMSe ) ) ),MLU ) )", "obj1": 0.7076023391812866, "obj2": 0.18815621414545658}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,RRSe )", "obj1": 0.9785575048732943, "obj2": 0.010034738660076406}, {"determining": "( ( ( ( Max( PN,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( Max( CRS,Min( ACS ,BR ) ) / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,PN ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,( DS - ( ( Min( Min( RRSe ,Min( MUC ,RRSe ) ) ,MLU ) + MLU ) * ( ( RMSe / RMSe ) + RMSe ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17729144874506178}, {"determining": "( Max( ( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( Max( ( RMSe + ( DS + CS ) ),( Min( RCSe ,CS ) / Max( DS,MLU ) ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( ( ( ( Max( ACS,( Max( ACS,RRS ) - ( MDR / PN ) ) ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( Min( PN ,MDR ) + ( FirstVNF_RAM_Server / Max( AMS,PN ) ) ) ) - ( MDR / PN ) ) ) ) - ( ( Const + Min( FirstVNF_Mem ,FirstVNF_RAM ) ) / ( BR - Const ) ) )", "choosing": "( ( Max( Max( ( DS - MUR ),Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,( ( ( RRSe / MUR ) * Max( MUR,RMSe ) ) + MLU ) ) ) / ( DS + ( RRSe + RCSe ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6598893880768311}, {"determining": "( ( Max( RRS,FirstVNF_CPU ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Min( ACS ,BR ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( MLU ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) ,Max( Min( ( MUR / CS ) ,MUM ),MLU ) )", "obj1": 0.7076023391812866, "obj2": 0.18815621414545658}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Max( ( ( MDR - FirstVNF_CPU_Server ) + FirstVNF_RAM ),Min( ( FirstVNF_RAM_Server + ACS ) ,BR ) ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU - RRSe ) ,( ( ( RCSe - Min( Min( CS ,RRSe ) ,RRSe ) ) / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) + ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) ) )", "obj1": 0.49707602339181284, "obj2": 0.4092277231217478}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( CRS + ( Max( ACS,FirstVNF_RAM ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.5107212475633528, "obj2": 0.39284198035757806}, {"determining": "( ( ( Max( PN,MRS ) - ( FirstVNF_Mem / ACS ) ) - MDR ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( ( MUC - MUC ) - Min( ( RMSe + Max( RRSe,RMSe ) ) ,( RCSe * ( Min( MUM ,CS ) * MUM ) ) ) ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.38596491228070173, "obj2": 0.5727067348693166}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( BR + FirstVNF_RAM ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUC ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21496280149320818}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.5009746588693957, "obj2": 0.40882196444832675}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( FirstVNF_RAM * MRS ),PN ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUC / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.8109161793372319, "obj2": 0.09107424236477688}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,RRSe )", "obj1": 0.9785575048732943, "obj2": 0.010034738660076406}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( Max( ( ( ( Min( CS ,MUR ) + MLU ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) / RRSe ),MLU ) + RRSe ) ,Max( ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.38791423001949316, "obj2": 0.5663513602770539}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_Mem_Server + MDR ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( Min( AMS ,BR ) / FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( PN,FirstVNF_CPU_Server ) + ACS ) ) - ( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / ( ( MUM * DS ) - RRSe ) ) ,Min( ( CS / RRSe ) ,MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.31154910022481314}, {"determining": "( ( Max( RRS,FirstVNF_RAM_Server ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Min( ACS ,BR ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( CS,MLU ) + RRSe ) ,Max( ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR - CS ) ,Max( CS,( ( ( RCSe + CS ) / MUR ) / RCSe ) ) ),MLU ) )", "obj1": 0.5730994152046783, "obj2": 0.3157950584203946}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ARS ) - Min( ACS ,Max( CRS,( PN + ( ( Const - FirstVNF_CPU_Server ) / ( MDR / PN ) ) ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( Max( ACS,RRS ) / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MUM ) + ( DS + ( Min( ( Max( RCSe,Min( Min( RCSe ,MUC ) ,Min( CS ,RMSe ) ) ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( Min( DS ,RCSe ),( MLU / DS ) ) - MUR ) ),CS ) ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17046408157254342}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( Min( ( ( DS - MUC ) * ( CS / ( MUC + RCSe ) ) ) ,RRSe ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.8265107212475633, "obj2": 0.08271169157247558}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5146198830409356, "obj2": 0.3859562107799428}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.35282651072124754, "obj2": 0.6208797970869936}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( RRSe / ( DS - ( MUM + CS ) ) ) / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.6491228070175439, "obj2": 0.24226657797977735}, {"determining": "( ( Min( RRS ,BR ) + ( ( PN / MDR ) + ( ( ( ( FirstVNF_CPU_Server / RRS ) + ( Max( BR,FirstVNF_Mem_Server ) / ( MDR + FirstVNF_Mem_Server ) ) ) / FirstVNF_Mem ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUR - Max( ( MUC - Min( MUM ,CS ) ),( RMSe - MUM ) ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.5497076023391813, "obj2": 0.3394210757242544}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / ( ( MRS * FirstVNF_RAM_Server ) - ( PN / MDR ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( ( ( FirstVNF_CPU_Server + PN ) + MRS ) / PN ) )", "choosing": "Min( Min( RCSe ,RRSe ) ,Min( Max( ( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - CS ) * ( RCSe + ( MUC / Min( MUC ,MUM ) ) ) ) + RRSe ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.6549707602339181, "obj2": 0.2401803007292416}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( Max( MUM,( Min( RMSe ,( MUR + CS ) ) / ( CS * MLU ) ) ) + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( MLU * ( Min( CS ,MUM ) / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.4444444444444444, "obj2": 0.48386351216685136}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server / RRS ) / ( Max( FirstVNF_CPU,Const ) + ( RRS - FirstVNF_RAM ) ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( AMS,( ( PN / MDR ) + ( FirstVNF_RAM_Server / ( ARS * ACS ) ) ) ) - ( Max( Const,MDR ) * PN ) ) ) ) - Min( FirstVNF_Mem ,Max( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ),( MDR * CRS ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( Min( ( Max( ( RCSe * RMSe ),( RRSe / RMSe ) ) * ( CS / ( MUC + RCSe ) ) ) ,RRSe ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( FirstVNF_CPU * BR ) - Const ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,RRSe ) ,MUR ) ) ) ,( Min( Max( MLU,RRSe ) ,RCSe ) - Max( MLU,RMSe ) ) )", "obj1": 0.557504873294347, "obj2": 0.3326964491658349}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem / FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / ( ACS * ( FirstVNF_CPU - BR ) ) ) ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( ( MLU + RRSe ) ,( Max( ( DS * RRSe ),Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,MUM ) ),MUM ) ) + ( MLU / ( Min( ( Max( Min( RCSe ,CS ),MUC ) / DS ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.7446393762183235, "obj2": 0.1492965033557531}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / ( ( MRS * FirstVNF_RAM_Server ) - ( PN / MDR ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( ( ( FirstVNF_CPU_Server + PN ) + MRS ) / PN ) )", "choosing": "( ( Max( Max( ( DS - MUR ),Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,( ( ( RRSe / MUR ) * Max( MUR,RMSe ) ) + MLU ) ) ) / ( DS + ( RRSe + RCSe ) ) )", "obj1": 0.9512670565302144, "obj2": 0.023392639420330215}, {"determining": "( ( MDR / PN ) - ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * Const ) ) / MDR ) + ( Max( RRS,MDR ) * ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM ) + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUM / RMSe ) ,Max( ( ( DS - CS ) - MUM ),Min( Max( ( CS + ( CS - ( ( MUM - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.9239766081871345, "obj2": 0.03442834839437856}, {"determining": "( MDR - ( Min( FirstVNF_CPU ,( MDR * Min( FirstVNF_CPU_Server ,MDR ) ) ) + RRS ) )", "choosing": "Min( Min( ( ( MLU + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * ( RMSe - ( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( ( Min( MUM ,( RCSe + CS ) ) - MUR ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.8109161793372319, "obj2": 0.09107424236477688}, {"determining": "( Min( FirstVNF_CPU ,( RRS / CRS ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( ( RRSe - ( MLU - Min( MUC ,Max( RRSe,CS ) ) ) ) + CS ) - ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) ) + RMSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6603516377104774}, {"determining": "( Max( MDR,ACS ) - Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( AMS / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( RRSe,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.3742690058479532, "obj2": 0.588892413656152}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) )", "obj1": 0.42884990253411304, "obj2": 0.5086713970363389}], "49": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( MDR,ACS ) - Max( Max( ( RRS * MRS ),PN ),( Max( MRS,Min( ( RRS / ( Max( FirstVNF_RAM_Server,MDR ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ,CRS ) ) + ( AMS / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( CS / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + ( RRSe * MUC ) ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( RRSe,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU - RRS ) ),Const ) - ( Max( ( FirstVNF_CPU - ( Const - FirstVNF_CPU_Server ) ),ACS ) / PN ) )", "choosing": "( Max( RRSe,( ( ( ( ( RMSe * MUR ) + Min( RMSe ,MUC ) ) - Max( ( MUR + Max( CS,MUR ) ),CS ) ) * ( ( MUR - MUC ) / RRSe ) ) - MLU ) ) + ( DS + ( Min( ( Max( RCSe,MUC ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( ( DS / RCSe ),( MLU / MUC ) ) - MUR ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( Max( CRS,( ( PN / MDR ) + ( Max( FirstVNF_CPU,RRS ) / FirstVNF_RAM_Server ) ) ) / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ARS * FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( ( RCSe + RCSe ) - Min( RMSe ,RCSe ) ),Min( Max( MUC,DS ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),( RRSe / ( DS - ( RMSe + CS ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Min( FirstVNF_Mem ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( Max( MDR,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( ( RMSe + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ) )", "obj1": 0.43664717348927873, "obj2": 0.49790660024855615}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8713450292397661, "obj2": 0.060862401281902845}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( MUM / Max( ( ( ( RMSe / ( CS - DS ) ) / ( RMSe * RCSe ) ) / RRSe ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( ( MUC / MLU ) * Max( ( CS - ( MUM / MUM ) ),( ( MLU / Max( RCSe,MUR ) ) / ( RMSe / MUR ) ) ) ) - MUM ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22689361889763426}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( CRS + ( Max( ACS,FirstVNF_RAM ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.5107212475633528, "obj2": 0.39284198035757806}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) / FirstVNF_CPU ) ) + Max( MRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / ( FirstVNF_CPU_Server + Min( RRS ,( Const - CRS ) ) ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( Max( ( Min( RRSe ,RRSe ) - DS ),( RCSe / ( MUC + MUC ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.3762183235867446, "obj2": 0.5863081806846667}, {"determining": "( ( ( FirstVNF_CPU_Server - RRS ) * MDR ) - Max( MDR,PN ) )", "choosing": "( Max( Max( MUC,( MUC - ( MUM / Min( ( RMSe * RMSe ) ,( RMSe - MUC ) ) ) ) ),( ( Min( Max( RCSe,( Min( MUM ,MUC ) + RRSe ) ) ,( RCSe + ( ( MUM - RCSe ) / MLU ) ) ) / ( MLU * ( DS - CS ) ) ) + RMSe ) ) / ( RMSe + RCSe ) )", "obj1": 0.47368421052631576, "obj2": 0.4446145518588321}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( MUC ,Min( ( ( MUR - MLU ) + ( MUC - ( ( ( MLU * ( MUC / CS ) ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5886939571150097, "obj2": 0.301615560680214}, {"determining": "( Max( Max( ( AMS * MRS ),PN ),( ( ACS + ( FirstVNF_RAM / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) + ( PN / ( Max( Max( Min( FirstVNF_RAM ,Const ),Const ),MDR ) * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( ( ( ( Max( CS,RCSe ) + Max( MUM,RRSe ) ) * ( DS / RCSe ) ) / Min( Max( ( RRSe / RCSe ),Min( RCSe ,RMSe ) ) ,( MUM + RCSe ) ) ) * RMSe ) / Max( MUR,MUR ) ) - MUC ) ,Min( ( ( Max( MLU,( Max( RCSe,MLU ) + RRSe ) ) + ( MLU - ( Min( ( RMSe / MUR ) ,( MUM - MLU ) ) + CS ) ) ) + Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3840155945419103, "obj2": 0.5713422507578213}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,MRS ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( MLU / DS ) ) )", "obj1": 0.6159844054580896, "obj2": 0.27543762636329144}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( MDR + FirstVNF_CPU ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * Max( Min( ( MUR - CS ) ,MUM ),Min( RCSe ,( RMSe * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 0.40545808966861596, "obj2": 0.5402835006582458}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.4017934369130944}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_Mem_Server + MDR ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( Min( AMS ,BR ) / FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( PN,FirstVNF_CPU_Server ) + ACS ) ) - ( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / ( ( MUM * DS ) - RRSe ) ) ,Min( ( CS / RRSe ) ,MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.31154910022481314}, {"determining": "( ( MDR / PN ) - Max( Min( ( MRS * FirstVNF_RAM ) ,( FirstVNF_RAM * ( FirstVNF_CPU * AMS ) ) ),( PN + DDR ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( Max( DS,RRSe ) - ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,Min( ( MUM * Min( MUM ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4678362573099415, "obj2": 0.4522111639619306}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( ( MRS / Const ),Const ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC + MUC ) / Max( ( ( Max( ( ( MUC - MUC ) - MUM ),( MUR - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) / RRSe ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.5497076023391813, "obj2": 0.3394210757242544}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( ( FirstVNF_Mem * FirstVNF_Mem_Server ) ,( ARS - ARS ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( ( Min( MLU ,Max( ( MLU / MUC ),( CS - CS ) ) ) + MLU ) / ( MLU / RMSe ) )", "obj1": 0.40350877192982454, "obj2": 0.5456207970547121}, {"determining": "( ( ( ( ARS / Max( ACS,RRS ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) / Min( Max( FirstVNF_Mem,Min( RRS ,CRS ) ) ,( MDR / ( Max( ( ARS * DDR ),FirstVNF_CPU_Server ) * ARS ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( MLU ,CS ) ) ) ),( ( MLU / MUC ) * RMSe ) ) ) ,( ( Min( MUM ,( RCSe + CS ) ) - MUR ) / Max( Min( Max( MUC,DS ) ,( RRSe / CS ) ),( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.48386351216685136}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013965176774425346}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( CRS / MDR ) ) / ( BR + ARS ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) )", "choosing": "( Max( MLU,RRSe ) / ( MUC + RMSe ) )", "obj1": 0.847953216374269, "obj2": 0.07168995448976752}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( MLU - Min( ( ( CS + Max( MLU,RCSe ) ) + RRSe ) ,Max( ( MUC + ( MLU * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.45419103313840153, "obj2": 0.4764166048808692}, {"determining": "( ( Min( RRS ,BR ) + ( ( PN / MDR ) + ( ( ( ( FirstVNF_CPU_Server / RRS ) + ( Max( BR,FirstVNF_Mem_Server ) / ( MDR + FirstVNF_Mem_Server ) ) ) / FirstVNF_Mem ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUR - Max( ( MUC - Min( MUM ,CS ) ),( RMSe - MUM ) ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.5497076023391813, "obj2": 0.3394210757242544}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( ACS ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( CS * MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4316302757363303}, {"determining": "( ( Max( CRS,Max( ( Const * ACS ),BR ) ) + ( ( PN / ( AMS + Min( RRS ,FirstVNF_RAM ) ) ) + ( Max( CRS,( Max( PN,MDR ) / ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( Min( Max( ( PN - FirstVNF_CPU ),( FirstVNF_CPU - DDR ) ) ,MDR ),FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.530214424951267, "obj2": 0.3679757761038442}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( ( Min( FirstVNF_CPU ,( MDR * Min( FirstVNF_CPU_Server ,MDR ) ) ) + RRS ) / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUR + MUR ),( ( ( RRSe / ( DS - ( MUM + CS ) ) ) / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.42300194931773877, "obj2": 0.5193140354186159}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5146198830409356, "obj2": 0.3859562107799428}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ( Const * ACS ) ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( CRS / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( RMSe ,( ( CS - DS ) * Min( MLU ,MUC ) ) ) ) ),( Min( DS ,MUC ) / MUC ) ) / MUC )", "obj1": 0.7270955165692008, "obj2": 0.1695080712595143}, {"determining": "( ( MRS / Max( FirstVNF_Mem,PN ) ) - ( ( Const * DDR ) - ( ( CRS * PN ) * ( ACS * Min( Min( MDR ,( FirstVNF_RAM_Server * ( FirstVNF_CPU / FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) * ( ( ( RMSe + RCSe ) - ( RMSe + ( ( MUR * RCSe ) - RMSe ) ) ) + Min( ( RCSe / MUR ) ,MUM ) ) ) ,( Max( Max( CS,RMSe ),MUC ) + ( ( MLU / MUC ) + Min( MUC ,DS ) ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45957288121683554}, {"determining": "( Min( FirstVNF_CPU ,( RRS / CRS ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( ( RRSe - ( MLU - Min( MUC ,Max( RRSe,CS ) ) ) ) + CS ) - ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) ) + RMSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6603516377104774}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( ( Max( ARS,FirstVNF_Mem_Server ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( RMSe - DS ) ) ),Max( MLU,Max( DS,MLU ) ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.6939571150097466, "obj2": 0.20156479564441523}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + PN ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( DS * Min( MLU ,RRSe ) ) ),RMSe ) ),( ( MUM - Max( RMSe,( CS / ( MUC + RCSe ) ) ) ) + MUC ) ) )", "obj1": 0.8187134502923976, "obj2": 0.08652640345214747}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( Max( RRS,FirstVNF_CPU ) + ( ( ( MDR * FirstVNF_RAM_Server ) / ( Const - FirstVNF_RAM_Server ) ) + ( Max( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ),Min( ACS ,BR ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( Max( MUM,MLU ),MLU ) + RRSe ) ,Max( ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( ( MUR / CS ) ,MUM ),MLU ) )", "obj1": 0.7621832358674464, "obj2": 0.1337178112055079}, {"determining": "( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( ( ACS - FirstVNF_RAM ) * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( ( FirstVNF_Mem - ARS ) * AMS ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( Min( MUM ,( RCSe + Max( ( MUR - MUR ),MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / Max( MUC,( ( MUM / ( ( MLU * RMSe ) + MUC ) ) - RRSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( PN / MDR ) - ( ( ( ACS * FirstVNF_RAM ) - ( ( FirstVNF_Mem_Server / RRS ) / ( Max( FirstVNF_CPU,Const ) + ( RRS - FirstVNF_RAM ) ) ) ) - ( CRS - MDR ) ) ) + ( ( PN / MDR ) + ( Max( AMS,( ( PN / MDR ) + ( FirstVNF_RAM_Server / ( ARS * ACS ) ) ) ) - ( Max( Const,MDR ) * PN ) ) ) ) - Min( FirstVNF_Mem ,Max( ( Max( ( ARS + FirstVNF_Mem ),ARS ) + ( Min( Const ,Const ) / CRS ) ),( MDR * CRS ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( Min( Min( ( Max( ( RCSe * RMSe ),( RRSe / RMSe ) ) * ( CS / ( MUC + RCSe ) ) ) ,RRSe ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.4775828460038986, "obj2": 0.4346663646563291}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( Min( FirstVNF_RAM_Server ,ARS ) + PN ) ) * FirstVNF_Mem ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.3079922027290448, "obj2": 0.6916437715744589}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) - ( PN * ( ( FirstVNF_CPU_Server + PN ) + MRS ) ) )", "choosing": "Min( Min( RCSe ,RRSe ) ,( ( MUM * CS ) + MUM ) )", "obj1": 0.9512670565302144, "obj2": 0.023392639420330215}, {"determining": "( ( ( ( DDR * ( FirstVNF_Mem * FirstVNF_CPU ) ) - ( Max( ACS,RRS ) + ARS ) ) + ( ( MDR / Min( Max( ( RRS - ( FirstVNF_RAM * MDR ) ),Min( ( RRS - PN ) ,CRS ) ) ,FirstVNF_Mem_Server ) ) + ( Max( CRS,( BR * MRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,PN ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / ( RMSe / RRSe ) ) ) ) ) ,( MLU - RRSe ) )", "obj1": 0.3313840155945419, "obj2": 0.6497991382535182}, {"determining": "( ( ( ( PN * ( MDR + ( ( ACS * FirstVNF_RAM ) / ( ARS - ARS ) ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUC ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( RRSe / ( Max( ( ( ( ( MLU / RCSe ) - Max( RMSe,CS ) ) - MUC ) - MUR ),( MUC - MLU ) ) / ( RMSe / ( CS - RCSe ) ) ) ) )", "obj1": 0.7017543859649122, "obj2": 0.19092400280507182}, {"determining": "( ( ( Max( Max( FirstVNF_RAM_Server,BR ),ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + MDR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( CS - RCSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( ( RCSe / RRSe ) ,Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR * RRSe ),DS ) ) ) ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.31773879142300193, "obj2": 0.6752811741849836}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( FirstVNF_RAM * MRS ),PN ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUC / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( RRSe ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.3004206882060371}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6413255360623782, "obj2": 0.2477359201564669}, {"determining": "( Max( CRS,( ( Min( ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ,ACS ) / MDR ) + ACS ) ) - ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / PN ) )", "choosing": "Min( ( Max( ( ( MUC - MUC ) - Min( ( RMSe + Max( RRSe,RMSe ) ) ,( RCSe * ( Min( MUM ,CS ) * MUM ) ) ) ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ,Max( Min( MUR ,( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.29434697855750486, "obj2": 0.7088462771785695}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( ARS * ACS ) / FirstVNF_RAM_Server ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + PN ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Max( MLU,RCSe ),( ( MUM - Max( RMSe,( CS / ( MUC + RCSe ) ) ) ) + MUC ) ) )", "obj1": 0.9103313840155945, "obj2": 0.04228704644513841}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.7368421052631579, "obj2": 0.157020729345214}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) ) ,( ( ( MUM - ( Max( ( ( DS * CS ) - ( DS / DS ) ),CS ) * RMSe ) ) * Min( Min( RMSe ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6441921073026784}, {"determining": "( ( ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / CRS ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / ( ( ( AMS * FirstVNF_Mem_Server ) / FirstVNF_Mem ) - RRS ) ) ) ) + ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + Min( ( CRS - MRS ) ,( PN + FirstVNF_Mem ) ) ) ) - ( MDR / PN ) ) ) )", "choosing": "( ( DS * Max( CS,RRSe ) ) / ( Min( MLU ,Min( Min( MLU ,( ( ( MUR - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) + MLU ) )", "obj1": 0.2787524366471735, "obj2": 0.730861804803562}, {"determining": "( Max( ( ( ( ( PN - ( ( FirstVNF_RAM - MRS ) + FirstVNF_Mem_Server ) ) * Const ) + MRS ) / Max( ARS,( ( Max( ( ARS + AMS ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) ) ),( ( FirstVNF_CPU_Server / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( ARS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MLU * Min( ( MLU + ( CS + RRSe ) ) ,CS ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) )", "obj1": 0.42884990253411304, "obj2": 0.5086713970363389}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - MDR ) + ( ( AMS / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) - ( ( ( FirstVNF_Mem / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) * FirstVNF_CPU ) / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( RRSe - MUR ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( MUC + DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),Min( RCSe ,Max( ( MUR - MUR ),RRSe ) ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( MUM / CS ) ) )", "obj1": 0.32943469785575047, "obj2": 0.6569174446898695}, {"determining": "( ( ( Min( ( RRS / MDR ) ,FirstVNF_RAM ) - ( ACS * MRS ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( PN / MDR ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU + MUC ) + ( Min( Min( Min( MLU ,RRSe ) ,RMSe ) ,DS ) + Min( Max( CS,( MLU / ( RMSe / RRSe ) ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.341130604288499, "obj2": 0.640905068146925}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + PN ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,FirstVNF_Mem ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( Max( MUR,RRSe ) * Min( MLU ,RRSe ) ) ),RMSe ) ),( ( MUM - Max( RMSe,( CS / ( MUC + RCSe ) ) ) ) + MUC ) ) )", "obj1": 0.8265107212475633, "obj2": 0.0821266156716301}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( MUR,( DS - ( ( MUC - MUM ) * ( Max( ( CS + DS ),( ( Min( MUM ,MLU ) / ( MUM * DS ) ) - Min( MUR ,CS ) ) ) + RMSe ) ) ) )", "obj1": 0.8382066276803118, "obj2": 0.07658906942348735}, {"determining": "( Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) - ( Max( Max( BR,MDR ),( AMS / Min( FirstVNF_Mem_Server ,( ( AMS - FirstVNF_Mem_Server ) - ACS ) ) ) ) / ( PN * Min( DDR ,Max( PN,( ( BR * FirstVNF_Mem ) + MRS ) ) ) ) ) )", "choosing": "Max( MUR,Max( ( Max( RCSe,Min( DS ,MUC ) ) / ( MUC + ( RMSe - Min( Max( RRSe,DS ) ,MUC ) ) ) ),Min( MUM ,( ( MUC / RMSe ) - ( RRSe - RCSe ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013965176774425346}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) )", "obj1": 0.42884990253411304, "obj2": 0.5086713970363389}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( MUM - MLU ),( DS * Min( ( DS * ( DS * CS ) ) ,RRSe ) ) ) + ( RCSe - ( ( MLU + ( ( RRSe / CS ) * ( RRSe - RCSe ) ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.36257309941520466, "obj2": 0.6116311006261806}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,( ARS * ( PN + Max( RRS,MRS ) ) ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - CS ) * ( RCSe + ( MUC / Min( MUC ,MUM ) ) ) ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7777777777777778, "obj2": 0.11789709401009443}, {"determining": "( Max( FirstVNF_Mem,( ( ( PN / ( ARS * ( FirstVNF_CPU + Max( RRS,MRS ) ) ) ) / MDR ) + Max( Min( Const ,Const ),CRS ) ) ) - Max( MDR,Max( MRS,Min( ( FirstVNF_Mem_Server - Min( ( MRS - ( FirstVNF_RAM + FirstVNF_Mem ) ) ,Max( ( MDR / FirstVNF_Mem ),( FirstVNF_RAM_Server + DDR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( RCSe,RMSe ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.3489278752436647, "obj2": 0.6329218926833581}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,( ( RRSe + RRSe ) + MUR ) ) ,Min( MUR ,Max( ( ( Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) + ( Max( ( DS * MUR ),CS ) * ( MLU + RRSe ) ) ) / RRSe ),( MUM + CS ) ) ) )", "obj1": 0.7855750487329435, "obj2": 0.11100266370212412}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( FirstVNF_RAM * MRS ),PN ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUC / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.8109161793372319, "obj2": 0.09107424236477688}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) * ( ( FirstVNF_CPU_Server - ACS ) * FirstVNF_Mem_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + ( Min( MUR ,RCSe ) - MUR ) ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.7914230019493177, "obj2": 0.10464787960298487}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - MDR ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / MUC ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.7738791423001949, "obj2": 0.12259787386024883}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,RRSe ) ) ) + ( CS - ( RMSe * CS ) ) ) ,RRSe ) )", "obj1": 0.34502923976608185, "obj2": 0.6338306879522806}, {"determining": "( Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( ( Max( CRS,Min( ACS ,BR ) ) - ( MDR / PN ) ) + ( ( MDR * FirstVNF_RAM_Server ) / Min( MRS ,BR ) ) ) ) - ( ( Const * Const ) + FirstVNF_Mem_Server ) )", "choosing": "Min( Min( ( Max( ( ( ( Min( CS ,MUR ) + MLU ) + Min( Min( RCSe ,RCSe ) ,RRSe ) ) / RRSe ),MLU ) + RRSe ) ,Max( ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ),( ( MLU / MUC ) - RMSe ) ) ) ,Max( Min( ( MUR - ( Max( RRSe,MUR ) / MLU ) ) ,MUM ),MLU ) )", "obj1": 0.2982456140350877, "obj2": 0.7037374603879984}, {"determining": "( Max( Max( ( ( Max( CRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) - ( ( PN / MDR ) + Max( Max( PN,AMS ),FirstVNF_RAM_Server ) ) ) / ( ( ( CRS - MDR ) - Min( PN ,( AMS / PN ) ) ) + ( MDR / PN ) ) ),( FirstVNF_Mem + FirstVNF_RAM ) ),( ( PN / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ) / Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.39571150097465885, "obj2": 0.5548029072356069}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ARS ) - Min( ACS ,Max( CRS,( PN + ( ( Const - FirstVNF_CPU_Server ) / ( MDR / PN ) ) ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( Max( ACS,RRS ) / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MUM ) + ( DS + ( Min( ( Max( RCSe,Min( Min( RCSe ,MUC ) ,Min( CS ,RMSe ) ) ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( Min( DS ,RCSe ),( MLU / DS ) ) - MUR ) ),CS ) ) ) )", "obj1": 0.7251461988304093, "obj2": 0.17046408157254342}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),Min( MLU ,RRSe ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.7680311890838206, "obj2": 0.12706911414338895}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( ( DS * RRSe ) * RMSe ) - MUR ),RMSe ) ) ) ,Max( ( Max( MUM,( Min( RMSe ,( MUR + CS ) ) / ( CS * MLU ) ) ) + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( MLU * ( Min( CS ,MUM ) / Min( MUC ,CS ) ) ) ),RCSe ) )", "obj1": 0.4444444444444444, "obj2": 0.48386351216685136}, {"determining": "( Max( CRS,( ( MDR / Min( ( Const / FirstVNF_Mem_Server ) ,ACS ) ) + ACS ) ) - ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) / AMS ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( RRSe / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3060428849902534, "obj2": 0.6958634556260593}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( FirstVNF_CPU * BR ) - Const ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,RRSe ) ,MUR ) ) ) ,( Min( Max( MLU,RRSe ) ,RCSe ) - Max( MLU,RMSe ) ) )", "obj1": 0.5672514619883041, "obj2": 0.32801980179645235}, {"determining": "( FirstVNF_CPU - ( ( ( FirstVNF_CPU - ( MDR * MDR ) ) - BR ) + ( FirstVNF_Mem * ( ( ( FirstVNF_RAM_Server + RRS ) - ( Const / ( RRS / Min( MRS ,MRS ) ) ) ) + PN ) ) ) )", "choosing": "Max( ( RCSe * ( Min( RCSe ,MUR ) + RRSe ) ),( RMSe + Max( RMSe,Min( RCSe ,Max( ( ( MUC - ( MLU + RMSe ) ) + ( Min( MUR ,RRSe ) + RRSe ) ),RRSe ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04864717757276317}, {"determining": "( ( MDR / PN ) - ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * Const ) ) / MDR ) + ( Max( RRS,MDR ) * ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) ) - ( ( FirstVNF_CPU + FirstVNF_RAM ) + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( MUM / RMSe ) ,Max( ( ( DS - CS ) - MUM ),Min( Max( ( CS + ( CS - ( ( MUM - MLU ) * CS ) ) ),( MUC / RCSe ) ) ,Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) ) ) )", "obj1": 0.9239766081871345, "obj2": 0.03442834839437856}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / Max( MDR,MDR ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( RRS / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( MDR + FirstVNF_Mem_Server ) / Max( ACS,BR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS - RMSe ) ,( ( MUM / Min( MLU ,RRSe ) ) - Min( RCSe ,Max( MLU,RRSe ) ) ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( RRSe / MLU ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.9298245614035088, "obj2": 0.03157362049007953}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( FirstVNF_RAM * MRS ),PN ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) - MDR )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + RRSe ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.8109161793372319, "obj2": 0.09107424236477688}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( FirstVNF_CPU * BR ) - Const ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.5555555555555556, "obj2": 0.33459668252137686}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR / RRSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( ( Min( MUM ,MLU ) / ( MUM * RCSe ) ) - Min( MUR ,CS ) ) ) )", "obj1": 0.5614035087719298, "obj2": 0.3308941086419275}, {"determining": "( ( PN + ( ( ( Max( PN,MDR ) - MDR ) / MDR ) - Max( ( Const - ACS ),( AMS * FirstVNF_RAM ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( MLU / DS ) ) )", "obj1": 0.8557504873294347, "obj2": 0.06869534385463054}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * MDR ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.7504873294346979, "obj2": 0.14370514171097332}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUR * MUR ) + MUR ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( ( Max( CRS,Max( ( FirstVNF_CPU * BR ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUC + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.4171539961013645, "obj2": 0.523840094676452}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + Min( ( ACS * ARS ) ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( MDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / RCSe ) + RMSe ) ) ) / Max( MLU,( Min( ( RMSe - ( MUM * ( DS * RMSe ) ) ) ,( MUC / MUM ) ) / MUR ) ) )", "obj1": 0.391812865497076, "obj2": 0.5626057014959015}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUR - MLU ) + ( MUC - ( ( ( MLU * ( MUC / CS ) ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3567251461988304, "obj2": 0.6135819288928486}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( MUM - MLU ),( DS * Min( ( DS * ( DS * CS ) ) ,RRSe ) ) ) + ( RCSe - ( ( MLU + ( ( RRSe / CS ) * ( RRSe - RCSe ) ) ) / Min( RMSe ,( ( MUR * MUR ) + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.5224171539961013, "obj2": 0.3706151051419747}, {"determining": "( ( ( ( FirstVNF_RAM_Server - Min( FirstVNF_RAM_Server ,( BR + AMS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - ( FirstVNF_Mem * Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server * Max( ( Max( BR,FirstVNF_RAM_Server ) * FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( CS - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( Max( DS,MUC ) - MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUM - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Max( Min( ( ( MUC * MUC ) - RCSe ) ,( RRSe + Min( MLU ,RRSe ) ) ),DS ) ,Max( ( RMSe - CS ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.41434932758994486}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( BR + FirstVNF_RAM ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUC ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21496280149320818}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( RRSe / ( DS - ( MUM + CS ) ) ) / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.6549707602339181, "obj2": 0.2396390040910191}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( ( CRS - Min( ACS ,BR ) ) - ( ( AMS * ( FirstVNF_Mem_Server - ( PN + DDR ) ) ) / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( MUC / DS ) + MUM ) ,Max( Max( Max( ( ( MUM - Max( DS,DS ) ) / ( Max( RRSe,MUC ) / CS ) ),MUR ),( DS / RRSe ) ),RMSe ) ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.5730994152046783, "obj2": 0.3157950584203946}], "50": [{"determining": "( Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) - ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( Max( AMS,FirstVNF_Mem_Server ) - ACS ) ) ) ) / ( Const * Min( DDR ,Max( PN,( ( BR * ( CRS / Const ) ) + MRS ) ) ) ) ) )", "choosing": "Max( MUR,Max( ( Min( MLU ,MUR ) / ( MUC + ( RMSe - Min( Max( DS,RRSe ) ,MUC ) ) ) ),Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( MDR,ACS ) - Max( Max( ( RRS * MRS ),PN ),( Max( MRS,Min( ( RRS / ( Max( FirstVNF_RAM_Server,MDR ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ,CRS ) ) + ( AMS / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( CS / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + ( RRSe * MUC ) ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( RRSe,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( Max( CRS,( ( PN / MDR ) + ( Max( FirstVNF_CPU,FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) ) / ( Max( AMS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ),Max( ( FirstVNF_RAM * MRS ),PN ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * DS ) / Max( ( ( RMSe + Min( ( MUC / ( RMSe / MUC ) ) ,DS ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ),RMSe ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( MUM / Max( ( ( ( RMSe / ( CS - DS ) ) / ( RMSe * RCSe ) ) / RRSe ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( ( MUC / MLU ) * Max( ( CS - ( MUM / MUM ) ),( ( MLU / Max( RCSe,MUR ) ) / ( RMSe / MUR ) ) ) ) - MUM ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22689361889763426}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) - ( Max( Max( BR,MDR ),( AMS / Min( FirstVNF_Mem_Server ,( ( AMS - FirstVNF_Mem_Server ) - ACS ) ) ) ) / ( PN * Min( DDR ,Max( PN,( ( BR * FirstVNF_Mem ) + MRS ) ) ) ) ) )", "choosing": "Max( MUR,Max( ( Max( RCSe,Min( DS ,MUC ) ) / ( MUC + ( RMSe - Min( Max( RRSe,DS ) ,MUC ) ) ) ),Min( MUM ,( ( MUC / RMSe ) - ( RRSe - RCSe ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013965176774425339}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6325135425276618}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Max( ( ( ( ( PN - ( ( FirstVNF_RAM - MRS ) + FirstVNF_Mem_Server ) ) * Const ) + MRS ) / Max( ARS,( ( Max( ( ARS + AMS ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) ) ),( ( FirstVNF_CPU_Server / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( ARS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MLU * Min( ( MLU + ( CS + RRSe ) ) ,CS ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( ( ( ( CRS * ( ( ( FirstVNF_CPU * FirstVNF_RAM ) / BR ) + ( FirstVNF_CPU - MRS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / PN ) ) ) ) - ( BR + MDR ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * Max( MUR,RCSe ) ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.6354775828460039, "obj2": 0.25756221089000214}, {"determining": "( Min( FirstVNF_Mem ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( Max( MDR,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( ( RMSe + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ) )", "obj1": 0.43664717348927873, "obj2": 0.49790660024855615}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( ACS ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( CS * MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4316302757363303}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) )", "obj1": 0.3762183235867446, "obj2": 0.5848171245377805}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,MRS ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "( Max( MUR,( ( Min( DS ,( RCSe + Max( ( MUR - MUR ),MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6179337231968811, "obj2": 0.27430732563893917}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.4017934369130944}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( MUR - MLU ) + ( MUC - ( ( ( MLU * ( MUC / CS ) ) + MLU ) / Min( RMSe ,( MUR + MUR ) ) ) ) ) ,RRSe ) )", "obj1": 0.3567251461988304, "obj2": 0.6135819288928486}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.42884990253411304, "obj2": 0.506652141881991}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ARS ) - Min( ACS ,Max( CRS,( ( ( Const - FirstVNF_CPU_Server ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,Max( ( ACS * Const ),BR ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MUM ) + ( DS + ( Min( ( Max( RCSe,( ( MLU / MUC ) + RMSe ) ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( Min( DS ,RCSe ),( MLU / DS ) ) - MUR ) ),CS ) ) ) )", "obj1": 0.45419103313840153, "obj2": 0.4721707024291607}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( RRSe / ( DS - ( MUM + CS ) ) ) / MUC ) + RMSe ) ) ) ,Max( ( RMSe - ( ( RMSe * MLU ) / CS ) ),Max( MUM,( ( CS + MLU ) + ( Max( ( MLU / MUC ),( MUC + MLU ) ) / ( ( DS + RMSe ) / ( ( MUR / MUM ) + MUR ) ) ) ) ) ) )", "obj1": 0.6549707602339181, "obj2": 0.2396390040910191}, {"determining": "( Max( CRS,( Min( ( ( AMS * FirstVNF_RAM ) - ( ( ( Const + BR ) / FirstVNF_RAM_Server ) * Max( BR,PN ) ) ) ,MDR ) + ACS ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( Min( MUC ,( ( CS / RCSe ) - MUC ) ) + RCSe ),RRSe ) ,( RMSe * MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.5171183834365993}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( MDR / PN ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * ( DDR - CRS ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( Max( MUC,( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - DS ) ) ) + CS ) ) + ( RMSe / ( CS - Min( CS ,Max( ( MLU - ( CS * RRSe ) ),DS ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.18807951428587302}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) / ( ( ( Max( PN,MDR ) - MDR ) / MDR ) - Max( ( ( ( ( MDR / FirstVNF_CPU ) + ( MRS + CRS ) ) - FirstVNF_RAM_Server ) - Const ),( CRS * ACS ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "Min( ( MUR * DS ) ,Min( Max( ( MUC + MLU ),CS ) ,( ( Min( RMSe ,RRSe ) * ( MLU - RRSe ) ) + Max( MUC,( Min( ( MUR + MUC ) ,RMSe ) / ( CS * MLU ) ) ) ) ) )", "obj1": 0.9005847953216374, "obj2": 0.04857124067566023}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_Mem_Server + MDR ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( Min( AMS ,BR ) / FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( PN,FirstVNF_CPU_Server ) + ACS ) ) - ( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / ( ( MUM * DS ) - RRSe ) ) ,Min( ( CS / RRSe ) ,MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.31154910022481314}, {"determining": "( ( ( ( FirstVNF_RAM_Server - Min( FirstVNF_RAM_Server ,( BR + AMS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - ( FirstVNF_Mem * Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server * Max( ( Max( BR,FirstVNF_RAM_Server ) * FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( CS - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( Max( DS,MUC ) - MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUM - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Max( Min( ( ( MUC * MUC ) - RCSe ) ,( RRSe + Min( MLU ,RRSe ) ) ),DS ) ,Max( ( RMSe - CS ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.41434932758994486}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_Mem ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,( ( MDR / Const ) + ( FirstVNF_Mem_Server * CRS ) ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( ( MLU + RRSe ) ,Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( CS + ( DS * ( ( MUR / DS ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.6861598440545809, "obj2": 0.20925512224978882}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),( RRSe / ( DS - ( MUM + CS ) ) ) ) )", "obj1": 0.7270955165692008, "obj2": 0.1685638482170015}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.41434932758994486}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + ( Min( MUR ,RCSe ) - MUR ) ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.5497076023391813, "obj2": 0.3394210757242544}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUC ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( CS - RCSe ) ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6752058890960096}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - MDR ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / MUC ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8031189083820662, "obj2": 0.0987100039897434}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / ( ( MRS * FirstVNF_RAM_Server ) - ( PN / MDR ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( CRS * PN ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) + ACS ) ) - ( ( ( FirstVNF_CPU_Server + PN ) + MRS ) / PN ) )", "choosing": "Min( Min( RCSe ,RRSe ) ,Min( Max( Max( ( RMSe / ( MUM + CS ) ),( RRSe + RRSe ) ),DS ) ,MUR ) )", "obj1": 0.9512670565302144, "obj2": 0.023392639420330215}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * ( RMSe - ( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( ( Min( MUM ,( RCSe + CS ) ) - MUR ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.48386351216685136}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,MRS ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( MLU / DS ) ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( ( ( ( Max( RRS,ACS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( ( ACS * BR ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( BR - Max( Min( BR ,( MRS / ARS ) ),MDR ) ) * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( ( DS * ( MLU / MUR ) ),MLU ) + ( Max( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ),Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.31968810916179335, "obj2": 0.6689571642544373}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8713450292397661, "obj2": 0.060862401281902845}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( MDR / PN ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( Max( ( MRS / Const ),Const ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC + MUC ) / Max( ( ( Max( ( ( MUC - MUC ) - MUM ),( MUR - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) / RRSe ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.5497076023391813, "obj2": 0.3394210757242544}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( ( PN / MDR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * ( RMSe - ( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( ( Min( MUM ,( RCSe + CS ) ) - MUR ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( ( MUC - MUC ) - MUM ) ) ) )", "obj1": 0.5146198830409356, "obj2": 0.38262804753003776}, {"determining": "( ( Max( CRS,Max( ( ACS * ARS ),BR ) ) + ( ( Max( CRS,( ( MDR / PN ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( ( CRS - MDR ),PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / ( CS * CS ) )", "obj1": 0.4619883040935672, "obj2": 0.4594591910578473}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * FirstVNF_RAM_Server ),Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "Min( Min( ( ( CS + MLU ) + RRSe ) ,Max( ( MUR / MUR ),( ( ( RRSe / ( DS - ( MUM + CS ) ) ) / MUC ) + RMSe ) ) ) ,Max( Min( MUM ,Max( Max( MLU,( Max( MUR,RRSe ) * Min( MLU ,RRSe ) ) ),RMSe ) ),( ( MUM - Max( RMSe,( ( MUM + MLU ) + MUR ) ) ) + MUC ) ) )", "obj1": 0.6510721247563352, "obj2": 0.2396759728213265}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),( Const + MDR ) ),( ( PN / ( MDR * FirstVNF_CPU ) ) + Max( MRS,( Max( ARS,ACS ) * FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( Max( ( ( ( ( Max( RCSe,CS ) - Min( RCSe ,RCSe ) ) - CS ) * ( RCSe + ( MUC / Min( MLU ,RMSe ) ) ) ) - ( RRSe / MLU ) ),Max( RCSe,RRSe ) ) ,( MUM + MUR ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5768368809063206}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( Max( BR,FirstVNF_Mem_Server ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Max( ( MUC - Min( MUM ,CS ) ),CS ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.7153996101364523, "obj2": 0.1768557057522411}, {"determining": "( ( ( ( PN * ( ( PN / Max( RRS,( MDR + FirstVNF_CPU ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * DS ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8635477582846004, "obj2": 0.0645785463704373}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + Max( CRS,( ARS * ( PN + Max( RRS,MRS ) ) ) ) ) - MDR )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + Min( MUC ,MUM ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.9824561403508771, "obj2": 0.008091164387261403}, {"determining": "( ( ( ( PN * ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( ARS * ACS ) / FirstVNF_RAM_Server ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + PN ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe - ( MUM - Max( CS,( MLU / RRSe ) ) ) ) ,Max( Max( MLU,RCSe ),( ( MUM - Max( RMSe,( CS / ( MUC + RCSe ) ) ) ) + MUC ) ) )", "obj1": 0.9103313840155945, "obj2": 0.04228704644513841}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( MDR + FirstVNF_CPU ) ) ) ) / MDR ) + ACS ) ) - PN )", "choosing": "Min( MLU ,Min( ( MUM * Min( DS ,( MLU * Max( Min( ( RRSe - CS ) ,MUM ),Min( RCSe ,( RMSe * DS ) ) ) ) ) ) ,MUR ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( Min( FirstVNF_Mem ,Min( ( MDR * PN ) ,FirstVNF_Mem_Server ) ) - ( ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) / ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( BR + FirstVNF_RAM ) ) ) + MDR ) ) - ( ACS * ( Min( CRS ,( CRS * ( PN * ACS ) ) ) + BR ) ) ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( Min( MUC ,MUM ) + ( MLU / ( Min( ( ( RCSe - RCSe ) / MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.6783625730994152, "obj2": 0.21496280149320818}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( FirstVNF_RAM * MRS ),PN ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUC / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( RRSe ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.2994216251124488}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( ( ( ARS / Max( ACS,RRS ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) / Min( Max( FirstVNF_Mem,Min( RRS ,CRS ) ) ,( MDR / ( Max( ( ARS * DDR ),FirstVNF_CPU_Server ) * ARS ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( MLU ,CS ) ) ) ),( ( MLU / MUC ) * RMSe ) ) ) ,( ( Min( MUM ,( RCSe + CS ) ) - MUR ) / Max( Min( Max( MUC,DS ) ,( RRSe / CS ) ),( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.48386351216685136}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ARS ) - Min( ACS ,Max( CRS,( ( ( Const - FirstVNF_CPU_Server ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.36062378167641324, "obj2": 0.6107860314181657}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( ( MUC - MUC ) / ( Max( ( ( MUC - MUC ) - MUM ),Min( MLU ,RRSe ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.3138401559454191, "obj2": 0.6877078881616232}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - ( MLU * ( MUC / CS ) ) ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.7387914230019493, "obj2": 0.15516354877023114}, {"determining": "( ( ( FirstVNF_CPU_Server - RRS ) * MDR ) - Max( MDR,PN ) )", "choosing": "( Max( Max( MUC,( MUC - ( MUM / Min( ( RMSe * RMSe ) ,( RMSe - MUC ) ) ) ) ),( ( Min( Max( RCSe,( Min( MUM ,MUC ) + RRSe ) ) ,( RCSe + ( ( MUM - RCSe ) / MLU ) ) ) / ( MLU * ( DS - CS ) ) ) + RMSe ) ) / ( RMSe + RCSe ) )", "obj1": 0.47368421052631576, "obj2": 0.4446145518588321}, {"determining": "( ( FirstVNF_Mem_Server / RRS ) - ( PN * ( ( FirstVNF_CPU_Server + PN ) + MRS ) ) )", "choosing": "Min( Min( RCSe ,RRSe ) ,( ( MUM * CS ) + MUM ) )", "obj1": 0.9512670565302144, "obj2": 0.023392639420330215}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( ( MUR - CS ) ,MUM ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUC / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.746588693957115, "obj2": 0.14747174621472836}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( Max( BR,FirstVNF_Mem_Server ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Max( ( MUC - Min( MUM ,CS ) ),CS ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.7153996101364523, "obj2": 0.1768557057522411}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6413255360623782, "obj2": 0.2477359201564669}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - Min( ( ( CS + Max( MLU,RCSe ) ) + RRSe ) ,Max( ( MUC + ( MLU * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.5692007797270955, "obj2": 0.3240233997519736}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( CRS + ( Max( ACS,FirstVNF_RAM ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.5107212475633528, "obj2": 0.39284198035757806}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ARS * Min( ( Const - ARS ) ,( FirstVNF_Mem / CRS ) ) ) ) - ( MDR / PN ) ) ) ) - Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( ( Min( MUM ,CS ) + Max( ( MLU / ( MUM + CS ) ),( MUC + MLU ) ) ) ,MUR ) / Max( ( RRSe / ( ( CS / ( MUR / DS ) ) / ( ( ( CS * RRSe ) + CS ) * Max( RCSe,( MUC / DS ) ) ) ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.7543859649122807, "obj2": 0.13994856544650583}, {"determining": "( ( Max( CRS,Max( ( Const * ACS ),BR ) ) + ( ( PN / ( AMS + Min( RRS ,FirstVNF_RAM ) ) ) + ( Max( CRS,( Max( PN,MDR ) / ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( ( Max( Min( Max( ( PN - FirstVNF_CPU ),( FirstVNF_CPU - DDR ) ) ,MDR ),FirstVNF_Mem_Server ) + ( FirstVNF_CPU_Server / CRS ) ) + PN ) ) )", "choosing": "Min( Min( Max( MLU,MUR ) ,MLU ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.530214424951267, "obj2": 0.3679757761038442}, {"determining": "( ( ( Min( ( RRS / MDR ) ,FirstVNF_RAM ) - ( ACS * MRS ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR / FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( PN / MDR ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( MLU + MUC ) + ( Min( Min( Min( MLU ,RRSe ) ,RMSe ) ,DS ) + Min( Max( CS,( MLU / ( RMSe / RRSe ) ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.341130604288499, "obj2": 0.640905068146925}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) - Max( Min( ( FirstVNF_RAM * MRS ) ,PN ),( PN + DDR ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,CS )", "obj1": 0.834307992202729, "obj2": 0.0801028375003628}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,( ( RRSe + RRSe ) + MUR ) ) ,Min( MUR ,Max( ( ( Max( Min( MUR ,Max( MLU,RMSe ) ),RCSe ) + ( Max( ( DS * MUR ),CS ) * ( MLU + RRSe ) ) ) / RRSe ),( MUM + CS ) ) ) )", "obj1": 0.7855750487329435, "obj2": 0.11100266370212412}, {"determining": "( ( MDR / PN ) - Max( Min( ( MRS * FirstVNF_RAM ) ,( FirstVNF_RAM * ( FirstVNF_CPU * AMS ) ) ),( PN + DDR ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( Max( DS,RRSe ) - ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,Min( ( MUM * Min( MUM ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.4678362573099415, "obj2": 0.4522111639619306}, {"determining": "( ( ( ( PN * ( MDR + ( ( ACS * FirstVNF_RAM ) / ( ARS - ARS ) ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUC ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( RRSe / ( Max( ( ( ( ( MLU / RCSe ) - Max( RMSe,CS ) ) - MUC ) - MUR ),( MUC - MLU ) ) / ( RMSe / ( CS - RCSe ) ) ) ) )", "obj1": 0.7017543859649122, "obj2": 0.19092400280507182}, {"determining": "( ( FirstVNF_RAM_Server / PN ) - Max( CRS,( ( PN / ( CRS / RRS ) ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( MLU ,Min( ( MUM * ( Max( ( RRSe - CS ),( RCSe / ( MUC + DS ) ) ) - ( MLU * Max( Min( ( MUR - CS ) ,MUM ),Min( RCSe ,( DS * RMSe ) ) ) ) ) ) ,MUR ) )", "obj1": 0.4093567251461988, "obj2": 0.5356362211145196}, {"determining": "( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( ( ACS - FirstVNF_RAM ) * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( ( FirstVNF_Mem - ARS ) * AMS ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( Min( MUM ,( RCSe + Max( ( MUR - MUR ),MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / Max( MUC,( ( MUM / ( ( MLU * RMSe ) + MUC ) ) - RRSe ) ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( RRSe,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.5886939571150097, "obj2": 0.301615560680214}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( ( MUM + CS ),DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6393762183235867, "obj2": 0.2560294723038054}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + Min( ( ACS * ARS ) ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( MDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / RCSe ) + RMSe ) ) ) / Max( MLU,( Min( ( RMSe - ( MUM * ( DS * RMSe ) ) ) ,( MUC / MUM ) ) / MUR ) ) )", "obj1": 0.391812865497076, "obj2": 0.5626057014959015}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * MRS ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,Min( ( MUM * Min( MUM ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.32943469785575047, "obj2": 0.6543395080310122}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( Max( Max( BR,MDR ),( AMS / Min( FirstVNF_Mem_Server ,( ( AMS - FirstVNF_Mem_Server ) - ACS ) ) ) ) / ( PN * Min( DDR ,Max( PN,( ( BR * FirstVNF_Mem ) + MRS ) ) ) ) ) )", "choosing": "Max( MUR,Max( Min( MLU ,RRSe ),Min( MUM ,( ( MUC / RMSe ) - ( RRSe - RCSe ) ) ) ) )", "obj1": 0.9142300194931774, "obj2": 0.04197272722844391}, {"determining": "( ( Max( ARS,FirstVNF_Mem_Server ) + ( ( ( ( MDR / PN ) - Max( ACS,RRS ) ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / ( FirstVNF_Mem + ( PN - FirstVNF_Mem ) ) ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( DS * RRSe ) * Max( Max( ( ( RCSe * MUM ) / ( MLU * ( DS - RMSe ) ) ),Max( MLU,Max( MLU,MLU ) ) ),MUM ) ) + Min( CS ,DS ) ) )", "obj1": 0.6920077972709552, "obj2": 0.20252080595744434}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( BR + FirstVNF_RAM ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( RCSe,RMSe ) ,( RCSe + Max( ( MUR - MUR ),MUC ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21496280149320818}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( ( CRS - Min( ACS ,BR ) ) - ( ( AMS * ( FirstVNF_Mem_Server - ( PN + DDR ) ) ) / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( MUC / DS ) + MUM ) ,Max( Max( Max( ( ( MUM - Max( DS,DS ) ) / ( Max( RRSe,MUC ) / CS ) ),MUR ),( DS / RRSe ) ),RMSe ) ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.5730994152046783, "obj2": 0.3157950584203946}, {"determining": "( Max( CRS,( ( Min( Max( ACS,FirstVNF_Mem_Server ) ,ACS ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUR * MUR ) + MUR ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.2826510721247563, "obj2": 0.7247511901132802}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( DDR + ARS ) / MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( ( ACS * FirstVNF_RAM ) / ( BR * ( MDR / PN ) ) ) + MDR ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + RMSe ) / ( RMSe - DS ) )", "obj1": 0.29434697855750486, "obj2": 0.70700948679304}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,( ARS * ( PN + Max( RRS,MRS ) ) ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - CS ) * ( RCSe + ( MUC / Min( MUC ,MUM ) ) ) ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7797270955165692, "obj2": 0.11699592374814069}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( CRS / MDR ) ) / ( ACS * Const ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) )", "choosing": "( Max( Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ),RRSe ) / ( MUC + RMSe ) )", "obj1": 0.8460038986354775, "obj2": 0.07255137167400294}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Min( ACS ,BR ) ) - ( ( AMS * ( FirstVNF_Mem_Server - ( PN + Const ) ) ) / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MUC / DS ) + MUM ) ,Max( MLU,RMSe ) ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( ( ACS + MDR ) + FirstVNF_Mem ) ) - ( MDR / CRS ) )", "choosing": "Min( MUR ,Min( Max( ( RRSe / RMSe ),( ( MUM - MUC ) * RRSe ) ) ,RRSe ) )", "obj1": 0.9298245614035088, "obj2": 0.03157362049007953}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5473134633938028}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( MRS * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,( ARS * ( PN + Max( RRS,MRS ) ) ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( RCSe ,Max( MLU,RRSe ) ) )", "obj1": 0.7602339181286549, "obj2": 0.1358436733608409}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( MDR / ACS ) )", "choosing": "Min( MLU ,( Max( RMSe,Max( ( RMSe / ( DS * CS ) ),Min( RCSe ,MUR ) ) ) - ( ( MUR / MLU ) * ( ( MUM + RMSe ) + Max( MUM,( RMSe + RCSe ) ) ) ) ) )", "obj1": 0.4756335282651072, "obj2": 0.43698510912336747}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( MUR * DS ) ) ) - MUC ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.33723196881091616, "obj2": 0.6441548088817616}, {"determining": "( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( MDR * ( ( MDR * FirstVNF_RAM_Server ) + ( Min( CRS ,MRS ) * ( AMS - FirstVNF_Mem ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,( MDR / PN ) ) ) )", "choosing": "( Max( MUR,( ( Min( DS ,Min( MUC ,MUR ) ) / ( ( RCSe - DS ) * MLU ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / PN ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),MUM ) + ( DS + ( Min( ( Max( RCSe,MUM ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( ( DS / RCSe ),( MLU / MUC ) ) - MUR ) ),CS ) ) ) )", "obj1": 0.4697855750487329, "obj2": 0.45046355479527866}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.7368421052631579, "obj2": 0.157020729345214}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( RRSe / MLU ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3840155945419103, "obj2": 0.5713422507578213}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( CRS + ( Max( ACS,FirstVNF_RAM ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.5107212475633528, "obj2": 0.39284198035757806}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,MUM ) + ( DS + ( Min( ( Max( RCSe,MUM ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( Min( DS ,RCSe ),( MLU / DS ) ) - MUR ) ),CS ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5626057014959015}, {"determining": "( Max( Max( ( AMS * MRS ),PN ),( ( ACS + ( FirstVNF_RAM / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) + ( PN / ( Max( Max( Min( FirstVNF_RAM ,Const ),Const ),MDR ) * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( ( ( ( Max( CS,RCSe ) + Max( MUM,RRSe ) ) * ( DS / RCSe ) ) / Min( Max( ( RRSe / RCSe ),Min( RCSe ,RMSe ) ) ,( MUM + RCSe ) ) ) * RMSe ) / Max( MUR,MUR ) ) - MUC ) ,Min( ( ( Max( MLU,( Max( RCSe,MLU ) + RRSe ) ) + ( MLU - ( Min( ( RMSe / MUR ) ,( MUM - MLU ) ) + CS ) ) ) + Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3840155945419103, "obj2": 0.5713422507578213}], "51": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) / ( ( ( Max( PN,FirstVNF_Mem ) - MDR ) / MDR ) - Max( ( ( ( ( MDR / FirstVNF_CPU ) + ( MRS + CRS ) ) - FirstVNF_RAM_Server ) - Const ),( CRS * ACS ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "Min( ( MUR * DS ) ,Min( Max( ( MUC + MLU ),CS ) ,( ( RCSe + Max( ( MUR - MUR ),MUC ) ) + Max( MUC,( Min( ( MUR + MUC ) ,RMSe ) / ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) - ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( Max( AMS,FirstVNF_Mem_Server ) - ACS ) ) ) ) / ( Const * Min( DDR ,Max( PN,( ( BR * ( CRS / Const ) ) + MRS ) ) ) ) ) )", "choosing": "Max( MUR,Max( ( Min( MLU ,MUR ) / ( MUC + ( RMSe - Min( Max( DS,RRSe ) ,MUC ) ) ) ),Min( MUR ,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( MDR + FirstVNF_CPU ) ) * FirstVNF_RAM ) - MDR ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / MUC ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( Min( ( RRSe - CS ) ,MUM ),Min( RCSe ,( RMSe * DS ) ) ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8070175438596491, "obj2": 0.0940509591146792}, {"determining": "( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) - Max( Min( ( Max( FirstVNF_CPU,PN ) * MRS ) ,PN ),( PN + DDR ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,CS )", "obj1": 0.834307992202729, "obj2": 0.08010283750036278}, {"determining": "( Max( ( ( ( ( PN - ( ( FirstVNF_RAM - MRS ) + FirstVNF_Mem_Server ) ) * Const ) + MRS ) / Max( ARS,( ( Max( ( ARS + AMS ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) ) ),( ( FirstVNF_CPU_Server / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( ARS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MLU * Min( ( MLU + ( CS + RRSe ) ) ,CS ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( ( ( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / Min( ( MDR / FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) ,FirstVNF_Mem_Server ) ) ) + ( ( Max( FirstVNF_Mem,( CRS + ( Max( PN,FirstVNF_RAM ) / ACS ) ) ) - ( MDR / PN ) ) + ( PN / MDR ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / ( MLU * ( RMSe - DS ) ) ) ,( ( Max( ( DS * Min( RRSe ,MLU ) ),( ( MLU + ( DS / RRSe ) ) + RMSe ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / ( DS * ( RRSe + RMSe ) ) ) ) ,( RCSe / RRSe ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.5380116959064327, "obj2": 0.3526302945817598}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( MUM / Max( ( ( ( RMSe / ( CS - DS ) ) / ( RMSe * RCSe ) ) / RRSe ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( ( MUC / MLU ) * Max( ( CS - ( MUM / MUM ) ),( ( MLU / Max( RCSe,MUR ) ) / ( RMSe / MUR ) ) ) ) - MUM ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22689361889763426}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( Max( RMSe,RMSe ) / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.530214424951267, "obj2": 0.36674880883110167}, {"determining": "( ( FirstVNF_RAM_Server / PN ) - Max( CRS,( ( PN / ( CRS / RRS ) ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( MLU ,Min( ( MUM * ( Max( ( RRSe - CS ),( RCSe / ( MUC + DS ) ) ) - ( MLU * Max( Min( ( MUR - CS ) ,MUM ),Min( RCSe ,( DS * RMSe ) ) ) ) ) ) ,MUR ) )", "obj1": 0.4093567251461988, "obj2": 0.5356362211145196}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_Mem ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MLU - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( RRSe,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.5633528265107213, "obj2": 0.3310793942663396}, {"determining": "( ( PN + Max( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ),( MDR + MDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( Min( Max( ( RMSe * CS ),DS ) ,( RRSe / CS ) ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( ( ( ( MDR - ( MDR - Const ) ) * Max( Min( MDR ,FirstVNF_RAM_Server ),( Max( RRS,FirstVNF_Mem ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) / Min( ( ARS / FirstVNF_Mem_Server ) ,( ( ( Min( AMS ,PN ) - PN ) - CRS ) * FirstVNF_Mem ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,( MUR / ( MUR + ( RMSe - Max( MLU,MUR ) ) ) ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( ( Min( RCSe ,CS ) / Max( DS,MLU ) ) / MUC ) + RMSe ) ) ) ,Max( Min( MUR ,( Max( MUC,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) ),RCSe ) )", "obj1": 0.4873294346978557, "obj2": 0.4224977614701419}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( Max( Max( Max( ( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_Mem_Server + MDR ) ) ),( ( PN / FirstVNF_Mem_Server ) + ( Min( AMS ,BR ) / FirstVNF_RAM_Server ) ) ),( ( FirstVNF_RAM_Server - FirstVNF_Mem_Server ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( Max( PN,FirstVNF_CPU_Server ) + ACS ) ) - ( FirstVNF_RAM_Server + Min( FirstVNF_CPU_Server ,Min( MDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( MUR / ( ( MUM * DS ) - RRSe ) ) ,Min( ( CS / RRSe ) ,MUR ) )", "obj1": 0.5789473684210527, "obj2": 0.31154910022481314}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( MDR / PN ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * ( DDR - CRS ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( Max( MUC,( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - DS ) ) ) + CS ) ) + ( RMSe / ( CS - Min( CS ,Max( ( MLU - ( CS * RRSe ) ),DS ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.18807951428587302}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.23596291002000375}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / FirstVNF_Mem ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) / MDR ) + ( Max( ( ( AMS * BR ) / ( DDR * BR ) ),( ARS * ( ( PN * PN ) + Max( RRS,MRS ) ) ) ) - Min( FirstVNF_RAM_Server ,ARS ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( Min( MLU ,Min( RCSe ,DS ) ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7894736842105263, "obj2": 0.10920032317821665}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( ACS ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( CS * MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4310394064071927}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MUM ) + ( DS + ( Min( ( Max( RCSe,( ( MLU / MUC ) + RMSe ) ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( Min( DS ,RMSe ),( MLU / DS ) ) - MUR ) ),CS ) ) ) )", "obj1": 0.3157894736842105, "obj2": 0.6741752092102202}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) * ( MDR / ( FirstVNF_CPU / ( ( FirstVNF_Mem_Server * BR ) - MDR ) ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( DDR / PN ) ) ) ) - MDR )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Min( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ) ,Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( ( RCSe - RCSe ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.6276803118908382, "obj2": 0.2638719027749365}, {"determining": "( ( MDR / PN ) - ( ( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) + Min( MRS ,AMS ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( MUC + ( MUR + CS ) ) )", "obj1": 0.7641325536062378, "obj2": 0.13191254870385977}, {"determining": "( Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) - ( Max( Max( BR,MDR ),( AMS / Min( FirstVNF_Mem_Server ,( ( AMS - FirstVNF_Mem_Server ) - ACS ) ) ) ) / ( PN * Min( DDR ,Max( PN,( ( BR * FirstVNF_Mem ) + MRS ) ) ) ) ) )", "choosing": "Max( MUR,Max( ( Max( RCSe,Min( DS ,MUC ) ) / ( MUC + ( RMSe - Min( Max( RRSe,DS ) ,MUC ) ) ) ),Min( MUM ,( ( MUC / RMSe ) - ( RRSe - RCSe ) ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.013965176774425339}, {"determining": "( ( ( Max( Max( FirstVNF_RAM_Server,BR ),ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + MDR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( CS - RCSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( ( RCSe / RRSe ) ,Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR * RRSe ),DS ) ) ) ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6641443703753406}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,MRS ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( MLU / DS ) ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( ( ( CRS / FirstVNF_CPU ) + BR ) - ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - BR ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( Max( Min( CS ,RRSe ),DS ) / Min( MUC ,CS ) )", "obj1": 0.9610136452241715, "obj2": 0.019004918699719618}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - ( MLU * ( MUC / CS ) ) ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.39766081871345027, "obj2": 0.5569142926080259}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ARS ) - Min( ACS ,Max( CRS,( ( ( Const - FirstVNF_CPU_Server ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.36062378167641324, "obj2": 0.6107860314181657}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * MRS ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - ( PN / MDR ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( Max( CS,( RRSe / MLU ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.3138401559454191, "obj2": 0.6867776346400283}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( ( CRS - Min( ACS ,BR ) ) - ( ( AMS * ( FirstVNF_Mem_Server - ( PN + DDR ) ) ) / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( MUC / DS ) + MUM ) ,Max( Max( Max( ( ( MUM - Max( DS,DS ) ) / ( Max( RRSe,MUC ) / CS ) ),MUR ),( DS / RRSe ) ),RMSe ) ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.5730994152046783, "obj2": 0.3157950584203946}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + Min( ACS ,ARS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( MUC / RRSe ) * Max( RMSe,RMSe ) ) + MLU ) / Min( MLU ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.5516569200779727, "obj2": 0.3375208423687123}, {"determining": "( ( ( ( PN * ( ACS * ( MDR * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - ( MLU * ( MUC / CS ) ) ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) )", "obj1": 0.7719298245614035, "obj2": 0.12369566876333124}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,Max( ( PN / FirstVNF_RAM ),( Max( ACS,BR ) / ( MDR - MRS ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Max( ( RMSe - ( RMSe * MLU ) ),RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.48937949714256895}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RCSe,RMSe ) ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3508771929824561, "obj2": 0.6230691390233924}, {"determining": "( ( ( ( ( ACS * RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( ( ( BR / BR ) / ( ACS - FirstVNF_Mem ) ) / RRS ) - ( MDR - ARS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( Min( MUM ,( RCSe + Max( ( MUR - MUR ),MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + MLU ) ) / Max( ( MUC * ( RMSe / Min( RCSe ,( ( RCSe * MLU ) / RMSe ) ) ) ),( CS + MUC ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4793139748480664}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( MDR / ACS ) )", "choosing": "Min( MLU ,( Max( RMSe,Max( ( RMSe / ( DS * CS ) ),Min( RCSe ,MUR ) ) ) - ( ( MUR / MLU ) * ( ( MUM + RMSe ) + Max( MUM,( RMSe + RCSe ) ) ) ) ) )", "obj1": 0.4756335282651072, "obj2": 0.43698510912336747}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / ( ACS * FirstVNF_RAM ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Max( ( MLU + RRSe ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.164443898571663}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ),( Const + MDR ) ),( ( PN / ( MDR * FirstVNF_CPU ) ) + Max( MRS,( Max( ARS,ACS ) * FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( Max( ( ( ( ( Max( RCSe,CS ) - Min( RCSe ,RCSe ) ) - CS ) * ( RCSe + ( MUC / Min( MLU ,RMSe ) ) ) ) - ( RRSe / MLU ) ),Max( RCSe,RRSe ) ) ,( MUM + MUR ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5768368809063206}, {"determining": "( Max( CRS,( ( ( PN / ( BR * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( Max( Max( BR,MDR ),( AMS / Min( FirstVNF_Mem_Server ,( ( AMS - FirstVNF_Mem_Server ) - ACS ) ) ) ) / ( PN * Min( DDR ,Max( PN,( ( BR * FirstVNF_Mem ) + MRS ) ) ) ) ) )", "choosing": "Max( MUR,Max( Min( ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ,RRSe ),Min( MUM ,( ( MUC / RMSe ) - ( RRSe - RCSe ) ) ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6513840594784116}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( ( ( FirstVNF_RAM_Server - Min( FirstVNF_RAM_Server ,( BR + AMS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - ( FirstVNF_Mem * Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server * Max( ( Max( BR,FirstVNF_RAM_Server ) * FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( CS - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( Max( DS,MUC ) - MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUM - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Max( Min( ( ( MUC * MUC ) - RCSe ) ,( RRSe + Min( MLU ,RRSe ) ) ),DS ) ,Max( ( RMSe - CS ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.41434932758994486}, {"determining": "( ( ( Max( ARS,FirstVNF_Mem_Server ) + ( ( Max( CRS,( ( PN / MDR ) + ( FirstVNF_Mem_Server * CRS ) ) ) - ( MDR / ( FirstVNF_Mem + ( PN - FirstVNF_Mem ) ) ) ) + ( ( ( MDR / PN ) - Max( FirstVNF_RAM_Server,RRS ) ) / MDR ) ) ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Min( ACS ,BR ) ) - ( ( AMS * ( FirstVNF_Mem_Server - ( PN + Const ) ) ) / PN ) ) ) ) - ( Min( FirstVNF_Mem_Server ,BR ) * FirstVNF_CPU_Server ) )", "choosing": "Min( Min( ( ( ( ( DS * MUC ) / RRSe ) / MUC ) + MUM ) ,Max( MLU,RMSe ) ) ,RRSe )", "obj1": 0.9980506822612085, "obj2": 0.0019071255985431055}, {"determining": "( ( ( ( PN * ( ( PN / Max( RRS,( MDR + FirstVNF_CPU ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * DS ) ),CS ) ) ,Max( Min( ( MUR - CS ) ,MUM ),MLU ) )", "obj1": 0.8635477582846004, "obj2": 0.0645785463704373}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * MRS ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUM - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Max( Min( ( ( MUC * MUC ) - RCSe ) ,( RRSe + Min( MUR ,RRSe ) ) ),DS ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6679132786486986}, {"determining": "( Min( FirstVNF_Mem ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( Max( MDR,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( ( RMSe + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ) )", "obj1": 0.43664717348927873, "obj2": 0.49790660024855615}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) )", "obj1": 0.3762183235867446, "obj2": 0.5848171245377805}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( ( FirstVNF_RAM * MRS ),PN ) ) - Max( MRS,FirstVNF_RAM_Server ) ) ) ) - MDR )", "choosing": "Min( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( MUC / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( RRSe ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.594541910331384, "obj2": 0.2994216251124488}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5473134633938028}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( CRS / MDR ) ) / ( ACS * Const ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) )", "choosing": "( Max( Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ),RRSe ) / ( MUC + RMSe ) )", "obj1": 0.8460038986354775, "obj2": 0.07255137167400294}, {"determining": "( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) - Max( Min( ( FirstVNF_RAM * MRS ) ,PN ),( PN + DDR ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,CS )", "obj1": 0.8362573099415205, "obj2": 0.07920166723840906}, {"determining": "( ( ( FirstVNF_CPU_Server - RRS ) * MDR ) - Max( MDR,PN ) )", "choosing": "( Max( Max( MUC,( MUC - ( MUM / Min( ( RMSe * RMSe ) ,( RMSe - MUC ) ) ) ) ),( ( Min( Max( RCSe,( Min( MUM ,MUC ) + RRSe ) ) ,( RCSe + ( ( MUM - RCSe ) / MLU ) ) ) / ( MLU * ( DS - CS ) ) ) + RMSe ) ) / ( RMSe + RCSe ) )", "obj1": 0.47368421052631576, "obj2": 0.4446145518588321}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( MDR + FirstVNF_CPU ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( RRSe,( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.4269005847953216, "obj2": 0.5115372661024221}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) * Max( RRS,( MDR + FirstVNF_CPU ) ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,( RMSe * MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.5171183834365993}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),( DDR - CRS ) ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ARS * ACS ) / FirstVNF_Mem ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) / MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( MUR / RMSe ) ,MUR ) ) ) ,Min( ( Min( RMSe ,RCSe ) / ( MUC / ( ( ( CS + MUR ) / Min( RMSe ,( MUR + RRSe ) ) ) + RMSe ) ) ) ,Min( ( MUM * Min( DS ,( MLU * MUM ) ) ) ,MUR ) ) )", "obj1": 0.3762183235867446, "obj2": 0.5848171245377805}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( MUR * DS ) ) ) - MUC ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.621832358674464, "obj2": 0.2714478486962733}, {"determining": "( ( ( ( PN / MDR ) - ( ( AMS - FirstVNF_Mem_Server ) - ACS ) ) + ( ( PN / MDR ) + ( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( Max( BR,FirstVNF_Mem_Server ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( ( MUC / RMSe ) - ( RRSe - RCSe ) ) ) ) ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Max( ( MUC - Min( MUM ,CS ) ),CS ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.3489278752436647, "obj2": 0.6324449797550389}, {"determining": "( ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( Max( CS,( MLU / ( RMSe / RRSe ) ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.9298245614035088, "obj2": 0.03157362049007953}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( MDR / PN ) - Max( DDR,( ( ( ARS * DDR ) / FirstVNF_RAM ) + ( Max( FirstVNF_Mem_Server,BR ) / ACS ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( ( MLU + RMSe ) + RRSe ) ,Max( ( RMSe + ( DS * ( DS * ( RMSe - ( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,( ( Min( MUM ,( RCSe + CS ) ) - MUR ) / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC / MLU ) ) / ( ( Max( RRSe,RMSe ) * MLU ) / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.4327485380116959, "obj2": 0.5013223110707833}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,CS )", "obj1": 0.33723196881091616, "obj2": 0.6414279527406623}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.42884990253411304, "obj2": 0.506652141881991}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.41434932758994486}, {"determining": "( Min( ( ( ( ACS + FirstVNF_Mem ) / ( ( FirstVNF_CPU / AMS ) / MRS ) ) - ( ( ARS * ( MDR / FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_RAM_Server + AMS ) ,ACS ) ) ) ,BR ) - MDR )", "choosing": "Min( ( ( RMSe + ( Min( ( ( ( MUC + RMSe ) * MUR ) - Min( ( RMSe - RMSe ) ,( MUR / CS ) ) ) ,DS ) + MUR ) ) * MUR ) ,RRSe )", "obj1": 0.5886939571150097, "obj2": 0.301615560680214}, {"determining": "( ( ( ( ( PN / ( Max( BR,Const ) * Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR + PN ) )", "choosing": "Min( ( MUM / Max( ( ( Max( ( ( MUR - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,DS ) + MUM ) ) ) / RRSe ),Min( Max( MUC,DS ) ,RMSe ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6374269005847953, "obj2": 0.2515464472279824}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * MRS ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,Min( ( MUM * Min( MUM ,( MLU * MUM ) ) ) ,MUR ) )", "obj1": 0.32943469785575047, "obj2": 0.6543395080310122}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) )", "obj1": 0.35477582846003897, "obj2": 0.616744249958525}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + ( Min( MUR ,RCSe ) - MUR ) ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.5497076023391813, "obj2": 0.3394210757242544}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Min( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( Max( FirstVNF_Mem_Server,BR ) / ( CRS / DDR ) ) ) ) ,( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( ( Min( MUR ,( MUC * DS ) ) * DS ) ,( CS + MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Max( ( MUC - Min( MUM ,CS ) ),CS ) ) / Min( RRSe ,MUC ) ) ) + MUR ) )", "obj1": 0.7153996101364523, "obj2": 0.1768557057522411}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / PN ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( Max( ACS,RRS ) - ( MDR / PN ) ) / MDR ) + ( Max( CRS,( ARS * ( PN + Max( RRS,MRS ) ) ) ) - ( MDR / PN ) ) ) ) - ( FirstVNF_RAM * FirstVNF_CPU ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - CS ) * ( RCSe + ( MUC / Min( MUC ,MUM ) ) ) ),( MUM + CS ) ) ,MUR ) )", "obj1": 0.7797270955165692, "obj2": 0.11699592374814069}, {"determining": "( ( ( Min( ACS ,BR ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( CS * DS ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.9668615984405458, "obj2": 0.015856833715534077}, {"determining": "( ( ( ( Max( RRS,ACS ) / ( ( MDR + MRS ) + FirstVNF_Mem ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + Const ) + Max( PN,BR ) ) / FirstVNF_Mem ) / MDR ) + ( Max( FirstVNF_CPU,( Max( CRS,Min( ACS ,BR ) ) + ( Max( ACS,BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,RRS ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( ( ( ( MUC - MUC ) - MUM ) * ( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( MUC * MUM ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,Max( MLU,MUC ) ) ,( RCSe + Max( RMSe,MUM ) ) ),( MUM - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Max( Min( ( ( MUC * MUC ) - RCSe ) ,( RRSe + Min( MUR ,RRSe ) ) ),DS ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,( ( MUR - ( Min( MUR ,MLU ) + ( RMSe - ( MUM / MUM ) ) ) ) / MUC ) ) )", "obj1": 0.28654970760233917, "obj2": 0.719134133570989}, {"determining": "( Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) - ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / MDR ) + ( Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC / RCSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( MUM + Min( MUR ,RRSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( Min( RCSe ,RRSe ) ,MUC ) - ( Min( ( MUM / RMSe ) ,RMSe ) - MUR ) ) )", "obj1": 0.8713450292397661, "obj2": 0.060862401281902845}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,MUM ) + ( DS + ( Min( ( Max( RCSe,MUM ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( Min( DS ,RCSe ),( MLU / DS ) ) - MUR ) ),CS ) ) ) )", "obj1": 0.391812865497076, "obj2": 0.5626057014959015}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ( FirstVNF_CPU_Server + FirstVNF_RAM ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / FirstVNF_Mem ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( ( MUR + MUR ) / CS ),Max( ( ( ( Max( ( RRSe - MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ),RRSe ) ) ,( MUM / Max( ( RRSe / ( ( MUR * MUC ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.4017934369130944}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,FirstVNF_Mem ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - Min( ( ( CS + Max( MLU,RCSe ) ) + RRSe ) ,Max( ( ( MLU / MUC ) + RMSe ),( ( MLU / MUC ) + RMSe ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.949317738791423, "obj2": 0.02485863947372386}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / DDR ) * Min( DDR ,RRS ) ) ) / ( FirstVNF_RAM_Server * AMS ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( ( Min( MUR ,RRSe ) + MUM ) / RMSe ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( RCSe ,MLU ) ),( ( MLU + ( DS - RRSe ) ) + MUR ) ) * Min( Min( Min( MLU ,MUM ) ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / ( MUM * CS ) ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6325135425276618}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( ( MUM + CS ),DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6335282651072125, "obj2": 0.25876672629471453}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - Min( ( ( CS + Max( MLU,RCSe ) ) + RRSe ) ,Max( ( MUC + ( MLU * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.5692007797270955, "obj2": 0.3240233997519736}, {"determining": "( ( Max( CRS,Max( ( ACS * ARS ),BR ) ) + ( ( Max( CRS,( ( MDR / PN ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( ( CRS - MDR ),PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / ( CS * CS ) )", "obj1": 0.4619883040935672, "obj2": 0.4594591910578473}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( Max( BR,FirstVNF_Mem_Server ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Max( ( MUC - Min( MUM ,CS ) ),CS ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.7153996101364523, "obj2": 0.1768557057522411}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( CS + MLU ) + ( Min( MUR ,RCSe ) - MUR ) ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.5497076023391813, "obj2": 0.3394210757242544}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6413255360623782, "obj2": 0.2477359201564669}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5473134633938028}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( BR + FirstVNF_RAM ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( Min( DS ,Min( MUC ,MUR ) ) / ( ( RCSe - DS ) * MLU ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.6842105263157895, "obj2": 0.21020629234795116}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( Max( PN,MDR ) + Min( ( ACS * ARS ) ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( MDR * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / RCSe ) + RMSe ) ) ) / Max( MLU,( Min( ( RMSe - ( MUM * ( DS * RMSe ) ) ) ,( MUC / MUM ) ) / MUR ) ) )", "obj1": 0.391812865497076, "obj2": 0.5626057014959015}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( Max( CRS,Min( ACS ,BR ) ) - ( ( AMS * ( FirstVNF_Mem_Server - ( PN + Const ) ) ) / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( MUC * RMSe ) * Max( Max( ( ( RCSe * MUM ) / ( ( RMSe - DS ) * MLU ) ),( MLU * Max( DS,MLU ) ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ( FirstVNF_Mem * FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) + Max( CRS,( ARS * ( PN + Max( RRS,MRS ) ) ) ) ) - MDR )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + Min( MUC ,MUM ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.9824561403508771, "obj2": 0.008091164387261403}, {"determining": "( Max( CRS,( Min( ( ( AMS * FirstVNF_RAM ) - ( ( ( Const + BR ) / FirstVNF_RAM_Server ) * Max( BR,PN ) ) ) ,MDR ) + ACS ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( Min( MUC ,( ( CS / RCSe ) - MUC ) ) + RCSe ),RRSe ) ,( RMSe * MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.5171183834365993}, {"determining": "( Max( Max( ( AMS * MRS ),PN ),( ( ACS + ( FirstVNF_RAM / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) + ( PN / ( Max( Max( Min( FirstVNF_RAM ,Const ),Const ),MDR ) * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( ( ( ( Max( CS,RCSe ) + Max( MUM,RRSe ) ) * ( DS / RCSe ) ) / Min( Max( ( RRSe / RCSe ),Min( RCSe ,RMSe ) ) ,( MUM + RCSe ) ) ) * RMSe ) / Max( MUR,MUR ) ) - MUC ) ,Min( ( ( Max( MLU,( Max( RCSe,MLU ) + RRSe ) ) + ( MLU - ( Min( ( RMSe / MUR ) ,( MUM - MLU ) ) + CS ) ) ) + Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3840155945419103, "obj2": 0.5713422507578213}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - MUC ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.7368421052631579, "obj2": 0.157020729345214}, {"determining": "( ( Max( CRS,Max( ( FirstVNF_CPU / FirstVNF_RAM ),BR ) ) + ( ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) + Min( Max( CRS,( Max( PN,MDR ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( Min( ( ( Min( MUM ,MUC ) + ( MUC / DS ) ) / Min( MUM ,RCSe ) ) ,( ( DS * Min( RRSe ,RCSe ) ) - ( ( MLU - CS ) * MUR ) ) ) ,CS ) ) ) / ( MLU / ( MLU - RCSe ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45652784815823083}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( MDR / PN ) - ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( AMS + ( FirstVNF_RAM + BR ) ) ) ) ) ) ) - ( FirstVNF_Mem + Min( Min( PN ,AMS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( MUR,( RRSe / ( Max( Max( ( MUC - MUC ),MUM ),( MLU - MUC ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ) ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Min( ( MUC - ( DS + MLU ) ) ,CS ) ) / Min( RRSe ,MUC ) ) ) - ( MUM - Min( RRSe ,CS ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17494368512618289}, {"determining": "( ( ( ( ARS / Max( Max( ARS,MDR ),Const ) ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ( MDR + Const ) ) ) ) - ( MDR / BR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( MUR + Min( MUM ,Min( DS ,Min( RCSe ,RCSe ) ) ) ) ) - ( ( MLU - ( DS / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8011695906432749, "obj2": 0.09961117425169713}], "52": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( MDR - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RRSe,RCSe ) ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * FirstVNF_CPU_Server ) / ( ( ( Max( PN,FirstVNF_Mem ) - MDR ) / MDR ) - Max( ( ( ( ( MDR / FirstVNF_CPU ) + ( MRS + CRS ) ) - FirstVNF_RAM_Server ) - Const ),( CRS * ACS ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "Min( ( MUR * DS ) ,Min( Max( ( MUC + MLU ),CS ) ,( ( RCSe + Max( ( MUR - MUR ),MUC ) ) + Max( MUC,( Min( ( MUR + MUC ) ,RMSe ) / ( CS * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Max( CS,MUM ) / ( ( DS * MLU ) - RCSe ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( PN + RRS ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) / ( MUC + ( ( MLU / ( ( DS + MLU ) * DS ) ) / ( MUC - ( RCSe + ( MUC / ( RCSe - ( RMSe + RRSe ) ) ) ) ) ) ) )", "obj1": 0.8323586744639376, "obj2": 0.07905068583608729}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ( MDR / PN ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( FirstVNF_Mem + ( PN - FirstVNF_Mem ) ) ) - MDR )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.949317738791423, "obj2": 0.02363193626907776}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( MDR + FirstVNF_CPU ) ) * FirstVNF_RAM ) - MDR ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / ACS ) + ( Max( MDR,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / MUC ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( ( ( Max( ( ( MUR - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,DS ) + MUM ) ) ) / RRSe ) ,Max( Min( ( RRSe - CS ) ,MUM ),Min( RCSe ,( RMSe * DS ) ) ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09309540948423578}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( ( ( ( PN + CRS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( ( MUR + MUR ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / ( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.39559302375999195}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) ) * ( MUM + CS ) ) ,RRSe ) )", "obj1": 0.4093567251461988, "obj2": 0.533031478736457}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( ( FirstVNF_CPU_Server - RRS ) * MDR ) - Max( MDR,PN ) )", "choosing": "( Max( Max( MUC,( MUC - ( MUM / Min( ( RMSe * RMSe ) ,( RMSe - MUC ) ) ) ) ),( ( Min( Max( RCSe,( Min( MUM ,MUC ) + RRSe ) ) ,( RCSe + ( ( MUM - RCSe ) / MLU ) ) ) / ( MLU * ( DS - CS ) ) ) + RMSe ) ) / ( RMSe + RCSe ) )", "obj1": 0.47368421052631576, "obj2": 0.4446145518588321}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.23596291002000375}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( ACS,RRS ) / FirstVNF_CPU ) - ( ACS * ( FirstVNF_Mem * Min( ARS ,( AMS - Const ) ) ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Min( CS ,RCSe ) ,( Min( MUR ,( RMSe + MUC ) ) + RMSe ) )", "obj1": 0.7563352826510721, "obj2": 0.14375772899760025}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / Min( FirstVNF_RAM_Server ,MRS ) ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( Min( RMSe ,RCSe ) / ( MUC / ( RMSe + ( Max( MLU,Min( MUC ,RCSe ) ) / RMSe ) ) ) ) ,CS )", "obj1": 0.7309941520467836, "obj2": 0.16408139839536873}, {"determining": "( ( ( BR + FirstVNF_RAM_Server ) / FirstVNF_RAM ) - Min( MRS ,( FirstVNF_RAM - FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( ( ( Max( ( CS + ( ( CS + CS ) - ( CS * MUM ) ) ),MLU ) + ( CS + MLU ) ) / MLU ),MLU ) )", "obj1": 0.41325536062378165, "obj2": 0.5294256071310953}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( MUM / Max( ( ( ( RMSe / ( CS - DS ) ) / ( RMSe * RCSe ) ) / RRSe ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( ( MUC / MLU ) * Max( ( CS - ( MUM / MUM ) ),( ( MLU / Max( RCSe,MUR ) ) / ( RMSe / MUR ) ) ) ) - MUM ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22689361889763426}, {"determining": "( ( ( ( ( PN / ( ( ACS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUR - MUR ) - MUM ),( MUC - MLU ) ) / ( RMSe / MUM ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.7426900584795322, "obj2": 0.15378412835667976}, {"determining": "( ( Max( CRS,Max( ( FirstVNF_CPU / FirstVNF_RAM ),BR ) ) + ( ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) + Min( Max( CRS,( Max( PN,MDR ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( Min( ( ( Min( MUM ,MUC ) + ( MUC / DS ) ) / Min( MUM ,RCSe ) ) ,( ( DS * Min( RRSe ,RCSe ) ) - ( ( MLU - CS ) * MUR ) ) ) ,CS ) ) ) / ( MLU / ( MLU - RCSe ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45652784815823083}, {"determining": "( Max( ( ( ( ( PN - ( ( FirstVNF_RAM - MRS ) + FirstVNF_Mem_Server ) ) * Const ) + MRS ) / Max( ARS,( ( Max( ( ARS + AMS ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) ) ),( ( FirstVNF_CPU_Server / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( ARS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MLU * Min( ( MLU + ( CS + RRSe ) ) ,CS ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( ( ( CRS / FirstVNF_CPU ) + BR ) - ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - BR ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( Max( Min( CS ,RRSe ),DS ) / Min( MUC ,CS ) )", "obj1": 0.9610136452241715, "obj2": 0.019004918699719618}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / ( ( Const / FirstVNF_Mem_Server ) + ARS ) ) ) ) ) - ( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( Const - MDR ) ) ) + ACS ) )", "choosing": "( Max( ( MUM / RCSe ),( ( Min( MUM ,( RCSe + Max( MUC,RRSe ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / Max( MUC,( ( MUM / ( ( MLU * RMSe ) + MUC ) ) - RRSe ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2061151503015592}, {"determining": "( ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( CS - RCSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( ( RCSe / RRSe ) ,Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR * RRSe ),DS ) ) ) ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.9298245614035088, "obj2": 0.03157362049007953}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( MDR / PN ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * ( DDR - CRS ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( Max( MUC,( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - DS ) ) ) + CS ) ) + ( RMSe / ( CS - Min( CS ,Max( ( MLU - ( CS * RRSe ) ),DS ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.18807951428587302}, {"determining": "( ( MDR / PN ) - Max( Max( ( Min( FirstVNF_Mem ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) + ( FirstVNF_RAM + Const ) ) ) )", "choosing": "Min( MUC ,Min( RRSe ,( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Min( Min( MUC ,( RCSe * RCSe ) ) ,CS ) ) ) * Max( MLU,( MUC + ( Max( ( MUC - MLU ),MLU ) * ( DS * CS ) ) ) ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.34777286794209544}, {"determining": "( ( ( ( PN * ( ACS * ( MDR * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - ( MLU * ( MUC / CS ) ) ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) )", "obj1": 0.7719298245614035, "obj2": 0.12369566876333124}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR / PN ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / MRS ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - ( CRS + FirstVNF_Mem ) )", "choosing": "Min( ( DS * ( DS * Min( RMSe ,( MLU * RCSe ) ) ) ) ,( RCSe / MUM ) )", "obj1": 0.5243664717348928, "obj2": 0.3743140135625803}, {"determining": "( Max( CRS,( ( ( ( ( BR * ( CRS / Const ) ) + MRS ) / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( Max( MUR,Max( ( Min( MLU ,MUR ) / ( MUC + ( RMSe - Min( Max( DS,RRSe ) ,MUC ) ) ) ),Min( MUR ,MLU ) ) ) ,CS )", "obj1": 0.7095516569200779, "obj2": 0.18532007366424202}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.6510721247563352, "obj2": 0.23967597282132644}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( ( CRS - Min( ACS ,BR ) ) - ( ( AMS * ( FirstVNF_Mem_Server - ( PN + DDR ) ) ) / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( MUC / DS ) + MUM ) ,Max( Max( Max( ( ( MUM - Max( DS,DS ) ) / ( Max( RRSe,MUC ) / CS ) ),MUR ),( DS / RRSe ) ),RMSe ) ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.5730994152046783, "obj2": 0.3157950584203946}, {"determining": "( Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) - ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / MDR ) + ( Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC / RCSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( MUM + Min( MUR ,RRSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( Min( RCSe ,RRSe ) ,MUC ) - ( Min( ( MUM / RMSe ) ,RMSe ) - MUR ) ) )", "obj1": 0.8713450292397661, "obj2": 0.060862401281902845}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + ( ( PN / MDR ) + ( CRS - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RMSe / Min( MUR ,RCSe ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUR - MUC ) ),( CS + ( ( MUC * Min( MLU ,RMSe ) ) / MUR ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( MUR,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.7914230019493177, "obj2": 0.10464787960298487}, {"determining": "( ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),( AMS * ( AMS - FirstVNF_Mem ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( CS * DS ) + ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ) ) ) / ( MUC + RMSe ) )", "obj1": 0.6783625730994152, "obj2": 0.21774597594198122}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - ( MLU * ( MUC / CS ) ) ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.391812865497076, "obj2": 0.560852458578664}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - Min( ( ( CS + Max( MLU,RCSe ) ) + RRSe ) ,Max( ( MUC + ( MLU * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.5692007797270955, "obj2": 0.3240233997519736}, {"determining": "( Max( ( ( ACS + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( Max( ( RMSe + ( DS + CS ) ),( Min( RCSe ,CS ) / Max( DS,MLU ) ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / RRSe ) + RMSe ) ) ),MUM ) ) )", "obj1": 0.3723196881091618, "obj2": 0.5897025909870993}, {"determining": "( Max( CRS,( ( ( PN / ( ( ( BR + ARS ) / DDR ) * Min( DDR ,RRS ) ) ) / ( FirstVNF_RAM_Server * AMS ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( ( Min( MUR ,RRSe ) + MUM ) / RMSe ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( RCSe ,MLU ) ),( ( MLU + ( DS - RRSe ) ) + MUR ) ) * Min( Min( Min( MLU ,MUM ) ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / ( MUM * CS ) ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6325135425276618}, {"determining": "( ( ( ( FirstVNF_RAM_Server - Min( FirstVNF_RAM_Server ,( BR + AMS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - ( FirstVNF_Mem * Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server * Max( ( Max( BR,FirstVNF_RAM_Server ) * FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( CS - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( Max( DS,MUC ) - MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUM - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Max( Min( ( ( MUC * MUC ) - RCSe ) ,( RRSe + Min( MLU ,RRSe ) ) ),DS ) ,Max( ( RMSe - CS ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.31968810916179335, "obj2": 0.6674847888300521}, {"determining": "( ( PN + ( ( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( Max( Min( DS ,RMSe ),( MLU / DS ) ) - MUR ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( Min( FirstVNF_Mem ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( Max( MDR,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( ( RMSe + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ) )", "obj1": 0.43664717348927873, "obj2": 0.49790660024855615}, {"determining": "( ( ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( CRS * RRS ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( ( ( MUC * RMSe ) / Max( RRSe,MUR ) ) + MUM ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) )", "obj1": 0.580896686159844, "obj2": 0.31071996423241444}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( FirstVNF_RAM_Server - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( ( MUM / Max( ( Max( RMSe,RMSe ) / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.7602339181286549, "obj2": 0.1419005484226174}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RCSe,RMSe ) ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.33723196881091616, "obj2": 0.6402222320438086}, {"determining": "( ( ( ( Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) / ARS ) - Min( ACS ,Max( ( FirstVNF_CPU_Server / RRS ),( ( ( Const - FirstVNF_CPU_Server ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * ( CS + MUR ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.672514619883041, "obj2": 0.22203698410319062}, {"determining": "( ( CRS - ( MRS * DDR ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC / RCSe ) ,MUR )", "obj1": 0.39571150097465885, "obj2": 0.5560970352919234}, {"determining": "( ( ( ( ( ACS * RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( ( ( BR / BR ) / ( ACS - FirstVNF_Mem ) ) / RRS ) - ( MDR - ARS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( Min( MUM ,( RCSe + Max( ( MUR - MUR ),MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + MLU ) ) / Max( ( MUC * ( RMSe / Min( RCSe ,( ( RCSe * MLU ) / RMSe ) ) ) ),( CS + MUC ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4793139748480664}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( Max( Max( MUC,( MUC - ( MUM / Min( ( RMSe - MUC ) ,( RMSe * DS ) ) ) ) ),( ( Min( Max( RCSe,( Min( MUM ,MUC ) + RRSe ) ) ,( RCSe + ( ( MUM - RCSe ) / MLU ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( RMSe + RCSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5473134633938028}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3996101364522417, "obj2": 0.5473134633938028}, {"determining": "( ( ( ( Max( RRS,ACS ) / ( ( MDR + MRS ) + FirstVNF_Mem ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( ( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) + Const ) + Max( PN,BR ) ) / FirstVNF_Mem ) / MDR ) + ( Max( FirstVNF_CPU,( Max( CRS,Min( ACS ,BR ) ) + ( Max( ACS,BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - Min( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ,RRS ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( ( ( ( MUC - MUC ) - MUM ) * ( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( MUC * MUM ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,Max( MLU,MUC ) ) ,( RCSe + Max( RMSe,MUM ) ) ),( MUM - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Max( Min( ( ( MUC * MUC ) - RCSe ) ,( RRSe + Min( MUR ,RRSe ) ) ),DS ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,( ( MUR - ( Min( MUR ,MLU ) + ( RMSe - ( MUM / MUM ) ) ) ) / MUC ) ) )", "obj1": 0.28654970760233917, "obj2": 0.719134133570989}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Max( ( MUC - Min( MUM ,CS ) ),CS ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.7641325536062378, "obj2": 0.13191254870385977}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * MRS ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MLU + RRSe ) ,( ( ( MUC * RMSe ) * Max( Max( ( ( RCSe * MUM ) / ( ( RMSe - DS ) * MLU ) ),( MLU * Max( DS,MLU ) ) ),MUM ) ) + ( MLU / ( Min( ( ( RCSe * RCSe ) / MUM ) ,RRSe ) - MLU ) ) ) )", "obj1": 0.3255360623781676, "obj2": 0.6637679614320202}, {"determining": "( ( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,MLU ) + ( DS + ( Min( ( Max( RCSe,( ( MLU / MUC ) + RMSe ) ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( Min( DS ,RMSe ),( MLU / DS ) ) - MUR ) ),CS ) ) ) )", "obj1": 0.9727095516569201, "obj2": 0.012616383667352255}, {"determining": "( ( ( ( PN / ( ACS * FirstVNF_RAM ) ) + ( ( FirstVNF_Mem / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) + ( BR - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( MDR / PN ) ) ) + ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( MUR - Max( MUC,DS ) ) ) ) ,Min( ( Max( ( MLU + RRSe ),( MUC + ( RRSe / ( DS - ( MUC + CS ) ) ) ) ) / Min( Min( ( ( ( DS + MUM ) + RRSe ) - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6296576400629111}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( CRS / MDR ) ) / ( ACS * Const ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) )", "choosing": "( Max( Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ),RRSe ) / ( MUC + RMSe ) )", "obj1": 0.8460038986354775, "obj2": 0.07255137167400294}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( Max( MRS,( ( ( ( MDR / MRS ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) ) ) + ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) ) ) - ( ( MRS - BR ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RCSe,RMSe ) ) ) * ( ( MLU / ( MUC * ( ( RCSe - RCSe ) + RMSe ) ) ) - RCSe ) ) ,RRSe ) )", "obj1": 0.2962962962962963, "obj2": 0.7047616861334897}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.44639376218323584, "obj2": 0.4840913442806068}, {"determining": "( ( PN + Max( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ),( MDR + MDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( Min( Max( ( RMSe * CS ),DS ) ,( RRSe / CS ) ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( MDR / ACS ) )", "choosing": "Min( MLU ,( Max( RMSe,Max( ( RMSe / ( DS * CS ) ),Min( RCSe ,MUR ) ) ) - ( ( MUR / MLU ) * ( ( MUM + RMSe ) + Max( MUM,( RMSe + RCSe ) ) ) ) ) )", "obj1": 0.4756335282651072, "obj2": 0.43698510912336747}, {"determining": "( Max( CRS,( ( ( PN / ( Min( ARS ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) + ACS ) ) - ( PN / MDR ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( ( ( ( MLU - MLU ) / CS ) + RRSe ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUM,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( ( RCSe / RRSe ) ,Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.33528265107212474, "obj2": 0.6440994491971811}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + MDR ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( MUM * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.30994152046783624, "obj2": 0.6879488875408828}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6741752092102202}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * MRS ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - ( PN / MDR ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( Max( CS,( RRSe / MLU ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.3138401559454191, "obj2": 0.6867776346400283}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( MDR * FirstVNF_CPU ) ) + Max( MRS,( ( ARS * ACS ) / FirstVNF_RAM_Server ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( RCSe + ( MUC / Min( MUC ,MUM ) ) ) / MLU ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3001949317738791, "obj2": 0.6988603721098954}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.621832358674464, "obj2": 0.27126353004566256}, {"determining": "( Max( CRS,( Min( ( ( AMS * FirstVNF_RAM ) - ( ( ( Const + BR ) / FirstVNF_RAM_Server ) * Max( BR,PN ) ) ) ,MDR ) + ACS ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( Min( MUC ,( ( CS / RCSe ) - MUC ) ) + RCSe ),RRSe ) ,( RMSe * MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.5171183834365993}, {"determining": "( ( ( Max( Max( FirstVNF_RAM_Server,BR ),ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + MDR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS - CS ) + Min( Max( CS,( MLU / ( RMSe / RRSe ) ) ) ,RMSe ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( ( RCSe / RRSe ) ,Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR * RRSe ),DS ) ) ) ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6528563943215362}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.42884990253411304, "obj2": 0.506652141881991}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( Max( RMSe,RMSe ) / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / RMSe ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.49317738791423, "obj2": 0.42081915865666203}, {"determining": "( ( ( ( PN * ( ( PN / Max( RRS,( MDR + FirstVNF_CPU ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( PN,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,Max( ( MUC + ( Max( DS,MUR ) * DS ) ),CS ) ) ,Max( Min( ( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) - CS ) ,MUM ),MLU ) )", "obj1": 0.8538011695906432, "obj2": 0.06906992352168669}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,( Min( ( CS / RRSe ) ,MUR ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) )", "obj1": 0.36257309941520466, "obj2": 0.6060794341851303}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / ( CS - MLU ) ) / Min( DS ,( MLU + ( ( ( MUC - MUC ) - MUM ) + ( Min( MUR ,RCSe ) - MUR ) ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.5633528265107213, "obj2": 0.32657497809209585}, {"determining": "( Max( Max( Max( CRS,( ( PN / FirstVNF_Mem_Server ) + ( ( MRS * ACS ) / FirstVNF_RAM_Server ) ) ),( ( PN / MDR ) / Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ),( ( ( ( ( ( MDR * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR / PN ) ),( AMS * ( MRS - FirstVNF_Mem ) ) ) ) / ( MDR * Max( ( MDR * FirstVNF_RAM_Server ),Min( FirstVNF_Mem ,MRS ) ) ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUM - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Max( Min( ( ( MUC * MUC ) - RCSe ) ,( RRSe + Min( MUR ,RRSe ) ) ),DS ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.277164029990096}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( FirstVNF_Mem * ( Max( ( FirstVNF_Mem_Server - ACS ),FirstVNF_RAM ) * MDR ) ) * ACS ) ) + ( ( PN / MDR ) / ( Max( FirstVNF_Mem,PN ) - ( MDR / PN ) ) ) ) - Min( ( ( ( FirstVNF_RAM_Server - Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - Const ) + Min( FirstVNF_CPU_Server ,AMS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUM + ( RRSe - CS ) ) / RRSe ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / Max( RRSe,MUC ) ) ) ) / Min( Min( ( CS - Max( RRSe,RCSe ) ) ,MUR ) ,Max( ( RRSe - MUR ),RMSe ) ) ) ,Max( ( MUC * ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.557504873294347, "obj2": 0.332696449165835}, {"determining": "( ( ( ( ARS / Max( Max( ARS,MDR ),Const ) ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ( MDR + Const ) ) ) ) - ( MDR / BR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( MUR + Min( MUM ,Min( DS ,Min( RCSe ,RCSe ) ) ) ) ) - ( ( MLU - ( DS / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.8011695906432749, "obj2": 0.09961117425169713}, {"determining": "( ( FirstVNF_RAM_Server / PN ) - Max( CRS,( ( PN / ( CRS / RRS ) ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( MLU ,Min( ( MUM * ( Max( ( RRSe - CS ),( RCSe / ( MUC + DS ) ) ) - ( MLU * Max( Min( ( MUR - CS ) ,MUM ),Min( RCSe ,( DS * RMSe ) ) ) ) ) ) ,MUR ) )", "obj1": 0.28460038986354774, "obj2": 0.7255339523480594}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,Max( ( PN / FirstVNF_RAM ),( Max( ACS,BR ) / ( MDR - MRS ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Max( ( RMSe - ( RMSe * MLU ) ),RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.48937949714256895}, {"determining": "( ( ( ( ARS / Max( Max( ARS,MDR ),Const ) ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ( MDR + Const ) ) ) ) - ( MDR / BR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( MUR + Min( MUM ,Min( DS ,Min( RCSe ,RCSe ) ) ) ) ) - ( ( MLU - ( DS / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.03698818906762633}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( MDR / PN ) - ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( AMS + ( FirstVNF_RAM + BR ) ) ) ) ) ) ) - ( FirstVNF_Mem + Min( Min( PN ,AMS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( MUR,( RRSe / ( Max( Max( ( MUC - MUC ),MUM ),( MLU - MUC ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ) ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Min( ( MUC - ( DS + MLU ) ) ,CS ) ) / Min( RRSe ,MUC ) ) ) - ( MUM - Min( RRSe ,CS ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17494368512618289}, {"determining": "( ( ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) - ( ACS - Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( FirstVNF_Mem * FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( Min( MUC ,RRSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + ( CS + RCSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + DS ) ) ) ) ) )", "obj1": 0.783625730994152, "obj2": 0.11222841342045471}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + Min( ACS ,ARS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( MUC / RRSe ) * Max( RMSe,RMSe ) ) + MLU ) / Min( MLU ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.5516569200779727, "obj2": 0.3375208423687123}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ( MDR / PN ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / ACS ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + Min( MUC ,RCSe ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.7758284600389863, "obj2": 0.11976144814588818}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "( Max( MUR,( ( Min( DS ,Min( MUC ,MUR ) ) / ( ( RCSe - DS ) * MLU ) ) + RMSe ) ) / ( MUC + RMSe ) )", "obj1": 0.594541910331384, "obj2": 0.29866531693763604}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( ( MUR + MUR ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.4017934369130944}, {"determining": "( ( ( ( FirstVNF_RAM_Server - Min( FirstVNF_RAM_Server ,( BR + AMS ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - ( FirstVNF_Mem * Min( FirstVNF_RAM_Server ,( FirstVNF_CPU_Server * Max( ( Max( BR,FirstVNF_RAM_Server ) * FirstVNF_CPU ),CRS ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( CS - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( Max( DS,MUC ) - MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUM - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Max( Min( ( ( MUC * MUC ) - RCSe ) ,( RRSe + Min( MLU ,RRSe ) ) ),DS ) ,Max( ( RMSe - CS ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.41434932758994486}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( Max( RMSe,RMSe ) / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.530214424951267, "obj2": 0.36674880883110167}, {"determining": "( ( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( ( Min( AMS ,PN ) - PN ) - CRS ) * FirstVNF_Mem ) ) / ( ( MDR - ( MDR - Const ) ) * Max( Min( MDR ,FirstVNF_RAM_Server ),( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.4853801169590643, "obj2": 0.42339893173209564}, {"determining": "( Max( Max( ( AMS * MRS ),PN ),( ( ACS + ( FirstVNF_RAM / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) + ( PN / ( Max( Max( Min( FirstVNF_RAM ,Const ),Const ),MDR ) * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( ( ( ( Max( CS,RCSe ) + Max( MUM,RRSe ) ) * ( DS / RCSe ) ) / Min( Max( ( RRSe / RCSe ),Min( RCSe ,RMSe ) ) ,( MUM + RCSe ) ) ) * RMSe ) / Max( MUR,MUR ) ) - MUC ) ,Min( ( ( Max( MLU,( Max( RCSe,MLU ) + RRSe ) ) + ( MLU - ( Min( ( RMSe / MUR ) ,( MUM - MLU ) ) + CS ) ) ) + Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3840155945419103, "obj2": 0.5713422507578213}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( MDR + FirstVNF_CPU ) ) * FirstVNF_RAM ) - MDR ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / MUC ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( Min( ( RRSe - CS ) ,MUM ),Min( RCSe ,( RMSe * DS ) ) ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.8070175438596491, "obj2": 0.09405095911467919}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( CRS / MDR ) ) / ( ACS * Const ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) )", "choosing": "Min( ( MUR * DS ) ,Min( Max( ( MUC + MLU ),CS ) ,( ( RCSe + Max( ( MUR - MUR ),MUC ) ) + Max( MUC,( Min( ( MUR + MUC ) ,RMSe ) / ( CS * MLU ) ) ) ) ) )", "obj1": 0.8460038986354775, "obj2": 0.07255137167400294}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.4951267056530214, "obj2": 0.41434932758994486}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.645224171539961, "obj2": 0.24493451653897128}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( Max( BR,FirstVNF_Mem_Server ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Max( ( MUC - Min( MUM ,CS ) ),CS ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.7192982456140351, "obj2": 0.17494368512618289}, {"determining": "( ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) - ( MDR / PN ) )", "choosing": "Min( ( RMSe - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( MLU / DS ) ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( FirstVNF_RAM_Server / FirstVNF_CPU ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( Max( ( CS - Max( RRSe,( RCSe + ( MUC - RRSe ) ) ) ),Max( ( RCSe - RMSe ),RMSe ) ),Max( Min( ( ( CS + DS ) * Max( ( MUC / ( RRSe - CS ) ),Max( Max( CS,MUM ),RMSe ) ) ) ,Min( ( MUC + RCSe ) ,MLU ) ),Min( RMSe ,( ( RRSe + MLU ) + MUC ) ) ) ) ,( RMSe * MUR ) )", "obj1": 0.682261208576998, "obj2": 0.21103282406144502}], "53": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU - RRS ) ),Const ) - ( Max( ( FirstVNF_CPU - ( Const - FirstVNF_CPU_Server ) ),ACS ) / PN ) )", "choosing": "( Max( RRSe,( ( ( ( ( RMSe * MUR ) + Min( RMSe ,MUC ) ) - Max( ( MUR + Max( CS,MUR ) ),CS ) ) * ( ( MUR - MUC ) / RRSe ) ) - MLU ) ) + ( DS + ( Min( ( Max( RCSe,MUC ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( ( DS / RCSe ),( MLU / MUC ) ) - MUR ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( MDR - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RRSe,RCSe ) ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "( Max( RRSe,( ( ( ( ( RMSe * MUR ) + Min( RMSe ,MUC ) ) - Max( ( MUR + Max( CS,MUR ) ),CS ) ) * ( ( MUR - MUC ) / RRSe ) ) - MLU ) ) + ( DS + ( Min( ( Max( RCSe,MUC ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( ( DS / RCSe ),( MLU / MUC ) ) - MUR ) ),CS ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( ( ( ( PN + CRS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( ( MUR + MUR ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / ( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.5087719298245614, "obj2": 0.395517086862889}, {"determining": "( Max( AMS,( ( ( Max( Max( Max( FirstVNF_Mem_Server,MDR ),( DDR * FirstVNF_Mem_Server ) ),ARS ) / ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_RAM_Server / PN ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( RMSe - ( RMSe - ( RRSe * MUC ) ) ) ,( MLU - ( ( MUR / MLU ) + ( ( MUM + RMSe ) + ( MUM / ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.6374269005847953, "obj2": 0.2592790334449771}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.42884990253411304, "obj2": 0.506652141881991}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( MDR / ACS ) )", "choosing": "Min( MLU ,( Max( RMSe,Max( ( RMSe / ( DS * CS ) ),Min( RCSe ,MUR ) ) ) - ( ( MUR / MLU ) * ( ( MUM + RMSe ) + Max( MUM,( RMSe + RCSe ) ) ) ) ) )", "obj1": 0.4756335282651072, "obj2": 0.43698510912336747}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( Max( CRS,( Min( ( ( AMS * FirstVNF_RAM ) - ( ( ( Const + BR ) / FirstVNF_RAM_Server ) * Max( BR,PN ) ) ) ,MDR ) + ACS ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( Min( MUC ,( ( CS / RCSe ) - MUC ) ) + RCSe ),RRSe ) ,( RMSe * MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.5171183834365993}, {"determining": "( ( ( FirstVNF_CPU_Server - RRS ) * MDR ) - Max( MDR,PN ) )", "choosing": "( Max( Max( MUC,( MUC - ( MUM / Min( ( RMSe * RMSe ) ,( RMSe - MUC ) ) ) ) ),( ( Min( Max( RCSe,( Min( MUM ,MUC ) + RRSe ) ) ,( RCSe + ( ( MUM - RCSe ) / MLU ) ) ) / ( MLU * ( DS - CS ) ) ) + RMSe ) ) / ( RMSe + RCSe ) )", "obj1": 0.47368421052631576, "obj2": 0.4446145518588321}, {"determining": "( Min( FirstVNF_Mem ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( Max( MDR,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( ( RMSe + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ) )", "obj1": 0.43664717348927873, "obj2": 0.49790660024855615}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ( MDR / PN ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( FirstVNF_Mem + ( PN - FirstVNF_Mem ) ) ) - MDR )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.949317738791423, "obj2": 0.02363193626907776}, {"determining": "( ( ( ( ( PN / ( ( ( DDR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / ( ( CRS + FirstVNF_Mem ) + FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + ( RRSe / RMSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( Min( ( CS / RRSe ) ,MUM ),RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6237816764132553, "obj2": 0.26481308509726076}, {"determining": "( ( ( ( ( ( MDR * FirstVNF_CPU ) / Const ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( MDR * ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,Max( ( MUM + MLU ),DS ) ) / ( MUC + RMSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Max( ( MUC - Min( MUM ,CS ) ),CS ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.7641325536062378, "obj2": 0.13191254870385977}, {"determining": "( ( ( ( ( ACS * RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( PN / MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( ( ( BR / BR ) / ( ACS - FirstVNF_Mem ) ) / RRS ) - ( MDR - ARS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUR,( ( Min( MUM ,( RCSe + Max( ( MUR - MUR ),MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + MLU ) ) / Max( ( MUC * ( RMSe / Min( RCSe ,( ( RCSe * MLU ) / RMSe ) ) ) ),( CS + MUC ) ) )", "obj1": 0.4502923976608187, "obj2": 0.4793139748480664}, {"determining": "( Max( ( ( ACS + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ),( ( PN / ( Max( Max( MRS,Min( Const ,FirstVNF_CPU ) ),MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( Max( ( RMSe + ( DS + CS ) ),( Min( RCSe ,CS ) / Max( DS,MLU ) ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / RRSe ) + RMSe ) ) ),Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) ) ) )", "obj1": 0.38011695906432746, "obj2": 0.5787364682396297}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6741752092102202}, {"determining": "( Max( Max( ( AMS * MRS ),PN ),( ( ACS + ( FirstVNF_RAM / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) + ( PN / ( Max( Max( Min( FirstVNF_RAM ,Const ),Const ),MDR ) * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( ( ( ( Max( CS,RCSe ) + Max( MUM,RRSe ) ) * ( DS / RCSe ) ) / Min( Max( ( RRSe / RCSe ),Min( RCSe ,RMSe ) ) ,( MUM + RCSe ) ) ) * RMSe ) / Max( MUR,MUR ) ) - MUC ) ,Min( ( ( Max( MLU,( Max( RCSe,MLU ) + RRSe ) ) + ( MLU - ( Min( ( RMSe / MUR ) ,( MUM - MLU ) ) + CS ) ) ) + Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3840155945419103, "obj2": 0.5713422507578213}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( MDR / PN ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * ( DDR - CRS ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( Max( MUC,( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - DS ) ) ) + CS ) ) + ( RMSe / ( CS - Min( CS ,Max( ( MLU - ( CS * RRSe ) ),DS ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.18807951428587302}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,Max( ( PN / FirstVNF_RAM ),( Max( ACS,BR ) / ( MDR - MRS ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Max( ( RMSe - ( RMSe * MLU ) ),RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.48937949714256895}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( Max( RMSe,RMSe ) / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.530214424951267, "obj2": 0.36674880883110167}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "Min( ( ( MUC + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.6588693957115009, "obj2": 0.23596291002000375}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR / PN ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / MRS ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - ( CRS + FirstVNF_Mem ) )", "choosing": "Min( ( DS * ( DS * Min( RMSe ,( MLU * RCSe ) ) ) ) ,( RCSe / MUM ) )", "obj1": 0.5243664717348928, "obj2": 0.3743140135625803}, {"determining": "( Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) - ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / MDR ) + ( Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC / RCSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( MUM + Min( MUR ,RRSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( Min( RCSe ,RRSe ) ,MUC ) - ( Min( ( MUM / RMSe ) ,RMSe ) - MUR ) ) )", "obj1": 0.8713450292397661, "obj2": 0.060862401281902845}, {"determining": "( Max( ( CRS - RRS ),( ( PN / ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_CPU ) ) + Min( MRS ,Max( ACS,BR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( MUR * Max( Max( MUM,Min( DS ,( MUR * RCSe ) ) ),CS ) ),( CS - RRSe ) ) / MLU ) ,Max( ( ( RRSe - ( ( Min( Min( MUR ,MLU ) ,RRSe ) + MUM ) / Max( RCSe,RMSe ) ) ) * Max( MLU,( MUC + ( DS * ( DS * CS ) ) ) ) ),RRSe ) )", "obj1": 0.5906432748538012, "obj2": 0.3056388747348088}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.6510721247563352, "obj2": 0.23967597282132644}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6432748538011696, "obj2": 0.24583568680092496}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.8226120857699805, "obj2": 0.09117264039616299}, {"determining": "( ( MDR / PN ) - Max( Max( ( Min( FirstVNF_Mem ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) + ( FirstVNF_RAM + Const ) ) ) )", "choosing": "Min( MUC ,Min( RRSe ,( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Min( Min( MUC ,( RCSe * RCSe ) ) ,CS ) ) ) * Max( MLU,( MUC + ( Max( ( MUC - MLU ),MLU ) * ( DS * CS ) ) ) ) ) ) )", "obj1": 0.543859649122807, "obj2": 0.34777286794209544}, {"determining": "( ( ( ( PN / ( ACS * FirstVNF_RAM ) ) + ( ( FirstVNF_Mem / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) + ( BR - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( MDR / PN ) ) ) + ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( MUR - Max( MUC,DS ) ) ) ) ,Min( ( Max( ( MLU + RRSe ),( MUC + ( RRSe / ( DS - ( MUC + CS ) ) ) ) ) / Min( Min( ( ( ( DS + MUM ) + RRSe ) - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6296576400629111}, {"determining": "( ( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( Min( Const ,FirstVNF_Mem_Server ),MRS ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_Mem ,( AMS - ARS ) ) )", "choosing": "( ( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RRSe ) ,( Max( ( RMSe - DS ),RMSe ) + RCSe ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) / ( MUC + RMSe ) )", "obj1": 0.8284600389863548, "obj2": 0.08085302635999475}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * BR ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - Min( ( ( CS + Max( MLU,RCSe ) ) + RRSe ) ,Max( ( MUC + ( MLU * ( DS * CS ) ) ),( ( MLU / MUC ) + Max( RCSe,MUR ) ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.594541910331384, "obj2": 0.29770043002282337}, {"determining": "( Max( ( ( ( ( PN - ( ( FirstVNF_RAM - MRS ) + FirstVNF_Mem_Server ) ) * Const ) + MRS ) / Max( ARS,( ( Max( ( ARS + AMS ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) ) ),( ( FirstVNF_CPU_Server / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( ARS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MLU * Min( ( MLU + ( CS + RRSe ) ) ,CS ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Min( MUC ,RRSe ) - MUM ) ,RRSe ) )", "obj1": 0.3586744639376218, "obj2": 0.610401765714804}, {"determining": "( ( ( Max( Max( FirstVNF_RAM_Server,BR ),ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + MDR ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( DS - CS ) + Min( Max( CS,( MLU / ( RMSe / RRSe ) ) ) ,RMSe ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( ( RCSe / RRSe ) ,Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR * RRSe ),DS ) ) ) ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.6528563943215362}, {"determining": "( ( ( ( ARS * ( FirstVNF_CPU * FirstVNF_Mem ) ) - ( Max( ACS,RRS ) / ARS ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) - ( MDR / ( ( ( Const + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RMSe * MUM ),MUR ) ) ,( ( ( RCSe / Max( ( ( MUM - DS ) / ( Min( RMSe ,MUC ) - ( MUM - MUR ) ) ),Max( MUR,MUC ) ) ) / ( MUC / RCSe ) ) + ( ( ( MUC / DS ) / Min( MUR ,MUC ) ) + Min( Max( ( ( RCSe + MUR ) / MLU ),DS ) ,RMSe ) ) ) )", "obj1": 0.49902534113060426, "obj2": 0.4132263476700355}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + ( ( PN / MDR ) + ( CRS - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RMSe / Min( MUR ,RCSe ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUR - MUC ) ),( CS + ( ( MUC * Min( MLU ,RMSe ) ) / MUR ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( MUR,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.7914230019493177, "obj2": 0.10464787960298487}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( Max( MRS,( ( ( ( MDR / MRS ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) ) ) + ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) ) ) - ( ( MRS - BR ) / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RCSe,RMSe ) ) ) * ( ( MLU / ( MUC * ( ( RCSe - RCSe ) + RMSe ) ) ) - RCSe ) ) ,RRSe ) )", "obj1": 0.2962962962962963, "obj2": 0.7047616861334897}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,PN ) - ( MDR / PN ) ) ) ) - ( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( CS,RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.18361256495746633}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / FirstVNF_RAM ) ) ) - ( MRS / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( RMSe + MUM ) / MLU ) ) * ( MUM + CS ) ) ,RRSe ) )", "obj1": 0.4171539961013645, "obj2": 0.5272185081869226}, {"determining": "( ( ( ( PN * ( ACS * ( MDR * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - ( MLU * ( MUC / CS ) ) ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) )", "obj1": 0.7719298245614035, "obj2": 0.12369566876333124}, {"determining": "( ( ( ( ( ( Max( Min( MRS ,PN ),Min( CRS ,FirstVNF_Mem ) ) * FirstVNF_CPU ) / FirstVNF_RAM ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( MDR * FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( CS / Min( ( Max( MUR,MUM ) * MUM ) ,MUM ) ) * ( MLU - ( ( CS / Min( ( Max( MUR,MUM ) * MUM ) ,MUM ) ) / ( DS / ( MLU - DS ) ) ) ) ) / ( MUC + RMSe ) )", "obj1": 0.9785575048732943, "obj2": 0.010341430390303928}, {"determining": "( ( ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / PN ) ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,( MUM / Max( MUR,( ( Min( DS ,Min( MUC ,MUR ) ) / ( ( RCSe - DS ) * MLU ) ) + RMSe ) ) ) )", "obj1": 0.7582846003898636, "obj2": 0.13736392337040498}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * MRS ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - ( PN / MDR ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( Max( CS,( RRSe / MLU ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.3138401559454191, "obj2": 0.6867776346400283}, {"determining": "( ( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( ( Min( AMS ,PN ) - ( AMS - BR ) ) - CRS ) * FirstVNF_Mem ) ) / ( ( MDR - ( MDR - Const ) ) * Max( Min( MDR ,FirstVNF_RAM_Server ),( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_CPU ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( ( Max( MUM,( DS + RCSe ) ) * ( MLU * RRSe ) ) - MUR ) ) / ( MUC + CS ) )", "obj1": 0.4853801169590643, "obj2": 0.42339893173209564}, {"determining": "( Max( CRS,( Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / ( MUC + ( RMSe - Min( Max( DS,RRSe ) ,MUC ) ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.29434697855750486, "obj2": 0.7132521183673528}, {"determining": "( ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) / ARS ) - ( ACS * ( MDR / PN ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN - FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( FirstVNF_Mem_Server - ARS ) ) ) ) - Min( ACS ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RRSe * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ,Max( MUC,( ( Min( Min( RMSe ,( ( CS / MLU ) * ( RMSe / RMSe ) ) ) ,RRSe ) + MUM ) / ( CS * MLU ) ) ) )", "obj1": 0.6647173489278753, "obj2": 0.2296703945840961}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / ( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) )", "obj1": 0.35282651072124754, "obj2": 0.6203753391384057}, {"determining": "( ( ( CRS - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( CRS / RRS ) + ( Max( PN,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( Const,AMS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( RRS * PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,( MLU / ( ( RRSe / Min( ( RRSe - MLU ) ,MUC ) ) * MUM ) ) ) ,Max( Min( ( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) - DS ) ,MUM ),MLU ) )", "obj1": 0.8576998050682261, "obj2": 0.06720255100086187}, {"determining": "( ( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( ( Min( AMS ,PN ) - PN ) - CRS ) * FirstVNF_Mem ) ) / ( ( MDR - ( MDR - Const ) ) * Max( Min( ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ),( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( DS / RRSe ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.32943469785575047, "obj2": 0.6586818445785564}, {"determining": "( Max( ( ( ( Const * FirstVNF_RAM ) + MRS ) / Max( ARS,( ( Max( Min( DDR ,FirstVNF_Mem ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) ) ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Min( Max( MUR,Max( ( Min( MLU ,MUR ) / ( MUC + ( RMSe / MLU ) ) ),Min( DS ,MLU ) ) ) ,CS )", "obj1": 0.3742690058479532, "obj2": 0.5882946866046552}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( Max( BR,FirstVNF_Mem_Server ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ),RRSe ) / ( MUC + RMSe ) )", "obj1": 0.7192982456140351, "obj2": 0.17494368512618289}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( Max( ARS,Const ) * Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,( Min( ( CS / RRSe ) ,MUR ) / ( ( DS * RCSe ) / ( Min( MUR ,RRSe ) + MUM ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5634625997245778}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RCSe,RMSe ) ) ) * Max( MLU,( MUC + ( DS * ( DS * CS ) ) ) ) ) ,RRSe ) )", "obj1": 0.543859649122807, "obj2": 0.34777286794209544}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) - Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),CRS ) ),( ( AMS * ( Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) - AMS ) ) + ACS ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Max( CS,MUM ) / ( ( ( CS * DS ) + ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ) ) - RCSe ) ) )", "obj1": 0.9707602339181286, "obj2": 0.01449568790181102}, {"determining": "( ( Max( CRS,Max( ( FirstVNF_CPU / FirstVNF_RAM ),BR ) ) + ( ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) + Min( Max( CRS,( Max( PN,MDR ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( Min( ( ( Min( MUM ,MUC ) + ( MUC / DS ) ) / Min( MUM ,RCSe ) ) ,( ( DS * Min( RRSe ,RCSe ) ) - ( ( MLU - CS ) * MUR ) ) ) ,CS ) ) ) / ( MLU / ( MLU - RCSe ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45652784815823083}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) / ( MUC + RMSe ) )", "obj1": 0.46393762183235865, "obj2": 0.45652784815823083}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( FirstVNF_RAM * MRS ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) ) ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RCSe,RMSe ) ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.6101364522417154, "obj2": 0.2826486335104656}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( ( MUR + MUR ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.4017934369130944}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) + ( ( Max( RRS,ACS ) / FirstVNF_CPU ) - ( ACS * ( FirstVNF_Mem * Min( ARS ,( AMS / Const ) ) ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Min( ( Min( MUR ,CS ) / Max( CS,Min( Min( MUC ,Max( ( RRSe + RCSe ),DS ) ) ,DS ) ) ) ,( MUM - RCSe ) ) ,( Min( MUR ,( RMSe + MUC ) ) + RMSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5926307101903519}, {"determining": "( ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( CS - RCSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( ( RCSe / RRSe ) ,Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR * RRSe ),DS ) ) ) ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.9298245614035088, "obj2": 0.03157362049007953}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( MDR / PN ) - ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( AMS + ( FirstVNF_RAM + BR ) ) ) ) ) ) ) - ( FirstVNF_Mem + Min( Min( PN ,AMS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( MUR,( RRSe / ( Max( Max( ( MUC - MUC ),MUM ),( MLU - MUC ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ) ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Min( ( MUC - ( DS + MLU ) ) ,CS ) ) / Min( RRSe ,MUC ) ) ) - ( MUM - Min( RRSe ,CS ) ) ) )", "obj1": 0.7192982456140351, "obj2": 0.17494368512618289}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( CRS / MDR ) ) / ( ACS * Const ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) )", "choosing": "( Max( Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ),RRSe ) / ( MUC + RMSe ) )", "obj1": 0.8460038986354775, "obj2": 0.07255137167400294}, {"determining": "( ( ( CRS / FirstVNF_CPU ) + BR ) - ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - BR ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( Max( Min( CS ,RRSe ),DS ) / Min( MUC ,CS ) )", "obj1": 0.9610136452241715, "obj2": 0.019004918699719618}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) + ( ( ( MDR * FirstVNF_RAM_Server ) / MDR ) + ( ( CRS - Min( ACS ,BR ) ) - ( ( AMS * ( FirstVNF_Mem_Server - ( PN + DDR ) ) ) / PN ) ) ) ) - Min( FirstVNF_Mem ,( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( ( MUC / DS ) + MUM ) ,Max( Max( Max( ( ( MUM - Max( DS,DS ) ) / ( Max( RRSe,MUC ) / CS ) ),MUR ),( DS / RRSe ) ),RMSe ) ) ,Min( Max( MLU,DS ) ,Max( ( MUC + MUC ),CS ) ) )", "obj1": 0.5730994152046783, "obj2": 0.3157950584203946}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ) / Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.5516569200779727, "obj2": 0.3375208423687123}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( MDR - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * ( CS + MUR ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ) )", "obj1": 0.8654970760233918, "obj2": 0.06210881916910364}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ,Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( CS * MLU ) ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6187114527003731}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - ( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) )", "choosing": "( Max( MUR,( ( Min( MUM ,( RCSe + Max( MUC,MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / Max( MUC,( ( MUM / ( ( MLU * RMSe ) + MUC ) ) - RRSe ) ) )", "obj1": 0.6861598440545809, "obj2": 0.2061151503015592}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * CRS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / Min( RRS ,DDR ) ) )", "choosing": "Min( RRSe ,( ( ( MUC * CS ) + MUR ) / Min( RCSe ,RMSe ) ) )", "obj1": 0.40545808966861596, "obj2": 0.5420577339657991}, {"determining": "( ( ( ( ( ( Min( ( CRS / RRS ) ,( MDR + FirstVNF_CPU ) ) * FirstVNF_RAM ) - MDR ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / ACS ) + ( Max( MDR,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( RMSe + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ) )", "obj1": 0.8109161793372319, "obj2": 0.09219423922228204}, {"determining": "( ( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( Max( ( Min( MUC ,RRSe ) - MUM ),RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) / ( MUC + RMSe ) )", "obj1": 0.8323586744639376, "obj2": 0.07905068583608729}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( MUM / Max( ( ( ( RMSe / ( CS - DS ) ) / ( RMSe * RCSe ) ) / RRSe ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( ( MUC / MLU ) * Max( ( CS - ( MUM / MUM ) ),( ( MLU / Max( RCSe,MUR ) ) / ( RMSe / MUR ) ) ) ) - MUM ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22689361889763426}, {"determining": "( ( ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( Min( MUC ,RRSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + MUR ) ) ) ) ) )", "obj1": 0.7855750487329435, "obj2": 0.111327243158501}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * ( ( ACS * MRS ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / Max( ( ( RCSe * MUM ) / ( ( RMSe - DS ) * MLU ) ),( MLU * Max( DS,MLU ) ) ) ) / Min( DS ,( MLU + ( ( ( MUC - MUC ) - MUM ) + ( Min( MUR ,RCSe ) - MUR ) ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.44639376218323584, "obj2": 0.48341522904639733}, {"determining": "( ( ( ( ARS / Max( Max( ARS,MDR ),Const ) ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ( MDR + Const ) ) ) ) - ( MDR / BR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - ( MLU * ( MUC / CS ) ) ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) )", "obj1": 0.9259259259259259, "obj2": 0.036988189067626326}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RMSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.7348927875243665, "obj2": 0.15928369348675722}, {"determining": "( ( PN + Max( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ),( MDR + MDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( Min( Max( ( RMSe * CS ),DS ) ,( RRSe / CS ) ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( Min( MUC ,RRSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + ( CS + RCSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + DS ) ) ) ) ) )", "obj1": 0.3996101364522417, "obj2": 0.5473134633938028}, {"determining": "( ( ( ( PN * ( ( PN / Max( RRS,( MDR + FirstVNF_CPU ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ),( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,( Max( ( RRSe * MUC ),CS ) + MUC ) ) ,Max( Min( ( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) - CS ) ,MUM ),MLU ) )", "obj1": 0.7992202729044834, "obj2": 0.09787269695386723}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_RAM_Server / PN ) ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - ( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) )", "choosing": "( ( MLU - ( ( MUR / MLU ) + ( ( MUM + RMSe ) + Max( MUM,( RCSe + RMSe ) ) ) ) ) / Max( MUC,( ( MUM / ( ( MLU * RMSe ) + MUC ) ) - RRSe ) ) )", "obj1": 0.98635477582846, "obj2": 0.0064516151408747285}, {"determining": "( ( ( BR + ( ARS - ( PN * FirstVNF_CPU ) ) ) / ( MDR * ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( ACS * FirstVNF_Mem ) ) ) / MDR ) ) ) - Min( FirstVNF_Mem ,Min( ( PN / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),MUC ) ) ) + Max( DS,( MLU + RCSe ) ) ) + RMSe ) ) / Min( Max( Max( MLU,RMSe ),( CS + RCSe ) ) ,MUC ) )", "obj1": 0.9610136452241715, "obj2": 0.019004918699719618}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.645224171539961, "obj2": 0.24493451653897128}, {"determining": "( ( ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) - ( Max( ( ACS * ( BR + ARS ) ),Max( RRS,Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( MDR / PN ) - ( CRS * ( ( PN / MDR ) / FirstVNF_RAM_Server ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,( MUM / Max( ( ( ( ( CS * MUR ) * RMSe ) + MUC ) / ( ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) / Max( ( ( MUC - MUC ) - MUM ),( ( MUM - MLU ) - MLU ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) )", "obj1": 0.5828460038986355, "obj2": 0.30887457092794796}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,Max( RRS,( MDR + FirstVNF_CPU ) ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( Max( ( Min( MLU ,RRSe ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5769980506822612, "obj2": 0.3157399706428074}, {"determining": "( ( ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) - ( ( PN / ( Min( ARS ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,( RRSe / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15633499484412683}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( RMSe - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( MLU / DS ) ) )", "obj1": 0.4074074074074074, "obj2": 0.5394394111547068}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.6198830409356725, "obj2": 0.2751817202069095}, {"determining": "( ( ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / RRSe ) ) ) - ( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.580896686159844, "obj2": 0.3097757411899017}, {"determining": "( ( CRS - ( MRS * DDR ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC / RCSe ) ,MUR )", "obj1": 0.39571150097465885, "obj2": 0.5560970352919234}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + Min( ACS ,ARS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( MUC / RRSe ) * Max( RMSe,RMSe ) ) + MLU ) / Min( MLU ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.5516569200779727, "obj2": 0.3375208423687123}], "54": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU - RRS ) ),Const ) - ( Max( ( FirstVNF_CPU - ( Const - FirstVNF_CPU_Server ) ),ACS ) / PN ) )", "choosing": "( Max( RRSe,( ( ( ( ( RMSe * MUR ) + Min( RMSe ,MUC ) ) - Max( ( MUR + Max( CS,MUR ) ),CS ) ) * ( ( MUR - MUC ) / RRSe ) ) - MLU ) ) + ( DS + ( Min( ( Max( RCSe,MUC ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( ( DS / RCSe ),( MLU / MUC ) ) - MUR ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU - RRS ) ),Const ) - ( Max( ( FirstVNF_CPU - ( Const - FirstVNF_CPU_Server ) ),ACS ) / PN ) )", "choosing": "( Max( RRSe,( ( ( ( ( RMSe * MUR ) + Min( RMSe ,MUC ) ) - Max( ( MUR + Max( CS,MUR ) ),CS ) ) * ( ( MUR - MUC ) / RRSe ) ) - MLU ) ) + ( DS + ( Min( ( Max( RCSe,MUC ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( ( DS / RCSe ),( MLU / MUC ) ) - MUR ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ACS + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - MUR ) + RMSe ) ) + RMSe ) )", "obj1": 0.5087719298245614, "obj2": 0.394514068415908}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( CRS / MDR ) ) / ( ACS * Const ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) )", "choosing": "( Max( Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ),RRSe ) / ( MUC + RMSe ) )", "obj1": 0.8460038986354775, "obj2": 0.07255137167400294}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ),( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - ( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) )", "choosing": "( Max( MUR,( ( Min( MUM ,( RCSe + Max( MUC,MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / Max( MUC,( Min( CS ,RRSe ) - DS ) ) )", "obj1": 0.6861598440545809, "obj2": 0.20611515030155916}, {"determining": "( ( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( ( CRS / Max( FirstVNF_RAM,RRS ) ) ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,BR ) ) ) - Min( FirstVNF_Mem ,Min( Max( AMS,CRS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( Max( ( Min( MUC ,RRSe ) - MLU ),RMSe ) ,( MUM * RRSe ) ) / ( MLU * MLU ) ) + RMSe ) / ( MUC + RMSe ) )", "obj1": 0.7485380116959064, "obj2": 0.14682892404866266}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( MDR / ACS ) )", "choosing": "Min( MLU ,( Max( RMSe,Max( ( RMSe / ( DS * CS ) ),Min( RCSe ,MUR ) ) ) - ( ( MUR / MLU ) * ( ( MUM + RMSe ) + Max( MUM,( RMSe + RCSe ) ) ) ) ) )", "obj1": 0.4756335282651072, "obj2": 0.43698510912336747}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( RRSe / CS ) * Max( RMSe,MUM ) ) + MLU ) / Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.543859649122807, "obj2": 0.34662654035574103}, {"determining": "( ( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( ( Min( AMS ,PN ) - ( AMS - BR ) ) - CRS ) * FirstVNF_Mem ) ) / ( ( MDR - ( MDR - Const ) ) * Max( Min( MDR ,FirstVNF_RAM_Server ),( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_CPU ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( ( Max( MUM,( DS + RCSe ) ) * ( MLU * RRSe ) ) - MUR ) ) / ( MUC + CS ) )", "obj1": 0.4853801169590643, "obj2": 0.42339893173209564}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_CPU - ( Const - FirstVNF_CPU_Server ) ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "Min( ( ( ( DS / RCSe ) + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.8148148148148148, "obj2": 0.09024068157993674}, {"determining": "( Min( FirstVNF_Mem ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( Max( MDR,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( ( RMSe + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ) )", "obj1": 0.43664717348927873, "obj2": 0.49790660024855615}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ) / Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.6198830409356725, "obj2": 0.27234901895822705}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( MDR / PN ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * ( DDR - CRS ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( Max( MUC,( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - DS ) ) ) + CS ) ) + ( RMSe / ( CS - Min( CS ,Max( ( MLU - ( CS * RRSe ) ),DS ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.18807951428587302}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * MUC ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6635372073396558}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.42884990253411304, "obj2": 0.506652141881991}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + ( ( PN / MDR ) + ( CRS - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RMSe / Min( MUR ,RCSe ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUR - MUC ) ),( CS + ( ( MUC * Min( MLU ,RMSe ) ) / MUR ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( MUR,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.7914230019493177, "obj2": 0.10464787960298487}, {"determining": "( Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) - ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / MDR ) + ( Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC / RCSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( MUM + Min( MUR ,RRSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( Min( RCSe ,RRSe ) ,MUC ) - ( Min( ( MUM / RMSe ) ,RMSe ) - MUR ) ) )", "obj1": 0.8713450292397661, "obj2": 0.060862401281902845}, {"determining": "( ( ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) - ( ( PN / ( Min( ARS ,FirstVNF_Mem_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,( RRSe / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.15633499484412683}, {"determining": "( Max( ( ( ( ( PN - ( ( BR - MRS ) + FirstVNF_Mem_Server ) ) * Const ) + MRS ) / Max( ARS,( ( Max( ( FirstVNF_Mem_Server + AMS ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) ) ),( ( FirstVNF_CPU_Server / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MUR * RCSe ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.290448343079922, "obj2": 0.716984702486962}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) - ( Const + MDR ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem / MDR ) / FirstVNF_RAM_Server ) ) - ( PN - MDR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( MUM + MUR ),Min( Max( RCSe,RRSe ) ,MUR ) ) ) ,Max( ( Max( ( DS * Min( MLU ,RRSe ) ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / RRSe ) ) ),( Max( MUR,RCSe ) / CS ) ) )", "obj1": 0.30994152046783624, "obj2": 0.6850041073679596}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,Max( ( PN / FirstVNF_RAM ),( Max( ACS,BR ) / ( MDR - MRS ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Max( ( RMSe - ( RMSe * MLU ) ),RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.48937949714256895}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( MUM / Max( ( ( ( RMSe / ( CS - DS ) ) / ( RMSe * RCSe ) ) / RRSe ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( ( MUC / MLU ) * Max( ( CS - ( MUM / MUM ) ),( ( MLU / Max( RCSe,MUR ) ) / ( RMSe / MUR ) ) ) ) - MUM ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22689361889763426}, {"determining": "( ( ( ( PN / ( ACS * FirstVNF_RAM ) ) + ( ( FirstVNF_Mem / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) + ( BR - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( MDR / PN ) ) ) + ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( MUR - Max( MUC,DS ) ) ) ) ,Min( ( Max( ( MLU + RRSe ),( MUC + ( RRSe / ( DS - ( MUC + CS ) ) ) ) ) / Min( Min( ( ( ( DS + MUM ) + RRSe ) - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6296576400629111}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / FirstVNF_RAM ) ) ) - ( Min( Min( PN ,AMS ) ,FirstVNF_Mem_Server ) / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( DS + MLU ) ,Min( ( ( RRSe - ( ( RMSe + MUM ) / MLU ) ) * ( MUM + CS ) ) ,RRSe ) )", "obj1": 0.6764132553606238, "obj2": 0.21732798507483347}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( Max( RMSe,RMSe ) / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.32748538011695905, "obj2": 0.6575845174611719}, {"determining": "( ( ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) - ( Max( ( ACS * ( BR + ARS ) ),Max( RRS,Min( FirstVNF_Mem ,( FirstVNF_CPU / FirstVNF_Mem_Server ) ) ) ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( MDR / PN ) - ( CRS * ( ( PN / MDR ) / FirstVNF_RAM_Server ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,( MUM / Max( ( ( ( ( CS * MUR ) * RMSe ) + MUC ) / ( ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) / Max( ( ( MUC - MUC ) - MUM ),( ( MUM - MLU ) - MLU ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.728560246644744}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * ( ( ACS * MRS ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / Max( ( ( RCSe * MUM ) / ( ( RMSe - DS ) * MLU ) ),( MLU * Max( DS,MLU ) ) ) ) / Min( DS ,( MLU + ( ( ( RRSe - MUC ) - MUM ) + ( Min( MUR ,RCSe ) - MUR ) ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.3333333333333333, "obj2": 0.6499583937965598}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * BR ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - Min( ( ( CS + Max( MLU,RCSe ) ) + RRSe ) ,Max( ( MUC + ( MLU * ( DS * CS ) ) ),( ( MLU / MUC ) + Max( RCSe,MUR ) ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.594541910331384, "obj2": 0.29770043002282337}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),FirstVNF_CPU_Server ) ) + ( ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + Min( ( ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) + ( FirstVNF_CPU_Server / Max( MDR,MRS ) ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MLU / MUR ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) ) ) + MUR ),MLU ) )", "obj1": 0.47173489278752434, "obj2": 0.4462413287649841}, {"determining": "( ( ( Min( Max( ACS,RRS ) ,ARS ) - ( FirstVNF_CPU - Const ) ) + ( ( PN / MDR ) + FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RCSe / Min( MUR ,RCSe ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUR - MUC ) ),( MUC + ( RRSe / MLU ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( MUR,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.28460038986354774, "obj2": 0.7233114582433136}, {"determining": "( Max( ( ( ( ( PN - ( ( FirstVNF_RAM - MRS ) + FirstVNF_Mem_Server ) ) * Const ) + MRS ) / Max( ARS,( ( Max( ( ARS + AMS ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) ) ),( ( FirstVNF_CPU_Server / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( ARS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MLU * Min( ( MLU + ( CS + RRSe ) ) ,CS ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - ( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) )", "choosing": "( Max( MUR,( ( Min( MUM ,( RCSe + Max( MUC,MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / Max( MUC,( ( MUM / ( ( MLU * RMSe ) + MUC ) ) - RRSe ) ) )", "obj1": 0.6783625730994152, "obj2": 0.21268356752742562}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) * ACS ) ) + ( ( PN - MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / ( AMS * MRS ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Max( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( CS + MUM ) ) ) ) ),( RMSe + ( Max( RRSe,( RCSe / MUM ) ) / DS ) ) ) ,Max( ( MUC + ( DS * ( DS - CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) ,Max( Max( RRSe,RCSe ),RCSe ) )", "obj1": 0.6062378167641326, "obj2": 0.2887713143423972}, {"determining": "( Max( CRS,( Min( ( ( AMS * FirstVNF_RAM ) - ( ( ( Const + BR ) / FirstVNF_RAM_Server ) * Max( BR,PN ) ) ) ,MDR ) + ACS ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( Min( MUC ,( ( CS / RCSe ) - MUC ) ) + RCSe ),RRSe ) ,( RMSe * MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.5171183834365993}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ACS * ( MDR / PN ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( ( ( MUC / RRSe ) * Max( RMSe,RMSe ) ) + MLU ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Max( ( MUC - Min( MUM ,CS ) ),CS ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.7816764132553606, "obj2": 0.11531041546474834}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( Max( ARS,Const ) * Max( ( MRS * FirstVNF_RAM_Server ),( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) ) + ( Min( PN ,MDR ) + ( Max( CRS,( ( PN / MDR ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN * FirstVNF_RAM ) + PN ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( MUC ,( Min( ( CS / RRSe ) ,MUR ) / ( ( DS * RCSe ) / ( Min( MUR ,RRSe ) + MUM ) ) ) )", "obj1": 0.3898635477582846, "obj2": 0.5634625997245778}, {"determining": "( ( ( ( PN * ( ( PN / Max( RRS,( MDR + FirstVNF_CPU ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ),( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - Max( ( ACS * Const ),BR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,( Max( ( RRSe * MUC ),RMSe ) + MUC ) ) ,Max( Min( ( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) - CS ) ,MUM ),MLU ) )", "obj1": 0.6120857699805068, "obj2": 0.2819224960818771}, {"determining": "( ( ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / PN ) ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,( MUM / Max( MUR,( ( Min( DS ,Min( MUC ,MUR ) ) / ( ( RCSe - DS ) * MLU ) ) + RMSe ) ) ) )", "obj1": 0.7563352826510721, "obj2": 0.13831993368343407}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( RMSe - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( MLU / DS ) ) )", "obj1": 0.41130604288499023, "obj2": 0.5343625728373462}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS + CS ) ),( Min( RCSe ,CS ) / Max( DS,MLU ) ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / RRSe ) + RMSe ) ) ),Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6346048530433448}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6413255360623782, "obj2": 0.24773592015646695}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( Min( MUC ,RRSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + ( CS + RCSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + DS ) ) ) ) ) )", "obj1": 0.3996101364522417, "obj2": 0.5473134633938028}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6741752092102202}, {"determining": "( ( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem * ( ( Min( AMS ,PN ) - PN ) - CRS ) ) ) / ( ( MDR - ( MDR - Const ) ) * Max( Min( MDR ,FirstVNF_RAM_Server ),( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( CRS + DDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( Const / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + MUR ) / ( DS / MUC ) )", "obj1": 0.48927875243664715, "obj2": 0.42167252810529116}, {"determining": "( ( ( AMS - Max( ( Min( Max( AMS,MRS ) ,( MRS + PN ) ) * FirstVNF_CPU ),Min( DDR ,( ACS - MRS ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / ( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ) - Min( ( CS + MLU ) ,( CS + ( MUC + ( MUR + CS ) ) ) ) ) ) ,( ( MUM - Min( DS ,Max( MUC,CS ) ) ) + DS ) )", "obj1": 0.5536062378167641, "obj2": 0.3375090550981961}, {"determining": "( ( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( ( Min( AMS ,PN ) - PN ) - CRS ) * FirstVNF_Mem ) ) / ( ( MDR - ( MDR - Const ) ) * Max( Min( ( Max( AMS,MDR ) / FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ),( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( MDR,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( Max( ACS,RRS ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + RMSe ) / Max( DS,CS ) )", "obj1": 0.4249512670565302, "obj2": 0.5142594574369626}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM ) * Const ) ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / ( MRS - BR ) ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( RMSe / MUM ) ) / ( RMSe / ( Min( MUM ,( ( RRSe + CS ) / ( MUR * DS ) ) ) * Min( RRSe ,RCSe ) ) ) ),MLU ) )", "obj1": 0.49707602339181284, "obj2": 0.41667970609763894}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * MRS ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - ( PN / MDR ) )", "choosing": "( Max( ( ( MLU / MUC ) + ( ( DS - CS ) + Min( Max( CS,( RRSe / MLU ) ) ,RMSe ) ) ),( MLU / MUC ) ) / CS )", "obj1": 0.29434697855750486, "obj2": 0.7071678446839746}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Min( MUC ,RRSe ) - MUM ) ,RRSe ) )", "obj1": 0.3586744639376218, "obj2": 0.610401765714804}, {"determining": "( ( ( MRS * FirstVNF_CPU_Server ) + ( ( Max( RRS,ACS ) / FirstVNF_CPU ) - ( ACS * ( FirstVNF_Mem * Min( ARS ,( AMS / Const ) ) ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Min( ( Min( MUR ,CS ) / Max( CS,Min( Min( MUC ,Max( ( RRSe + RCSe ),DS ) ) ,DS ) ) ) ,( MUM - RCSe ) ) ,( Min( MUR ,( RMSe + MUC ) ) + RMSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5926307101903519}, {"determining": "( ( ( ( ( ACS / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * ( AMS + ( FirstVNF_RAM + BR ) ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( ( MRS - AMS ) + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MLU - ( MUM - DS ) ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,CS ) ,MUR ) ) ) ,( Min( RCSe ,Max( RRSe,MLU ) ) - ( Min( MUR ,RRSe ) * MUM ) ) )", "obj1": 0.8089668615984406, "obj2": 0.09311527779595452}, {"determining": "( Max( AMS,( ( ( Max( Max( Max( FirstVNF_Mem_Server,MDR ),( DDR * FirstVNF_Mem_Server ) ),ARS ) / ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_RAM_Server / PN ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( RMSe - ( RMSe - ( RRSe * MUC ) ) ) ,( MLU - ( ( MUR / MLU ) + ( ( MUM + RMSe ) + ( MUM / ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.6374269005847953, "obj2": 0.2592790334449771}, {"determining": "( ( ( Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( FirstVNF_Mem_Server + MDR ) / Min( ACS ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - MDR )", "choosing": "Min( CS ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5029239766081871, "obj2": 0.4017934369130944}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( MDR / PN ) - ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( AMS + ( FirstVNF_RAM + BR ) ) ) ) ) ) ) - ( FirstVNF_Mem + Min( Min( PN ,AMS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( MUR,( RRSe / ( Max( Max( ( MUC - MUC ),MUM ),( MLU - MUC ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ) ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Min( ( MUC - ( DS + MLU ) ) ,CS ) ) / Min( RRSe ,MUC ) ) ) - ( MUM - Min( RRSe ,CS ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6979302825544241}, {"determining": "( Max( Max( ( AMS * MRS ),PN ),( ( ACS + ( FirstVNF_RAM / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) + ( PN / ( Max( Max( Min( FirstVNF_RAM ,Const ),Const ),MDR ) * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( ( ( ( Max( CS,RCSe ) + Max( MUM,RRSe ) ) * ( DS / RCSe ) ) / Min( Max( ( RRSe / RCSe ),Min( RCSe ,RMSe ) ) ,( MUM + RCSe ) ) ) * RMSe ) / Max( MUR,MUR ) ) - MUC ) ,Min( ( ( Max( MLU,( Max( RCSe,MLU ) + RRSe ) ) + ( MLU - ( Min( ( RMSe / MUR ) ,( MUM - MLU ) ) + CS ) ) ) + Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3840155945419103, "obj2": 0.5713422507578213}, {"determining": "( ( PN + Max( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ),( MDR + MDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( Min( Max( ( RMSe * CS ),DS ) ,( RRSe / CS ) ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - ( Min( MUR ,RRSe ) + MUM ) ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.3440279708039283}, {"determining": "( ( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( ( Min( AMS ,PN ) - PN ) - CRS ) * FirstVNF_Mem ) ) / ( ( MDR - ( MDR - Const ) ) * Max( Min( ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ),( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( DS / RRSe ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.341130604288499, "obj2": 0.6433871369067722}, {"determining": "( ( ( ( PN * ( ( PN / Max( RRS,( MDR + FirstVNF_CPU ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ),( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,( Max( ( RRSe * MUC ),CS ) + MUC ) ) ,Max( Min( ( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) - CS ) ,MUM ),MLU ) )", "obj1": 0.7992202729044834, "obj2": 0.09787269695386723}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( Max( BR,FirstVNF_Mem_Server ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS + CS ) ),( Min( RCSe ,CS ) / Max( DS,MLU ) ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.7173489278752436, "obj2": 0.17595453549028733}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.3157894736842105, "obj2": 0.6741752092102202}, {"determining": "( ( Max( CRS,Max( ( FirstVNF_CPU / FirstVNF_RAM ),BR ) ) + ( ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) + Min( Max( CRS,( Max( PN,MDR ) + ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) / FirstVNF_RAM_Server ) ) ) ,( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( Min( ( ( Min( MUM ,MUC ) + ( MUC / DS ) ) / Min( MUM ,RCSe ) ) ,( ( DS * Min( RRSe ,RCSe ) ) - ( ( MLU - CS ) * MUR ) ) ) ,CS ) ) ) / ( MLU / ( MLU - RCSe ) ) )", "obj1": 0.46393762183235865, "obj2": 0.45652784815823083}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ( MDR / PN ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( FirstVNF_Mem + ( PN - FirstVNF_Mem ) ) ) - MDR )", "choosing": "Min( Max( MLU,RMSe ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.949317738791423, "obj2": 0.023631936269077756}, {"determining": "( ( ( ( ( ( MDR * FirstVNF_CPU ) / Const ) + ( AMS * BR ) ) * Max( ( ( PN * CRS ) / ( DDR - PN ) ),( AMS * ( FirstVNF_Mem - ARS ) ) ) ) / ( MDR * ( ( PN / ( ( ( BR + ARS ) / FirstVNF_RAM_Server ) * ( FirstVNF_Mem * ACS ) ) ) / MDR ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MLU ,Max( ( MUM + MLU ),DS ) ) / ( MUC + RMSe ) )", "obj1": 0.9415204678362573, "obj2": 0.027877157325327265}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RRSe,RCSe ) ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.45614035087719296, "obj2": 0.4746346610043003}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / FirstVNF_RAM ) ) ) - ( MRS / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( RMSe + MUM ) / MLU ) ) * ( MUM + CS ) ) ,RRSe ) )", "obj1": 0.4171539961013645, "obj2": 0.5272185081869226}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / ( Min( MUC ,RRSe ) - MUM ) ) ) / MUR ),MLU ) )", "obj1": 0.38011695906432746, "obj2": 0.5778845569244698}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ,Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( CS * MLU ) ) ) )", "obj1": 0.35477582846003897, "obj2": 0.6187114527003731}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( AMS / PN ) ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + ( ACS - BR ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / Max( ( MUR / Min( ( RMSe - MLU ) ,( ( ( RRSe + ( MUC * RCSe ) ) - ( MUR * Min( RCSe ,MUR ) ) ) / MUM ) ) ),MLU ) )", "obj1": 0.46393762183235865, "obj2": 0.45652784815823083}, {"determining": "( ( ( CRS - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( CRS / RRS ) + ( Max( PN,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( Const,AMS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( RRS * PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,( MLU / ( ( RRSe / Min( ( RRSe - MLU ) ,MUC ) ) * MUM ) ) ) ,Max( Min( ( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) - DS ) ,MUM ),MLU ) )", "obj1": 0.5653021442495126, "obj2": 0.33292335991441907}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,PN ) - ( MDR / PN ) ) ) ) - ( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( CS,RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.7115009746588694, "obj2": 0.18361256495746633}, {"determining": "( ( ( ( PN * ( ACS * ( Max( ARS,Const ) * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Min( ( CS / RRSe ) ,MUR ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RMSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.1695072972709582}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR / PN ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / MRS ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - ( CRS + FirstVNF_Mem ) )", "choosing": "Min( ( DS * ( DS * Min( RMSe ,( MLU * RCSe ) ) ) ) ,( RCSe / MUM ) )", "obj1": 0.5243664717348928, "obj2": 0.3743140135625803}, {"determining": "( ( ( ( PN * ( ACS * ( MDR * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - ( MLU * ( MUC / CS ) ) ),MUC ),( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) )", "obj1": 0.7758284600389863, "obj2": 0.12189332823942378}, {"determining": "( ( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( Min( Const ,FirstVNF_Mem_Server ),MRS ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_Mem ,( AMS - ARS ) ) )", "choosing": "( ( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RRSe ) ,( Max( ( RMSe - DS ),RMSe ) + RCSe ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) / ( MUC + RMSe ) )", "obj1": 0.8284600389863548, "obj2": 0.08085302635999475}, {"determining": "( ( ( CRS - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( CRS / RRS ) + ( Max( PN,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( Const,AMS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( RRS * PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,( MLU / ( ( RRSe / Min( ( RRSe - MLU ) ,MUC ) ) * MUM ) ) ) ,Max( Min( ( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) - DS ) ,MUM ),MLU ) )", "obj1": 0.8576998050682261, "obj2": 0.06720255100086187}, {"determining": "( ( CRS - ( MRS * DDR ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC / RCSe ) ,MUR )", "obj1": 0.39571150097465885, "obj2": 0.5560970352919234}, {"determining": "( ( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * ( ( BR + FirstVNF_RAM ) / FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Min( Max( ( Min( MUC ,RRSe ) - MUM ),RMSe ) ,( CS * CS ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) / ( RRSe + RMSe ) )", "obj1": 0.8323586744639376, "obj2": 0.07905068583608729}, {"determining": "( ( PN / ( ( ( Max( ( FirstVNF_RAM * MRS ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( ( PN / FirstVNF_RAM ) * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + ( CRS - MDR ) ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( ( MUC / Max( ( MLU * CS ),DS ) ) - MLU ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9961013645224172, "obj2": 0.0018023405239074657}, {"determining": "( ( MDR + ( MRS - AMS ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / RRSe ) ) + ( RMSe / ( CS - Min( Max( ( MLU * Min( DS ,CS ) ),MUC ) ,CS ) ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( Max( RMSe,RMSe ) / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),MUR ) ) ,( MUR - MUR ) )", "obj1": 0.530214424951267, "obj2": 0.36674880883110167}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( RMSe - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( MLU / DS ) ) )", "obj1": 0.33723196881091616, "obj2": 0.6455857034125069}, {"determining": "( ( ( ( ( PN / ( ( ( CRS + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( Max( RRS,MDR ) * ( MDR / PN ) ) ) - ( PN + ( ( PN / MDR ) + ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( CS - RCSe ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( Max( ( DS / MUM ),( ( MLU + ( DS / RRSe ) ) + MUR ) ) * Min( ( RCSe / RRSe ) ,Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( MUR * RRSe ),DS ) ) ) ) ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.9298245614035088, "obj2": 0.03157362049007953}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.6510721247563352, "obj2": 0.23967597282132644}, {"determining": "( Max( ( CRS - RRS ),( ( PN / ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_CPU ) ) + Min( MRS ,Max( ACS,BR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( MUR * Max( Max( MUM,Min( DS ,( MUR * RCSe ) ) ),CS ) ),( CS - RRSe ) ) / MLU ) ,Max( ( ( RRSe - ( ( Min( Min( MUR ,MLU ) ,RRSe ) + MUM ) / Max( RCSe,RMSe ) ) ) * Max( MLU,( MUC + ( DS * ( DS * CS ) ) ) ) ),RRSe ) )", "obj1": 0.5906432748538012, "obj2": 0.3056388747348088}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( ( ACS + BR ) * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ARS + ACS ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( Min( ( RRSe + Max( RRSe,MUC ) ) ,Min( RMSe ,MLU ) ) * Min( MLU ,CS ) ) ) + ( ( MUC - MLU ) - MUC ) ) ,RRSe ) )", "obj1": 0.5750487329434698, "obj2": 0.314798270045436}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR / PN ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( MDR / PN ) ) ) - ( MDR / PN ) ) ) ) - Min( ACS ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS * ( DS * Min( RMSe ,( RMSe - Min( Max( DS,RRSe ) ,MUC ) ) ) ) ) ,Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( CS * MLU ) ) ) )", "obj1": 0.38791423001949316, "obj2": 0.5685879731819119}, {"determining": "( Max( ( ( ( Const * FirstVNF_RAM ) + MRS ) / Max( ARS,( ( Max( Min( DDR ,FirstVNF_Mem ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) ) ),( ( PN / ( Min( ACS ,CRS ) * FirstVNF_CPU ) ) + Max( MDR,ARS ) ) ) - ( MDR / PN ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / ( ( Min( Max( MUM,RMSe ) ,Min( Max( RCSe,RMSe ) ,( RCSe + ( RMSe * RMSe ) ) ) ) / ( MLU * ( ( Min( Max( RRSe,RCSe ) ,( DS * CS ) ) / MUC ) / ( DS / MUC ) ) ) ) + RMSe ) )", "obj1": 0.3742690058479532, "obj2": 0.5865650933508251}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.40350877192982454, "obj2": 0.5448905278400613}, {"determining": "( Max( CRS,( ( ( PN - ( ( ( Const + BR ) / FirstVNF_RAM_Server ) * Max( BR,PN ) ) ) / MDR ) + ACS ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "( Max( MLU,( ( Max( MUM,( DS + RCSe ) ) * ( MLU * RRSe ) ) - MUR ) ) / ( MUC + CS ) )", "obj1": 0.3079922027290448, "obj2": 0.6916575532660636}, {"determining": "( ( ( CRS / FirstVNF_CPU ) + BR ) - ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - BR ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( Max( Min( CS ,RRSe ),DS ) / Min( MUC ,CS ) )", "obj1": 0.9610136452241715, "obj2": 0.019004918699719618}], "55": [{"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Min( MLU ,RRSe ) ,Min( Max( MUC,( MUM + CS ) ) ,MUR ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( Const * MDR ) - Min( Max( ACS,RRS ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS + RMSe ) / Max( ( ( Min( MUM ,( RCSe + Max( MUC,MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Min( FirstVNF_CPU ,( FirstVNF_CPU - RRS ) ),Const ) - ( Max( ( FirstVNF_CPU - ( Const - FirstVNF_CPU_Server ) ),ACS ) / PN ) )", "choosing": "( Max( RRSe,( ( ( ( ( RMSe * MUR ) + Min( RMSe ,MUC ) ) - Max( ( MUR + Max( CS,MUR ) ),CS ) ) * ( ( MUR - MUC ) / RRSe ) ) - MLU ) ) + ( DS + ( Min( ( Max( RCSe,MUC ) / RCSe ) ,( RCSe / MUR ) ) + Max( Min( CS ,( Max( ( DS / RCSe ),( MLU / MUC ) ) - MUR ) ),CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( CRS,( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) ) - ( DDR - ( MDR / PN ) ) )", "choosing": "Min( Max( MLU,RMSe ) ,( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) )", "obj1": 0.27485380116959063, "obj2": 0.7355379914903588}, {"determining": "( ( PN / ( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - MDR ) / MDR ) - Max( ( Const - CRS ),( AMS * FirstVNF_RAM ) ) ) ) - ( FirstVNF_RAM + FirstVNF_Mem ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( MUC / Max( ( MUM + RMSe ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( ( ( DS - RCSe ) / MUM ) ,CS ) ) ,RMSe ) )", "obj1": 0.9220272904483431, "obj2": 0.038494557317175195}, {"determining": "( Max( ( CRS - RRS ),( ( PN / ( Max( FirstVNF_RAM_Server,RRS ) * FirstVNF_CPU ) ) + Min( MRS ,Max( ACS,BR ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( Max( ( MUR * Max( Max( MUM,Min( DS ,( MUR * RCSe ) ) ),CS ) ),( CS - RRSe ) ) / MLU ) ,Max( ( ( RRSe - ( ( Min( Min( MUR ,MLU ) ,RRSe ) + MUM ) / Max( RCSe,RMSe ) ) ) * Max( MLU,( MUC + ( DS * ( DS * CS ) ) ) ) ),RRSe ) )", "obj1": 0.5906432748538012, "obj2": 0.3056388747348088}, {"determining": "( ( ( ( ( Const + ARS ) / FirstVNF_RAM_Server ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / ( MDR / PN ) ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / ( ( ( Const + BR ) / FirstVNF_RAM_Server ) * Max( BR,PN ) ) ) )", "choosing": "Min( MLU ,( Max( ( Min( MUC ,( ( CS / RCSe ) - MUC ) ) + RCSe ),RRSe ) / Max( MUR,( ( Min( DS ,Min( MUC ,MUR ) ) / ( ( RCSe - DS ) * MLU ) ) + RMSe ) ) ) )", "obj1": 0.9064327485380117, "obj2": 0.04569367603722001}, {"determining": "( ( ( Max( PN,MDR ) + ( Max( ( ( ARS - Max( PN,MDR ) ) - FirstVNF_RAM ),CRS ) - ( MDR / PN ) ) ) + ( ( Max( FirstVNF_Mem_Server,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( CRS ,MRS ) )", "choosing": "Min( Max( RMSe,MUR ) ,( RMSe / ( MUM * ( ( MUC * MUC ) + RRSe ) ) ) )", "obj1": 0.5321637426900585, "obj2": 0.3581932636956049}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ACS + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / Max( RRS,MDR ) ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( DS - RCSe ) / MUM ) ) + RMSe ) )", "obj1": 0.49707602339181284, "obj2": 0.40595682200716676}, {"determining": "( ( PN + DDR ) - ( ( Max( Max( ARS,Const ),ARS ) - FirstVNF_RAM_Server ) + ACS ) )", "choosing": "( Max( ( RMSe / ( RRSe / MUM ) ),( ( Max( MUC,( ( RMSe / ( MUR + MUC ) ) / ( CS * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) + RMSe ) ) / ( Min( ( ( RMSe - Min( MUR ,MUR ) ) - Max( ( CS + ( MUC * ( RMSe * CS ) ) ),DS ) ) ,RMSe ) + Max( ( DS * RCSe ),Max( MUM,MUR ) ) ) )", "obj1": 0.6978557504873294, "obj2": 0.19859561230849668}, {"determining": "( Max( ( ( ( ( PN - ( ( FirstVNF_RAM - MRS ) + FirstVNF_Mem_Server ) ) * Const ) + MRS ) / Max( ARS,( ( Max( ( ARS + AMS ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) ) ),( ( FirstVNF_CPU_Server / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( ARS,ARS ) ) ) - ( MDR / PN ) )", "choosing": "Max( ( ( MLU * Min( ( MLU + ( CS + RRSe ) ) ,CS ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.3645224171539961, "obj2": 0.598976233385195}, {"determining": "( Max( AMS,( ( ( Max( Max( Max( FirstVNF_Mem_Server,MDR ),( DDR * FirstVNF_Mem_Server ) ),ARS ) / ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_RAM_Server / PN ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( RMSe - ( RMSe - ( RRSe * MUC ) ) ) ,( MLU - ( ( MUR / MLU ) + ( ( MUM + RMSe ) + ( MUM / ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.41130604288499023, "obj2": 0.5323335129025938}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Min( MUC ,RRSe ) - MUM ) ,RRSe ) )", "obj1": 0.35282651072124754, "obj2": 0.6158775885081874}, {"determining": "( ( ( CRS / FirstVNF_CPU ) + BR ) - ( Min( ( Min( FirstVNF_RAM ,FirstVNF_Mem ) - BR ) ,FirstVNF_Mem_Server ) - FirstVNF_Mem ) )", "choosing": "( Max( Min( CS ,RRSe ),DS ) / Min( MUC ,CS ) )", "obj1": 0.9610136452241715, "obj2": 0.019004918699719618}, {"determining": "( ( AMS + MRS ) - Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "Min( ( MUM / Max( ( ( ( RMSe / ( CS - DS ) ) / ( RMSe * RCSe ) ) / RRSe ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( ( ( ( MUC / MLU ) * Max( ( CS - ( MUM / MUM ) ),( ( MLU / Max( RCSe,MUR ) ) / ( RMSe / MUR ) ) ) ) - MUM ) - ( MUM / Min( MLU ,RRSe ) ) ) )", "obj1": 0.6686159844054581, "obj2": 0.22689361889763426}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RRSe,RCSe ) ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.4522417153996101, "obj2": 0.4850896692535928}, {"determining": "( ( ( ( PN * ( ACS * ( MDR * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / Max( ( MUR / Min( ( RMSe - MLU ) ,( ( ( RRSe + ( MUC * RCSe ) ) - ( MUR * Min( RCSe ,MUR ) ) ) / MUM ) ) ),MLU ) )", "obj1": 0.7758284600389863, "obj2": 0.12178364813727303}, {"determining": "( Max( ( CRS / Max( FirstVNF_RAM,RRS ) ),Max( FirstVNF_CPU,FirstVNF_Mem ) ) - ( FirstVNF_RAM * ARS ) )", "choosing": "Min( ( MLU - MUM ) ,Max( Min( ( MUR - ( Max( ( DS / ( RRSe + MLU ) ),MUR ) / MLU ) ) ,MUC ),MLU ) )", "obj1": 0.5165692007797271, "obj2": 0.37665995441689226}, {"determining": "( Min( FirstVNF_Mem ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) - ( Max( MDR,Max( ( ACS * Const ),BR ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "( Min( ( ( RMSe + RMSe ) + RRSe ) ,Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / ( Max( MLU,RCSe ) + ( DS * ( CS * DS ) ) ) )", "obj1": 0.43664717348927873, "obj2": 0.49790660024855615}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,Max( ( PN / FirstVNF_RAM ),( Max( ACS,BR ) / ( MDR - MRS ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Max( ( RMSe - ( RMSe * MLU ) ),RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.4405458089668616, "obj2": 0.48937949714256895}, {"determining": "( ( ( ( PN / ( ACS * FirstVNF_RAM ) ) + ( ( FirstVNF_Mem / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) + ( BR - ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ) - ( MDR / PN ) ) ) + ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( MUR - Max( MUC,DS ) ) ) ) ,Min( ( Max( ( MLU + RRSe ),( MUC + ( RRSe / ( DS - ( MUC + CS ) ) ) ) ) / Min( Min( ( ( ( DS + MUM ) + RRSe ) - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.3469785575048733, "obj2": 0.6296576400629111}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( ( MDR / PN ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( RRSe / CS ) * Max( RMSe,MUM ) ) + MLU ) / Min( RCSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.5672514619883041, "obj2": 0.3262628310014363}, {"determining": "( ( ARS * FirstVNF_RAM_Server ) - ( MDR / ACS ) )", "choosing": "Min( MLU ,( Max( RMSe,Max( ( RMSe / ( DS * CS ) ),Min( RCSe ,MUR ) ) ) - ( ( MUR / MLU ) * ( ( MUM + RMSe ) + Max( MUM,( RMSe + RCSe ) ) ) ) ) )", "obj1": 0.4756335282651072, "obj2": 0.43698510912336747}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( Max( ACS,BR ) * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.5750487329434698, "obj2": 0.314798270045436}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR / PN ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / MRS ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - ( CRS + FirstVNF_Mem ) )", "choosing": "Max( ( ( MUR * RCSe ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.6237816764132553, "obj2": 0.2704143850973352}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( Min( MUR ,RRSe ) + MUM ) / Max( RRSe,RCSe ) ) ) * Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.45614035087719296, "obj2": 0.4746346610043003}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - ( Min( MUR ,RRSe ) + MUM ) ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),MUC ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.6120857699805068, "obj2": 0.2803485617966436}, {"determining": "( ( Max( Max( BR,MDR ),( AMS / Min( ( MDR - FirstVNF_Mem ) ,( PN + ( MRS / RRS ) ) ) ) ) / ( Const * Min( DDR ,Max( PN,Max( ( Const / ACS ),FirstVNF_RAM ) ) ) ) ) - Max( CRS,( Max( FirstVNF_RAM_Server,FirstVNF_RAM_Server ) + ACS ) ) )", "choosing": "Max( MUR,( Max( Max( ( ( ( RRSe / CS ) - MUR ) / ( ( RMSe / ( MUR - MLU ) ) / MUM ) ),Max( RRSe,RRSe ) ),MLU ) * Min( MUR ,MUC ) ) )", "obj1": 0.4580896686159844, "obj2": 0.46439517109545536}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( Max( BR,FirstVNF_Mem_Server ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS + CS ) ),( Min( RCSe ,CS ) / Max( DS,MLU ) ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( ( MUC + ( MUR * ( DS * CS ) ) ) - ( ( MUC / MLU ) + RMSe ) ) ,( MUR / RCSe ) ),MUM ) ) )", "obj1": 0.7173489278752436, "obj2": 0.17595453549028733}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ACS + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - MUR ) + RMSe ) ) + RMSe ) )", "obj1": 0.5126705653021443, "obj2": 0.391657824747337}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( Max( ( MRS * FirstVNF_RAM ),PN ) - ( ( MDR / PN ) * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - Min( ( ( CS + Max( MLU,RCSe ) ) + RRSe ) ,Max( ( MUC + ( MLU * ( DS * CS ) ) ),( ( MLU / MUC ) + Max( RCSe,MUR ) ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ) / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.6062378167641326, "obj2": 0.2845606541365238}, {"determining": "( ( DDR * FirstVNF_Mem_Server ) - Max( ( ( MDR / PN ) + Max( ( ( FirstVNF_Mem_Server * ( ( ARS + FirstVNF_CPU ) / ( FirstVNF_Mem - FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ),Max( PN,ACS ) ) ),( ACS + ( AMS * ( Max( AMS,Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem ),RRS ) ) - AMS ) ) ) ) )", "choosing": "( Max( ( MLU / MUC ),( MUC - CS ) ) / ( Min( CS ,MUM ) / ( ( ( ( DS * MUR ) / MUM ) * MLU ) - RCSe ) ) )", "obj1": 0.5984405458089669, "obj2": 0.2917159240546384}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( MDR + FirstVNF_Mem_Server ) ) + Max( MRS,( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Min( MUC ,RRSe ) - MUM ) ,RRSe ) )", "obj1": 0.6354775828460039, "obj2": 0.26110978888437003}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem,Min( FirstVNF_RAM_Server ,Const ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / Max( ( Min( ( RMSe - ( ( RMSe / ( CS - DS ) ) / ( RMSe * RCSe ) ) ) ,( MUC / ( Min( MUC ,RRSe ) - MUM ) ) ) / MUR ),MLU ) )", "obj1": 0.7485380116959064, "obj2": 0.14552669305152927}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / ( Min( MUC ,RRSe ) - MUM ) ) ) / MUR ),MLU ) )", "obj1": 0.290448343079922, "obj2": 0.7156085165772461}, {"determining": "( Max( Max( ( AMS * MRS ),PN ),( ( PN / ( Max( ( ( FirstVNF_RAM / FirstVNF_RAM ) / Const ),MDR ) * FirstVNF_CPU ) ) + ( ACS + ( FirstVNF_RAM / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( ( ( ( Max( MUM,RRSe ) + Max( CS,RCSe ) ) * ( DS / RCSe ) ) / Min( Max( ( RRSe * RCSe ),Min( RCSe ,RMSe ) ) ,MUC ) ) * RMSe ) / Max( MUR,MUR ) ) - MUC ) ,Min( ( ( Max( MLU,( Max( RCSe,MLU ) + RRSe ) ) + ( MLU - ( Min( ( RMSe / MUR ) ,( MUM - MLU ) ) + CS ) ) ) + Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.4834307992202729, "obj2": 0.4300351405735777}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( DS / RRSe ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + RMSe ) )", "obj1": 0.32748538011695905, "obj2": 0.6574141003506504}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.42884990253411304, "obj2": 0.506652141881991}, {"determining": "( Max( CRS,Max( AMS,( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MLU ,( ( ( ( MUC - CS ) - RRSe ) + Max( RCSe,RMSe ) ) - ( ( MUR / MLU ) + ( ( MUM + RMSe ) + Max( MUM,( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.7387914230019493, "obj2": 0.15633055074836433}, {"determining": "( ( ( CRS - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( CRS / RRS ) + ( Max( PN,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( Const,AMS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( RRS * PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,( MLU / ( ( RRSe / Min( ( RRSe - MLU ) ,MUC ) ) * MUM ) ) ) ,Max( Min( ( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) - DS ) ,MUM ),MLU ) )", "obj1": 0.8576998050682261, "obj2": 0.06720255100086187}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * ( AMS + ( MDR + BR ) ) ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( Min( MUC ,MUR ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( Min( MUR ,RRSe ) * MUM ) ) )", "obj1": 0.7660818713450293, "obj2": 0.12922077361054485}, {"determining": "( Min( FirstVNF_Mem ,Min( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) ,FirstVNF_Mem_Server ) ) - ( ( ( ( ( Min( ( CRS / RRS ) ,( FirstVNF_RAM / PN ) ) * FirstVNF_RAM ) - ( FirstVNF_RAM_Server / ( RRS / Min( MRS ,MRS ) ) ) ) / ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( MDR / PN ) ) + PN ) ) ) ) + ( ( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) / MDR ) + ( Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC / RCSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( MUM + Min( MUR ,RRSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( Min( RCSe ,RRSe ) ,MUC ) - ( Min( ( MUM / RMSe ) ,RMSe ) - MUR ) ) )", "obj1": 0.8713450292397661, "obj2": 0.060862401281902845}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( Min( MUC ,RRSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + ( CS + RCSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + DS ) ) ) ) ) )", "obj1": 0.37037037037037035, "obj2": 0.5906115142699354}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * BR ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( ( ( Min( RCSe ,RCSe ) - Max( RCSe,CS ) ) - Min( ( ( CS + Max( MLU,RCSe ) ) + RRSe ) ,Max( ( MUC + ( MLU * ( DS * CS ) ) ),( ( MLU / MUC ) + Max( RCSe,MUR ) ) ) ) ) + Min( ( RRSe - Max( RRSe,( CS + RMSe ) ) ) ,RMSe ) ) / ( MLU / ( ( RRSe - ( MUR / ( RRSe + RCSe ) ) ) - MUC ) ) )", "obj1": 0.594541910331384, "obj2": 0.29770043002282337}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( RRSe / CS ) * Max( RMSe,RMSe ) ) + MLU ) / Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.6198830409356725, "obj2": 0.27234901895822705}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * ( ( ACS * MRS ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Max( Max( ( Min( CRS ,Const ) * FirstVNF_CPU ),MDR ),PN ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / Max( ( ( RCSe * MUM ) / ( ( RMSe - DS ) * MLU ) ),( MLU * Max( DS,MLU ) ) ) ) / Min( DS ,( MLU + ( ( ( RRSe - MUC ) - MUM ) + ( Min( MUR ,RCSe ) - MUR ) ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.3333333333333333, "obj2": 0.6499583937965598}, {"determining": "( ( ( ( ( PN / ( ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) / MDR ) + ( FirstVNF_CPU - ACS ) ) - ( PN + CRS ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( Max( MUC,( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - DS ) ) ) + CS ) ) + ( RMSe / ( CS - Min( CS ,Max( ( MLU - ( CS * RRSe ) ),DS ) ) ) ) ) )", "obj1": 0.6413255360623782, "obj2": 0.24773592015646695}, {"determining": "( ( ( ( PN * ( ACS * ( Max( ARS,Const ) * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( CRS + ( ( FirstVNF_RAM_Server * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Min( ( CS / RRSe ) ,MUR ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RMSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.723196881091618, "obj2": 0.1695072972709582}, {"determining": "( Max( CRS,( Min( ( ( AMS * FirstVNF_RAM ) - ( ( ( Const + BR ) / FirstVNF_RAM_Server ) * Max( BR,PN ) ) ) ,MDR ) + ACS ) ) - Max( Const,FirstVNF_CPU_Server ) )", "choosing": "Min( Max( ( Min( MUC ,( ( CS / RCSe ) - MUC ) ) + RCSe ),RRSe ) ,( RMSe * MUR ) )", "obj1": 0.42105263157894735, "obj2": 0.5171183834365993}, {"determining": "( ( Max( CRS,Max( ( ACS * Const ),BR ) ) + ( ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) + ( Max( CRS,( Max( PN,MDR ) + ( ( ACS * ARS ) / FirstVNF_RAM_Server ) ) ) - ( MDR / PN ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) ) ) / MUR ),MLU ) )", "obj1": 0.47173489278752434, "obj2": 0.44617562280856365}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ),( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - ( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( PN / ( Max( RRS,MDR ) * ( MDR / MRS ) ) ) ) ) + ACS ) )", "choosing": "( Min( ( DS * ( DS * Min( RMSe ,( MLU * RCSe ) ) ) ) ,( RCSe / MUM ) ) / Max( MUC,( Min( CS ,RRSe ) - DS ) ) )", "obj1": 0.9005847953216374, "obj2": 0.051304624579407175}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ACS + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - MUR ) + RMSe ) ) + RMSe ) )", "obj1": 0.5087719298245614, "obj2": 0.39451406841590797}, {"determining": "( Max( Min( ( ARS - Min( Min( DDR ,AMS ) ,Const ) ) ,FirstVNF_Mem ),Const ) - ( Min( FirstVNF_RAM ,Max( ( MRS - FirstVNF_RAM ),FirstVNF_RAM_Server ) ) + Max( BR,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( Max( MUM,MUR ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8927875243664717, "obj2": 0.05194811103216633}, {"determining": "( ( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( FirstVNF_Mem * ( ( Min( AMS ,PN ) - PN ) - CRS ) ) ) / ( ( MDR - ( MDR - Const ) ) * Max( Min( MDR ,FirstVNF_RAM_Server ),( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( CRS + DDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( Const / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM + MUR ) / ( DS / MUC ) )", "obj1": 0.48927875243664715, "obj2": 0.42167252810529116}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS + CS ) ),( Min( RCSe ,CS ) / Max( DS,MLU ) ) ) / MLU ),Max( ( RMSe + MUM ),Max( Min( ( RMSe / ( RCSe + RCSe ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / RRSe ) + RMSe ) ) ),Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) ) ) )", "obj1": 0.34307992202729043, "obj2": 0.6346048530433448}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ),( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - ( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) )", "choosing": "( Max( MUR,( ( Min( MUM ,( RCSe + Max( MUC,MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / Max( MUC,( Min( CS ,RRSe ) - DS ) ) )", "obj1": 0.6881091617933723, "obj2": 0.20521398003960545}, {"determining": "( Max( AMS,( ( ( Max( Max( Max( FirstVNF_Mem_Server,MDR ),( DDR * FirstVNF_Mem_Server ) ),ARS ) / ( Max( FirstVNF_Mem_Server,MRS ) * ( FirstVNF_RAM_Server / PN ) ) ) / MDR ) + ACS ) ) - ( MDR / PN ) )", "choosing": "Min( ( RMSe - ( RMSe - ( RRSe * MUC ) ) ) ,( MLU - ( ( MUR / MLU ) + ( ( MUM + RMSe ) + ( MUM / ( RCSe + RMSe ) ) ) ) ) )", "obj1": 0.6374269005847953, "obj2": 0.2592790334449771}, {"determining": "( ( ( ( PN * ( ( ( ACS * FirstVNF_RAM ) / ( BR + ( MDR / PN ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * ( DDR - CRS ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( Max( MUC,( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( ( MUM + CS ) - DS ) ) ) + CS ) ) + ( RMSe / ( CS - Min( CS ,Max( ( MLU - ( CS * RRSe ) ),DS ) ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.18807951428587302}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( CRS / MDR ) ) / ( ACS * Const ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) )", "choosing": "( Max( Max( ( MUC + ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ),RRSe ) / ( MUC + RMSe ) )", "obj1": 0.8460038986354775, "obj2": 0.07255137167400294}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( Min( MUC ,RRSe ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + ( CS + RCSe ) ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) ,( Min( RCSe ,Max( MLU,RRSe ) ) - ( MUM / Min( MLU ,Min( RMSe ,( MUR + DS ) ) ) ) ) )", "obj1": 0.3996101364522417, "obj2": 0.5473134633938028}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR / PN ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / MRS ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - ( CRS + FirstVNF_Mem ) )", "choosing": "Min( ( DS * ( DS * Min( RMSe ,( MLU * RCSe ) ) ) ) ,( RCSe / MUM ) )", "obj1": 0.5243664717348928, "obj2": 0.3743140135625803}, {"determining": "( ( CRS - ( MRS * DDR ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUC / RCSe ) ,MUR )", "obj1": 0.39571150097465885, "obj2": 0.5560970352919234}, {"determining": "( ( ( ( PN * ( ( ( ACS * ( CRS / MDR ) ) / ( ACS * Const ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( FirstVNF_RAM_Server + RRS ) ) ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.8460038986354775, "obj2": 0.07255137167400294}, {"determining": "( ( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( ( Min( AMS ,PN ) - PN ) - CRS ) * FirstVNF_Mem ) ) / ( ( MDR - ( MDR - Const ) ) * Max( Min( ( Max( AMS,PN ) / FirstVNF_RAM_Server ) ,FirstVNF_RAM_Server ),( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + Min( DDR ,AMS ) ) - Min( Max( ACS,RRS ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * DS ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - DS ),( RCSe / ( DS / RRSe ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + CS ) ) + ( ( MUC - RCSe ) + Max( MUC,MUM ) ) ) )", "obj1": 0.9707602339181286, "obj2": 0.014311369251200325}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.6608187134502924, "obj2": 0.23509286484336514}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.6510721247563352, "obj2": 0.23967597282132644}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( RMSe,MUC ) * ( MUC / Min( RMSe ,CS ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / ( Min( MUC ,RRSe ) - MUM ) ) ) / MUR ),MLU ) )", "obj1": 0.38011695906432746, "obj2": 0.5778845569244698}, {"determining": "( ( ( Max( ( MRS * FirstVNF_RAM ),PN ) - Max( ARS,FirstVNF_Mem_Server ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) / FirstVNF_RAM_Server ) ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( MUM / Max( ( ( ( MUC / RRSe ) * Max( RMSe,RMSe ) ) + MLU ),MUR ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( ( MUC + CS ) - Max( ( MUC - Min( MUM ,CS ) ),CS ) ) / Min( RRSe ,MUC ) ) ) - MUR ) )", "obj1": 0.7894736842105263, "obj2": 0.10790434634067818}, {"determining": "( ( ( Min( Max( ACS,RRS ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) - ( FirstVNF_CPU - Const ) ) + ( ( PN / MDR ) + ( CRS - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RCSe / Min( MUR ,RCSe ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( MUM,RMSe ) ) ),( MUR - MUC ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( MUR,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.7992202729044834, "obj2": 0.09787269695386722}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / FirstVNF_RAM ) ) ) - ( Min( Min( PN ,AMS ) ,FirstVNF_Mem_Server ) / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( DS + MLU ) ,Min( ( ( RRSe - ( ( RMSe + MUM ) / MLU ) ) * ( MUM + CS ) ) ,RRSe ) )", "obj1": 0.6744639376218323, "obj2": 0.2182291553367872}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( Max( ACS,BR ) / FirstVNF_RAM_Server ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( Min( MUC ,RRSe ) - MUM ) ,RRSe ) )", "obj1": 0.3586744639376218, "obj2": 0.610401765714804}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ),( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - ( ( PN / ( ( ( MDR * FirstVNF_RAM ) / ( ( FirstVNF_Mem_Server / RRS ) / ( FirstVNF_RAM_Server + BR ) ) ) - ( CRS - MDR ) ) ) + ACS ) )", "choosing": "( Max( MUR,( ( Min( MUM ,( RCSe + Max( MUC,MUM ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / Max( MUC,( Min( CS ,RRSe ) - DS ) ) )", "obj1": 0.6861598440545809, "obj2": 0.20611515030155916}, {"determining": "( ( ( ( PN * ( ( PN / Max( RRS,( MDR + FirstVNF_CPU ) ) ) + MDR ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( ( CRS * ( FirstVNF_Mem * FirstVNF_CPU ) ),( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + CRS ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( DS * ( DS * Min( RMSe ,( MUR * RCSe ) ) ) ) ,Max( Min( ( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) - CS ) ,MUM ),MLU ) )", "obj1": 0.8615984405458089, "obj2": 0.06547971663239105}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * ( FirstVNF_CPU - ( Const - FirstVNF_CPU_Server ) ) ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Max( ( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( Min( RRSe ,MUC ) / ( RCSe + MUR ) ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( ( MUR / MUC ) / RRSe ) ) - MLU ),RRSe ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8167641325536062, "obj2": 0.089339511317983}, {"determining": "( ( PN + Max( ( ( Max( PN,( MRS * FirstVNF_RAM ) ) - MDR ) / MDR ),( MDR + MDR ) ) ) - ( MDR / FirstVNF_CPU ) )", "choosing": "( Max( Max( ( RRSe * RRSe ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( Min( Max( ( RMSe * CS ),DS ) ,( RRSe / CS ) ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.884990253411306, "obj2": 0.05524904449156947}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( ( ACS + BR ) * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ARS + ACS ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( Min( ( RRSe + Max( RRSe,MUC ) ) ,Min( RMSe ,MLU ) ) * Min( MLU ,CS ) ) ) + ( ( MUC - MLU ) - MUC ) ) ,RRSe ) )", "obj1": 0.5750487329434698, "obj2": 0.314798270045436}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,( FirstVNF_Mem * FirstVNF_CPU ) ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Min( ( ( RMSe + MLU ) + ( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.9746588693957114, "obj2": 0.012445723553311581}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( Max( ( FirstVNF_CPU * Max( PN,ARS ) ),( PN + Min( FirstVNF_RAM_Server ,MRS ) ) ) * FirstVNF_Mem ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / MDR ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( ( Max( BR,BR ) * MDR ) ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( MUR - Max( MUC,DS ) ) ) ) ,Min( ( Max( ( MLU + RRSe ),( MUC + ( RRSe / ( DS - ( MUC + CS ) ) ) ) ) / Min( Min( ( ( ( DS + MUM ) + RRSe ) - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( RMSe,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.2807017543859649, "obj2": 0.7279258638524614}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( MLU + MUC ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.3138401559454191, "obj2": 0.6789643143353072}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( ( MDR / PN ) - ( FirstVNF_Mem / ( ( FirstVNF_CPU_Server / RRS ) + ( AMS + ( FirstVNF_RAM + BR ) ) ) ) ) ) ) - ( FirstVNF_Mem + Min( Min( PN ,AMS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( MUR,( RRSe / ( Max( Max( ( MUC - MUC ),MUM ),( MLU - MUC ) ) / ( RMSe / ( Min( MUR ,RRSe ) * MUM ) ) ) ) ) ) ,( ( ( Min( RCSe ,( MUR / MLU ) ) - RRSe ) - ( ( MUM - Min( ( MUC - ( DS + MLU ) ) ,CS ) ) / Min( RRSe ,MUC ) ) ) - ( MUM - Min( RRSe ,CS ) ) ) )", "obj1": 0.30214424951267055, "obj2": 0.6979302825544241}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * Min( MUC ,RRSe ) ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.40350877192982454, "obj2": 0.5448905278400613}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MDR,BR ) / ACS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - ( Min( MUR ,RRSe ) + MUM ) ) ) / CS ),Max( RRSe,( ( ( Max( ( RRSe * MUC ),CS ) + MUC ) - RMSe ) - ( Min( ( RMSe - MLU ) ,RCSe ) - RRSe ) ) ) ) ,( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( Max( MUC,DS ) ,MUR ) ) ) )", "obj1": 0.5477582846003899, "obj2": 0.3430837156402714}, {"determining": "( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + ( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / FirstVNF_RAM ) ) ) - ( MRS / PN ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( MUC ,Min( ( ( RRSe - ( ( RMSe + MUM ) / MLU ) ) * ( MUM + CS ) ) ,RRSe ) )", "obj1": 0.4171539961013645, "obj2": 0.5272185081869226}, {"determining": "( ( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem * FirstVNF_CPU ) ,FirstVNF_Mem_Server ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( RRSe,( ( ( ( ( RMSe * MUC ) + Min( RMSe ,MUC ) ) - Max( ( ( CS / MUR ) + MUR ),( ( MUC - RCSe ) * ( RMSe / MLU ) ) ) ) * ( ( MUR - MUC ) / RRSe ) ) - MLU ) ) + ( DS + ( ( RRSe / RCSe ) - RRSe ) ) )", "obj1": 0.8323586744639376, "obj2": 0.07905068583608729}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / Min( DDR ,AMS ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "Min( ( ( ( DS / RCSe ) + ( ( Max( MUR,MUC ) * ( MUR - DS ) ) * Min( ( RMSe - MLU ) ,( MUC / MUM ) ) ) ) - ( ( MLU - ( RRSe / ( RCSe / MLU ) ) ) + CS ) ) ,Min( Max( Max( ( ( MUM + CS ) - MUM ),( MUC + MLU ) ),CS ) ,( Max( MUC,( Min( RMSe ,( MUR + MUC ) ) / ( MUC * MLU ) ) ) + ( Min( RMSe ,RRSe ) * Min( MLU ,RRSe ) ) ) ) )", "obj1": 0.935672514619883, "obj2": 0.03108008236058819}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( RRSe / CS ) * Max( RMSe,MUM ) ) + MLU ) / Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.543859649122807, "obj2": 0.34662654035574103}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR / PN ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( MUM / Max( ( RRSe / ( Max( ( ( MUC - MUM ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( DS ,RRSe ) + MUM ) ) ) ),Min( ( CS + ( MUC + ( MUR + CS ) ) ) ,( CS + MLU ) ) ) ) ,Max( ( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( DS - MUR ) ) - CS ),Max( ( RRSe / ( Max( ( ( MUC - MUC ) - MUM ),( MUC - MLU ) ) / ( RMSe / ( Min( MUR ,RRSe ) + MUM ) ) ) ),( ( CS + MLU ) / ( RMSe / ( MUR + Min( CS ,RCSe ) ) ) ) ) ) )", "obj1": 0.557504873294347, "obj2": 0.3332424784758556}, {"determining": "( ( ( ( PN / MDR ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + ( Max( FirstVNF_Mem,( PN + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( MUC ,Min( ( Max( MLU,( DS * Min( MLU ,CS ) ) ) + ( ( ( ( ( RRSe / CS ) * Max( RMSe,MUM ) ) + MLU ) / Min( RMSe ,Max( MUR,MUR ) ) ) - MUC ) ) ,RRSe ) )", "obj1": 0.543859649122807, "obj2": 0.34662654035574103}, {"determining": "( ( ( ( PN * ( ACS * ( MDR * ( DDR - ( MDR / PN ) ) ) ) ) - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,MDR ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( ( MUM / Min( RCSe ,( RMSe * DS ) ) ) - ( MLU * ( MUC / CS ) ) ),MUC ),( ( Min( Max( MUM,( ( MUC - MUC ) - MUM ) ) ,Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ) ) / ( MLU * ( RMSe - DS ) ) ) + RMSe ) ) / ( ( Min( MUR ,RRSe ) + MUM ) / MLU ) )", "obj1": 0.783625730994152, "obj2": 0.11426238871580797}, {"determining": "( ( ( ( PN * ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) - ( ACS * ( FirstVNF_Mem * ( ( BR + FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) + ( ( PN / MDR ) + Max( MRS,Min( Const ,FirstVNF_CPU ) ) ) ) - Min( ( ( PN / ( MDR / FirstVNF_RAM ) ) + ( Max( FirstVNF_CPU,PN ) / FirstVNF_RAM_Server ) ) ,( ( BR + MDR ) / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( MLU / MUC ) * ( ( ( DS * DS ) / Max( ( ( RCSe * MUM ) / ( ( RMSe - DS ) * MLU ) ),( MLU * Max( DS,MLU ) ) ) ) / Min( DS ,( MLU + ( ( ( RRSe - MUC ) - MUM ) + ( Min( MUR ,RCSe ) - MUR ) ) ) ) ) ) / ( MUM + MUR ) )", "obj1": 0.3762183235867446, "obj2": 0.5813699601579085}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) )", "choosing": "Min( ( RCSe / Min( MUR ,RCSe ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUR - MUC ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( MUR,RMSe ) ) - MUR ),RMSe ) ) ) ,Max( ( MUC + ( DS * ( DS * CS ) ) ),( ( MLU / MUC ) + RMSe ) ) ) )", "obj1": 0.3235867446393762, "obj2": 0.6635372073396558}, {"determining": "( ( ( CRS - ( ACS * ( FirstVNF_Mem * FirstVNF_CPU ) ) ) + ( ( CRS / RRS ) + ( Max( PN,( ( PN / ( FirstVNF_RAM_Server + FirstVNF_Mem_Server ) ) + Max( Const,AMS ) ) ) - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( ( RRS * PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( Min( Min( MLU ,RRSe ) ,( MLU / ( ( RRSe / Min( ( RRSe - MLU ) ,MUC ) ) * MUM ) ) ) ,Max( Min( ( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ) - DS ) ,MUM ),MLU ) )", "obj1": 0.5653021442495126, "obj2": 0.33292335991441907}, {"determining": "( Max( Max( ( AMS * MRS ),PN ),( ( ACS + ( FirstVNF_RAM / ( FirstVNF_Mem_Server + FirstVNF_RAM ) ) ) + ( PN / ( Max( Max( Min( FirstVNF_RAM ,Const ),Const ),MDR ) * FirstVNF_CPU ) ) ) ) - ( MDR / PN ) )", "choosing": "Min( ( ( ( ( ( ( Max( CS,RCSe ) + Max( MUM,RRSe ) ) * ( DS / RCSe ) ) / Min( Max( ( RRSe / RCSe ),Min( RCSe ,RMSe ) ) ,( MUM + RCSe ) ) ) * RMSe ) / Max( MUR,MUR ) ) - MUC ) ,Min( ( ( Max( MLU,( Max( RCSe,MLU ) + RRSe ) ) + ( MLU - ( Min( ( RMSe / MUR ) ,( MUM - MLU ) ) + CS ) ) ) + Max( MLU,RRSe ) ) ,RRSe ) )", "obj1": 0.3840155945419103, "obj2": 0.5713422507578213}, {"determining": "( ( MDR + ( MRS - AMS ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( RMSe * MLU ) / ( Min( Min( MLU ,( ( ( RMSe - MUR ) * RRSe ) / Max( ( RRSe - RCSe ),DS ) ) ) ,( RCSe / RRSe ) ) + ( RMSe / ( CS - Min( Max( ( MLU * Min( DS ,CS ) ),MUC ) ,CS ) ) ) ) )", "obj1": 0.9883040935672515, "obj2": 0.005626381776023941}, {"determining": "( ( ( Min( Max( ACS,RRS ) ,PN ) - ( FirstVNF_CPU - Const ) ) + ( ( PN / MDR ) + ( CRS - ( MDR / PN ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( RCSe / Min( MUR ,RCSe ) ) ,Min( ( Max( Max( Min( Max( RCSe,RMSe ) ,( RCSe + Max( RMSe,RMSe ) ) ),( MUR - MUC ) ),( MUC + ( RRSe / ( DS - ( MUM + CS ) ) ) ) ) / Min( Min( ( CS - Max( RRSe,RRSe ) ) ,MUR ) ,Max( ( ( RCSe + Max( MUR,RMSe ) ) - MUR ),RMSe ) ) ) ,( ( Max( MUM,( DS + RCSe ) ) * ( MLU * RRSe ) ) - MUR ) ) )", "obj1": 0.8693957115009746, "obj2": 0.061763571543856574}, {"determining": "( ( Max( Max( ( FirstVNF_RAM * MRS ),PN ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,ARS ) ) ) - ( MDR / PN ) ) - ( FirstVNF_RAM_Server + PN ) )", "choosing": "( Min( ( ( RMSe + MLU ) + RRSe ) ,Max( ( MUC + ( DS * ( Min( MUC ,RCSe ) * Min( RMSe ,( MUR + MUR ) ) ) ) ),( ( MLU / MUC ) + RMSe ) ) ) / Max( ( Min( ( RMSe - MLU ) ,( MUC / MUM ) ) / MUR ),MLU ) )", "obj1": 0.6510721247563352, "obj2": 0.23967597282132644}, {"determining": "( ( ( ( Max( ACS,RRS ) / ARS ) - ( ACS * ( MDR / PN ) ) ) + ( ( ( PN / ( Max( RRS,MDR ) * ( MDR / MRS ) ) ) + Max( MRS,ARS ) ) + ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( ACS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) ) ) - ( ( Max( ( FirstVNF_Mem_Server + AMS ),FirstVNF_RAM ) - FirstVNF_Mem ) + BR ) )", "choosing": "Min( ( ( MUR * ( DS * CS ) ) * ( DS * Min( RMSe ,( MLU * RCSe ) ) ) ) ,( RCSe / MUM ) )", "obj1": 0.7348927875243665, "obj2": 0.1613106079486997}, {"determining": "( ( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( ( Min( AMS ,PN ) - ( AMS - BR ) ) - CRS ) * FirstVNF_Mem ) ) / ( ( MDR - ( MDR - Const ) ) * Max( Min( MDR ,FirstVNF_RAM_Server ),( ( ( Const * MDR ) + MRS ) / Max( ARS,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN / MDR ) + ( Max( CRS,( ( PN / FirstVNF_CPU ) + CRS ) ) - ( MDR / ( ( AMS * FirstVNF_RAM_Server ) * FirstVNF_CPU ) ) ) ) ) - Min( FirstVNF_Mem ,Min( ( MDR / PN ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MLU,( ( Max( MUM,( DS + RCSe ) ) * ( MLU * RRSe ) ) - MUR ) ) / ( MUC + CS ) )", "obj1": 0.4853801169590643, "obj2": 0.42339893173209564}, {"determining": "( ( ( ( Max( ACS,RRS ) * ARS ) - ( ACS * Max( CRS,( ( ( MDR / PN ) / ( ACS / PN ) ) + PN ) ) ) ) + ( ( Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) - ( MDR / PN ) ) + ( ( PN / ( Max( Const,MDR ) * ( MDR / PN ) ) ) + Max( MRS,ARS ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,( Max( FirstVNF_Mem,( Max( CRS,Min( ACS ,BR ) ) + ( ( ACS * BR ) / ( FirstVNF_CPU_Server - AMS ) ) ) ) - ( MRS / PN ) ) ) ) )", "choosing": "( ( RMSe * MLU ) / ( ( ( MUC + ( Max( ( Min( CS ,RRSe ) - ( MLU - RRSe ) ),( RCSe / ( MUC + DS ) ) ) * MUC ) ) - ( ( MLU - ( RRSe / ( DS - ( MUM + CS ) ) ) ) + RMSe ) ) + RMSe ) )", "obj1": 0.3235867446393762, "obj2": 0.6635372073396558}, {"determining": "( Max( Max( ( Min( ACS ,BR ) * MRS ),Max( FirstVNF_Mem,( ( PN / FirstVNF_RAM ) + ( Max( MRS,BR ) / ( MDR + FirstVNF_Mem_Server ) ) ) ) ),( ( PN / ( Max( RRS,MDR ) * FirstVNF_CPU ) ) + Max( MRS,( ( ( ACS * ( FirstVNF_Mem * PN ) ) * ACS ) / FirstVNF_RAM_Server ) ) ) ) - Min( FirstVNF_Mem ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( Max( ( RRSe * DS ),MUC ),( ( ( MLU - ( RRSe / Max( ( MUM + MLU ),DS ) ) ) + Max( DS,( RCSe / ( MUC + DS ) ) ) ) + RMSe ) ) / Min( ( RMSe + Min( CS ,( ( DS - RCSe ) / MUM ) ) ) ,RMSe ) )", "obj1": 0.28654970760233917, "obj2": 0.7227754289652512}]}