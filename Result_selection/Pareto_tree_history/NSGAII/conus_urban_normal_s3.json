{"1": [{"determining": "( ( AMS - MRS ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( DS,MUR ) + ( RMSe * DS ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "( ( FirstVNF_RAM * CRS ) + ( ARS / ARS ) )", "choosing": "Max( ( MUC * RRSe ),( MUR + RCSe ) )", "obj1": 0.3826429980276134, "obj2": 0.4985384665955343}, {"determining": "( ( MRS * DDR ) - Min( MRS ,Min( FirstVNF_RAM ,( CRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU / RRSe ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( BR ,MRS ) ,( FirstVNF_RAM / BR ) )", "choosing": "( ( DS + RRSe ) / ( MUR / MLU ) )", "obj1": 0.5029585798816568, "obj2": 0.37569098003132}, {"determining": "( ( FirstVNF_Mem - FirstVNF_Mem ) * Max( PN,FirstVNF_Mem ) )", "choosing": "( Max( MUC,MLU ) + ( RRSe + DS ) )", "obj1": 0.49506903353057197, "obj2": 0.40837281859175417}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,MRS ) )", "choosing": "( Max( DS,MUM ) - ( DS / MLU ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( ( FirstVNF_CPU * Const ) ,( AMS + FirstVNF_CPU ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,( MLU * MUC ) ) - MUC ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "Min( ( ( RRS / RRS ) + Const ) ,( ARS - FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe + ( MUC * RRSe ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( BR,FirstVNF_Mem ) ,Max( MDR,Min( RRS ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Min( ( ( RCSe / ( RCSe - RMSe ) ) - ( MUM * MUR ) ) ,( MUR * ( MUC * ( MUM * ( Max( RMSe,RCSe ) / Max( RMSe,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) - Const ) * ( Const / PN ) )", "choosing": "( ( Max( Min( ( RMSe / RMSe ) ,CS ),( MUC - MLU ) ) / ( DS * MUM ) ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ( ARS * ( ARS * ARS ) ) / MDR ) )", "choosing": "Min( ( CS - Max( ( MLU / ( Min( RRSe ,DS ) * MUC ) ),MUR ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( FirstVNF_RAM_Server * BR ),Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "Min( ( RMSe - MUC ) ,( RRSe * RMSe ) )", "obj1": 0.28205128205128205, "obj2": 0.5884141931978746}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,DDR ) )", "choosing": "( ( RCSe - RMSe ) - ( DS * MUM ) )", "obj1": 0.23076923076923078, "obj2": 0.6408677802126818}, {"determining": "( ( ACS / RRS ) * Max( RRS,( Min( Const ,FirstVNF_Mem_Server ) * Max( ( ( FirstVNF_Mem - DDR ) + Max( MRS,RRS ) ),PN ) ) ) )", "choosing": "( Max( ( RRSe * MUM ),RRSe ) - ( RCSe / MUR ) )", "obj1": 0.33530571992110453, "obj2": 0.539801925932531}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( RMSe / ( CS - RRSe ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "Min( ( Max( CRS,( DDR / CRS ) ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( Min( ( ( MLU * RCSe ) - Min( RCSe ,MLU ) ) ,MUR ) - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( ( ( ( BR * Max( Const,Min( ( BR + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( RRS ,FirstVNF_CPU ) * ( CRS + ACS ) ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,Max( MUR,( RMSe / ( ( RMSe / ( RCSe - RMSe ) ) * MLU ) ) ) ) + ( MUC * RRSe ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 0.7061143984220908, "obj2": 0.2351054075876491}, {"determining": "( ( ( DDR * CRS ) / ( ( MRS + AMS ) + ACS ) ) * Min( ( Const / RRS ) ,( FirstVNF_CPU * RRS ) ) )", "choosing": "( Min( ( MLU / Max( RCSe,MUM ) ) ,( MUC + CS ) ) - ( ( MUR / MUR ) / ( CS / MLU ) ) )", "obj1": 0.1794871794871795, "obj2": 0.7271207479952655}, {"determining": "Min( ( ( BR * BR ) / ( FirstVNF_Mem / FirstVNF_CPU ) ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RRSe - MUC ) ) / ( ( RCSe / MUC ) - ( RRSe - MUR ) ) )", "obj1": 0.388560157790927, "obj2": 0.491856085194155}, {"determining": "Max( Min( RRS ,( MDR / ACS ) ),( Const * ( BR * PN ) ) )", "choosing": "( Max( ( MUM + MUC ),( RCSe * MUR ) ) / ( Min( MUC ,DS ) / Min( DS ,RMSe ) ) )", "obj1": 0.3668639053254438, "obj2": 0.5128884250551069}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( Max( MUC,RMSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) )", "obj1": 0.28402366863905326, "obj2": 0.5710248104962692}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( DDR,FirstVNF_Mem ) + ( PN + FirstVNF_Mem ) )", "choosing": "( ( CS / ( RRSe * CS ) ) / ( ( RCSe / RMSe ) - Max( CS,RRSe ) ) )", "obj1": 0.34122287968441817, "obj2": 0.5367148589119546}, {"determining": "( Max( Min( ARS ,FirstVNF_CPU_Server ),( BR / Const ) ) / Max( Max( FirstVNF_RAM_Server,BR ),( RRS * FirstVNF_RAM_Server ) ) )", "choosing": "( Min( MUR ,( CS * MUR ) ) - ( CS - RRSe ) )", "obj1": 0.38461538461538464, "obj2": 0.49416996859127393}, {"determining": "( Max( MRS,CRS ) - ( RRS * Min( FirstVNF_CPU ,RRS ) ) )", "choosing": "Max( ( ( MUR + DS ) / Max( RCSe,MUM ) ),Max( ( CS - DS ),( RRSe - MUC ) ) )", "obj1": 0.47534516765285995, "obj2": 0.4128848961216973}, {"determining": "Max( ( ( Const - FirstVNF_RAM ) / ( MRS - AMS ) ),( ( MDR - FirstVNF_RAM_Server ) * ( ARS + CRS ) ) )", "choosing": "Max( Max( Max( MUC,CS ),( MUC - MUC ) ),Max( ( MUM / CS ),( RRSe * DS ) ) )", "obj1": 0.9191321499013807, "obj2": 0.06743178074933454}, {"determining": "Max( Min( ( Max( ACS,( ( DDR - FirstVNF_CPU ) - CRS ) ) + RRS ) ,( FirstVNF_CPU - RRS ) ),( ( DDR / ARS ) / ( ACS / CRS ) ) )", "choosing": "( ( ( RCSe - MLU ) / Min( MUM ,MUC ) ) - ( ( Max( MUC,( ( ( DS / ( MUM + MUR ) ) * CS ) / Max( ( MLU / ( RMSe / CS ) ),( Min( MUR ,MLU ) * Max( MLU,RMSe ) ) ) ) ) * MUR ) - DS ) )", "obj1": 0.27613412228796846, "obj2": 0.5905911458679786}, {"determining": "( ( ( BR - FirstVNF_RAM ) * FirstVNF_Mem_Server ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / Min( CS ,( MUR - Max( CS,RMSe ) ) ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( Const ,FirstVNF_RAM ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,( Max( RCSe,MLU ) + CS ) ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU + ACS ) - MDR ) )", "choosing": "Min( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( ( ( MLU * MLU ) - Max( DS,RRSe ) ) + ( Max( MUM,DS ) * Max( MLU,MLU ) ) ) )", "obj1": 0.31952662721893493, "obj2": 0.5511007440324186}, {"determining": "( Min( PN ,AMS ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( MUC * RRSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS * MLU ) + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) ) / ( MDR * FirstVNF_Mem ) )", "choosing": "Min( ( ( DS * Min( Min( DS ,DS ) ,RMSe ) ) * MUR ) ,( ( ( RRSe + CS ) - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( CRS + Const ) * ( PN / Const ) ) / ( ( RRS * Const ) - Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ),Min( ( Max( FirstVNF_Mem,CRS ) + ( PN * AMS ) ) ,( Max( PN,MRS ) * Max( RRS,PN ) ) ) )", "choosing": "( ( ( ( MLU - MLU ) + Min( RRSe ,MUC ) ) - Max( Max( RMSe,MUM ),( RMSe + RCSe ) ) ) + ( ( ( MUR * MUC ) + Min( MUC ,RRSe ) ) / ( ( RRSe - MUM ) * ( MUM + RMSe ) ) ) )", "obj1": 0.2564102564102564, "obj2": 0.6113878630219794}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR / Const ) - MDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( CS,RRSe ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / ( MRS * MDR ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,( ( ( DS * ( ( MLU * MUR ) / RMSe ) ) * MLU ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,Max( DDR,( MDR + Max( ARS,FirstVNF_CPU ) ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( Max( Max( ( MUR * ( ( ( RMSe / CS ) / ( DS + MUC ) ) + ( MUM * CS ) ) ),MLU ),( Max( RCSe,MUM ) + ( MUR + MUC ) ) ) / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * ( ( MLU * RMSe ) + MUR ) ) - ( MUC + DS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( MUM / ( MUM - MUR ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "( ( DDR + CRS ) - ( ( ( BR - BR ) - ( FirstVNF_RAM - ( FirstVNF_CPU_Server + ( Const / ARS ) ) ) ) / AMS ) )", "choosing": "Min( ( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) ,Min( ( ( DS - MUM ) - Max( MUC,MLU ) ) ,( ( RRSe - RRSe ) / Max( RMSe,MUR ) ) ) )", "obj1": 0.3727810650887574, "obj2": 0.501032620754479}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( Min( Min( Max( MUR,MUR ) ,MUR ) ,CS ) / RMSe ) ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21696252465483234, "obj2": 0.6535839931640866}], "2": [{"determining": "( ( MRS - FirstVNF_Mem_Server ) - Max( ACS,( ( RRS * RRS ) + ( AMS / ARS ) ) ) )", "choosing": "Min( ( ( DS / ( ( MLU + ( ( ( RMSe - RRSe ) / ( MUC / CS ) ) / DS ) ) - ( MLU - RMSe ) ) ) * MUC ) ,( Min( ( ( RCSe - RCSe ) - ( Max( ( ( MLU + CS ) * ( CS * RMSe ) ),MUC ) - MUR ) ) ,( ( MUM / MLU ) / Max( RMSe,MUM ) ) ) + ( ( ( CS / RRSe ) - ( RCSe * RRSe ) ) - Min( CS ,( MLU * Min( ( MUR + CS ) ,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - Min( MRS ,Min( FirstVNF_RAM ,( CRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU / RRSe ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Const - ( FirstVNF_RAM + DDR ) ) * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * ( ( RMSe / RRSe ) - DS ) ) + Max( ( MUR * MUR ),CS ) )", "obj1": 0.7692307692307693, "obj2": 0.15461711296322578}, {"determining": "( ( DDR + CRS ) - ( ( ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( FirstVNF_RAM ,FirstVNF_CPU_Server ) ) - ( FirstVNF_RAM - BR ) ) / AMS ) )", "choosing": "Min( ( ( MUR * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) ,Min( ( ( DS - MUM ) - Max( MUC,MLU ) ) ,( ( RRSe - RRSe ) / ( MUM + RCSe ) ) ) )", "obj1": 0.9151873767258383, "obj2": 0.06595176185905825}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,MRS ) )", "choosing": "( Max( DS,MUM ) - ( DS / MLU ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( RMSe / ( CS - RRSe ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "Min( ( Const - ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( RCSe / MLU ) )", "obj1": 0.631163708086785, "obj2": 0.2650405405651295}, {"determining": "( ( Max( ( ARS - Max( MRS,ARS ) ),FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * MRS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM - MUR ) + Max( ( ( RRSe / MLU ) - MLU ),Min( MUR ,Max( Min( MUM ,RMSe ),RMSe ) ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1341222879684418, "obj2": 0.7213837360335853}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( ( RRS * ( MDR * ( FirstVNF_Mem_Server * ( FirstVNF_Mem / MDR ) ) ) ) - Const ) ) * ( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * ( MLU * Max( ( ( Min( RCSe ,MUM ) * MUC ) * MUR ),RCSe ) ) ) ) )", "obj1": 0.7159763313609467, "obj2": 0.21685674164925714}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) + Max( Min( FirstVNF_RAM ,MRS ),AMS ) ) - ( ( FirstVNF_RAM - DDR ) / ( AMS * MRS ) ) )", "choosing": "( ( ( ( RRSe + MUR ) - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) )", "obj1": 0.9388560157790927, "obj2": 0.04636346199995509}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07460736731477179}, {"determining": "( ( ( ( BR * Max( Const,Min( ( BR + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0022819218971340985}, {"determining": "Min( ( ( BR / Const ) - MDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( CS,RRSe ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "Min( ( Max( Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 0.4635108481262327, "obj2": 0.3912396860008356}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR - CS ) / RMSe ) ,( DS / MLU ) )", "obj1": 0.4891518737672584, "obj2": 0.36614179910324607}, {"determining": "( ( Min( RRS ,FirstVNF_CPU ) * ( CRS + ACS ) ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,Max( MUR,( RMSe / ( ( RMSe / ( RCSe - RMSe ) ) * MLU ) ) ) ) + ( MUC * RRSe ) ) * ( ( RMSe - RRSe ) + ( MUR * MLU ) ) )", "obj1": 0.7061143984220908, "obj2": 0.2351054075876491}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,( ( ( FirstVNF_RAM / Max( FirstVNF_RAM,FirstVNF_Mem ) ) / CRS ) * FirstVNF_CPU ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( Min( Min( RCSe ,RCSe ) ,( MUR * RCSe ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * Max( Max( RMSe,RMSe ),( ( RCSe + Max( MUC,CS ) ) / MUR ) ) )", "obj1": 0.6686390532544378, "obj2": 0.2554553451653563}, {"determining": "( Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) ) / ( RRS * FirstVNF_CPU ) )", "choosing": "( Max( DS,MUM ) - RMSe )", "obj1": 0.3254437869822485, "obj2": 0.532965432208314}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( ( ACS - ( ( PN / CRS ) * AMS ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( Min( Min( MUM ,DS ) ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( MUR * RRSe ) )", "obj1": 0.4260355029585799, "obj2": 0.417360957877266}, {"determining": "Min( ( Max( CRS,( DDR / CRS ) ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( Min( ( ( MLU * RCSe ) - Min( RCSe ,MLU ) ) ,MUR ) - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Max( ( PN * ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( DS * Min( ( ( Min( MUC ,RMSe ) * MLU ) / MUM ) ,RCSe ) ) - ( MUC + DS ) )", "obj1": 0.2485207100591716, "obj2": 0.6099172346139596}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( ( RRS * PN ) + Max( CRS,PN ) ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - ( DS + DS ) )", "obj1": 0.13214990138067062, "obj2": 0.7393441642787533}, {"determining": "( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( FirstVNF_CPU * MRS ) ) )", "choosing": "( ( RCSe - ( ( RCSe + RRSe ) + ( RRSe * RMSe ) ) ) - ( DS * MUM ) )", "obj1": 0.2445759368836292, "obj2": 0.6375753692929212}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( ARS,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( RRSe + RRSe ) - ( MUM - MUR ) ) + Max( ( MUM / MUC ),Max( MUR,MUR ) ) ) ,Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,( CS + MLU ) ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11045364891518737, "obj2": 0.7509295071963691}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( Min( Min( Max( MUR,MUR ) ,MUR ) ,CS ) / RMSe ) ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21696252465483234, "obj2": 0.6535839931640866}, {"determining": "( ( AMS - MRS ) + ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Max( DS,MUR ) + ( RMSe * DS ) )", "obj1": 0.5266272189349113, "obj2": 0.36179853653279714}, {"determining": "Min( ( Max( Min( ARS ,FirstVNF_CPU_Server ),( BR / Const ) ) / Max( Max( FirstVNF_RAM_Server,BR ),( RRS * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( CS * MUR ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.5443786982248521, "obj2": 0.350210348750222}, {"determining": "Max( ( PN + Const ),( Const * ( BR * PN ) ) )", "choosing": "( Max( ( MUM + MUC ),( RCSe * MUR ) ) / ( Max( ( RCSe + MLU ),( MUR - DS ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.6410256410256411, "obj2": 0.25607540045563004}, {"determining": "( Max( ( FirstVNF_CPU + ( FirstVNF_RAM * Min( FirstVNF_CPU ,DDR ) ) ),MDR ) * Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( MUM - Max( ( Max( DS,RCSe ) - RRSe ),DS ) )", "obj1": 0.29191321499013806, "obj2": 0.560010118440517}, {"determining": "Min( ( FirstVNF_CPU_Server * ( ( ACS - Min( PN ,MDR ) ) - ( DDR - ( Max( Const,( Max( PN,PN ) / Min( FirstVNF_RAM ,MRS ) ) ) * ( ARS / ( BR - BR ) ) ) ) ) ) ,( ( FirstVNF_CPU - ( RRS + MDR ) ) / ACS ) )", "choosing": "( ( ( MUR - MLU ) / RMSe ) * Min( Min( RCSe ,( ( RCSe + ( CS * Max( MLU,RCSe ) ) ) + MUR ) ) ,DS ) )", "obj1": 0.22287968441814596, "obj2": 0.6376686624847528}, {"determining": "( ( ( AMS + FirstVNF_RAM_Server ) / MRS ) * ( Const / ( ( Const * ( FirstVNF_CPU - BR ) ) * ( AMS * ACS ) ) ) )", "choosing": "( Max( Max( ( MLU + MUR ),MLU ),RRSe ) / ( MUR / DS ) )", "obj1": 0.5522682445759369, "obj2": 0.33526915745565633}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * ( ( MLU * RMSe ) + MUR ) ) - ( MUC + DS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Min( ( FirstVNF_CPU * Const ) ,( AMS + FirstVNF_CPU ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,( MLU * MUC ) ) - MUC ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,( ( FirstVNF_Mem_Server + PN ) / MDR ) )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,MUM ),CS ) )", "obj1": 0.28402366863905326, "obj2": 0.5710248104962692}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( MUM / ( MUM - MUR ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "Min( ( PN + Const ) ,Min( RRS ,BR ) )", "choosing": "Max( ( Min( ( RRSe + ( MUM * MUM ) ) ,DS ) / Min( DS ,RMSe ) ),Max( ( RMSe - MUM ),MUR ) )", "obj1": 0.3155818540433925, "obj2": 0.5363661140649768}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( ( ( FirstVNF_RAM_Server - ARS ) / ( ( Const - ( FirstVNF_RAM + DDR ) ) * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MUR - ( RMSe / RRSe ) ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.27613412228796846, "obj2": 0.5884478026314272}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "Min( Min( Max( ( FirstVNF_RAM_Server / FirstVNF_Mem ),( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) ,Max( Min( CRS ,BR ),( RRS / ACS ) ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),MRS ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( Max( MLU,MUC ) * ( MUR / MUM ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,Min( ( RRSe - MUR ) ,( MUC + CS ) ) ) ) ) )", "obj1": 0.3136094674556213, "obj2": 0.5458241111996338}, {"determining": "Max( ( ( FirstVNF_RAM - DDR ) - ( BR - FirstVNF_Mem ) ),( ( Min( BR ,MDR ) + ( FirstVNF_Mem_Server * BR ) ) - ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( RCSe + RRSe ) + ( RRSe * RMSe ) ) + CS ) / ( MLU + CS ) )", "obj1": 0.2781065088757396, "obj2": 0.5800258248004283}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / FirstVNF_CPU_Server )", "choosing": "Min( ( ( MUM / MUM ) + ( RCSe + MLU ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5505459542166921}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Min( RMSe ,( MUC / MUR ) ) + ( ( MUM + DS ) / RCSe ) ) ,( ( MUR - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 0.3076923076923077, "obj2": 0.5505459542166921}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_Mem_Server ) ,AMS )", "choosing": "( ( RCSe - MUC ) - Max( Max( CS,MUM ),Min( RMSe ,MUM ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5735477310116257}, {"determining": "( ( ( ( MDR - ( ARS + ( ( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) / CRS ) ) ) * ( FirstVNF_Mem - PN ) ) / ( ( FirstVNF_RAM_Server - BR ) / ( DDR * Const ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0007226941213866384}, {"determining": "Min( ( ( RRS / RRS ) + Const ) ,( ARS - FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe + ( MUC * RRSe ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( BR,FirstVNF_Mem ) ,Max( MDR,Min( RRS ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Min( ( ( RCSe / ( RCSe - RMSe ) ) - ( MUM * MUR ) ) ,( MUR * ( MUC * ( MUM * ( Max( RMSe,RCSe ) / Max( RMSe,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) - Const ) * ( Const / PN ) )", "choosing": "( ( Max( Min( ( RMSe / RMSe ) ,CS ),( MUC - MLU ) ) / ( DS * MUM ) ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ( ARS * ( ARS * ARS ) ) / MDR ) )", "choosing": "Min( ( CS - Max( ( MLU / ( Min( RRSe ,DS ) * MUC ) ),MUR ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * Max( Const,Min( ( BR + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( Max( MUC,RMSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM ) * FirstVNF_Mem_Server ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / Min( CS ,( MUR - Max( CS,RMSe ) ) ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( Const ,FirstVNF_RAM ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,( Max( RCSe,MLU ) + CS ) ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( MUC * RRSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS * MLU ) + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) ) / ( MDR * FirstVNF_Mem ) )", "choosing": "Min( ( ( DS * Min( Min( DS ,DS ) ,RMSe ) ) * MUR ) ,( ( ( RRSe + CS ) - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / ( MRS * MDR ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,( ( ( DS * ( ( MLU * MUR ) / RMSe ) ) * MLU ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,Max( DDR,( MDR + Max( ARS,FirstVNF_CPU ) ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( Max( Max( ( MUR * ( ( ( RMSe / CS ) / ( DS + MUC ) ) + ( MUM * CS ) ) ),MLU ),( Max( RCSe,MUM ) + ( MUR + MUC ) ) ) / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - ( ARS + ACS ) ) * MRS ) / ( ( FirstVNF_RAM_Server - BR ) / ( DDR * Const ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( Max( MUR,( Max( RRSe,RCSe ) - MUM ) ) - Min( ( ( ( MUR + DS ) / Max( RCSe,MUM ) ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ARS ) / ( RRS * FirstVNF_RAM_Server ) ) * Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) + Max( ( MUR - ( RCSe * CS ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) / ( RRS * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) + ( Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * ( DS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ACS ,( Min( Min( Min( ( FirstVNF_RAM_Server / Const ) ,RRS ) ,ACS ) ,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RRSe ) + ( Max( ( DS + RRSe ),( MLU * RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * PN ) + ( BR - AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + ( CRS / FirstVNF_Mem_Server ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,DS ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / ( MRS * MDR ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,( ( ( DS * ( ( MLU * MUR ) / RMSe ) ) * MLU ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( CS - ( RRSe * RMSe ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU ,( ( Min( ACS ,( Min( FirstVNF_RAM ,ACS ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM + BR ) ) / DDR ) ) ) / Max( CRS,( DDR / RRS ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( MUR,( CS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( Max( ( RRSe * MLU ),( MLU - CS ) ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - ( ( ( PN - Min( DDR ,BR ) ) / ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ,( ( ( PN + BR ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( MUR ,RMSe ) ) / Max( MUM,Max( RMSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * DDR ) * ( PN + ( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ) / ( MUR * RMSe ) ),RRSe ) + ( MUR + DS ) ) / ( ( DS - CS ) + ( RCSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * ( FirstVNF_RAM_Server + MRS ) ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( Max( RMSe,MUC ) - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( ( ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - Max( FirstVNF_CPU,( FirstVNF_CPU_Server / BR ) ) ) ) * ( ARS * MDR ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) )", "choosing": "( Max( Max( Min( ( Min( RMSe ,RCSe ) - MUM ) ,( MUM / Min( Max( ( CS / DS ),( MUM - CS ) ) ,DS ) ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) ),MUC ) - ( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,( ( DDR / ARS ) / ( ACS / CRS ) ) ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ACS ) ,( FirstVNF_CPU_Server * ( Const / ( RRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( CS - Min( ( MUR - RCSe ) ,MLU ) ) * ( Min( CS ,Max( RCSe,Max( RCSe,RRSe ) ) ) / MUM ) ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( MLU / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM + PN ) - Max( ACS,PN ) ) ,Min( Min( MDR ,ARS ) ,( FirstVNF_Mem_Server + MDR ) ) ) + Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( Min( MRS ,FirstVNF_RAM ),( PN * FirstVNF_Mem_Server ) ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( ( ( CS / RRSe ) - ( RCSe * RRSe ) ) - Max( Max( CS,RMSe ),Min( CS ,RCSe ) ) ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * ARS ) + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( Min( MLU ,MUM ) - ( RRSe - MUC ) ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "( ( Min( MLU ,MUM ) - ( RRSe - MUC ) ) / ( ( DS / MUC ) - ( RRSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( Min( AMS ,FirstVNF_CPU ) + RRS ) ,( ( FirstVNF_Mem_Server + PN ) / MDR ) ) - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * Max( Max( Min( MUM ,MUR ),MUM ),CS ) ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( Max( Max( ( FirstVNF_CPU + FirstVNF_CPU_Server ),( RRS * Const ) ),( Min( RRS ,AMS ) - ( FirstVNF_CPU_Server + FirstVNF_CPU_Server ) ) ) - ( ( ( BR * CRS ) / Max( MDR,MRS ) ) - Min( ( RRS + BR ) ,Max( FirstVNF_RAM,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( CS - Max( MUC,MUR ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - Const ) * ( Const / PN ) )", "choosing": "( ( MUM * MUC ) / ( RRSe / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) * ( MRS - Const ) )", "choosing": "( Max( MUM,RRSe ) - ( RCSe / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) - Const ) * ( Const / PN ) )", "choosing": "( ( Max( Min( ( RMSe / RMSe ) ,CS ),( MUC - MLU ) ) / ( DS * MUM ) ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR + CRS ) - ( ( ( BR - BR ) - ( FirstVNF_RAM - ( FirstVNF_CPU_Server + ( Const / ARS ) ) ) ) / AMS ) )", "choosing": "Min( ( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) ,Min( ( ( DS - MUM ) - Max( MUC,MLU ) ) ,( ( RRSe - RRSe ) / Max( RMSe,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / ( ( MRS * PN ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) ) ) * ( FirstVNF_Mem_Server - Const ) ) * ( Min( Const ,MDR ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) * ( MUC - RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * MDR ) - Min( MRS ,MDR ) )", "choosing": "( ( MUR + MUC ) / RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ) ,( FirstVNF_RAM_Server * FirstVNF_RAM ) )", "choosing": "Max( Max( CS,RMSe ),( ( MUM + ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( ( Const * ( Max( FirstVNF_Mem,FirstVNF_CPU_Server ) * Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) + FirstVNF_RAM_Server ) )", "choosing": "Min( Min( DS ,MUC ) ,( RCSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( ( ( ACS * ARS ) + DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( MUR,MUR ) - Min( MUR ,( ( Min( ( MLU - CS ) ,( MUR - CS ) ) * MLU ) + RCSe ) ) ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) - Max( ACS,( ( RRS * RRS ) + ( AMS / ARS ) ) ) )", "choosing": "Min( ( ( DS / ( ( MLU + ( ( ( RMSe - RRSe ) / ( MUC / CS ) ) / DS ) ) - ( MLU - RMSe ) ) ) * MUC ) ,( Min( ( ( RCSe - RCSe ) - ( Max( ( ( MLU + CS ) * ( CS * RMSe ) ),MUC ) - MUR ) ) ,( ( MUM / MLU ) / Max( RMSe,MUM ) ) ) + ( ( ( CS / RRSe ) - ( RCSe * RRSe ) ) - Min( CS ,( MLU * Min( ( MUR + CS ) ,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.8461538461538461, "obj2": 0.05195580185050141}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) + Max( Min( FirstVNF_RAM ,MRS ),AMS ) ) - ( ( FirstVNF_RAM - DDR ) / ( AMS * MRS ) ) )", "choosing": "( ( ( ( RRSe + MUR ) - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) )", "obj1": 0.9388560157790927, "obj2": 0.04636346199995509}, {"determining": "( ( FirstVNF_RAM_Server / ( ( Const - ( FirstVNF_RAM + DDR ) ) * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) )", "choosing": "( ( RCSe * ( ( RMSe / RRSe ) - DS ) ) + Max( ( MUR * MUR ),CS ) )", "obj1": 0.7692307692307693, "obj2": 0.15461711296322578}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( DDR,AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) )", "obj1": 0.5779092702169625, "obj2": 0.2790797376453065}, {"determining": "( ( Const - MDR ) - ( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( ( ( PN - FirstVNF_RAM_Server ) - ( RRS * Const ) ) * ( ( FirstVNF_Mem_Server + ACS ) + Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( ( MUM + ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) + DS ) - ( CS / MLU ) ) )", "obj1": 0.1893491124260355, "obj2": 0.7072886233348661}, {"determining": "( ( ( Const - FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) * ( Const / PN ) )", "choosing": "( MUC / ( MUR / DS ) )", "obj1": 0.9684418145956607, "obj2": 0.02049076101367939}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "Min( ( ( BR / Const ) - MDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( CS,RRSe ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( ( ( MUR - CS ) / RMSe ) ,( DS / MLU ) )", "obj1": 0.4891518737672584, "obj2": 0.36614179910324607}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,( ( FirstVNF_CPU - ( RRS + MDR ) ) / ACS ) ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( MDR * FirstVNF_Mem ) )", "choosing": "Min( Min( Min( RCSe ,( ( RCSe + MLU ) + MUR ) ) ,DS ) ,( ( ( RRSe + CS ) - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 0.6686390532544378, "obj2": 0.22812662544330894}, {"determining": "( ( Max( ( ARS - Max( MRS,ARS ) ),FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * MRS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM - MUR ) + Max( ( ( RRSe / MLU ) - MLU ),Min( MUR ,Max( Min( MUM ,RMSe ),RMSe ) ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1341222879684418, "obj2": 0.7213837360335853}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( RMSe / ( CS - RRSe ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "( ( CRS / FirstVNF_Mem_Server ) / Max( FirstVNF_Mem,MRS ) )", "choosing": "( Max( DS,MUM ) - ( DS / MLU ) )", "obj1": 0.19723865877712032, "obj2": 0.6591352551609121}, {"determining": "Min( ( Const - ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( RCSe / MLU ) )", "obj1": 0.631163708086785, "obj2": 0.2650405405651295}, {"determining": "Min( ( AMS * CRS ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7850098619329389, "obj2": 0.07443864374756802}, {"determining": "( Max( ( ( MRS + RRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,DS ) ,Min( ( RRSe * ( MUR * MUM ) ) ,( MUC / ( RRSe + MLU ) ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,( ( MUM - MUC ) / RRSe ) ) ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "Min( ( Max( Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 0.4635108481262327, "obj2": 0.3912396860008356}, {"determining": "Max( ( PN + Const ),( Const * ( BR * PN ) ) )", "choosing": "( Max( ( MUM + MUC ),( RCSe * MUR ) ) / ( Max( ( RCSe + MLU ),( MUR - DS ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.6410256410256411, "obj2": 0.25607540045563004}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( ( ACS - ( ( PN / CRS ) * AMS ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( Min( Min( MUM ,DS ) ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( MUR * RRSe ) )", "obj1": 0.4260355029585799, "obj2": 0.417360957877266}, {"determining": "( ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) * ( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( CS,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * MLU ) ) )", "obj1": 0.7672583826429981, "obj2": 0.1957361495785457}, {"determining": "Min( ( PN + Const ) ,Min( RRS ,BR ) )", "choosing": "Max( ( Min( ( RRSe + ( MUM * MUM ) ) ,DS ) / Min( DS ,RMSe ) ),Max( ( RMSe - MUM ),MUR ) )", "obj1": 0.3155818540433925, "obj2": 0.5363661140649768}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - MRS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Max( MLU,DS ) ) )", "obj1": 0.7495069033530573, "obj2": 0.20498945501861834}, {"determining": "( ( ( FirstVNF_CPU_Server / MRS ) * ( ( RRS * ( MDR * ( FirstVNF_Mem_Server * ( FirstVNF_Mem / MDR ) ) ) ) - Const ) ) * ( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - DDR ) ) )", "choosing": "( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * ( MLU * Max( ( ( Min( RCSe ,MUM ) * MUC ) * MUR ),RCSe ) ) ) ) )", "obj1": 0.7159763313609467, "obj2": 0.21685674164925714}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * ( ACS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2702169625246548, "obj2": 0.5674009985536722}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( ( ACS + ARS ) * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Max( Min( Min( RMSe ,DS ) ,RMSe ),RMSe ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( MUM - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.358974358974359, "obj2": 0.46245841476414423}, {"determining": "Min( Max( AMS,( ARS - ( Min( Const ,RRS ) - BR ) ) ) ,( AMS + FirstVNF_CPU ) )", "choosing": "( DS + ( MUM + RMSe ) )", "obj1": 0.6923076923076923, "obj2": 0.21824946181071378}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( ( ( RRS * PN ) + Max( CRS,PN ) ) / Max( FirstVNF_RAM_Server,CRS ) ) ) )", "choosing": "( ( DS * RCSe ) - ( DS + DS ) )", "obj1": 0.13214990138067062, "obj2": 0.7393441642787533}, {"determining": "Min( ( FirstVNF_CPU_Server * MDR ) ,( Const + CRS ) )", "choosing": "( ( ( MUR - MLU ) / RMSe ) * Min( Min( RCSe ,( ( MUC + Max( ( DS * RCSe ),RRSe ) ) + MUR ) ) ,DS ) )", "obj1": 0.22879684418145957, "obj2": 0.6304729816807649}, {"determining": "( Max( ( FirstVNF_CPU + ( FirstVNF_RAM * Min( FirstVNF_CPU ,DDR ) ) ),MDR ) * Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( MUM - Max( ( Max( DS,RCSe ) - RRSe ),DS ) )", "obj1": 0.29191321499013806, "obj2": 0.560010118440517}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( ARS,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( RRSe + RRSe ) - ( MUM - MUR ) ) + Max( ( MUM / MUC ),Max( MUR,MUR ) ) ) ,Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,( CS + MLU ) ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11045364891518737, "obj2": 0.7509295071963691}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Max( ( PN * ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( DS * Min( ( ( Min( MUC ,RMSe ) * MLU ) / MUM ) ,RCSe ) ) - ( MUC + DS ) )", "obj1": 0.2485207100591716, "obj2": 0.6099172346139596}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( ACS * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( ( MUR + MLU ) + CS ) - ( CS / CS ) ) ) )", "obj1": 0.2978303747534517, "obj2": 0.5450921324257384}, {"determining": "( ( FirstVNF_CPU_Server / MRS ) * ( Const / ( FirstVNF_CPU_Server * ( AMS * ACS ) ) ) )", "choosing": "( Min( ( ( RCSe + RRSe ) / RCSe ) ,( ( MUM / MUC ) + ( Min( Min( MUC ,( MUM - RCSe ) ) ,RRSe ) + Max( MUR,CS ) ) ) ) / ( MUR / DS ) )", "obj1": 0.52465483234714, "obj2": 0.35851390283038476}, {"determining": "Min( ( Max( Min( ARS ,FirstVNF_CPU_Server ),( BR / Const ) ) / Max( Max( FirstVNF_RAM_Server,BR ),( RRS * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( CS * MUR ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.5443786982248521, "obj2": 0.350210348750222}, {"determining": "Min( ( Const - ( ( FirstVNF_RAM + MDR ) - Min( ( Const - FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( MLU ,( RCSe / MLU ) )", "obj1": 0.4536489151873767, "obj2": 0.40529315300662266}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( RRSe - MUR ),( MUC * RCSe ) ) / ( MUM / ( MUM - MUR ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5937543175282137}, {"determining": "( ( ( AMS + FirstVNF_RAM_Server ) / MRS ) * ( Const / ( ( Const * ( FirstVNF_CPU - BR ) ) * ( AMS * ACS ) ) ) )", "choosing": "( Max( Max( ( MLU + MUR ),MLU ),RRSe ) / ( MUR / DS ) )", "obj1": 0.5522682445759369, "obj2": 0.33526915745565633}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "Min( ( Max( CRS,( DDR / CRS ) ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( Min( ( ( MLU * RCSe ) - Min( RCSe ,MLU ) ) ,MUR ) - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "Min( ( FirstVNF_CPU_Server * ( ( ACS - Min( PN ,MDR ) ) - ( DDR - ( Max( Const,( Max( PN,PN ) / Min( FirstVNF_RAM ,MRS ) ) ) * ( ARS / ( BR - BR ) ) ) ) ) ) ,( ( FirstVNF_CPU - ( RRS + MDR ) ) / ACS ) )", "choosing": "( ( ( MUR - MLU ) / RMSe ) * Min( Min( RCSe ,( ( RCSe + ( CS * Max( MLU,RCSe ) ) ) + MUR ) ) ,DS ) )", "obj1": 0.22287968441814596, "obj2": 0.6376686624847528}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( Min( Min( Max( MUR,MUR ) ,MUR ) ,CS ) / RMSe ) ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21696252465483234, "obj2": 0.6535839931640866}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "( ( Max( ( CRS + FirstVNF_CPU_Server ),( FirstVNF_RAM_Server / RRS ) ) * Max( Min( FirstVNF_RAM_Server ,DDR ),( ACS - CRS ) ) ) / ( ( ( ARS / CRS ) / ( FirstVNF_RAM_Server - BR ) ) * ( PN - FirstVNF_Mem_Server ) ) )", "choosing": "( ( DS * ( ( MLU * RMSe ) + MUR ) ) - ( MUC + DS ) )", "obj1": 0.2583826429980276, "obj2": 0.596709400268639}, {"determining": "Min( ( FirstVNF_CPU * Const ) ,( AMS + FirstVNF_CPU ) )", "choosing": "( ( Min( ( RRSe - RRSe ) ,( MLU * MUC ) ) - MUC ) + Min( DS ,DS ) )", "obj1": 0.5305719921104537, "obj2": 0.35827715266931376}, {"determining": "( ( ( ( BR * Max( Const,( ( ( FirstVNF_RAM - ARS ) - MRS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( ( RMSe - RCSe ),( ( MUR * CS ) * RCSe ) ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( RCSe,Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0017297732100570397}, {"determining": "( ( ( ( BR * Max( Const,Min( ( BR + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,AMS ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( ( MUC / MUC ) + ( Max( MLU,MUM ) * Min( MUR ,CS ) ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( Max( MUM,( CS / MLU ) ) ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0017297732100570397}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( PN ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,RCSe ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "Min( ( FirstVNF_CPU_Server * ( ( ACS - Min( PN ,MDR ) ) - ( DDR - ( Max( Const,( Max( PN,PN ) / Min( FirstVNF_RAM ,MRS ) ) ) * ( ARS / ( BR - BR ) ) ) ) ) ) ,( ( FirstVNF_CPU - ( RRS + MDR ) ) / ACS ) )", "choosing": "( ( ( MUR - MLU ) / RMSe ) * Min( Min( RCSe ,( ( RCSe + ( CS * Max( MLU,RCSe ) ) ) + MUR ) ) ,DS ) )", "obj1": 0.252465483234714, "obj2": 0.6054119032497666}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "Min( ( ( FirstVNF_CPU + FirstVNF_CPU_Server ) / Min( CRS ,( FirstVNF_CPU * MRS ) ) ) ,( Const - ( BR * PN ) ) )", "choosing": "Max( ( Min( MUC ,DS ) / Min( DS ,RMSe ) ),( ( RCSe - ( ( RCSe + RRSe ) + ( RRSe * RMSe ) ) ) - DS ) )", "obj1": 0.3155818540433925, "obj2": 0.5363661140649768}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,Min( ( Const - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( ( Min( FirstVNF_Mem ,CRS ) * ( FirstVNF_RAM / MDR ) ) + Max( ( FirstVNF_CPU_Server + Const ),( ACS * MRS ) ) ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( ( DS / MUC ) - ( RRSe - MUR ) ) ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21696252465483234, "obj2": 0.6535839931640866}, {"determining": "Min( ( ( FirstVNF_CPU + MRS ) - Min( FirstVNF_RAM ,DDR ) ) ,( ( BR + Min( MRS ,( AMS * FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "Max( ( ( ( MUM + ( RRSe * ( ( MLU * CS ) + MUC ) ) ) / DS ) * ( Min( RCSe ,DS ) - ( MUR + ( RCSe / RMSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.777120315581854, "obj2": 0.07665069678164213}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07460736731477179}, {"determining": "( ( ( ( MDR - ( ARS + ( ( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) / CRS ) ) ) * ( FirstVNF_Mem - PN ) ) / ( ( FirstVNF_RAM_Server - BR ) / ( DDR * Const ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0007226941213866384}, {"determining": "( ( ( ( MDR - ( ARS + ( ( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) / CRS ) ) ) * ( FirstVNF_Mem - PN ) ) / ( ( FirstVNF_RAM_Server - BR ) / ( DDR * Const ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0007226941213866384}, {"determining": "( ( MRS * DDR ) - Min( MRS ,Min( FirstVNF_RAM ,( CRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU / RRSe ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS / RRS ) + Const ) ,( ARS - FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe + ( MUC * RRSe ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( BR,FirstVNF_Mem ) ,Max( MDR,Min( RRS ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Min( ( ( RCSe / ( RCSe - RMSe ) ) - ( MUM * MUR ) ) ,( MUR * ( MUC * ( MUM * ( Max( RMSe,RCSe ) / Max( RMSe,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) - Const ) * ( Const / PN ) )", "choosing": "( ( Max( Min( ( RMSe / RMSe ) ,CS ),( MUC - MLU ) ) / ( DS * MUM ) ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ( ARS * ( ARS * ARS ) ) / MDR ) )", "choosing": "Min( ( CS - Max( ( MLU / ( Min( RRSe ,DS ) * MUC ) ),MUR ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * Max( Const,Min( ( BR + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( Max( MUC,RMSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM ) * FirstVNF_Mem_Server ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / Min( CS ,( MUR - Max( CS,RMSe ) ) ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( Const ,FirstVNF_RAM ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,( Max( RCSe,MLU ) + CS ) ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( MUC * RRSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS * MLU ) + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) ) / ( MDR * FirstVNF_Mem ) )", "choosing": "Min( ( ( DS * Min( Min( DS ,DS ) ,RMSe ) ) * MUR ) ,( ( ( RRSe + CS ) - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / ( MRS * MDR ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,( ( ( DS * ( ( MLU * MUR ) / RMSe ) ) * MLU ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,Max( DDR,( MDR + Max( ARS,FirstVNF_CPU ) ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( Max( Max( ( MUR * ( ( ( RMSe / CS ) / ( DS + MUC ) ) + ( MUM * CS ) ) ),MLU ),( Max( RCSe,MUM ) + ( MUR + MUC ) ) ) / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - ( ARS + ACS ) ) * MRS ) / ( ( FirstVNF_RAM_Server - BR ) / ( DDR * Const ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( Max( MUR,( Max( RRSe,RCSe ) - MUM ) ) - Min( ( ( ( MUR + DS ) / Max( RCSe,MUM ) ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ARS ) / ( RRS * FirstVNF_RAM_Server ) ) * Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) + Max( ( MUR - ( RCSe * CS ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) / ( RRS * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) + ( Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * ( DS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ACS ,( Min( Min( Min( ( FirstVNF_RAM_Server / Const ) ,RRS ) ,ACS ) ,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RRSe ) + ( Max( ( DS + RRSe ),( MLU * RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * PN ) + ( BR - AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + ( CRS / FirstVNF_Mem_Server ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,DS ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / ( MRS * MDR ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,( ( ( DS * ( ( MLU * MUR ) / RMSe ) ) * MLU ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( CS - ( RRSe * RMSe ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU ,( ( Min( ACS ,( Min( FirstVNF_RAM ,ACS ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM + BR ) ) / DDR ) ) ) / Max( CRS,( DDR / RRS ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( MUR,( CS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( Max( ( RRSe * MLU ),( MLU - CS ) ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - ( ( ( PN - Min( DDR ,BR ) ) / ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ,( ( ( PN + BR ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( MUR ,RMSe ) ) / Max( MUM,Max( RMSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * DDR ) * ( PN + ( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ) / ( MUR * RMSe ) ),RRSe ) + ( MUR + DS ) ) / ( ( DS - CS ) + ( RCSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * ( FirstVNF_RAM_Server + MRS ) ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( Max( RMSe,MUC ) - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( ( ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - Max( FirstVNF_CPU,( FirstVNF_CPU_Server / BR ) ) ) ) * ( ARS * MDR ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) )", "choosing": "( Max( Max( Min( ( Min( RMSe ,RCSe ) - MUM ) ,( MUM / Min( Max( ( CS / DS ),( MUM - CS ) ) ,DS ) ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) ),MUC ) - ( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,( ( DDR / ARS ) / ( ACS / CRS ) ) ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ACS ) ,( FirstVNF_CPU_Server * ( Const / ( RRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( CS - Min( ( MUR - RCSe ) ,MLU ) ) * ( Min( CS ,Max( RCSe,Max( RCSe,RRSe ) ) ) / MUM ) ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( MLU / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM + PN ) - Max( ACS,PN ) ) ,Min( Min( MDR ,ARS ) ,( FirstVNF_Mem_Server + MDR ) ) ) + Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( Min( MRS ,FirstVNF_RAM ),( PN * FirstVNF_Mem_Server ) ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( ( ( CS / RRSe ) - ( RCSe * RRSe ) ) - Max( Max( CS,RMSe ),Min( CS ,RCSe ) ) ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU * ARS ) + Const ) ,( Const - FirstVNF_RAM_Server ) )", "choosing": "Max( ( Min( MLU ,MUM ) - ( RRSe - MUC ) ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * ARS ) + DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( MUR,MUR ) - Min( MUR ,( ( Min( ( MLU - CS ) ,( MUR - CS ) ) * MLU ) + RCSe ) ) ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Min( DDR ,( Const * ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( ( CS * Max( RRSe,Max( RMSe,Max( MUR,RMSe ) ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.04930966469428008, "obj2": 0.7912220264478038}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - MRS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - Max( MLU,DS ) ) )", "obj1": 0.7495069033530573, "obj2": 0.20498945501861834}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.8461538461538461, "obj2": 0.05195580185050141}, {"determining": "Min( ( PN * Min( FirstVNF_RAM ,AMS ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( ( RCSe * ( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * MLU ) ) ) ) ,( MUR / MLU ) ) * ( RCSe - Min( CS ,( MLU - CS ) ) ) ),( RCSe - CS ) )", "obj1": 0.7672583826429981, "obj2": 0.08014470159838478}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) + Max( Min( FirstVNF_RAM ,MRS ),AMS ) ) - ( ( FirstVNF_RAM - DDR ) / ( AMS * MRS ) ) )", "choosing": "( ( ( ( RRSe + MUR ) - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) )", "obj1": 0.9388560157790927, "obj2": 0.04636346199995509}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,Min( ( Const - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / FirstVNF_RAM )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( ( DS / MUC ) - ( RRSe - MUR ) ) ) ,( DS - MUR ) ) ) + ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.1873767258382643, "obj2": 0.6762890577100942}, {"determining": "( ( Max( ( ARS - Max( MRS,ARS ) ),FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * MRS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM - MUR ) + Max( ( ( RRSe / MLU ) - MLU ),Min( MUR ,Max( Min( MUM ,RMSe ),RMSe ) ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1341222879684418, "obj2": 0.7213837360335853}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.46745562130177515, "obj2": 0.35407264723160636}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( DDR,AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) )", "obj1": 0.5779092702169625, "obj2": 0.2790797376453065}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( ( Max( Min( ARS ,FirstVNF_CPU_Server ),( BR / Const ) ) / Max( Max( FirstVNF_RAM_Server,BR ),( RRS * FirstVNF_RAM_Server ) ) ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( CS * MUR ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.5443786982248521, "obj2": 0.350210348750222}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( Min( ( FirstVNF_CPU_Server * MDR ) ,( ( FirstVNF_CPU - ( RRS + MDR ) ) / ACS ) ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( MDR * FirstVNF_Mem ) )", "choosing": "Min( Min( Min( RCSe ,( ( RCSe + MLU ) + MUR ) ) ,DS ) ,( ( ( RRSe + CS ) - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 0.6686390532544378, "obj2": 0.22812662544330894}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( MRS * PN ) + ( BR - AMS ) ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( CS ,( ( ( MUM - MUC ) - CS ) * RMSe ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.28205128205128205, "obj2": 0.5334315623657782}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ACS - ACS ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Max( MRS,MRS ) ,MRS ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( CS * ( RCSe * RMSe ) ),( MUR + Min( Min( MUC ,( MUR + ( MLU - RCSe ) ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.5096121512091596}, {"determining": "Min( Max( FirstVNF_CPU,Max( DDR,AMS ) ) ,Max( MDR,FirstVNF_CPU_Server ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( RMSe / ( CS - RRSe ) ) )", "obj1": 0.5581854043392505, "obj2": 0.32291078025944214}, {"determining": "Min( ( AMS * CRS ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7850098619329389, "obj2": 0.07443864374756802}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * ( ACS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2702169625246548, "obj2": 0.5674009985536722}, {"determining": "( ( ( Const - FirstVNF_Mem ) - Min( FirstVNF_RAM_Server ,FirstVNF_RAM ) ) * ( Const / PN ) )", "choosing": "( MUC / ( MUR / DS ) )", "obj1": 0.9684418145956607, "obj2": 0.02049076101367939}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( ( ACS - ( ( PN / CRS ) * AMS ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( Min( Min( MUM ,DS ) ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( MUR * RRSe ) )", "obj1": 0.4260355029585799, "obj2": 0.417360957877266}, {"determining": "Max( ( PN + Const ),( Const * ( BR * PN ) ) )", "choosing": "( Max( ( MUM + MUC ),( RCSe * MUR ) ) / ( Max( ( RCSe + MLU ),( MUR - DS ) ) / Min( DS ,RMSe ) ) )", "obj1": 0.6410256410256411, "obj2": 0.25607540045563004}, {"determining": "Min( ( FirstVNF_CPU_Server * MDR ) ,( ( FirstVNF_CPU - ( MRS * FirstVNF_Mem ) ) / ACS ) )", "choosing": "( ( ( MUR - MLU ) / ( ( MUM / MUC ) * ( MLU / MUM ) ) ) * Min( Min( RCSe ,( ( RCSe + MLU ) + MUR ) ) ,DS ) )", "obj1": 0.1952662721893491, "obj2": 0.6569502327548812}, {"determining": "Min( ( Const - ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) ) ,Const )", "choosing": "Min( Max( RMSe,MLU ) ,( ( RRSe * MUC ) / MUM ) )", "obj1": 0.6153846153846154, "obj2": 0.2724767754051394}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( Min( Min( Max( MUR,MUR ) ,MUR ) ,CS ) / RMSe ) ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21301775147928995, "obj2": 0.6345274088005832}, {"determining": "Min( ( Max( Min( ( Const - FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ),AMS ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Max( RMSe,MLU ) ,( DS / MLU ) ) )", "obj1": 0.4635108481262327, "obj2": 0.3912396860008356}, {"determining": "Min( ( Const - ( ( FirstVNF_RAM + MDR ) - ( ( FirstVNF_CPU * ARS ) + Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( MLU ,DS )", "obj1": 0.7041420118343196, "obj2": 0.2052702499374447}, {"determining": "Min( Min( ARS ,DDR ) ,( AMS + ( ( ( FirstVNF_CPU_Server / MRS ) * ( FirstVNF_Mem_Server - Const ) ) * ( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - DDR ) ) ) ) )", "choosing": "( DS + Min( DS ,( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * MLU ) ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.21128946036003768}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / ( RMSe + MUM ) ) * Max( ( RRSe * MLU ),( MLU - CS ) ) ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( ( MUR + MLU ) + CS ) - ( CS / CS ) ) ) )", "obj1": 0.25443786982248523, "obj2": 0.5819470521598649}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( DDR,Const ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) + Min( ( ( ( RCSe / MUC ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11834319526627218, "obj2": 0.7309563125920686}, {"determining": "Min( ( Max( CRS,( DDR / CRS ) ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( Min( ( ( MLU * RCSe ) - Min( RCSe ,MLU ) ) ,MUR ) - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( ARS,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( RRSe + RRSe ) - ( MUM - MUR ) ) + Max( ( MUM / MUC ),Max( MUR,MUR ) ) ) ,Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,( CS + MLU ) ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11045364891518737, "obj2": 0.7509295071963691}, {"determining": "Min( ( Const - FirstVNF_CPU ) ,BR )", "choosing": "Min( ( ( MUR - CS ) / RMSe ) ,( CS / MLU ) )", "obj1": 0.4536489151873767, "obj2": 0.3966264508743023}, {"determining": "( ( ( AMS + FirstVNF_RAM_Server ) / MRS ) * ( Const / ( ( Const * ( FirstVNF_CPU - BR ) ) * ( AMS * ACS ) ) ) )", "choosing": "( Max( Max( ( MLU + MUR ),MLU ),RRSe ) / ( MUR / DS ) )", "obj1": 0.5522682445759369, "obj2": 0.33526915745565633}, {"determining": "Min( ( FirstVNF_CPU_Server * MDR ) ,( Const + CRS ) )", "choosing": "( ( ( MUR - MLU ) / RMSe ) * Min( Min( RCSe ,( ( MUC + Max( ( DS * RCSe ),RRSe ) ) + MUR ) ) ,DS ) )", "obj1": 0.22879684418145957, "obj2": 0.6304729816807649}, {"determining": "( Max( ( ( FirstVNF_CPU - CRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / CS ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.34911242603550297, "obj2": 0.4640766179162656}, {"determining": "Min( ( Const - ( ( FirstVNF_RAM + MDR ) - Min( ( Const - FirstVNF_CPU ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) ) ) ,Min( ( Const - ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ) )", "choosing": "Min( Min( Max( RMSe,MLU ) ,( RCSe / MLU ) ) ,( RCSe / MLU ) )", "obj1": 0.631163708086785, "obj2": 0.2631051785894981}, {"determining": "Min( FirstVNF_Mem ,( PN - ( DDR * Const ) ) )", "choosing": "Max( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.9763313609467456, "obj2": 0.009851243756536674}, {"determining": "( ( CRS + DDR ) - ( MRS + ( ( ( CRS + PN ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) ) ) )", "choosing": "Min( ( MLU - ( RMSe * ( Max( MUM,MUC ) - Min( RMSe ,Min( RMSe ,Max( MUR,RRSe ) ) ) ) ) ) ,( DS * MUR ) )", "obj1": 0.252465483234714, "obj2": 0.6040893637875386}, {"determining": "( Max( ( ( MRS + RRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,DS ) ,Min( ( RRSe * ( MUR * MUM ) ) ,( MUC / ( RRSe + MLU ) ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,( ( MUM - MUC ) / RRSe ) ) ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "( Max( ( ( MRS + RRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,DS ) ,Min( ( RRSe * ( MUR * MUM ) ) ,( MUC / ( RRSe + MLU ) ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,( ( MUM - MUC ) / RRSe ) ) ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.6240189102134839}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( FirstVNF_Mem - ACS ) / FirstVNF_RAM_Server ) ) ) / ( Max( MRS,FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * ( Min( DS ,RRSe ) - ( MUM * MUC ) ) ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Max( ( PN * ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( DS * Min( ( ( Min( MUC ,RMSe ) * MLU ) / MUM ) ,RCSe ) ) - ( MUC + DS ) )", "obj1": 0.2485207100591716, "obj2": 0.6099172346139596}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( ( ACS + ARS ) * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Max( Min( Min( RMSe ,DS ) ,RMSe ),RMSe ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( MUM - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.358974358974359, "obj2": 0.46245841476414423}, {"determining": "Min( ( FirstVNF_RAM - ( ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) - ( Min( ( BR + FirstVNF_CPU ) ,Const ) * RRS ) ) ) ,( DDR / MDR ) )", "choosing": "Max( ( MUR / RMSe ),( MUC - Max( Max( ( DS - MUC ),( RMSe * RCSe ) ),MUC ) ) )", "obj1": 0.9921104536489151, "obj2": 0.0028658966413679697}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( PN ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,RCSe ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "Min( ( ( BR / Const ) - MDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( CS,RRSe ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "Min( ( ( FirstVNF_CPU + MRS ) - Min( FirstVNF_RAM ,DDR ) ) ,( ( BR + Min( MRS ,( AMS * FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "Max( ( ( ( MUM + ( RRSe * ( ( MLU * CS ) + MUC ) ) ) / DS ) * ( Min( RCSe ,DS ) - ( MUR + ( RCSe / RMSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.777120315581854, "obj2": 0.07665069678164213}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07460736731477179}, {"determining": "( Max( ( ( MRS + RRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,DS ) ,Min( ( RRSe * ( MUR * MUM ) ) ,( MUC / ( RRSe + MLU ) ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,( ( MUM - MUC ) / RRSe ) ) ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.6240189102134839}, {"determining": "( ( ( ( BR * Max( Const,Min( ( BR + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,AMS ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( ( MUC / MUC ) + ( Max( MLU,MUM ) * Min( MUR ,CS ) ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( Max( MUM,( CS / MLU ) ) ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0017297732100570397}, {"determining": "( ( ( ( MDR - ( ARS + ( ( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) / CRS ) ) ) * ( FirstVNF_Mem - PN ) ) / ( ( FirstVNF_RAM_Server - BR ) / ( DDR * Const ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0007226941213866384}, {"determining": "( ( ( ( MDR - ( ARS + ( AMS / ACS ) ) ) * ( FirstVNF_Mem - PN ) ) / ( ( FirstVNF_RAM_Server - BR ) / ( MRS - ACS ) ) ) / ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( Max( MLU,Max( Max( MUM,Max( RMSe,MUR ) ),MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,( MLU - ( Min( Min( MLU ,MUM ) ,MUM ) / RRSe ) ) ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0007226941213866384}, {"determining": "( ( ( ( BR * Max( Const,( ( ( FirstVNF_RAM - ARS ) - MRS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( ( RMSe - RCSe ),( ( MUR * CS ) * RCSe ) ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( RCSe,Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0017297732100570397}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) - Max( ACS,( ( RRS * RRS ) + ( AMS / ARS ) ) ) )", "choosing": "Min( ( ( DS / ( ( MLU + ( ( ( RMSe - RRSe ) / ( MUC / CS ) ) / DS ) ) - ( MLU - RMSe ) ) ) * MUC ) ,( Min( ( ( RCSe - RCSe ) - ( Max( ( ( MLU + CS ) * ( CS * RMSe ) ),MUC ) - MUR ) ) ,( ( MUM / MLU ) / Max( RMSe,MUM ) ) ) + ( ( ( CS / RRSe ) - ( RCSe * RRSe ) ) - Min( CS ,( MLU * Min( ( MUR + CS ) ,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - Min( MRS ,Min( FirstVNF_RAM ,( CRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU / RRSe ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS / RRS ) + Const ) ,( ARS - FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe + ( MUC * RRSe ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( BR,FirstVNF_Mem ) ,Max( MDR,Min( RRS ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Min( ( ( RCSe / ( RCSe - RMSe ) ) - ( MUM * MUR ) ) ,( MUR * ( MUC * ( MUM * ( Max( RMSe,RCSe ) / Max( RMSe,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) - Const ) * ( Const / PN ) )", "choosing": "( ( Max( Min( ( RMSe / RMSe ) ,CS ),( MUC - MLU ) ) / ( DS * MUM ) ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ( ARS * ( ARS * ARS ) ) / MDR ) )", "choosing": "Min( ( CS - Max( ( MLU / ( Min( RRSe ,DS ) * MUC ) ),MUR ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * Max( Const,Min( ( BR + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( Max( MUC,RMSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM ) * FirstVNF_Mem_Server ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / Min( CS ,( MUR - Max( CS,RMSe ) ) ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( Const ,FirstVNF_RAM ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,( Max( RCSe,MLU ) + CS ) ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( MUC * RRSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS * MLU ) + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) ) / ( MDR * FirstVNF_Mem ) )", "choosing": "Min( ( ( DS * Min( Min( DS ,DS ) ,RMSe ) ) * MUR ) ,( ( ( RRSe + CS ) - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / ( MRS * MDR ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,( ( ( DS * ( ( MLU * MUR ) / RMSe ) ) * MLU ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,Max( DDR,( MDR + Max( ARS,FirstVNF_CPU ) ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( Max( Max( ( MUR * ( ( ( RMSe / CS ) / ( DS + MUC ) ) + ( MUM * CS ) ) ),MLU ),( Max( RCSe,MUM ) + ( MUR + MUC ) ) ) / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - ( ARS + ACS ) ) * MRS ) / ( ( FirstVNF_RAM_Server - BR ) / ( DDR * Const ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( Max( MUR,( Max( RRSe,RCSe ) - MUM ) ) - Min( ( ( ( MUR + DS ) / Max( RCSe,MUM ) ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ARS ) / ( RRS * FirstVNF_RAM_Server ) ) * Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) + Max( ( MUR - ( RCSe * CS ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) / ( RRS * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) + ( Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * ( DS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ACS ,( Min( Min( Min( ( FirstVNF_RAM_Server / Const ) ,RRS ) ,ACS ) ,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RRSe ) + ( Max( ( DS + RRSe ),( MLU * RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * PN ) + ( BR - AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + ( CRS / FirstVNF_Mem_Server ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,DS ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / ( MRS * MDR ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,( ( ( DS * ( ( MLU * MUR ) / RMSe ) ) * MLU ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ACS * FirstVNF_CPU ) )", "choosing": "Min( ( CS - ( RRSe * RMSe ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU ,( ( Min( ACS ,( Min( FirstVNF_RAM ,ACS ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM + BR ) ) / DDR ) ) ) / Max( CRS,( DDR / RRS ) ) ) - FirstVNF_RAM_Server ) )", "choosing": "Max( MUR,( CS - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( Max( FirstVNF_RAM,CRS ) - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( Max( ( RRSe * MLU ),( MLU - CS ) ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - ( ( ( PN - Min( DDR ,BR ) ) / ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) / FirstVNF_RAM ) ) ,( ( ( PN + BR ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( MUR ,RMSe ) ) / Max( MUM,Max( RMSe,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR * DDR ) * ( PN + ( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( DS - Min( Max( MLU,MUM ) ,RMSe ) ) / ( MUR * RMSe ) ),RRSe ) + ( MUR + DS ) ) / ( ( DS - CS ) + ( RCSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * ( FirstVNF_RAM_Server + MRS ) ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( Max( RMSe,MUC ) - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,BR ) / ( ( ( Min( FirstVNF_RAM ,( FirstVNF_RAM_Server - Max( FirstVNF_CPU,( FirstVNF_CPU_Server / BR ) ) ) ) * ( ARS * MDR ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) )", "choosing": "( Max( Max( Min( ( Min( RMSe ,RCSe ) - MUM ) ,( MUM / Min( Max( ( CS / DS ),( MUM - CS ) ) ,DS ) ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) ),MUC ) - ( RMSe / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( Max( CRS,( ( DDR / ARS ) / ( ACS / CRS ) ) ) ,( CRS * MRS ) ) / ( ( BR + RRS ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( CS / RCSe ) / ( MLU - RMSe ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_RAM - ACS ) ,( FirstVNF_CPU_Server * ( Const / ( RRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( ( ( CS - Min( ( MUR - RCSe ) ,MLU ) ) * ( Min( CS ,Max( RCSe,Max( RCSe,RRSe ) ) ) / MUM ) ) + MLU ),( MUR - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( MLU / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( FirstVNF_RAM + PN ) - Max( ACS,PN ) ) ,Min( Min( MDR ,ARS ) ,( FirstVNF_Mem_Server + MDR ) ) ) + Min( ( Max( ACS,AMS ) / ( FirstVNF_RAM_Server - MDR ) ) ,Max( Min( MRS ,FirstVNF_RAM ),( PN * FirstVNF_Mem_Server ) ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - ( ( ( CS / RRSe ) - ( RCSe * RRSe ) ) - Max( Max( CS,RMSe ),Min( CS ,RCSe ) ) ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}], "5": [{"determining": "( Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + ( FirstVNF_Mem * RRS ) ) + AMS ) ,AMS ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( ( RRS * PN ) + ( BR - AMS ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( MLU / MUC ) - RCSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( RMSe * MLU ) + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Min( DDR ,( Const * ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( ( CS * Max( RRSe,Max( RMSe,Max( MUR,RMSe ) ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.04930966469428008, "obj2": 0.7912220264478038}, {"determining": "Min( FirstVNF_Mem ,( Min( Max( ( FirstVNF_CPU + DDR ),Max( DDR,AMS ) ) ,( FirstVNF_Mem - DDR ) ) - MDR ) )", "choosing": "Max( ( Min( ( RCSe * ( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * MLU ) ) ) ) ,( RMSe / ( Max( ( RMSe - RCSe ),( ( MUR * CS ) * RCSe ) ) - ( ( ( RRSe + CS ) - ( MUR / RRSe ) ) - DS ) ) ) ) * ( Min( RCSe ,DS ) - Min( CS ,MUM ) ) ),( RCSe - CS ) )", "obj1": 0.747534516765286, "obj2": 0.146162682012602}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.8461538461538461, "obj2": 0.05195580185050141}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) * ( Const - ( ( FirstVNF_RAM + MDR ) - ( ( FirstVNF_CPU * ARS ) + Const ) ) ) )", "choosing": "( DS * ( RRSe / ( MUR - ( RCSe / RRSe ) ) ) )", "obj1": 0.5404339250493096, "obj2": 0.30449436089025234}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) + Max( Min( FirstVNF_RAM ,MRS ),AMS ) ) - ( ( FirstVNF_RAM - DDR ) / ( AMS * MRS ) ) )", "choosing": "( ( ( ( RRSe + MUR ) - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) )", "obj1": 0.9388560157790927, "obj2": 0.04636346199995509}, {"determining": "Min( ( Const - ( ( FirstVNF_RAM + MDR ) - ( ( FirstVNF_CPU * ARS ) + Const ) ) ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( MLU ,DS )", "obj1": 0.7041420118343196, "obj2": 0.2052702499374447}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( RCSe / CS ) + Max( RRSe,MLU ) ) )", "obj1": 0.5088757396449705, "obj2": 0.3448098817112089}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( DDR,AMS ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) )", "obj1": 0.5779092702169625, "obj2": 0.2790797376453065}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,MDR ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Max( ( ( ( Max( Min( ( RCSe / MUC ) ,Max( MUR,MUC ) ),MUR ) * ( ( RRSe / MUR ) + MUR ) ) / RRSe ) - MUR ),( CS / RRSe ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.7593688362919132, "obj2": 0.08426575985854712}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( MRS * PN ) + ( BR - AMS ) ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( CS ,( ( ( MUM - MUC ) - CS ) * RMSe ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.28205128205128205, "obj2": 0.5334315623657782}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( Min( ( ( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) ) * MDR ) ,( ( FirstVNF_CPU - ( RRS + MDR ) ) / ACS ) ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( MDR * FirstVNF_Mem ) )", "choosing": "Min( Min( Min( RCSe ,( ( RCSe + MLU ) + MUR ) ) ,DS ) ,( ( ( RRSe + CS ) - MUR ) / ( ( MUR + MLU ) + Min( DS ,( MUM / MUC ) ) ) ) )", "obj1": 0.6646942800788954, "obj2": 0.22320644342137885}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.39250493096646943, "obj2": 0.43841163278208317}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),( Min( FirstVNF_RAM ,ACS ) * ( Max( Max( BR,RRS ),( FirstVNF_RAM + BR ) ) / DDR ) ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( CS,Min( CS ,MUM ) ) ) ) ) )", "obj1": 0.6272189349112426, "obj2": 0.23932365163587405}, {"determining": "Min( ( Max( CRS,( DDR / CRS ) ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( Min( ( ( MLU * RCSe ) - Min( RCSe ,MLU ) ) ,MUR ) - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.17751479289940827, "obj2": 0.6937830063569745}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( CS + ( RRSe / MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.7869822485207101, "obj2": 0.07323959383615779}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * ( ACS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2702169625246548, "obj2": 0.5674009985536722}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / AMS ),Const ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + Min( ( ( ( RCSe / MUC ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.08481262327416174, "obj2": 0.7638041508783543}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.46745562130177515, "obj2": 0.35407264723160636}, {"determining": "Min( ( FirstVNF_RAM - ( Const - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( ( Max( MUM,( RMSe - MUR ) ) / ( MUR / DS ) ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.9506903353057199, "obj2": 0.019579351610220844}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( ( ACS - ( ( PN / CRS ) * AMS ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( Min( Min( MUM ,DS ) ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( MUR * RRSe ) )", "obj1": 0.4260355029585799, "obj2": 0.417360957877266}, {"determining": "Min( ( FirstVNF_CPU_Server * MDR ) ,( ( FirstVNF_CPU - ( MRS * FirstVNF_Mem ) ) / ACS ) )", "choosing": "( ( ( MUR - MLU ) / ( ( MUM / MUC ) * ( MLU / MUM ) ) ) * Min( Min( RCSe ,( ( RCSe + MLU ) + MUR ) ) ,DS ) )", "obj1": 0.1952662721893491, "obj2": 0.6569502327548812}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( ( CRS + FirstVNF_Mem_Server ) + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( BR ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - Min( MLU ,( RMSe + RCSe ) ) ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( Min( RRSe ,MUM ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.4516765285996055, "obj2": 0.3663894785056666}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( Const - MDR ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / ( ( MUR + DS ) - ( CS / MLU ) ) ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.14003944773175542, "obj2": 0.7155279138055168}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( FirstVNF_Mem - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.055226824457593686, "obj2": 0.7902478964617089}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( Min( Min( Max( MUR,MUR ) ,MUR ) ,CS ) / RMSe ) ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21301775147928995, "obj2": 0.6345274088005832}, {"determining": "Min( ( Max( CRS,AMS ) * MDR ) ,( AMS + AMS ) )", "choosing": "( ( ( MUR - CS ) / RMSe ) * Min( Min( Max( ( MLU * MLU ),Min( RMSe ,MUM ) ) ,RMSe ) ,DS ) )", "obj1": 0.44970414201183434, "obj2": 0.39937243325369504}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ACS - ACS ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Max( MRS,MRS ) ,MRS ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( CS * ( RCSe * RMSe ) ),( MUR + Min( Min( MUC ,( MUR + ( MLU - RCSe ) ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.5096121512091596}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,Min( ( Const - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) * ACS ) / FirstVNF_RAM )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( ( DS / MUC ) - ( RRSe - MUR ) ) ) ,( DS - MUR ) ) ) + ( Max( RCSe,Min( RRSe ,Min( ( ( RMSe / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.6725354111217207}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / ( RMSe + MUM ) ) * Max( ( RRSe * MLU ),( MLU - CS ) ) ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( ( MUR + MLU ) + CS ) - ( CS / CS ) ) ) )", "obj1": 0.25443786982248523, "obj2": 0.5819470521598649}, {"determining": "Min( ( Const - ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) ) ,Const )", "choosing": "Min( Max( RMSe,MLU ) ,( ( RRSe * MUC ) / MUM ) )", "obj1": 0.6153846153846154, "obj2": 0.2724767754051394}, {"determining": "Min( Min( ARS ,DDR ) ,( AMS + ( ( ( FirstVNF_CPU_Server / MRS ) * ( FirstVNF_Mem_Server - Const ) ) * ( ( Const - FirstVNF_Mem ) / ( FirstVNF_Mem_Server - DDR ) ) ) ) )", "choosing": "( DS + Min( DS ,( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * MLU ) ) ) ) )", "obj1": 0.6923076923076923, "obj2": 0.21128946036003768}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( DDR,Const ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) + Min( ( ( ( RCSe / MUC ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11834319526627218, "obj2": 0.7309563125920686}, {"determining": "Min( FirstVNF_Mem ,( PN - ( DDR * Const ) ) )", "choosing": "Max( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.9763313609467456, "obj2": 0.009851243756536674}, {"determining": "( ( MRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( MRS ,Min( CRS ,Const ) ) )", "choosing": "( ( ( DS * ( ( DS * Max( RMSe,Min( ( MUM - MUM ) ,RRSe ) ) ) / RMSe ) ) * MLU ) / ( MUC + MLU ) )", "obj1": 0.6232741617357002, "obj2": 0.26548983370493706}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( ( CS - RMSe ) / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3136094674556213, "obj2": 0.5063172786707495}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( ARS,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( RRSe + RRSe ) - ( MUM - MUR ) ) + Max( ( MUM / MUC ),Max( MUR,MUR ) ) ) ,Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,( CS + MLU ) ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11045364891518737, "obj2": 0.7509295071963691}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ACS - ACS ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Max( MRS,MRS ) ,MRS ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( CS * ( RCSe * RMSe ) ),( MUR + Min( Min( MUC ,( MUR + ( MLU - RCSe ) ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3727810650887574, "obj2": 0.45163101831077124}, {"determining": "Min( ( Max( CRS,( DDR / CRS ) ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( Min( ( ( MLU * RCSe ) - Min( RCSe ,MLU ) ) ,MUR ) - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.4437869822485207, "obj2": 0.41408884084352426}, {"determining": "( Max( ( ( ( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ARS * MDR ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( ( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,Min( RMSe ,( ( Max( RCSe,MUC ) / RRSe ) - Max( RCSe,( MUC - RMSe ) ) ) ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,MUM ) ) ) ) )", "obj1": 0.23865877712031558, "obj2": 0.6204754832060124}, {"determining": "Min( ( FirstVNF_CPU_Server * MDR ) ,( Const + CRS ) )", "choosing": "( ( ( MUR - MLU ) / RMSe ) * Min( Min( RCSe ,( ( MUC + Max( ( DS * RCSe ),RRSe ) ) + MUR ) ) ,DS ) )", "obj1": 0.22879684418145957, "obj2": 0.6304729816807649}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( CRS + DDR ) - ( MRS + ( ( ( CRS + PN ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) ) ) )", "choosing": "Min( ( MLU - ( RMSe * ( Max( MUM,MUC ) - Min( RMSe ,Min( RMSe ,Max( MUR,RRSe ) ) ) ) ) ) ,( DS * MUR ) )", "obj1": 0.252465483234714, "obj2": 0.6040893637875386}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,Const ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( CS * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3431952662721893, "obj2": 0.4715714009764648}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Max( ( PN * ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( DS * Min( ( ( Min( MUC ,RMSe ) * MLU ) / MUM ) ,RCSe ) ) - ( MUC + DS ) )", "obj1": 0.2485207100591716, "obj2": 0.6099172346139596}, {"determining": "( ( Max( ( ARS - Max( MRS,ARS ) ),FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * MRS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM - MUR ) + Max( ( ( RRSe / MLU ) - MLU ),Min( MUR ,Max( Min( MUM ,RMSe ),RMSe ) ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1341222879684418, "obj2": 0.7213837360335853}, {"determining": "( Max( ( ( FirstVNF_CPU - CRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / CS ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.34911242603550297, "obj2": 0.4640766179162656}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( FirstVNF_Mem_Server ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( ( DS / MLU ) / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "Min( ( PN * Min( FirstVNF_RAM ,AMS ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( ( RCSe * ( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * MLU ) ) ) ) ,( MUR / MLU ) ) * ( RCSe - Min( CS ,( MLU - CS ) ) ) ),( RCSe - CS ) )", "obj1": 0.7672583826429981, "obj2": 0.08014470159838478}, {"determining": "Min( Min( FirstVNF_Mem ,( PN - ( DDR * Const ) ) ) ,BR )", "choosing": "Min( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) ,( CS / MLU ) )", "obj1": 0.9901380670611439, "obj2": 0.005576101063016016}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * RRS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,( MUR + DS ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3254437869822485, "obj2": 0.48449747913051067}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( ( ACS + ARS ) * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Max( Min( Min( RMSe ,DS ) ,RMSe ),RMSe ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( MUM - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.358974358974359, "obj2": 0.46245841476414423}, {"determining": "Min( ( ( BR / Const ) - MDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( CS,RRSe ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( MUC + CS ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( MUM - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.358974358974359, "obj2": 0.46245841476414423}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) + Min( ( ( ( RCSe / RCSe ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.13806706114398423, "obj2": 0.7209364757804647}, {"determining": "( Max( ( ( MRS + RRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,DS ) ,Min( ( RRSe * ( MUR * MUM ) ) ,( MUC / ( RRSe + MLU ) ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,( ( MUM - MUC ) / RRSe ) ) ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "Min( ( FirstVNF_RAM - ( ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) - ( Min( ( BR + FirstVNF_CPU ) ,Const ) * RRS ) ) ) ,( DDR / MDR ) )", "choosing": "Max( ( MUR / RMSe ),( MUC - Max( Max( ( DS - MUC ),( RMSe * RCSe ) ),MUC ) ) )", "obj1": 0.9921104536489151, "obj2": 0.0028658966413679697}, {"determining": "Min( ( DDR / RRS ) ,( ( RRS + DDR ) - MDR ) )", "choosing": "Max( ( Min( ( RCSe * RMSe ) ,Max( MUR,( CS - MLU ) ) ) * ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) ),( ( RRSe * MUR ) + RCSe ) )", "obj1": 0.7810650887573964, "obj2": 0.07487984286372079}, {"determining": "Min( ( ( FirstVNF_CPU + MRS ) - Min( FirstVNF_RAM ,DDR ) ) ,( ( BR + Min( MRS ,( AMS * FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "Max( ( ( ( MUM + ( RRSe * ( ( MLU * CS ) + MUC ) ) ) / DS ) * ( Min( RCSe ,DS ) - ( MUR + ( RCSe / RMSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.777120315581854, "obj2": 0.07665069678164213}, {"determining": "( ( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( MDR * FirstVNF_Mem ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( Max( ( FirstVNF_RAM * BR ),( ( ( DDR + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ( ACS - ( CRS * PN ) ) ) * ACS ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( MUC * RRSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( ( ( MUC / Min( ( CS - DS ) ,MUR ) ) + ( MUC / Max( MUM,DS ) ) ) + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0006065226848642546}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( PN ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,RCSe ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "Min( ( AMS * CRS ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7850098619329389, "obj2": 0.07443864374756802}, {"determining": "( ( ( ( BR * Max( Const,( ( ( FirstVNF_RAM - ARS ) - MRS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( Max( Max( BR,RRS ),( FirstVNF_RAM + BR ) ) / DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( ( RMSe - RCSe ),( ( MUR * CS ) * RCSe ) ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( CS - MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0017297732100570397}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07460736731477179}, {"determining": "( ( ( ( BR * Max( Const,Min( ( BR + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,AMS ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( ( MUC / MUC ) + ( Max( MLU,MUM ) * Min( MUR ,CS ) ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( Max( MUM,( CS / MLU ) ) ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0017297732100570397}, {"determining": "( ( ( ACS * ARS ) + DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( MUR,MUR ) - Min( MUR ,( ( Min( ( MLU - CS ) ,( MUR - CS ) ) * MLU ) + RCSe ) ) ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) - Max( ACS,( ( RRS * RRS ) + ( AMS / ARS ) ) ) )", "choosing": "Min( ( ( DS / ( ( MLU + ( ( ( RMSe - RRSe ) / ( MUC / CS ) ) / DS ) ) - ( MLU - RMSe ) ) ) * MUC ) ,( Min( ( ( RCSe - RCSe ) - ( Max( ( ( MLU + CS ) * ( CS * RMSe ) ),MUC ) - MUR ) ) ,( ( MUM / MLU ) / Max( RMSe,MUM ) ) ) + ( ( ( CS / RRSe ) - ( RCSe * RRSe ) ) - Min( CS ,( MLU * Min( ( MUR + CS ) ,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - Min( MRS ,Min( FirstVNF_RAM ,( CRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU / RRSe ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS / RRS ) + Const ) ,( ARS - FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe + ( MUC * RRSe ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( BR,FirstVNF_Mem ) ,Max( MDR,Min( RRS ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Min( ( ( RCSe / ( RCSe - RMSe ) ) - ( MUM * MUR ) ) ,( MUR * ( MUC * ( MUM * ( Max( RMSe,RCSe ) / Max( RMSe,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) - Const ) * ( Const / PN ) )", "choosing": "( ( Max( Min( ( RMSe / RMSe ) ,CS ),( MUC - MLU ) ) / ( DS * MUM ) ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ( ARS * ( ARS * ARS ) ) / MDR ) )", "choosing": "Min( ( CS - Max( ( MLU / ( Min( RRSe ,DS ) * MUC ) ),MUR ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * Max( Const,Min( ( BR + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( Max( MUC,RMSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM ) * FirstVNF_Mem_Server ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / Min( CS ,( MUR - Max( CS,RMSe ) ) ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( ARS,FirstVNF_Mem ) - ( ARS / Const ) ) * Max( Min( Const ,FirstVNF_RAM ),( DDR * FirstVNF_CPU_Server ) ) ) ,( ( ( AMS + FirstVNF_CPU_Server ) * ( CRS / FirstVNF_RAM_Server ) ) - ( ( AMS / ACS ) - ( DDR - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( DS - Min( Max( MLU,( Max( RCSe,MLU ) + CS ) ) ,RMSe ) ) / ( MUR * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( PN ,AMS ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( MUC * RRSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( CS * MLU ) + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - Min( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ,FirstVNF_Mem ) ) ) / ( MDR * FirstVNF_Mem ) )", "choosing": "Min( ( ( DS * Min( Min( DS ,DS ) ,RMSe ) ) * MUR ) ,( ( ( RRSe + CS ) - MUR ) / ( ( MUR + MLU ) + Min( DS ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server * CRS ) ,( DDR - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - Max( RRSe,MUC ) ) + ( ( Max( DS,RCSe ) - MLU ) - Max( MUM,( RCSe / RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) )", "choosing": "( ( MUM / MUC ) * ( Min( CS ,Max( RCSe,CS ) ) / MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / ( MRS * MDR ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,( ( ( DS * ( ( MLU * MUR ) / RMSe ) ) * MLU ) * RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( MRS ,MDR ) * ( BR / ( ( CRS - BR ) - CRS ) ) )", "choosing": "( ( ( MUR * ( DS + DS ) ) * ( CS / ( MUM - RRSe ) ) ) + ( MUR * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ACS * MDR ) - ( DDR - FirstVNF_Mem ) ) ,Max( DDR,( MDR + Max( ARS,FirstVNF_CPU ) ) ) ) - ( ( Min( CRS ,ACS ) / Max( Const,BR ) ) * ( ( ARS + FirstVNF_Mem ) - Min( CRS ,DDR ) ) ) )", "choosing": "Min( ( Max( Max( ( MUR * ( ( ( RMSe / CS ) / ( DS + MUC ) ) + ( MUM * CS ) ) ),MLU ),( Max( RCSe,MUM ) + ( MUR + MUC ) ) ) / ( MUR + ( MLU + CS ) ) ) ,( MUC * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * Max( ( CRS / ACS ),( FirstVNF_RAM_Server * AMS ) ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) )", "choosing": "Max( Min( ( ( MLU / MUM ) * MUC ) ,( MUM / RCSe ) ),( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR - ( ARS + ACS ) ) * MRS ) / ( ( FirstVNF_RAM_Server - BR ) / ( DDR * Const ) ) ) / ( ( Max( BR,FirstVNF_Mem_Server ) / ( FirstVNF_RAM / CRS ) ) / Max( ( FirstVNF_CPU_Server / AMS ),( PN * MRS ) ) ) )", "choosing": "( Max( MUR,( Max( RRSe,RCSe ) - MUM ) ) - Min( ( ( ( MUR + DS ) / Max( RCSe,MUM ) ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( BR + FirstVNF_CPU_Server ) + FirstVNF_RAM_Server ) - ARS ) / ( RRS * FirstVNF_RAM_Server ) ) * Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) + Max( ( MUR - ( RCSe * CS ) ),CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_RAM + MDR ) - ( ( ( FirstVNF_RAM_Server - ARS ) / ( RRS * FirstVNF_RAM_Server ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + Max( FirstVNF_CPU,FirstVNF_CPU ) ) ) ) + ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) + ( Min( ( Const - FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + DDR ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( RRSe * MUC ) / MUM ) * ( DS - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ACS ,( Min( Min( Min( ( FirstVNF_RAM_Server / Const ) ,RRS ) ,ACS ) ,AMS ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RRSe ) + ( Max( ( DS + RRSe ),( MLU * RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( RRS * PN ) + ( BR - AMS ) ) * ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) / ( Const / AMS ) ) )", "choosing": "( ( Max( MUC,MUR ) / RRSe ) / ( DS - Min( CS ,( ( ( RRSe * RMSe ) * ( RCSe / MUC ) ) + ( Min( MUR ,MUR ) / ( RRSe * MLU ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( AMS,BR ) + ( CRS / FirstVNF_Mem_Server ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( DDR,FirstVNF_Mem ) ) ,( ( FirstVNF_Mem_Server * ARS ) * ( MRS - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,DS ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * ( ( RMSe + RRSe ) - Min( MUR ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "6": [{"determining": "Min( ACS ,( Min( Min( Min( ( FirstVNF_RAM_Server / Const ) ,RRS ) ,ACS ) ,( AMS * MRS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RRSe ) + ( Max( ( DS + MUR ),( MLU * RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + ( FirstVNF_Mem * RRS ) ) + AMS ) ,AMS ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( ( RRS * PN ) + ( BR - AMS ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( MLU / MUC ) - RCSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( RMSe * MLU ) + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Max( ( ( Max( PN,FirstVNF_RAM_Server ) * ( Max( BR,ACS ) - ( ( FirstVNF_Mem - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ),( ( CS * RMSe ) - MUR ) ) ,Max( ( Max( RMSe,MLU ) * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.045364891518737675, "obj2": 0.7963361141376045}, {"determining": "( ( ( Const / ARS ) - MDR ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( RCSe * ( RRSe * ( RRSe + CS ) ) ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5305719921104537, "obj2": 0.2709994595767778}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.8461538461538461, "obj2": 0.05195580185050141}, {"determining": "( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( Min( ( ( ( FirstVNF_RAM - ACS ) - ( MRS * FirstVNF_Mem ) ) * MDR ) ,( ( FirstVNF_CPU - ( RRS + MDR ) ) / ACS ) ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( MDR * FirstVNF_Mem ) )", "choosing": "Min( Min( Min( RCSe ,( ( RCSe + MLU ) + MUR ) ) ,DS ) ,( ( ( RRSe + CS ) - MUR ) / ( ( MUR + MLU ) + Min( DS ,( MUM / MUC ) ) ) ) )", "obj1": 0.6646942800788954, "obj2": 0.22320644342137885}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,MDR ),FirstVNF_Mem_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Max( ( ( ( Max( Min( ( RCSe / MUC ) ,Max( MUR,MUC ) ),MUR ) * ( ( ( RCSe / CS ) + Max( RRSe,MLU ) ) + MUR ) ) / RRSe ) - MUR ),( CS / RRSe ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.6923076923076923, "obj2": 0.1371946136786576}, {"determining": "( ( MRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) - Min( MRS ,Min( CRS ,Const ) ) )", "choosing": "( ( ( DS * ( ( DS * Max( RMSe,Min( ( MUM - MUM ) ,RRSe ) ) ) / RMSe ) ) * MLU ) / ( MUC + MLU ) )", "obj1": 0.6232741617357002, "obj2": 0.26548983370493706}, {"determining": "( ( ( FirstVNF_CPU_Server + ACS ) + Max( Min( FirstVNF_RAM ,MRS ),AMS ) ) - ( ( FirstVNF_RAM - DDR ) / ( AMS * MRS ) ) )", "choosing": "( ( ( ( RRSe + MUR ) - MUR ) + ( DS - MUR ) ) / ( Max( CS,CS ) + Min( RMSe ,RRSe ) ) )", "obj1": 0.9388560157790927, "obj2": 0.04636346199995509}, {"determining": "( ( ACS / FirstVNF_Mem_Server ) * ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + Min( ( ACS - ( ( PN / CRS ) * AMS ) ) ,FirstVNF_CPU_Server ) ) )", "choosing": "Min( Min( Max( Min( Min( MUM ,DS ) ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) ,( MUR * RRSe ) )", "obj1": 0.4260355029585799, "obj2": 0.417360957877266}, {"determining": "Min( Max( DDR,FirstVNF_Mem ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + ( Max( ( RRS * FirstVNF_RAM ),BR ) - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUR * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUR ) ) ) ) ) ) ) )", "obj1": 0.5128205128205128, "obj2": 0.3250291463175296}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.727810650887574, "obj2": 0.09225658587913549}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( ( CRS + PN ) / FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,Const ) ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,RRSe ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3905325443786982, "obj2": 0.4235515405954387}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),( Min( FirstVNF_RAM ,ACS ) * ( Max( Max( BR,RRS ),( ( ( RRS / ACS ) + FirstVNF_RAM_Server ) + BR ) ) / DDR ) ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( ( RRSe - Min( ( MUR + MUC ) ,( RCSe * Min( DS ,MUR ) ) ) ) - ( MUC / Min( RRSe ,Max( CS,Min( CS ,MUM ) ) ) ) ) )", "obj1": 0.6272189349112426, "obj2": 0.2317484718114204}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,MDR ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Max( ( ( ( Max( Min( ( RCSe / MUC ) ,Max( MUR,MUC ) ),MUR ) * ( ( RRSe / MUR ) + MUR ) ) / RRSe ) - MUR ),( CS / RRSe ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.7021696252465484, "obj2": 0.11910725723867029}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,RRS ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( DS ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.4378698224852071, "obj2": 0.36768645190351146}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7889546351084813, "obj2": 0.07233595685286927}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.46745562130177515, "obj2": 0.35407264723160636}, {"determining": "Min( ( FirstVNF_RAM - ( Const - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( ( Max( MUM,( RMSe - MUR ) ) / ( MUR / DS ) ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.9506903353057199, "obj2": 0.019579351610220844}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - ( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( RCSe / CS ) + Max( RRSe,MLU ) ) )", "obj1": 0.5088757396449705, "obj2": 0.3448098817112089}, {"determining": "Min( ( Max( CRS,( DDR / FirstVNF_CPU ) ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( Min( ( ( MLU * RCSe ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ,MUR ) - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.1873767258382643, "obj2": 0.6480169502861289}, {"determining": "Min( ( Max( CRS,( DDR / CRS ) ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( Min( ( ( MLU * RCSe ) - Min( RCSe ,MLU ) ) ,MUR ) - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.17751479289940827, "obj2": 0.6937830063569745}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,Min( ( Const - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) * ACS ) / FirstVNF_RAM )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( ( DS / MUC ) - ( RRSe - MUR ) ) ) ,( DS - MUR ) ) ) + ( Max( RCSe,Min( RRSe ,Min( ( ( RMSe / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) )", "obj1": 0.1794871794871795, "obj2": 0.6725354111217207}, {"determining": "( AMS + ( Max( ARS,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( Min( ( ( ( RRSe + RRSe ) - ( MUM - MUR ) ) + Max( ( MUM / MUC ),Max( MUR,MUR ) ) ) ,Max( Max( Min( CS ,DS ),( CS * RCSe ) ),Min( ( MUR / DS ) ,MLU ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.16370808678500987, "obj2": 0.7145816376152394}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( Min( Min( Max( MUR,MUR ) ,MUR ) ,CS ) / RMSe ) ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21301775147928995, "obj2": 0.6345274088005832}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem / FirstVNF_CPU ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / ( RMSe + MUM ) ) * Max( ( RRSe * MLU ),( MLU - CS ) ) ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( ( MUR + MLU ) + CS ) - ( CS / CS ) ) ) )", "obj1": 0.25443786982248523, "obj2": 0.5819470521598649}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ACS - ACS ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Max( MRS,MRS ) ,MRS ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( CS * ( RCSe * RMSe ) ),( MUR + Min( Min( MUC ,( MUR + ( MLU - RCSe ) ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3727810650887574, "obj2": 0.45163101831077124}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * ( ACS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2702169625246548, "obj2": 0.5674009985536722}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( ( CS - RMSe ) / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3136094674556213, "obj2": 0.5063172786707495}, {"determining": "Min( ( RRS / ( FirstVNF_Mem_Server / DDR ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - ( ( MUR / RCSe ) + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.7593688362919132, "obj2": 0.08304190293168877}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_RAM + MDR ),ACS ) - ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( ( CS - RMSe ) / MLU ) * MUR ) ,Min( Max( RMSe,MLU ) ,( ( RRSe * MUC ) / MUM ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.29191321499013806, "obj2": 0.5234643557222252}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( ( CRS + FirstVNF_Mem_Server ) + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( BR ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - Min( MLU ,( RMSe + RCSe ) ) ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( Min( RRSe ,MUM ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.4516765285996055, "obj2": 0.3663894785056666}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / AMS ),Const ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + Min( ( ( ( RCSe / MUC ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.08481262327416174, "obj2": 0.7638041508783543}, {"determining": "Min( FirstVNF_Mem ,( PN - ( DDR * Const ) ) )", "choosing": "Max( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.9763313609467456, "obj2": 0.009851243756536674}, {"determining": "Min( ( FirstVNF_CPU_Server * MDR ) ,( Const + CRS ) )", "choosing": "( ( ( MUR - MLU ) / RMSe ) * Min( Min( RCSe ,( ( MUC + Max( ( DS * RCSe ),RRSe ) ) + MUR ) ) ,DS ) )", "obj1": 0.22879684418145957, "obj2": 0.6304729816807649}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ACS - ACS ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Max( MRS,MRS ) ,MRS ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( CS * ( RCSe * RMSe ) ),( MUR + Min( Min( MUC ,( MUR + ( MLU - RCSe ) ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.5096121512091596}, {"determining": "( Max( ( AMS * CRS ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Min( ( ( Max( CS,RCSe ) / MLU ) * MUR ) ,CS ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.27613412228796846, "obj2": 0.553451701470791}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Min( DDR ,( Const * ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( ( CS * Max( RRSe,Max( RMSe,Max( MUR,RMSe ) ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.0650887573964497, "obj2": 0.7800929096886303}, {"determining": "( ( CRS + DDR ) - ( MRS + ( ( ( CRS + PN ) / FirstVNF_CPU ) - ( FirstVNF_Mem_Server / DDR ) ) ) )", "choosing": "Min( ( MLU - ( RMSe * ( Max( MUM,MUC ) - Min( RMSe ,Min( RMSe ,Max( MUR,RRSe ) ) ) ) ) ) ,( DS * MUR ) )", "obj1": 0.252465483234714, "obj2": 0.6040893637875386}, {"determining": "Min( Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem + PN ) ) ,( RRS / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( Min( RCSe ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.06903353057199212, "obj2": 0.7686866880632314}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / AMS ),Const ) / FirstVNF_CPU ) ) ) / ( ( RRS * PN ) + ( BR - AMS ) ) ) ) )", "choosing": "( ( RRSe + MUR ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.10059171597633136, "obj2": 0.7458703936756774}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( ACS + ( Max( ( Const / FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server / BR ) / FirstVNF_RAM ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS * MUR ) / Max( ( RCSe / RRSe ),( MUR / DS ) ) )", "obj1": 0.11439842209072978, "obj2": 0.7376615126740612}, {"determining": "( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) * ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,( MUR + DS ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) ) / ( Min( Min( MUM ,MUM ) ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.33925049309664695, "obj2": 0.4687757189577971}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( Const - MDR ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / ( ( MUR + DS ) - ( CS / MLU ) ) ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.14003944773175542, "obj2": 0.7155279138055168}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( MRS * PN ) + ( BR - AMS ) ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( CS ,( ( ( MUM - MUC ) - CS ) * RMSe ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.28205128205128205, "obj2": 0.5334315623657782}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( DDR,Const ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) + Min( ( ( ( RCSe / MUC ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11834319526627218, "obj2": 0.7309563125920686}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( Max( MDR,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( MUC * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5411335357158302}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( FirstVNF_Mem - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.055226824457593686, "obj2": 0.7902478964617089}, {"determining": "( Max( ( ( ( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ARS * MDR ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( ( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,Min( RMSe ,( ( Max( RCSe,MUC ) / RRSe ) - Max( RCSe,( MUC - RMSe ) ) ) ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,MUM ) ) ) ) )", "obj1": 0.23865877712031558, "obj2": 0.6204754832060124}, {"determining": "( Max( ( ( FirstVNF_CPU - CRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / CS ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.34911242603550297, "obj2": 0.4640766179162656}, {"determining": "Min( Min( FirstVNF_CPU ,( ( Const - FirstVNF_Mem_Server ) + PN ) ) ,( Const - MDR ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / ( ( RMSe + DS ) - ( CS / MLU ) ) ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.1282051282051282, "obj2": 0.7232347676507679}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Max( ( PN * ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( DS * Min( ( ( Min( MUC ,RMSe ) * MLU ) / MUM ) ,RCSe ) ) - ( MUC + DS ) )", "obj1": 0.2485207100591716, "obj2": 0.6099172346139596}, {"determining": "( Max( ( ( MRS + RRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,DS ) ,Min( ( RRSe * ( MUR * MUM ) ) ,( MUC / ( RRSe + MLU ) ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,( ( MUM - MUC ) / RRSe ) ) ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( DDR / MDR ) - ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),CS ) / MLU ) ) ,CS ) ,( ( CS - RRSe ) - ( ( ( ( RRSe * MUC ) / MUM ) / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 0.2406311637080868, "obj2": 0.6164607859084813}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "Min( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,( PN - ( DDR * Const ) ) )", "choosing": "Max( ( ( RRSe * MUC ) / MUM ),( RCSe - CS ) )", "obj1": 0.980276134122288, "obj2": 0.007843106522349938}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * RRS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,( MUR + DS ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3254437869822485, "obj2": 0.48449747913051067}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Min( DDR ,( Const * ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( ( CS * Max( RRSe,Max( RMSe,Max( MUR,RMSe ) ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.04930966469428008, "obj2": 0.7912220264478038}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( ( ACS + ARS ) * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Max( Min( Min( RMSe ,DS ) ,RMSe ),RMSe ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( MUM - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.358974358974359, "obj2": 0.46245841476414423}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( Const * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( MUC + CS ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( MUM - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.358974358974359, "obj2": 0.46245841476414423}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( FirstVNF_CPU_Server / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) + Min( ( ( ( RCSe / RCSe ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.13806706114398423, "obj2": 0.7209364757804647}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "( ( Max( ( ARS - Max( MRS,ARS ) ),FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * MRS ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( MUM - MUR ) + Max( ( ( RRSe / MLU ) - MLU ),Min( MUR ,Max( Min( MUM ,RMSe ),RMSe ) ) ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.1341222879684418, "obj2": 0.7213837360335853}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( FirstVNF_Mem_Server ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( ( DS / MLU ) / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "Min( ( PN * Min( FirstVNF_RAM ,AMS ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( ( RCSe * ( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * MLU ) ) ) ) ,( MUR / MLU ) ) * ( RCSe - Min( CS ,( MLU - CS ) ) ) ),( RCSe - CS ) )", "obj1": 0.7672583826429981, "obj2": 0.08014470159838478}, {"determining": "Min( ( DDR / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( ( RCSe * RMSe ) ,Max( MUR,( ( DS - DS ) - MLU ) ) ) * ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.7712031558185405, "obj2": 0.07770716246757647}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),PN ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Max( ( ( RCSe / MUC ) - MUR ),( CS / RRSe ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.7652859960552268, "obj2": 0.08298997334303175}, {"determining": "Min( ( ( FirstVNF_CPU + MRS ) - Min( FirstVNF_RAM ,DDR ) ) ,( ( BR + Min( MRS ,( AMS * FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "Max( ( ( ( MUM + ( RRSe * ( ( MLU * CS ) + MUC ) ) ) / DS ) * ( Min( RCSe ,DS ) - ( MUR + ( RCSe / RMSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.9881656804733728, "obj2": 0.003814544938407839}, {"determining": "Min( ( ( FirstVNF_CPU + MRS ) - Min( FirstVNF_RAM ,DDR ) ) ,( ( BR + Min( MRS ,( AMS * FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "Max( ( ( ( MUM + ( RRSe * ( ( MLU * CS ) + MUC ) ) ) / DS ) * ( Min( RCSe ,DS ) - ( MUR + ( RCSe / RMSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.9881656804733728, "obj2": 0.003814544938407839}, {"determining": "Min( ( FirstVNF_RAM - ( ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) - ( Min( ( BR + FirstVNF_CPU ) ,Const ) * RRS ) ) ) ,( DDR / MDR ) )", "choosing": "Max( ( MUR / RMSe ),( MUC - Max( Max( ( DS - MUC ),( RMSe * RCSe ) ),MUC ) ) )", "obj1": 0.9921104536489151, "obj2": 0.0028658966413679697}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,DDR ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( MLU,DS ) ,( ( MUC + CS ) - ( CS / CS ) ) ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.777120315581854, "obj2": 0.07621072596384296}, {"determining": "Min( ( DDR / RRS ) ,( ( RRS + DDR ) - MDR ) )", "choosing": "Max( ( Min( ( RCSe * RMSe ) ,Max( MUR,( CS - MLU ) ) ) * ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) ),( ( RRSe * MUR ) + RCSe ) )", "obj1": 0.7810650887573964, "obj2": 0.07487984286372079}, {"determining": "Min( ( ( BR / Const ) - MDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( CS,RRSe ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( PN ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,RCSe ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "Min( ( AMS * CRS ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7850098619329389, "obj2": 0.07443864374756802}, {"determining": "( ( ( ( BR * Max( Const,( ( ( FirstVNF_RAM - ARS ) - MRS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( Max( Max( BR,RRS ),( FirstVNF_RAM + BR ) ) / DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( ( RMSe - RCSe ),( ( MUR * CS ) * RCSe ) ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( CS - MLU ),Min( CS ,CS ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0017297732100570397}, {"determining": "( ( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( MDR * FirstVNF_Mem ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( Max( ( FirstVNF_RAM * BR ),( ( ( DDR + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ( ACS - ( CRS * PN ) ) ) * ACS ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( MUC * RRSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( ( ( MUC / Min( ( CS - DS ) ,MUR ) ) + ( MUC / Max( MUM,DS ) ) ) + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0006065226848642546}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.7830374753451677, "obj2": 0.07460736731477179}, {"determining": "Min( ( ACS - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RMSe ,MUM ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7869822485207101, "obj2": 0.07323959383615779}, {"determining": "( ( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( MDR * FirstVNF_Mem ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( BR / AMS ),( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + CRS ) - FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( MUC * RRSe ) + MUR ) ) ,( ( Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( RCSe / CS ) + Max( RRSe,MLU ) ) ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0006065226848642546}, {"determining": "( ( ( ( BR * Max( Const,( ( ( FirstVNF_RAM - ARS ) - MRS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( Max( Max( BR,RRS ),( FirstVNF_RAM + BR ) ) / DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( ( RMSe - RCSe ),( ( MUR * CS ) * RCSe ) ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( CS - MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0017297732100570397}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( CS + ( RRSe / MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.7869822485207101, "obj2": 0.07323959383615779}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * ARS ) + DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( MUR,MUR ) - Min( MUR ,( ( Min( ( MLU - CS ) ,( MUR - CS ) ) * MLU ) + RCSe ) ) ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) - Max( ACS,( ( RRS * RRS ) + ( AMS / ARS ) ) ) )", "choosing": "Min( ( ( DS / ( ( MLU + ( ( ( RMSe - RRSe ) / ( MUC / CS ) ) / DS ) ) - ( MLU - RMSe ) ) ) * MUC ) ,( Min( ( ( RCSe - RCSe ) - ( Max( ( ( MLU + CS ) * ( CS * RMSe ) ),MUC ) - MUR ) ) ,( ( MUM / MLU ) / Max( RMSe,MUM ) ) ) + ( ( ( CS / RRSe ) - ( RCSe * RRSe ) ) - Min( CS ,( MLU * Min( ( MUR + CS ) ,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - Min( MRS ,Min( FirstVNF_RAM ,( CRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU / RRSe ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS / RRS ) + Const ) ,( ARS - FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe + ( MUC * RRSe ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( BR,FirstVNF_Mem ) ,Max( MDR,Min( RRS ,FirstVNF_CPU ) ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / Min( ( ( RCSe / ( RCSe - RMSe ) ) - ( MUM * MUR ) ) ,( MUR * ( MUC * ( MUM * ( Max( RMSe,RCSe ) / Max( RMSe,RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM_Server / DDR ) - Const ) * ( Const / PN ) )", "choosing": "( ( Max( Min( ( RMSe / RMSe ) ,CS ),( MUC - MLU ) ) / ( DS * MUM ) ) / ( MUR / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) / ( ( ARS * ( ARS * ARS ) ) / MDR ) )", "choosing": "Min( ( CS - Max( ( MLU / ( Min( RRSe ,DS ) * MUC ) ),MUR ) ) ,Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server - ACS ) - ( AMS + AMS ) )", "choosing": "Max( ( MLU * MLU ),Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + DDR ) - ( MRS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( RMSe - MLU ) ,( MUR * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( BR * Max( Const,Min( ( BR + Min( FirstVNF_Mem ,FirstVNF_CPU ) ) ,FirstVNF_Mem ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( CS,RMSe ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_CPU,CRS ) ,( BR / RRS ) )", "choosing": "( ( MUM - DS ) / ( Max( MUC,RMSe ) * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Const - MDR ) - ( FirstVNF_RAM_Server - MDR ) )", "choosing": "( Min( Min( MUR ,RRSe ) ,Max( RCSe,MUR ) ) - ( ( MUR + DS ) - ( CS / MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( MDR,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( FirstVNF_Mem_Server - MRS ) )", "choosing": "Max( Min( ( MUC + RCSe ) ,( MUM + MLU ) ),( ( MUC * DS ) + Max( RRSe,MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - FirstVNF_RAM ) * FirstVNF_Mem_Server ) / Min( ( ( Const / Const ) + ( AMS + ARS ) ) ,Max( ( PN * Const ),( BR / MDR ) ) ) )", "choosing": "( ( ( ( MLU - DS ) / Min( CS ,( MUR - Max( CS,RMSe ) ) ) ) + Max( Min( MLU ,CS ),( RCSe * RRSe ) ) ) - ( ( ( RMSe - MUC ) * ( MUC + DS ) ) - Max( ( DS - RCSe ),( CS - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "7": [{"determining": "Min( ACS ,( Min( Min( Min( ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ,RRS ) ,ACS ) ,( AMS * MRS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RRSe ) + ( Max( ( MUR + MUR ),( MLU * RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ACS ,( Min( Min( Min( ( FirstVNF_RAM_Server / Const ) ,RRS ) ,ACS ) ,( AMS * MRS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RRSe ) + ( Max( ( DS + MUR ),( MLU * RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Max( ( ( Max( PN,FirstVNF_RAM_Server ) * ( Max( BR,ACS ) - ( ( FirstVNF_Mem - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ),( ( CS * RMSe ) - MUR ) ) ,Max( ( Max( RMSe,MLU ) * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.045364891518737675, "obj2": 0.7963361141376045}, {"determining": "( ( ( Const / ARS ) - MDR ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( RCSe * ( RRSe * ( RRSe + CS ) ) ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5305719921104537, "obj2": 0.2709994595767778}, {"determining": "( ( PN - MDR ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( Max( FirstVNF_RAM_Server,ACS ) - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + ( Max( ( AMS * CRS ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( RCSe * ( ( MUC + CS ) - ( CS / CS ) ) ) ,CS ) ) ) / ( ( MUR * RMSe ) / ( Max( MUC,MUR ) + MUR ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.6134122287968442, "obj2": 0.20632634931908034}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( PN - MDR ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),( MLU + RMSe ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / ( RRSe / MUC ) ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.6725838264299803, "obj2": 0.1328647215240094}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),( Min( FirstVNF_RAM ,ACS ) * ( Max( Max( BR,RRS ),( ( ( RRS / ACS ) + Max( DDR,Const ) ) + BR ) ) / DDR ) ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( ( DS - ( MUR + MLU ) ) - ( MUC / Min( RRSe ,Max( CS,Min( CS ,MUM ) ) ) ) ) )", "obj1": 0.6055226824457594, "obj2": 0.24516929595727363}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Max( ( ( Max( PN,FirstVNF_RAM_Server ) * ( Max( BR,ACS ) - ( ( FirstVNF_Mem - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ),( ( CS * RMSe ) - MUR ) ) ,Max( ( Max( RMSe,MLU ) * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.14003944773175542, "obj2": 0.6568923926294217}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( ( CRS + FirstVNF_Mem_Server ) + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( BR ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - Min( MLU ,( RMSe + RCSe ) ) ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( Min( RRSe ,MUM ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.49506903353057197, "obj2": 0.3240930913480333}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_CPU_Server * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.398422090729783, "obj2": 0.4139184824259403}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,RRS ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( DS ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.4378698224852071, "obj2": 0.36768645190351146}, {"determining": "Min( Min( ( RRS * FirstVNF_RAM ) ,( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),Max( PN,Min( ( Const - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) + PN ) ) ,( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,Max( ( ( MUR + ( ( DS / Max( RRSe,DS ) ) - ( RRSe - MUR ) ) ) * CS ),( ( MUC * MUC ) / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.1282051282051282, "obj2": 0.720435675124768}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,MDR ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Max( ( ( ( Max( Min( ( RCSe / MUC ) ,Max( MUR,MUC ) ),MUR ) * ( ( RRSe / MUR ) + MUR ) ) / RRSe ) - MUR ),( CS / RRSe ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.7021696252465484, "obj2": 0.11910725723867029}, {"determining": "Min( ( Max( CRS,( DDR / FirstVNF_CPU ) ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( Min( ( ( MLU * RCSe ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ,MUR ) - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.1873767258382643, "obj2": 0.6480169502861289}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( PN - MDR ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + ( Max( ( RRS * FirstVNF_RAM ),BR ) - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),CS ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUR ) ) ) ) ) ) ) )", "obj1": 0.8165680473372781, "obj2": 0.0584400889548642}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( Min( Max( MRS,BR ) ,BR ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( MUR,MUC ) ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ),( RCSe - ( Min( ( Max( ( ( MUC * RRSe ) - MUM ),( ( MLU * RMSe ) + Max( MUR,RRSe ) ) ) / Min( ( MUR + ( RRSe + DS ) ) ,Max( MUC,MUM ) ) ) ,CS ) + ( Max( RRSe,( ( MLU * DS ) * ( DS * RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.8757396449704142, "obj2": 0.041460138178442546}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 0.252465483234714, "obj2": 0.5779411689087741}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),( FirstVNF_Mem_Server / DDR ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( MLU + RMSe ) ),( RCSe - CS ) )", "obj1": 0.9053254437869822, "obj2": 0.03617082564359724}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( ( CRS + PN ) / FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,Const ) ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,RRSe ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3905325443786982, "obj2": 0.4235515405954387}, {"determining": "Min( ( FirstVNF_RAM - ( Const - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( ( Max( MUM,( RMSe - MUR ) ) / ( MUR / DS ) ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.9506903353057199, "obj2": 0.019579351610220844}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( ( ( RRS + DDR ) - MDR ) / FirstVNF_CPU ) ) ) / ( ( RRS * PN ) + ( BR - AMS ) ) ) ) )", "choosing": "( ( RRSe + MUR ) / ( Min( ( ( RRSe * MUR ) * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.9408284023668639, "obj2": 0.03517614213017488}, {"determining": "( ( Max( ( AMS / DDR ),Max( PN,FirstVNF_Mem ) ) * ( ( AMS - MRS ) * ( Const + BR ) ) ) / ( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( Min( ( MUR / RMSe ) ,( MLU - RCSe ) ) - Min( ( MUR + ( Min( Min( Max( MUR,MUR ) ,MUR ) ,CS ) / RMSe ) ) ,( DS - MUR ) ) ) + Max( ( ( RCSe - RMSe ) + ( MUM - RRSe ) ),( ( MUC * DS ) / ( MLU + DS ) ) ) )", "obj1": 0.21301775147928995, "obj2": 0.6345274088005832}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ACS - ACS ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Max( MRS,MRS ) ,MRS ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( CS * ( RCSe * RMSe ) ),( MUR + Min( Min( MUC ,( MUR + ( MLU - RCSe ) ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3727810650887574, "obj2": 0.45163101831077124}, {"determining": "( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) / Max( ( PN * ( PN * FirstVNF_RAM_Server ) ),( FirstVNF_CPU_Server + PN ) ) )", "choosing": "( ( DS * Min( ( ( Min( MUC ,RMSe ) * MLU ) / MUM ) ,RCSe ) ) - ( MUC + DS ) )", "obj1": 0.2485207100591716, "obj2": 0.6099172346139596}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,Min( Const ,Max( FirstVNF_CPU_Server,ARS ) ) ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) / ( Min( ( ( DS * MUR ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) ) ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.7258382642998028, "obj2": 0.0927471985895652}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ACS - ACS ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Max( MRS,MRS ) ,MRS ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( CS * ( RCSe * RMSe ) ),( MUR + Min( Min( MUC ,( MUR + ( MLU - RCSe ) ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.5096121512091596}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / FirstVNF_CPU_Server ),Min( Min( FirstVNF_Mem_Server ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUM / MUM ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3116370808678501, "obj2": 0.49200199111836096}, {"determining": "Min( Max( DDR,FirstVNF_Mem ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + ( Max( ( RRS * FirstVNF_RAM ),BR ) - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUR * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUR ) ) ) ) ) ) ) )", "obj1": 0.4891518737672584, "obj2": 0.33770087050695574}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7889546351084813, "obj2": 0.07233595685286927}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_RAM + MDR ),ACS ) - ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( ( CS - RMSe ) / MLU ) * MUR ) ,Min( Max( RMSe,MLU ) ,( ( RRSe * MUC ) / MUM ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.29191321499013806, "obj2": 0.5234643557222252}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / AMS ),Const ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + Min( ( ( ( RCSe / MUC ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.08481262327416174, "obj2": 0.7638041508783543}, {"determining": "Min( Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem + PN ) ) ,( RRS / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( Min( RCSe ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.06903353057199212, "obj2": 0.7686866880632314}, {"determining": "Min( FirstVNF_Mem ,( PN - ( DDR * Const ) ) )", "choosing": "Max( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.9763313609467456, "obj2": 0.009851243756536674}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) ),Max( Const,( ( ( FirstVNF_RAM - ARS ) - MRS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) / ( Min( RCSe ,( ( MUR * CS ) * RCSe ) ) - ( MUR + RCSe ) ) )", "obj1": 0.7514792899408284, "obj2": 0.08346684604767586}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( MLU * RCSe ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ,MUR ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.8481262327416174, "obj2": 0.051426995236121854}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + Min( ( RRS / ( FirstVNF_Mem_Server / DDR ) ) ,( PN - MDR ) ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( ( RCSe - CS ) - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUR ) ) ) ) ) ) ) )", "obj1": 0.47928994082840237, "obj2": 0.35293531658822014}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.8461538461538461, "obj2": 0.05195580185050141}, {"determining": "Min( Max( ( AMS * CRS ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) ,( RRS / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( Min( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.05719921104536489, "obj2": 0.7772865886330668}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / AMS ),Const ) / FirstVNF_CPU ) ) ) / ( ( RRS * PN ) + ( BR - AMS ) ) ) ) )", "choosing": "( ( RRSe + MUR ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.10059171597633136, "obj2": 0.7458703936756774}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.727810650887574, "obj2": 0.09225658587913549}, {"determining": "( Max( ( AMS * CRS ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Min( ( ( Max( CS,RCSe ) / MLU ) * MUR ) ,CS ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.27613412228796846, "obj2": 0.553451701470791}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - Max( DDR,Const ) ) ) / ( Const * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MUM / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( MUM - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.34911242603550297, "obj2": 0.4618747041744983}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * ( ACS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2702169625246548, "obj2": 0.5674009985536722}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( ( CRS + FirstVNF_Mem_Server ) + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( BR ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - Min( MLU ,( RMSe + RCSe ) ) ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( Min( RRSe ,MUM ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.4516765285996055, "obj2": 0.3663894785056666}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( MRS * PN ) + ( BR - AMS ) ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( CS ,( ( ( MUM - MUC ) - CS ) * RMSe ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.28205128205128205, "obj2": 0.5334315623657782}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),( Min( FirstVNF_RAM ,ACS ) * ( Max( Max( BR,RRS ),( ( ( RRS / ACS ) + FirstVNF_RAM_Server ) + BR ) ) / DDR ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,RRS ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),( MUR + MUC ) ) ),Min( RMSe ,( RRSe - Min( DS ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.3590624268003536}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( ACS + ( Max( ( Const / FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server / BR ) / FirstVNF_RAM ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS * MUR ) / Max( ( RCSe / RRSe ),( MUR / DS ) ) )", "obj1": 0.11439842209072978, "obj2": 0.7376615126740612}, {"determining": "Min( ( FirstVNF_CPU_Server * MDR ) ,( Const + CRS ) )", "choosing": "( ( ( MUR - MLU ) / RMSe ) * Min( Min( RCSe ,( ( MUC + Max( ( DS * RCSe ),RRSe ) ) + MUR ) ) ,DS ) )", "obj1": 0.22879684418145957, "obj2": 0.6304729816807649}, {"determining": "( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) * ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,( MUR + DS ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) ) / ( Min( Min( MUM ,MUM ) ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.33925049309664695, "obj2": 0.4687757189577971}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.46745562130177515, "obj2": 0.35407264723160636}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_CPU_Server ) ) ,Max( Min( Min( PN ,ARS ) ,( AMS * CRS ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( DS - Max( MUM,DS ) ) + ( MUR - CS ) ) ) ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.05325443786982249, "obj2": 0.7878992987807165}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + Min( FirstVNF_Mem ,( PN - ( DDR * ( FirstVNF_RAM_Server / MDR ) ) ) ) ) ) ,( Const - MDR ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / ( Min( ( DS + MLU ) ,( MLU + MUR ) ) - ( CS / Max( ( MUM * RMSe ),MUM ) ) ) ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.27416173570019725, "obj2": 0.5667148782825049}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( DDR / MDR ) - ( ( FirstVNF_RAM + MDR ) - Min( RRS ,CRS ) ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),CS ) / MLU ) ) ,CS ) ,( ( CS - RRSe ) - ( ( ( ( RRSe * MUC ) / MUM ) / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 0.2406311637080868, "obj2": 0.6164607859084813}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - MRS ) - ( ( ( ( Min( MRS ,( AMS * FirstVNF_Mem_Server ) ) / MDR ) - Min( ( Const * DDR ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,Max( Max( MUC,MUR ),MUC ) ) )", "obj1": 0.1203155818540434, "obj2": 0.7283294851854313}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * RRS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,( MUR + DS ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3254437869822485, "obj2": 0.48449747913051067}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + ( Max( BR,ACS ) - ( Max( MDR,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUC + CS ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.34714003944773175, "obj2": 0.46855798772997503}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Min( DDR ,( Const * ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( ( CS * Max( RRSe,Max( RMSe,Max( MUR,RMSe ) ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.04930966469428008, "obj2": 0.7912220264478038}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( MRS * PN ) + ( BR - AMS ) ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( CS ,( ( ( MUM - MUC ) - CS ) * RMSe ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5411335357158302}, {"determining": "Min( ( FirstVNF_CPU_Server * MDR ) ,( Const + CRS ) )", "choosing": "( ( ( MUR - MLU ) / RMSe ) * Min( Min( RCSe ,( ( MUC + Max( ( DS * RCSe ),RRSe ) ) + MUR ) ) ,DS ) )", "obj1": 0.22879684418145957, "obj2": 0.6304729816807649}, {"determining": "( Max( ( ( ( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( ARS * MDR ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) + MRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Min( FirstVNF_CPU_Server ,BR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( ( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RCSe - MUR ),CS ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,Min( RMSe ,( ( Max( RCSe,MUC ) / RRSe ) - Max( RCSe,( MUC - RMSe ) ) ) ) ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,MUM ) ) ) ) )", "obj1": 0.23865877712031558, "obj2": 0.6204754832060124}, {"determining": "( Max( ( ( MRS + RRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,DS ) ,Min( ( RRSe * ( MUR * MUM ) ) ,( MUC / ( RRSe + MLU ) ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,( ( MUM - MUC ) / RRSe ) ) ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "( Max( ( ( ( ( ( AMS * Const ) + ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( Min( ( FirstVNF_Mem_Server * PN ) ,( RRS / PN ) ) * MDR ) ) - Max( ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) - Min( FirstVNF_RAM ,ARS ) ),( ( FirstVNF_Mem_Server / DDR ) + ( FirstVNF_CPU_Server / AMS ) ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( ( Max( MUC,Max( RMSe,MUM ) ) - Max( ( RRSe - MUR ),CS ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,( MUC + CS ) ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,MUM ) ) ) ) )", "obj1": 0.23865877712031558, "obj2": 0.6204754832060124}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( Max( MDR,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( MUC * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5411335357158302}, {"determining": "Min( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,( PN - ( DDR * Const ) ) )", "choosing": "Max( ( ( RRSe * MUC ) / MUM ),( RCSe - CS ) )", "obj1": 0.980276134122288, "obj2": 0.007843106522349938}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( ( ( DDR / MDR ) - Min( ( Const * DDR ) ,DDR ) ) / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / AMS ),Const ) / FirstVNF_CPU ) ) ) / ( ( RRS * PN ) + ( BR - AMS ) ) ) ) )", "choosing": "( Min( ( MUM * ( Max( Min( RCSe ,MUR ),CS ) / MLU ) ) ,CS ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11637080867850098, "obj2": 0.7340084333267166}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),PN ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Max( ( ( RCSe / MUC ) - MUR ),( CS / RRSe ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.7652859960552268, "obj2": 0.08298997334303175}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( DDR,Const ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) + Min( ( ( ( RCSe / MUC ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11834319526627218, "obj2": 0.7309563125920686}, {"determining": "Min( ( MRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( ( DS * ( ( MLU * MUR ) / RMSe ) ) ,Max( MUR,( ( DS - DS ) - MLU ) ) ) * ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.7810650887573964, "obj2": 0.07448757757634006}, {"determining": "Min( FirstVNF_Mem ,( ( RRS + MDR ) - ( ( ( Min( CRS ,MRS ) - Const ) * PN ) * Const ) ) )", "choosing": "Max( ( Max( MLU,Max( RRSe,MLU ) ) - Min( Max( ( RMSe * CS ),( MUR / ( ( Min( DS ,RCSe ) - MLU ) - ( CS / MLU ) ) ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.9842209072978304, "obj2": 0.005667554365902446}, {"determining": "Min( ( DDR / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( ( RCSe * RMSe ) ,Max( MUR,( ( DS - DS ) - MLU ) ) ) * ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.7712031558185405, "obj2": 0.07770716246757647}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,DDR ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( MLU,DS ) ,( ( MUC + CS ) - ( CS / CS ) ) ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.777120315581854, "obj2": 0.07621072596384296}, {"determining": "Min( ( PN * Min( FirstVNF_RAM ,AMS ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( ( RCSe * ( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * MLU ) ) ) ) ,( MUR / MLU ) ) * ( RCSe - Min( CS ,( MLU - CS ) ) ) ),( RCSe - CS ) )", "obj1": 0.7672583826429981, "obj2": 0.08014470159838478}, {"determining": "Min( ( AMS * CRS ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,DS ) - ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7850098619329389, "obj2": 0.07443864374756802}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( RRS * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( Min( RRSe ,DS ) * MUC ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "Min( ( RRS / ( FirstVNF_Mem_Server / DDR ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - ( ( MUR / RCSe ) + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.7593688362919132, "obj2": 0.08304190293168877}, {"determining": "Min( ( ( BR / Const ) - MDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( CS,RRSe ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7751479289940828, "obj2": 0.07683293797653429}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,Min( FirstVNF_Mem ,( PN - BR ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( RCSe - MUM ) ),( RCSe - Max( MUR,RRSe ) ) )", "obj1": 0.7692307692307693, "obj2": 0.07928074549077266}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) * ( ( ARS - ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( CS + ( ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) / MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.7869822485207101, "obj2": 0.0724509844368383}, {"determining": "Min( ( AMS / FirstVNF_Mem ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( ( CS * Min( Min( DS ,( ( DS * CS ) - MUR ) ) ,MUC ) ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7593688362919132, "obj2": 0.08304190293168877}, {"determining": "Min( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * ( Min( ARS ,DDR ) + ( ( ( FirstVNF_RAM_Server - PN ) * FirstVNF_RAM_Server ) + DDR ) ) ) ) ,( PN - ( DDR * Const ) ) )", "choosing": "Max( Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( MUM * MLU ),Min( CS ,MUM ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ),Max( ( ( MUR * RRSe ) / RRSe ),Max( ( RCSe - MUR ),( Max( MUR,MUC ) - Min( MUM ,( Min( RCSe ,RCSe ) - DS ) ) ) ) ) )", "obj1": 0.9861932938856016, "obj2": 0.005015982032311323}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * ( FirstVNF_Mem_Server + Max( ARS,FirstVNF_Mem_Server ) ) ) ),Min( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,( MUC / MUC ) ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "Min( ( FirstVNF_RAM - ( ( Min( ARS ,DDR ) + ( FirstVNF_CPU + DDR ) ) - ( Min( ( BR + FirstVNF_CPU ) ,Const ) * RRS ) ) ) ,( DDR / MDR ) )", "choosing": "Max( ( MUR / RMSe ),( MUC - Max( Max( ( DS - MUC ),( RMSe * RCSe ) ),MUC ) ) )", "obj1": 0.9921104536489151, "obj2": 0.0028658966413679697}, {"determining": "( ( ( ( BR * Max( Const,( ( ( FirstVNF_RAM - CRS ) - MRS ) - Max( ARS,FirstVNF_Mem_Server ) ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( Max( Max( BR,RRS ),( FirstVNF_RAM + BR ) ) / DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( ( Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) - RCSe ),( ( MUR * CS ) * RCSe ) ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( CS - MLU ),Min( CS ,CS ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0017297732100570397}, {"determining": "Min( ( ( BR / Const ) - MDR ) ,( Max( FirstVNF_Mem_Server,CRS ) - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( CS,RRSe ) ,DS ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.9901380670611439, "obj2": 0.0032013118621462143}, {"determining": "( ( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( MDR * FirstVNF_Mem ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( Max( ( FirstVNF_RAM * BR ),( ( ( DDR + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ( ACS - ( CRS * PN ) ) ) * ACS ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( MUC * RRSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( ( ( MUC / Min( ( CS - DS ) ,MUR ) ) + ( MUC / Max( MUM,DS ) ) ) + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0006065226848642546}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ,( ( BR + Min( MRS ,Max( ACS,FirstVNF_CPU ) ) ) - MDR ) )", "choosing": "Max( ( ( ( MUM + ( RRSe * ( ( MLU * CS ) + ( ( RCSe * MUC ) - RRSe ) ) ) ) / DS ) * ( Min( RCSe ,DS ) - ( MUR + ( RCSe / RMSe ) ) ) ),( ( RCSe - CS ) - CS ) )", "obj1": 0.9881656804733728, "obj2": 0.003814544938407839}, {"determining": "( ( Max( ( Min( FirstVNF_CPU_Server ,BR ) / ( FirstVNF_RAM * Const ) ),( ( CRS * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + MRS ) ) ) / ( MDR * FirstVNF_Mem ) ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( Max( ( FirstVNF_RAM * BR ),( ( ( DDR + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ( ACS - ( CRS * PN ) ) ) * ACS ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( MUC * RRSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( ( ( MUC / Min( ( CS - DS ) ,MUR ) ) + ( MUC / Max( MUM,DS ) ) ) + MUC ) ) + Max( ( RRSe * MUM ),( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ) )", "obj1": 0.9980276134122288, "obj2": 0.0006065226848642546}, {"determining": "( ( ( ( BR * Max( Const,( ( ( FirstVNF_RAM - ARS ) - MRS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ) - MDR ) / ( BR * FirstVNF_Mem ) ) * ( Min( ARS ,DDR ) + ( Max( Max( BR,RRS ),( FirstVNF_RAM + BR ) ) / DDR ) ) )", "choosing": "( ( ( MUC / MUC ) + Max( ( RMSe - RCSe ),( ( MUR * CS ) * RCSe ) ) ) / Min( ( ( ( RRSe - MUC ) - ( MUC / Min( RRSe ,Max( ( CS - MLU ),Min( CS ,CS ) ) ) ) ) - RCSe ) ,( MLU / MLU ) ) )", "obj1": 0.9940828402366864, "obj2": 0.0017297732100570397}, {"determining": "Min( ( ( FirstVNF_CPU + MRS ) - Min( FirstVNF_RAM ,DDR ) ) ,( ( BR + Min( MRS ,( AMS * FirstVNF_Mem_Server ) ) ) - MDR ) )", "choosing": "Max( ( ( ( MUM + ( RRSe * ( ( MLU * CS ) + MUC ) ) ) / DS ) * ( Min( RCSe ,DS ) - ( MUR + ( RCSe / RMSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.9881656804733728, "obj2": 0.003814544938407839}, {"determining": "( Min( ( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) + ( FirstVNF_Mem * RRS ) ) + AMS ) ,AMS ) - Max( ( ( Const * ARS ) / ( BR / FirstVNF_Mem ) ),Max( ( ( RRS * PN ) + ( BR - AMS ) ),( Const - FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Max( ( RCSe / RMSe ),( MUR / CS ) ) * ( ( ( MLU / MUC ) - RCSe ) + MUR ) ) ,( ( ( RRSe - RMSe ) * ( MUR + MUC ) ) + Max( ( RRSe * MUM ),( ( RMSe * MLU ) + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM_Server,FirstVNF_CPU ) )", "choosing": "Min( Max( RMSe,MLU ) ,( DS / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ACS * ARS ) + DDR ) - ( ( FirstVNF_Mem_Server / FirstVNF_Mem_Server ) + FirstVNF_RAM_Server ) )", "choosing": "Min( ( Max( MUR,MUR ) - Min( MUR ,( ( Min( ( MLU - CS ) ,( MUR - CS ) ) * MLU ) + RCSe ) ) ) ,Max( RMSe,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - FirstVNF_Mem_Server ) - Max( ACS,( ( RRS * RRS ) + ( AMS / ARS ) ) ) )", "choosing": "Min( ( ( DS / ( ( MLU + ( ( ( RMSe - RRSe ) / ( MUC / CS ) ) / DS ) ) - ( MLU - RMSe ) ) ) * MUC ) ,( Min( ( ( RCSe - RCSe ) - ( Max( ( ( MLU + CS ) * ( CS * RMSe ) ),MUC ) - MUR ) ) ,( ( MUM / MLU ) / Max( RMSe,MUM ) ) ) + ( ( ( CS / RRSe ) - ( RCSe * RRSe ) ) - Min( CS ,( MLU * Min( ( MUR + CS ) ,RRSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS * DDR ) - Min( MRS ,Min( FirstVNF_RAM ,( CRS / FirstVNF_CPU ) ) ) )", "choosing": "( ( ( MLU / RRSe ) + MUC ) / ( MUC + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( RRS / RRS ) + Const ) ,( ARS - FirstVNF_CPU_Server ) )", "choosing": "Max( ( RCSe + ( MUC * RRSe ) ),( MUM - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "8": [{"determining": "( Max( FirstVNF_RAM_Server,ACS ) * ( Min( Max( MRS,MRS ) ,MRS ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( CS * ( RCSe * RMSe ) ),( MUR + Min( Min( MUC ,( MUC + CS ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ACS ,( Min( Min( Min( ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ,RRS ) ,ACS ) ,( AMS * MRS ) ) - FirstVNF_CPU_Server ) )", "choosing": "( ( RCSe - RRSe ) + ( Max( ( MUR + MUR ),( MLU * RMSe ) ) * DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Max( ( ( Max( PN,FirstVNF_RAM_Server ) * ( Max( BR,ACS ) - ( ( FirstVNF_Mem - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ),( ( CS * RMSe ) - MUR ) ) ,Max( ( Max( RMSe,MLU ) * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.045364891518737675, "obj2": 0.7963361141376045}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( PN - MDR ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),( MLU + RMSe ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / ( RRSe / MUC ) ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.6725838264299803, "obj2": 0.1328647215240094}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Max( ( ( Max( PN,FirstVNF_RAM_Server ) * ( Max( BR,ACS ) - ( ( FirstVNF_Mem - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ),( ( CS * RMSe ) - MUR ) ) ,Max( ( Max( RMSe,MLU ) * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.14003944773175542, "obj2": 0.6568923926294217}, {"determining": "( ( ( Const / ARS ) - MDR ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( RCSe * ( RRSe * ( RRSe + CS ) ) ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5305719921104537, "obj2": 0.2709994595767778}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_CPU_Server * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.398422090729783, "obj2": 0.4139184824259403}, {"determining": "Min( ( Max( CRS,( DDR / FirstVNF_CPU ) ) * MDR ) ,( ( FirstVNF_CPU - CRS ) / ACS ) )", "choosing": "( ( ( Min( ( ( MLU * RCSe ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ,MUR ) - CS ) / RMSe ) * Min( Min( RCSe ,RMSe ) ,DS ) )", "obj1": 0.1873767258382643, "obj2": 0.6480169502861289}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,RRS ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( DS ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.4378698224852071, "obj2": 0.36768645190351146}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),( Min( FirstVNF_RAM ,ACS ) * ( Max( Max( BR,RRS ),( ( ( RRS / ACS ) + Max( DDR,Const ) ) + BR ) ) / Const ) ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( ( DS - ( MUR + MLU ) ) - ( MUC / Min( RRSe ,( ( MUC + Max( ( DS * RCSe ),RRSe ) ) + MUR ) ) ) ) )", "obj1": 0.5976331360946746, "obj2": 0.2548364454806964}, {"determining": "( ( PN - MDR ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( ( Min( CRS ,MRS ) - Const ),ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( RCSe * MUR ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.6134122287968442, "obj2": 0.20632634931908034}, {"determining": "Min( Min( ( RRS * FirstVNF_RAM ) ,( Max( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ),Max( PN,Min( ( Const - FirstVNF_RAM_Server ) ,( ( FirstVNF_CPU * ARS ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) ) ) ) + PN ) ) ,( MDR * FirstVNF_RAM_Server ) )", "choosing": "( Min( RCSe ,Max( ( ( MUR + ( ( DS / Max( RRSe,DS ) ) - ( RRSe - MUR ) ) ) * CS ),( ( MUC * MUC ) / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.1282051282051282, "obj2": 0.720435675124768}, {"determining": "( ( PN - MDR ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( Max( FirstVNF_RAM_Server,ACS ) - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + ( Max( ( AMS * CRS ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( RCSe * ( ( MUC + CS ) - ( CS / CS ) ) ) ,CS ) ) ) / ( ( MUR * RMSe ) / ( Max( MUC,MUR ) + MUR ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.6134122287968442, "obj2": 0.20632634931908034}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Max( ( ( Max( PN,FirstVNF_RAM_Server ) * ( BR / Const ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,( MUM - CS ) ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ),( ( CS * RMSe ) - MUR ) ) ,Max( ( Max( RMSe,MLU ) * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.20710059171597633, "obj2": 0.6183119969374092}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( Min( Max( MRS,BR ) ,BR ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( MUR,MUC ) ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ),( RCSe - ( Min( ( Max( ( ( MUC * RRSe ) - MUM ),( ( MLU * RMSe ) + Max( MUR,RRSe ) ) ) / Min( ( MUR + ( RRSe + DS ) ) ,Max( MUC,MUM ) ) ) ,CS ) + ( Max( RRSe,( ( MLU * DS ) * ( DS * RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.8757396449704142, "obj2": 0.041460138178442546}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),( Min( FirstVNF_RAM ,ACS ) * ( Max( Max( BR,RRS ),( ( ( RRS / ACS ) + Max( DDR,Const ) ) + BR ) ) / DDR ) ) ) ,( FirstVNF_Mem - DDR ) )", "choosing": "( Max( ( MLU - MUR ),( CS / RRSe ) ) / ( ( DS - ( MUR + MLU ) ) - ( MUC / Min( RRSe ,Max( CS,Min( CS ,MUM ) ) ) ) ) )", "obj1": 0.6055226824457594, "obj2": 0.24516929595727363}, {"determining": "( ( PN - MDR ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( Max( FirstVNF_RAM_Server,ACS ) - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + ( Max( ( AMS * CRS ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( RCSe * ( ( MUC + CS ) - ( CS / CS ) ) ) ,CS ) ) ) / ( ( MUR * RMSe ) / ( Max( MUC,MUR ) + MUR ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5285996055226825, "obj2": 0.30926316430438633}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),( FirstVNF_Mem_Server / DDR ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( MLU + RMSe ) ),( RCSe - CS ) )", "obj1": 0.9053254437869822, "obj2": 0.03617082564359724}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( ( ( RRS + DDR ) - MDR ) / FirstVNF_CPU ) ) ) / ( ( RRS * PN ) + ( BR - AMS ) ) ) ) )", "choosing": "( ( RRSe + MUR ) / ( Min( ( ( RRSe * MUR ) * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.9408284023668639, "obj2": 0.03517614213017488}, {"determining": "Min( Min( AMS ,( FirstVNF_Mem + PN ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * ( ACS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUC + CS ) - ( CS / CS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2465483234714004, "obj2": 0.5881724561581763}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( ( CRS + PN ) / FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,Const ) ) ) ) )", "choosing": "( Min( RMSe ,Max( MUR,RRSe ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3905325443786982, "obj2": 0.4235515405954387}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( PN - MDR ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + ( Max( ( RRS * FirstVNF_RAM ),BR ) - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),CS ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUR ) ) ) ) ) ) ) )", "obj1": 0.8165680473372781, "obj2": 0.0584400889548642}, {"determining": "Min( ( FirstVNF_RAM - ( Const - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( ( Max( MUM,( RMSe - MUR ) ) / ( MUR / DS ) ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.9506903353057199, "obj2": 0.019579351610220844}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ACS - ACS ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Max( MRS,MRS ) ,MRS ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( CS * ( RCSe * RMSe ) ),( MUR + Min( Min( MUC ,( MUR + ( MLU - RCSe ) ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.29980276134122286, "obj2": 0.5096121512091596}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,Min( FirstVNF_Mem ,( PN - BR ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( RCSe - MUM ) ),( RCSe - Max( MUR,RRSe ) ) )", "obj1": 0.7199211045364892, "obj2": 0.11487972494388148}, {"determining": "( Max( ( ( FirstVNF_RAM * Min( ( RRS / ( FirstVNF_Mem_Server / DDR ) ) ,( PN - MDR ) ) ) / ( PN * ( FirstVNF_Mem_Server + Max( ARS,FirstVNF_Mem_Server ) ) ) ),Min( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / CS ) * MUR ) ,( MUC / MUC ) ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3826429980276134, "obj2": 0.4514129351775459}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( Max( FirstVNF_Mem_Server,( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) ),FirstVNF_Mem ) ) ,( ( ( ( CRS + FirstVNF_Mem_Server ) + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( BR ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - Min( MLU ,( RMSe + RCSe ) ) ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,( DS + MLU ) ) ) )", "obj1": 0.5009861932938856, "obj2": 0.32036541589710915}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / FirstVNF_CPU_Server ),Min( Min( FirstVNF_Mem_Server ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( MUM / MUM ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3116370808678501, "obj2": 0.49200199111836096}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Max( ( ( Max( PN,FirstVNF_RAM_Server ) * ( Max( BR,ACS ) - ( ( FirstVNF_Mem - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Max( ( FirstVNF_RAM - FirstVNF_CPU ),FirstVNF_CPU ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ),( ( CS * RMSe ) - MUR ) ) ,Max( ( Max( RMSe,( ( MUC + CS ) - ( CS / CS ) ) ) * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.22287968441814596, "obj2": 0.6052906021351716}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ),( RCSe - CS ) )", "obj1": 0.7889546351084813, "obj2": 0.07233595685286927}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( ( FirstVNF_RAM + MDR ),ACS ) - ( Max( ARS,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( ( CS - RMSe ) / MLU ) * MUR ) ,Min( Max( RMSe,MLU ) ,( ( RRSe * MUC ) / MUM ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.29191321499013806, "obj2": 0.5234643557222252}, {"determining": "Min( ( FirstVNF_RAM - FirstVNF_CPU ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( ( ( MLU * RCSe ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ,MUR ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.8481262327416174, "obj2": 0.051426995236121854}, {"determining": "Min( Max( ( AMS * CRS ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) ,( RRS / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( Min( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.05719921104536489, "obj2": 0.7772865886330668}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / AMS ),Const ) / FirstVNF_CPU ) ) ) / ( ( RRS * PN ) + ( BR - AMS ) ) ) ) )", "choosing": "( ( RRSe + MUR ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.10059171597633136, "obj2": 0.7458703936756774}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( Min( Max( MRS,BR ) ,BR ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( MUR,MUC ) ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( RMSe + ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) ) ) ),( RCSe - ( Min( ( Max( ( ( MUC * RRSe ) - MUM ),( ( MLU * RMSe ) + Max( MUR,RRSe ) ) ) / Min( ( MUR + ( RRSe + DS ) ) ,Max( MUC,MUM ) ) ) ,CS ) + ( Max( RRSe,( ( MLU * DS ) * ( DS * RMSe ) ) ) + RCSe ) ) ) )", "obj1": 0.8303747534516766, "obj2": 0.056600431838691526}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( Max( FirstVNF_CPU,Const ) + Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "( ( ( RRSe + RMSe ) - ( RRSe * MUR ) ) / ( Min( MUM ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.09664694280078895, "obj2": 0.7546633546170006}, {"determining": "Min( Min( ( RRS * FirstVNF_RAM ) ,( FirstVNF_Mem + PN ) ) ,( RRS / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( Min( RCSe ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.06903353057199212, "obj2": 0.7686866880632314}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,Min( Const ,Max( FirstVNF_CPU_Server,ARS ) ) ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) / ( Min( ( ( DS * MUR ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) ) ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.7258382642998028, "obj2": 0.0927471985895652}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( ( CRS + FirstVNF_Mem_Server ) + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( BR ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - Min( MLU ,( RMSe + RCSe ) ) ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( Min( RRSe ,MUM ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.4516765285996055, "obj2": 0.3663894785056666}, {"determining": "Min( ( ( DDR / FirstVNF_Mem_Server ) * ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) ) ,( PN - ( DDR * Const ) ) )", "choosing": "Max( ( ( RRSe * ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) ) / MUM ),( RCSe - CS ) )", "obj1": 0.9704142011834319, "obj2": 0.011485830297361768}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( MRS * PN ) + ( BR - AMS ) ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( CS ,( ( ( MUM - MUC ) - CS ) * RMSe ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.28205128205128205, "obj2": 0.5334315623657782}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( ACS + ( Max( ( Const / FirstVNF_Mem_Server ),( CRS - FirstVNF_Mem_Server ) ) + ( ( FirstVNF_RAM_Server / BR ) / FirstVNF_RAM ) ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( DS * MUR ) / Max( ( RCSe / RRSe ),( MUR / DS ) ) )", "obj1": 0.11439842209072978, "obj2": 0.7376615126740612}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Max( ( ( Max( PN,FirstVNF_RAM_Server ) * ( Max( BR,ACS ) - ( ( FirstVNF_Mem - ( AMS - MRS ) ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) ),( ( CS * Min( Min( Max( MUR,RCSe ) ,MUR ) ,CS ) ) - MUR ) ) ,Max( ( Max( RMSe,MLU ) * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.22090729783037474, "obj2": 0.608675493472199}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,MDR ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Max( ( ( ( Max( Min( ( RCSe / MUC ) ,Max( MUR,MUC ) ),MUR ) * ( ( RRSe / MUR ) + MUR ) ) / RRSe ) - MUR ),( CS / RRSe ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.7021696252465484, "obj2": 0.11910725723867029}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) / Max( ( FirstVNF_CPU / PN ),( MDR * ( ACS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,Min( ( CS / MUM ) ,Min( RRSe ,MLU ) ) ) )", "obj1": 0.2702169625246548, "obj2": 0.5674009985536722}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),( Min( FirstVNF_RAM ,ACS ) * ( Max( Max( BR,RRS ),( ( ( RRS / ACS ) + FirstVNF_RAM_Server ) + BR ) ) / DDR ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,RRS ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),( MUR + MUC ) ) ),Min( RMSe ,( RRSe - Min( DS ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.46153846153846156, "obj2": 0.3590624268003536}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( DDR / MDR ) - Min( ( RRS * FirstVNF_RAM ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( ( MUR * ( MLU + RMSe ) ),( RCSe - CS ) ) / MLU ) ) ,CS ) ,( ( CS - RRSe ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 0.2682445759368836, "obj2": 0.5773436759111708}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( Max( ( FirstVNF_RAM * BR ),( ( ( DDR + Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) * ( ACS - ( CRS * PN ) ) ) * ACS ) ) ,( ( ( ( CRS + FirstVNF_Mem_Server ) + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( BR ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - Min( MLU ,( RMSe + RCSe ) ) ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( Min( RRSe ,MUM ) + RCSe ),DS ) ),Min( RMSe ,( ( MUC * RRSe ) - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.47731755424063116, "obj2": 0.3399806229096408}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( ( FirstVNF_CPU_Server / AMS ),Const ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( RRSe + Min( ( ( ( RCSe / MUC ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.08481262327416174, "obj2": 0.7638041508783543}, {"determining": "Min( Max( ( FirstVNF_CPU + ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ),Max( Max( Max( MRS,MDR ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( ( CS / CS ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.6962524654832347, "obj2": 0.1209456110936565}, {"determining": "( ( ( DDR / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) - ( ( ( ( DDR / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( MUM / MUC ) ) / MLU ) ) ,CS ) ,( ( CS - RRSe ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 0.252465483234714, "obj2": 0.5779411689087741}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( ( CRS + FirstVNF_Mem_Server ) + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( BR ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - Min( MLU ,( RMSe + RCSe ) ) ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( Min( RRSe ,MUM ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.49506903353057197, "obj2": 0.3240930913480333}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - Max( DDR,Const ) ) ) / ( Const * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( PN - MDR ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MUM / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,( ( MUC + CS ) - ( CS / CS ) ) ) + Min( RMSe ,MUM ) ) ) * ( MUM - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.7416173570019724, "obj2": 0.08687342602379242}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,Min( ( ARS - FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU_Server,ARS ) ) ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( ( Min( RMSe ,( MUC / MUR ) ) + ( RCSe + MLU ) ) + CS ) - ( CS / CS ) ) ) / ( Min( ( ( DS * MUR ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) ) ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.6883629191321499, "obj2": 0.13110244598570633}, {"determining": "( ( Max( CRS,FirstVNF_CPU_Server ) * Max( AMS,FirstVNF_Mem_Server ) ) * ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,( MUR + DS ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) ) / ( Min( Min( MUM ,MUM ) ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.33925049309664695, "obj2": 0.4687757189577971}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - FirstVNF_CPU ) ) + Min( ( RRS / ( FirstVNF_Mem_Server / DDR ) ) ,( PN - MDR ) ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * Max( DS,DS ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( ( RCSe - CS ) - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUR ) ) ) ) ) ) ) )", "obj1": 0.47534516765285995, "obj2": 0.35139778486660017}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * ( FirstVNF_Mem_Server + Max( ARS,FirstVNF_Mem_Server ) ) ) ),Min( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,( MUC / MUC ) ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.358974358974359, "obj2": 0.460849956918631}, {"determining": "( Max( ( AMS * CRS ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Min( ( ( Max( CS,RCSe ) / MLU ) * MUR ) ,CS ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.27613412228796846, "obj2": 0.553451701470791}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ARS ,FirstVNF_CPU_Server ) ) ,Max( Min( Min( PN ,ARS ) ,( AMS * CRS ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) )", "choosing": "( Min( Max( Min( MUM ,( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( DS - Max( MUM,DS ) ) + ( MUR - CS ) ) ) ),Max( MLU,CS ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.05325443786982249, "obj2": 0.7878992987807165}, {"determining": "Min( ( FirstVNF_RAM - ( ( PN / BR ) - Max( ( RRS * FirstVNF_RAM ),BR ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( RRSe / MUC ) ) - Min( MUM ,Min( ( MUM - ( CS - DS ) ) ,RRSe ) ) ) ),( RCSe - CS ) )", "obj1": 0.8461538461538461, "obj2": 0.05195580185050141}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.46745562130177515, "obj2": 0.35407264723160636}, {"determining": "( Max( ( AMS * CRS ),Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) ) * ( Min( ( ( Max( CS,RCSe ) / MLU ) * MUR ) ,CS ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.27218934911242604, "obj2": 0.5550807791037576}, {"determining": "( ( Max( Const,FirstVNF_Mem ) - MRS ) - ( ( ( ( Min( MRS ,( AMS * FirstVNF_Mem_Server ) ) / MDR ) - Min( ( Const * DDR ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( MUC ,Max( Max( MUC,MUR ),MUC ) ) )", "obj1": 0.1203155818540434, "obj2": 0.7283294851854313}, {"determining": "Min( ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( DDR - Min( Const ,Const ) ) ) + ( PN - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( Max( ( ( RCSe / MUC ) - MUR ),( CS / RRSe ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUM * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUC ) ) ) ) ) ) ) )", "obj1": 0.4930966469428008, "obj2": 0.33684995236250187}, {"determining": "Min( Max( ( AMS * CRS ),Min( Min( AMS ,ARS ) ,( AMS * ARS ) ) ) ,( RRS / ( FirstVNF_Mem_Server / DDR ) ) )", "choosing": "( Min( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) ,( ( Max( CS,MUC ) / MLU ) * MUR ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.08284023668639054, "obj2": 0.7681218236814661}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - Max( DDR,Const ) ) ) / ( Const * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MUM / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( MUM - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.34911242603550297, "obj2": 0.4618747041744983}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ACS - ACS ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( Max( MRS,MRS ) ,MRS ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( ( CS * ( RCSe * RMSe ) ),( MUR + Min( Min( MUC ,( MUR + ( MLU - RCSe ) ) ) ,Max( MUC,( CS - RMSe ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3727810650887574, "obj2": 0.45163101831077124}, {"determining": "( Max( ( ( FirstVNF_RAM * FirstVNF_Mem_Server ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,ARS ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( Max( CS,MUC ) / MLU ) * MUR ) ,CS ) ) ) / ( ( MUC - DS ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3708086785009862, "obj2": 0.4585658998644041}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "Min( Max( DDR,FirstVNF_Mem ) ,Min( ( Min( RRS ,FirstVNF_Mem ) / Max( ( MRS * MRS ),FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM + FirstVNF_Mem ) / PN ) * ( ( Max( ACS,( FirstVNF_CPU_Server - Min( Const ,Const ) ) ) + ( Max( ( RRS * FirstVNF_RAM ),BR ) - MDR ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MLU - MUR ) * ( MUR + MUM ) ) ,Max( Min( CS ,DS ),( RMSe / DS ) ) ),( ( ( RCSe / CS ) - Max( RRSe,RMSe ) ) * Min( MUM ,Max( ( RCSe - Max( ( ( MUR * DS ) + RCSe ),DS ) ),Min( RMSe ,( RRSe - Min( MUM ,( MUM - MUR ) ) ) ) ) ) ) )", "obj1": 0.4891518737672584, "obj2": 0.33770087050695574}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * RRS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( ( Max( AMS,BR ) + Max( DDR,Const ) ) + ( ( DDR - ARS ) / Max( FirstVNF_Mem_Server,( FirstVNF_CPU / ( ACS / FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,( MUR + DS ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3254437869822485, "obj2": 0.48449747913051067}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + ( Max( BR,ACS ) - ( Max( MDR,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( MUC + CS ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.34714003944773175, "obj2": 0.46855798772997503}, {"determining": "Min( Min( FirstVNF_CPU ,( FirstVNF_Mem + PN ) ) ,Min( DDR ,( Const * ( FirstVNF_CPU_Server - BR ) ) ) )", "choosing": "( ( CS * Max( RRSe,Max( RMSe,Max( MUR,RMSe ) ) ) ) / Min( ( ( MUM / MUR ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.04930966469428008, "obj2": 0.7912220264478038}, {"determining": "Min( Min( ( ( ( RRS + DDR ) - MDR ) / FirstVNF_CPU ) ,( FirstVNF_Mem + PN ) ) ,( PN - MDR ) )", "choosing": "( Min( Max( Min( MUM ,MUM ),( ( ( RRSe * MUR ) * ( DS * MUM ) ) + RMSe ) ) ,Max( ( RMSe * CS ),( MUR / RCSe ) ) ) / Min( ( ( MUM / ( RRSe / MUC ) ) / Max( DS,DS ) ) ,DS ) )", "obj1": 0.6824457593688363, "obj2": 0.13190774665150468}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( Max( MDR,FirstVNF_CPU ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( MUC * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5411335357158302}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) ),Max( Const,( ( ( FirstVNF_RAM - ARS ) - MRS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) / ( Min( RCSe ,( ( MUR * CS ) * RCSe ) ) - ( MUR + RCSe ) ) )", "obj1": 0.7514792899408284, "obj2": 0.08346684604767586}, {"determining": "( ( PN - MDR ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( Max( FirstVNF_RAM_Server,ACS ) - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + ( Max( ( AMS * CRS ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * Max( ( DDR - FirstVNF_CPU_Server ),Max( FirstVNF_CPU,( DDR - ARS ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( RCSe * ( ( MUC + CS ) - ( CS / MUC ) ) ) ,CS ) ) ) / ( ( MUR * RMSe ) / ( Max( MUC,MUR ) + MUR ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.5285996055226825, "obj2": 0.30926316430438633}, {"determining": "( Max( ( ( MRS + RRS ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( FirstVNF_Mem_Server - DDR ) )", "choosing": "( ( Max( ( CS * MUC ),( MUR + Min( Min( MUC ,DS ) ,Min( ( RRSe * ( MUR * MUM ) ) ,( MUC / ( RRSe + MLU ) ) ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / Min( Min( MUC ,MLU ) ,( ( MUM - MUC ) / RRSe ) ) ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "Min( Max( RRS,Max( Max( Max( MRS,Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( MUC + Max( ( CS - MLU ),Min( CS ,CS ) ) ) - ( CS / CS ) ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.727810650887574, "obj2": 0.09225658587913549}, {"determining": "Min( ( PN * Min( FirstVNF_RAM ,AMS ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( ( RCSe * ( ( Max( MLU,DS ) + ( MUC * RRSe ) ) * ( ( RMSe - MUR ) + ( MUR * MLU ) ) ) ) ,( MUR / MLU ) ) * ( RCSe - Min( CS ,( MLU - CS ) ) ) ),( RCSe - CS ) )", "obj1": 0.7672583826429981, "obj2": 0.08014470159838478}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - Max( DDR,Const ) ) ) / ( Const * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( MUC + CS ) - ( Min( RRSe ,Min( ( ( MUM / MLU ) * MUR ) ,CS ) ) / CS ) ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.7455621301775148, "obj2": 0.08449338473885412}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( MRS * PN ) + ( BR - AMS ) ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( CS ,( ( ( MUM - MUC ) - CS ) * RMSe ) ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( ( RCSe / MUC ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.28007889546351084, "obj2": 0.5411335357158302}, {"determining": "Min( ( ( DDR / FirstVNF_Mem_Server ) * ( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ,( PN - ( DDR * Const ) ) )", "choosing": "Max( ( ( RRSe * MUC ) / MUM ),( RCSe - CS ) )", "obj1": 0.980276134122288, "obj2": 0.007843106522349938}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( FirstVNF_Mem_Server * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( ( MLU / MLU ) * MUR ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.32938856015779094, "obj2": 0.47612479347431735}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( MRS ,( AMS * FirstVNF_Mem ) ) / MDR ) - Min( ( Const * DDR ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / ( ( ( MUM + ( RRSe * ( MLU + MUC ) ) ) / DS ) * ( Min( RCSe ,DS ) - ( MUR + ( RCSe / RMSe ) ) ) ) )", "obj1": 0.11637080867850098, "obj2": 0.7315814441395433}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,DDR ) ) * ( Min( Min( ARS ,ARS ) ,( AMS * CRS ) ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( ( MUR * ( RCSe - MUM ) ) * ( Min( Max( MLU,DS ) ,( Max( ( RMSe * CS ),( MUR / RCSe ) ) - ( CS / CS ) ) ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7593688362919132, "obj2": 0.0827768540772491}, {"determining": "Min( FirstVNF_Mem ,( PN - ( DDR * Const ) ) )", "choosing": "Max( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.9763313609467456, "obj2": 0.009851243756536674}, {"determining": "Min( FirstVNF_Mem ,( ( RRS + MDR ) - ( ( ( Min( CRS ,MRS ) - Const ) * PN ) * Const ) ) )", "choosing": "Max( ( Max( MLU,Max( RRSe,MLU ) ) - Min( Max( ( RMSe * CS ),( MUR / ( ( Min( DS ,RCSe ) - MLU ) - ( CS / MLU ) ) ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.9842209072978304, "obj2": 0.005667554365902446}, {"determining": "Min( ( MRS * ( FirstVNF_RAM + FirstVNF_Mem ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( ( DS * ( ( MLU * MUR ) / RMSe ) ) ,Max( MUR,( ( DS - DS ) - MLU ) ) ) * ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.7810650887573964, "obj2": 0.07448757757634006}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,DDR ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( MLU,DS ) ,( ( MUC + CS ) - ( CS / CS ) ) ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.777120315581854, "obj2": 0.07621072596384296}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,Min( AMS ,( PN - MDR ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( Max( MLU,DS ) ,( Max( ( RMSe * CS ),( MUR / RCSe ) ) - ( CS / CS ) ) ) - MUM ) ),( RCSe - CS ) )", "obj1": 0.7593688362919132, "obj2": 0.0827768540772491}, {"determining": "Min( Max( ( FirstVNF_CPU + DDR ),Max( Max( Max( MRS,Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) ),FirstVNF_CPU_Server ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) / ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) )", "obj1": 0.727810650887574, "obj2": 0.09225658587913549}, {"determining": "Min( Max( ( FirstVNF_CPU + Max( AMS,BR ) ),Max( Max( Max( MRS,Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) ),Max( Const,( ( ( FirstVNF_RAM - ARS ) - MRS ) - Max( BR,FirstVNF_Mem_Server ) ) ) ),AMS ) ) ,Min( FirstVNF_Mem ,( PN - MDR ) ) )", "choosing": "( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) / ( ( RRSe - Min( MUM ,( MUM - MUC ) ) ) - ( MUR + RCSe ) ) )", "obj1": 0.7830374753451677, "obj2": 0.07378480648957647}, {"determining": "( Max( ( ( FirstVNF_RAM * ( Max( BR,ACS ) - ( ( ( RRS * ACS ) - ACS ) / FirstVNF_RAM_Server ) ) ) / ( PN * FirstVNF_RAM_Server ) ),Min( Min( AMS ,ARS ) ,( AMS * CRS ) ) ) * ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( Max( RCSe,Min( RRSe ,Min( ( Min( RRSe ,DS ) * MUC ) ,CS ) ) ) / ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) ) * ( Max( Min( DS ,MLU ),Max( MUR,MUC ) ) - ( ( MUC + CS ) - ( CS / CS ) ) ) )", "obj1": 0.3234714003944773, "obj2": 0.4867095108387559}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) * ( ( ARS - ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) / FirstVNF_CPU ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( CS + ( ( Min( MUC ,Min( CS ,MUC ) ) + ( DS * MUR ) ) / MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.9743589743589743, "obj2": 0.011468267961333252}, {"determining": "( ( Max( FirstVNF_CPU,FirstVNF_CPU_Server ) * Min( AMS ,PN ) ) + ( ( FirstVNF_CPU / FirstVNF_Mem_Server ) + ( ( ACS * ( FirstVNF_CPU / ( Max( DDR,Const ) / FirstVNF_CPU ) ) ) / FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( MLU,Max( RRSe,MLU ) ) - Min( ( Min( DS ,RRSe ) - Max( RMSe,RMSe ) ) ,Min( ( DS + MLU ) ,( MLU + MUR ) ) ) ) + Min( ( ( ( RCSe / MUC ) - MUM ) + CS ) ,RMSe ) ) / ( Min( ( RCSe * ( DS * MUM ) ) ,MUM ) * Min( MUM ,DS ) ) )", "obj1": 0.11834319526627218, "obj2": 0.7309563125920686}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Min( FirstVNF_RAM_Server ,ACS ) ) * ( ( ARS - ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) / ( FirstVNF_Mem + Max( CRS,FirstVNF_CPU_Server ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( Min( RCSe ,( ( MUC + CS ) - ( CS / CS ) ) ) - ( CS + ( ( Min( MUC ,Min( CS ,MUC ) ) + Min( RMSe ,MUM ) ) / MUR ) ) ) ),( RCSe - CS ) )", "obj1": 0.7869822485207101, "obj2": 0.0724509844368383}, {"determining": "Min( ( FirstVNF_RAM - ( Min( ( FirstVNF_CPU * AMS ) ,Max( FirstVNF_CPU_Server,ARS ) ) * ( ( ARS - FirstVNF_Mem_Server ) / ( FirstVNF_Mem + Max( CRS,Min( FirstVNF_Mem ,( PN - BR ) ) ) ) ) ) ) ,( PN - MDR ) )", "choosing": "Max( ( MUR * ( RCSe - MUM ) ),( RCSe - Max( MUR,RRSe ) ) )", "obj1": 0.7692307692307693, "obj2": 0.07928074549077266}, {"determining": "( ( Max( ACS,PN ) - MRS ) - ( ( ( ( Min( BR ,( FirstVNF_RAM_Server - Const ) ) / MDR ) - Min( ( RRS * ( ( CRS * DDR ) / CRS ) ) ,DDR ) ) * BR ) - PN ) )", "choosing": "( Min( CS ,MUC ) / Min( Min( ( MUM * ( Max( Min( RCSe ,MUR ),( RRSe / MUC ) ) / MLU ) ) ,CS ) ,( ( ( ( MLU - ( Max( MUM,MUR ) + DS ) ) + RMSe ) + ( ( CS - RRSe ) + DS ) ) - ( ( RMSe / MLU ) * ( CS / RCSe ) ) ) ) )", "obj1": 0.252465483234714, "obj2": 0.5779411689087741}, {"determining": "Min( ( DDR / Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( PN - MDR ) )", "choosing": "Max( ( Min( ( RCSe * RMSe ) ,Max( MUR,( ( DS - DS ) - MLU ) ) ) * ( Min( RCSe ,DS ) - ( MUR + RCSe ) ) ),( RCSe - CS ) )", "obj1": 0.7712031558185405, "obj2": 0.07770716246757647}]}