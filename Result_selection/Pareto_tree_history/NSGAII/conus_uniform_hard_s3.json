{"1": [{"determining": "Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + RCSe ) )", "obj1": 0.7047817047817048, "obj2": 0.19756069688833428}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / Max( FirstVNF_RAM,FirstVNF_RAM ) ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * Max( CS,Max( ( DS - Max( RCSe,Min( DS ,MUC ) ) ),( ( MUC + MLU ) - MUC ) ) ) ),( RMSe * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037627579009090577}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - RMSe ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9937629937629938, "obj2": 0.004874075651852956}, {"determining": "( ( ( BR / FirstVNF_RAM ) * ( FirstVNF_RAM - RRS ) ) + ( ( ( BR - RRS ) + FirstVNF_RAM_Server ) - ( Min( MRS ,DDR ) / ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_Mem_Server ),( ( AMS * Min( PN ,RRS ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RRSe * ( MUC / MUM ) ) * Min( ( MUM / MUM ) ,( RMSe / DS ) ) )", "obj1": 0.7297297297297297, "obj2": 0.19003325944948105}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR + FirstVNF_CPU_Server ) - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,Max( Min( MUC ,( MUR / ( MUM * RCSe ) ) ),Max( MUM,DS ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06035870521337024}, {"determining": "( Min( ( ( DDR - ACS ) + ( FirstVNF_Mem + CRS ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Max( ( ( RCSe * ( DS / MUC ) ) - CS ),RRSe ) ),Min( ( MUM - RRSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - ACS ) ,( FirstVNF_RAM + ARS ) ),( ( MRS + CRS ) + Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) )", "obj1": 0.6694386694386695, "obj2": 0.2487869046484682}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( MUC / Min( ( MUC - MUC ) ,Max( RMSe,( ( ( MUC / Min( RMSe ,DS ) ) - MUM ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( Min( ACS ,ARS ) + Max( CRS,ACS ) ),( ( AMS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM_Server * DDR ) ) ) ,Max( ( ( AMS / FirstVNF_RAM ) / ( ARS + FirstVNF_CPU ) ),( ( PN * ACS ) - Min( DDR ,ARS ) ) ) )", "choosing": "( Min( Max( RMSe,MLU ) ,RMSe ) / ( MUR - MUM ) )", "obj1": 0.681912681912682, "obj2": 0.2485615735575209}, {"determining": "( Min( Max( Max( RRS,PN ),( ARS / ACS ) ) ,( ( BR * MDR ) * ( CRS / AMS ) ) ) + ( ( ( RRS / DDR ) - ( FirstVNF_RAM_Server / MDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) / Min( ( RCSe - RRSe ) ,Max( MUR,MUC ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6403326403326404, "obj2": 0.2643581021960421}, {"determining": "( Min( FirstVNF_CPU ,Min( Max( Min( ( FirstVNF_Mem_Server - BR ) ,( MDR + ARS ) ),BR ) ,CRS ) ) * ( Max( ( ( BR / BR ) / FirstVNF_Mem_Server ),DDR ) / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( Max( MUR,DS ) + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,( ( MUC - MUM ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( Max( CRS,( ACS * CRS ) ) * RRS ) - ( Const + PN ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - Max( CS,Min( DS ,( RMSe * ( ( MLU - MLU ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / Min( DDR ,CRS ) )", "choosing": "Max( ( MUC / MUR ),( Max( ( DS / MLU ),( MUM * MLU ) ) * MUR ) )", "obj1": 0.6673596673596673, "obj2": 0.2533519362579169}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( BR,BR ) * ( AMS * ARS ) ) * Max( ( ARS + MRS ),( MDR * BR ) ) ) - Min( Min( ( FirstVNF_Mem + DDR ) ,( MRS / Const ) ) ,( Max( FirstVNF_RAM,Const ) - Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( Max( CS,( ( ( ( RCSe + RCSe ) / MUM ) * CS ) - RRSe ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) )", "obj1": 0.762993762993763, "obj2": 0.18124737911595656}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( FirstVNF_CPU / AMS ) )", "choosing": "( ( Min( MUM ,Min( MUR ,( ( ( CS * ( MLU * RRSe ) ) - Min( MUR ,DS ) ) * RMSe ) ) ) / RCSe ) - Max( MUC,( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 0.6486486486486487, "obj2": 0.258813556948602}], "2": [{"determining": "Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + RCSe ) )", "obj1": 0.7047817047817048, "obj2": 0.19756069688833428}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - RMSe ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9937629937629938, "obj2": 0.004874075651852956}, {"determining": "( ( ( BR / FirstVNF_RAM ) * ( FirstVNF_RAM - RRS ) ) + ( ( ( BR - RRS ) + FirstVNF_RAM_Server ) - ( Min( MRS ,DDR ) / ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_Mem_Server ),( ( AMS * Min( PN ,RRS ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RRSe * ( MUC / MUM ) ) * Min( ( MUM / MUM ) ,( RMSe / DS ) ) )", "obj1": 0.7297297297297297, "obj2": 0.19003325944948105}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( DDR + FirstVNF_CPU_Server ) - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,Max( Min( MUC ,( MUR / ( MUM * RCSe ) ) ),Max( MUM,DS ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( RRS - Min( MDR ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server - FirstVNF_RAM ) )", "choosing": "( ( ( DS - CS ) + Min( RCSe ,RMSe ) ) / ( ( MLU + MUM ) * Min( RMSe ,MUR ) ) )", "obj1": 0.9168399168399168, "obj2": 0.06035870521337024}, {"determining": "( Min( ( ( DDR - ACS ) + ( FirstVNF_Mem + CRS ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Max( ( ( RCSe * ( DS / MUC ) ) - CS ),RRSe ) ),Min( ( MUM - RRSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - ACS ) ,( FirstVNF_RAM + ARS ) ),( ( MRS + CRS ) + Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) )", "obj1": 0.6694386694386695, "obj2": 0.2487869046484682}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( MUC / Min( ( MUC - MUC ) ,Max( RMSe,( ( ( MUC / Min( RMSe ,DS ) ) - MUM ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( RRS,PN ),( ARS / ACS ) ) ,( ( BR * MDR ) * ( CRS / AMS ) ) ) + ( ( ( RRS / DDR ) - ( FirstVNF_RAM_Server / MDR ) ) / Min( ( DDR + FirstVNF_RAM ) ,( PN - ARS ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) / Min( ( RCSe - RRSe ) ,Max( MUR,MUC ) ) ) - ( ( ( DS - CS ) + Max( MUM,RMSe ) ) - Max( ( MUC / RMSe ),( CS / MUR ) ) ) )", "obj1": 0.6403326403326404, "obj2": 0.2643581021960421}, {"determining": "( Min( FirstVNF_CPU ,Min( Max( Min( ( FirstVNF_Mem_Server - BR ) ,( MDR + ARS ) ),BR ) ,CRS ) ) * ( Max( ( ( BR / BR ) / FirstVNF_Mem_Server ),DDR ) / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( Max( MUR,DS ) + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,( ( MUC - MUM ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( Max( CRS,( ACS * CRS ) ) * RRS ) - ( Const + PN ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - Max( CS,Min( DS ,( RMSe * ( ( MLU - MLU ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / Min( DDR ,CRS ) )", "choosing": "Max( ( MUC / MUR ),( Max( ( DS / MLU ),( MUM * MLU ) ) * MUR ) )", "obj1": 0.6673596673596673, "obj2": 0.2533519362579169}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( CRS + MRS ) + ( MRS + DDR ) ) ,( Max( FirstVNF_RAM_Server,FirstVNF_CPU ) + ( ARS + PN ) ) ) * ( FirstVNF_CPU / AMS ) )", "choosing": "( ( Min( MUM ,Min( MUR ,( ( ( CS * ( MLU * RRSe ) ) - Min( MUR ,DS ) ) * RMSe ) ) ) / RCSe ) - Max( MUC,( Max( RRSe,MUC ) * MLU ) ) )", "obj1": 0.6486486486486487, "obj2": 0.258813556948602}, {"determining": "( Min( Max( MRS,FirstVNF_CPU ) ,( FirstVNF_CPU + Const ) ) - ( BR + ARS ) )", "choosing": "( ( CS + ( DS / ( MUM - RMSe ) ) ) - ( ( MUC * MUM ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_Mem ) / ( ( CRS - DDR ) - MRS ) )", "choosing": "( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( ( MUC * MUC ) - ( CS - RMSe ) ) ) / ( Max( Max( CS,MUM ),Max( CS,DS ) ) + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ARS ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( CS - MUC ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - Max( DDR,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( ( Max( ( DS / MUR ),( DS - RCSe ) ) * Min( ( DS + RMSe ) ,( RCSe * MUR ) ) ) / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_CPU_Server + MDR ) / ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) * ( Max( RRS,Const ) * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) / ( ( PN * FirstVNF_RAM ) - Min( ( Const * FirstVNF_CPU_Server ) ,( RRS - DDR ) ) ) )", "choosing": "( ( RRSe - MUM ) * ( Min( ( MUM * CS ) ,Max( DS,MUR ) ) + ( Max( MUM,MUM ) + Min( DS ,RRSe ) ) ) )", "obj1": 0.9147609147609148, "obj2": 0.07093640685899781}, {"determining": "( ( CRS + MRS ) - ( ( ACS * ARS ) - ( RRS * Const ) ) )", "choosing": "Min( ( Max( RRSe,MUC ) * MLU ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + BR ) / ACS ) - ( ( ACS * ARS ) - ( RRS * Const ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * ( RCSe * RCSe ) ) ,( ( MLU / RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + BR ) / ACS ) - ( Max( CRS,MDR ) - ( RRS * Const ) ) )", "choosing": "Min( ( DS * MUC ) ,( ( MLU / RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Const - DDR ),( FirstVNF_RAM - ( MDR + ( AMS - ( CRS / ARS ) ) ) ) )", "choosing": "Min( Min( ( Max( MLU,RRSe ) + ( DS * RMSe ) ) ,( ( MUC * DS ) - ( MUC + RCSe ) ) ) ,( Max( ( CS + CS ),( MUR + MUM ) ) * ( Min( RRSe ,DS ) / ( ( Min( Min( DS ,( MUC * RMSe ) ) ,( CS - DS ) ) + MUR ) - ( ( RCSe / ( MLU + ( MUM / MUM ) ) ) * Max( RMSe,( MUR * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.6756756756756757, "obj2": 0.21580239587079617}, {"determining": "Min( MDR ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + Min( MUM ,MLU ) ) )", "obj1": 0.7089397089397089, "obj2": 0.19158832435293965}, {"determining": "( Max( RRS,FirstVNF_CPU_Server ) - ( AMS / FirstVNF_CPU_Server ) )", "choosing": "( MUM * ( CS - MUC ) )", "obj1": 0.893970893970894, "obj2": 0.09994160162712452}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * DDR ) ) )", "choosing": "( ( ( MUR - ( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) ) ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR + AMS ) - ( FirstVNF_Mem + FirstVNF_RAM ) )", "choosing": "( ( RCSe - MUM ) - ( ( Max( DS,RCSe ) - ( MUM + RMSe ) ) * MUC ) )", "obj1": 0.9106029106029107, "obj2": 0.07383280488398565}, {"determining": "Min( ( DDR / Max( ( FirstVNF_RAM - FirstVNF_CPU ),( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( Min( MUR ,RRSe ) * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037236071108635144}, {"determining": "Min( ( Const - AMS ) ,( ( FirstVNF_Mem + MDR ) - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( RRSe * ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( DDR * FirstVNF_Mem ) / ( ( ACS - DDR ) - MRS ) ) - ( CRS - FirstVNF_Mem_Server ) )", "choosing": "( ( RCSe * MUR ) / ( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( MUC + MUC ) ) ) )", "obj1": 0.6943866943866944, "obj2": 0.2145024476135588}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( ( Const - AMS ) ,Max( PN,FirstVNF_Mem_Server ) ) - ( PN / MRS ) ) ) )", "choosing": "( Min( ( ( CS * DS ) * ( CS - MUR ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( Min( ( ARS * CRS ) ,MDR ) * Max( ( ( RRS - BR ) + CRS ),MRS ) ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( Max( ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( ( DS - MUC ) ,( MUR / RMSe ) ) ),Max( ( ( MUM + RMSe ) - ( RCSe * MUC ) ),( Max( CS,RCSe ) * ( MUM - MUR ) ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,MLU ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_CPU_Server * BR ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( ( RMSe + RRSe ) / ( ( ( RCSe * MUM ) * MUR ) * ( RMSe - DS ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( ACS * AMS ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ACS ) + ( FirstVNF_Mem + CRS ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Max( ( ( RCSe * ( DS / MUC ) ) - CS ),RRSe ) ),Min( ( MUM - RRSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server - PN ) ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( RMSe + MLU ) + ( RMSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - Min( Min( ( MUC * RRSe ) ,MUM ) ,( Min( RRSe ,( MLU + CS ) ) - MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,( ACS * CRS ) ) * RRS ) - ( Const + PN ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - Max( CS,Min( DS ,( RMSe * ( ( MLU - MLU ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ARS / Max( ( FirstVNF_CPU - BR ),CRS ) ) - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) ) / Min( DDR ,FirstVNF_RAM ) )", "choosing": "( ( Min( ( CS + DS ) ,( MUM - MLU ) ) - CS ) / ( ( RCSe / CS ) / MLU ) )", "obj1": 0.7879417879417879, "obj2": 0.14001577258581266}, {"determining": "( ( ( FirstVNF_Mem_Server - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Min( DDR ,FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),( ( RMSe - CS ) / ( RMSe / MLU ) ) )", "obj1": 0.7567567567567568, "obj2": 0.14924372874827324}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) - ( ( ( RRS - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RRSe * RMSe ) / Min( Min( RCSe ,DS ) ,( RCSe / ( ( Max( RMSe,MUM ) / ( MUR / MUM ) ) / Min( ( MUR + RMSe ) ,( MUM / CS ) ) ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( ARS / CRS ) ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUM / CS ),( MUM - RRSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( RRS + Min( ( ( CRS + MRS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( ( ( ( MUR + MLU ) * ( RRSe - MUC ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( DDR ,FirstVNF_RAM ) )", "choosing": "( ( RCSe * MUR ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server - ( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - Min( RRSe ,CS ) ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( FirstVNF_RAM_Server - ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( CS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( Max( MRS,RRS ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,( MUM / RCSe ) ) ) / Min( MLU ,( RMSe * Max( ( Max( CS,RMSe ) - MUC ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( CRS / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) ) + ( MUC + MUR ) ) )", "obj1": 0.9604989604989606, "obj2": 0.035877714562896665}, {"determining": "Min( Max( ( FirstVNF_Mem / CRS ),DDR ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS * ( ( BR + ACS ) - ( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( ( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) ) / Min( ( MUC - MUC ) ,Max( RMSe,( ( ( MUC / Min( RMSe ,DS ) ) - MUM ) * ( RCSe + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( ( Const - ACS ) ,( FirstVNF_RAM + ARS ) ),( ( FirstVNF_Mem_Server + CRS ) + Min( ARS ,FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC / Min( RMSe ,DS ) ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) )", "obj1": 0.6195426195426196, "obj2": 0.2915523062117264}, {"determining": "( DDR / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - Max( ( MUR / ( MUC - MUR ) ),( CS / RMSe ) ) ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) ) ,Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / ( MUC - MUR ) ),( CS / ( CS / CS ) ) ) - ( ( RCSe + ( RMSe + RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( BR ,MRS ) - Max( ACS,MRS ) ) + ( Max( MDR,FirstVNF_Mem ) * Min( RRS ,RRS ) ) ) / CRS ) ,( RRS / PN ) )", "choosing": "( Min( ( RMSe * Max( RRSe,RCSe ) ) ,Max( DS,CS ) ) / Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,CRS ) ) * ( ( BR * MDR ) / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,Max( DS,RCSe ) ) )", "obj1": 0.6528066528066528, "obj2": 0.25367261285633685}], "3": [{"determining": "( ( ( Min( BR ,MRS ) - Max( ACS,MRS ) ) + ( Max( MDR,FirstVNF_Mem ) * Min( RRS ,RRS ) ) ) - ( ( ACS * ARS ) - ( RRS * Const ) ) )", "choosing": "Min( Max( DS,MUM ) ,( ( MLU / RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / Min( ( ( ( ACS - FirstVNF_CPU_Server ) / ( BR * MDR ) ) * ( FirstVNF_Mem * BR ) ) ,CRS ) )", "choosing": "Max( ( MUC / MUR ),( ( ( RCSe - DS ) * ( MUR * DS ) ) / Max( DS,RCSe ) ) )", "obj1": 0.6133056133056133, "obj2": 0.2586644244808282}, {"determining": "( ( DDR * FirstVNF_Mem ) / ( ( ACS - DDR ) - Max( CRS,MDR ) ) )", "choosing": "( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( DS * MUC ) * ( RMSe * RCSe ) ) )", "obj1": 0.8503118503118503, "obj2": 0.057721959775690355}, {"determining": "( ( ( ( DDR + FirstVNF_CPU_Server ) - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,Max( Min( MUC ,( MUR / ( MUM * RCSe ) ) ),Max( MUM,DS ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( Const - AMS ) - Min( Min( ( FirstVNF_Mem + DDR ) ,( MRS / Const ) ) ,( Max( FirstVNF_RAM,Const ) - Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS / ( ( CS - ( DS + ( CS / DS ) ) ) / CS ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) )", "obj1": 0.9417879417879418, "obj2": 0.04381333819801429}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( CRS / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) ) + ( MUC + MUR ) ) )", "obj1": 0.9604989604989606, "obj2": 0.035877714562896665}, {"determining": "( ( ( BR / FirstVNF_RAM ) * ( FirstVNF_RAM - RRS ) ) + ( ( ( BR - RRS ) + FirstVNF_RAM_Server ) - ( Min( MRS ,DDR ) / ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_Mem_Server ),( ( AMS * Min( PN ,RRS ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RRSe * ( MUC / MUM ) ) * Min( ( MUM / MUM ) ,( RMSe / DS ) ) )", "obj1": 0.7297297297297297, "obj2": 0.19003325944948105}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),( MRS + BR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / ( ( MLU / RRSe ) - ( RMSe * RCSe ) ) ) ) )", "obj1": 0.7422037422037422, "obj2": 0.15354000294248543}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) - Max( MRS,RRS ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - RMSe ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / MUR ) ) )", "obj1": 0.9937629937629938, "obj2": 0.004874075651852956}, {"determining": "( ( ( FirstVNF_Mem_Server - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Min( DDR ,FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),( ( RMSe - CS ) / ( RMSe / MLU ) ) )", "obj1": 0.7567567567567568, "obj2": 0.14924372874827324}, {"determining": "( ( ( ( ( ARS / Max( ( FirstVNF_CPU - BR ),CRS ) ) - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) ) / Min( DDR ,FirstVNF_RAM ) )", "choosing": "( ( Min( ( CS + DS ) ,( MUM - MLU ) ) - CS ) / ( ( RCSe / CS ) / MLU ) )", "obj1": 0.7879417879417879, "obj2": 0.14001577258581266}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + RCSe ) )", "obj1": 0.7047817047817048, "obj2": 0.19756069688833428}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) ) / Min( DDR ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( RMSe / MLU ),Min( ( CS + DS ) ,( MUM - MLU ) ) )", "obj1": 0.7983367983367984, "obj2": 0.13512597980496058}, {"determining": "Max( ( ( ARS - ( FirstVNF_CPU_Server - MDR ) ) - DDR ),( FirstVNF_RAM - ( MDR + Max( MDR,( MRS / Const ) ) ) ) )", "choosing": "Min( Min( ( Max( MLU,RRSe ) + ( DS * RMSe ) ) ,( ( MUC * DS ) - ( MUC + RCSe ) ) ) ,( Max( ( DS * MUC ),( MUR + MUM ) ) * ( Min( RRSe ,DS ) / ( ( ( Max( ( MUC + DS ),RMSe ) - MUR ) * Max( ( ( CS * MUM ) + ( MUM * RRSe ) ),DS ) ) / RMSe ) ) ) )", "obj1": 0.6777546777546778, "obj2": 0.21143019348733721}, {"determining": "( ( ACS * RRS ) * Min( AMS ,CRS ) )", "choosing": "Max( ( MUC - ( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,Max( DS,RCSe ) ) ) ),( MUC - RCSe ) )", "obj1": 0.6735966735966736, "obj2": 0.24248177125497614}, {"determining": "Max( ( Const - DDR ),( FirstVNF_RAM - ( MDR + ( AMS - ( CRS / ARS ) ) ) ) )", "choosing": "Min( Min( ( Max( MLU,RRSe ) + ( DS * RMSe ) ) ,( ( MUC * DS ) - ( MUC + RCSe ) ) ) ,( Max( ( CS + CS ),( MUR + MUM ) ) * ( Min( RRSe ,DS ) / ( ( Min( Min( DS ,( MUC * RMSe ) ) ,( CS - DS ) ) + MUR ) - ( ( RCSe / ( MLU + ( MUM / MUM ) ) ) * Max( RMSe,( MUR * ( MLU / MUM ) ) ) ) ) ) ) )", "obj1": 0.6756756756756757, "obj2": 0.21580239587079617}, {"determining": "( Min( ( ACS * RRS ) ,Min( AMS ,CRS ) ) * ( ( BR * MDR ) / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + MUC ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,Max( DS,RCSe ) ) )", "obj1": 0.6465696465696466, "obj2": 0.2583722390080592}, {"determining": "Min( MDR ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + Min( MUM ,MLU ) ) )", "obj1": 0.7089397089397089, "obj2": 0.19158832435293965}, {"determining": "Max( ( MDR - ( Const + FirstVNF_Mem_Server ) ),( ( ACS - FirstVNF_CPU_Server ) / ( BR * MDR ) ) )", "choosing": "( ( ( RCSe - DS ) * ( MUR * DS ) ) / ( ( MLU / MLU ) * ( MLU - MUM ) ) )", "obj1": 0.6652806652806653, "obj2": 0.25101218152595217}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,CRS ) ) * ( ( BR * MDR ) / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,Max( DS,RCSe ) ) )", "obj1": 0.6528066528066528, "obj2": 0.25367261285633685}, {"determining": "Min( Max( ( Min( ACS ,ARS ) + Max( CRS,ACS ) ),( FirstVNF_RAM_Server + ( FirstVNF_RAM_Server * DDR ) ) ) ,Max( ( ( AMS / FirstVNF_RAM ) / ( ARS + FirstVNF_CPU ) ),( ( PN * ACS ) - Min( DDR ,ARS ) ) ) )", "choosing": "( Min( Max( ( MLU + CS ),MLU ) ,RMSe ) / ( MUR - MUM ) )", "obj1": 0.6694386694386695, "obj2": 0.24743315319554846}, {"determining": "Min( ( DDR / Max( ( FirstVNF_RAM - FirstVNF_CPU ),( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( Min( MUR ,RRSe ) * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037236071108635144}, {"determining": "( Min( FirstVNF_CPU ,Min( Max( Min( ( FirstVNF_Mem_Server - BR ) ,( MDR + ARS ) ),BR ) ,CRS ) ) * ( Max( ( ( BR / BR ) / FirstVNF_Mem_Server ),DDR ) / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( Max( MUR,DS ) + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,( ( MUC - MUM ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ACS ) + ( FirstVNF_Mem + CRS ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Max( ( ( RCSe * ( DS / MUC ) ) - CS ),RRSe ) ),Min( ( MUM - RRSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( MUC / Min( ( MUC - MUC ) ,Max( RMSe,( ( ( MUC / Min( RMSe ,DS ) ) - MUM ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,( ACS * CRS ) ) * RRS ) - ( Const + PN ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - Max( CS,Min( DS ,( RMSe * ( ( MLU - MLU ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,FirstVNF_CPU ) ,( FirstVNF_CPU + Const ) ) - ( BR + ARS ) )", "choosing": "( ( CS + ( DS / ( MUM - RMSe ) ) ) - ( ( MUC * MUM ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_Mem ) / ( ( CRS - DDR ) - MRS ) )", "choosing": "( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( ( MUC * MUC ) - ( CS - RMSe ) ) ) / ( Max( Max( CS,MUM ),Max( CS,DS ) ) + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ARS ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( CS - MUC ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - Max( DDR,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( ( Max( ( DS / MUR ),( DS - RCSe ) ) * Min( ( DS + RMSe ) ,( RCSe * MUR ) ) ) / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + MRS ) - ( ( ACS * ARS ) - ( RRS * Const ) ) )", "choosing": "Min( ( Max( RRSe,MUC ) * MLU ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + BR ) / ACS ) - ( ( ACS * ARS ) - ( RRS * Const ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * ( RCSe * RCSe ) ) ,( ( MLU / RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + BR ) / ACS ) - ( Max( CRS,MDR ) - ( RRS * Const ) ) )", "choosing": "Min( ( DS * MUC ) ,( ( MLU / RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * DDR ) ) )", "choosing": "( ( ( MUR - ( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) ) ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( ( FirstVNF_Mem + MDR ) - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( RRSe * ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( ( Const - AMS ) ,Max( PN,FirstVNF_Mem_Server ) ) - ( PN / MRS ) ) ) )", "choosing": "( Min( ( ( CS * DS ) * ( CS - MUR ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( Min( ( ARS * CRS ) ,MDR ) * Max( ( ( RRS - BR ) + CRS ),MRS ) ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( Max( ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( ( DS - MUC ) ,( MUR / RMSe ) ) ),Max( ( ( MUM + RMSe ) - ( RCSe * MUC ) ),( Max( CS,RCSe ) * ( MUM - MUR ) ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,MLU ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_CPU_Server * BR ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( ( RMSe + RRSe ) / ( ( ( RCSe * MUM ) * MUR ) * ( RMSe - DS ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( ACS * AMS ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ACS ) + ( FirstVNF_Mem + CRS ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Max( ( ( RCSe * ( DS / MUC ) ) - CS ),RRSe ) ),Min( ( MUM - RRSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server - PN ) ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( RMSe + MLU ) + ( RMSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - Min( Min( ( MUC * RRSe ) ,MUM ) ,( Min( RRSe ,( MLU + CS ) ) - MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,( ACS * CRS ) ) * RRS ) - ( Const + PN ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - Max( CS,Min( DS ,( RMSe * ( ( MLU - MLU ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) - ( ( ( RRS - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RRSe * RMSe ) / Min( Min( RCSe ,DS ) ,( RCSe / ( ( Max( RMSe,MUM ) / ( MUR / MUM ) ) / Min( ( MUR + RMSe ) ,( MUM / CS ) ) ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( ARS / CRS ) ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUM / CS ),( MUM - RRSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( RRS + Min( ( ( CRS + MRS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( ( ( ( MUR + MLU ) * ( RRSe - MUC ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( DDR ,FirstVNF_RAM ) )", "choosing": "( ( RCSe * MUR ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server - ( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - Min( RRSe ,CS ) ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( FirstVNF_RAM_Server - ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( CS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( Max( MRS,RRS ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,( MUM / RCSe ) ) ) / Min( MLU ,( RMSe * Max( ( Max( CS,RMSe ) - MUC ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem / CRS ),DDR ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS * ( ( BR + ACS ) - ( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( ( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) ) / Min( ( MUC - MUC ) ,Max( RMSe,( ( ( MUC / Min( RMSe ,DS ) ) - MUM ) * ( RCSe + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - Max( ( MUR / ( MUC - MUR ) ),( CS / RMSe ) ) ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) ) ,Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / ( MUC - MUR ) ),( CS / ( CS / CS ) ) ) - ( ( RCSe + ( RMSe + RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( BR ,MRS ) - Max( ACS,MRS ) ) + ( Max( MDR,FirstVNF_Mem ) * Min( RRS ,RRS ) ) ) / CRS ) ,( RRS / PN ) )", "choosing": "( Min( ( RMSe * Max( RRSe,RCSe ) ) ,Max( DS,CS ) ) / Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( Max( ( MRS + BR ),( MRS / Const ) ),( Max( AMS,ACS ) * Const ) ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( ( ( DS * ( Min( CS ,RMSe ) * ( RCSe * RCSe ) ) ) * MUC ) / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Min( Min( ( FirstVNF_Mem + DDR ) ,( MRS / Const ) ) ,( Max( FirstVNF_RAM,Const ) - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ,ARS ) ) ) )", "choosing": "( ( ( Max( CS,( ( ( ( RCSe + RCSe ) / MUM ) * CS ) - RRSe ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / MDR ) )", "choosing": "( ( ( MUR - ( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) ) ) - ( MLU / MLU ) ) / Min( ( RCSe - DS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( ( ( MDR * ( ( ( CRS - ( FirstVNF_Mem_Server - BR ) ) * Const ) / PN ) ) + DDR ) ,( MRS / Const ) ) )", "choosing": "( ( ( RMSe - ( Min( RCSe ,RRSe ) / ( ( Max( RRSe,RMSe ) * MUR ) * ( RMSe - DS ) ) ) ) * MUR ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + CRS ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / RCSe ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ACS ) + Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ,CRS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( RMSe * DS ) ,( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),Min( ( MUM + RRSe ) ,( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( AMS,ACS ) - ( Const + FirstVNF_Mem_Server ) ),( ( Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) ) - FirstVNF_CPU_Server ) / ( BR * MDR ) ) )", "choosing": "( ( ( RCSe - DS ) * ( ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) * DS ) ) / ( ( MLU / MUM ) * ( MLU - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( Const * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( ( ( ( ( RRSe + MUR ) - ( Min( MUC ,DS ) * ( RRSe + MLU ) ) ) + ( MUC + MUR ) ) * RMSe ) * ( ( ( RCSe - DS ) * ( MUR * DS ) ) / ( ( MLU / MUM ) * ( MLU - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( MRS ,( Max( Min( FirstVNF_Mem ,MDR ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + RRS ) ) ,( FirstVNF_CPU + Const ) ) - ( BR + ARS ) )", "choosing": "( ( ( MLU * MUM ) - MUM ) - ( ( MUC * ( ( RCSe * RCSe ) * ( ( Max( Min( MUC ,CS ),Max( RMSe,RRSe ) ) / ( ( MUR - DS ) - ( RRSe + MLU ) ) ) / MUC ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_RAM ) ) - Max( FirstVNF_RAM_Server,( Max( AMS,ACS ) * Const ) ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( Min( RRSe ,MUR ) / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * ( CS - ( DS + ( DS / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( MUM / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( ( RMSe * Max( ( Max( CS,RMSe ) - MUC ),MUM ) ) / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * Max( ( Max( CS,( DS / DS ) ) - MUC ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - FirstVNF_RAM ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( MLU + MUM ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ACS ) + MDR ) ,CRS ) - ( ACS * ( ( ( DDR * FirstVNF_Mem ) / ( ( ACS - DDR ) - MRS ) ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUC + MUC ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS * ( Max( ( FirstVNF_Mem_Server - ( ( DDR / FirstVNF_RAM_Server ) + ( ( Const - FirstVNF_Mem ) * CRS ) ) ),( FirstVNF_Mem_Server - PN ) ) - ( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( FirstVNF_RAM_Server - RRS ) ) + ( ( Const - FirstVNF_Mem ) * CRS ) )", "choosing": "Min( ( ( ( MUC / Min( RMSe ,DS ) ) - MUM ) * CS ) ,( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( ( FirstVNF_CPU_Server + MRS ) / ( CRS / ARS ) ) ,FirstVNF_RAM_Server ) ) ) ,CRS ) - ( ACS * AMS ) )", "choosing": "Max( ( CS * DS ),Min( ( MUM - RRSe ) ,( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server - DDR ) ) )", "choosing": "Min( MLU ,( ( RMSe + MLU ) + ( RMSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) ) ,Const )", "choosing": "( Max( ( MUR / ( ( ( MUC * DS ) - ( MUC + RCSe ) ) - MUR ) ),( CS / ( CS / CS ) ) ) - ( ( RCSe + ( RMSe + RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,( ( FirstVNF_Mem + MDR ) - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( RRSe * ( CS - MUR ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server - ( FirstVNF_Mem * ARS ) ) ) )", "choosing": "Min( MUM ,( ( RMSe + MLU ) + ( RMSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + MRS ) - ( ( Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * ARS ) - ( RRS * Const ) ) )", "choosing": "Min( ( Max( MUM,MUC ) * MLU ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( RRS,PN ),( ARS / ACS ) ) ,( ( BR * MDR ) * ( CRS / AMS ) ) ) + ( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) / Min( ( RCSe - RRSe ) ,Max( MUR,MUC ) ) ) - MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - Min( AMS ,RRS ) ) + MDR ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( Max( ( MUC - RMSe ),( MUC - RCSe ) ),Min( ( MUM - RRSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Max( AMS,ACS ) * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUC * MUC ) / MUM ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) ) - Max( FirstVNF_RAM_Server,( Max( AMS,ACS ) * Const ) ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( ( ( ( MUR - MLU ) - ( MLU / MLU ) ) * MUC ) / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / Max( ( FirstVNF_RAM - FirstVNF_CPU ),( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( MDR - ( FirstVNF_Mem / CRS ) ) )", "choosing": "Max( ( RRSe * Min( MLU ,RMSe ) ),( Min( MUR ,RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( ( ACS / Max( ( ( RRS - BR ) + CRS ),MRS ) ) * ( ACS * PN ) ) - ( ( FirstVNF_RAM_Server * RRS ) * ( AMS * FirstVNF_RAM_Server ) ) ) ,CRS ) - ( ACS * AMS ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( Max( ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( ( DS - MUC ) ,( MUR / RMSe ) ) ),Max( ( ( MUM + RMSe ) - ( RCSe * MUC ) ),( Max( CS,RCSe ) * ( MUM - MUR ) ) ) ) / ( ( RMSe * MUC ) - MUR ) ) ,( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / MRS ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,Max( RRSe,MUC ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( ( ( FirstVNF_Mem + MDR ) - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) ) - ( ( ( RRS - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( ( ( RMSe - ( RRSe * ( CS - MUR ) ) ) - MUR ) / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RRSe * RMSe ) / Min( Min( RCSe ,DS ) ,( RCSe / ( ( Max( RMSe,MUM ) / ( MUR / MUM ) ) / Min( ( MUR + RMSe ) ,( MUM / CS ) ) ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( BR ,MRS ) - Max( ACS,MRS ) ) + ( Max( MDR,FirstVNF_Mem ) * Min( RRS ,RRS ) ) ) - ( ( ACS * ARS ) - ( RRS * Const ) ) )", "choosing": "Min( Max( DS,MUM ) ,( ( MLU / RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) / Min( ( ( ( ACS - FirstVNF_CPU_Server ) / ( BR * MDR ) ) * ( FirstVNF_Mem * BR ) ) ,CRS ) )", "choosing": "Max( ( MUC / MUR ),( ( ( RCSe - DS ) * ( MUR * DS ) ) / Max( DS,RCSe ) ) )", "obj1": 0.6133056133056133, "obj2": 0.2586644244808282}, {"determining": "Min( MDR ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + Min( Min( ( RMSe * Max( RRSe,RCSe ) ) ,Max( DS,CS ) ) ,MLU ) ) )", "obj1": 0.6673596673596673, "obj2": 0.19347815152005995}, {"determining": "( ( ( ( DDR + FirstVNF_CPU_Server ) - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),Min( ( CS + DS ) ,Max( Min( MUC ,( MUR / ( MUM * RCSe ) ) ),Max( MUM,DS ) ) ) )", "obj1": 0.8066528066528067, "obj2": 0.11277765506620463}, {"determining": "( ( DDR * FirstVNF_Mem ) / ( ( ACS - DDR ) - Max( CRS,MDR ) ) )", "choosing": "( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( DS * MUC ) * ( RMSe * RCSe ) ) )", "obj1": 0.8503118503118503, "obj2": 0.057721959775690355}, {"determining": "( DDR / ( ( ACS - DDR ) - Max( CRS,MDR ) ) )", "choosing": "( ( MUM - ( MUC / MLU ) ) * ( ( DS * MUC ) * ( RMSe * RCSe ) ) )", "obj1": 0.8316008316008316, "obj2": 0.06681232355950133}, {"determining": "( ( Const - AMS ) - Min( Min( ( ACS / MDR ) ,( MRS / Const ) ) ,( Max( FirstVNF_RAM,Const ) - Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS / ( ( CS - ( DS + DS ) ) / CS ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) )", "obj1": 0.9334719334719335, "obj2": 0.04474355187729147}, {"determining": "Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,Min( AMS ,RRS ) )", "choosing": "( ( MUC * RCSe ) - ( MUC + RCSe ) )", "obj1": 0.659043659043659, "obj2": 0.24977830029760462}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( CRS / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) ) + ( MUC + MUR ) ) )", "obj1": 0.9604989604989606, "obj2": 0.035877714562896665}, {"determining": "( ( ( BR / FirstVNF_RAM ) * ( FirstVNF_RAM - RRS ) ) + ( ( ( BR - RRS ) + FirstVNF_RAM_Server ) - ( Min( MRS ,DDR ) / ( FirstVNF_RAM_Server / Max( Max( BR,FirstVNF_Mem_Server ),( ( AMS * Min( PN ,RRS ) ) - FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RRSe * ( MUC / MUM ) ) * Min( ( MUM / MUM ) ,( RMSe / DS ) ) )", "obj1": 0.7297297297297297, "obj2": 0.19003325944948105}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),( MRS + BR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / ( ( MLU / RRSe ) - ( RMSe * RCSe ) ) ) ) )", "obj1": 0.7422037422037422, "obj2": 0.15354000294248543}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) - Min( Min( ( FirstVNF_Mem + DDR ) ,( MRS / Const ) ) ,( Max( FirstVNF_RAM,Const ) - Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS / ( ( CS - ( DS + ( CS / DS ) ) ) / CS ) ) * RMSe )", "obj1": 0.9833679833679834, "obj2": 0.005731102910001977}, {"determining": "Min( MDR ,( Const - DDR ) )", "choosing": "( ( MUC * DS ) - ( MUC + Min( MUM ,MLU ) ) )", "obj1": 0.7089397089397089, "obj2": 0.19158832435293965}, {"determining": "( ( ( ( ( FirstVNF_Mem_Server - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) ) / Min( DDR ,FirstVNF_RAM ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) )", "choosing": "Max( ( RMSe / MLU ),Min( ( CS + DS ) ,( MUM - MLU ) ) )", "obj1": 0.7983367983367984, "obj2": 0.13512597980496058}, {"determining": "( ( ( FirstVNF_Mem_Server - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - Min( DDR ,FirstVNF_RAM ) ) )", "choosing": "Max( ( ( MUM / MUM ) + ( RCSe * MUR ) ),( ( RMSe - CS ) / ( RMSe / MLU ) ) )", "obj1": 0.7567567567567568, "obj2": 0.14924372874827324}, {"determining": "Max( ( ( ARS - ( FirstVNF_CPU_Server - MDR ) ) - DDR ),( FirstVNF_RAM - ( MDR + Max( MDR,( MRS / Const ) ) ) ) )", "choosing": "Min( Min( ( Max( MLU,RRSe ) + ( DS * RMSe ) ) ,( ( MUC * DS ) - ( MUC + RCSe ) ) ) ,( Max( ( DS * MUC ),( MUR + MUM ) ) * ( Min( RRSe ,DS ) / ( ( ( Max( ( MUC + DS ),RMSe ) - MUR ) * Max( ( ( CS * MUM ) + ( MUM * RRSe ) ),DS ) ) / RMSe ) ) ) )", "obj1": 0.7837837837837838, "obj2": 0.14384351050936806}, {"determining": "( ( Const - AMS ) - Min( Min( ( FirstVNF_Mem + DDR ) ,( MRS / Const ) ) ,( Max( FirstVNF_RAM,Const ) - Max( MRS,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS / ( ( CS - ( DS + ( CS / DS ) ) ) / CS ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) )", "obj1": 0.9417879417879418, "obj2": 0.04381333819801429}, {"determining": "( Min( ( ACS * RRS ) ,Min( AMS ,CRS ) ) * ( ( BR * AMS ) / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + MUC ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( MLU + ( MUM / MUM ) ) ,Max( DS,RCSe ) ) )", "obj1": 0.6382536382536382, "obj2": 0.2580365930303263}, {"determining": "( ( ( ( ( ARS / Max( ( FirstVNF_CPU - BR ),CRS ) ) - Const ) / ( Const - DDR ) ) / ( ( FirstVNF_RAM_Server / FirstVNF_Mem ) - ( RRS + DDR ) ) ) / Min( DDR ,FirstVNF_RAM ) )", "choosing": "( ( Min( ( CS + DS ) ,( MUM - MLU ) ) - CS ) / ( ( RCSe / CS ) / MLU ) )", "obj1": 0.7879417879417879, "obj2": 0.14001577258581266}, {"determining": "( Min( FirstVNF_CPU ,Min( Max( Min( ( FirstVNF_Mem_Server - BR ) ,( MDR + ARS ) ),BR ) ,CRS ) ) * ( Max( ( ( BR / BR ) / FirstVNF_Mem_Server ),DDR ) / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( Max( MUR,DS ) + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,( ( MUC - MUM ) * ( MLU - CS ) ) ) )", "obj1": 0.6507276507276507, "obj2": 0.2571222829609951}, {"determining": "( Min( FirstVNF_CPU ,Min( AMS ,CRS ) ) * ( ( BR * MDR ) / FirstVNF_Mem ) )", "choosing": "( ( ( Max( DS,RRSe ) + ( MUC + RMSe ) ) * Min( ( CS * RRSe ) ,( RRSe + MUC ) ) ) - Min( ( Max( RMSe,MLU ) - ( MUR - MUC ) ) ,Max( DS,RCSe ) ) )", "obj1": 0.6528066528066528, "obj2": 0.25367261285633685}, {"determining": "( ( Max( FirstVNF_RAM_Server,MRS ) - ( Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) ) - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem_Server - CRS ) - ( ACS / MDR ) ) )", "choosing": "( Min( ( MUR - RMSe ) ,Max( DS,MUM ) ) - Min( ( CS / RCSe ) ,( RMSe / ( ( CS * MUM ) / MUM ) ) ) )", "obj1": 0.9937629937629938, "obj2": 0.004859416984765887}, {"determining": "Min( ( DDR / Max( ( FirstVNF_RAM - FirstVNF_CPU ),( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),( Min( MUR ,RRSe ) * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037236071108635144}, {"determining": "Min( ( DDR / Max( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ),( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * Max( ( Max( CS,( DS / DS ) ) - MUC ),MUM ) ),( Min( MUR ,RRSe ) * MUR ) )", "obj1": 0.9958419958419958, "obj2": 0.0037236071108635144}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,RRS ) - Max( ( FirstVNF_Mem / CRS ),DDR ) )", "choosing": "Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( ( PN / PN ) + FirstVNF_Mem ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( CS - RMSe ) / Min( MUC ,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN + MDR ) ,( FirstVNF_RAM - CRS ) ) - Max( ( MRS + DDR ),Max( FirstVNF_Mem_Server,DDR ) ) )", "choosing": "( ( Max( CS,MUC ) * ( MUC - RCSe ) ) * Max( ( CS - CS ),( MUR / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ACS ) + ( FirstVNF_Mem + CRS ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Max( ( ( RCSe * ( DS / MUC ) ) - CS ),RRSe ) ),Min( ( MUM - RRSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( MUC / Min( ( MUC - MUC ) ,Max( RMSe,( ( ( MUC / Min( RMSe ,DS ) ) - MUM ) * CS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,( ACS * CRS ) ) * RRS ) - ( Const + PN ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - Max( CS,Min( DS ,( RMSe * ( ( MLU - MLU ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - MRS ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( MRS,FirstVNF_CPU ) ,( FirstVNF_CPU + Const ) ) - ( BR + ARS ) )", "choosing": "( ( CS + ( DS / ( MUM - RMSe ) ) ) - ( ( MUC * MUM ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR * FirstVNF_Mem ) / ( ( CRS - DDR ) - MRS ) )", "choosing": "( ( ( MUC / DS ) - ( MUC / MLU ) ) * ( ( RRSe * MUM ) - ( ( Min( ( DS * CS ) ,( MUC * MUM ) ) * ( ( MUC * MUC ) - ( CS - RMSe ) ) ) / ( Max( Max( CS,MUM ),Max( CS,DS ) ) + ( ( RMSe + CS ) / ( RCSe / MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ARS ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( CS - MUC ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - Max( DDR,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( ( Max( ( DS / MUR ),( DS - RCSe ) ) * Min( ( DS + RMSe ) ,( RCSe * MUR ) ) ) / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + MRS ) - ( ( ACS * ARS ) - ( RRS * Const ) ) )", "choosing": "Min( ( Max( RRSe,MUC ) * MLU ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + BR ) / ACS ) - ( ( ACS * ARS ) - ( RRS * Const ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) * ( RCSe * RCSe ) ) ,( ( MLU / RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS + BR ) / ACS ) - ( Max( CRS,MDR ) - ( RRS * Const ) ) )", "choosing": "Min( ( DS * MUC ) ,( ( MLU / RRSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( ( FirstVNF_CPU + FirstVNF_RAM_Server ) * DDR ) ) )", "choosing": "( ( ( MUR - ( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) ) ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( ( FirstVNF_Mem + MDR ) - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( RRSe * ( CS - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( ( Const - AMS ) ,Max( PN,FirstVNF_Mem_Server ) ) - ( PN / MRS ) ) ) )", "choosing": "( Min( ( ( CS * DS ) * ( CS - MUR ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( ( BR * AMS ) + Max( PN,ARS ) ) ,( ( ACS + RRS ) - ( FirstVNF_Mem_Server / PN ) ) ) * ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) - ( PN / MRS ) ) ) ) ,Max( PN,FirstVNF_Mem_Server ) )", "choosing": "( ( CS * DS ) * ( Max( ( DS / MUM ),Max( CS,MUC ) ) + ( ( MUR / MUM ) + ( DS + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server - MRS ) + ( Const + FirstVNF_CPU_Server ) ) - ( Min( MDR ,PN ) + ( PN * FirstVNF_RAM_Server ) ) ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( Min( ( ARS * CRS ) ,MDR ) * Max( ( ( RRS - BR ) + CRS ),MRS ) ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( MLU / RMSe ) ) ) + ( Max( ( Min( ( DS / RMSe ) ,( DS * MLU ) ) * Min( ( DS - MUC ) ,( MUR / RMSe ) ) ),Max( ( ( MUM + RMSe ) - ( RCSe * MUC ) ),( Max( CS,RCSe ) * ( MUM - MUR ) ) ) ) * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / ( FirstVNF_Mem * ARS ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,MLU ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_CPU_Server * BR ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( ( RMSe + RRSe ) / ( ( ( RCSe * MUM ) * MUR ) * ( RMSe - DS ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - Const ) ,CRS ) - ( ACS * AMS ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUM - RRSe ) ,( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ACS ) + ( FirstVNF_Mem + CRS ) ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( ( ( RCSe + DS ) * Max( ( ( RCSe * ( DS / MUC ) ) - CS ),RRSe ) ),Min( ( MUM - RRSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server - PN ) ) )", "choosing": "Min( Min( ( MLU / MUM ) ,( MUM / RRSe ) ) ,( ( RMSe + MLU ) + ( RMSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( RMSe / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - Min( Min( ( MUC * RRSe ) ,MUM ) ,( Min( RRSe ,( MLU + CS ) ) - MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( CRS,( ACS * CRS ) ) * RRS ) - ( Const + PN ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - Max( CS,Min( DS ,( RMSe * ( ( MLU - MLU ) + MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - Min( FirstVNF_Mem_Server ,AMS ) ) - ( ( ( RRS - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( Min( ( RRSe / MUC ) ,Max( MUR,DS ) ) * Max( RRSe,MUR ) ) * ( ( ( RRSe * RMSe ) / Min( Min( RCSe ,DS ) ,( RCSe / ( ( Max( RMSe,MUM ) / ( MUR / MUM ) ) / Min( ( MUR + RMSe ) ,( MUM / CS ) ) ) ) ) ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * ( ARS / CRS ) ) ) / Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( Max( ( MUM / CS ),( MUM - RRSe ) ) / Min( MLU ,( RMSe * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( RRS + Min( ( ( CRS + MRS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( ( ( ( MUR + MLU ) * ( RRSe - MUC ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( DDR ,FirstVNF_RAM ) )", "choosing": "( ( RCSe * MUR ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) ) * ( FirstVNF_RAM_Server - ( BR * FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS - Min( RRSe ,CS ) ) - DS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( FirstVNF_RAM_Server - ( BR * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( CS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( Max( MRS,RRS ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,( MUM / RCSe ) ) ) / Min( MLU ,( RMSe * Max( ( Max( CS,RMSe ) - MUC ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( ( FirstVNF_Mem / CRS ),DDR ) ,Min( Min( ( FirstVNF_RAM_Server - BR ) ,( CRS - MDR ) ) ,( ( CRS * ACS ) - ( FirstVNF_Mem * FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( MUR * ( RCSe / ( Min( ( ( DS / MUM ) + Min( MLU ,RMSe ) ) ,( ( RMSe * MUC ) + ( MUC + MUR ) ) ) / RMSe ) ) ) + ( CS * RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS * ( ( BR + ACS ) - ( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * ( ( ( ( MUR / RRSe ) - ( RMSe * RRSe ) ) + ( Min( RCSe ,MUM ) + Max( MUC,MUM ) ) ) / Min( ( MUC - MUC ) ,Max( RMSe,( ( ( MUC / Min( RMSe ,DS ) ) - MUM ) * ( RCSe + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( MRS - MDR ) / ( Const * DDR ) ) )", "choosing": "( ( ( MUR - Max( ( MUR / ( MUC - MUR ) ),( CS / RMSe ) ) ) - ( MLU / MLU ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) ) ,Max( MRS,FirstVNF_Mem_Server ) )", "choosing": "( Max( ( MUR / ( MUC - MUR ) ),( CS / ( CS / CS ) ) ) - ( ( RCSe + ( RMSe + RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( Min( BR ,MRS ) - Max( ACS,MRS ) ) + ( Max( MDR,FirstVNF_Mem ) * Min( RRS ,RRS ) ) ) / CRS ) ,( RRS / PN ) )", "choosing": "( Min( ( RMSe * Max( RRSe,RCSe ) ) ,Max( DS,CS ) ) / Max( DS,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * RRS ) - Max( Max( ( MRS + BR ),( MRS / Const ) ),( Max( AMS,ACS ) * Const ) ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( ( ( DS * ( Min( CS ,RMSe ) * ( RCSe * RCSe ) ) ) * MUC ) / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Min( Min( ( FirstVNF_Mem + DDR ) ,( MRS / Const ) ) ,( Max( FirstVNF_RAM,Const ) - Max( MRS,FirstVNF_CPU_Server ) ) ) ) ,ARS ) ) ) )", "choosing": "( ( ( Max( CS,( ( ( ( RCSe + RCSe ) / MUM ) * CS ) - RRSe ) ) * Min( Min( MUC ,RMSe ) ,( CS - RCSe ) ) ) * Max( Min( ( MUC + MUC ) ,( DS * CS ) ),Min( ( MLU / RRSe ) ,( DS * RCSe ) ) ) ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / MDR ) )", "choosing": "( ( ( MUR - ( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * DS ) ) ) ) - ( MLU / MLU ) ) / Min( ( RCSe - DS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,RRS ) - Min( ( ( MDR * ( ( ( CRS - ( FirstVNF_Mem_Server - BR ) ) * Const ) / PN ) ) + DDR ) ,( MRS / Const ) ) )", "choosing": "( ( ( RMSe - ( Min( RCSe ,RRSe ) / ( ( Max( RRSe,RMSe ) * MUR ) * ( RMSe - DS ) ) ) ) * MUR ) / CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + CRS ) ,ARS ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( DS / RCSe ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ACS ) + Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ) ,CRS ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( RMSe * DS ) ,( MUC * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / FirstVNF_RAM_Server ) ,( MDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( RRSe * RCSe ),Min( ( MUM + RRSe ) ,( MLU + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( Max( AMS,ACS ) - ( Const + FirstVNF_Mem_Server ) ),( ( Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) ) - FirstVNF_CPU_Server ) / ( BR * MDR ) ) )", "choosing": "( ( ( RCSe - DS ) * ( ( ( ( CS * MUM ) / MUM ) / ( RCSe * MUC ) ) * DS ) ) / ( ( MLU / MUM ) * ( MLU - MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU + FirstVNF_Mem ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( Const * ( PN / ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( ( ( ( ( RRSe + MUR ) - ( Min( MUC ,DS ) * ( RRSe + MLU ) ) ) + ( MUC + MUR ) ) * RMSe ) * ( ( ( RCSe - DS ) * ( MUR * DS ) ) / ( ( MLU / MUM ) * ( MLU - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( MRS ,( Max( Min( FirstVNF_Mem ,MDR ),( FirstVNF_CPU / FirstVNF_CPU_Server ) ) + RRS ) ) ,( FirstVNF_CPU + Const ) ) - ( BR + ARS ) )", "choosing": "( ( ( MLU * MUM ) - MUM ) - ( ( MUC * ( ( RCSe * RCSe ) * ( ( Max( Min( MUC ,CS ),Max( RMSe,RRSe ) ) / ( ( MUR - DS ) - ( RRSe + MLU ) ) ) / MUC ) ) ) * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU * ( BR / FirstVNF_RAM ) ) - Max( FirstVNF_RAM_Server,( Max( AMS,ACS ) * Const ) ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( Min( RRSe ,MUR ) / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( ( ( CS * MUM ) / MUM ) / ( RCSe * ( CS - ( DS + ( DS / DS ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( ( BR - MDR ) + ( CRS - AMS ) ) + ( Min( AMS ,BR ) / ( DDR + FirstVNF_CPU ) ) ) ,( Max( ( RRS + Const ),( FirstVNF_RAM_Server * DDR ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM ) * ( PN / ARS ) ) ) ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( CS / ( ( CS - ( DS + ( MUM / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( ( RMSe * Max( ( Max( CS,RMSe ) - MUC ),MUM ) ) / ( ( CS - ( DS + ( DS / DS ) ) ) / CS ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( PN,PN ) - ( DDR * FirstVNF_RAM_Server ) ) / Max( ( Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,ARS ) * ( FirstVNF_Mem_Server / FirstVNF_Mem ) ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RMSe / RMSe ) * Max( RCSe,RCSe ) ) / Min( MLU ,( RMSe * Max( ( Max( CS,( DS / DS ) ) - MUC ),MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( Min( AMS ,FirstVNF_RAM ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) - ( ( Const - FirstVNF_RAM ) + ( FirstVNF_RAM_Server - MRS ) ) ) - ( ( ( FirstVNF_CPU_Server - ARS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) + ( ( ARS * FirstVNF_RAM ) / Min( MRS ,ARS ) ) ) )", "choosing": "( ( MLU + MUM ) * ( ( ( RCSe * RMSe ) / DS ) / CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - ACS ) + MDR ) ,CRS ) - ( ACS * ( ( ( DDR * FirstVNF_Mem ) / ( ( ACS - DDR ) - MRS ) ) - ( CRS - FirstVNF_Mem_Server ) ) ) )", "choosing": "Max( ( ( RCSe + DS ) * Min( CS ,RMSe ) ),Min( ( MUC + MUC ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ACS * ( Max( ( FirstVNF_Mem_Server - ( ( DDR / FirstVNF_RAM_Server ) + ( ( Const - FirstVNF_Mem ) * CRS ) ) ),( FirstVNF_Mem_Server - PN ) ) - ( FirstVNF_RAM_Server - RRS ) ) )", "choosing": "( Min( Max( ( RMSe / MUR ),Min( MUR ,RMSe ) ) ,Max( ( DS - MUC ),( MUC + MUC ) ) ) * MLU )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( FirstVNF_Mem_Server - ACS ),( FirstVNF_Mem_Server - PN ) ) - ( FirstVNF_RAM_Server - RRS ) ) + ( ( Const - FirstVNF_Mem ) * CRS ) )", "choosing": "Min( ( ( ( MUC / Min( RMSe ,DS ) ) - MUM ) * CS ) ,( MLU + CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( PN - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * Min( ( ( FirstVNF_CPU_Server + MRS ) / ( CRS / ARS ) ) ,FirstVNF_RAM_Server ) ) ) ,CRS ) - ( ACS * AMS ) )", "choosing": "Max( ( CS * DS ),Min( ( MUM - RRSe ) ,( MLU * CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server - DDR ) ) )", "choosing": "Min( MLU ,( ( RMSe + MLU ) + ( RMSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) ) ,Const )", "choosing": "( Max( ( MUR / ( ( ( MUC * DS ) - ( MUC + RCSe ) ) - MUR ) ),( CS / ( CS / CS ) ) ) - ( ( RCSe + ( RMSe + RRSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Const - AMS ) ,( FirstVNF_Mem - ( ( FirstVNF_Mem_Server * ( PN + FirstVNF_Mem ) ) + Min( ( ( CRS + ACS ) + Max( RRS,BR ) ) ,( ( FirstVNF_Mem + MDR ) - Min( Max( ( FirstVNF_RAM_Server * CRS ),DDR ) ,FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( CS * DS ) * ( ( RMSe - ( RRSe * ( CS - MUR ) ) ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR - FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,( FirstVNF_RAM_Server - ( FirstVNF_Mem * ARS ) ) ) )", "choosing": "Min( MUM ,( ( RMSe + MLU ) + ( RMSe - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS + MRS ) - ( ( Max( ( FirstVNF_CPU_Server * DDR ),( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * ARS ) - ( RRS * Const ) ) )", "choosing": "Min( ( Max( MUM,MUC ) * MLU ) ,( Max( RCSe,RMSe ) - ( RMSe * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Max( Max( RRS,PN ),( ARS / ACS ) ) ,( ( BR * MDR ) * ( CRS / AMS ) ) ) + ( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) ) )", "choosing": "( ( ( ( MLU + MLU ) * ( MUR * RCSe ) ) / Min( ( RCSe - RRSe ) ,Max( MUR,MUC ) ) ) - MUC )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( DDR - Min( AMS ,RRS ) ) + MDR ) ,CRS ) - ( ACS * FirstVNF_CPU ) )", "choosing": "Max( Max( ( MUC - RMSe ),( MUC - RCSe ) ),Min( ( MUM - RRSe ) ,Max( MUR,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Max( AMS,ACS ) * DDR ) ) )", "choosing": "( ( ( MUR - MLU ) - ( ( MUC * MUC ) / MUM ) ) / Min( ( CS / CS ) ,( MUC / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MDR + ACS ) + ( BR - MDR ) ) / ( ( MRS - MDR ) / ( Const * DDR ) ) ) - Max( FirstVNF_RAM_Server,( Max( AMS,ACS ) * Const ) ) )", "choosing": "( ( ( Max( MLU,MUR ) - Min( MUM ,RMSe ) ) + ( Min( MUR ,RMSe ) - ( MUM / MUR ) ) ) - ( ( ( ( ( ( MUR - MLU ) - ( MLU / MLU ) ) * MUC ) / MUM ) * Min( MUM ,DS ) ) / ( ( RMSe + RRSe ) - ( MLU - DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR / Max( ( FirstVNF_RAM - FirstVNF_CPU ),( FirstVNF_Mem_Server / FirstVNF_Mem ) ) ) ,( MDR - ( FirstVNF_Mem / CRS ) ) )", "choosing": "Max( ( RRSe * Min( MLU ,RMSe ) ),( Min( MUR ,RRSe ) * MUR ) )", "obj1": 1.0, "obj2": 0.0}]}