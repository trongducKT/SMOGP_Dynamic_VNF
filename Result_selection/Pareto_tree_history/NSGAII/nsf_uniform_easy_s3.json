{"1": [{"determining": "Min( ( FirstVNF_RAM_Server / ACS ) ,Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe - MUC ) + ( MLU / MUM ) )", "obj1": 0.2833333333333333, "obj2": 0.632667963744135}, {"determining": "Max( ( ARS / ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( DS * MLU ) )", "obj1": 0.3814814814814815, "obj2": 0.5687960445669424}, {"determining": "( ( PN + FirstVNF_RAM_Server ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,MLU ) + Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) )", "choosing": "Max( ( CS / MUM ),( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( RRSe - MUM ) - Min( RCSe ,MLU ) )", "obj1": 0.14444444444444443, "obj2": 0.77790062801437}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( RCSe - RMSe ) )", "obj1": 0.5592592592592592, "obj2": 0.3806003206518876}, {"determining": "Min( ( ACS - RRS ) ,( MDR - MDR ) )", "choosing": "( Max( MUC,MUC ) - ( RCSe * MUM ) )", "obj1": 0.24444444444444444, "obj2": 0.6617697542670059}, {"determining": "( ( ( BR - DDR ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( MDR ,BR ) * ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( MUM,MUM ) - ( RMSe * DS ) ) + ( ( MUC - DS ) / Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Const * ACS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC / MLU ),( ( MUC * RCSe ) - ( MUC + MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.015491624681498894}, {"determining": "( Min( ( PN - ARS ) ,( ARS + PN ) ) * Min( Min( CRS ,Const ) ,Max( AMS,BR ) ) )", "choosing": "( ( ( DS * MLU ) + ( RCSe + RCSe ) ) - Min( ( DS * RRSe ) ,( CS - RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - AMS ) ) )", "choosing": "Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + ( RRS / MRS ) ) - ( ARS * ARS ) )", "choosing": "( Max( Max( MLU,RMSe ),( CS * RCSe ) ) + ( ( MUC * DS ) - ( DS - MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - ACS ) + Min( AMS ,Const ) ) + Min( Min( Const ,FirstVNF_RAM ) ,( PN + ACS ) ) )", "choosing": "Min( ( Min( MUR ,MUR ) - ( RMSe - DS ) ) ,Max( Min( MUR ,MUM ),( CS + MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem ) - Const ) + Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUR / MUM ) + Min( RMSe ,DS ) ) ,( ( MUC + MUR ) - Min( DS ,MUC ) ) )", "obj1": 0.35555555555555557, "obj2": 0.6227981376582419}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * ( RRSe + MLU ) )", "obj1": 0.8944444444444445, "obj2": 0.10481566619763366}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * DDR ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.7814814814814814, "obj2": 0.2069677681802837}, {"determining": "( ( Min( ( AMS + MDR ) ,Max( PN,BR ) ) * ( ( PN / ACS ) - Max( ACS,CRS ) ) ) - Max( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ),( ( MDR + PN ) + ( ACS * AMS ) ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,FirstVNF_RAM ) ,( BR / DDR ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),( RCSe * RRSe ) ) ) )", "obj1": 0.9, "obj2": 0.1014333011092288}, {"determining": "( ( ARS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RCSe + MUC ) + MUR ),Min( CS ,( RCSe / MUC ) ) ) - ( RRSe / MUM ) )", "obj1": 0.42592592592592593, "obj2": 0.5544020797661438}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * ( ACS + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( ( RMSe - RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,Max( CS,MUC ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.3085695985665814}, {"determining": "Min( Min( FirstVNF_CPU_Server ,CRS ) ,Max( FirstVNF_Mem_Server,PN ) )", "choosing": "( ( Max( Min( RCSe ,MUR ),Min( MUM ,RRSe ) ) / ( ( DS - MLU ) + ( RRSe / MUR ) ) ) * Max( ( Max( MUC,MLU ) / ( CS + MUC ) ),( Max( RRSe,MUR ) / ( MUC - MUM ) ) ) )", "obj1": 0.2111111111111111, "obj2": 0.7121825853370053}, {"determining": "( ( DDR - FirstVNF_Mem ) / Min( MDR ,FirstVNF_RAM_Server ) )", "choosing": "( ( RMSe - MLU ) / ( DS - RRSe ) )", "obj1": 0.7759259259259259, "obj2": 0.22448114455900708}, {"determining": "Min( ( Max( Min( ACS ,Const ),( MDR * Const ) ) / ( ( BR - FirstVNF_CPU_Server ) + Max( RRS,ARS ) ) ) ,Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) ) )", "choosing": "Max( Max( ( ( MUM * CS ) / Max( RCSe,MUC ) ),( ( MUM * RRSe ) * ( MUC + MLU ) ) ),Max( Min( ( RRSe * MUC ) ,( RCSe - MUC ) ),( ( RCSe + RRSe ) * ( CS / MUR ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.054105076145172154}, {"determining": "Min( Max( MDR,( FirstVNF_CPU_Server * ACS ) ) ,( FirstVNF_Mem + ( PN * ( FirstVNF_CPU / FirstVNF_CPU ) ) ) )", "choosing": "( ( Max( ( CS / MLU ),( RMSe + MUC ) ) / Max( ( RRSe * RCSe ),Min( DS ,RRSe ) ) ) * ( Min( ( DS / MLU ) ,Max( MUR,RRSe ) ) * ( ( MUC - CS ) * ( CS * MUR ) ) ) )", "obj1": 0.26481481481481484, "obj2": 0.6587232277391522}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.737739112742733}], "2": [{"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - AMS ) ) )", "choosing": "Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN + FirstVNF_RAM_Server ) / ( DDR - FirstVNF_CPU_Server ) )", "choosing": "( Max( MUR,MLU ) + Max( DS,DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( RRSe - MUM ) - Min( RCSe ,MLU ) )", "obj1": 0.14444444444444443, "obj2": 0.77790062801437}, {"determining": "( Min( ( PN - ARS ) ,( ARS + PN ) ) * Min( ( ( ARS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_Mem_Server ) ) ,Max( AMS,BR ) ) )", "choosing": "( ( RCSe + ( RCSe + RCSe ) ) - Min( ( DS * RRSe ) ,( CS - RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.2917314227926574}, {"determining": "( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * ( RRSe + MUR ) )", "obj1": 0.8944444444444445, "obj2": 0.10481566619763363}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "Max( Max( ( ( MUM * CS ) / Max( RCSe,MUC ) ),( ( MUM * RRSe ) * ( MUC + MLU ) ) ),Max( Min( ( RRSe * MUC ) ,( RCSe - MUC ) ),( ( RCSe + RRSe ) * ( CS / MUR ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.5039430040961633}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * ( ACS + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( ( RMSe - RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,Max( CS,MUC ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.3085695985665814}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * DDR ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.2136926158940843}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( RCSe - RMSe ) )", "obj1": 0.5666666666666667, "obj2": 0.37330184288601365}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( ( MLU - MUC ) + ( MLU / MUM ) ) + ( RCSe - RMSe ) )", "obj1": 0.4962962962962963, "obj2": 0.4164865514145648}, {"determining": "( ( ARS - FirstVNF_Mem_Server ) - ( ACS - FirstVNF_Mem_Server ) )", "choosing": "( Max( ( ( RCSe + MUC ) + MUR ),Min( CS ,( RCSe / MUC ) ) ) - ( RRSe / MUM ) )", "obj1": 0.42592592592592593, "obj2": 0.5544020797661438}, {"determining": "( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,DDR ) * ( ( FirstVNF_RAM + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - MUC ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RMSe * RCSe ) ) )", "obj1": 0.7814814814814814, "obj2": 0.2069677681802837}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * DDR ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.7814814814814814, "obj2": 0.2069677681802837}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR / CRS ) )", "choosing": "( ( MLU - MUC ) + Max( MLU,MUM ) )", "obj1": 0.5296296296296297, "obj2": 0.40054704124827945}, {"determining": "Max( ( ARS / ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( DS * MLU ) )", "obj1": 0.3814814814814815, "obj2": 0.5687960445669424}, {"determining": "Min( ( Max( Min( ACS ,Const ),( MDR * Const ) ) / ( ( BR - FirstVNF_CPU_Server ) + Max( RRS,ARS ) ) ) ,Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) ) )", "choosing": "( ( MLU - MUC ) + ( MLU / MUM ) )", "obj1": 0.9277777777777778, "obj2": 0.06149159372166101}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 0.9074074074074074, "obj2": 0.08712782361793045}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( Max( Max( ( ( MUM * CS ) / Max( RCSe,MUC ) ),( ( MUM * RRSe ) * ( MUC + MLU ) ) ),Max( Min( ( RRSe * MUC ) ,( RCSe - MUC ) ),( ( RCSe + RRSe ) * ( CS / MUR ) ) ) ) - RMSe ) )", "obj1": 0.9518518518518518, "obj2": 0.043389561731382705}, {"determining": "( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5866987361119688}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7212407426211099}, {"determining": "( ( ( ( Min( ( AMS + MDR ) ,Max( PN,BR ) ) * ( ( PN / ACS ) - Max( ACS,CRS ) ) ) - Max( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ),( ( MDR + PN ) + ( ACS * AMS ) ) ) ) * DDR ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * MUR ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.4203703703703704, "obj2": 0.5589488630989567}, {"determining": "( ( ( Const * ACS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC / MLU ),( ( MUC * RCSe ) - ( MUC + MUR ) ) )", "obj1": 0.975925925925926, "obj2": 0.01920891243259276}, {"determining": "Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( Min( CRS ,Const ) ,Max( AMS,BR ) ) )", "choosing": "Min( ( ( Max( MUR,RCSe ) * ( DS - MUR ) ) / Max( ( ( ( DS * MLU ) + ( RCSe + RCSe ) ) - Min( ( DS * RRSe ) ,( CS - RRSe ) ) ),Min( DS ,RCSe ) ) ) ,( ( ( DS + RMSe ) - Min( MUM ,CS ) ) + ( ( RRSe / MUC ) + ( MUR - RMSe ) ) ) )", "obj1": 0.3037037037037037, "obj2": 0.6132590518715912}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6693278811943716}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * DDR ) * ( ( ACS + PN ) * ( BR * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5841959733750585}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( RCSe - RMSe ) )", "obj1": 0.5574074074074075, "obj2": 0.3829667769837112}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( FirstVNF_CPU ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( Max( DDR,CRS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( BR / DDR ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7553717272738633}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / Max( Const,RRS ) )", "choosing": "Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 0.24259259259259258, "obj2": 0.6506085390568096}, {"determining": "Min( ( FirstVNF_RAM_Server / ACS ) ,Max( AMS,FirstVNF_RAM_Server ) )", "choosing": "( ( RCSe - MUC ) + ( MLU / MUM ) )", "obj1": 0.2833333333333333, "obj2": 0.632667963744135}, {"determining": "Max( Max( DDR,CRS ),( ( Min( ( AMS + MDR ) ,Max( PN,BR ) ) * ( ( PN / ACS ) - Max( ACS,CRS ) ) ) - Max( ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) - ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ),( ( MDR + PN ) + ( ACS * AMS ) ) ) ) )", "choosing": "Max( MUC,( RCSe / MUM ) )", "obj1": 0.26296296296296295, "obj2": 0.642503653339584}, {"determining": "( ( ( Const * ACS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC / MLU ),( ( MUC * RCSe ) - ( MUC + MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.015491624681498894}, {"determining": "Min( ( Max( Min( ACS ,Const ),( MDR * FirstVNF_RAM ) ) / ( ( BR - FirstVNF_CPU_Server ) + Max( RRS,ARS ) ) ) ,Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) ) )", "choosing": "( ( RMSe / DS ) + ( RCSe - RMSe ) )", "obj1": 0.9425925925925925, "obj2": 0.05018705039523134}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "Min( ( ( ( MUC / RMSe ) + CS ) + ( MUR + MUC ) ) ,( DS - DS ) )", "obj1": 0.30925925925925923, "obj2": 0.5909472032432984}, {"determining": "Min( ( PN / ACS ) ,( ACS / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - MUC ) + ( MLU / MUM ) )", "obj1": 0.29074074074074074, "obj2": 0.6253739741189551}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.737739112742733}, {"determining": "Max( Max( DDR,MDR ),( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MLU - DS ) * ( RCSe - RMSe ) )", "obj1": 0.2111111111111111, "obj2": 0.705370875005255}, {"determining": "Max( ( DDR * CRS ),( FirstVNF_Mem_Server / FirstVNF_RAM ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUR / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7498180341413695}, {"determining": "( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) )", "choosing": "( ( RRSe - MUM ) - Min( RCSe ,MLU ) )", "obj1": 0.17962962962962964, "obj2": 0.7418996761114611}, {"determining": "( Min( FirstVNF_Mem_Server ,Const ) / Max( ( DDR * FirstVNF_RAM ),RRS ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( DS / DS ),DS ) )", "obj1": 0.2537037037037037, "obj2": 0.6477913246825623}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.6976251457520463}, {"determining": "Max( ( DDR * MDR ),Min( FirstVNF_RAM ,RRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6801669220048774}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - MUM ) - Min( RCSe ,MLU ) )", "obj1": 0.9018518518518519, "obj2": 0.09983502108546934}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( RCSe - RMSe ) )", "obj1": 0.5592592592592592, "obj2": 0.3806003206518876}, {"determining": "Max( ( ARS / ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( DS * MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5830431247028148}, {"determining": "Max( ( ARS / ARS ),Max( ( ( FirstVNF_RAM * MDR ) * ( CRS - AMS ) ),( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) + Max( ACS,FirstVNF_Mem_Server ) ) ) )", "choosing": "Min( ( ( MUC + MUM ) - Min( MUR ,CS ) ) ,( DS * MLU ) )", "obj1": 0.36666666666666664, "obj2": 0.5830431247028148}, {"determining": "Max( Min( FirstVNF_CPU_Server ,DDR ),( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUM - MLU ) * ( ( ( ( CS / RCSe ) - ( MUC + MLU ) ) * ( RMSe - CS ) ) - RMSe ) )", "obj1": 0.21296296296296297, "obj2": 0.699518648101031}, {"determining": "Max( ( ARS / FirstVNF_CPU ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( RMSe * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6801669220048774}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,FirstVNF_RAM ) ,( BR / DDR ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),( RCSe * RRSe ) ) ) )", "obj1": 0.9, "obj2": 0.1014333011092288}, {"determining": "( Min( ( ( FirstVNF_Mem_Server - MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( BR / DDR ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.9, "obj2": 0.1014333011092288}, {"determining": "Min( ( MDR - FirstVNF_Mem_Server ) ,( FirstVNF_RAM + DDR ) )", "choosing": "Max( ( CS / MUM ),( RRSe * MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( BR - DDR ) * ( FirstVNF_RAM / FirstVNF_CPU ) ) / ( Min( MDR ,BR ) * ( FirstVNF_RAM * FirstVNF_RAM_Server ) ) )", "choosing": "( ( Max( MUM,MUM ) - ( RMSe * DS ) ) + ( ( MUC - DS ) / Min( RRSe ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "Min( ( Min( ( Min( ( ( Min( MDR ,PN ) + ( RRS * FirstVNF_Mem_Server ) ) * Min( ( Const - MRS ) ,( PN + ACS ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,( ACS - Const ) ) - ( ( AMS * ARS ) + Max( MDR,DDR ) ) ) ) / Min( ( ( ( FirstVNF_RAM_Server - CRS ) / Max( Const,FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server - ARS ) ,( MRS / BR ) ) ) ,( ( ( BR + ARS ) + ( RRS * CRS ) ) - Min( ( AMS / FirstVNF_RAM ) ,( DDR * AMS ) ) ) ) ) ,Min( Min( Max( ( ( BR - FirstVNF_CPU ) * ( FirstVNF_Mem - Const ) ),( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Min( RRS ,FirstVNF_Mem ) ) ) ,( ( ( BR * CRS ) * ( ARS / FirstVNF_Mem ) ) * Max( ( MRS / PN ),Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ,Min( Min( Min( ( FirstVNF_CPU_Server / PN ) ,( FirstVNF_Mem_Server + BR ) ) ,( ( MRS / BR ) / ( MRS / FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) + ( DDR - ACS ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / CRS ) ) ) ) ) ) + ( ( ( ( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) - ( ( DDR - Const ) * Max( Const,FirstVNF_Mem ) ) ) / Min( ( ( ARS * Const ) + Min( RRS ,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( MDR + RRS ) ) ) ) + ( Min( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Min( DDR ,ARS ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( FirstVNF_RAM_Server * DDR ) ,Min( MDR ,ARS ) ) + Max( ( ARS / AMS ),( FirstVNF_CPU_Server * ACS ) ) ) ) ) - Max( Min( ( ( Max( ARS,RRS ) / ( DDR / CRS ) ) / ( ( FirstVNF_CPU - MRS ) / ( MRS + FirstVNF_RAM ) ) ) ,( ( ( BR - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * PN ) ) - ( ( FirstVNF_RAM_Server + AMS ) * ( ACS * PN ) ) ) ),( Min( ( Max( MRS,CRS ) / ( CRS / FirstVNF_CPU ) ) ,( ( Const / MRS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - ( Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,CRS ) ) / Max( Min( AMS ,ACS ),( RRS * DDR ) ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR + CRS ) ) ,Max( ( PN - DDR ),( PN - AMS ) ) ),( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( Const / DDR ) ) ) ) - Min( ( ( ( Const - FirstVNF_RAM ) * ( ACS + CRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( AMS / FirstVNF_Mem_Server ) ) ) ,( ( Max( PN,MRS ) - Max( CRS,MRS ) ) - Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( MRS ,RRS ) ) ) ) ) ,( ( Min( ( ( CRS * FirstVNF_CPU ) - Min( Const ,Const ) ) ,( ( DDR * ACS ) * Max( ARS,Const ) ) ) / ( ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_RAM - MDR ) ) * Max( Min( MRS ,FirstVNF_Mem ),( Const / FirstVNF_CPU_Server ) ) ) ) * Max( Min( ( ( AMS + FirstVNF_CPU ) / ( BR + FirstVNF_RAM_Server ) ) ,( ( DDR * FirstVNF_RAM_Server ) / Max( ACS,PN ) ) ),( ( ( FirstVNF_RAM + PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * ( ( ARS / MDR ) + Min( DDR ,MDR ) ) ) ) ) ),( ( Min( ( ( ( RRS * FirstVNF_CPU ) - ( AMS / ARS ) ) - Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),Min( AMS ,CRS ) ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM_Server ) ) / ( ( CRS * MDR ) - ( AMS + MDR ) ) ) ) - Max( Min( Min( Max( Const,FirstVNF_RAM ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Min( Max( MRS,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) ),Max( ( ( ACS + Const ) + Max( FirstVNF_RAM_Server,CRS ) ),( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_RAM_Server / ARS ) ) ) ) ) - Min( Max( Min( ( ( ARS * FirstVNF_Mem ) - ( BR + MDR ) ) ,( Max( FirstVNF_Mem,PN ) / ( BR * ARS ) ) ),( Min( ( ACS + AMS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,MDR ) - Max( Const,FirstVNF_CPU_Server ) ) ) ) ,( Min( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),( MRS + CRS ) ) ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( PN / FirstVNF_RAM_Server ) ) ) - Max( ( ( BR + BR ) / ( FirstVNF_Mem_Server / ACS ) ),( ( DDR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server / PN ) ) ) ) ) ) ) )", "choosing": "( Max( ( Min( RRSe ,RCSe ) - MUM ),MLU ) + Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( RRSe - MUM ) - Min( RCSe ,MLU ) )", "obj1": 0.14444444444444443, "obj2": 0.77790062801437}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - AMS ) ) )", "choosing": "Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) )", "choosing": "( ( RRSe - MUM ) - Min( RCSe ,MLU ) )", "obj1": 0.14444444444444443, "obj2": 0.77790062801437}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5460295710980717}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( ( ( MUC + MUR ) - MUC ) + ( MLU / MUM ) )", "obj1": 0.49074074074074076, "obj2": 0.45010177453973405}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * DDR ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( DS / DS ),DS ) )", "obj1": 0.6981481481481482, "obj2": 0.2745471147995977}, {"determining": "( Max( ( ARS / ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - MLU )", "obj1": 0.7722222222222223, "obj2": 0.21577476403415768}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * ( ACS + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "Min( DS ,( DS / DS ) )", "obj1": 0.8314814814814815, "obj2": 0.15970448802239984}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,FirstVNF_RAM ) ,( BR / DDR ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),( RCSe * RRSe ) ) ) )", "obj1": 0.8925925925925926, "obj2": 0.1061821537665151}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * DDR ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( Max( RMSe,RMSe ) ,( DS * MLU ) )", "obj1": 0.8037037037037037, "obj2": 0.18608905897668418}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * ( ACS + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MLU + RCSe ) ,Max( ( DS / DS ),DS ) )", "obj1": 0.5962962962962963, "obj2": 0.33590762858966783}, {"determining": "( ( BR * ( Min( ( ( FirstVNF_Mem_Server - MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( BR / DDR ) ) ) ) ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.662962962962963, "obj2": 0.2837425702953596}, {"determining": "( ( Min( FirstVNF_CPU_Server ,DDR ) * DDR ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( RMSe * MUR ) - ( ( CS / RCSe ) - ( MUC + MLU ) ) )", "obj1": 0.6407407407407407, "obj2": 0.3336555991478906}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3959951125969058}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * ( ACS + ACS ) ) * ( ( FirstVNF_RAM + ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,MUM )", "obj1": 0.5851851851851851, "obj2": 0.3653797806086919}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.34629629629629627, "obj2": 0.5716784131438618}, {"determining": "( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,DDR ) * ( ( FirstVNF_RAM + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - MUC ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RMSe * RCSe ) ) )", "obj1": 0.8296296296296296, "obj2": 0.1661396208571242}, {"determining": "( ( ( Const * ACS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( ( AMS / AMS ) - ( PN / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - MUC ) + Max( MLU,MUM ) )", "obj1": 0.975925925925926, "obj2": 0.018515721322173006}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,DS ) + ( RMSe - RMSe ) )", "obj1": 0.5537037037037037, "obj2": 0.3850739779828924}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,RCSe ) ) )", "obj1": 0.6444444444444445, "obj2": 0.30670666152736314}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.5074074074074074, "obj2": 0.40981464164358133}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7212407426211099}, {"determining": "Max( Max( DDR,MDR ),( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUM - DS ) * ( RCSe - RMSe ) )", "obj1": 0.20925925925925926, "obj2": 0.6987416630613826}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "Min( ( ( ( MUC / RMSe ) + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 0.2962962962962963, "obj2": 0.6083585811349704}, {"determining": "( ( ( Const * ACS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC / MLU ),( ( MUC * RCSe ) - ( MUC + MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.015491624681498894}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( RCSe - RMSe ) )", "obj1": 0.5648148148148148, "obj2": 0.37329013381111165}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM ) * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.49444444444444446, "obj2": 0.4329744623349051}, {"determining": "( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.9222222222222223, "obj2": 0.07995549829149755}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( FirstVNF_CPU ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( Max( DDR,CRS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( BR / DDR ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.15, "obj2": 0.7718144221650898}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( FirstVNF_CPU ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( Max( DDR,CRS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( BR / DDR ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7553717272738633}, {"determining": "Max( ( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( MLU - MUC ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6585832519649187}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5624457892435296}, {"determining": "Min( ( Max( Min( ACS ,Const ),( MDR * Const ) ) / ( ( BR - FirstVNF_CPU_Server ) + Max( RRS,ARS ) ) ) ,Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) ) )", "choosing": "( ( MLU - MUC ) + ( MLU / MUM ) )", "obj1": 0.9277777777777778, "obj2": 0.06149159372166101}, {"determining": "( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5948847148799616}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.6976251457520463}, {"determining": "( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5866987361119688}, {"determining": "Min( ( PN / ACS ) ,( ACS / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - MUC ) + ( MLU / MUM ) )", "obj1": 0.29074074074074074, "obj2": 0.6253739741189551}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( Max( Max( ( ( MUM * CS ) / Max( RCSe,MUC ) ),( ( MUM * RRSe ) * ( MUC + MLU ) ) ),Max( Min( ( RRSe * MUC ) ,( RCSe - MUC ) ),( ( RCSe + RRSe ) * ( CS / MUR ) ) ) ) - RMSe ) )", "obj1": 0.9518518518518518, "obj2": 0.043389561731382705}, {"determining": "( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,DDR ) * ( ( FirstVNF_RAM + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - MUC ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RMSe * RCSe ) ) )", "obj1": 0.7814814814814814, "obj2": 0.2069677681802837}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6693278811943716}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * DDR ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.7814814814814814, "obj2": 0.2069677681802837}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * ( ACS + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,Max( CS,MUC ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.3085695985665814}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( ( MLU - MUC ) + ( MLU / MUM ) ) + ( RCSe - RMSe ) )", "obj1": 0.4962962962962963, "obj2": 0.4164865514145648}, {"determining": "Max( ( DDR * CRS ),( FirstVNF_Mem_Server / FirstVNF_RAM ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUR / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7498180341413695}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( BR / DDR ) ) ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( ( MLU + DS ) - ( MUC / MUR ) ) / RMSe ) - MUM ) * ( RRSe + MUR ) )", "obj1": 0.35555555555555557, "obj2": 0.5625555451445333}, {"determining": "Min( ( FirstVNF_Mem_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) )", "choosing": "( ( ( ( RRSe - MUM ) - Min( RCSe ,MLU ) ) - MUC ) + ( MLU / MUM ) )", "obj1": 0.1925925925925926, "obj2": 0.7257807164060699}, {"determining": "Min( ( Max( Min( ACS ,Const ),( MDR * FirstVNF_RAM ) ) / ( ( BR - FirstVNF_CPU_Server ) + Max( RRS,ARS ) ) ) ,Min( Min( ( BR + RRS ) ,Min( FirstVNF_RAM ,CRS ) ) ,( ( FirstVNF_Mem - ACS ) * ( DDR * MDR ) ) ) )", "choosing": "( ( MLU + RRSe ) + ( RCSe - RMSe ) )", "obj1": 0.9333333333333333, "obj2": 0.05968135863863299}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( AMS - AMS ) ) )", "choosing": "Min( ( ( ( MUC / RMSe ) + CS ) + ( MUR + ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6389893130470076}, {"determining": "Max( Max( DDR,CRS ),( FirstVNF_Mem_Server / FirstVNF_RAM ) )", "choosing": "Min( ( ( ( MUC / RMSe ) + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 0.24814814814814815, "obj2": 0.6458336596906386}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( Max( Max( ( ( MUM * CS ) / Max( RCSe,MUC ) ),( ( MUM * RRSe ) * ( MUC + MLU ) ) ),Max( Min( ( RRSe * MUC ) ,( RCSe - MUC ) ),( ( RCSe + RRSe ) * ( CS / MUR ) ) ) ) - RMSe ) )", "obj1": 0.9518518518518518, "obj2": 0.043389561731382705}], "4": [{"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( ( ( Min( MDR ,PN ) + ( RRS * FirstVNF_Mem_Server ) ) * Min( ( Const - MRS ) ,( PN + ACS ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,( ACS - Const ) ) - ( ( AMS * ARS ) + Max( MDR,DDR ) ) ) ) / Min( ( ( ( FirstVNF_RAM_Server - CRS ) / Max( Const,FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server - ARS ) ,( MRS / BR ) ) ) ,( ( ( BR + ARS ) + ( RRS * CRS ) ) - Min( ( AMS / FirstVNF_RAM ) ,( DDR * AMS ) ) ) ) ) ,Min( Min( Max( ( ( BR - FirstVNF_CPU ) * ( FirstVNF_Mem - Const ) ),( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Min( RRS ,FirstVNF_Mem ) ) ) ,( ( ( BR * CRS ) * ( ARS / FirstVNF_Mem ) ) * Max( ( MRS / PN ),Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ,Min( Min( Min( ( FirstVNF_CPU_Server / PN ) ,( FirstVNF_Mem_Server + BR ) ) ,( ( MRS / BR ) / ( MRS / FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) + ( DDR - ACS ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / CRS ) ) ) ) ) ) + ( ( ( ( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) - ( ( DDR - Const ) * Max( Const,FirstVNF_Mem ) ) ) / Min( ( ( ARS * Const ) + Min( RRS ,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( MDR + RRS ) ) ) ) + ( Min( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Min( DDR ,ARS ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( FirstVNF_RAM_Server * DDR ) ,Min( MDR ,ARS ) ) + Max( ( ARS / AMS ),( FirstVNF_CPU_Server * ACS ) ) ) ) ) - Max( Min( ( ( Max( ARS,RRS ) / ( DDR / CRS ) ) / ( ( FirstVNF_CPU - MRS ) / ( MRS + FirstVNF_RAM ) ) ) ,( ( ( BR - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * PN ) ) - ( ( FirstVNF_RAM_Server + AMS ) * ( ACS * PN ) ) ) ),( Min( ( Max( MRS,CRS ) / ( CRS / FirstVNF_CPU ) ) ,( ( Const / MRS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - ( Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,CRS ) ) / Max( Min( AMS ,ACS ),( RRS * DDR ) ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR + CRS ) ) ,Max( ( PN - DDR ),( PN - AMS ) ) ),( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( Const / DDR ) ) ) ) - Min( ( ( ( Const - FirstVNF_RAM ) * ( ACS + CRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( AMS / FirstVNF_Mem_Server ) ) ) ,( ( Max( PN,MRS ) - Max( CRS,MRS ) ) - Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( MRS ,RRS ) ) ) ) ) ,( ( Min( ( ( CRS * FirstVNF_CPU ) - Min( Const ,Const ) ) ,( ( DDR * ACS ) * Max( ARS,Const ) ) ) / ( ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_RAM - MDR ) ) * Max( Min( MRS ,FirstVNF_Mem ),( Const / FirstVNF_CPU_Server ) ) ) ) * Max( Min( ( ( AMS + FirstVNF_CPU ) / ( BR + FirstVNF_RAM_Server ) ) ,( ( DDR * FirstVNF_RAM_Server ) / Max( ACS,PN ) ) ),( ( ( FirstVNF_RAM + PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * ( ( ARS / MDR ) + Min( DDR ,MDR ) ) ) ) ) ),( ( Min( ( ( ( RRS * FirstVNF_CPU ) - ( AMS / ARS ) ) - Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),Min( AMS ,CRS ) ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM_Server ) ) / ( ( CRS * MDR ) - ( AMS + MDR ) ) ) ) - Max( Min( Min( Max( Const,FirstVNF_RAM ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Min( Max( MRS,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) ),Max( ( ( ACS + Const ) + Max( FirstVNF_RAM_Server,CRS ) ),( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_RAM_Server / ARS ) ) ) ) ) - Min( Max( Min( ( ( ARS * FirstVNF_Mem ) - ( BR + MDR ) ) ,( Max( FirstVNF_Mem,PN ) / ( BR * ARS ) ) ),( Min( ( ACS + AMS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,MDR ) - Max( Const,FirstVNF_CPU_Server ) ) ) ) ,( Min( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),( MRS + CRS ) ) ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( PN / FirstVNF_RAM_Server ) ) ) - Max( ( ( BR + BR ) / ( FirstVNF_Mem_Server / ACS ) ),( ( DDR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server / PN ) ) ) ) ) ) ) )", "choosing": "( Max( ( Min( RRSe ,RCSe ) - MUM ),MLU ) + Min( MUM ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( AMS - AMS ) ) )", "choosing": "( Max( ( ( RCSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - ( ( MLU + CS ) + ( MUR + MUC ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7688940400836679}, {"determining": "( ( Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) / AMS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ) ) * ( RRSe + RCSe ) )", "obj1": 0.412962962962963, "obj2": 0.5139244035451523}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( FirstVNF_CPU ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( Max( DDR,CRS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.48124229115012435}, {"determining": "( Max( ( ARS / ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( ( MUC / RMSe ) + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 0.6981481481481482, "obj2": 0.2744734484681559}, {"determining": "( ( FirstVNF_Mem_Server / ( AMS - FirstVNF_RAM ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( Min( RMSe ,DS ) + ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUR / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.8574074074074074, "obj2": 0.11877859373861833}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * DDR ) * ( ( FirstVNF_RAM + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - MUC ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.7481481481481481, "obj2": 0.24703362771611062}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,RCSe ) ) )", "obj1": 0.7851851851851852, "obj2": 0.17841829282157262}, {"determining": "( ( BR * ( Min( ( ( FirstVNF_Mem_Server - MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( BR / DDR ) ) ) ) ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.662962962962963, "obj2": 0.2837425702953596}, {"determining": "( Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * ( ACS + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "Min( DS ,( DS / DS ) )", "obj1": 0.8314814814814815, "obj2": 0.15970448802239984}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5375208802870588}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,DS ) + ( RMSe - RMSe ) )", "obj1": 0.5537037037037037, "obj2": 0.3850739779828924}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.9481481481481482, "obj2": 0.042145289994091964}, {"determining": "( ( BR * ( Min( ( ( FirstVNF_Mem_Server - MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) ) ) + ( BR - CRS ) )", "choosing": "( Min( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.6203703703703703, "obj2": 0.32181979356771645}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( ( ( MUC + MUR ) - MUC ) + ( MLU / MUM ) )", "obj1": 0.49074074074074076, "obj2": 0.45010177453973405}, {"determining": "( ( ( Const * ACS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( ( AMS / AMS ) - ( PN / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe - MUC ) + Max( MLU,MUM ) )", "obj1": 0.975925925925926, "obj2": 0.018515721322173006}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * FirstVNF_RAM_Server ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - MLU ) )", "obj1": 0.7555555555555555, "obj2": 0.22646060960357964}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,FirstVNF_RAM ) ,( BR / DDR ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),( RCSe * RRSe ) ) ) )", "obj1": 0.8925925925925926, "obj2": 0.1061821537665151}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),Max( Max( MLU,MUC ),Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.3351851851851852, "obj2": 0.5811132469872758}, {"determining": "( Min( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) ,DDR ) * ( ( FirstVNF_RAM + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - MUC ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RMSe * RCSe ) ) )", "obj1": 0.8296296296296296, "obj2": 0.1661396208571242}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.6976251457520463}, {"determining": "Min( ( FirstVNF_Mem_Server / DDR ) ,( MRS / FirstVNF_RAM_Server ) )", "choosing": "( ( MUR - MUC ) + ( MLU / MUM ) )", "obj1": 0.17777777777777778, "obj2": 0.7428232027981722}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3959951125969058}, {"determining": "( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5866987361119688}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - FirstVNF_CPU_Server ) )", "choosing": "( ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.5074074074074074, "obj2": 0.40981464164358133}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7212407426211099}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * DDR ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.7777777777777778, "obj2": 0.20605127986927702}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * ( ACS + ACS ) ) * ( ( FirstVNF_RAM + ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ,MUM )", "obj1": 0.5851851851851851, "obj2": 0.36052846163747854}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) / RMSe ) + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 0.2777777777777778, "obj2": 0.6309609187218064}, {"determining": "( ( ( Const * ACS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUC / MLU ),( ( MUC * RCSe ) - ( MUC + MUR ) ) )", "obj1": 0.9777777777777777, "obj2": 0.015491624681498894}, {"determining": "( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5948847148799616}, {"determining": "Min( ( PN / ACS ) ,( ACS / FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe - MUC ) + ( MLU / MUM ) )", "obj1": 0.29074074074074074, "obj2": 0.6253739741189551}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM ) * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.49444444444444446, "obj2": 0.4329744623349051}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5666817880488281}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_Mem_Server / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - MUM ) * ( RRSe / RCSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6693278811943716}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( Min( FirstVNF_RAM_Server ,ACS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) - CRS ) )", "choosing": "( ( ( RMSe - MUC ) + ( MLU / MUM ) ) + Max( ( DS / DS ),DS ) )", "obj1": 0.6018518518518519, "obj2": 0.33543699550086054}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( FirstVNF_CPU ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( Max( DDR,CRS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( Max( ( ARS / ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( ( RCSe - CS ) + ( DS + MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7560064180469342}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( AMS - AMS ) ) )", "choosing": "Min( ( ( ( MUC / RMSe ) + CS ) + ( MUR + ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.2611111111111111, "obj2": 0.6389893130470076}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,DDR ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 0.587037037037037, "obj2": 0.34570192629254876}, {"determining": "( Max( ( ARS / ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - MLU )", "obj1": 0.7722222222222223, "obj2": 0.21577476403415768}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.30957860071881504}, {"determining": "( ( BR * ( Min( ( ( FirstVNF_Mem_Server - MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( BR / DDR ) ) ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.3678275660772775}, {"determining": "Max( Max( DDR,MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.20925925925925926, "obj2": 0.6987416630613826}, {"determining": "Min( ( Max( Min( ACS ,Const ),( MDR * Const ) ) / ( ( BR - FirstVNF_CPU_Server ) + Max( RRS,ARS ) ) ) ,Min( Min( ( BR + RRS ) ,MDR ) ,( ( FirstVNF_Mem - FirstVNF_CPU_Server ) * Min( FirstVNF_RAM ,AMS ) ) ) )", "choosing": "( Min( Min( RMSe ,DS ) ,( CS / MUM ) ) + ( MLU / MUM ) )", "obj1": 0.9425925925925925, "obj2": 0.04911611058189322}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Max( FirstVNF_Mem_Server,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( AMS - AMS ) ) )", "choosing": "Min( ( Max( RMSe,DS ) - ( RCSe * RCSe ) ) ,( DS / DS ) )", "obj1": 0.18888888888888888, "obj2": 0.726377341287586}, {"determining": "( ( Min( FirstVNF_CPU_Server ,DDR ) * DDR ) * ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,DS ) - ( ( CS / RCSe ) - ( MUC + MLU ) ) )", "obj1": 0.9055555555555556, "obj2": 0.09386091473307584}, {"determining": "( PN * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( RMSe * MUR ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.08951001756465374}, {"determining": "Max( ( DDR * CRS ),( FirstVNF_Mem_Server / FirstVNF_RAM ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUR / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7498180341413695}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe - MUC ) + ( MLU / MUM ) ) + ( RCSe / RMSe ) )", "obj1": 0.4962962962962963, "obj2": 0.4164865514145648}, {"determining": "Min( ( Max( Min( ACS ,Const ),( MDR * FirstVNF_RAM ) ) / ( ( BR - FirstVNF_CPU_Server ) + Max( RRS,ARS ) ) ) ,Min( Min( ( BR + RRS ) ,Min( FirstVNF_RAM ,CRS ) ) ,( ( FirstVNF_Mem - ACS ) * ( DDR * MDR ) ) ) )", "choosing": "( ( MLU + RRSe ) + ( RCSe - RMSe ) )", "obj1": 0.9333333333333333, "obj2": 0.05968135863863299}], "5": [{"determining": "Min( ( Min( ( Min( ( ( Min( MDR ,PN ) + ( RRS * FirstVNF_Mem_Server ) ) * Min( ( Const - MRS ) ,( PN + ACS ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,( ACS - Const ) ) - ( ( AMS * ARS ) + Max( MDR,DDR ) ) ) ) / Min( ( ( ( FirstVNF_RAM_Server - CRS ) / Max( Const,FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server - ARS ) ,( MRS / BR ) ) ) ,( ( ( BR + ARS ) + ( RRS * CRS ) ) - Min( ( AMS / FirstVNF_RAM ) ,( DDR * AMS ) ) ) ) ) ,Min( Min( Max( ( ( BR - FirstVNF_CPU ) * ( FirstVNF_Mem - Const ) ),( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Min( RRS ,FirstVNF_Mem ) ) ) ,( ( ( BR * CRS ) * ( ARS / FirstVNF_Mem ) ) * Max( ( MRS / PN ),Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ,Min( Min( Min( ( FirstVNF_CPU_Server / PN ) ,( FirstVNF_Mem_Server + BR ) ) ,( ( MRS / BR ) / ( MRS / FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) + ( DDR - ACS ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / CRS ) ) ) ) ) ) + ( ( ( ( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) - ( ( DDR - Const ) * Max( Const,FirstVNF_Mem ) ) ) / Min( ( ( ARS * Const ) + Min( RRS ,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( MDR + RRS ) ) ) ) + ( Min( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Min( DDR ,ARS ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( FirstVNF_RAM_Server * DDR ) ,Min( MDR ,ARS ) ) + Max( ( ARS / AMS ),( FirstVNF_CPU_Server * ACS ) ) ) ) ) - Max( Min( ( ( Max( ARS,RRS ) / ( DDR / CRS ) ) / ( ( FirstVNF_CPU - MRS ) / ( MRS + FirstVNF_RAM ) ) ) ,( ( ( BR - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * PN ) ) - ( ( FirstVNF_RAM_Server + AMS ) * ( ACS * PN ) ) ) ),( Min( ( Max( MRS,CRS ) / ( CRS / FirstVNF_CPU ) ) ,( ( Const / MRS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - ( Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,CRS ) ) / Max( Min( AMS ,ACS ),( RRS * DDR ) ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR + CRS ) ) ,Max( ( PN - DDR ),( PN - AMS ) ) ),( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( Const / DDR ) ) ) ) - Min( ( ( ( Const - FirstVNF_RAM ) * ( ACS + CRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( AMS / FirstVNF_Mem_Server ) ) ) ,( ( Max( PN,MRS ) - Max( CRS,MRS ) ) - Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( MRS ,RRS ) ) ) ) ) ,( ( Min( ( ( CRS * FirstVNF_CPU ) - Min( Const ,Const ) ) ,( ( DDR * ACS ) * Max( ARS,Const ) ) ) / ( ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_RAM - MDR ) ) * Max( Min( MRS ,FirstVNF_Mem ),( Const / FirstVNF_CPU_Server ) ) ) ) * Max( Min( ( ( AMS + FirstVNF_CPU ) / ( BR + FirstVNF_RAM_Server ) ) ,( ( DDR * FirstVNF_RAM_Server ) / Max( ACS,PN ) ) ),( ( ( FirstVNF_RAM + PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * ( ( ARS / MDR ) + Min( DDR ,MDR ) ) ) ) ) ),( ( Min( ( ( ( RRS * FirstVNF_CPU ) - ( AMS / ARS ) ) - Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),Min( AMS ,CRS ) ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM_Server ) ) / ( ( CRS * MDR ) - ( AMS + MDR ) ) ) ) - Max( Min( Min( Max( Const,FirstVNF_RAM ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Min( Max( MRS,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) ),Max( ( ( ACS + Const ) + Max( FirstVNF_RAM_Server,CRS ) ),( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_RAM_Server / ARS ) ) ) ) ) - Min( Max( Min( ( ( ARS * FirstVNF_Mem ) - ( BR + MDR ) ) ,( Max( FirstVNF_Mem,PN ) / ( BR * ARS ) ) ),( Min( ( ACS + AMS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,MDR ) - Max( Const,FirstVNF_CPU_Server ) ) ) ) ,( Min( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),( MRS + CRS ) ) ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( PN / FirstVNF_RAM_Server ) ) ) - Max( ( ( BR + BR ) / ( FirstVNF_Mem_Server / ACS ) ),( ( DDR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server / PN ) ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( AMS - AMS ) ) )", "choosing": "( Max( ( ( RCSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - ( ( MLU + CS ) + ( MUR + MUC ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7688940400836679}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Const - ACS ) ,( PN * FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( ( ( MLU / MUC ) / ( RMSe * MUR ) ),( Min( MLU ,MUC ) * Max( MUM,RCSe ) ) ) - ( ( MLU + CS ) + ( MUR + MUC ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7688940400836679}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) ) ) )", "obj1": 0.8462962962962963, "obj2": 0.10197408071360824}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5375208802870588}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Const - ACS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.2525248922062105}, {"determining": "( ( BR * ( Min( ( ( FirstVNF_Mem_Server - MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( BR / DDR ) ) ) ) ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.662962962962963, "obj2": 0.2837425702953596}, {"determining": "( ( BR * ( Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) ) ) + ( BR - CRS ) )", "choosing": "( Min( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.8185185185185185, "obj2": 0.15479270207755416}, {"determining": "( ( Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) / AMS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ) ) * ( RRSe + RCSe ) )", "obj1": 0.412962962962963, "obj2": 0.5139244035451523}, {"determining": "( ( FirstVNF_Mem_Server / ( AMS - Max( ( ARS / ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( ( RRSe + DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.45, "obj2": 0.4970684949902196}, {"determining": "( ( Min( FirstVNF_CPU_Server ,DDR ) * DDR ) * ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) )", "choosing": "( Max( RRSe,DS ) - ( ( CS / RCSe ) - ( MUC + MLU ) ) )", "obj1": 0.9055555555555556, "obj2": 0.09386091473307584}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,DS ) + ( RMSe - RMSe ) )", "obj1": 0.5537037037037037, "obj2": 0.3850739779828924}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - Const ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.7277777777777777, "obj2": 0.22979502766139465}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,RCSe ) ) )", "obj1": 0.7851851851851852, "obj2": 0.17841829282157262}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * Min( RRS ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) + ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,RMSe ) )", "obj1": 0.7296296296296296, "obj2": 0.2189286000211874}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MLU - MUC ) + ( MLU / MUM ) ) + Max( ( DS / DS ),DS ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.8074074074074075, "obj2": 0.16823140551419}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( ( ( MUC + MUR ) - MUC ) + ( MLU / MUM ) )", "obj1": 0.49074074074074076, "obj2": 0.45010177453973405}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_Mem_Server / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - MUM ) * ( RRSe / RCSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6693278811943716}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MUC * RCSe ) - ( MUC + MUR ) ) )", "obj1": 0.47962962962962963, "obj2": 0.4835915016942163}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) / RMSe ) + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 0.2777777777777778, "obj2": 0.6309609187218064}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( Min( ( ( FirstVNF_Mem_Server - MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) / RMSe ) + CS ) + MUR ) ,( DS / DS ) )", "obj1": 0.3296296296296296, "obj2": 0.5776453039986472}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.6976251457520463}, {"determining": "( Max( ( ARS / ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - MLU )", "obj1": 0.7722222222222223, "obj2": 0.21577476403415768}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5666817880488281}, {"determining": "( Min( ( Const - ACS ) ,( PN * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5666817880488281}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( FirstVNF_CPU ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( Max( DDR,CRS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.48124229115012435}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.0361496156796956}, {"determining": "( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5866987361119688}, {"determining": "Max( Max( DDR,MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.20925925925925926, "obj2": 0.6987416630613826}, {"determining": "( ( BR * ( Min( ( ( FirstVNF_Mem_Server - MRS ) + Min( RRS ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( ( MDR - FirstVNF_Mem ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( BR / DDR ) ) ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.3678275660772775}, {"determining": "Max( Min( ( FirstVNF_CPU_Server + MDR ) ,MRS ),( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( Min( RMSe ,DS ) - ( CS / MUM ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6619308225925488}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM ) * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.49444444444444446, "obj2": 0.4329744623349051}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3959951125969058}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe - MUC ) + ( MLU / MUM ) ) + ( RCSe / RMSe ) )", "obj1": 0.4962962962962963, "obj2": 0.4164865514145648}, {"determining": "( ( ( Const * ACS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.9722222222222222, "obj2": 0.020385008955984937}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),ACS )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7370563401063044}, {"determining": "( ( ( Const * ACS ) - ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.9814814814814815, "obj2": 0.013363997102719825}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),Max( Max( MLU,MUC ),Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * CS ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7440693887832597}, {"determining": "( Min( ( ( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) ) - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( AMS - AMS ) ) )", "choosing": "Min( ( ( ( MUC / RMSe ) + CS ) + ( MUR + ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / ( MUC / RMSe ) ) ) ) ) ) ,( DS / DS ) )", "obj1": 0.24814814814814815, "obj2": 0.6458336596906386}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.9111111111111111, "obj2": 0.06976872021538312}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - Max( AMS,AMS ) ) )", "choosing": "Min( ( ( RRSe + DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.6167447079846639}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7212407426211099}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) / RMSe ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.6148148148148148, "obj2": 0.33215359273819783}, {"determining": "( DDR + ( BR - CRS ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * ( ( ( MUC / RMSe ) + CS ) + ( MUR + ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7422585442809082}, {"determining": "Min( ( Max( Min( ACS ,Const ),( MDR * FirstVNF_RAM ) ) / ( ( BR - FirstVNF_CPU_Server ) + Max( RRS,ARS ) ) ) ,Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem - ACS ) * ( DDR * MDR ) ) ) )", "choosing": "( ( MLU - MUR ) / ( RCSe / Min( MLU ,( RRSe / MUR ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.06146261485812566}, {"determining": "( ( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * DDR ) * ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.7777777777777778, "obj2": 0.20605127986927702}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.30957860071881504}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.30957860071881504}, {"determining": "( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.29814814814814816, "obj2": 0.6014232199901909}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( MUC / RMSe ) ) ) )", "obj1": 0.5703703703703704, "obj2": 0.3582858417443315}], "6": [{"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( AMS - AMS ) ) )", "choosing": "( Max( ( ( RCSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - ( ( MLU + CS ) + ( MUR + MUC ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7688940400836679}, {"determining": "Min( ( Min( ( Min( ( ( Min( MDR ,PN ) + ( RRS * FirstVNF_Mem_Server ) ) * Min( ( Const - MRS ) ,( PN + ACS ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,( ACS - Const ) ) - ( ( AMS * ARS ) + Max( MDR,DDR ) ) ) ) / Min( ( ( ( FirstVNF_RAM_Server - CRS ) / Max( Const,FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server - ARS ) ,( MRS / BR ) ) ) ,( ( ( BR + ARS ) + ( RRS * CRS ) ) - Min( ( AMS / FirstVNF_RAM ) ,( DDR * AMS ) ) ) ) ) ,Min( Min( Max( ( ( BR - FirstVNF_CPU ) * ( FirstVNF_Mem - Const ) ),( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Min( RRS ,FirstVNF_Mem ) ) ) ,( ( ( BR * CRS ) * ( ARS / FirstVNF_Mem ) ) * Max( ( MRS / PN ),Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ,Min( Min( Min( ( FirstVNF_CPU_Server / PN ) ,( FirstVNF_Mem_Server + BR ) ) ,( ( MRS / BR ) / ( MRS / FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) + ( DDR - ACS ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / CRS ) ) ) ) ) ) + ( ( ( ( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) - ( ( DDR - Const ) * Max( Const,FirstVNF_Mem ) ) ) / Min( ( ( ARS * Const ) + Min( RRS ,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( MDR + RRS ) ) ) ) + ( Min( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Min( DDR ,ARS ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( FirstVNF_RAM_Server * DDR ) ,Min( MDR ,ARS ) ) + Max( ( ARS / AMS ),( FirstVNF_CPU_Server * ACS ) ) ) ) ) - Max( Min( ( ( Max( ARS,RRS ) / ( DDR / CRS ) ) / ( ( FirstVNF_CPU - MRS ) / ( MRS + FirstVNF_RAM ) ) ) ,( ( ( BR - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * PN ) ) - ( ( FirstVNF_RAM_Server + AMS ) * ( ACS * PN ) ) ) ),( Min( ( Max( MRS,CRS ) / ( CRS / FirstVNF_CPU ) ) ,( ( Const / MRS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - ( Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,CRS ) ) / Max( Min( AMS ,ACS ),( RRS * DDR ) ) ) ) ) ) ) ,Max( Min( Max( Max( Min( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR + CRS ) ) ,Max( ( PN - DDR ),( PN - AMS ) ) ),( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( Const / DDR ) ) ) ),Min( ( ( ( Const - FirstVNF_RAM ) * ( ACS + CRS ) ) - ( Max( PN,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ) ,( ( Max( PN,MRS ) - Max( CRS,MRS ) ) - Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( MRS ,RRS ) ) ) ) ) ,( ( Min( ( ( CRS * FirstVNF_CPU ) - Min( Const ,Const ) ) ,( ( DDR * ACS ) * Max( ARS,Const ) ) ) / ( ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_RAM - MDR ) ) * Max( Min( MRS ,FirstVNF_Mem ),( Const / FirstVNF_CPU_Server ) ) ) ) * Max( Min( ( ( AMS + FirstVNF_CPU ) / ( BR + FirstVNF_RAM_Server ) ) ,( ( DDR * FirstVNF_RAM_Server ) / Max( ACS,PN ) ) ),( ( ( FirstVNF_RAM + PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * ( ( ARS / MDR ) + Min( DDR ,MDR ) ) ) ) ) ),( ( Min( ( ( ( RRS * FirstVNF_CPU ) - ( AMS / ARS ) ) - Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),Min( AMS ,CRS ) ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM_Server ) ) / ( ( CRS * MDR ) - ( AMS + MDR ) ) ) ) - Max( Min( Min( Max( Const,FirstVNF_RAM ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Min( Max( MRS,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) ),Max( ( ( ACS + Const ) + Max( FirstVNF_RAM_Server,CRS ) ),( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_RAM_Server / ARS ) ) ) ) ) - Min( Max( Min( ( ( ARS * FirstVNF_Mem ) - ( BR + MDR ) ) ,( Max( FirstVNF_Mem,PN ) / ( BR * ARS ) ) ),( Min( ( ACS + AMS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,MDR ) - Max( Const,FirstVNF_CPU_Server ) ) ) ) ,( Min( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),( MRS + CRS ) ) ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( PN / FirstVNF_RAM_Server ) ) ) - Max( ( ( BR + BR ) / ( FirstVNF_Mem_Server / ACS ) ),( ( DDR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server / PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MUR ) ) - ( ( RRSe + DS ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( ( ( Min( MDR ,PN ) + ( RRS * FirstVNF_Mem_Server ) ) * Min( ( Const - MRS ) ,( PN + ACS ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,( ACS - Const ) ) - ( ( AMS * ARS ) + Max( MDR,DDR ) ) ) ) / Min( ( ( ( FirstVNF_RAM_Server - CRS ) / Max( Const,FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server - ARS ) ,( MRS / BR ) ) ) ,( ( ( BR + ARS ) + ( RRS * CRS ) ) - Min( ( AMS / FirstVNF_RAM ) ,( DDR * AMS ) ) ) ) ) ,Min( Min( Max( ( ( BR - FirstVNF_CPU ) * ( FirstVNF_Mem - Const ) ),( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Min( RRS ,FirstVNF_Mem ) ) ) ,( ( ( BR * CRS ) * ( ARS / FirstVNF_Mem ) ) * Max( ( MRS / PN ),Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ,Min( Min( Min( ( FirstVNF_CPU_Server / PN ) ,( FirstVNF_Mem_Server + BR ) ) ,( ( MRS / BR ) / ( MRS / FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) + ( DDR - ACS ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / CRS ) ) ) ) ) ) + ( ( ( ( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) - ( ( DDR - Const ) * Max( Const,FirstVNF_Mem ) ) ) / Min( ( ( ARS * Const ) + Min( RRS ,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( MDR + RRS ) ) ) ) + ( Min( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Min( DDR ,ARS ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( FirstVNF_RAM_Server * DDR ) ,Min( MDR ,ARS ) ) + Max( ( ARS / AMS ),( FirstVNF_CPU_Server * ACS ) ) ) ) ) - Max( Min( ( ( Max( ARS,RRS ) / ( DDR / CRS ) ) / ( ( FirstVNF_CPU - MRS ) / ( MRS + FirstVNF_RAM ) ) ) ,( ( ( BR - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * PN ) ) - ( ( FirstVNF_RAM_Server + AMS ) * ( ACS * PN ) ) ) ),( Min( ( Max( MRS,CRS ) / ( CRS / FirstVNF_CPU ) ) ,( ( Const / MRS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - ( Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,CRS ) ) / Max( Min( AMS ,ACS ),( RRS * DDR ) ) ) ) ) ) ) ,Max( Min( ( Max( Min( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR + CRS ) ) ,Max( ( PN - DDR ),( PN - AMS ) ) ),( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( Const / DDR ) ) ) ) - Min( ( ( ( Const - FirstVNF_RAM ) * ( ACS + CRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( AMS / FirstVNF_Mem_Server ) ) ) ,( ( Max( PN,MRS ) - Max( CRS,MRS ) ) - Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( MRS ,RRS ) ) ) ) ) ,( ( Min( ( ( CRS * FirstVNF_CPU ) - Min( Const ,Const ) ) ,( ( DDR * ACS ) * Max( ARS,Const ) ) ) / ( ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_RAM - MDR ) ) * Max( Min( MRS ,FirstVNF_Mem ),( Const / FirstVNF_CPU_Server ) ) ) ) * Max( Min( ( ( AMS + FirstVNF_CPU ) / ( BR + FirstVNF_RAM_Server ) ) ,( ( DDR * FirstVNF_RAM_Server ) / Max( ACS,PN ) ) ),( ( ( FirstVNF_RAM + PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * ( ( ARS / MDR ) + Min( DDR ,MDR ) ) ) ) ) ),( ( Min( ( ( ( RRS * FirstVNF_CPU ) - ( AMS / ARS ) ) - Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),Min( AMS ,CRS ) ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM_Server ) ) / ( ( CRS * MDR ) - ( AMS + MDR ) ) ) ) - Max( Min( Min( Max( Const,FirstVNF_RAM ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Min( Max( MRS,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) ),Max( ( ( ACS + Const ) + Max( FirstVNF_RAM_Server,CRS ) ),( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_RAM_Server / ARS ) ) ) ) ) - Min( Max( Min( ( ( ARS * FirstVNF_Mem ) - ( BR + MDR ) ) ,( Max( FirstVNF_Mem,PN ) / ( BR * ARS ) ) ),( Min( ( ACS + AMS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,MDR ) - Max( Const,FirstVNF_CPU_Server ) ) ) ) ,( Min( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),( MRS + CRS ) ) ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( PN / FirstVNF_RAM_Server ) ) ) - Max( ( ( BR + BR ) / ( FirstVNF_Mem_Server / ACS ) ),( ( DDR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server / PN ) ) ) ) ) ) ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Const - ACS ) ,( PN * FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "( Max( ( ( MLU / MUC ) / ( RMSe * MUR ) ),( Min( MLU ,MUC ) * Max( MUM,RCSe ) ) ) - ( ( MLU + CS ) + ( MUR + MUC ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7688940400836679}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( ( MLU - MUR ) / ( RCSe / Min( MUR ,( RRSe / MUR ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.07313866314274813}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) ) ) )", "obj1": 0.85, "obj2": 0.10104369197600663}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,RCSe ) ) )", "obj1": 0.7851851851851852, "obj2": 0.17841829282157262}, {"determining": "( ( FirstVNF_Mem_Server / ( AMS - Max( ( ARS / ARS ),( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) ) ) ) * ( FirstVNF_CPU / FirstVNF_RAM_Server ) )", "choosing": "( ( ( RCSe - CS ) + ( DS + MUR ) ) - ( ( RRSe + DS ) - ( RCSe * RCSe ) ) )", "obj1": 0.45, "obj2": 0.4970684949902196}, {"determining": "( ( ( BR - CRS ) * FirstVNF_RAM_Server ) + ( BR - Const ) )", "choosing": "( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.7666666666666667, "obj2": 0.20071169741143471}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.8444444444444444, "obj2": 0.13114420526209897}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_Mem_Server / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - MUM ) * ( RRSe / RCSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6693278811943716}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC * MLU ),( ( MUC * RCSe ) - ( MUC + MUR ) ) )", "obj1": 0.47962962962962963, "obj2": 0.4835915016942163}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Const - ACS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.2525248922062105}, {"determining": "( Min( Min( ( ( Min( FirstVNF_CPU_Server ,DDR ) * DDR ) * ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( MUC + MLU ) ) )", "obj1": 0.8277777777777777, "obj2": 0.14176128532678905}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),Max( Max( MLU,MUC ),Max( MUM,RCSe ) ) ),Min( ( ( MUR * MUC ) * CS ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7513219247033708}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.6976251457520463}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.3165572378833985}, {"determining": "( Min( ( ( FirstVNF_Mem_Server / MRS ) + Min( FirstVNF_CPU ,RRS ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + Min( ( Max( DDR,CRS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.48124229115012435}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.0361496156796956}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - Const ) )", "choosing": "Min( ( ( ( Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) / RMSe ) + CS ) + MUR ) ,( DS / DS ) )", "obj1": 0.7203703703703703, "obj2": 0.23580480770684456}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( DDR * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - ( Max( MLU,MUC ) * Max( MUM,RCSe ) ) )", "obj1": 0.5037037037037037, "obj2": 0.41081991637812504}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - CRS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.39814814814814814, "obj2": 0.5275474820993041}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5375208802870588}, {"determining": "( ( BR * ( Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) ) ) + ( BR - CRS ) )", "choosing": "( Min( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.8185185185185185, "obj2": 0.15479270207755416}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,RCSe ) ) )", "obj1": 0.7518518518518519, "obj2": 0.20600196184473926}, {"determining": "Min( ( Max( Min( ACS ,Const ),( MDR * FirstVNF_RAM ) ) / ( ( BR - FirstVNF_CPU_Server ) + Max( RRS,ARS ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Const - ACS ) ) )", "choosing": "( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) / ( RCSe / Min( MLU ,( RRSe / MUR ) ) ) )", "obj1": 0.6703703703703704, "obj2": 0.27926740060656924}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM ) * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.49444444444444446, "obj2": 0.4329744623349051}, {"determining": "Max( Max( DDR,MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.20925925925925926, "obj2": 0.6987416630613826}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( MUC / RMSe ) ) ) )", "obj1": 0.5703703703703704, "obj2": 0.3582858417443315}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe - MUM ) + Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.6851851851851852, "obj2": 0.264943353797491}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,Max( MRS,FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( ( MLU - MUC ) + ( MLU / MUM ) ) + Max( ( DS / DS ),DS ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),( MUC * RRSe ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.556064940145677}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,DS ) + ( RMSe - RMSe ) )", "obj1": 0.5537037037037037, "obj2": 0.3850739779828924}, {"determining": "( Min( ( ARS - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( AMS - AMS ) ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( Max( MLU,MUC ) - Max( MUM,RCSe ) ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.5474159878917746}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( ( ( MUC - MUR ) - MUC ) + ( MLU * MUM ) )", "obj1": 0.49074074074074076, "obj2": 0.45010177453973405}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MLU - MUC ) + ( MLU / MUM ) ) + Max( ( DS / DS ),DS ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.8074074074074075, "obj2": 0.16823140551419}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.5833333333333334, "obj2": 0.3443809997890499}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Max( ( MUC / MLU ),( ( MUC * RCSe ) - ( MUC + MUR ) ) ) )", "obj1": 0.737037037037037, "obj2": 0.21489794100594062}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8462962962962963, "obj2": 0.10197408071360824}, {"determining": "Max( ( BR + Const ),Min( RRS ,ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Max( RRSe,DS ) ) ) )", "obj1": 0.2, "obj2": 0.7196515121736224}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( MDR,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( Min( MLU ,Min( Min( RMSe ,DS ) ,( RCSe / MUM ) ) ) / RMSe ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.6166666666666667, "obj2": 0.326638974019679}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) / RMSe ) + CS ) + ( MUR + MUC ) ) ,( DS / DS ) )", "obj1": 0.2777777777777778, "obj2": 0.6309609187218064}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - Max( AMS,AMS ) ) )", "choosing": "Min( ( ( RRSe + DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.6167447079846639}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) + ( Min( ( Max( DDR,CRS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( ( ACS - PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) - CRS ) )", "choosing": "( ( ( MUC + MUR ) - MUC ) + Max( ( ( RRSe * RRSe ) / ( MUR / MUM ) ),Min( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) ,( RMSe / MUC ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.5108715965830972}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe - MUC ) + ( MLU / MUM ) ) + ( RCSe / RMSe ) )", "obj1": 0.4962962962962963, "obj2": 0.4164865514145648}, {"determining": "( DDR + ( BR - CRS ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * ( ( ( MUC / RMSe ) + CS ) + ( MUR + ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7422585442809082}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( RCSe,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.4444444444444444, "obj2": 0.5106972075663646}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3959951125969058}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),ACS )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7370563401063044}, {"determining": "Max( Max( DDR,MDR ),( FirstVNF_Mem_Server - Const ) )", "choosing": "( ( MUM - DS ) * ( RCSe - RMSe ) )", "obj1": 0.1925925925925926, "obj2": 0.7243490384195379}, {"determining": "( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.29814814814814816, "obj2": 0.6014232199901909}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) / MUC ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.6555555555555556, "obj2": 0.2885984203407981}], "7": [{"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,DS ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( ( Min( ( ( Min( MDR ,PN ) + ( RRS * FirstVNF_Mem_Server ) ) * Min( ( Const - MRS ) ,( PN + ACS ) ) ) ,( Min( Max( PN,FirstVNF_CPU ) ,( ACS - Const ) ) - ( ( AMS * ARS ) + Max( MDR,DDR ) ) ) ) / Min( ( ( ( FirstVNF_RAM_Server - CRS ) / Max( Const,FirstVNF_Mem_Server ) ) / Min( ( FirstVNF_CPU_Server - ARS ) ,( MRS / BR ) ) ) ,( ( ( BR + ARS ) + ( RRS * CRS ) ) - Min( ( AMS / FirstVNF_RAM ) ,( DDR * AMS ) ) ) ) ) ,Min( Min( Max( ( ( BR - FirstVNF_CPU ) * ( FirstVNF_Mem - Const ) ),( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) - Min( RRS ,FirstVNF_Mem ) ) ) ,( ( ( BR * CRS ) * ( ARS / FirstVNF_Mem ) ) * Max( ( MRS / PN ),Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) ) ,Min( Min( Min( ( FirstVNF_CPU_Server / PN ) ,( FirstVNF_Mem_Server + BR ) ) ,( ( MRS / BR ) / ( MRS / FirstVNF_Mem_Server ) ) ) ,( ( Max( FirstVNF_Mem_Server,AMS ) + ( DDR - ACS ) ) - ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) * ( FirstVNF_CPU_Server / CRS ) ) ) ) ) ) + ( ( ( ( Max( ( RRS - FirstVNF_RAM ),( FirstVNF_CPU + Const ) ) - ( ( DDR - Const ) * Max( Const,FirstVNF_Mem ) ) ) / Min( ( ( ARS * Const ) + Min( RRS ,FirstVNF_RAM ) ) ,( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) - ( MDR + RRS ) ) ) ) + ( Min( Max( Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ),Min( DDR ,ARS ) ) ,Max( ( FirstVNF_CPU_Server + ACS ),( FirstVNF_CPU_Server - RRS ) ) ) / ( Min( ( FirstVNF_RAM_Server * DDR ) ,Min( MDR ,ARS ) ) + Max( ( ARS / AMS ),( FirstVNF_CPU_Server * ACS ) ) ) ) ) - Max( Min( ( ( Max( ARS,RRS ) / ( DDR / CRS ) ) / ( ( FirstVNF_CPU - MRS ) / ( MRS + FirstVNF_RAM ) ) ) ,( ( ( BR - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * PN ) ) - ( ( FirstVNF_RAM_Server + AMS ) * ( ACS * PN ) ) ) ),( Min( ( Max( MRS,CRS ) / ( CRS / FirstVNF_CPU ) ) ,( ( Const / MRS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) ) - ( Min( Min( BR ,FirstVNF_Mem_Server ) ,Max( FirstVNF_Mem_Server,CRS ) ) / Max( Min( AMS ,ACS ),( RRS * DDR ) ) ) ) ) ) ) ,Max( Min( Max( Max( Min( ( ( DDR * FirstVNF_Mem_Server ) * ( MDR + CRS ) ) ,Max( ( PN - DDR ),( PN - AMS ) ) ),( Min( ( FirstVNF_RAM / FirstVNF_CPU ) ,( ACS + FirstVNF_Mem ) ) * ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( Const / DDR ) ) ) ),Min( ( ( ( Const - FirstVNF_RAM ) * ( ACS + CRS ) ) - ( Max( PN,FirstVNF_Mem ) / ( AMS / FirstVNF_Mem_Server ) ) ) ,( ( Max( PN,MRS ) - Max( CRS,MRS ) ) - Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,Min( MRS ,RRS ) ) ) ) ) ,( ( Min( ( ( CRS * FirstVNF_CPU ) - Min( Const ,Const ) ) ,( ( DDR * ACS ) * Max( ARS,Const ) ) ) / ( ( Max( FirstVNF_Mem,DDR ) + ( FirstVNF_RAM - MDR ) ) * Max( Min( MRS ,FirstVNF_Mem ),( Const / FirstVNF_CPU_Server ) ) ) ) * Max( Min( ( ( AMS + FirstVNF_CPU ) / ( BR + FirstVNF_RAM_Server ) ) ,( ( DDR * FirstVNF_RAM_Server ) / Max( ACS,PN ) ) ),( ( ( FirstVNF_RAM + PN ) - ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) * ( ( ARS / MDR ) + Min( DDR ,MDR ) ) ) ) ) ),( ( Min( ( ( ( RRS * FirstVNF_CPU ) - ( AMS / ARS ) ) - Max( ( FirstVNF_Mem / FirstVNF_RAM_Server ),Min( AMS ,CRS ) ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - Min( MDR ,FirstVNF_RAM_Server ) ) / ( ( CRS * MDR ) - ( AMS + MDR ) ) ) ) - Max( Min( Min( Max( Const,FirstVNF_RAM ) ,( FirstVNF_RAM * FirstVNF_RAM_Server ) ) ,Min( Max( MRS,FirstVNF_Mem_Server ) ,Max( FirstVNF_RAM_Server,RRS ) ) ),Max( ( ( ACS + Const ) + Max( FirstVNF_RAM_Server,CRS ) ),( ( FirstVNF_RAM_Server + AMS ) - ( FirstVNF_RAM_Server / ARS ) ) ) ) ) - Min( Max( Min( ( ( ARS * FirstVNF_Mem ) - ( BR + MDR ) ) ,( Max( FirstVNF_Mem,PN ) / ( BR * ARS ) ) ),( Min( ( ACS + AMS ) ,Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) * ( Min( FirstVNF_RAM ,MDR ) - Max( Const,FirstVNF_CPU_Server ) ) ) ) ,( Min( Max( ( FirstVNF_RAM - FirstVNF_RAM_Server ),( MRS + CRS ) ) ,Max( Max( FirstVNF_Mem_Server,FirstVNF_Mem ),( PN / FirstVNF_RAM_Server ) ) ) - Max( ( ( BR + BR ) / ( FirstVNF_Mem_Server / ACS ) ),( ( DDR - FirstVNF_Mem ) / ( FirstVNF_Mem_Server / PN ) ) ) ) ) ) ) )", "choosing": "( ( Max( RCSe,CS ) + ( DS + MUR ) ) - ( ( RRSe + DS ) - MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.13333333333333333, "obj2": 0.7704745365082575}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.0361496156796956}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) ) ) )", "obj1": 0.85, "obj2": 0.10104369197600663}, {"determining": "( ( ( ( FirstVNF_CPU - ( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( DDR * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) ) ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUC ) ) ) / MUC ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.9944444444444445, "obj2": 0.0032217086480698025}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - DS ) * ( RCSe - RMSe ) )", "obj1": 0.3351851851851852, "obj2": 0.5841792513990186}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe - MUM ) * Min( MUC ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.05395527265042423}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - CRS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.39814814814814814, "obj2": 0.5275474820993041}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3959951125969058}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) + ( Min( ( Max( DDR,CRS ) - Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( DDR,ARS ) ,( ( ACS - PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) - CRS ) )", "choosing": "( ( ( MUC + MUR ) - MUC ) + Max( ( ( RRSe * RRSe ) / ( MUR / MUM ) ),Min( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) ,( RMSe / MUC ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.5108715965830972}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( ( MLU - MUR ) / ( RCSe / Min( MUR ,( RRSe / MUR ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.07313866314274813}, {"determining": "( ( BR / FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( ( MUM - MUC ) + ( MLU / MUM ) ) + ( RCSe - RMSe ) )", "obj1": 0.35185185185185186, "obj2": 0.5654730306617727}, {"determining": "Min( ( ( ( FirstVNF_RAM / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( ( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) ) * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) )", "obj1": 0.55, "obj2": 0.38049138516352626}, {"determining": "Min( FirstVNF_RAM ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) ) )", "obj1": 0.5944444444444444, "obj2": 0.33869007338028656}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Const - ACS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ) ,Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.4648148148148148, "obj2": 0.47170639844682466}, {"determining": "( ( ( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.3074074074074074, "obj2": 0.596624568184384}, {"determining": "( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "Min( ( Max( MUR,DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * ( MUM + RCSe ) ) ) )", "obj1": 0.4685185185185185, "obj2": 0.4561128484389729}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,RCSe ) ) )", "obj1": 0.7851851851851852, "obj2": 0.17841829282157262}, {"determining": "Max( Max( DDR,MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.20925925925925926, "obj2": 0.6987416630613826}, {"determining": "( ( BR * ( Min( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) ,( ( FirstVNF_CPU_Server - FirstVNF_Mem_Server ) + ( DDR * FirstVNF_RAM ) ) ) + ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) ) ) + ( BR - CRS ) )", "choosing": "( Min( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.8185185185185185, "obj2": 0.15479270207755416}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.3165572378833985}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( PN * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,MRS ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR / MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6981481481481482, "obj2": 0.24846904154797855}, {"determining": "( Min( Min( ( ( Min( FirstVNF_CPU_Server ,DDR ) * DDR ) * ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( MUC + MLU ) ) )", "obj1": 0.8277777777777777, "obj2": 0.14176128532678905}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - Max( AMS,AMS ) ) )", "choosing": "Min( ( ( RRSe + DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.6167447079846639}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + MDR ) ) ) ,( ( ( FirstVNF_CPU / FirstVNF_RAM ) * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.49444444444444446, "obj2": 0.4329744623349051}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.45925925925925926, "obj2": 0.4928445060977758}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,Max( MRS,FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( ( MLU - MUC ) + ( MLU / MUM ) ) + Max( ( DS / DS ),DS ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),( MUC * RRSe ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.556064940145677}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) * ( Const - CRS ) )", "choosing": "( ( ( MUC - MUR ) - MUC ) + ( MLU * MUM ) )", "obj1": 0.5833333333333334, "obj2": 0.3431073950395385}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( ( ( MUC - MUR ) - MUC ) + ( MLU * MUM ) )", "obj1": 0.49074074074074076, "obj2": 0.45010177453973405}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( MDR,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( Min( MLU ,Min( Min( RMSe ,DS ) ,( RCSe / MUM ) ) ) / RMSe ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.6166666666666667, "obj2": 0.326638974019679}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( ( MLU - MUR ) / ( RCSe / Min( MUR ,( RRSe / MUR ) ) ) )", "obj1": 0.9111111111111111, "obj2": 0.06444095271734859}, {"determining": "Max( Max( DDR,MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "Min( ( ( ( Max( ( MLU / MUM ),Min( RCSe ,RRSe ) ) / RMSe ) + CS ) + MUR ) ,( DS / DS ) )", "obj1": 0.25925925925925924, "obj2": 0.6439658560109017}, {"determining": "( Min( ( ARS - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( AMS - AMS ) ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( Max( MLU,MUC ) - Max( MUM,RCSe ) ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.5474159878917746}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( ( RRSe - MUR ) / ( RCSe / Min( MUR ,( RRSe / MUR ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.07313866314274813}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8462962962962963, "obj2": 0.10197408071360824}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + Min( BR ,Const ) )", "choosing": "( ( MUM - DS ) * ( MLU * RMSe ) )", "obj1": 0.7296296296296296, "obj2": 0.23116585995191954}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.8444444444444444, "obj2": 0.13114420526209897}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( RCSe - RMSe ) )", "obj1": 0.5611111111111111, "obj2": 0.37410987155355807}, {"determining": "( ( CRS * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( ( RCSe - MUC ) + ( MLU / MUM ) ) + ( RCSe / RMSe ) )", "obj1": 0.4962962962962963, "obj2": 0.4164865514145648}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( ( FirstVNF_Mem_Server * PN ) * ( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.2388888888888889, "obj2": 0.6649776724032034}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( DDR * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - ( Max( MLU,MUC ) * Max( MUM,RCSe ) ) )", "obj1": 0.5111111111111111, "obj2": 0.40593469117499387}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6384314154013888}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Max( ( MUC / MLU ),( ( MUC * RCSe ) - ( MUC + MUR ) ) ) )", "obj1": 0.737037037037037, "obj2": 0.21489794100594062}, {"determining": "( ( FirstVNF_Mem_Server / AMS ) * ( ( FirstVNF_Mem_Server * ( MDR * FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM_Server / MDR ) ) )", "choosing": "( ( ( MUC - RMSe ) - MUM ) * ( Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) + RCSe ) )", "obj1": 0.13703703703703704, "obj2": 0.7679350351619106}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,RCSe ) ) )", "obj1": 0.7518518518518519, "obj2": 0.20600196184473926}, {"determining": "( ( PN / ( AMS + AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( CS * Max( RRSe,MUR ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.6948044345270357}, {"determining": "( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem_Server - Const ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) )", "choosing": "( ( ( Min( ( RCSe - RMSe ) ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) / RMSe ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.6351851851851852, "obj2": 0.2985749238651618}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU - MUC ) + ( MLU / MUM ) ) + ( RCSe - RMSe ) )", "obj1": 0.6407407407407407, "obj2": 0.29490153844463024}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( MUC / RMSe ) ) ) )", "obj1": 0.5703703703703704, "obj2": 0.3582858417443315}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),ACS )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7370563401063044}], "8": [{"determining": "( ( BR / FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( ( MUM - MUC ) + ( MLU / Min( MUR ,( RRSe / MUR ) ) ) ) + ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - FirstVNF_RAM ) )", "choosing": "( Min( RMSe ,DS ) + ( RMSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.687037037037037, "obj2": 0.2585104664726556}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MLU - MUC ) + ( MLU / MUM ) ) + ( RCSe - RMSe ) )", "obj1": 0.6462962962962963, "obj2": 0.29177327666933595}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( ( ( MUM - MUC ) + ( MLU / MUM ) ) + ( RCSe - RMSe ) )", "obj1": 0.9018518518518519, "obj2": 0.07496008697137924}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - Max( AMS,AMS ) ) )", "choosing": "Min( ( ( RRSe + DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.6167447079846639}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.13549750321683005}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.2292403410358936}, {"determining": "( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.8444444444444444, "obj2": 0.13114420526209897}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - CRS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.5024389663847192}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / ( AMS - AMS ) ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) )", "obj1": 0.8018518518518518, "obj2": 0.16140423515888352}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.45925925925925926, "obj2": 0.4928445060977758}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( CS - DS ) * ( RCSe - RMSe ) )", "obj1": 0.1925925925925926, "obj2": 0.7243490384195379}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( PN * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,MRS ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR / MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6981481481481482, "obj2": 0.24846904154797855}, {"determining": "Max( ( Max( DDR,MDR ) / MRS ),ACS )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( Max( ( MLU / MUM ),Min( RCSe ,RRSe ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7514422646411969}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( MUC / RMSe ) ) ) )", "obj1": 0.5703703703703704, "obj2": 0.3582858417443315}, {"determining": "( ( ( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.3074074074074074, "obj2": 0.596624568184384}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUC ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe - RCSe ) ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.04289876196685576}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.9722222222222222, "obj2": 0.020166988665282784}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Const - ACS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ) ,Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.4648148148148148, "obj2": 0.47170639844682466}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.22777777777777777, "obj2": 0.670609759279171}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),ACS )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.15555555555555556, "obj2": 0.7626304142470305}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) ) ) )", "obj1": 0.85, "obj2": 0.10104369197600663}, {"determining": "( Min( ( ARS - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( AMS - AMS ) ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( Max( MLU,MUC ) - Max( MUM,RCSe ) ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.5474159878917746}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Const - ACS ) ) )", "choosing": "( ( ( Min( MLU ,Min( Min( RMSe ,DS ) ,( RCSe / MUM ) ) ) / RMSe ) - MUM ) * ( RRSe + RCSe ) )", "obj1": 0.4166666666666667, "obj2": 0.5105501090022455}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.0361496156796956}, {"determining": "Min( ( ( ( FirstVNF_RAM_Server / DDR ) * ( DDR + ACS ) ) * ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( RRS + FirstVNF_Mem ) ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( ( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) ) * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) )", "obj1": 0.55, "obj2": 0.3802674396988904}, {"determining": "( ( PN / ( AMS + AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( CS * Max( RRSe,MUR ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.6948044345270357}, {"determining": "( ( Const * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( ( ( MUC - CS ) - MUC ) + ( MLU / MUM ) )", "obj1": 0.5314814814814814, "obj2": 0.3930807318544625}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( RRSe - MUM ) * Min( MUC ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.05395527265042423}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6384314154013888}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.7009349437915204}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( Min( RMSe ,DS ) + ( RCSe - RMSe ) )", "obj1": 0.5611111111111111, "obj2": 0.37410987155355807}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Max( ( MUC / MLU ),( ( MUC * RCSe ) - ( MUC + MUR ) ) ) )", "obj1": 0.737037037037037, "obj2": 0.21489794100594062}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - CRS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.39814814814814814, "obj2": 0.5275474820993041}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.31567419670199176}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - MUM ) ) ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Max( RRSe,DS ) ) ) )", "obj1": 0.4666666666666667, "obj2": 0.450976365999234}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) + ( BR - FirstVNF_RAM ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.4777777777777778, "obj2": 0.4456031995996705}, {"determining": "( ( ( Min( ( MRS - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) - Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5884085901994383}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) * ( Const - CRS ) )", "choosing": "( ( ( MUC - MUR ) - MUC ) + ( MLU * MUM ) )", "obj1": 0.5833333333333334, "obj2": 0.3431073950395385}, {"determining": "Min( ( ( Min( ( BR - CRS ) ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - MDR ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,RMSe ) + ( MUR - MUM ) ) ,( Min( MUC ,( Min( ( MLU * MUM ) ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,Min( ( MLU / MLU ) ,RCSe ) ) )", "obj1": 0.7777777777777778, "obj2": 0.18478607609278103}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.39814814814814814, "obj2": 0.5275474820993041}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8462962962962963, "obj2": 0.10197408071360824}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.7592592592592593, "obj2": 0.19178712862126263}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,Max( MRS,FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( ( MLU - MUC ) + ( MLU / MUM ) ) + Max( ( DS / DS ),DS ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),( MUC * RRSe ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.556064940145677}, {"determining": "( Min( Min( ( ( Min( FirstVNF_CPU_Server ,DDR ) * Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * Min( FirstVNF_RAM ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( MUR + MUC ) ) )", "obj1": 0.6018518518518519, "obj2": 0.3335994659003562}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.7888888888888889, "obj2": 0.17082868177226035}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3959951125969058}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - DS ) * ( RCSe - RMSe ) )", "obj1": 0.3351851851851852, "obj2": 0.5841792513990186}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) ) ) )", "obj1": 0.85, "obj2": 0.10104369197600663}], "9": [{"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR / FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( ( MUM - MUC ) + ( MLU / Min( MUR ,( RRSe / MUR ) ) ) ) + ( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( Const,FirstVNF_RAM ) ) ) )", "choosing": "( ( DS - DS ) * ( RCSe - RMSe ) )", "obj1": 0.3351851851851852, "obj2": 0.5841792513990186}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Max( ( Min( DS ,DS ) + ( MUR - MUM ) ),( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4387890053086358}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.4774383360279093}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( MUR + MUC ) ) )", "obj1": 0.5111111111111111, "obj2": 0.40496468099789434}, {"determining": "( Min( ( Const - ACS ) ,( ARS * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - Min( Max( RRSe,DS ) ,( RCSe * RCSe ) ) ) ) )", "obj1": 0.8685185185185185, "obj2": 0.09285741664692782}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( Min( ( ARS - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( AMS - AMS ) ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( Max( MLU,MUC ) - Max( MUM,RCSe ) ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.5474159878917746}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - CRS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.5024389663847192}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.7592592592592593, "obj2": 0.19178712862126263}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - Max( AMS,AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7606310620414486}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( CS - DS ) * ( RCSe - RMSe ) )", "obj1": 0.1925925925925926, "obj2": 0.7243490384195379}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - CRS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.362962962962963, "obj2": 0.5583471331662465}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.7009349437915204}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( PN * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,MRS ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR / MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6981481481481482, "obj2": 0.24846904154797855}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUC ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe - RCSe ) ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.04289876196685576}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( MUC / RMSe ) ) ) )", "obj1": 0.5703703703703704, "obj2": 0.3582858417443315}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( ( ( ( MUC - MUR ) - MUC ) + ( MLU * MUM ) ) + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.9814814814814815, "obj2": 0.013363997102719826}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( ( MLU * MUM ) - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6703703703703704, "obj2": 0.2846692478527157}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.2292403410358936}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) / ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / Max( ( Max( DDR,MDR ) / MRS ),ACS ) ) ) ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + MUC ) + ( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) )", "obj1": 0.7462962962962963, "obj2": 0.21454990788123568}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - Max( AMS,AMS ) ) )", "choosing": "Min( ( ( RRSe + DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.6167447079846639}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.1354558156952645}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.2639899259542591}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( PN * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * ( AMS - AMS ) ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - MUM ) ) ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Max( RRSe,DS ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5518518518518518, "obj2": 0.3621213868422311}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.0361496156796956}, {"determining": "Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( Min( ( FirstVNF_Mem_Server / ( AMS - AMS ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Const - ACS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( ( RRSe - RCSe ) / Min( RCSe ,CS ) ) ) ) ) ,Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) )", "obj1": 0.4648148148148148, "obj2": 0.47170639844682466}, {"determining": "Max( Max( DDR,MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( MUR + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6536398069893158}, {"determining": "( ( PN / ( AMS + AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( CS * Max( RRSe,MUR ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.6948044345270357}, {"determining": "( ( Const * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( ( ( MUC - CS ) - MUC ) + ( MLU / MUM ) )", "obj1": 0.5314814814814814, "obj2": 0.3930807318544625}, {"determining": "Max( Max( DDR,MDR ),( ( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) + ( BR - CRS ) ) - ACS ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + RCSe ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7761484649698253}, {"determining": "( Min( ( Min( ( Const - ACS ) ,( MDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) ,ACS ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( DS,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.2796296296296296, "obj2": 0.6191373847834649}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server + MDR ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.22777777777777777, "obj2": 0.670609759279171}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.05923279216332266}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6384314154013888}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) * ( Const - CRS ) )", "choosing": "( ( ( MUC - MUR ) - MUC ) + ( MLU * MUM ) )", "obj1": 0.5833333333333334, "obj2": 0.3431073950395385}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * MDR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) ) ) ,( DS / DS ) ) )", "obj1": 0.3037037037037037, "obj2": 0.5983316212308553}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / ( AMS - AMS ) ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( ( MUC / ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) )", "obj1": 0.8037037037037037, "obj2": 0.16055933472414163}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( BR - ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.9722222222222222, "obj2": 0.020166988665282784}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8462962962962963, "obj2": 0.10197408071360824}, {"determining": "Max( ( ( FirstVNF_CPU_Server + MDR ) / MRS ),ACS )", "choosing": "Min( Max( ( ( RRSe * RRSe ) / ( MUR * MUM ) ),Min( Min( RRSe ,MUC ) ,( RMSe / MUC ) ) ) ,( ( Max( ( RRSe / MUC ),( RCSe / MUM ) ) - ( MUC / MUR ) ) + Max( ( MLU / MUM ),Min( MUC ,RRSe ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6429277445233497}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / ( FirstVNF_Mem_Server - ACS ) ) ) ) + ( BR - CRS ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.2275102668763167}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.687037037037037, "obj2": 0.2585104664726556}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.5462962962962963, "obj2": 0.382036856199076}, {"determining": "Max( Max( ( ( ( ( ( ( CRS - PN ) / ( MDR * DDR ) ) - ( ( FirstVNF_CPU * AMS ) - Min( MDR ,DDR ) ) ) + Max( ( ( Const - PN ) - Min( MDR ,FirstVNF_RAM_Server ) ),( ( CRS + FirstVNF_Mem_Server ) - ( Const + FirstVNF_RAM ) ) ) ) - Min( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ),( ( ARS / PN ) + Min( AMS ,PN ) ) ) ,( ( ( ACS - CRS ) / ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) * ( ( CRS - MRS ) - ( Const / FirstVNF_Mem ) ) ) ) ) - ( ( ( ( Max( DDR,PN ) / ( FirstVNF_CPU / MRS ) ) + Min( ( FirstVNF_CPU / MDR ) ,Min( AMS ,BR ) ) ) - ( Max( Min( PN ,RRS ),Min( BR ,FirstVNF_CPU_Server ) ) - Max( ( Const * MRS ),Min( FirstVNF_Mem_Server ,PN ) ) ) ) / ( ( Min( Max( PN,AMS ) ,( DDR / MDR ) ) + ( ( MRS - FirstVNF_RAM_Server ) - ( ACS * FirstVNF_RAM_Server ) ) ) + ( Max( Max( PN,MDR ),Min( DDR ,MRS ) ) * ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( RRS,DDR ) ) ) ) ) ),( ( ( ( ( ( PN * MRS ) / ( FirstVNF_RAM_Server - Const ) ) * Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,Max( DDR,MDR ) ) ) / ( ( Max( MDR,ARS ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU - BR ),( BR * DDR ) ) ) ) - Min( ( ( Min( ACS ,RRS ) + Min( AMS ,FirstVNF_Mem ) ) - ( ( MRS - RRS ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ,( ( ( RRS / CRS ) * Max( RRS,FirstVNF_CPU ) ) / Min( ( ARS + CRS ) ,Max( PN,Const ) ) ) ) ) - ( ( Max( Max( ( FirstVNF_CPU_Server - PN ),( ACS * FirstVNF_CPU ) ),( ( PN + FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU_Server ) ) ) / ( Max( ( ARS * FirstVNF_CPU ),Max( CRS,ARS ) ) * Max( ( ARS * ARS ),Min( DDR ,FirstVNF_CPU ) ) ) ) + ( ( Max( ( FirstVNF_CPU / MRS ),( ACS + FirstVNF_CPU_Server ) ) * ( ( BR + MRS ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU + AMS ) / ( CRS - FirstVNF_CPU ) ) * ( Min( DDR ,FirstVNF_RAM ) * ( RRS - RRS ) ) ) ) ) ) ),Min( ( ( ( Max( Max( ( FirstVNF_Mem / MDR ),( CRS - FirstVNF_RAM ) ),( ( MDR * FirstVNF_Mem ) * ( CRS + FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) / ( FirstVNF_Mem + AMS ) ) + ( ( CRS + FirstVNF_Mem ) + ( FirstVNF_CPU + ARS ) ) ) ) * ( Max( Max( Min( ACS ,ACS ),( BR - RRS ) ),( ( Const / CRS ) / Max( RRS,Const ) ) ) - Min( ( Min( RRS ,ACS ) + Max( FirstVNF_RAM,RRS ) ) ,Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( ( ( FirstVNF_Mem_Server * DDR ) + ( RRS * ARS ) ) - Min( ( FirstVNF_RAM + MRS ) ,( DDR - Const ) ) ),( ( Max( CRS,BR ) * ( AMS / BR ) ) - ( Max( ARS,MRS ) + Max( ACS,BR ) ) ) ) - ( Min( ( ( RRS / FirstVNF_RAM_Server ) + Min( RRS ,FirstVNF_CPU ) ) ,Max( Max( PN,FirstVNF_CPU_Server ),( DDR / FirstVNF_CPU_Server ) ) ) / ( ( ( FirstVNF_RAM - MDR ) * ( FirstVNF_Mem * AMS ) ) / ( Min( ACS ,FirstVNF_Mem ) * ( MDR - DDR ) ) ) ) ) ) ,( ( ( ( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( DDR - ACS ) ) / Min( ( CRS - DDR ) ,( ACS - FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_Mem_Server / CRS ),( ARS * FirstVNF_RAM_Server ) ) / Min( Min( BR ,FirstVNF_RAM ) ,Min( ARS ,Const ) ) ) ) + ( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( FirstVNF_Mem + DDR ) ),( ( FirstVNF_CPU - FirstVNF_RAM ) + ( ACS * Const ) ) ) * ( ( ( DDR * FirstVNF_Mem ) / Max( MDR,ACS ) ) + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ARS / FirstVNF_CPU ) ) ) ) ) - Min( ( Min( ( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Const ) ) ,Min( ( FirstVNF_Mem / AMS ) ,( ACS - AMS ) ) ) / ( ( ( FirstVNF_Mem - ARS ) + ( FirstVNF_Mem_Server + ARS ) ) + ( ( FirstVNF_Mem / ARS ) / ( FirstVNF_Mem - BR ) ) ) ) ,( Min( Min( ( AMS * MDR ) ,( PN * FirstVNF_RAM_Server ) ) ,( Max( AMS,BR ) / ( AMS * PN ) ) ) * ( ( ( RRS - ACS ) + ( ACS / Const ) ) - Min( ( MDR - ACS ) ,( DDR / BR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( Min( ( ( RCSe - RMSe ) * ( CS * RMSe ) ) ,Min( ( MLU / MUC ) ,Min( DS ,MUM ) ) ) / ( ( Max( RRSe,RMSe ) + Max( DS,CS ) ) + Max( Max( RRSe,DS ),Max( MUC,RCSe ) ) ) ) ,( Max( Min( Max( MLU,MUM ) ,( MUC * RRSe ) ),( ( RCSe * MUR ) + ( CS / RRSe ) ) ) / ( ( ( MUM / DS ) - ( RCSe + DS ) ) + Min( ( MUM + RCSe ) ,( RMSe - MLU ) ) ) ) ) + ( Max( ( ( Min( MUC ,CS ) * ( CS * RRSe ) ) / Min( ( CS * RMSe ) ,( RRSe - DS ) ) ),( ( ( CS * MLU ) * ( MLU / MUC ) ) + ( ( CS + DS ) - ( MLU - MUM ) ) ) ) / ( ( Min( ( RMSe * MUC ) ,( RRSe + RMSe ) ) * ( Min( MUC ,RRSe ) * ( MUC - RMSe ) ) ) / Min( Max( ( MUC - MUM ),( RRSe / DS ) ) ,( ( RRSe / RCSe ) + ( RCSe - CS ) ) ) ) ) ) / Max( ( Max( ( Min( ( MUM / DS ) ,Min( RRSe ,DS ) ) * ( Max( RCSe,RRSe ) - ( MUC + MLU ) ) ),( ( ( DS - DS ) + Min( MLU ,RCSe ) ) / ( ( RCSe * RMSe ) - ( MUM / RRSe ) ) ) ) + ( Min( ( ( MUM / MUM ) + ( MLU / MUM ) ) ,( Min( MUC ,DS ) - ( RMSe - MUR ) ) ) + ( ( Min( DS ,DS ) - ( MUM / RCSe ) ) - Min( ( RRSe * MLU ) ,( CS + RRSe ) ) ) ) ),( ( ( ( Max( RMSe,RCSe ) / ( DS / CS ) ) * Min( ( MUC * MUC ) ,( DS + MUM ) ) ) - ( ( ( RCSe / MUC ) / ( RCSe * CS ) ) / Min( Min( RMSe ,RRSe ) ,( CS + CS ) ) ) ) + Min( ( ( ( RRSe - MLU ) / ( RCSe / MLU ) ) * ( ( RMSe / MUM ) - Min( RRSe ,CS ) ) ) ,( Min( ( MLU / RMSe ) ,( CS * RRSe ) ) / Min( Min( MLU ,MLU ) ,Max( RCSe,MLU ) ) ) ) ) ) ) + ( ( ( ( ( ( Max( MUR,MUR ) / Min( MUR ,RCSe ) ) - Min( Max( MUM,RRSe ) ,Max( MUM,RRSe ) ) ) - ( ( ( MUM * RMSe ) + ( MUC / RMSe ) ) - ( Max( MUC,MUC ) / ( RMSe / RRSe ) ) ) ) / Min( ( ( Max( RMSe,RRSe ) * ( RCSe - MUC ) ) / ( Min( RMSe ,DS ) / ( MLU / RCSe ) ) ) ,( Min( ( MUC * MUC ) ,Max( MUR,MLU ) ) / ( ( CS / RMSe ) * ( RCSe + MUR ) ) ) ) ) - ( ( Min( Max( Max( MUM,RMSe ),( CS * MUC ) ) ,Max( ( CS + CS ),Max( RRSe,MUC ) ) ) / Min( ( ( MUM - MUC ) - Max( RCSe,CS ) ) ,Max( ( MUC + RMSe ),( MLU + MUM ) ) ) ) - ( ( ( ( RRSe * MUR ) - Max( RMSe,RRSe ) ) / ( Min( RMSe ,RCSe ) - Min( MUR ,RRSe ) ) ) - ( ( ( MUC * MUM ) / ( RMSe + RRSe ) ) - Max( ( RRSe / CS ),Max( RRSe,RCSe ) ) ) ) ) ) * ( Max( Min( ( ( ( MUC * MLU ) + ( MLU * MUR ) ) / Min( Min( RCSe ,RMSe ) ,( MLU - MUR ) ) ) ,( Max( ( CS + RMSe ),( RRSe * RRSe ) ) + ( ( MUM - RRSe ) / ( RRSe + CS ) ) ) ),( ( ( Max( MUC,RCSe ) + ( MUM - MLU ) ) / ( ( RRSe * RCSe ) - ( MUM - RCSe ) ) ) / ( ( ( MUC * RRSe ) - ( RMSe - DS ) ) * ( ( MLU / RMSe ) - ( MUR - MUM ) ) ) ) ) * Min( Max( ( ( ( MUC - MUM ) * Min( MLU ,MUR ) ) / ( Max( DS,RRSe ) * Min( MUR ,RRSe ) ) ),( ( ( MUM - MUM ) / Min( CS ,CS ) ) + Max( ( MUM - MUC ),( MLU * DS ) ) ) ) ,( ( ( ( CS * DS ) + ( CS / MLU ) ) - ( ( MUM + RRSe ) - ( CS / RCSe ) ) ) + Min( ( Max( MUM,MLU ) - ( MUR / RRSe ) ) ,Min( ( RCSe * RCSe ) ,Max( CS,MUC ) ) ) ) ) ) ) )", "obj1": 0.9703703703703703, "obj2": 0.036143115114053354}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) + ( RCSe - RMSe ) )", "obj1": 0.3148148148148148, "obj2": 0.5875729644800133}, {"determining": "Max( ( Max( DDR,MDR ) / MRS ),ACS )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( Max( ( MLU / MUM ),Min( RCSe ,RRSe ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7514422646411969}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8462962962962963, "obj2": 0.10197408071360824}], "10": [{"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - RMSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( DS + MUR ) ) + MUM ) ) ,( DS / DS ) ) )", "obj1": 0.42407407407407405, "obj2": 0.47170224509913244}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUM - DS ) )", "obj1": 0.40555555555555556, "obj2": 0.5196095279330613}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Max( ( Min( DS ,DS ) + ( MUR - MUM ) ),( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4387890053086358}, {"determining": "( Min( ( ARS - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( AMS - AMS ) ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( Max( MLU,MUC ) - Max( MUM,RCSe ) ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.5474159878917746}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.49664971397693436}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5074074074074074, "obj2": 0.4105852404417897}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / ( AMS - AMS ) ) ) ) ) )", "choosing": "Min( ( ( RRSe + DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.7925925925925926, "obj2": 0.17064241897408008}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4387890053086358}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) / FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.7592592592592593, "obj2": 0.19178712862126263}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.7009349437915204}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * MDR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( MUR - MUM ) * Min( MLU ,Min( Min( RMSe ,DS ) ,( CS / MUM ) ) ) ) ) ,( DS / DS ) ) )", "obj1": 0.3037037037037037, "obj2": 0.5983316212308553}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.24264174906521058}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( CS - DS ) * ( RCSe - RMSe ) )", "obj1": 0.1925925925925926, "obj2": 0.7243490384195379}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( ( ( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.6314814814814815, "obj2": 0.29035710494203687}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( PN * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * Max( ( FirstVNF_Mem_Server - ACS ),Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + MUR ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - CS ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.5907407407407408, "obj2": 0.3291503154714211}, {"determining": "Min( ( BR - CRS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( Const + FirstVNF_RAM ) ) ) )", "choosing": "( ( RCSe - DS ) * ( ( MUR * MUC ) * ( MUC / DS ) ) )", "obj1": 0.7240740740740741, "obj2": 0.2222878399594244}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / ( AMS - AMS ) ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( ( MUC / ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) )", "obj1": 0.8037037037037037, "obj2": 0.16055933472414163}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - Max( AMS,AMS ) ) )", "choosing": "Min( ( ( RRSe + DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.6167447079846639}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) + ( RCSe - RMSe ) )", "obj1": 0.3148148148148148, "obj2": 0.5875729644800133}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( Min( ( Const - RRS ) ,( DDR * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) - CRS ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,( RRSe / MUR ) ) - MUM ) * Min( ( ( MLU * DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8111111111111111, "obj2": 0.13532639818119355}, {"determining": "Min( ( ( FirstVNF_Mem - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + RCSe ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ),( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.3024947331420056}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.0361496156796956}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( ( DS + RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.29011454540309056}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + Max( BR,( ( PN / ( AMS - AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( RRSe / RMSe ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( MUR + MUC ) ) )", "obj1": 0.9074074074074074, "obj2": 0.06777173439911142}, {"determining": "( ( BR * ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) * ( Const - CRS ) )", "choosing": "( ( ( MUC - MUR ) - MUC ) + ( MLU * MUM ) )", "obj1": 0.5833333333333334, "obj2": 0.3431073950395385}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.3425925925925926, "obj2": 0.5666546459004479}, {"determining": "( ( PN / ( AMS + AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( CS * Max( RRSe,MUR ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.6948044345270357}, {"determining": "( Min( ( Min( ( Const - ACS ) ,( MDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) ,ACS ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( DS,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.2796296296296296, "obj2": 0.6191373847834649}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( MUC + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8740740740740741, "obj2": 0.08803602028558548}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6384314154013888}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( PN * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,MRS ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR / MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6092592592592593, "obj2": 0.3202111879424439}, {"determining": "Max( Max( DDR,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( Min( RMSe ,DS ) - DS ) * ( MLU - RMSe ) )", "obj1": 0.22407407407407406, "obj2": 0.6700506345606151}, {"determining": "( ( Const * FirstVNF_RAM_Server ) + ( BR - CRS ) )", "choosing": "( ( ( MUC - CS ) - MUC ) + ( MLU / MUM ) )", "obj1": 0.5314814814814814, "obj2": 0.3930807318544625}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.5462962962962963, "obj2": 0.382036856199076}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.687037037037037, "obj2": 0.2559978200056328}, {"determining": "( ( BR * MDR ) + ( BR - ( Max( AMS,AMS ) - ( PN / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.9722222222222222, "obj2": 0.01936017147497788}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8462962962962963, "obj2": 0.10197408071360824}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU + FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUC ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe - RCSe ) ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.04289876196685576}, {"determining": "Max( ( Max( DDR,MDR ) / Max( AMS,AMS ) ),ACS )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( Max( ( MLU / MUM ),Min( RCSe ,RRSe ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( ( ( RRSe + DS ) - ( RCSe * RCSe ) ) / DS ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.7389131509258299}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( ( RCSe * RCSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.2704712714481215}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) / ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / Max( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ),ACS ) ) ) ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + MUC ) + ( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC - MUC ) )", "obj1": 0.7555555555555555, "obj2": 0.19290646164801512}, {"determining": "Max( Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( PN * FirstVNF_CPU_Server ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( Max( ( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( MUR + MUR ) ) + RCSe ) ) ,( DS / DS ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6669129482673682}, {"determining": "( Min( ( Const - ACS ) ,( ARS * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - Min( Max( RRSe,DS ) ,( RCSe * RCSe ) ) ) ) )", "obj1": 0.8685185185185185, "obj2": 0.09285741664692782}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) / ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / Max( ( Max( DDR,MDR ) / MRS ),ACS ) ) ) ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + MUC ) + ( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) )", "obj1": 0.7462962962962963, "obj2": 0.21454990788123568}, {"determining": "( ( BR * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) + ( BR - CRS ) )", "choosing": "( RCSe - ( ( ( MUR * MUC ) * ( MUC / DS ) ) / ( MUR + MUC ) ) )", "obj1": 0.5518518518518518, "obj2": 0.3620986806707804}, {"determining": "Max( Max( ( ( ( ( ( ( CRS - PN ) / ( MDR * DDR ) ) - ( ( FirstVNF_CPU * AMS ) - Min( MDR ,DDR ) ) ) + Max( ( ( Const - PN ) - Min( MDR ,FirstVNF_RAM_Server ) ),( ( CRS + FirstVNF_Mem_Server ) - ( Const + FirstVNF_RAM ) ) ) ) - Min( Max( ( Min( ACS ,FirstVNF_RAM_Server ) * ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ),( ( ARS / PN ) + Min( AMS ,PN ) ) ) ,( ( ( ACS - CRS ) / ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) * ( ( CRS - MRS ) - ( Const / FirstVNF_Mem ) ) ) ) ) - ( ( ( ( Max( DDR,PN ) / ( FirstVNF_CPU / MRS ) ) + Min( ( FirstVNF_CPU / MDR ) ,Min( AMS ,BR ) ) ) - ( Max( Min( PN ,RRS ),Min( BR ,FirstVNF_CPU_Server ) ) - Max( ( Const * MRS ),Min( FirstVNF_Mem_Server ,PN ) ) ) ) / ( ( Min( Max( PN,AMS ) ,( DDR / MDR ) ) + ( ( MRS - FirstVNF_RAM_Server ) - ( ACS * FirstVNF_RAM_Server ) ) ) + ( Max( Max( PN,MDR ),Min( DDR ,MRS ) ) * ( ( FirstVNF_CPU_Server / FirstVNF_RAM_Server ) - Max( RRS,DDR ) ) ) ) ) ),( ( ( ( ( ( PN * MRS ) / ( FirstVNF_RAM_Server - Const ) ) * Min( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ,Max( DDR,MDR ) ) ) / ( ( Max( MDR,ARS ) + ( FirstVNF_RAM / FirstVNF_CPU_Server ) ) + Max( ( FirstVNF_CPU - BR ),( BR * DDR ) ) ) ) - Min( ( ( Min( ACS ,RRS ) + Min( AMS ,FirstVNF_Mem ) ) - ( ( MRS - RRS ) * ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ,( ( ( RRS / CRS ) * Max( RRS,FirstVNF_CPU ) ) / Min( ( ARS + CRS ) ,Max( PN,Const ) ) ) ) ) - ( ( Max( Max( ( FirstVNF_CPU_Server - PN ),( ACS * FirstVNF_CPU ) ),( ( PN + FirstVNF_Mem_Server ) * ( ACS - FirstVNF_CPU_Server ) ) ) / ( Max( ( ARS * FirstVNF_CPU ),Max( CRS,ARS ) ) * Max( ( ARS * ARS ),Min( DDR ,FirstVNF_CPU ) ) ) ) + ( ( Max( ( FirstVNF_CPU / MRS ),( ACS + FirstVNF_CPU_Server ) ) * ( ( BR + MRS ) / ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) ) / ( ( ( FirstVNF_CPU + AMS ) / ( CRS - FirstVNF_CPU ) ) * ( Min( DDR ,FirstVNF_RAM ) * ( RRS - RRS ) ) ) ) ) ) ),Min( ( ( ( Max( Max( ( FirstVNF_Mem / MDR ),( CRS - FirstVNF_RAM ) ),( ( MDR * FirstVNF_Mem ) * ( CRS + FirstVNF_Mem_Server ) ) ) * ( ( ( FirstVNF_RAM + FirstVNF_Mem ) / ( FirstVNF_Mem + AMS ) ) + ( ( CRS + FirstVNF_Mem ) + ( FirstVNF_CPU + ARS ) ) ) ) * ( Max( Max( Min( ACS ,ACS ),( BR - RRS ) ),( ( Const / CRS ) / Max( RRS,Const ) ) ) - Min( ( Min( RRS ,ACS ) + Max( FirstVNF_RAM,RRS ) ) ,Max( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ),( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ( ( ( FirstVNF_Mem_Server * DDR ) + ( RRS * ARS ) ) - Min( ( FirstVNF_RAM + MRS ) ,( DDR - Const ) ) ),( ( Max( CRS,BR ) * ( AMS / BR ) ) - ( Max( ARS,MRS ) + Max( ACS,BR ) ) ) ) - ( Min( ( ( RRS / FirstVNF_RAM_Server ) + Min( RRS ,FirstVNF_CPU ) ) ,Max( Max( PN,FirstVNF_CPU_Server ),( DDR / FirstVNF_CPU_Server ) ) ) / ( ( ( FirstVNF_RAM - MDR ) * ( FirstVNF_Mem * AMS ) ) / ( Min( ACS ,FirstVNF_Mem ) * ( MDR - DDR ) ) ) ) ) ) ,( ( ( ( Max( ( FirstVNF_RAM / FirstVNF_RAM_Server ),( DDR - ACS ) ) / Min( ( CRS - DDR ) ,( ACS - FirstVNF_RAM ) ) ) - ( Max( ( FirstVNF_Mem_Server / CRS ),( ARS * FirstVNF_RAM_Server ) ) / Min( Min( BR ,FirstVNF_RAM ) ,Min( ARS ,Const ) ) ) ) + ( Max( ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) + ( FirstVNF_Mem + DDR ) ),( ( FirstVNF_CPU - FirstVNF_RAM ) + ( ACS * Const ) ) ) * ( ( ( DDR * FirstVNF_Mem ) / Max( MDR,ACS ) ) + ( ( FirstVNF_CPU - FirstVNF_Mem ) / ( ARS / FirstVNF_CPU ) ) ) ) ) - Min( ( Min( ( ( MRS / FirstVNF_RAM_Server ) * Min( FirstVNF_Mem ,Const ) ) ,Min( ( FirstVNF_Mem / AMS ) ,( ACS - AMS ) ) ) / ( ( ( FirstVNF_Mem - ARS ) + ( FirstVNF_Mem_Server + ARS ) ) + ( ( FirstVNF_Mem / ARS ) / ( FirstVNF_Mem - BR ) ) ) ) ,( Min( Min( ( AMS * MDR ) ,( PN * FirstVNF_RAM_Server ) ) ,( Max( AMS,BR ) / ( AMS * PN ) ) ) * ( ( ( RRS - ACS ) + ( ACS / Const ) ) - Min( ( MDR - ACS ) ,( DDR / BR ) ) ) ) ) ) ) )", "choosing": "( ( ( Min( ( Min( ( ( RCSe - RMSe ) * ( CS * RMSe ) ) ,Min( ( MLU / MUC ) ,Min( DS ,MUM ) ) ) / ( ( Max( RRSe,RMSe ) + Max( DS,CS ) ) + Max( Max( RRSe,DS ),Max( MUC,RCSe ) ) ) ) ,( Max( Min( Max( MLU,MUM ) ,( MUC * RRSe ) ),( ( RCSe * MUR ) + ( CS / RRSe ) ) ) / ( ( ( MUM / DS ) - ( RCSe + DS ) ) + Min( ( MUM + RCSe ) ,( RMSe - MLU ) ) ) ) ) + ( Max( ( ( Min( MUC ,CS ) * ( CS * RRSe ) ) / Min( ( CS * RMSe ) ,( RRSe - DS ) ) ),( ( ( CS * MLU ) * ( MLU / MUC ) ) + ( ( CS + DS ) - ( MLU - MUM ) ) ) ) / ( ( Min( ( RMSe * MUC ) ,( RRSe + RMSe ) ) * ( Min( MUC ,RRSe ) * ( MUC - RMSe ) ) ) / Min( Max( ( MUC - MUM ),( RRSe / DS ) ) ,( ( RRSe / RCSe ) + ( RCSe - CS ) ) ) ) ) ) / Max( ( Max( ( Min( ( MUM / DS ) ,Min( RRSe ,DS ) ) * ( Max( RCSe,RRSe ) - ( MUC + MLU ) ) ),( ( ( DS - DS ) + Min( MLU ,RCSe ) ) / ( ( RCSe * RMSe ) - ( MUM / RRSe ) ) ) ) + ( Min( ( ( MUM / MUM ) + ( MLU / MUM ) ) ,( Min( MUC ,DS ) - ( RMSe - MUR ) ) ) + ( ( Min( DS ,DS ) - ( MUM / RCSe ) ) - Min( ( RRSe * MLU ) ,( CS + RRSe ) ) ) ) ),( ( ( ( Max( RMSe,RCSe ) / ( DS / CS ) ) * Min( ( MUC * MUC ) ,( DS + MUM ) ) ) - ( ( ( RCSe / MUC ) / ( RCSe * CS ) ) / Min( Min( RMSe ,RRSe ) ,( CS + CS ) ) ) ) + Min( ( ( ( RRSe - MLU ) / ( RCSe / MLU ) ) * ( ( RMSe / MUM ) - Min( RRSe ,CS ) ) ) ,( Min( ( MLU / RMSe ) ,( CS * RRSe ) ) / Min( Min( MLU ,MLU ) ,Max( RCSe,MLU ) ) ) ) ) ) ) + ( ( ( ( ( ( Max( MUR,MUR ) / Min( MUR ,RCSe ) ) - Min( Max( MUM,RRSe ) ,Max( MUM,RRSe ) ) ) - ( ( ( MUM * RMSe ) + ( MUC / RMSe ) ) - ( Max( MUC,MUC ) / ( RMSe / RRSe ) ) ) ) / Min( ( ( Max( RMSe,RRSe ) * ( RCSe - MUC ) ) / ( Min( RMSe ,DS ) / ( MLU / RCSe ) ) ) ,( Min( ( MUC * MUC ) ,Max( MUR,MLU ) ) / ( ( CS / RMSe ) * ( RCSe + MUR ) ) ) ) ) - ( ( Min( Max( Max( MUM,RMSe ),( CS * MUC ) ) ,Max( ( CS + CS ),Max( RRSe,MUC ) ) ) / Min( ( ( MUM - MUC ) - Max( RCSe,CS ) ) ,Max( ( MUC + RMSe ),( MLU + MUM ) ) ) ) - ( ( ( ( RRSe * MUR ) - Max( RMSe,RRSe ) ) / ( Min( RMSe ,RCSe ) - Min( MUR ,RRSe ) ) ) - ( ( ( MUC * MUM ) / ( RMSe + RRSe ) ) - Max( ( RRSe / CS ),Max( RRSe,RCSe ) ) ) ) ) ) * ( Max( Min( ( ( ( MUC * MLU ) + ( MLU * MUR ) ) / Min( Min( RCSe ,RMSe ) ,( MLU - MUR ) ) ) ,( Max( ( CS + RMSe ),( RRSe * RRSe ) ) + ( ( MUM - RRSe ) / ( RRSe + CS ) ) ) ),( ( ( Max( MUC,RCSe ) + ( MUM - MLU ) ) / ( ( RRSe * RCSe ) - ( MUM - RCSe ) ) ) / ( ( ( MUC * RRSe ) - ( RMSe - DS ) ) * ( ( MLU / RMSe ) - ( MUR - MUM ) ) ) ) ) * Min( Max( ( ( ( MUC - MUM ) * Min( MLU ,MUR ) ) / ( Max( DS,RRSe ) * Min( MUR ,RRSe ) ) ),( ( ( MUM - MUM ) / Min( CS ,CS ) ) + Max( ( MUM - MUC ),( MLU * DS ) ) ) ) ,( ( ( ( CS * DS ) + ( CS / MLU ) ) - ( ( MUM + RRSe ) - ( CS / RCSe ) ) ) + Min( ( Max( MUM,MLU ) - ( MUR / RRSe ) ) ,Min( ( RCSe * RCSe ) ,Max( CS,MUC ) ) ) ) ) ) ) )", "obj1": 0.9703703703703703, "obj2": 0.036143115114053354}], "11": [{"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( MLU,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.8391859396815127}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.4425925925925926, "obj2": 0.4596248614282917}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.22042385349318513}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUM - DS ) )", "obj1": 0.40555555555555556, "obj2": 0.5196095279330613}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5277777777777778, "obj2": 0.37293714955777135}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.24264174906521058}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - RMSe )", "obj1": 0.4185185185185185, "obj2": 0.47392135220801046}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) / ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / Max( ( Max( DDR,MDR ) / MRS ),ACS ) ) ) ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + MUC ) + ( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) )", "obj1": 0.7462962962962963, "obj2": 0.21454990788123568}, {"determining": "( Max( Const,FirstVNF_RAM_Server ) + ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) / ( ACS + ACS ) ) )", "choosing": "( ( ( MUC - CS ) - ( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) + ( MUC / MUM ) )", "obj1": 0.16666666666666666, "obj2": 0.7436859753710121}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - ( MDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + DS ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7635006278099986}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,FirstVNF_CPU ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.5092592592592593, "obj2": 0.4053927153184347}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.7009349437915204}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) / ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) - CRS ) - Max( FirstVNF_Mem_Server,( PN / Max( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ),ACS ) ) ) ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + MUC ) + ( Min( MUC ,( MUR + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC - MUC ) )", "obj1": 0.7814814814814814, "obj2": 0.16940116194713262}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,MUC ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.427087799156973}, {"determining": "Min( ( ( FirstVNF_Mem - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + RCSe ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ),( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.3024947331420056}, {"determining": "Max( Max( DDR,MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6890000774995342}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) - CRS ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + MUC ) + ( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC - MUC ) )", "obj1": 0.8462962962962963, "obj2": 0.10172942260249646}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + Max( BR,( ( PN / ( AMS - AMS ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( RRSe / RMSe ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( MUR + MUC ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6527439670034817}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6384314154013888}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Max( ( Min( DS ,DS ) + ( MUR - MUM ) ),( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4387890053086358}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / ( AMS - AMS ) ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( ( MUC / ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) )", "obj1": 0.8037037037037037, "obj2": 0.16055933472414163}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.0361496156796956}, {"determining": "Min( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * ( ( ( MLU + RCSe ) + ( MUC + MUC ) ) / ( DS / DS ) ) ) ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.5722222222222222, "obj2": 0.3569157396407829}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5788261529316738}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) / FirstVNF_Mem_Server ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,RCSe ) * ( MLU - RMSe ) )", "obj1": 0.7611111111111111, "obj2": 0.1887131197649519}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( MUC + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8740740740740741, "obj2": 0.08803602028558548}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( CS - DS ) * ( RCSe - RMSe ) )", "obj1": 0.1925925925925926, "obj2": 0.7243490384195379}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( Min( ( Const - RRS ) ,( DDR * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) - CRS ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,( RRSe / MUR ) ) - MUM ) * Min( ( ( MLU * DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8111111111111111, "obj2": 0.13532639818119355}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - Max( AMS,AMS ) ) )", "choosing": "Min( ( ( RRSe + DS ) - ( RCSe * RCSe ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.6167447079846639}, {"determining": "Min( ( ( Const - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) + ( RCSe - RMSe ) )", "obj1": 0.3148148148148148, "obj2": 0.5875729644800133}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUM - DS ) )", "obj1": 0.40555555555555556, "obj2": 0.5196095279330613}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( ( RCSe * RCSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.2704712714481215}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MUC / RMSe ) * Max( MUM,RCSe ) ) ) - Min( ( ( MUR * MUC ) * ( MUC / DS ) ) ,( MUR + MUC ) ) )", "obj1": 0.6518518518518519, "obj2": 0.2705102478950553}, {"determining": "( Min( ( ARS - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( AMS - AMS ) ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( Max( MLU,MUC ) - Max( MUM,RCSe ) ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.5474159878917746}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5074074074074074, "obj2": 0.4105852404417897}, {"determining": "( Min( ( Min( ( Const - ACS ) ,( MDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) ,ACS ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( DS,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.2796296296296296, "obj2": 0.6191373847834649}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( DS + MUR ) ) + MUM ) ) ,( DS / DS ) ) )", "obj1": 0.42407407407407405, "obj2": 0.47170224509913244}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( Min( ( Const - ACS ) ,( FirstVNF_CPU - FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) - CRS ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,( RRSe / MUR ) ) - MUM ) * Min( Min( ( ( Min( DS ,DS ) + MUC ) + ( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC - MUC ) ) ,( DS / MUM ) ) )", "obj1": 0.8462962962962963, "obj2": 0.10172942260249646}, {"determining": "Max( Max( DDR,( ( BR + RRS ) - Min( FirstVNF_Mem ,CRS ) ) ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RCSe,DS ) - ( RCSe * RCSe ) ) ) ) * ( MLU - RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.7380646775196459}, {"determining": "( ( BR * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( MDR ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) + ( BR - CRS ) )", "choosing": "( RCSe - ( ( ( MUR * MUC ) * ( MUC / DS ) ) / ( MUR + MUC ) ) )", "obj1": 0.5518518518518518, "obj2": 0.3620986806707804}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( PN * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,MRS ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR / MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6092592592592593, "obj2": 0.3202111879424439}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( AMS - AMS ) ) ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( AMS - AMS ) ) )", "choosing": "( Min( RMSe ,DS ) + ( Min( Max( ( ( RRSe * RRSe ) / ( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ),Min( ( RRSe - MUC ) ,( RMSe / MUC ) ) ) ,( ( ( MLU + DS ) - ( MUC / MUR ) ) + Max( ( MLU / RCSe ),Min( RCSe ,RRSe ) ) ) ) - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.5474159878917746}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( MUR * MUC ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.27925381668383553}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR / MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,MLU )", "obj1": 0.5481481481481482, "obj2": 0.3693669930798104}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( MLU - MUC ) - RMSe ) )", "obj1": 0.924074074074074, "obj2": 0.061668083646163975}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,( BR - CRS ) ) ) ) + ( BR - CRS ) )", "choosing": "( Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.575925925925926, "obj2": 0.3393661192963385}], "12": [{"determining": "Min( ( ( Const / ACS ) * Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ) ,( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) + ( RCSe - ( Max( RMSe,RMSe ) - ( MLU - Min( ( ( RMSe / RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( MLU,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.0361496156796956}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.8391859396815127}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5277777777777778, "obj2": 0.37293714955777135}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Max( ( Min( DS ,DS ) + ( MUR - MUM ) ),( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4387890053086358}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) / FirstVNF_Mem_Server ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,RCSe ) * ( MLU - RMSe ) )", "obj1": 0.7611111111111111, "obj2": 0.1887131197649519}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUM - DS ) )", "obj1": 0.40555555555555556, "obj2": 0.5196095279330613}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.7240740740740741, "obj2": 0.20699410805650825}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( MUM - DS ) * ( RCSe - RMSe ) )", "obj1": 0.18888888888888888, "obj2": 0.7215742319276331}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - RMSe )", "obj1": 0.4185185185185185, "obj2": 0.47392135220801046}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( MLU - MUC ) - RMSe ) )", "obj1": 0.924074074074074, "obj2": 0.061668083646163975}, {"determining": "( Min( PN ,( AMS * AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) * MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ) * Max( ( ( MLU + CS ) + ( MUR + MUC ) ),( DS / DS ) ) )", "obj1": 0.37962962962962965, "obj2": 0.54524412741057}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( FirstVNF_CPU - FirstVNF_CPU_Server ) ) + ( BR - CRS ) )", "choosing": "Min( ( RCSe - RMSe ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9388888888888889, "obj2": 0.05927497253580672}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.7009349437915204}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) - CRS ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,( RRSe / MUR ) ) - MUM ) * ( Max( RRSe,DS ) - ( RCSe * ( ( ( MUR * MUC ) + ( MUR + MUR ) ) + MUC ) ) ) )", "obj1": 0.8425925925925926, "obj2": 0.1261768520554907}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35, "obj2": 0.5491373982817236}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,PN ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( ( CS - MUC ) * ( RCSe - RMSe ) )", "obj1": 0.6833333333333333, "obj2": 0.2542687522806386}, {"determining": "Min( Min( BR ,CRS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * MLU ) ) ),Min( Max( MLU,CS ) ,Max( MUM,RCSe ) ) ) )", "obj1": 0.6037037037037037, "obj2": 0.3175895002105944}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.4425925925925926, "obj2": 0.4596248614282917}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( ( RCSe * RCSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.241465207565042}, {"determining": "( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( CS - DS ) * ( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) - RMSe ) )", "obj1": 0.6648148148148149, "obj2": 0.267305695124421}, {"determining": "( ( BR * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) + ( BR - CRS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.5648148148148148, "obj2": 0.35506467602798575}, {"determining": "Max( Max( DDR,Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ),( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( MUR ,( RRSe / MUR ) ) - MUM ) ) * ( MLU - RMSe ) )", "obj1": 0.16111111111111112, "obj2": 0.7616689790881347}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - ( MDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + DS ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7635006278099986}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( MUC + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8740740740740741, "obj2": 0.08803602028558548}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.22042385349318513}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) / ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ACS ) )", "choosing": "Min( ( Min( DS ,DS ) + ( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) )", "obj1": 0.7777777777777778, "obj2": 0.18412903541841008}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.4425925925925926, "obj2": 0.4596248614282917}, {"determining": "Min( ( FirstVNF_Mem_Server - ACS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUM - DS ) )", "obj1": 0.40555555555555556, "obj2": 0.5196095279330613}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6384314154013888}, {"determining": "( Min( ( Min( ( Const - ACS ) ,( MDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) ,ACS ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( DS,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.2796296296296296, "obj2": 0.6191373847834649}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.42379180366807745}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,FirstVNF_CPU ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.5092592592592593, "obj2": 0.4053927153184347}, {"determining": "( ( Min( ( ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) / ACS ) ,( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) ) - CRS ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + MUC ) + ( Min( MUC ,( Min( RMSe ,DS ) + ( ( ( MLU - MUC ) - RMSe ) - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC - MUC ) )", "obj1": 0.8703703703703703, "obj2": 0.09228512381872439}, {"determining": "( ( ( Min( ( AMS - ACS ) ,( ( MDR * FirstVNF_CPU_Server ) * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5994754603809345}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( DS + MUR ) ) + MUM ) ) ,( DS / DS ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6712162852734364}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5788261529316738}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.24264174906521058}, {"determining": "Min( ( ( FirstVNF_Mem - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + RCSe ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ),( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.3024947331420056}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( Min( ( Min( Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ,DS ) + ( MUR - MUM ) ) ,( ( MUC / Max( Min( RMSe ,DS ),( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) )", "obj1": 0.8037037037037037, "obj2": 0.1574334633534516}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.33337286270263744}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.5481481481481482, "obj2": 0.365684264105711}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Max( ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ),AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( DS - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) * ( MLU - RMSe ) )", "obj1": 0.5, "obj2": 0.4201813853420051}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( DS + MUR ) ) + MUM ) ) ,( DS / DS ) ) )", "obj1": 0.42407407407407405, "obj2": 0.47170224509913244}, {"determining": "( Min( ( Const - ACS ) ,( DDR * Max( Max( MRS,MDR ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,Const ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( RRSe,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + Max( ( ( RCSe - CS ) + ( DS + MUR ) ),MUC ) ) ,( DS / DS ) ) )", "obj1": 0.85, "obj2": 0.10104369197600663}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) )", "choosing": "( ( MUR - MUM ) * ( MUM - DS ) )", "obj1": 0.34444444444444444, "obj2": 0.5727601256472701}], "13": [{"determining": "( Max( ( Const - ACS ),( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( MUM * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( ( MUM - DS ) * ( RCSe - RMSe ) ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Const / ACS ) * Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ) ,( ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( ( Min( ( ( RCSe - CS ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) + ( RCSe - ( Max( RMSe,RMSe ) - ( MLU - Min( ( ( RMSe / RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.8391859396815127}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( MUR ,( RRSe / MUR ) ) - MUM ) ) * ( MLU - RMSe ) )", "obj1": 0.65, "obj2": 0.28803897519712435}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( PN / ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "Min( Min( ( Min( Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ,DS ) + ( MUR - MUM ) ) ,( ( MUC / Max( Min( RMSe ,DS ),( RCSe - RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) )", "obj1": 0.8037037037037037, "obj2": 0.1574334633534516}, {"determining": "Min( ( ( FirstVNF_Mem - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + RCSe ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ),( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.3024947331420056}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.33857973559706617}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.7240740740740741, "obj2": 0.20699410805650825}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.5481481481481482, "obj2": 0.365684264105711}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( MLU - Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) - RMSe ) )", "obj1": 0.9777777777777777, "obj2": 0.029365660134455882}, {"determining": "( Min( ( Min( ( Const - ACS ) ,( MDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) ,ACS ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( DS,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.2796296296296296, "obj2": 0.6191373847834649}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) * ( MLU - RMSe ) )", "obj1": 0.6648148148148149, "obj2": 0.26423108486415214}, {"determining": "( ( ( Max( Max( ( ( ( AMS + FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,ACS ) ) * Min( Max( DDR,FirstVNF_CPU ) ,Min( PN ,FirstVNF_RAM_Server ) ) ),( Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( ARS * Const ) ) - ( ( PN + ACS ) - ( CRS * Const ) ) ) ),( ( ( ( ARS * FirstVNF_RAM_Server ) / ( PN * AMS ) ) - ( ( FirstVNF_CPU - Const ) - ( FirstVNF_RAM - MDR ) ) ) + ( ( Min( MDR ,MRS ) / ( AMS * FirstVNF_CPU ) ) - ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * Max( MDR,FirstVNF_RAM_Server ) ) ) ) ) / Min( ( Min( Max( ( FirstVNF_RAM_Server * DDR ),( Const / BR ) ) ,Min( Min( CRS ,FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,PN ) ) ) - Max( ( ( FirstVNF_CPU_Server - ACS ) * Max( MRS,RRS ) ),( ( FirstVNF_RAM_Server - FirstVNF_RAM_Server ) - ( FirstVNF_Mem_Server / MRS ) ) ) ) ,( ( ( ( MDR / Const ) / ( AMS + MRS ) ) - Max( ( MDR / FirstVNF_RAM_Server ),( AMS / BR ) ) ) + Min( ( ( FirstVNF_CPU * FirstVNF_Mem ) + ( ARS + ACS ) ) ,( ( RRS + RRS ) * Max( ACS,FirstVNF_Mem ) ) ) ) ) ) * Max( ( ( Min( Max( ( FirstVNF_Mem_Server / BR ),( Const / FirstVNF_Mem_Server ) ) ,( Max( FirstVNF_Mem_Server,FirstVNF_Mem ) * ( FirstVNF_CPU_Server * MRS ) ) ) + ( Max( Max( FirstVNF_RAM,DDR ),Max( DDR,BR ) ) / Max( ( FirstVNF_CPU / Const ),Min( MDR ,FirstVNF_Mem_Server ) ) ) ) + ( ( ( ( AMS - FirstVNF_Mem_Server ) - Min( FirstVNF_RAM ,FirstVNF_RAM ) ) * Min( ( RRS - FirstVNF_CPU_Server ) ,( MRS - CRS ) ) ) / ( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) + ( RRS / RRS ) ) / ( Min( Const ,FirstVNF_Mem_Server ) + ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ),( ( ( ( ( FirstVNF_RAM_Server + MDR ) + ( FirstVNF_CPU_Server - CRS ) ) * ( Max( ACS,FirstVNF_RAM ) - Min( FirstVNF_CPU_Server ,ACS ) ) ) / ( Max( Max( MDR,DDR ),( MRS - CRS ) ) * Max( Max( Const,MDR ),( DDR * BR ) ) ) ) / Max( ( ( Min( DDR ,RRS ) + ( FirstVNF_RAM * BR ) ) - ( ( DDR / FirstVNF_Mem ) / ( PN + ARS ) ) ),Max( ( ( ARS + BR ) / Min( FirstVNF_CPU_Server ,MRS ) ),( ( PN / ACS ) / Max( RRS,PN ) ) ) ) ) ) ) * ( ( Max( ( ( Max( ( ARS + ARS ),( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) + ( MDR + AMS ) ) ) - ( ( ( AMS / AMS ) / ( FirstVNF_CPU_Server / MRS ) ) * Min( Max( DDR,CRS ) ,( MDR - PN ) ) ) ),( ( ( ( RRS + PN ) - Max( FirstVNF_CPU,MRS ) ) + ( ( Const / ACS ) + ( MRS * FirstVNF_RAM ) ) ) * ( ( ( RRS / CRS ) * ( FirstVNF_Mem + Const ) ) / ( ( DDR - MRS ) + Max( CRS,FirstVNF_CPU ) ) ) ) ) + ( ( Max( Min( ( BR - FirstVNF_Mem ) ,( DDR - AMS ) ),Max( ( PN - RRS ),Min( PN ,PN ) ) ) - Max( ( ( FirstVNF_RAM * RRS ) - ( AMS / FirstVNF_RAM ) ),( ( CRS - FirstVNF_Mem ) * Min( Const ,ACS ) ) ) ) - ( ( Max( ( FirstVNF_CPU - FirstVNF_Mem ),( MDR + CRS ) ) - ( Max( PN,FirstVNF_CPU ) / ( ARS / PN ) ) ) * Max( ( ( AMS - MDR ) * ( MDR * FirstVNF_RAM_Server ) ),Min( Min( RRS ,FirstVNF_Mem ) ,Min( RRS ,ARS ) ) ) ) ) ) * ( ( ( ( Max( Max( ARS,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * ARS ) ) + Max( Max( PN,BR ),Min( ARS ,FirstVNF_CPU_Server ) ) ) * ( Max( ( RRS / FirstVNF_RAM ),Min( FirstVNF_RAM ,Const ) ) - Min( ( FirstVNF_Mem + ACS ) ,( DDR + MRS ) ) ) ) * ( ( Max( Min( DDR ,Const ),( CRS / FirstVNF_Mem_Server ) ) + ( ( AMS / CRS ) * ( ACS - FirstVNF_CPU ) ) ) + ( ( ( FirstVNF_Mem + BR ) + Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) * ( ( AMS * DDR ) + ( DDR - FirstVNF_CPU ) ) ) ) ) - ( ( ( Min( Max( ARS,BR ) ,( FirstVNF_RAM_Server * DDR ) ) + ( ( PN - FirstVNF_Mem_Server ) - Max( ARS,FirstVNF_CPU_Server ) ) ) + ( ( Max( FirstVNF_RAM_Server,MRS ) / ( RRS / FirstVNF_Mem ) ) * Min( ( FirstVNF_RAM / Const ) ,Max( ACS,CRS ) ) ) ) - ( Max( ( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) * ( CRS * FirstVNF_CPU ) ),Min( ( AMS / FirstVNF_CPU ) ,Max( FirstVNF_RAM,FirstVNF_Mem_Server ) ) ) / ( ( Max( MRS,ACS ) * ( FirstVNF_RAM_Server / FirstVNF_Mem_Server ) ) * Max( Min( ARS ,DDR ),( RRS * DDR ) ) ) ) ) ) ) )", "choosing": "( ( ( ( ( ( Min( ( MUM * RCSe ) ,Min( MUM ,RMSe ) ) / ( ( MUC / RRSe ) + Max( DS,MLU ) ) ) * ( ( Max( MUC,RCSe ) * ( RCSe / MUR ) ) + ( ( CS * MUR ) + ( MLU * CS ) ) ) ) * Max( ( ( ( MLU / CS ) / ( MUC * RMSe ) ) - Min( Max( MUM,CS ) ,( RCSe + MUC ) ) ),Min( Max( ( MLU / MLU ),Max( DS,MUR ) ) ,Max( ( RCSe - MUR ),( MUC + RMSe ) ) ) ) ) + ( Min( ( ( Min( MUC ,RCSe ) + ( MUR - MUR ) ) / Min( ( RCSe / MLU ) ,Min( MUR ,MLU ) ) ) ,( ( ( MUR * DS ) * ( DS - RMSe ) ) - Min( Min( MLU ,RCSe ) ,( MLU - RRSe ) ) ) ) + ( Max( ( Min( RRSe ,RMSe ) - ( CS * RRSe ) ),( Min( MUR ,RMSe ) / ( MUM + MLU ) ) ) * Max( Max( Min( RRSe ,MUC ),( RMSe + MUR ) ),( ( RMSe / DS ) - ( MUR + MUM ) ) ) ) ) ) + ( ( Max( ( ( ( MLU * DS ) + Max( CS,RRSe ) ) + Max( ( RMSe - DS ),( MUC / CS ) ) ),Min( ( Max( CS,DS ) + ( MUM + MUC ) ) ,Min( ( MUM * MUR ) ,( MLU + RRSe ) ) ) ) - ( ( ( ( RMSe - MUM ) + ( RMSe / DS ) ) - ( ( RMSe * MUR ) * ( RRSe - MUR ) ) ) + ( ( ( DS / CS ) + ( DS / MUM ) ) - ( ( CS - MUR ) + Min( MLU ,MUR ) ) ) ) ) - ( Min( ( Min( ( MUM * RMSe ) ,( RCSe + MUR ) ) * Max( ( MLU - MUR ),( CS + MUM ) ) ) ,Max( ( ( MLU + MUM ) + ( RRSe * RMSe ) ),( ( RRSe / MLU ) + ( MLU - CS ) ) ) ) * ( Max( Max( ( MUC / MUC ),Max( RMSe,DS ) ),( Min( RRSe ,CS ) + Min( MUR ,CS ) ) ) / ( ( ( CS - MUM ) + Min( MUR ,MUR ) ) * ( ( MUC + RRSe ) - ( DS + CS ) ) ) ) ) ) ) + Min( ( Max( Max( Min( ( Min( RMSe ,MLU ) + ( RMSe * RMSe ) ) ,( Min( RMSe ,MLU ) - Min( DS ,MLU ) ) ),( ( ( RRSe / RMSe ) / Min( RCSe ,MUM ) ) + ( ( MUM * CS ) - ( MLU * RCSe ) ) ) ),( ( Min( ( RMSe + RMSe ) ,( RCSe - RMSe ) ) + Max( ( CS - MUR ),( RRSe * MUR ) ) ) - ( ( ( RMSe / RCSe ) * ( MUM * MUC ) ) - Min( ( RMSe / MLU ) ,( DS / RRSe ) ) ) ) ) + ( Min( ( ( ( MLU / MLU ) * Max( MUM,RCSe ) ) / ( Max( MUM,MUC ) + ( MUR - DS ) ) ) ,( Min( Min( MUC ,CS ) ,( MUR + MUC ) ) * Min( ( CS - MLU ) ,( DS - CS ) ) ) ) + Max( ( ( Min( MUC ,MUM ) * Min( MUM ,MUR ) ) / ( ( MUM / DS ) * ( DS + MUC ) ) ),Min( ( ( RMSe * MUM ) * ( MUM - RRSe ) ) ,( Min( RMSe ,MLU ) - ( DS - DS ) ) ) ) ) ) ,( ( ( Max( ( Max( RMSe,RRSe ) * Min( MUR ,DS ) ),Min( ( RRSe * MUR ) ,( RCSe / MLU ) ) ) + ( ( ( RRSe / RMSe ) - ( MUM * MUC ) ) * Min( ( RCSe + RCSe ) ,( RRSe - MUM ) ) ) ) - ( ( ( Min( RMSe ,DS ) + ( MUR * MUR ) ) / ( ( RMSe + MUM ) - ( CS * CS ) ) ) + ( Min( ( MUC - RRSe ) ,( MUM * RRSe ) ) / Max( ( RRSe / CS ),( MLU + CS ) ) ) ) ) + Min( ( ( ( ( RCSe / MUM ) / ( MLU - DS ) ) * Max( ( MUR - RCSe ),Min( RCSe ,MLU ) ) ) + Max( ( Max( MUR,DS ) * ( MLU - RMSe ) ),( ( CS * MUM ) / Min( DS ,MUM ) ) ) ) ,( Min( Min( ( DS * MLU ) ,Max( MUM,CS ) ) ,Min( Min( RMSe ,MUR ) ,( RMSe - CS ) ) ) + ( Min( ( RCSe - DS ) ,( MUR + RRSe ) ) / ( Max( RMSe,MUC ) - ( CS - MUR ) ) ) ) ) ) ) )", "obj1": 0.4148148148148148, "obj2": 0.5108719326770873}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.32407407407407407, "obj2": 0.5773154645687767}, {"determining": "Max( Max( DDR,Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ),( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( CS - DS ) * ( RCSe - RMSe ) )", "obj1": 0.15925925925925927, "obj2": 0.7474817354367537}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.4740740740740741, "obj2": 0.44453755908755666}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( MUM - DS ) * Min( ( MUR + MUM ) ,RMSe ) )", "obj1": 0.17222222222222222, "obj2": 0.7368592387202799}, {"determining": "( Min( PN ,( AMS * AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) * MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ) * Max( ( ( MLU + CS ) + ( MUR + MUC ) ),( DS / DS ) ) )", "obj1": 0.37962962962962965, "obj2": 0.54524412741057}, {"determining": "( Min( ( Const - ACS ) ,( DDR * Max( Max( MRS,MDR ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_RAM ) ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( RRSe,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( DS + MUR ) ) + MUC ) ) ,Min( ( Min( DS ,DS ) + ( Min( MUC ,( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) - ( MUC - RMSe ) ) ) ,( MUC / RMSe ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5216236907764906}, {"determining": "( Min( Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ,FirstVNF_CPU ) + ( BR - FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( DS + DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.5148148148148148, "obj2": 0.4026605940150558}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( MLU,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.250773027144613}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) / ( ACS + ACS ) ) * FirstVNF_Mem_Server ) ,( ( ( FirstVNF_Mem - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ACS ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( RRSe,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.7759259259259259, "obj2": 0.17530214035374805}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5277777777777778, "obj2": 0.37293714955777135}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) - CRS ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,( RRSe / MUR ) ) - MUM ) * ( Max( RRSe,DS ) - ( RCSe * ( ( ( MUR * MUC ) + ( MUR + MUR ) ) + MUC ) ) ) )", "obj1": 0.8425925925925926, "obj2": 0.12614731427683565}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( ( RCSe * RCSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.241465207565042}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35, "obj2": 0.5491373982817236}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - RMSe )", "obj1": 0.4185185185185185, "obj2": 0.47392135220801046}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) / FirstVNF_Mem_Server ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,RCSe ) * ( MLU - RMSe ) )", "obj1": 0.7611111111111111, "obj2": 0.1887131197649519}, {"determining": "( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,DDR ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( ( ( RMSe - DS ) * ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.4571647662878833}, {"determining": "Min( Min( BR ,CRS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * MLU ) ) ),Min( Max( MLU,CS ) ,Max( MUM,RCSe ) ) ) )", "obj1": 0.6037037037037037, "obj2": 0.3175895002105944}, {"determining": "( ( ( Min( ( AMS - ACS ) ,( ( MDR * FirstVNF_CPU_Server ) * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5994754603809345}, {"determining": "( ( RRS + FirstVNF_RAM ) * Min( ( Min( FirstVNF_CPU_Server ,CRS ) * Max( FirstVNF_Mem_Server,PN ) ) ,FirstVNF_CPU_Server ) )", "choosing": "( ( DS - MUR ) / ( DS / Min( RCSe ,( RRSe / MUR ) ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6384314154013888}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Max( ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ),AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( DS - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) * ( MLU - RMSe ) )", "obj1": 0.5, "obj2": 0.4201813853420051}, {"determining": "( ( ( Min( ( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) - ACS ) ,( ( MDR * FirstVNF_CPU_Server ) * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - FirstVNF_RAM_Server ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5994754603809345}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( MUC + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8740740740740741, "obj2": 0.08803602028558548}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( ( MUM - DS ) * ( MLU - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6912301344477243}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.22042385349318513}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( DS + MUR ) ) + MUM ) ) ,( DS / DS ) ) )", "obj1": 0.42407407407407405, "obj2": 0.47170224509913244}, {"determining": "( Min( ( Const - ACS ) ,( DDR * Max( Max( MRS,MDR ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,Const ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( RRSe,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + Max( ( ( RCSe - CS ) + ( DS + MUR ) ),MUC ) ) ,( DS / DS ) ) )", "obj1": 0.34444444444444444, "obj2": 0.5597371770711681}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.9333333333333333, "obj2": 0.043750601039064876}, {"determining": "Max( Max( Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ),Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ),( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / FirstVNF_RAM_Server ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( MUR ,( RRSe / MUR ) ) - ( ( CS - DS ) * ( RCSe - RMSe ) ) ) ) * ( MLU - RMSe ) )", "obj1": 0.26481481481481484, "obj2": 0.6469834631053697}, {"determining": "( Min( ( Const - Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Max( RRSe,DS ) )", "obj1": 0.5907407407407408, "obj2": 0.33406143252665166}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.42379180366807745}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.8462962962962963, "obj2": 0.10172942260249646}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - ( MDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + DS ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7635006278099986}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,FirstVNF_CPU ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.5092592592592593, "obj2": 0.4053927153184347}, {"determining": "( ( BR * FirstVNF_RAM_Server ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( DS + MUR ) ) + MUM ) ) ,( DS / DS ) ) )", "obj1": 0.4759259259259259, "obj2": 0.42982305892225503}], "14": [{"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server )", "choosing": "( ( MUM - RCSe ) * ( MLU - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( Const - ACS ),( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( MUM * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( ( MUM - DS ) * ( RCSe - RMSe ) ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( MLU - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7703703703703704, "obj2": 0.15658982971911897}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( ( PN / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( Max( ( ( RRSe / MUC ) / ( RCSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.2111111111111111, "obj2": 0.6909079724144132}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( MUR ,( RRSe / MUR ) ) - MUM ) ) * ( MLU - RMSe ) )", "obj1": 0.65, "obj2": 0.28803897519712435}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.6962962962962963, "obj2": 0.23586522406635818}, {"determining": "( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,DDR ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( ( ( RMSe - DS ) * ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.4571647662878833}, {"determining": "( Min( PN ,( AMS * AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) * MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ) * Max( ( ( MLU + CS ) + ( MUR + MUC ) ),( DS / DS ) ) )", "obj1": 0.37962962962962965, "obj2": 0.54524412741057}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.7240740740740741, "obj2": 0.20699410805650825}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5277777777777778, "obj2": 0.37293714955777135}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.8462962962962963, "obj2": 0.10172942260249646}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.5481481481481482, "obj2": 0.365684264105711}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.33857973559706617}, {"determining": "( Min( ( Min( ( Const - ACS ) ,( MDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) ,ACS ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( DS,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.2796296296296296, "obj2": 0.6191373847834649}, {"determining": "( ( AMS / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( MLU + Min( ( ( ( MLU - RMSe ) + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) - RMSe ) )", "obj1": 0.9277777777777778, "obj2": 0.06051916610593938}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.8391859396815127}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.4148148148148148, "obj2": 0.5088949606373292}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( MUC + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8740740740740741, "obj2": 0.08803602028558548}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) / FirstVNF_Mem_Server ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,RCSe ) * ( MLU - RMSe ) )", "obj1": 0.7611111111111111, "obj2": 0.1887131197649519}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( MLU,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.250773027144613}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( ( FirstVNF_RAM_Server / ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( Min( MUC ,RCSe ) ,( ( DS / DS ) - MUC ) ) )", "obj1": 0.9648148148148148, "obj2": 0.026987669787291342}, {"determining": "Min( Min( BR ,CRS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * MLU ) ) ),Min( Max( MLU,CS ) ,Max( MUM,RCSe ) ) ) )", "obj1": 0.6037037037037037, "obj2": 0.3175895002105944}, {"determining": "( Min( ( Const - ACS ) ,( DDR * Max( Max( MRS,MDR ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,Const ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( RRSe,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + Max( ( ( RCSe - CS ) + ( DS + MUR ) ),MUC ) ) ,( DS / DS ) ) )", "obj1": 0.34444444444444444, "obj2": 0.5597371770711681}, {"determining": "( Min( Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ,FirstVNF_CPU ) + ( BR - FirstVNF_Mem ) )", "choosing": "Min( Min( ( ( DS + DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.5148148148148148, "obj2": 0.4026605940150558}, {"determining": "( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_RAM * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) - CRS ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUR ,( RRSe / MUR ) ) - MUM ) * ( Max( RRSe,DS ) - ( RCSe * ( ( ( MUR * MUC ) + ( MUR + MUR ) ) + MUC ) ) ) )", "obj1": 0.8425925925925926, "obj2": 0.12614731427683565}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.3, "obj2": 0.5974511864855837}, {"determining": "Min( ( ( FirstVNF_Mem - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + RCSe ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ),( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.3024947331420056}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35, "obj2": 0.5491373982817236}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) / ( ACS + ACS ) ) ) ) )", "choosing": "( ( Max( ( ( ( RCSe - CS ) + ( DS + MUR ) ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) )", "obj1": 0.9407407407407408, "obj2": 0.034136190599195766}, {"determining": "( Min( ( Const - ACS ) ,( DDR * Max( Max( MRS,MDR ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_RAM ) ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.3962962962962963, "obj2": 0.5213790326653789}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - ( MDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + DS ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7635006278099986}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.47031509724655995}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Max( ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ),AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( DS - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) * ( MLU - RMSe ) )", "obj1": 0.5, "obj2": 0.4201813853420051}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.4740740740740741, "obj2": 0.44453755908755666}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - ARS ) * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - AMS ) )", "choosing": "( MLU * ( MLU * MUR ) )", "obj1": 0.7648148148148148, "obj2": 0.18532496235010532}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - RMSe )", "obj1": 0.4185185185185185, "obj2": 0.47392135220801046}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.22042385349318513}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.9833333333333333, "obj2": 0.018708358873248836}, {"determining": "( ( DDR / MDR ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - Min( ( MUC / RMSe ) ,RMSe ) ) + ( DS + MUR ) ) + MUM ) ) ,( DS / DS ) ) )", "obj1": 0.22407407407407406, "obj2": 0.6720521886487691}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) / CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( CS - DS ) * ( RCSe - RMSe ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5889806088631359}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( MUC * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( ( ( RCSe - CS ) + ( DS + MUR ) ) + MUM ) ) ,( DS / DS ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6580572575590306}, {"determining": "( Min( ( Const - Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( FirstVNF_CPU_Server / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) )", "choosing": "( ( Max( ( MUR / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Max( RRSe,DS ) )", "obj1": 0.5907407407407408, "obj2": 0.3340614325266516}, {"determining": "Max( Max( DDR,Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ),( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( CS - DS ) * ( RCSe - ( RMSe * MUR ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7534244962111168}, {"determining": "Min( Min( FirstVNF_Mem ,CRS ) ,( ( ( FirstVNF_CPU + PN ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,( ( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( RRSe,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * MLU ) ) ) - ( Max( MLU,DS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.08761094177387299}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,FirstVNF_CPU ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.5092592592592593, "obj2": 0.40478487690806875}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( MUM - DS ) * Min( ( MUR + MUM ) ,RMSe ) )", "obj1": 0.17222222222222222, "obj2": 0.7368592387202799}], "15": [{"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) + Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Min( Min( ( ( ( Min( ( MUR - DS ) ,Min( MUC ,MUR ) ) + Min( Min( RCSe ,MUC ) ,( CS - MUC ) ) ) + ( ( ( MLU / RRSe ) / ( MLU - DS ) ) * ( ( MUM + MUM ) - Min( CS ,MUM ) ) ) ) / Max( ( ( Max( MUM,MUR ) * Max( MUM,RCSe ) ) - ( ( MLU / MLU ) + ( MUR / MUR ) ) ),( ( Min( RRSe ,RCSe ) - ( CS / RMSe ) ) / Max( ( MLU / RCSe ),Min( DS ,RCSe ) ) ) ) ) ,Min( ( ( ( ( RCSe + MUR ) / ( MLU + RMSe ) ) + Min( ( MUM + MUR ) ,Min( DS ,RMSe ) ) ) / Max( ( ( RRSe * MUM ) - ( RRSe + MUC ) ),( Min( RCSe ,RMSe ) * Min( MUR ,MUM ) ) ) ) ,Min( ( ( ( DS - MUM ) * Min( RCSe ,MLU ) ) + ( ( CS + RRSe ) / Max( DS,MUR ) ) ) ,( Max( ( MLU + MLU ),( RCSe - MUR ) ) - ( ( CS * MUR ) + ( MUM * CS ) ) ) ) ) ) ,( ( Min( ( Min( ( MUC + CS ) ,Min( MUM ,MUM ) ) + ( ( DS / RCSe ) - ( CS + MUR ) ) ) ,( ( Max( RRSe,MUM ) - ( CS * CS ) ) - ( Min( RCSe ,CS ) * Min( MUR ,RRSe ) ) ) ) * ( ( ( ( MUC + MLU ) * ( MUR / RMSe ) ) + ( ( MLU / RMSe ) / Max( DS,MUC ) ) ) * ( ( ( RMSe / RRSe ) + Min( MLU ,MUR ) ) * ( ( CS / MUR ) - ( RRSe + CS ) ) ) ) ) * Min( ( ( Max( Max( CS,MUR ),( RRSe * MUM ) ) - ( Max( RCSe,MUM ) / ( MLU + MUM ) ) ) + ( Max( ( MUM * MLU ),( CS - MUM ) ) / ( Min( MUM ,CS ) + ( CS + MUC ) ) ) ) ,Max( Max( ( Min( RMSe ,RCSe ) + ( CS / CS ) ),Max( Max( MUR,CS ),( DS - MLU ) ) ),( Max( ( RMSe / RRSe ),( CS * MUC ) ) / ( Max( MLU,MUR ) - ( RCSe + RMSe ) ) ) ) ) ) ),( ( ( ( ( ( ( RCSe / RRSe ) - ( MLU / MLU ) ) * Max( ( MLU - MUC ),( MLU + MUM ) ) ) - ( ( ( MUR - RRSe ) / ( RRSe - MUR ) ) * Max( Max( MLU,RRSe ),( MUC + DS ) ) ) ) - ( ( Max( Min( MUC ,RRSe ),Max( RMSe,DS ) ) - Max( ( CS + RCSe ),Min( RMSe ,DS ) ) ) * Max( ( ( MUC + CS ) - ( MLU - RMSe ) ),( ( MLU + RMSe ) + ( MUM - MLU ) ) ) ) ) - Max( ( ( Min( ( DS - CS ) ,( MUM - RCSe ) ) - ( ( DS + RMSe ) - Min( MUM ,MUR ) ) ) - ( ( Max( RMSe,RCSe ) + Min( MUM ,MUR ) ) * Min( ( DS / MUM ) ,Min( RMSe ,MUM ) ) ) ),( Min( ( Max( CS,MUR ) + ( MUR + MUM ) ) ,Max( Max( CS,MLU ),( CS - RRSe ) ) ) / Min( Min( ( RRSe - MUM ) ,( MUM * MLU ) ) ,( Max( RRSe,MUM ) + ( CS / MUM ) ) ) ) ) ) / Max( Min( ( ( ( Max( MLU,RMSe ) - ( CS / RMSe ) ) * ( Max( RCSe,RCSe ) + ( RRSe * MUM ) ) ) / Max( ( ( RRSe * DS ) / ( MUM + MUR ) ),( ( RRSe / RCSe ) / ( RCSe + MUC ) ) ) ) ,( ( ( ( MUR + RRSe ) / ( RMSe - RRSe ) ) / ( Min( MUC ,MLU ) - ( RCSe - MUM ) ) ) + ( Min( Min( RMSe ,MUM ) ,( MUC / RMSe ) ) - Min( ( RRSe * DS ) ,( RMSe / CS ) ) ) ) ),( ( ( ( Max( MUM,MUM ) + ( CS - RCSe ) ) * ( ( MUR + DS ) - ( MUC / RRSe ) ) ) + ( Max( ( MUM + MUR ),Max( DS,RCSe ) ) / Min( ( CS + MUR ) ,( RRSe - MUM ) ) ) ) / ( ( ( ( MUM / CS ) + ( MLU - RRSe ) ) / ( Min( MUM ,CS ) * ( MUC / RMSe ) ) ) - ( Min( ( MUR / CS ) ,Max( RMSe,MUR ) ) / Max( Max( MLU,RMSe ),( CS / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server )", "choosing": "( ( MUM - RCSe ) * ( MLU - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( MLU - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7703703703703704, "obj2": 0.15658982971911897}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.8391859396815127}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.4740740740740741, "obj2": 0.44453755908755666}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( Min( ( Const - ACS ) ,( DDR * Max( Max( MRS,MDR ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_Mem - FirstVNF_RAM ) ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.3962962962962963, "obj2": 0.5213790326653789}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "Min( ( ( FirstVNF_Mem - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + RCSe ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ),( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.3024947331420056}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5292522339989718}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( MUR ,( RRSe / MUR ) ) - MUM ) ) * ( MLU - RMSe ) )", "obj1": 0.65, "obj2": 0.28803897519712435}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * MRS ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MLU - RMSe )", "obj1": 0.4148148148148148, "obj2": 0.47608275133317735}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Max( ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ),AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( DS - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) * ( MLU - RMSe ) )", "obj1": 0.5, "obj2": 0.4201813853420051}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.33857973559706617}, {"determining": "( ( PN + Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( ( DS * RCSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( MLU,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.250773027144613}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( ( ( Const - ACS ) / ( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / MUM ) ) )", "obj1": 0.8407407407407408, "obj2": 0.11514231927672403}, {"determining": "( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,DDR ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( ( ( RMSe - DS ) * ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.4571647662878833}, {"determining": "Min( Min( BR ,CRS ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * MLU ) ) ),Min( Max( MLU,CS ) ,Max( MUM,RCSe ) ) ) )", "obj1": 0.6037037037037037, "obj2": 0.3175895002105944}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5277777777777778, "obj2": 0.37293714955777135}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * PN ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,( ( RCSe - CS ) + ( DS + MUR ) ) ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.3314814814814815, "obj2": 0.5732232369892996}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35, "obj2": 0.5491373982817236}, {"determining": "( ( PN / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( Max( ( ( RRSe / MUC ) / ( RCSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.2111111111111111, "obj2": 0.6909079724144132}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( ( FirstVNF_RAM_Server / ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ,( MRS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( MUM * MUR ) ),( Max( MLU,MUC ) * Max( MLU,RCSe ) ) ) - MUM ) * Min( Min( MUC ,RCSe ) ,( ( DS / DS ) - MUC ) ) )", "obj1": 0.9648148148148148, "obj2": 0.02698766978729134}, {"determining": "Max( Max( DDR,Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ),( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server ) )", "choosing": "( ( CS - DS ) * ( RCSe - ( RMSe * MUR ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7534244962111168}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + MUC ) ) ) ) ) )", "obj1": 0.524074074074074, "obj2": 0.3938727676514288}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( MUM - DS ) * Min( ( MUR + MUM ) ,RMSe ) )", "obj1": 0.17222222222222222, "obj2": 0.7368592387202799}, {"determining": "( Min( ( Const - ACS ) ,( DDR * Max( Max( MRS,MDR ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,Const ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( RRSe,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + Max( ( ( RCSe - CS ) + ( DS + MUR ) ),MUC ) ) ,( DS / DS ) ) )", "obj1": 0.34444444444444444, "obj2": 0.5597371770711681}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.5537037037037037, "obj2": 0.36011427990053435}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - ARS ) * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - AMS ) )", "choosing": "( MLU * ( MLU * MUR ) )", "obj1": 0.7648148148148148, "obj2": 0.18532496235010532}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( MUC ,RCSe ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.2111111111111111, "obj2": 0.6909079724144132}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( CS - DS ) * ( RCSe - RMSe ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( RRSe / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.85, "obj2": 0.10082904990633053}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.6962962962962963, "obj2": 0.23586522406635818}, {"determining": "( ( AMS / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( MLU + Min( ( ( ( MLU - RMSe ) + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) - RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049560626538023525}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.6962962962962963, "obj2": 0.23586522406635818}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.22042385349318513}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( FirstVNF_RAM_Server - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( RMSe ,DS ) + ( RCSe + RMSe ) ) ) )", "obj1": 0.5481481481481482, "obj2": 0.365684264105711}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( MLU,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.250773027144613}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ) - ( MDR - ( MDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( RRSe + ( DS + DS ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7450690953643994}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( MUR ,( RRSe / MUR ) ) - MUM ) ) * ( MLU - RMSe ) )", "obj1": 0.65, "obj2": 0.28803897519712435}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) )", "obj1": 0.7388888888888889, "obj2": 0.19286515175566943}, {"determining": "( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * FirstVNF_Mem ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "( Min( ( ( Max( Min( Min( ( DS + RCSe ) ,( MUC * MUR ) ) ,Min( ( DS * MUR ) ,( RCSe / RRSe ) ) ),Max( Max( Max( DS,MUM ),Max( MLU,MUM ) ),Min( Max( MLU,CS ) ,( CS * MUM ) ) ) ) - Min( ( ( Max( MUR,RMSe ) * ( RCSe - CS ) ) * Min( Max( RRSe,RMSe ) ,( CS - MUC ) ) ) ,( ( ( RMSe + CS ) + Max( RMSe,RRSe ) ) * ( Min( MUC ,MUC ) - Min( MUR ,RMSe ) ) ) ) ) - ( ( Max( Min( ( MUC * RRSe ) ,( MUM - RRSe ) ),( ( MUM * RRSe ) * ( MUR - MLU ) ) ) - Max( ( Min( MUM ,RMSe ) + ( RMSe + RCSe ) ),( Min( MUC ,MLU ) - Min( CS ,RMSe ) ) ) ) / ( Max( Min( ( MUM - MUM ) ,( MUR * RRSe ) ),Max( ( MUC - MUC ),Max( RMSe,DS ) ) ) + ( ( ( MUC - MLU ) - ( RCSe / CS ) ) / ( ( RRSe / MLU ) * ( MUC * MUR ) ) ) ) ) ) ,( Max( ( ( ( ( RRSe / MUM ) - ( MUM * MUC ) ) * Min( Min( MLU ,MLU ) ,( MLU + MUR ) ) ) * ( ( Min( RMSe ,MUM ) - ( RRSe - MUM ) ) / Min( ( MLU - DS ) ,Max( MLU,MUM ) ) ) ),( Min( Max( ( RRSe - RMSe ),( CS + RRSe ) ) ,Min( ( MUM * MUR ) ,Min( RCSe ,DS ) ) ) - Min( Max( Min( RRSe ,RMSe ),( RMSe + RMSe ) ) ,Min( ( RCSe + RCSe ) ,Max( MLU,RRSe ) ) ) ) ) * ( ( ( ( ( RMSe / MUM ) + ( CS + RMSe ) ) * ( Min( RRSe ,RCSe ) - Min( DS ,MUM ) ) ) / ( ( ( MLU + CS ) - Max( DS,MUM ) ) - ( ( RRSe / MUC ) - ( RMSe / MLU ) ) ) ) - ( Max( ( Min( CS ,MUR ) * ( MUM + CS ) ),Min( Max( RRSe,RRSe ) ,( RMSe + RCSe ) ) ) + Min( ( ( DS + CS ) / ( MLU * RCSe ) ) ,( ( RMSe * RCSe ) * ( RMSe - MUR ) ) ) ) ) ) ) + ( ( ( ( ( ( ( RMSe + MUC ) / ( CS / RRSe ) ) + Min( ( RCSe - RMSe ) ,Max( DS,MUC ) ) ) + ( ( Min( RMSe ,MLU ) + Min( RMSe ,RMSe ) ) * Max( ( CS / MUC ),( MUM * RRSe ) ) ) ) - ( ( ( ( RMSe - RRSe ) / ( DS + MUR ) ) + Min( ( MUR - RRSe ) ,( CS + MUC ) ) ) - ( ( ( DS - MLU ) * ( MLU * MUM ) ) / ( Min( DS ,RRSe ) - Max( MUR,CS ) ) ) ) ) * ( ( Min( ( ( CS * DS ) - ( RRSe + RMSe ) ) ,Min( Min( MUM ,MLU ) ,Max( DS,CS ) ) ) * Min( ( ( RMSe + MLU ) - Min( RRSe ,RCSe ) ) ,( Max( MUM,CS ) - Min( CS ,RMSe ) ) ) ) + ( ( ( ( DS - CS ) - ( MUM / MUM ) ) / Max( ( DS * MUR ),( DS * MUR ) ) ) / ( ( ( MUM * RRSe ) * ( MUR + MLU ) ) - Min( ( MLU - MLU ) ,( CS / RRSe ) ) ) ) ) ) + ( ( ( ( ( ( RCSe * MUC ) - ( CS - RCSe ) ) + ( ( RRSe * DS ) * Max( CS,MUM ) ) ) + ( ( ( RRSe - MLU ) + ( RCSe - CS ) ) - Max( ( CS * RMSe ),( DS + CS ) ) ) ) - ( Max( ( ( DS * RRSe ) + ( RRSe / RCSe ) ),( Min( MUM ,MUM ) / ( MUM + MUC ) ) ) - ( ( Min( MLU ,DS ) / ( RRSe - MUM ) ) - Min( ( MUR * DS ) ,( CS * CS ) ) ) ) ) * ( ( ( Min( ( DS / MUM ) ,( RMSe + MUC ) ) + ( ( MLU / MLU ) - ( RMSe / RRSe ) ) ) - Max( ( Min( MUR ,MUM ) * Min( DS ,MLU ) ),( Min( RRSe ,DS ) / Max( MUC,RRSe ) ) ) ) - ( ( ( ( RMSe - MLU ) * ( RCSe - MUM ) ) / ( Min( MUR ,RRSe ) * Min( DS ,MUM ) ) ) + Max( ( Max( RMSe,MUR ) / ( RMSe + DS ) ),Min( ( MUM * DS ) ,( RMSe * RCSe ) ) ) ) ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.011970649945002703}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( MUC + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8740740740740741, "obj2": 0.08803602028558548}, {"determining": "( Min( ( Min( ( Const - ACS ) ,( MDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) ,ACS ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( DS,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.2796296296296296, "obj2": 0.6191373847834649}, {"determining": "Min( ( ( Min( FirstVNF_RAM_Server ,( BR - CRS ) ) * ( ACS + ACS ) ) / FirstVNF_Mem_Server ) ,( ( Max( FirstVNF_CPU,FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Min( MUM ,RCSe ) * ( MLU - RMSe ) )", "obj1": 0.7611111111111111, "obj2": 0.1887131197649519}, {"determining": "Min( Min( FirstVNF_Mem ,CRS ) ,( ( ( FirstVNF_CPU - PN ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.912962962962963, "obj2": 0.06364765263838523}, {"determining": "( ( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) - FirstVNF_CPU ) + ( BR - CRS ) )", "choosing": "Min( Min( CS ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.26851851851851855, "obj2": 0.6243932359658817}, {"determining": "Min( Min( FirstVNF_Mem ,CRS ) ,( ( ( FirstVNF_CPU + PN ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server / ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,( ( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( RRSe,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * MLU ) ) ) - ( Max( MLU,DS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.08761094177387299}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.9462962962962963, "obj2": 0.03217700718740427}], "16": [{"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) + Max( FirstVNF_RAM,RRS ) )", "choosing": "Max( Min( Min( ( ( ( Min( ( MUR - DS ) ,Min( MUC ,MUR ) ) + Min( Min( RCSe ,MUC ) ,( CS - MUC ) ) ) + ( ( ( MLU / RRSe ) / ( MLU - DS ) ) * ( ( MUM + MUM ) - Min( CS ,MUM ) ) ) ) / Max( ( ( Max( MUM,MUR ) * Max( MUM,RCSe ) ) - ( ( MLU / MLU ) + ( MUR / MUR ) ) ),( ( Min( RRSe ,RCSe ) - ( CS / RMSe ) ) / Max( ( MLU / RCSe ),Min( DS ,RCSe ) ) ) ) ) ,Min( ( ( ( ( RCSe + MUR ) / ( MLU + RMSe ) ) + Min( ( MUM + MUR ) ,Min( DS ,RMSe ) ) ) / Max( ( ( RRSe * MUM ) - ( RRSe + MUC ) ),( Min( RCSe ,RMSe ) * Min( MUR ,MUM ) ) ) ) ,Min( ( ( ( DS - MUM ) * Min( RCSe ,MLU ) ) + ( ( CS + RRSe ) / Max( DS,MUR ) ) ) ,( Max( ( MLU + MLU ),( RCSe - MUR ) ) - ( ( CS * MUR ) + ( MUM * CS ) ) ) ) ) ) ,( ( Min( ( Min( ( MUC + CS ) ,Min( MUM ,MUM ) ) + ( ( DS / RCSe ) - ( CS + MUR ) ) ) ,( ( Max( RRSe,MUM ) - ( CS * CS ) ) - ( Min( RCSe ,CS ) * Min( MUR ,RRSe ) ) ) ) * ( ( ( ( MUC + MLU ) * ( MUR / RMSe ) ) + ( ( MLU / RMSe ) / Max( DS,MUC ) ) ) * ( ( ( RMSe / RRSe ) + Min( MLU ,MUR ) ) * ( ( CS / MUR ) - ( RRSe + CS ) ) ) ) ) * Min( ( ( Max( Max( CS,MUR ),( RRSe * MUM ) ) - ( Max( RCSe,MUM ) / ( MLU + MUM ) ) ) + ( Max( ( MUM * MLU ),( CS - MUM ) ) / ( Min( MUM ,CS ) + ( CS + MUC ) ) ) ) ,Max( Max( ( Min( RMSe ,RCSe ) + ( CS / CS ) ),Max( Max( MUR,CS ),( DS - MLU ) ) ),( Max( ( RMSe / RRSe ),( CS * MUC ) ) / ( Max( MLU,MUR ) - ( RCSe + RMSe ) ) ) ) ) ) ),( ( ( ( ( ( ( RCSe / RRSe ) - ( MLU / MLU ) ) * Max( ( MLU - MUC ),( MLU + MUM ) ) ) - ( ( ( MUR - RRSe ) / ( RRSe - MUR ) ) * Max( Max( MLU,RRSe ),( MUC + DS ) ) ) ) - ( ( Max( Min( MUC ,RRSe ),Max( RMSe,DS ) ) - Max( ( CS + RCSe ),Min( RMSe ,DS ) ) ) * Max( ( ( MUC + CS ) - ( MLU - RMSe ) ),( ( MLU + RMSe ) + ( MUM - MLU ) ) ) ) ) - Max( ( ( Min( ( DS - CS ) ,( MUM - RCSe ) ) - ( ( DS + RMSe ) - Min( MUM ,MUR ) ) ) - ( ( Max( RMSe,RCSe ) + Min( MUM ,MUR ) ) * Min( ( DS / MUM ) ,Min( RMSe ,MUM ) ) ) ),( Min( ( Max( CS,MUR ) + ( MUR + MUM ) ) ,Max( Max( CS,MLU ),( CS - RRSe ) ) ) / Min( Min( ( RRSe - MUM ) ,( MUM * MLU ) ) ,( Max( RRSe,MUM ) + ( CS / MUM ) ) ) ) ) ) / Max( Min( ( ( ( Max( MLU,RMSe ) - ( CS / RMSe ) ) * ( Max( RCSe,RCSe ) + ( RRSe * MUM ) ) ) / Max( ( ( RRSe * DS ) / ( MUM + MUR ) ),( ( RRSe / RCSe ) / ( RCSe + MUC ) ) ) ) ,( ( ( ( MUR + RRSe ) / ( RMSe - RRSe ) ) / ( Min( MUC ,MLU ) - ( RCSe - MUM ) ) ) + ( Min( Min( RMSe ,MUM ) ,( MUC / RMSe ) ) - Min( ( RRSe * DS ) ,( RMSe / CS ) ) ) ) ),( ( ( ( Max( MUM,MUM ) + ( CS - RCSe ) ) * ( ( MUR + DS ) - ( MUC / RRSe ) ) ) + ( Max( ( MUM + MUR ),Max( DS,RCSe ) ) / Min( ( CS + MUR ) ,( RRSe - MUM ) ) ) ) / ( ( ( ( MUM / CS ) + ( MLU - RRSe ) ) / ( Min( MUM ,CS ) * ( MUC / RMSe ) ) ) - ( Min( ( MUR / CS ) ,Max( RMSe,MUR ) ) / Max( Max( MLU,RMSe ),( CS / MUR ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( DDR,MDR ),( RRS - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,MUM ) ) + ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.4740740740740741, "obj2": 0.44453755908755666}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Max( ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ),AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( DS - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) * ( MLU - RMSe ) )", "obj1": 0.5, "obj2": 0.4201813853420051}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "Min( ( ( FirstVNF_Mem - ACS ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + RCSe ) + ( MUR + MUC ) ) ,( DS / DS ) ) ) ) ),( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.3024947331420056}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5292522339989718}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( MUR ,( RRSe / MUR ) ) - MUM ) ) * ( MLU - RMSe ) )", "obj1": 0.65, "obj2": 0.28803897519712435}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.8391859396815127}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( Max( ( ( MUC / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + CS ) ) ,( DS + DS ) ) )", "obj1": 0.75, "obj2": 0.1670267410613607}, {"determining": "( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,DDR ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( ( ( RMSe - DS ) * ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.4571647662878833}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( MDR * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( MLU * ( MLU - MLU ) )", "obj1": 0.8111111111111111, "obj2": 0.14706036285598761}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( ( FirstVNF_RAM_Server / ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ,( MRS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( MUM * MUR ) ),( Max( MLU,MUC ) * Max( MLU,RCSe ) ) ) - MUM ) * Min( Min( MUC ,RCSe ) ,( ( DS / DS ) - MUC ) ) )", "obj1": 0.9648148148148148, "obj2": 0.02698766978729134}, {"determining": "( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * FirstVNF_Mem ) - ( FirstVNF_RAM * FirstVNF_CPU_Server ) )", "choosing": "Min( ( Max( RRSe,DS ) - ( RCSe * MUC ) ) ,Max( ( ( MUR - MUM ) * Min( MLU ,( ( ( MUC / RMSe ) - MUM ) * MLU ) ) ),( Max( MLU,CS ) * Max( MUM,RCSe ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.011689121874427364}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4, "obj2": 0.503536678800414}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( ( ( Const - ACS ) / ( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / MUM ) ) )", "obj1": 0.8407407407407408, "obj2": 0.11514231927672403}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( ACS,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( RCSe + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.3, "obj2": 0.5937633014071223}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,( ( RCSe - CS ) + ( DS + MUR ) ) ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * ( ( ( MLU + DS ) + ( MUR + MUC ) ) - ( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.21775089107064538}, {"determining": "( ( PN + Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR * AMS ) ) )", "choosing": "Min( Min( ( ( DS + DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.32407407407407407, "obj2": 0.5752789030140738}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( MLU - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7703703703703704, "obj2": 0.15658982971911897}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.40152758026515323}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe - RMSe )", "obj1": 0.42777777777777776, "obj2": 0.46666933822079554}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7519323403332419}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( MLU * ( MLU - RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.33787961698178476}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( MUC * MLU ) / ( RMSe * MUR ) ),( ( MLU + ( RRSe - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.7, "obj2": 0.23262077276090465}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( MLU,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.250773027144613}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_Mem_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( MUC ,RCSe ) - Min( ( Min( DS ,DS ) + ( MUR - RRSe ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6816782658926804}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( MUM - DS ) * Min( ( MUR + MUM ) ,RMSe ) )", "obj1": 0.17222222222222222, "obj2": 0.7368592387202799}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.3425925925925926, "obj2": 0.5557081843274243}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS - ( PN / ( AMS - AMS ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( RRSe ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - ( RCSe - RMSe ) ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) )", "obj1": 0.725925925925926, "obj2": 0.20488035309399388}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5277777777777778, "obj2": 0.37293714955777135}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( ( CS - DS ) * ( RCSe - RMSe ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( RRSe / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.85, "obj2": 0.10082904990633053}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe - RMSe )", "obj1": 0.4148148148148148, "obj2": 0.47608275133317735}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.33857973559706617}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( MLU * ( MLU - MUM ) )", "obj1": 0.5962962962962963, "obj2": 0.3270916817368127}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( MUC ,RCSe ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) + ( RCSe * RCSe ) ) ) ) )", "obj1": 0.2111111111111111, "obj2": 0.6909079724144132}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) )", "obj1": 0.7388888888888889, "obj2": 0.19286515175566943}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) )", "choosing": "Min( Min( RRSe ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.29444444444444445, "obj2": 0.5998475809679925}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * PN ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,( ( RCSe - CS ) + ( DS + MUR ) ) ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.3314814814814815, "obj2": 0.5732232369892996}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MRS * FirstVNF_CPU_Server ) ) / Max( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * PN ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,( ( RCSe - CS ) + ( DS + MUR ) ) ) * Max( MUM,RCSe ) ) ) + MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( RMSe ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.22962962962962963, "obj2": 0.6666262157343753}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUR * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7669373024667596}, {"determining": "( ( PN / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( Max( ( ( RRSe / MUC ) / ( RCSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.2111111111111111, "obj2": 0.6909079724144132}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( MUR ,( RRSe / MUR ) ) - MUM ) ) * ( MLU - RMSe ) )", "obj1": 0.65, "obj2": 0.28803897519712435}, {"determining": "( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) ) - ( MDR - ( MDR * FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( RRSe + ( DS + DS ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7450690953643994}, {"determining": "( Min( ( Const - ACS ) ,( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( ( MLU - MUC ) - RMSe ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + MUC ) ) ) ) ) )", "obj1": 0.8740740740740741, "obj2": 0.08803602028558548}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( MDR * ( MRS * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * PN ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,( ( RCSe - CS ) + ( DS + MUR ) ) ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RCSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.6176528952545387}], "17": [{"determining": "( Min( ( MDR - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) )", "choosing": "Min( Min( RRSe ,Min( Min( MUC ,( MUC * MLU ) ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + ( PN / ( AMS - AMS ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / FirstVNF_CPU_Server )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - ( RCSe - RMSe ) ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * MLU ) ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.06920207909704044}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5277777777777778, "obj2": 0.37293714955777135}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.33857973559706617}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.4740740740740741, "obj2": 0.44453755908755666}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.8391859396815127}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( MLU * ( MLU - MUM ) )", "obj1": 0.5962962962962963, "obj2": 0.3270916817368127}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * FirstVNF_Mem ) + RRS ) - AMS ) ) )", "choosing": "( ( ( ( MUC / RMSe ) - MUM ) * MLU ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.6055555555555555, "obj2": 0.2881062689558183}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( MLU - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7703703703703704, "obj2": 0.15658982971911897}, {"determining": "( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,DDR ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( ( ( RMSe - DS ) * ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.4571647662878833}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( ( FirstVNF_RAM_Server / ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9648148148148148, "obj2": 0.02698766978729134}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( ( FirstVNF_RAM_Server / ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ,( MRS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( MUM * MUR ) ),( Max( MLU,MUC ) * Max( MLU,RCSe ) ) ) - MUM ) * Min( Min( MUC ,RCSe ) ,( ( DS / DS ) - MUC ) ) )", "obj1": 0.9648148148148148, "obj2": 0.02698766978729134}, {"determining": "( ( PN / Min( Max( FirstVNF_RAM_Server,ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( RRSe + ( DS + DS ) ) ,MUC ) / Min( MUR ,MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5206730042501373}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.40152758026515323}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ,Min( ( Max( MLU,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6277777777777778, "obj2": 0.2872919335033012}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) )", "choosing": "Min( Min( RRSe ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 0.26851851851851855, "obj2": 0.6231421835604815}, {"determining": "( ( PN / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( ( FirstVNF_RAM_Server / ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) * Max( MLU,RCSe ) ) ) - MUM ) * Min( Min( MUC ,RCSe ) ,( ( DS / DS ) - MUC ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6437648800990661}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( ACS * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5292522339989718}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.34814814814814815, "obj2": 0.5501582205724971}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( MLU * ( MLU - ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.49444444444444446, "obj2": 0.42278254133011245}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,( ( RCSe - CS ) + ( DS + MUR ) ) ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * ( ( ( MLU + DS ) + ( MUR + MUC ) ) - ( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.21775089107064538}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( ( ( Const - ACS ) / ( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8092592592592592, "obj2": 0.1552160057093148}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( MDR * ( MRS * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * PN ) ,AMS ) ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,( ( RCSe - CS ) + ( DS + MUR ) ) ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RCSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.6176528952545387}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( Min( ( DDR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) * FirstVNF_RAM ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / Max( RMSe,MUR ) ),Min( Min( ( Min( Min( DS ,DS ) ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.6555555555555556, "obj2": 0.2801300922263064}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( Max( ( ( MUC / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + CS ) ) ,( DS + DS ) ) )", "obj1": 0.75, "obj2": 0.1670267410613607}, {"determining": "( Min( ( ( BR + RRS ) - Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server - ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "( Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( Min( MUR ,( RRSe / MUR ) ) - MUM ) ) * ( MLU - RMSe ) )", "obj1": 0.6648148148148149, "obj2": 0.27516286678427393}, {"determining": "( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( Max( ( ( RRSe / MUC ) / ( RCSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.233724533021746}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7489270725240276}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( MLU * ( MLU - RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.33787961698178476}, {"determining": "( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( Min( ( MDR + FirstVNF_RAM_Server ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( ( MUM - DS ) * Min( ( MUR + MUM ) ,RMSe ) )", "obj1": 0.17222222222222222, "obj2": 0.7368592387202799}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MUC - RMSe )", "obj1": 0.4148148148148148, "obj2": 0.47608275133317735}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8388888888888889, "obj2": 0.11703610914609723}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) )", "obj1": 0.7388888888888889, "obj2": 0.19286515175566943}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) * ( FirstVNF_CPU - DDR ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5554275605444785}, {"determining": "( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( ( ( Const - ACS ) + ( DDR * FirstVNF_RAM ) ) - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) )", "choosing": "Min( Min( RRSe ,Min( Min( ( ( MLU + DS ) + ( MUR + MUC ) ) ,( DS / DS ) ) ,( MUC - CS ) ) ) ,RRSe )", "obj1": 0.24259259259259258, "obj2": 0.6497159855254135}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( MUC ,RCSe ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) + ( RCSe * RCSe ) ) ) ) )", "obj1": 0.2111111111111111, "obj2": 0.6909079724144132}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( MUC * MLU ) / ( RMSe * MUR ) ),( ( MLU + ( RRSe - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.7, "obj2": 0.23262077276090465}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( ACS,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( RCSe + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.3, "obj2": 0.5937633014071223}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.3277777777777778, "obj2": 0.5683376392653814}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( MUC ,RCSe ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.2111111111111111, "obj2": 0.6909079724144132}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server - ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MLU,RCSe ) ) ) - MUM ) * Min( Min( MUC ,RCSe ) ,( ( DS / DS ) - MUC ) ) )", "obj1": 0.31296296296296294, "obj2": 0.5826724821652712}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5074074074074074, "obj2": 0.40975315017900965}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( MDR * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( MLU * ( MLU - MLU ) )", "obj1": 0.8111111111111111, "obj2": 0.1470603628559876}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4, "obj2": 0.503536678800414}], "18": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - RRS ) ) ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - RMSe ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) )", "choosing": "Min( Min( RRSe ,Min( Min( MUC ,( MUC * MLU ) ) ,( MUC - MUC ) ) ) ,RRSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( ( ( Const - ACS ) / ( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.8462962962962963, "obj2": 0.10172942260249646}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( ( FirstVNF_RAM_Server / ( ( ACS + PN ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RRSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.043750601039064876}, {"determining": "( ( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.34226976735072595}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12962962962962962, "obj2": 0.8093519493038214}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( ACS,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( RCSe + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6573449465924625}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),DDR ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( ( DS + RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5277777777777778, "obj2": 0.37293714955777135}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) * ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.509257565306525}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.22012029846811276}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7489270725240276}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) / Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( MUC ,RCSe ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe + RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6893828015004433}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( ( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) / ( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.9925925925925926, "obj2": 0.008325737299575668}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.6685185185185185, "obj2": 0.2722697928540711}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( Max( ( ( RRSe / MUC ) / ( RCSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.233724533021746}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.40152758026515323}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * FirstVNF_Mem ) + RRS ) - AMS ) ) )", "choosing": "( ( ( ( MUC / RMSe ) - MUM ) * MLU ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.6055555555555555, "obj2": 0.2881062689558183}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( ( FirstVNF_RAM_Server / ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9648148148148148, "obj2": 0.02698766978729134}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( RRSe / MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7665453262869696}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( Max( DDR,ACS ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( MUM + DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.6018518518518519, "obj2": 0.3118128066263315}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( MLU * ( MLU - ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.49444444444444446, "obj2": 0.42278254133011245}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + ( PN / ( AMS - AMS ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / FirstVNF_CPU_Server )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( RRSe + ( DS + DS ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.062171416268556164}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,( ( RCSe - CS ) + ( DS + MUR ) ) ) * Max( MUM,RCSe ) ) ) - MUM ) * ( ( ( RRSe / MUC ) / ( RMSe * MUR ) ) / ( Max( MLU,MUC ) * Max( ( ( ( MUC / RMSe ) - MUM ) * ( ( ( MLU + DS ) + ( MUR + MUC ) ) - ( DS / DS ) ) ),RCSe ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.21775089107064538}, {"determining": "( ( PN / ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( FirstVNF_CPU_Server ,AMS ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,DDR ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( ( MUC - MUR ) - MUC ) + ( MLU / MUM ) ) ,Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( ( ( RMSe - DS ) * ( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.4571647662878833}, {"determining": "( ( PN / Max( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + CS ) ) ,( DS + MLU ) ) )", "obj1": 0.8055555555555556, "obj2": 0.15026552763595474}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.4740740740740741, "obj2": 0.44453755908755666}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + CS ) ) ,( DS + DS ) ) )", "obj1": 0.75, "obj2": 0.1670267410613607}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.8391859396815127}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - Min( ( FirstVNF_RAM_Server / ( ( ACS + PN ) * ( ACS - FirstVNF_RAM_Server ) ) ) ,( MRS * FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( Max( ( ( RRSe / MUC ) / ( MUM * MUR ) ),( Max( MLU,MUC ) * Max( MLU,RCSe ) ) ) - MUM ) * Min( Min( MUC ,RCSe ) ,( ( DS / DS ) - MUC ) ) )", "obj1": 0.9648148148148148, "obj2": 0.02698766978729134}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5277777777777778, "obj2": 0.37293714955777135}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MLU * ( MUC - MUM ) )", "obj1": 0.47962962962962963, "obj2": 0.4435205699126794}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) * ( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),Min( Min( MUC ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.9055555555555556, "obj2": 0.06485430749869604}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( MLU - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7722222222222223, "obj2": 0.15590125989510473}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( MLU * ( MLU - MUM ) )", "obj1": 0.5962962962962963, "obj2": 0.3270916817368127}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe - RMSe )", "obj1": 0.42407407407407405, "obj2": 0.47177318633341053}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7355164209729311}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( MDR * ( AMS * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,FirstVNF_Mem ) ) ) + ( ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) - CRS ) )", "choosing": "( MUC * ( MLU - MLU ) )", "obj1": 0.3537037037037037, "obj2": 0.5385129816622245}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MLU * ( MLU - ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.2, "obj2": 0.7061453943441646}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8388888888888889, "obj2": 0.11703610914609723}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) )", "obj1": 0.7425925925925926, "obj2": 0.19158120200959766}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4, "obj2": 0.503536678800414}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe - RMSe )", "obj1": 0.4148148148148148, "obj2": 0.47608275133317735}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( CRS * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe ) ) - MUM ) * Min( ( ( ( MUC - MUC ) + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6329983659582835}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5292522339989718}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( MLU - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 0.7703703703703704, "obj2": 0.15658982971911897}], "19": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( Max( DDR,ACS ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( MUM + DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const - ACS ) ,( ( ACS + PN ) * ( ACS - RRS ) ) ) / FirstVNF_RAM_Server )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - RMSe ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + ( MUR + MUR ) ) + MUC ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( ACS,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( CRS / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( RCSe + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + Min( MUR ,MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.3, "obj2": 0.5937633014071223}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( CRS * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) * ( FirstVNF_CPU - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe ) ) - MUM ) * Min( ( ( ( MUC - MUC ) + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6329983659582835}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( ( ( Const - ACS ) / ( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.8462962962962963, "obj2": 0.10172942260249646}, {"determining": "( Min( ( FirstVNF_Mem_Server - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.07857648552724565}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ),DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.924074074074074, "obj2": 0.03846933871040697}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / AMS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "Max( ( MUC * MUM ),( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) + Min( ( RRSe - RRSe ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.4219985405788435}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.40152758026515323}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) ) - MDR ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( FirstVNF_RAM_Server - CRS ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RRSe ) + ( MUR + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.28024544604164403}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( PN * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RRSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.2029532302943678}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) * ( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) - DDR ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),Min( Min( MUC ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RRSe ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.9055555555555556, "obj2": 0.06485430749869604}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / DS ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.35706186585373073}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MLU * ( MLU - ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.2, "obj2": 0.7061453943441646}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7355164209729311}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.558506810436956}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.34226976735072595}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7489270725240276}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8388888888888889, "obj2": 0.11703610914609723}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "( ( ( ( MUC / ( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * MLU ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.6074074074074074, "obj2": 0.2878217519453271}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / BR ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( RMSe - RMSe )", "obj1": 0.5814814814814815, "obj2": 0.33542610247929244}, {"determining": "( ( BR * Max( FirstVNF_Mem_Server,ACS ) ) + ( ( ( FirstVNF_RAM_Server / ACS ) / ( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / MLU ) ,RMSe ) ) + ( MUM * Min( RRSe ,MUM ) ) ) ) - RCSe )", "obj1": 0.9592592592592593, "obj2": 0.028642762559759904}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12962962962962962, "obj2": 0.8093519493038214}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( RRSe / MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7665453262869696}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.75, "obj2": 0.16702674106136067}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) )", "obj1": 0.7425925925925926, "obj2": 0.19158120200959766}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.6685185185185185, "obj2": 0.2722697928540711}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.674074074074074, "obj2": 0.23898181616742384}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( ( DS - RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.3296296296296296, "obj2": 0.5747974870777541}, {"determining": "( ( PN / Max( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + CS ) ) ,( DS + MLU ) ) )", "obj1": 0.8055555555555556, "obj2": 0.15026552763595474}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) / Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( MUC ,RCSe ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe + RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6893828015004433}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * MRS ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( RMSe * ( MUC - MUM ) )", "obj1": 0.5907407407407408, "obj2": 0.3171868151694009}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( BR - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * RMSe ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6962962962962963, "obj2": 0.21592757906565346}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.4111111111111111, "obj2": 0.4976590018748046}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,Max( ( RRSe + RCSe ),( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3828562442775565}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) * ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.509257565306525}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( RRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MLU * ( CS - MUM ) )", "obj1": 0.45185185185185184, "obj2": 0.4541584992251169}, {"determining": "Max( ( DDR - PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( RCSe + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.22962962962962963, "obj2": 0.6782832627412265}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe - RMSe )", "obj1": 0.4148148148148148, "obj2": 0.47608275133317735}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,Max( MRS,FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,CS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.15530623057299656}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.4740740740740741, "obj2": 0.44453755908755666}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MLU * ( MUC - MUM ) )", "obj1": 0.47962962962962963, "obj2": 0.4435205699126794}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MUC * ( MLU - MLU ) )", "obj1": 0.42592592592592593, "obj2": 0.46713973901778616}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( Max( DDR,ACS ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( MUM + DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.6018518518518519, "obj2": 0.3118128066263315}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5292522339989718}], "20": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * PN )", "choosing": "( Max( Min( ( ( Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ),DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( Max( DDR,ACS ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( MUM + DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ),DS ) / ( Min( MUM ,Min( ( ( ( MUC * RMSe ) - MUM ) / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8814814814814815, "obj2": 0.05316867682372876}, {"determining": "( ( ( Min( ( Const - Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( ( ( Const - ACS ) / ( PN * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( RMSe ,( ( RMSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.8537037037037037, "obj2": 0.09623091849389183}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5292522339989718}, {"determining": "( ( BR * Max( FirstVNF_Mem_Server,ACS ) ) + ( ( ( FirstVNF_RAM_Server / ACS ) / ( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / MLU ) ,RMSe ) ) + ( MUM * Min( RRSe ,MUM ) ) ) ) - RCSe )", "obj1": 0.9592592592592593, "obj2": 0.028642762559759904}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / DS ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.35706186585373073}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) )", "obj1": 0.7425925925925926, "obj2": 0.19158120200959766}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.75, "obj2": 0.16702674106136067}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( RMSe * ( MLU - RRSe ) )", "obj1": 0.6555555555555556, "obj2": 0.2636274389430034}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7355164209729311}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( ( DS - RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.3296296296296296, "obj2": 0.5747974870777541}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.837037037037037, "obj2": 0.1166141980783283}, {"determining": "( ( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.34226976735072595}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.4111111111111111, "obj2": 0.4976590018748046}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( CRS * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) * ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,CS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.35, "obj2": 0.5469743332329696}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) ) - MDR ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( FirstVNF_RAM_Server - CRS ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RRSe ) + ( MUR + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.28024544604164403}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( RRS - PN ) )", "choosing": "( ( ( MUR - MUM ) * Min( MUC ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8981481481481481, "obj2": 0.04391637411610506}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,MDR ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe / MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6129629629629629, "obj2": 0.28256498112029793}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7489270725240276}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / AMS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) ) ,FirstVNF_Mem ) ) ) + ( BR - CRS ) )", "choosing": "Max( ( MUC * MUM ),( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) + Min( ( RRSe - RRSe ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.4219985405788435}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( Max( DDR,ACS ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( MUM + DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.6018518518518519, "obj2": 0.3118128066263315}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5074074074074074, "obj2": 0.40975315017900965}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.40152758026515323}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( ACS,CRS ) ) ) ) ) / Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( Max( ( ( RRSe / MUC ) / ( RMSe * MUR ) ),( ( RCSe + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) - Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,MUR ) ,( MUC - MUC ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( ( RMSe - RMSe ) * RCSe ) ) ) ) )", "obj1": 0.9537037037037037, "obj2": 0.030524603352081854}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( ( FirstVNF_RAM_Server / ACS ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.7946016420547387}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * MRS ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( RMSe * ( MUC - MUM ) )", "obj1": 0.5907407407407408, "obj2": 0.3171868151694009}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "( ( ( ( MUC / ( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * MLU ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + MUC ) ) ,( DS + DS ) ) )", "obj1": 0.6074074074074074, "obj2": 0.2878217519453271}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( MUR + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.509257565306525}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.22610930405276727}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,Max( MRS,FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,CS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.15530623057299656}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.4740740740740741, "obj2": 0.44453755908755666}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) - ( ACS - AMS ) ) )", "choosing": "Max( ( MUC * ( ( ( MUC / ( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * MLU ) ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6288332122265667}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,Max( ( RRSe + RCSe ),( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3828562442775565}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) * ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.509257565306525}, {"determining": "( ( PN / Max( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + CS ) ) ,( DS + MLU ) ) )", "obj1": 0.8055555555555556, "obj2": 0.15026552763595474}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( PN * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RRSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.2029532302943678}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.43703703703703706, "obj2": 0.4603246906573955}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( ACS / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( RRSe ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7722222222222223, "obj2": 0.1559948003970108}, {"determining": "( Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,ACS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6191787802778236}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3828562442775565}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * DDR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( Min( ( ( DS + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ),DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.924074074074074, "obj2": 0.03846933871040697}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ),DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.924074074074074, "obj2": 0.03846933871040697}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MLU * ( MLU - ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.2, "obj2": 0.7061453943441646}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( PN * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RRSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.2029532302943678}], "21": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) * ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * PN )", "choosing": "( Max( Min( ( ( Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ),DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( MRS - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Max( RRSe,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5962991064832487}, {"determining": "( ( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.34226976735072595}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7489270725240276}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / AMS ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( ( ( MLU + CS ) / ( MUR + MUC ) ) * ( MLU - MUM ) )", "obj1": 0.6888888888888889, "obj2": 0.24149699936835103}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( RMSe * ( MLU - RRSe ) )", "obj1": 0.6555555555555556, "obj2": 0.2636274389430034}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( Min( ( ( MUC + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ),DS ) / ( Min( MUM ,Min( ( ( ( MUC * RMSe ) - MUM ) / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8814814814814815, "obj2": 0.05295323442866766}, {"determining": "( ( ( Min( ( Const - Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( ( ( Const - ACS ) / ( PN * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * ( ( ( MUC / ( ( MLU + ( MUR - MUM ) ) * Max( MUM,RCSe ) ) ) - MUM ) * MLU ) ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8574074074074074, "obj2": 0.09554518786740197}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.4740740740740741, "obj2": 0.44453755908755666}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.22610930405276727}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * MRS ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( RMSe * ( MUC - MUM ) )", "obj1": 0.5907407407407408, "obj2": 0.3171868151694009}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.43703703703703706, "obj2": 0.45936576386774447}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) ) - MDR ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( FirstVNF_RAM_Server - CRS ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RRSe ) + ( MUR + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.28024544604164403}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( PN * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,Min( RRSe ,DS ) ) )", "obj1": 0.7185185185185186, "obj2": 0.20295323029436776}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / DS ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.35706186585373073}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,MDR ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe / MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6129629629629629, "obj2": 0.28256498112029793}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + MLU ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.42777777777777776, "obj2": 0.4830988410199697}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( ( DS - RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.3296296296296296, "obj2": 0.5747974870777541}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + CS ) ) ,( DS + MLU ) ) )", "obj1": 0.22037037037037038, "obj2": 0.681654460228215}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3819827730843092}, {"determining": "( ( ( FirstVNF_CPU - PN ) * ( FirstVNF_RAM_Server / ACS ) ) * ( FirstVNF_CPU - DDR ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.34629629629629627, "obj2": 0.5491730086374822}, {"determining": "( ( PN / Max( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + CS ) ) ,( DS + MLU ) ) )", "obj1": 0.8055555555555556, "obj2": 0.15026552763595474}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,CS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.04376269028455748}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5147416349961277}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2111111111111111, "obj2": 0.6878919177715124}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.5407407407407407, "obj2": 0.3784779421081981}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.9592592592592593, "obj2": 0.028642762559759904}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.40152758026515323}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.4111111111111111, "obj2": 0.4976590018748046}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) )", "obj1": 0.7425925925925926, "obj2": 0.19158120200959766}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,Max( MRS,FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,CS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.15530623057299656}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.3296296296296296, "obj2": 0.5747974870777541}, {"determining": "( ( BR * Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4777777777777778, "obj2": 0.4309136591528268}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( RMSe ,( ( RMSe + RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6622682653504708}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.837037037037037, "obj2": 0.1166141980783283}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5292522339989718}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe / MLU ) + ( RRSe - RRSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.20137806056050156}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( PN * ( MDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_CPU ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RRSe ) - ( Min( ( Min( DS ,RRSe ) + ( ( MUC - MUC ) - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6, "obj2": 0.2988890324888026}, {"determining": "( ( BR * Max( FirstVNF_Mem_Server,ACS ) ) + ( ( ( FirstVNF_RAM_Server / ACS ) / ( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / MLU ) ,RMSe ) ) + ( MUM * Min( RRSe ,MUM ) ) ) ) - RCSe )", "obj1": 0.9592592592592593, "obj2": 0.028642762559759904}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( PN / ( AMS - AMS ) ) ) - ACS ) * ( DDR - PN ) )", "choosing": "( ( MLU - MUM ) / ( Min( MUM ,Min( ( ( ( MUC * RMSe ) - MUM ) / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.03593066609283239}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( ( FirstVNF_RAM_Server / ACS ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.7946016420547387}, {"determining": "Max( BR,Min( FirstVNF_Mem_Server ,( ( FirstVNF_Mem_Server - PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,MUC ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8172891294064907}, {"determining": "( Min( ( FirstVNF_RAM_Server / ( CRS * ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) ) ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) + ( DS + Min( MUC ,RCSe ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42962962962962964, "obj2": 0.46617893326111015}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) )", "obj1": 0.2, "obj2": 0.7059699041871894}], "22": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN - ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) * ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) / ACS ) * ( DDR - PN ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( RRSe - RRSe ) ) ,MUC ) / ( MUR * RRSe ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.95, "obj2": 0.02234402754844783}, {"determining": "( ( BR * Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4777777777777778, "obj2": 0.4309136591528268}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.40152758026515323}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5962991064832487}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_CPU_Server ,BR ) - Max( FirstVNF_Mem_Server,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( ( RRSe / MUC ) / ( RRSe - MUR ) ),( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) - RCSe )", "obj1": 0.4740740740740741, "obj2": 0.44453755908755666}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( ( ( RMSe + ( DS + MUR ) ) * MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.7462962962962963, "obj2": 0.16814607408811322}, {"determining": "( ( ( ( ( BR * Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8759259259259259, "obj2": 0.08720032551197676}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / DS ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.35706186585373073}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * Max( FirstVNF_Mem_Server,ACS ) ) ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) ) - MDR ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( FirstVNF_RAM_Server - CRS ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RRSe ) + ( MUR + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.28024544604164403}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * MRS ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( RMSe * ( MUC - MUM ) )", "obj1": 0.5907407407407408, "obj2": 0.3171868151694009}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,Max( MRS,FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( RCSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.43703703703703706, "obj2": 0.4586240882335114}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.837037037037037, "obj2": 0.1166141980783283}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.4111111111111111, "obj2": 0.4976590018748046}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( MUC ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.524074074074074, "obj2": 0.3771323058370509}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / AMS ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( ( ( ( RCSe - MUM ) + DS ) + RCSe ) * ( MLU - MUM ) )", "obj1": 0.2851851851851852, "obj2": 0.6214479112287231}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.6759259259259259, "obj2": 0.2553433435230673}, {"determining": "( ( BR * ( FirstVNF_Mem_Server - ACS ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,Max( MRS,FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,CS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.15530623057299656}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - ( DS / DS ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( DS * RCSe ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.33857973559706617}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,MDR ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe / MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6129629629629629, "obj2": 0.28256498112029793}, {"determining": "( ( PN / Max( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + CS ) ) ,( DS + MLU ) ) )", "obj1": 0.8055555555555556, "obj2": 0.15026552763595474}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7489270725240276}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42592592592592593, "obj2": 0.47039221698397105}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( ( FirstVNF_RAM_Server / ACS ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.12037037037037036, "obj2": 0.7946016420547387}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( RMSe * ( MLU - RRSe ) )", "obj1": 0.6555555555555556, "obj2": 0.2636274389430034}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe + ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03292121742377091}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) )", "obj1": 0.2, "obj2": 0.7059699041871894}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( Min( ( ( MUC + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ),DS ) / ( Min( MUM ,Min( ( ( ( MUC * RMSe ) - MUM ) / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8814814814814815, "obj2": 0.05295323442866766}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,CS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5815960551573234}, {"determining": "( ( PN / DDR ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( MLU - MUM ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5668745239124038}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5477915469435003}, {"determining": "( ( FirstVNF_Mem + Min( ( Const - ACS ) ,( ( ACS + ( Min( FirstVNF_Mem ,CRS ) * ( ( FirstVNF_Mem_Server * PN ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ) * ( ACS - FirstVNF_RAM_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( MUR * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( ( ( RMSe - DS ) + ( RCSe - RMSe ) ) + ( DS + MUR ) ) - ( Max( RRSe,DS ) - ( RCSe * RCSe ) ) ) ) ) )", "obj1": 0.7425925925925926, "obj2": 0.19158120200959766}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( MUM + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7166666666666667, "obj2": 0.21756276735091318}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( PN * ( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,Min( RRSe ,DS ) ) )", "obj1": 0.7870370370370371, "obj2": 0.15360553903428611}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3904544615871303}, {"determining": "( ( PN / DDR ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) / MDR ) - ( MDR - AMS ) ) )", "choosing": "Min( ( Min( ( ( RCSe - RCSe ) * ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.26481481481481484, "obj2": 0.6372698538787148}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8140962873942443}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5292522339989718}, {"determining": "( ( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.34712197992564303}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.37962962962962965, "obj2": 0.5194883817949408}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe / MLU ) + ( RRSe - RRSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.20137806056050156}, {"determining": "( ( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.2259960637282141}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.22610930405276727}], "23": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN - ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN - ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) / ACS ) * ( DDR - PN ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( RRSe - RRSe ) ) ,MUC ) / ( MUR * RRSe ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.95, "obj2": 0.02234402754844783}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.837037037037037, "obj2": 0.1166141980783283}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MLU * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.18981096568538092}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU * MUM ) )", "obj1": 0.4074074074074074, "obj2": 0.49755619197780987}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,CRS ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.007039836905987373}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.6759259259259259, "obj2": 0.2553433435230673}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + Min( MUC ,RCSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.582615623291533}, {"determining": "( ( ( ( ( BR * Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) ) / ( ACS - ( AMS - FirstVNF_CPU ) ) ) - ACS ) * ( FirstVNF_CPU - ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8759259259259259, "obj2": 0.08720032551197676}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( MUM * Min( RRSe ,DS ) ) * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.4981481481481482, "obj2": 0.4144829215465625}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5808226464323655}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) ) - MDR ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( FirstVNF_RAM_Server - CRS ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RRSe ) + ( MUR + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.28024544604164403}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / DS ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.35706186585373073}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42592592592592593, "obj2": 0.4683933043210968}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( MUM + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7166666666666667, "obj2": 0.21756276735091318}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( MUC ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.524074074074074, "obj2": 0.3771323058370509}, {"determining": "( ( BR * Max( ( PN / ( ( FirstVNF_RAM_Server / ACS ) - AMS ) ),FirstVNF_RAM ) ) + ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.46111111111111114, "obj2": 0.44901892678319144}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) )", "obj1": 0.2, "obj2": 0.7059699041871894}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MLU * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.695877811844746}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * MRS ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( RMSe * ( MUC - MUM ) )", "obj1": 0.5907407407407408, "obj2": 0.3171868151694009}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.28230287980476737}, {"determining": "( ( PN / Max( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - FirstVNF_RAM ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS * FirstVNF_RAM_Server ) ) - CRS ) + RRS ) - AMS ) ) )", "choosing": "( ( Max( ( ( MUM / MUC ) / ( RMSe * MUR ) ),( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ) - MUM ) * Min( ( ( MLU + CS ) + ( Max( ( RCSe - CS ),( ( RMSe / MLU ) + MUR ) ) + CS ) ) ,( DS + MLU ) ) )", "obj1": 0.8055555555555556, "obj2": 0.15026552763595474}, {"determining": "( ( ( Min( ( Const - ACS ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe + ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03292121742377091}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( ( PN / ( AMS - AMS ) ) + ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) + ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( MLU - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.5174959276119687}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - ( DS / DS ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.33710017068531994}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / AMS ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( ( ( ( RCSe - MUM ) + DS ) + RCSe ) * ( MLU - MUM ) )", "obj1": 0.2851851851851852, "obj2": 0.6214479112287231}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( RMSe * ( MLU - RRSe ) )", "obj1": 0.6555555555555556, "obj2": 0.2636274389430034}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.2880691578250115}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.40152758026515323}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.22792749145709412}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.3648148148148148, "obj2": 0.5292522339989718}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5477915469435003}, {"determining": "( ( ( Min( ( Const - ACS ) ,( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( ( RCSe - RCSe ) + ( MUR + MUR ) ) ) ) )", "obj1": 0.9018518518518519, "obj2": 0.04272405908518433}, {"determining": "( ( PN / DDR ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( MLU - MUM ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5668745239124038}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( Min( ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.34712197992564303}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,Max( MRS,FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( RCSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.43703703703703706, "obj2": 0.4586240882335114}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( PN * ( FirstVNF_CPU * FirstVNF_Mem ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,Min( RRSe ,DS ) ) )", "obj1": 0.7870370370370371, "obj2": 0.15360553903428611}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( ( ( RMSe + ( DS + MUR ) ) * MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.7685185185185185, "obj2": 0.15716941013047472}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.5907407407407408, "obj2": 0.3171868151694009}, {"determining": "( ( ( Min( Max( ( FirstVNF_RAM_Server / ACS ),( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / Max( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.05566663522049244}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3904544615871303}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,CS ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.37962962962962965, "obj2": 0.5194883817949408}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe / MLU ) + ( RRSe - RRSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.75, "obj2": 0.1670267410613607}], "24": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN - ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN - ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4740740740740741, "obj2": 0.43289654629634133}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7851851851851852, "obj2": 0.1470950765367273}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( MUM * Min( RRSe ,DS ) ) * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.4981481481481482, "obj2": 0.4144829215465625}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( MUM + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7166666666666667, "obj2": 0.21756276735091318}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.44607392409034585}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU * MUM ) )", "obj1": 0.4074074074074074, "obj2": 0.49755619197780987}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( BR - CRS ) - FirstVNF_CPU ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ) )", "obj1": 0.9925925925925926, "obj2": 0.005310706217739881}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5477915469435003}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( Min( ( ( DS + Min( RRSe ,DS ) ) + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.633412528198152}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) ) - MDR ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( FirstVNF_RAM_Server - CRS ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RRSe ) + ( MUR + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.28024544604164403}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( MUM * ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ) ) )", "obj1": 0.9518518518518518, "obj2": 0.019852045964377663}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - ( DS / DS ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.33710017068531994}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / DS ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.35706186585373073}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.28230287980476737}, {"determining": "( ( ( Min( Max( ( FirstVNF_RAM_Server / ACS ),( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / Max( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.05566663522049244}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.22407407407407406, "obj2": 0.6703214180358432}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( ( PN / ( AMS - AMS ) ) + ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) + ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( MLU - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.5174959276119687}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + Min( MUC ,RCSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.582615623291533}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( RMSe * ( MLU - MUM ) )", "obj1": 0.6759259259259259, "obj2": 0.2553433435230673}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.4709804203374308}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( RMSe * ( MLU - RRSe ) )", "obj1": 0.6555555555555556, "obj2": 0.2636274389430034}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MLU * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.18981096568538092}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - CRS ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( Max( RMSe,RMSe ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.40152758026515323}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RRSe ) + ( MUR + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.6037441190407465}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) ) - ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( ( ( RMSe + ( DS + MUR ) ) * MUC ) / ( MUR * MUM ) ),Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) )", "obj1": 0.7685185185185185, "obj2": 0.1571694101304747}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.7462962962962963, "obj2": 0.1679014159770014}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / MDR ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5944444444444444, "obj2": 0.3095489886580523}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) + ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC / MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28796149184262704}, {"determining": "( ( PN / DDR ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( MLU - MUM ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5668745239124038}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) )", "obj1": 0.2, "obj2": 0.7059699041871894}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.6888888888888889, "obj2": 0.24780386648913627}, {"determining": "( ( PN / DDR ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - ACS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( ( Max( MLU,MUC ) * Max( MUM,RCSe ) ) ,Min( RMSe ,( MLU - MUM ) ) )", "obj1": 0.17962962962962964, "obj2": 0.7312506761397848}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / AMS ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( ( ( ( RCSe - MUM ) + DS ) + RCSe ) * ( MLU - MUM ) )", "obj1": 0.2833333333333333, "obj2": 0.6258940011747911}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6546431550608762}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6525786138856202}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3733914029897537}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( AMS / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( MLU * ( Min( RMSe ,( MLU - MUM ) ) - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.03188704498072418}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5808226464323655}, {"determining": "( ( ( ( Min( ( ACS / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( Max( ( MDR * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ),BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC + MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( ( MUC + RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.2261093040527673}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MLU * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.18981096568538092}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}], "25": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN - ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( MUM * Min( RRSe ,DS ) ) * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN - ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_Mem_Server - ACS ) )", "choosing": "( Max( MUM,DS ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( Min( Max( Const,ACS ) ,( DDR * Max( Max( DDR,FirstVNF_Mem ),( FirstVNF_Mem_Server - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( AMS - FirstVNF_CPU ) ) )", "choosing": "( ( ( MUR - MUM ) * Min( MLU ,( Min( ( MUC / RMSe ) ,MUM ) * Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( MUM / DS ) ) ) ) ) * Min( ( ( MLU + CS ) + ( MUR + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.8166666666666667, "obj2": 0.13059118602122688}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4740740740740741, "obj2": 0.43289654629634133}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.44607392409034585}, {"determining": "( ( ( Min( Max( ( FirstVNF_RAM_Server / ACS ),( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / Max( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.05566663522049244}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( Min( ( ( DS + Min( RRSe ,DS ) ) + Min( RRSe ,RRSe ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5314650838149891}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.674074074074074, "obj2": 0.2401114337477362}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.7462962962962963, "obj2": 0.1679014159770014}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) )", "obj1": 0.2, "obj2": 0.7059699041871894}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( MRS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MLU - RRSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.4, "obj2": 0.5120191178088892}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5477915469435003}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( BR - CRS ) - FirstVNF_CPU ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ) )", "obj1": 0.9925925925925926, "obj2": 0.005310706217739881}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU * MUM ) )", "obj1": 0.4074074074074074, "obj2": 0.49755619197780987}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( Min( Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) ) - MDR ) + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - CRS ) + RRS ) ,FirstVNF_Mem ) ) ) + ( FirstVNF_RAM_Server - CRS ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - RRSe ) + ( MUR + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.28024544604164403}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( Max( ( FirstVNF_RAM - FirstVNF_RAM ),( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( RRSe,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( RCSe * ( RRSe - DS ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8073123595398977}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3553418448969929}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( RMSe * ( MLU - RRSe ) )", "obj1": 0.6555555555555556, "obj2": 0.2636274389430034}, {"determining": "( DDR / ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,( MLU - RRSe ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.680199803499498}, {"determining": "( ( ( Min( Max( ( FirstVNF_RAM_Server / ACS ),( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.9259259259259259, "obj2": 0.03223671797218428}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.4128444448671557}, {"determining": "( Min( Min( ( BR + RRS ) ,Min( FirstVNF_Mem ,CRS ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * Min( ( ( ( FirstVNF_CPU - ARS ) / ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) * ( ( FirstVNF_Mem_Server * ACS ) * Min( FirstVNF_RAM_Server ,MDR ) ) ) ,AMS ) ) ) + ( BR - ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem ) ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( MUR - MUM ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ,Min( ( ( Min( ( ( RCSe - RRSe ) + ( MUR + MUR ) ) ,MUC ) / ( MUR * MUM ) ) - ( MLU - MLU ) ) ,( ( RRSe / RCSe ) - ( Max( RRSe,DS ) - ( RCSe * ( ( ( RCSe - MUM ) + DS ) + RCSe ) ) ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.33415419455383694}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / MDR ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) - ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.38762906109108786}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( MUM + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7166666666666667, "obj2": 0.21756276735091318}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ACS,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.7833333333333333, "obj2": 0.1462110991358282}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem ) ) - ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * DS ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.28230287980476737}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MLU * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.18981096568538092}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.582615623291533}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5055555555555555, "obj2": 0.407084553192292}, {"determining": "( ( PN / DDR ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( MLU - MUM ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5668745239124038}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( MUM * ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ) ) )", "obj1": 0.9518518518518518, "obj2": 0.019852045964377663}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / DS ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5574074074074075, "obj2": 0.3437234411905086}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.4709804203374308}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.4709804203374308}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( ( FirstVNF_CPU - FirstVNF_RAM ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6546431550608762}, {"determining": "( ( ( ( Min( ( ACS / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( Max( ( MDR * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ),BR ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC + MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( ( MUC + RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.2261093040527673}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5808226464323655}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7649849857664325}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + RRSe ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( RMSe - MUC ) ) ) ) ,( CS / MLU ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.633412528198152}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( FirstVNF_RAM_Server / AMS ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.63267748132792}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3733914029897537}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MLU * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.18981096568538092}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( Min( ( ( DS + Min( RRSe ,DS ) ) + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6, "obj2": 0.3072490987870778}, {"determining": "( ( Min( ( FirstVNF_CPU - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - ( DS / DS ) ) ) ,( Min( MLU ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.33710017068531994}], "26": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + Min( DS ,DS ) ) ,( MUC * MUC ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN - ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( MUM * Min( RRSe ,DS ) ) * MUM ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MUC ) ,Min( ( ( MLU + CS ) / ( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN - ( AMS - AMS ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7296296296296296, "obj2": 0.11984796041807373}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( MUM * Min( RRSe ,DS ) ) * MUM ),( MUM * Min( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) ,DS ) ) )", "obj1": 0.812962962962963, "obj2": 0.08706978553009903}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6151432629022272}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5267238536019289}, {"determining": "( ( ( Min( Max( ( FirstVNF_RAM_Server / ACS ),( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / Max( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.05545119282543135}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( ACS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) * MUM ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.20746995467747847}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.582615623291533}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + RRSe ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( RMSe - MUC ) ) ) ) ,( CS / MLU ) ) ) )", "obj1": 0.725925925925926, "obj2": 0.1333390202841733}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( Min( ( ( DS + Min( RRSe ,DS ) ) + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.5032447562339856}, {"determining": "( ( ( Min( Max( ( FirstVNF_RAM_Server / ACS ),( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) * FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) + ( Max( ( RCSe - CS ),( DS + RMSe ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.9222222222222223, "obj2": 0.033470704339633936}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5477915469435003}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.65, "obj2": 0.2691151193837928}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.44607392409034585}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU * MUM ) )", "obj1": 0.4074074074074074, "obj2": 0.49755619197780987}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4740740740740741, "obj2": 0.43289654629634133}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) - ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.3132346128298033}, {"determining": "( ( ( Min( Max( ( FirstVNF_RAM_Server / ACS ),( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( MUM * ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ) ) )", "obj1": 0.9537037037037037, "obj2": 0.01906493272762204}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem ) ) - ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * DS ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.28230287980476737}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5808226464323655}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( RMSe * ( MLU - RRSe ) )", "obj1": 0.6555555555555556, "obj2": 0.2636274389430034}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.674074074074074, "obj2": 0.2401114337477362}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / Min( ( Min( RMSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( MDR * ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.14629629629629629, "obj2": 0.7581120821266069}, {"determining": "Max( Min( DDR ,PN ),( FirstVNF_Mem_Server - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.777543171899598}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( Max( ( FirstVNF_RAM - FirstVNF_RAM ),( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( RRSe,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( RCSe * ( RRSe - DS ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8073123595398977}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5055555555555555, "obj2": 0.407084553192292}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( BR - CRS ) - FirstVNF_CPU ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ) )", "obj1": 0.9925925925925926, "obj2": 0.005310706217739881}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( ( MDR * FirstVNF_CPU_Server ) * BR ) - Max( ( PN / FirstVNF_CPU ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) )", "obj1": 0.2, "obj2": 0.7059699041871894}, {"determining": "( ( ( Min( Max( ( FirstVNF_RAM_Server / ACS ),( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / Max( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.05433600561646747}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( MUC * ( ( MUC - MUM ) - ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ) ) )", "obj1": 0.9481481481481482, "obj2": 0.021642879296517193}, {"determining": "( ( ( Min( Max( ( FirstVNF_RAM_Server / ACS ),( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( ( MLU - MUC ) * Min( ( ( MLU + ( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) + ( Max( ( RCSe - CS ),( DS + MUR ) ) + MUC ) ) ,( DS / DS ) ) )", "obj1": 0.9259259259259259, "obj2": 0.03223671797218428}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.41438860407280215}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.45243138599133176}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / MDR ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) - ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.38762906109108786}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.4709804203374308}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3733914029897537}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.4709804203374308}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( MUM + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7166666666666667, "obj2": 0.21756276735091318}, {"determining": "( ( Min( ( FirstVNF_CPU - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - ( DS / DS ) ) ) ,( Min( MLU ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.33710017068531994}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3553418448969929}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,( MLU - RRSe ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6796296296296296, "obj2": 0.23767625012221108}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - ( DS / DS ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.33710017068531994}], "27": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( MDR - AMS ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) * ( MLU - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_RAM_Server ) ) - ( ( ( Max( MRS,( MDR * Min( ACS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + Min( DS ,DS ) ) ,( MUC * MUC ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - ARS ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN - ( AMS - AMS ) ),FirstVNF_RAM ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( MUC / RMSe ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.15315237609789425}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.09907793040387965}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,( MLU - RRSe ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6796296296296296, "obj2": 0.23767625012221108}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) - ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.3132346128298033}, {"determining": "( ( ( ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / Max( Min( MUM ,Min( ( ( MUC - MUC ) / Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8666666666666667, "obj2": 0.07297870194575166}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7314814814814815, "obj2": 0.11974816551013676}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( MUM * Min( RRSe ,DS ) ) * MUM ),( MUM * Min( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) ,DS ) ) )", "obj1": 0.812962962962963, "obj2": 0.08706978553009903}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.039364571908316305}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS - Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - ( MDR * ACS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( MUM + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.362962962962963, "obj2": 0.5223068114277067}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_CPU_Server ) * ( MDR * ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.14629629629629629, "obj2": 0.7581120821266069}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3553418448969929}, {"determining": "Max( DDR,( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS + FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( MUM + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.6823223471696929}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.3851851851851852, "obj2": 0.5157624400584994}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012702141895797272}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.27173720438172716}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.44508864064158044}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( RMSe * ( MLU - RRSe ) )", "obj1": 0.6555555555555556, "obj2": 0.2636274389430034}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem ) ) - ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * DS ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.28230287980476737}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4740740740740741, "obj2": 0.43289654629634133}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6151432629022272}, {"determining": "( ( Min( ( FirstVNF_CPU - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - ( DS / DS ) ) ) ,( Min( MLU ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.33710017068531994}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( ( ( RRSe - RRSe ) + ( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.19444444444444445, "obj2": 0.7023543455010383}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) )", "obj1": 0.25925925925925924, "obj2": 0.6419508746281664}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.582615623291533}, {"determining": "( ( ( Min( Max( ( FirstVNF_RAM_Server / ACS ),( MRS / FirstVNF_RAM_Server ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( MUM,RCSe ) / Max( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.05433600561646747}, {"determining": "( ( Min( ( FirstVNF_Mem_Server - Max( Max( DDR,PN ),( FirstVNF_Mem_Server - PN ) ) ) ,FirstVNF_CPU ) + ( BR - CRS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - ( DS / DS ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.33710017068531994}, {"determining": "( DDR / ( ( ( ( CRS - MRS ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * ( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RRSe ) ) ) ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MLU ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4185185185185185, "obj2": 0.48126804445139326}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6151432629022272}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( FirstVNF_RAM_Server - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( MUM ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2, "obj2": 0.6889591602295935}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.24080000357175058}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) - MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( ( MLU * MUM ) + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.44607392409034585}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5808226464323655}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) * ( MDR * AMS ) ) / ( ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( Min( DS ,DS ) ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.22962962962962963, "obj2": 0.666057728924767}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU * MUM ) )", "obj1": 0.4074074074074074, "obj2": 0.49755619197780987}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( Max( ( FirstVNF_RAM - FirstVNF_RAM ),( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( RRSe,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( RCSe * ( RRSe - DS ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8073123595398977}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + RRSe ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( RMSe - MUC ) ) ) ) ,( CS / MLU ) ) ) )", "obj1": 0.725925925925926, "obj2": 0.1333390202841733}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5018518518518519, "obj2": 0.39863343657281486}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12962962962962962, "obj2": 0.7841621160573701}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / Const ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / ( ( Min( RMSe ,RRSe ) + ( MUR - MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( ( ( BR - CRS ) - FirstVNF_CPU ) + ( AMS - AMS ) ) / ( ( BR - CRS ) - FirstVNF_CPU ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( RCSe ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7686571024802276}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) ) )", "choosing": "Max( Min( ( ( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) + ( MUR * MUM ) ) ,( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.3592592592592593, "obj2": 0.5440504113552352}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5477915469435003}], "28": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( MDR - AMS ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) * ( MLU - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( MDR - AMS ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) * ( MLU - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( ( ( ( FirstVNF_CPU / ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) - ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.22854517185121176}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( AMS / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( RMSe + ( DS + MUR ) ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.15315237609789425}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) - ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.3132346128298033}, {"determining": "( ( PN / Min( MDR ,( BR / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS * AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) - ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe * MLU ) ) ) )", "obj1": 0.5111111111111111, "obj2": 0.38934796114406844}, {"determining": "( DDR / ( ( ( ( CRS - MRS ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * ( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RRSe ) ) ) ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MLU ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4185185185185185, "obj2": 0.48126804445139326}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU * MUM ) )", "obj1": 0.4074074074074074, "obj2": 0.49755619197780987}, {"determining": "( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) + FirstVNF_RAM ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( MUM - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) ) * Min( MLU ,( ( ( MUC * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.013907875643153229}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + RRSe ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( RMSe - MUC ) ) ) ) ,( CS / MLU ) ) ) )", "obj1": 0.725925925925926, "obj2": 0.1333390202841733}, {"determining": "( ( ( Min( Min( Min( FirstVNF_Mem_Server ,ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( ( ( MUC - MUC ) / RMSe ) * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS * DS ) ) ) ) )", "obj1": 0.924074074074074, "obj2": 0.0322287905509977}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.27173720438172716}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( ( Min( DS ,DS ) + ( Min( MUM ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) * Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4247966459203571}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( MDR * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + DS ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5677299098375456}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( MUC / RMSe ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7314814814814815, "obj2": 0.11974816551013676}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( RMSe * ( MLU - RRSe ) )", "obj1": 0.6555555555555556, "obj2": 0.2636274389430034}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.582615623291533}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR + AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUR ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.2722222222222222, "obj2": 0.6111988466574864}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3553418448969929}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( MDR / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ),Min( ( ( ( ( MUC / RMSe ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8, "obj2": 0.0928804718946785}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem ) ) - ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * DS ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.28230287980476737}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.24080000357175058}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8537037037037037, "obj2": 0.08072218163711051}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.09907793040387965}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( ( ( RRSe - RRSe ) + ( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.19444444444444445, "obj2": 0.7023543455010383}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( Min( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,( MLU - RRSe ) ) ) ) ,MUC ) ,( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4351851851851852, "obj2": 0.44607392409034585}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.09907793040387965}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - MDR ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5380673241357269}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) )", "obj1": 0.25925925925925924, "obj2": 0.6419508746281664}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / ( ( Min( RMSe ,RRSe ) + ( RCSe - MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) * ( MDR * AMS ) ) / ( ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7225770729789147}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( RRSe,MLU ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.5592592592592592, "obj2": 0.3496703351106847}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3553418448969929}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( ( MUM + RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5018518518518519, "obj2": 0.39863343657281486}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( ( Min( ( MDR * ( ACS - ( AMS * FirstVNF_CPU ) ) ) ,( FirstVNF_Mem * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ,( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUC - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.45185185185185184, "obj2": 0.4349848339243978}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( CRS - DDR ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( ( MLU * MUM ) + RRSe ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6519420627672399}, {"determining": "( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) / MLU ) ) ) )", "obj1": 0.15, "obj2": 0.7572413057659548}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS - Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( Max( ( FirstVNF_RAM - FirstVNF_RAM ),( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( RRSe,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( RCSe * ( RRSe - DS ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8073123595398977}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( MUM * Min( RRSe ,DS ) ) * MUM ),( MUM * Min( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) ,DS ) ) )", "obj1": 0.812962962962963, "obj2": 0.08706978553009903}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - MUM ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012702141895797272}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),( Min( MUM ,Min( RRSe ,DS ) ) * MUM ) )", "obj1": 0.8759259259259259, "obj2": 0.05975642515525002}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6151432629022272}, {"determining": "Max( DDR,( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( ( DDR - PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( MUM + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6652626412725351}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( Min( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( CRS - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.4740740740740741, "obj2": 0.43289654629634133}], "29": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR + AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,CS ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( MDR - AMS ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS + AMS ) ),FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) )", "choosing": "( ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) * ( MLU - RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU * MUM ) )", "obj1": 0.4074074074074074, "obj2": 0.49755619197780987}, {"determining": "( ( FirstVNF_CPU / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,DS ),Max( ( Min( ( RMSe + ( ( ( MUC - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.35185185185185186, "obj2": 0.5318288698835097}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( ( ( ( FirstVNF_CPU / ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) - ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.22854517185121176}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( ( ( RRSe - RRSe ) + ( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.19444444444444445, "obj2": 0.7023543455010383}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( MUC / RMSe ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7, "obj2": 0.15449326600645275}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.582615623291533}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( Max( ( FirstVNF_RAM - FirstVNF_RAM ),( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( RRSe,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( RCSe * ( RRSe - DS ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8073123595398977}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,DS ) ) * MUM ),( RCSe * Min( RRSe ,DS ) ) )", "obj1": 0.8518518518518519, "obj2": 0.07543807750363357}, {"determining": "( Min( Const ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( RRSe,MLU ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.5592592592592592, "obj2": 0.3496703351106847}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5833333333333334, "obj2": 0.32304897605685007}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.27173720438172716}, {"determining": "( ( ( Min( Min( Min( FirstVNF_Mem_Server ,ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( ( ( MUC - MUC ) / RMSe ) * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS * DS ) ) ) ) )", "obj1": 0.924074074074074, "obj2": 0.0322287905509977}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ),Min( ( ( ( ( MUC / RMSe ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.912962962962963, "obj2": 0.039261579744682806}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + RRSe ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( RMSe - MUC ) ) ) ) ,( CS / MLU ) ) ) )", "obj1": 0.737037037037037, "obj2": 0.11798187316394992}, {"determining": "( ( FirstVNF_Mem_Server / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / Min( ( BR + RRS ) ,Max( FirstVNF_RAM,CRS ) ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) )", "obj1": 0.25925925925925924, "obj2": 0.6419508746281664}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC / RMSe ) ,RMSe ) ) - ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.3132346128298033}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS - Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6090700680580434}, {"determining": "( ( PN / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,( FirstVNF_CPU - FirstVNF_Mem ) ) - ( ( ( Max( FirstVNF_Mem_Server,( MDR * Min( AMS ,FirstVNF_CPU ) ) ) * ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) ) + RRS ) - AMS ) ) )", "choosing": "Max( ( MUC * DS ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.28230287980476737}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7691183644012741}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU - ( AMS - AMS ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( ( RCSe - MLU ) + ( DS + MUR ) ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9592592592592593, "obj2": 0.023364668877138547}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8814814814814815, "obj2": 0.05083077604719075}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) - ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * ( CS * ( MLU - ( Min( MUM ,Min( MUM ,DS ) ) + ( MUM * Min( RRSe ,RMSe ) ) ) ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MLU ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.4778612101016057}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3553418448969929}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( ( MDR * ( ACS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe - MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) / Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.09907793040387965}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( AMS / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( RMSe + ( DS + MUR ) ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.13841946670961439}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( AMS - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Max( ( Min( ( RMSe + ( ( MLU * MUM ) + MUR ) ) ,MUC ) - RRSe ),( RMSe / MLU ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4467411498809647}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.09907793040387965}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( Min( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,( MLU - RRSe ) ) ) ) ,MUC ) ,( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6688961049440052}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,DS ) ) )", "obj1": 0.5407407407407407, "obj2": 0.3862511907631193}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( MDR,CRS ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Min( MUM ,RCSe ) + Max( RCSe,RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5111111111111111, "obj2": 0.38934796114406844}, {"determining": "( DDR / ( ( ( ( CRS - MRS ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * ( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RRSe ) ) ) ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MLU ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4185185185185185, "obj2": 0.48126804445139326}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( Min( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,( MLU - RRSe ) ) ) ) ,MUC ) ,( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6688961049440052}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( MDR * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5677299098375456}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,( MRS / FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,ACS ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * AMS ) ) / ( ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( ( PN / ( AMS - AMS ) ),FirstVNF_RAM ) ) ) - ( ACS - AMS ) ) )", "choosing": "Min( Min( MUM ,( MUC * ( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RRSe ) ) ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.674074074074074, "obj2": 0.23983801196588603}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7544771560137173}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( MUC / RMSe ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - RCSe ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14629629629629629, "obj2": 0.7569266418937239}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( FirstVNF_Mem_Server * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,MUC ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.38922478887917844}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - MUM ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012702141895797272}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( ( Min( ( MDR * ( ACS - ( AMS * FirstVNF_CPU ) ) ) ,( FirstVNF_Mem * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ,( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUC - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.45185185185185184, "obj2": 0.4349848339243978}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - MDR ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS - Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5380673241357269}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / MRS ) ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6648148148148149, "obj2": 0.2550416614825478}], "30": [{"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + RRSe ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( RMSe - MUC ) ) ) ) ,( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR + AMS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,CS ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( DS + MUR ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( RMSe * ( MLU * MUM ) )", "obj1": 0.4074074074074074, "obj2": 0.49755619197780987}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( MUC / RMSe ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7, "obj2": 0.15449326600645275}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( ( ( ( FirstVNF_CPU / ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) - ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.22854517185121176}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4207864959816337}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.582615623291533}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - MUM ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012702141895797272}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( ( Min( ( MDR * ( ACS - ( AMS * FirstVNF_CPU ) ) ) ,( FirstVNF_Mem * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ,( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUC - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.45185185185185184, "obj2": 0.4349848339243978}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server + ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,Max( Min( ( DS / MUM ) ,RCSe ),( RCSe - RMSe ) ) ) - ( ( ( MLU + CS ) / ( MLU + MUC ) ) * RCSe ) ) ) ) )", "obj1": 0.5518518518518518, "obj2": 0.3475728893774584}, {"determining": "( CRS / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR + MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.09907793040387965}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6906224643209733}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( Min( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,( MLU - RRSe ) ) ) ) ,MUC ) ,( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6688961049440052}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM * Min( RRSe ,MLU ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.401095704024309}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5833333333333334, "obj2": 0.32304897605685007}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.26969219498362285}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS - Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.35185185185185186, "obj2": 0.5318288698835097}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( ( MDR * ( ACS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe - MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) / Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,DS ) ) * MUM ),( RCSe * Min( RRSe ,DS ) ) )", "obj1": 0.8518518518518519, "obj2": 0.07543807750363357}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.09907793040387965}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.2815179605498034}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6090700680580434}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8814814814814815, "obj2": 0.05083077604719075}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_RAM - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( ( ( RRSe - RRSe ) + ( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.19444444444444445, "obj2": 0.7023543455010383}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( MDR,CRS ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Min( MUM ,RCSe ) + Max( RCSe,RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5111111111111111, "obj2": 0.38934796114406844}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( AMS - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Max( ( Min( ( RMSe + ( ( MLU * MUM ) + MUR ) ) ,MUC ) - RRSe ),( RMSe / MLU ) ) ) )", "obj1": 0.43333333333333335, "obj2": 0.4467411498809647}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( Min( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,( MLU - RRSe ) ) ) ) ,MUC ) ,( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6688961049440052}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( Max( ( FirstVNF_RAM - FirstVNF_RAM ),( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( RRSe,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( RCSe * ( RRSe - DS ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8073123595398977}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR + Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6090700680580434}, {"determining": "( ( ( Min( Min( Min( FirstVNF_Mem_Server ,ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "( ( MUR - MUM ) * Min( MLU ,( ( ( ( ( MUC - MUC ) / RMSe ) * RMSe ) + MUM ) * Min( ( ( MLU + CS ) / ( MLU + MUC ) ) ,( DS * DS ) ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.03983126595155653}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - DDR ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7691183644012741}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,MUC ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42962962962962964, "obj2": 0.4587326500220915}, {"determining": "( ( ( Min( ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.9462962962962963, "obj2": 0.02300946054517576}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8814814814814815, "obj2": 0.05083077604719075}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( MUM ,Min( ( MUC + RMSe ) ,RMSe ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( CS / MLU ) ) ) )", "obj1": 0.737037037037037, "obj2": 0.11798187316394992}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / MRS ) ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6648148148148149, "obj2": 0.2550416614825478}, {"determining": "( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( Min( Min( RMSe ,( DS + MUR ) ) ,MUC ) - ( MUR * MUM ) ) ,( CS / MLU ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.1214327179924605}, {"determining": "( ( ( ( ( CRS - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( RRSe - MLU ) + ( DS + MUR ) ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.3096895963066272}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,DS ) ) * MUM ),( RCSe * Min( RRSe ,DS ) ) )", "obj1": 0.8518518518518519, "obj2": 0.07543807750363357}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( FirstVNF_CPU / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,DS ),Max( ( Min( ( RMSe + ( ( ( MUC - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.35185185185185186, "obj2": 0.5318288698835097}, {"determining": "( DDR / ( ( ( ( CRS - MRS ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * ( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RRSe ) ) ) ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MLU ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4185185185185185, "obj2": 0.48126804445139326}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( AMS / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( RMSe + ( DS + MUR ) ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.13841946670961439}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( MDR * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5677299098375456}], "31": [{"determining": "( Min( ( ( ACS - ( AMS - MDR ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RCSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM * Min( RRSe ,MLU ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( FirstVNF_CPU - ( AMS - AMS ) ) ) ) + ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( DS + Min( RRSe ,DS ) ) + RRSe ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( RMSe - MUC ) ) ) ) ,( CS / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( AMS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RCSe * RCSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( ( ( ( FirstVNF_CPU / ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) - ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.22854517185121176}, {"determining": "( ( ( ( ( CRS - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( ( ( RRSe - RRSe ) + ( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.52346012227597}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( MDR,CRS ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Min( MUM ,RCSe ) + Max( RCSe,RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5111111111111111, "obj2": 0.38934796114406844}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4207864959816337}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server + ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,Max( Min( ( DS / MUM ) ,RCSe ),( RCSe - RMSe ) ) ) - ( ( ( MLU + CS ) / ( MLU + MUC ) ) * RCSe ) ) ) ) )", "obj1": 0.5518518518518518, "obj2": 0.3475728893774584}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( MUC / RMSe ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7, "obj2": 0.15449326600645275}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( ( Min( ( MDR * ( ACS - ( AMS * FirstVNF_CPU ) ) ) ,( FirstVNF_Mem * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ,( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUC - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.45185185185185184, "obj2": 0.4349848339243978}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5833333333333334, "obj2": 0.32304897605685007}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( MDR * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5677299098375456}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM * Min( RRSe ,MLU ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.401095704024309}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,BR ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Max( Min( RRSe ,RRSe ),( MLU / MLU ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6536282740923698}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( AMS / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( RMSe + ( DS + MUR ) ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.13841946670961439}, {"determining": "( ( ( ( ( CRS - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( RRSe - MLU ) + ( DS + MUR ) ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.3096895963066272}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,MUC ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42962962962962964, "obj2": 0.4587326500220915}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.85, "obj2": 0.07430261646180387}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + CS ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.054233963364724046}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( ( MDR * ( ACS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe - MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) / Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.758480352339398}, {"determining": "( ( ( ( ( CRS - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( ( ACS - ( ( AMS - CRS ) - FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RMSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) / ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( RRSe - MLU ) + ( DS + MUR ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.3443913873825979}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09564043318445228}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR + MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.6001088232933128}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( FirstVNF_Mem_Server - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( ( Min( Min( RMSe ,( DS + MUR ) ) ,MUC ) - ( MUR * MUM ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.6841306416132638}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / MRS ) ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6648148148148149, "obj2": 0.2550416614825478}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - FirstVNF_CPU ) + FirstVNF_Mem_Server ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,DS ) ) * MUM ),( MUC * Min( RRSe ,DS ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08764173440874062}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( Max( ( FirstVNF_RAM - FirstVNF_RAM ),( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( RRSe,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( RCSe * ( RRSe - DS ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8073123595398977}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10358869828522693}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6906224643209733}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11590218056374166}, {"determining": "( ( FirstVNF_CPU / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,DS ),Max( ( Min( ( RMSe + ( ( ( MUC - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.35185185185185186, "obj2": 0.5318288698835097}, {"determining": "( ( ( Min( Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( DS ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUC ) ,RCSe ) - ( RCSe - RMSe ) ) ) - MUM ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012702141895797272}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR + Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6090700680580434}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.2815179605498034}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( ( ( Min( ( Min( FirstVNF_RAM_Server ,ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Max( ( MUC * ( CS * ( MLU - ( Min( MUM ,( MUM - RMSe ) ) + ( MUM * Min( RRSe ,RRSe ) ) ) ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MLU ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.03617296438930715}, {"determining": "( ( ( Min( ( ACS - ( ( FirstVNF_CPU - FirstVNF_RAM ) - FirstVNF_CPU ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Max( MLU,Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.9407407407407408, "obj2": 0.025662807713224493}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) - ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07878972351145362}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.5496400244444399}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( Max( ( AMS / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR * PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( RMSe + ( DS + MUR ) ) + Min( RRSe ,DS ) ) + RCSe ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.15315237609789425}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( DS ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.582615623291533}], "32": [{"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( Min( ( ( ACS - ( AMS - MDR ) ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RCSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM * Min( RRSe ,MLU ) ) ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( AMS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,DDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RCSe * RCSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MLU / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( RRS / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),( Min( RRSe ,RRSe ) + ( MLU / MLU ) ) ) )", "obj1": 0.37592592592592594, "obj2": 0.5184918048144316}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( MUM ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.6944444444444444, "obj2": 0.18145223060300145}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( ( Min( ( MDR * ( ACS - ( AMS * FirstVNF_CPU ) ) ) ,( FirstVNF_Mem * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ,( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUC - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.45185185185185184, "obj2": 0.4349848339243978}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( ( Min( MUM ,Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6851851851851852, "obj2": 0.24240278145311472}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + CS ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9592592592592593, "obj2": 0.012195321988745237}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( FirstVNF_RAM_Server - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.5037037037037037, "obj2": 0.38293827868848873}, {"determining": "( ( ( Min( ( Min( FirstVNF_RAM_Server ,ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Max( ( MUC * ( CS * ( MLU - ( Min( MUM ,( MUM - RMSe ) ) + ( MUM * Min( RRSe ,RRSe ) ) ) ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MLU ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.03617296438930715}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / MRS ) ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6648148148148149, "obj2": 0.2550416614825478}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR + Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6090700680580434}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( ( FirstVNF_CPU / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) * Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,DS ),Max( ( Min( ( RMSe + ( ( ( MUC - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.35185185185185186, "obj2": 0.5318288698835097}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( Max( ( FirstVNF_RAM - FirstVNF_RAM ),( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( RRSe,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( RCSe * ( RRSe - DS ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8073123595398977}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6370370370370371, "obj2": 0.2796220839489155}, {"determining": "( ( ( ( ( CRS - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( ( ACS - ( ( AMS - CRS ) - FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RMSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) / ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( RRSe - MLU ) + ( DS + MUR ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.3443913873825979}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4207864959816337}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.758480352339398}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUC ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8907407407407407, "obj2": 0.05261846774055213}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,( RCSe - RMSe ) ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.3075374490499423}, {"determining": "( DDR / ( ( ( ( AMS - ( ( PN / ( AMS - AMS ) ) - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + RCSe ) ) * ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6536282740923697}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.056645426792334294}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( ( ACS / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,DS ) ) )", "obj1": 0.49074074074074076, "obj2": 0.41176767045581025}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( DDR / ( ( ( ( ACS * ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( Min( ( RCSe - RCSe ) ,( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6693300915278515}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( ( ( MLU + CS ) / ( MLU + MUC ) ) * RCSe ) ) ) ) )", "obj1": 0.5351851851851852, "obj2": 0.36809330598100065}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( ( MDR * ( ACS - ( ( Max( ACS,FirstVNF_RAM ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe - MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,( DDR * BR ) ) / ( FirstVNF_Mem_Server - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( ( Min( Min( RMSe ,( DS + MUR ) ) ,MUC ) - ( MUR * MUM ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.6807759238869961}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR + MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.6001088232933128}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5833333333333334, "obj2": 0.32304897605685007}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / MUM ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,MUC ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.4578708471770694}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( ( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.5314814814814814, "obj2": 0.37454914162426234}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.5496400244444399}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10358869828522693}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( Max( ( AMS / MDR ),Min( FirstVNF_Mem_Server ,CRS ) ) - ( AMS - AMS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( ( RMSe + ( DS + MUR ) ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7363565275140995}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS - AMS ) ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7698783305822087}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.2815179605498034}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( ( MDR * ( ACS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.7164449448853999}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - MDR ) * ( MDR - ( ( CRS - DDR ) * ( MDR * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR / AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( Min( RMSe ,( DS + MUM ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7191907100263765}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6949323674069221}, {"determining": "( ( ( Min( ( ACS - ( ( FirstVNF_CPU - FirstVNF_RAM ) - FirstVNF_CPU ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Max( MLU,Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.9407407407407408, "obj2": 0.025662807713224493}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - AMS ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) - ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( ( ( ( ( RMSe + ( DS + MUR ) ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8074074074074075, "obj2": 0.09126814023733223}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.07635428262510507}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}], "33": [{"determining": "( ( PN / ( AMS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( CRS,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( MLU + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( AMS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / Max( Min( ( Min( ( RMSe + ( RCSe * RCSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( MUM ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.6944444444444444, "obj2": 0.18145223060300145}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10358869828522693}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.3, "obj2": 0.5847527787225716}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( ( Min( ( MDR * ( ACS - ( AMS * FirstVNF_CPU ) ) ) ,( FirstVNF_Mem * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ,( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUC - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.45185185185185184, "obj2": 0.4349848339243978}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( ( Const - AMS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / MUM ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,MUC ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RCSe / MLU ) ) ) )", "obj1": 0.37407407407407406, "obj2": 0.5105895382919723}, {"determining": "( ( ( ( ( CRS - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR * FirstVNF_CPU_Server ) - PN ) ) ) ) / ( Min( ( ACS - ( ( AMS - CRS ) - FirstVNF_CPU ) ) ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR / AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RMSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) / ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( ( RRSe - MLU ) + ( DS + MUR ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.3443913873825979}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ACS ) - ( MDR / RRS ) ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe + MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( MUC + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC * MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9592592592592593, "obj2": 0.012174228661397495}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + CS ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.8314814814814815, "obj2": 0.0668699764408551}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - RCSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.23854138989453277}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR + Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6090700680580434}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) + Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( Min( ( Min( DS ,DS ) + ( ( RMSe + DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.5833333333333334, "obj2": 0.32304897605685007}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6928452677681965}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - AMS ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) - ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( ( ( ( ( RMSe + ( DS + MUR ) ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8074074074074075, "obj2": 0.09126814023733223}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4207864959816337}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR + MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.6001088232933128}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( MDR / FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( ( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) - ( Min( ( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.2657526322046968}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( MUC * ( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( RRSe ,RRSe ) ) ) ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MLU ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3650139285965831}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.056645426792334294}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / MUM ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,MUC ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.4578708471770694}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ACS ) ) ) ,Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / MRS ) ) ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe + RCSe ) ) ) ) )", "obj1": 0.6648148148148149, "obj2": 0.2550416614825478}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( FirstVNF_RAM_Server - ( AMS * ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( ( RCSe - RMSe ) / RMSe ) ,RMSe ) ) ,MUC ) / Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),Min( ( RRSe - MLU ) ,Min( Min( ( DS + CS ) ,( MUR + MUC ) ) ,( DS - DS ) ) ) ) )", "obj1": 0.5037037037037037, "obj2": 0.38293827868848873}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( ( MDR * ( ACS - ( ( Max( ACS,FirstVNF_RAM ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe - MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( Max( ( FirstVNF_RAM - FirstVNF_RAM ),( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( RRSe,RCSe ) / ( Min( MUM ,Min( ( ( MUC - MUC ) / RMSe ) ,RMSe ) ) + ( RCSe * ( RRSe - DS ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8073123595398977}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.5496400244444399}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7290055053369768}, {"determining": "( ( ( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Max( ( DS / MUM ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,MUC ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.044546100331250685}, {"determining": "( DDR / ( ( ( ( ACS * ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( Min( ( RCSe - RCSe ) ,( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6693300915278515}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( ( RCSe - MLU ) + ( DS + MUR ) ) ) ) ,( MUC * MUC ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( RRSe ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.2815179605498034}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + Max( DS,MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,( MUR * MUM ) ) ,( MLU / MLU ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6759860779037307}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,Max( Max( DDR,PN ),( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_CPU_Server / ACS ) ) ) ) ) ) ) )", "choosing": "Max( ( DS / MUM ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,MUC ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUM ) ,( Min( MUC ,RCSe ) - Min( Min( DS ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.4578708471770694}, {"determining": "( Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( ( ( ( MLU + CS ) + ( DS + Min( RRSe ,DS ) ) ) + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.5296296296296297, "obj2": 0.3764729405993537}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( FirstVNF_Mem / PN ) ) ) ) ,( DDR * BR ) ) / ( FirstVNF_Mem_Server - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( ( Min( Min( RMSe ,Min( DS ,MUR ) ) ,MUC ) - ( MUR * MUM ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9203703703703704, "obj2": 0.03546304526600456}, {"determining": "( ( PN / Min( ( FirstVNF_RAM_Server / ( DDR / MDR ) ) ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_Mem_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + CRS ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.24327984941688344}, {"determining": "( ( ( Min( ( ACS - ( ( FirstVNF_CPU - FirstVNF_RAM ) - FirstVNF_CPU ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Max( MLU,Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.9407407407407408, "obj2": 0.025662807713224493}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.3048152349495144}, {"determining": "( ( PN / Min( MDR ,( MRS / MDR ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4962962962962963, "obj2": 0.40544143028992563}, {"determining": "( DDR / ( ( ( ( AMS - ( ( PN / ( AMS - AMS ) ) - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + RCSe ) ) * ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6536282740923697}, {"determining": "( ( ( Min( ( ACS - ( ( FirstVNF_CPU - FirstVNF_RAM ) - FirstVNF_CPU ) ) ,( DDR * BR ) ) / FirstVNF_Mem_Server ) - ACS ) * ( DDR - PN ) )", "choosing": "Max( MLU,Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.024593918998247834}], "34": [{"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ACS ) - ( MDR / RRS ) ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe + MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( MUC + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC * MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( PN / ( AMS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( CRS,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( MLU + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( AMS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / Max( Min( ( Min( ( RMSe + ( RCSe * RCSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_CPU / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) * Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6222222222222222, "obj2": 0.2125864855014353}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.32295347485362647}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( MUM ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.6944444444444444, "obj2": 0.18145223060300145}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - ARS ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + RCSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.15768311223463202}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6928452677681965}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.3, "obj2": 0.5847527787225716}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7290055053369768}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "Max( ( DDR / MDR ),Min( FirstVNF_Mem_Server ,( ( MDR * ( ACS - ( ( Max( ACS,FirstVNF_RAM ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe - MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.42962962962962964, "obj2": 0.4497061388196208}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR + Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) * MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6090700680580434}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( Max( RMSe,( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( MLU / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.3216717383859067}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.056645426792334294}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( FirstVNF_RAM_Server - ( AMS * ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( ( RCSe - RMSe ) / RMSe ) ,RMSe ) ) ,MUC ) / Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),Min( ( RRSe - MLU ) ,Min( Min( ( DS + CS ) ,( MUR + MUC ) ) ,( DS - DS ) ) ) ) )", "obj1": 0.5037037037037037, "obj2": 0.38293827868848873}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( ( MDR - AMS ) - FirstVNF_RAM ) - ( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.12407407407407407, "obj2": 0.7932246679946745}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( ( Min( ( MDR * ( ACS - ( AMS * FirstVNF_CPU ) ) ) ,( FirstVNF_Mem * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ,( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUC - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.45185185185185184, "obj2": 0.4349848339243978}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5064427425065219}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( DDR * BR ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7689874265092534}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_Mem_Server ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( MUM ,( RRSe - RRSe ) ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.7870370370370371, "obj2": 0.10175645253605901}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) + AMS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + CS ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06368916275187199}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.39814814814814814, "obj2": 0.5017829445055805}, {"determining": "( Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( MDR - AMS ) ) ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( ( MUR + MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.35, "obj2": 0.5334197632106688}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - AMS ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) - ( RCSe - RMSe ) ) ) ,( Min( MUC ,RCSe ) - ( MUC - RRSe ) ) ) ,Min( ( ( ( ( RMSe + ( DS + MUR ) ) + Min( RRSe ,DS ) ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.8074074074074075, "obj2": 0.09126814023733223}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR + MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.6001088232933128}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + Max( DS,MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,( MUR * MUM ) ) ,( MLU / MLU ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6759860779037307}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( FirstVNF_RAM_Server - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.37777777777777777, "obj2": 0.5037155382583196}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( DDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( MUM ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - RMSe ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( MUC + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9592592592592593, "obj2": 0.012174228661397495}, {"determining": "( DDR / Max( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ),( MDR - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10358869828522693}, {"determining": "( Min( ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server / ( FirstVNF_Mem / PN ) ) ) ) ,( DDR * BR ) ) / ( FirstVNF_Mem_Server - ( MDR - AMS ) ) )", "choosing": "Min( Min( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) ,( ( Min( Min( RMSe ,Min( DS ,MUR ) ) ,MUC ) - ( MUR * MUM ) ) - ( MUC - MUC ) ) ) ,Min( RMSe ,( ( RRSe + RCSe ) - ( Min( ( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ,( Min( ( DS / MUM ) ,RCSe ) - ( RCSe - RMSe ) ) ) - ( RCSe * RCSe ) ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.008896489107496722}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + CS ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.8314814814814815, "obj2": 0.0668699764408551}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4207864959816337}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4425925925925926, "obj2": 0.44081858609320873}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.5496400244444399}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - Min( DDR ,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,MDR ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,Min( MUM ,( MUM - RMSe ) ) ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6507822012688852}, {"determining": "( DDR / ( ( Max( ( AMS - ( AMS - AMS ) ),( MDR * ( FirstVNF_RAM_Server - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + ( ( ( RCSe - RMSe ) / RMSe ) / RMSe ) ) ,MUC ) / Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.5037037037037037, "obj2": 0.38293827868848873}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10358869828522693}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( ( PN / Min( MDR ,( MRS / MDR ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM_Server ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( Min( Min( RRSe ,( Min( MUC ,RRSe ) + ( MUR - MUM ) ) ) ,( MLU / MLU ) ) * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) / ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5018518518518519, "obj2": 0.4007727545113504}, {"determining": "( DDR / ( ( ( ( ACS * ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( Min( ( RCSe - RCSe ) ,( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6693300915278515}], "35": [{"determining": "( ( PN / ( AMS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( DDR / MDR ),( FirstVNF_RAM_Server + CRS ) )", "choosing": "( Max( MUM,RCSe ) / ( ( MUM - Min( ( MUC + RMSe ) ,RMSe ) ) - ( MUM + Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU_Server ) + ACS ) - ( MDR / RRS ) ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe + MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( MUC + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC * MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( AMS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / Max( Min( ( Min( ( RMSe + ( RCSe * RCSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8509774999569663}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.32295347485362647}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( Max( RMSe,( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( MLU / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.3216717383859067}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - RMSe ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( MUC + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9592592592592593, "obj2": 0.012174228661397495}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / ( FirstVNF_Mem_Server + Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - DDR ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( ( MUM * Min( RRSe ,DS ) ) * MUM ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.0456280745508533}, {"determining": "( DDR / ( ( ( AMS - ( MDR * FirstVNF_CPU_Server ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( MUM ,( RRSe - Min( ( MUC / RMSe ) ,RMSe ) ) ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.6925925925925925, "obj2": 0.19418174848040393}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_CPU / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) * Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6222222222222222, "obj2": 0.2125864855014353}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - RRS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MLU ) ) ,MUM ) / ( MUR * MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2116375965422526}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( DDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( MUM ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.4207864959816337}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.42962962962962964, "obj2": 0.4497061388196208}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6034848499433866}, {"determining": "( MDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - AMS ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12447182303993488}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( FirstVNF_RAM_Server - ( AMS * ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( ( RCSe - RMSe ) / RMSe ) ,RMSe ) ) ,MUC ) / Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),Min( ( RRSe - MLU ) ,Min( Min( ( DS + CS ) ,( MUR + MUC ) ) ,( DS - DS ) ) ) ) )", "obj1": 0.5037037037037037, "obj2": 0.38293827868848873}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( Min( ( Min( ( RMSe + ( RCSe * RCSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.714214098217649}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( ( MDR - AMS ) - FirstVNF_RAM ) - ( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.12407407407407407, "obj2": 0.7932246679946745}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / Min( RRSe ,RRSe ) ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( ( Min( ( MDR * ( ACS - ( AMS * FirstVNF_CPU ) ) ) ,( FirstVNF_Mem * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ,( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUC - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.45185185185185184, "obj2": 0.4349848339243978}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5064427425065219}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + RMSe ) + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9722222222222222, "obj2": 0.007423453415602372}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6479792722451136}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( MUM ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.6944444444444444, "obj2": 0.18145223060300145}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ACS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) ) ,( RMSe / MLU ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.754865434815258}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09564043318445228}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.7333333333333333, "obj2": 0.11836883528045256}, {"determining": "Max( ( DDR / MDR ),Min( AMS ,( ( MDR * ( ACS - ( ( Max( ACS,FirstVNF_RAM ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe + MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - ARS ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + RCSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.15768311223463202}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR + MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.6001088232933128}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MUR ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.15768311223463202}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.5496400244444399}, {"determining": "( ( PN / Min( MDR ,( MRS / MDR ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4981481481481482, "obj2": 0.40670681843005696}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.39814814814814814, "obj2": 0.5017829445055805}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( Const ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( MUC / RMSe ) ,RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - MLU ) ,Min( ( ( MLU + CS ) * ( MUR + MUC ) ) ,( DS / RMSe ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7371118149303149}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( Const * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6928452677681965}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7290055053369768}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4425925925925926, "obj2": 0.44081858609320873}, {"determining": "( DDR / ( ( Min( ACS ,PN ) - Max( FirstVNF_Mem_Server,( ( FirstVNF_RAM_Server / ACS ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( RRSe ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.8240740740740741, "obj2": 0.08392387968041887}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,( MDR - AMS ) ) ) ) / ( Min( ( Const - ACS ) ,Min( DDR ,FirstVNF_RAM ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( MUC,MLU ),Max( ( ( MUR + MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.35, "obj2": 0.5334197632106688}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + CS ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.8314814814814815, "obj2": 0.0668699764408551}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( FirstVNF_RAM_Server - ( AMS - ( MDR * ARS ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( ( RCSe - RMSe ) / RMSe ) ,RMSe ) ) ,MUC ) / Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUC + MUC ) ) ,( DS / DS ) ) ) ) )", "obj1": 0.5037037037037037, "obj2": 0.38293827868848873}, {"determining": "( DDR / ( ( ( ( ACS * ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUC ,RCSe ) / ( MUR * CS ) ),Max( ( Min( Min( ( RCSe - RCSe ) ,( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6652648149689815}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( DDR / Max( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ),( MDR - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10358869828522693}], "36": [{"determining": "( ( PN / ( AMS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( AMS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - RRS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.32295347485362647}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( DDR / ( ( ( AMS - ( MDR * FirstVNF_CPU_Server ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( MUM ,( RRSe - Min( ( MUC / RMSe ) ,RMSe ) ) ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.6925925925925925, "obj2": 0.19418174848040393}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_CPU / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) * Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6222222222222222, "obj2": 0.2125864855014353}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( Max( RMSe,( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( MLU / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.3216717383859067}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR + MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.6001088232933128}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( FirstVNF_RAM_Server - ( AMS * ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( ( RCSe - RMSe ) / RMSe ) ,RMSe ) ) ,MUC ) / Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),Min( ( RRSe - MLU ) ,Min( Min( ( DS + CS ) ,( MUR + MUC ) ) ,( DS - DS ) ) ) ) )", "obj1": 0.5037037037037037, "obj2": 0.38293827868848873}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8685185185185185, "obj2": 0.05609109318120533}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,MUR ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( ( MUC * MLU ) * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.39079161776403365}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( DDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( MUM ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( ( PN / ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( ( RMSe / MLU ),RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4284456028250201}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + CS ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) ) / MLU ) ) ) )", "obj1": 0.8314814814814815, "obj2": 0.0668699764408551}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6034848499433866}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2116375965422526}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( Min( ( Min( ( RMSe + ( RCSe * RCSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.714214098217649}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5064427425065219}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( Const * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6928452677681965}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) ) ) - ( MDR / MDR ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08634250235614116}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( ( MDR - MDR ),Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + ( DS + MUR ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.14796524043400164}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.4185185185185185, "obj2": 0.45617897824167425}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( MUM ,Min( MUM ,DS ) ) * MUM ),( RCSe * Min( RRSe ,RMSe ) ) )", "obj1": 0.6944444444444444, "obj2": 0.18145223060300145}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / Min( RRSe ,RRSe ) ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - PN ) + ACS ) - ( MDR - PN ) ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC + MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( MUC + MUR ) + ( Min( MUC ,RCSe ) + Min( Min( MLU ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.912962962962963, "obj2": 0.030601316422143383}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Min( ( Min( ( MDR * ( ACS - ( AMS * FirstVNF_CPU ) ) ) ,( FirstVNF_Mem * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ,( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUC - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.45185185185185184, "obj2": 0.4349848339243978}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - RMSe ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.028998094966423246}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.15768311223463202}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.7333333333333333, "obj2": 0.11836883528045256}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.08351033161014533}, {"determining": "( ( PN + ( AMS - AMS ) ) / ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe - MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8178517913968618}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( FirstVNF_Mem / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ( PN / ( AMS - DDR ) ) ) ,ACS ) ) ) - DDR ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) ,( Min( MUM ,Min( RRSe ,MUR ) ) * MUM ) ) ) )", "obj1": 0.8944444444444445, "obj2": 0.046925317423421285}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4425925925925926, "obj2": 0.44081858609320873}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7290055053369768}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( MDR - FirstVNF_CPU ) + ( AMS - FirstVNF_CPU ) ) - Max( MDR,PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + RMSe ) + MUR ) + ( ( MUC + RCSe ) + Min( Min( Max( MUM,DS ) ,RCSe ) ,( MUC - MUC ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.987037037037037, "obj2": 0.002987525240439139}, {"determining": "Max( ( DDR / MDR ),Min( AMS ,( ( MDR * ( ACS - ( ( Max( ACS,FirstVNF_RAM ) - FirstVNF_RAM ) / FirstVNF_Mem_Server ) ) ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe + MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.018490634219142276}, {"determining": "( DDR / ( ( Min( FirstVNF_CPU_Server ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - AMS ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,( ( RRSe / RMSe ) + RRSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12447182303993488}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MUR ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09564043318445228}, {"determining": "( ( PN / ( AMS - DDR ) ) / ( ( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - DDR ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( ( DDR / PN ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + Max( ( ( RCSe - MLU ) + MUR ),MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.044546100331250685}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.3045652338423814}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) * Min( ( Min( ( RCSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6746602002253071}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( ( MDR - AMS ) - FirstVNF_RAM ) - ( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.12407407407407407, "obj2": 0.7932246679946745}], "37": [{"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( ( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) + MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( AMS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.42184916259535515}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - RRS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.32295347485362647}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( FirstVNF_RAM_Server - ( AMS * ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( ( RCSe - RMSe ) / RMSe ) ,RMSe ) ) ,MUC ) / Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),Min( ( RRSe - MLU ) ,Min( Min( ( DS + CS ) ,( MUR + MUC ) ) ,( DS - DS ) ) ) ) )", "obj1": 0.5037037037037037, "obj2": 0.38293827868848873}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5064427425065219}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) / FirstVNF_CPU ) + ACS ) * ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server + ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Max( ( Min( CS ,CS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RCSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / ( RRSe - RRSe ) ) ) ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.18481794128274617}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6240740740740741, "obj2": 0.2116375965422526}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe + MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23281310552337298}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR + MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.6001088232933128}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( ( MUC * MLU ) * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.39079161776403365}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( Max( RMSe,( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( MLU / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.3216717383859067}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( Const * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6928452677681965}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( MDR - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) ) ) - ( MDR / MDR ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10577986348748339}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7419443140739763}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( Min( ( Min( ( RMSe + ( RCSe * RCSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.714214098217649}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( ( MDR - AMS ) - FirstVNF_RAM ) - ( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + MUR ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7595843773744306}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( ( MUC * MLU ) * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.39079161776403365}, {"determining": "( DDR / ( ( Min( FirstVNF_CPU_Server ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - AMS ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,( ( RRSe / RMSe ) + RRSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.12572064619014955}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6151432629022272}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR + ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( DDR + ( ( ( ( MDR * ( ACS * ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) * Min( ( Min( ( RCSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.681610107640775}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / Min( RRSe ,RRSe ) ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ),ACS ) - ( MDR * PN ) ) ) ) - ( MDR / MDR ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MLU,RCSe ) + ( RCSe - RMSe ) ) ),( RMSe + Max( ( ( RCSe - MLU ) + MUR ),MUC ) ) ) )", "obj1": 0.7425925925925926, "obj2": 0.11789189019755135}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_RAM ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.08351033161014533}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MUR ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09564043318445228}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8388888888888889, "obj2": 0.06326198768278729}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - FirstVNF_RAM_Server ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RRSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.22777777777777777, "obj2": 0.668042336955492}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.15768311223463202}, {"determining": "Max( ( DDR / MDR ),ARS )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUR ) / ( RCSe * Min( RRSe ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + FirstVNF_RAM ) - ( FirstVNF_CPU / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) * Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6222222222222222, "obj2": 0.2125864855014353}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / CRS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Max( ( ( RCSe - MLU ) + ( DS + MUR ) ),MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.018490634219142276}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,MUR ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8629629629629629, "obj2": 0.059012478076937575}, {"determining": "( ( PN / ( AMS - DDR ) ) / ( ( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - DDR ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.8814814814814815, "obj2": 0.05257534585036587}, {"determining": "( DDR / ( ( ( ( MDR * ( AMS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RCSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6558319911866455}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ( PN / ( FirstVNF_CPU - DDR ) ) ) ,ACS ) ) ) - DDR ) )", "choosing": "Max( ( MUC * Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) ,( Min( MUM ,Min( RRSe ,DS ) ) * MUM ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012702141895797272}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( ( ( MUC + Min( RRSe ,DS ) ) + CS ) + ( Min( MUC ,RCSe ) + Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) ,( Min( ( RRSe - MLU ) ,Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,Min( ( RMSe + RMSe ) ,MUC ) ) ) / MLU ) ) ) )", "obj1": 0.8, "obj2": 0.08376557770761059}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6539045712669018}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( ( FirstVNF_Mem - FirstVNF_CPU ) - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) ) ) - ( MDR / FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RCSe + RMSe ) ,MUC ) - CS ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09285663925256775}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.15768311223463202}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( ( MDR - AMS ) - FirstVNF_RAM ) - ( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.12407407407407407, "obj2": 0.7932246679946745}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7270830296040192}], "38": [{"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( ( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) + MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - RRS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.32295347485362647}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( Max( RMSe,( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( MLU / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.3216717383859067}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( FirstVNF_CPU / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( CS ,DS ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.42184916259535515}, {"determining": "( DDR / ( ( ( ( AMS - ( AMS - AMS ) ) * ( MDR * ( FirstVNF_RAM_Server - ( AMS * ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MUM ),Max( ( Min( ( RMSe + Min( ( ( RCSe - RMSe ) / RMSe ) ,RMSe ) ) ,MUC ) / Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),Min( ( RRSe - MLU ) ,Min( Min( ( DS + CS ) ,( MUR + MUC ) ) ,( DS - DS ) ) ) ) )", "obj1": 0.5037037037037037, "obj2": 0.38293827868848873}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4008701233314977}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.018490634219142273}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5064427425065219}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) - ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.20548081993323827}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe + MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23281310552337298}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.47436819668246}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.14094575076789065}, {"determining": "( ( PN / ( AMS - DDR ) ) / ( ( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - DDR ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( ( DDR / PN ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( DS,RCSe ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.04416508824182238}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) ) - ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,MUR ) + ( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) - MUM ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5999283774893058}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) / FirstVNF_CPU ) + ACS ) * ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server + ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Max( ( Min( CS ,CS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RCSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / ( RRSe - RRSe ) ) ) ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( RMSe + MLU ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.18481794128274617}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server + FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR + MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.6001088232933128}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( MDR - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) ) ) - ( MDR / MDR ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10577986348748339}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( DS ,MUR ) + ( MUR - MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7425925925925926, "obj2": 0.11638231509434381}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RCSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / ( RRSe - RRSe ) ) ) ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.18416279983242265}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( Const * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6928452677681965}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8296296296296296, "obj2": 0.06814995403244793}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,MUR ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( DDR / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_Mem ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( RRSe ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8055555555555556, "obj2": 0.08176576515824338}, {"determining": "( DDR / ( ( BR - CRS ) - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.9925925925925926, "obj2": 0.005310706217739881}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe / ( ( ( RCSe - MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8629629629629629, "obj2": 0.05753357720254826}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( DS + RMSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6796564021552762}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Max( ( RMSe + ( DS - MUR ) ),MUC ) / ( CS * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + Max( ( MLU * MUM ),MUR ) ) ,MUC ) - RRSe ) ,( RMSe / CS ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7419443140739763}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( Min( ( Min( ( RMSe + ( RCSe * RCSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.714214098217649}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( DDR / ( ( Min( FirstVNF_CPU_Server ,PN ) - Max( FirstVNF_Mem_Server,( ( ( AMS - AMS ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,( ( RRSe / RMSe ) + RRSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.12572064619014955}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR + ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ( PN / ( FirstVNF_CPU - DDR ) ) ) ,ACS ) ) ) - DDR ) )", "choosing": "Max( ( MUC * Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) ,( Min( MUM ,Min( RRSe ,DS ) ) * MUM ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012702141895797272}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MUR ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09564043318445228}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( ( MUC * MLU ) * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RCSe ) - Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.39079161776403365}, {"determining": "( DDR / ( ( ( ( MDR * ( AMS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RCSe + RMSe ) ,MUC ) - CS ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.22407407407407406, "obj2": 0.6782892771095401}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( ( MDR - AMS ) - FirstVNF_RAM ) - ( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.12407407407407407, "obj2": 0.7932246679946745}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6533061476540749}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( ( MDR - AMS ) - FirstVNF_RAM ) - ( MDR * ( ( CRS - DDR ) * ( ARS * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + MUR ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU + MLU ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7595843773744306}, {"determining": "( ( PN / ( AMS - AMS ) ) / ( ( ( ( ( MDR - AMS ) - FirstVNF_RAM ) - ( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.12407407407407407, "obj2": 0.7932246679946745}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( MDR - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) ) ) - ( MDR / MDR ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12447182303993488}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( ( MDR - AMS ) / ( PN / ( FirstVNF_CPU - DDR ) ) ) ,ACS ) ) ) - DDR ) )", "choosing": "Max( ( MUC * Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( RMSe + ( ( RMSe + ( DS * RCSe ) ) * MUC ) ) ,MUC ) ,( Min( MUM ,Min( RRSe ,DS ) ) * MUM ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012702141895797272}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe * ( DS / MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6151432629022272}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8388888888888889, "obj2": 0.06326198768278729}], "39": [{"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( ( MUC * MLU ) * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RMSe ) - Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4685185185185185, "obj2": 0.36473189674477535}, {"determining": "( ( PN / Min( MDR ,( MRS / FirstVNF_RAM_Server ) ) ) / ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM ) - FirstVNF_RAM ) * ( MDR * FirstVNF_CPU_Server ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( ( PN / ( AMS - AMS ) ),Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) ) ) - ( CRS - AMS ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( Max( RMSe,( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( MLU / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.3216717383859067}, {"determining": "( ( PN / ( ACS - DDR ) ) / ( Min( ( Const - ACS ) ,( DDR * FirstVNF_Mem ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( Max( RMSe,MLU ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) / ( MUR + MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.6055555555555555, "obj2": 0.28805414732796825}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3990683013829882}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.4237514677747049}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.32295347485362647}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5806377130830267}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe + MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23281310552337298}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,MUR ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( MUM + RMSe ) ,MUC ) - RRSe ) ,( RMSe / ( RRSe - RRSe ) ) ) ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.2001797608624711}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) - ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.20548081993323827}, {"determining": "( ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) ) - ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,MUR ) + ( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUC ) ) ,MUM ) / Max( MUR,MUM ) ) ) - MUM ) ) )", "obj1": 0.924074074074074, "obj2": 0.03344842472844327}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,Max( RMSe,MLU ) ) * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16366407559081123}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe * ( DS / MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6151432629022272}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe / ( ( ( RCSe - MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8055555555555556, "obj2": 0.08176576515824338}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21418781289711988}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( Min( ( Min( ( RMSe + ( RCSe * RCSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.714214098217649}, {"determining": "( ( PN / ( AMS - DDR ) ) / ( ( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - DDR ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - ( ( DDR / PN ) * ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( DS,RCSe ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.04416508824182238}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6496044440438999}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( Const * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6928452677681965}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( FirstVNF_CPU / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( CS ,DS ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.42184916259535515}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - RRS ) ) )", "choosing": "Max( ( MUC * MLU ),( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.32295347485362647}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe * ( DS / MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.34814814814814815, "obj2": 0.5291300025384397}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5064427425065219}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.5328764115427711}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( MDR - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( ( RCSe - MLU ) + ( DS * RCSe ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6708595960735019}, {"determining": "( DDR / ( ( BR - CRS ) - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.9925925925925926, "obj2": 0.005310706217739881}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( DDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( ( RRSe - RRSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.018490634219142273}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( RRSe ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - DDR ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( RRSe ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8159193142785236}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,( BR - CRS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MUR ) + Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7851851851851852, "obj2": 0.09533916891806461}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( RMSe / MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8277777777777777, "obj2": 0.07026976028913251}, {"determining": "( Const / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.6276580276236722}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ( PN / ( FirstVNF_CPU - DDR ) ) ) ,ACS ) ) ) - DDR ) )", "choosing": "Max( ( MUC * Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) ,( Min( MUM ,Min( RRSe ,DS ) ) * MUM ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012702141895797272}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( Const * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7260860856987125}, {"determining": "( DDR / ( ( Min( FirstVNF_RAM_Server ,PN ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Max( ( Min( CS ,CS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RCSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / ( RRSe - RRSe ) ) ) ) / ( MUR * MUM ) ) )", "obj1": 0.7518518518518519, "obj2": 0.11244094987425793}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR + ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) + ACS ) - ( MDR / ( ( ( MDR - AMS ) - FirstVNF_RAM ) - ( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( DS ,MUR ) + ( MUR - MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,RRSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7533905411668979}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( MDR - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) ) ) - ( MDR / MDR ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10577986348748339}, {"determining": "( ( FirstVNF_Mem_Server / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( DS + RMSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6796564021552762}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( MDR,Min( ( FirstVNF_RAM_Server / ( PN / ( FirstVNF_CPU - DDR ) ) ) ,ACS ) ) ) - DDR ) )", "choosing": "Max( ( MUC * Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( RCSe - RMSe ) ) ),Min( ( RRSe - RCSe ) ,( RMSe / MLU ) ) ) ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS * RCSe ) ) * MUC ) ) ,MUC ) ,( Min( MUM ,Min( RRSe ,DS ) ) * MUM ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012702141895797272}], "40": [{"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5462962962962963, "obj2": 0.2760159201249157}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3990683013829882}, {"determining": "( DDR / ( ( ( ( ( Max( AMS,FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3925925925925926, "obj2": 0.4284013838778595}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.32295347485362647}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,FirstVNF_CPU ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( ( MUC * MLU ) * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RMSe ) - Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.352424281198361}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( ( MUC * MLU ) * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RMSe ) - Min( Min( Min( RCSe ,RRSe ) ,( MLU / MLU ) ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4666666666666667, "obj2": 0.35040529283766225}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe + MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23281310552337298}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,MUR ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_Mem_Server / PN ) - CRS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( ( Min( ( ( RCSe - MUR ) + Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8555555555555555, "obj2": 0.06576690094004974}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,Max( RMSe,MLU ) ) * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.19693942923690488}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5806377130830267}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( FirstVNF_Mem_Server - FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) + ( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.14043527818765916}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( CS ,DS ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6672630231982704}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( DS ,MUR ) + ( MUR - MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,RRSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.710024883089787}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( Min( RRSe ,RRSe ) + MUR ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.16597569445995383}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - DDR ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( RRSe ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8159193142785236}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( Min( RMSe ,( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) )", "obj1": 0.8851851851851852, "obj2": 0.05222059751541498}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.35555555555555557, "obj2": 0.5064427425065219}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) - ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.20548081993323827}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_RAM_Server - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( Max( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ),( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.32295347485362647}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * Max( MDR,( ACS - ( ( BR - ACS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) ,RRSe ) + Max( MLU,MUM ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6124976937818108}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( DDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( ( RRSe - RRSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.018490634219142273}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe / ( ( ( RCSe - MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe + MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23281310552337298}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( Max( ( MDR - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) ) ) - ( MDR / MDR ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10577986348748339}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( Const * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6928452677681965}, {"determining": "( ( FirstVNF_Mem_Server / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,DDR ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.3, "obj2": 0.5771855652952348}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21418781289711988}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Max( Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ),MLU ),Max( Min( ( MUM / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ),( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.751949662684972}, {"determining": "( DDR / ( ( BR - CRS ) - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.9925925925925926, "obj2": 0.005310706217739881}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( Const * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7260860856987125}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( RMSe / MLU ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8277777777777777, "obj2": 0.07026976028913251}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_Mem - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MUC ) ) ) )", "obj1": 0.412962962962963, "obj2": 0.415478870216613}, {"determining": "( Const / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) + ACS ) - ( MDR / ( ( ( MDR - AMS ) - FirstVNF_RAM ) - ( MDR * ( ( CRS - DDR ) * ( FirstVNF_Mem * ACS ) ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( DS ,MUR ) + ( MUR - MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,RRSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7533905411668979}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,( BR - CRS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( DS,RCSe ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.75, "obj2": 0.11211349757602726}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( RRSe ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe * ( DS / MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.34814814814814815, "obj2": 0.5291300025384397}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( AMS - FirstVNF_CPU_Server ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8222222222222222, "obj2": 0.07333651969594904}, {"determining": "( ( PN / ( AMS - DDR ) ) / ( ( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) / Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,ACS ) ) ) - DDR ) ) / ( Min( FirstVNF_RAM ,FirstVNF_CPU ) - ( FirstVNF_CPU_Server - Max( ( DDR / PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9018518518518519, "obj2": 0.04200454834329154}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( CS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08538509406809401}, {"determining": "( ( FirstVNF_Mem_Server / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( DS + RMSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6796564021552762}], "41": [{"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - Max( MRS,AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,DDR ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( DDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( ( RRSe - RRSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.018490634219142273}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3990683013829882}, {"determining": "( ( ( ( ( ( ( AMS - RRS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( RRS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / FirstVNF_RAM )", "choosing": "Max( Min( ( RMSe + ( Max( ( RCSe - MLU ),( DS + MUR ) ) * MUC ) ) ,MUC ),Max( ( Min( ( ( RCSe - MUR ) / Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.25193382287858385}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.3523659669519101}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + RRSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MUR / MLU ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6076537780109369}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5462962962962963, "obj2": 0.2760159201249157}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( MUC + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( CS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3149140852042598}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe * ( DS / MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.34814814814814815, "obj2": 0.5291300025384397}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,MUR ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( DDR / ( ( ( ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR / AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( MUR,DS ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5592592592592592, "obj2": 0.27432311637219514}, {"determining": "( DDR / Max( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( FirstVNF_CPU_Server / PN ) ) - ( MDR - AMS ) ),( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( DS - RMSe ) ) ),Min( Min( Min( ( RMSe + RMSe ) ,MUC ) ,RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3925925925925926, "obj2": 0.4284013838778595}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5806377130830267}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21418781289711988}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * Max( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ),ACS ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ),Max( ( Min( Min( ( RRSe - MLU ) ,( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUC * MLU ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.03528271049946005}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe + MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23265255755528202}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5185185185185185, "obj2": 0.32295347485362647}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) - ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.20548081993323827}, {"determining": "( DDR / ( ( BR - CRS ) - FirstVNF_CPU ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.9925925925925926, "obj2": 0.005310706217739881}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( ( MUC * MLU ) * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RMSe ) - Min( Min( Min( RCSe ,RRSe ) ,( MLU / MLU ) ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4666666666666667, "obj2": 0.35040529283766225}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361025}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe / ( ( ( RCSe - MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( Max( ( ( FirstVNF_CPU - FirstVNF_CPU ) * ( MDR * ( ACS - ( ( MDR / PN ) - MDR ) ) ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( MUR + ( DS + RMSe ) ) / ( Max( ( Min( ( RMSe + ( Min( RRSe ,DS ) + MLU ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU * MLU ) ) ,( RMSe / MLU ) ) * MUM ) ),( ( MUC / RMSe ) + RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6759259259259259, "obj2": 0.1721911784377117}, {"determining": "( ( FirstVNF_Mem_Server / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,DDR ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.3, "obj2": 0.5771855652952348}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.12407407407407407, "obj2": 0.7932246679946745}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( Min( RMSe ,( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) )", "obj1": 0.8851851851851852, "obj2": 0.05222059751541498}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( Const * FirstVNF_CPU_Server ) ) ) ) ) / AMS ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( Min( RMSe ,MUC ) * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7668999466881543}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( CS ,DS ) ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6672630231982704}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( RRSe ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ACS ) - Max( MDR,PN ) ) - ( MDR - AMS ) ) - ( BR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RMSe / RMSe ) ,RMSe ) ) + ( MUR + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.15555555555555556, "obj2": 0.7420623230803902}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.7444444444444445, "obj2": 0.1241454415595527}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( RMSe + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( DS - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8574074074074074, "obj2": 0.05500637356418617}, {"determining": "( MDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( BR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MUC ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.13442842897134236}, {"determining": "( ( FirstVNF_Mem_Server / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( DS + RMSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6796564021552762}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( DDR / ( ( Min( FirstVNF_Mem_Server ,PN ) - Max( FirstVNF_Mem_Server,Min( ( FirstVNF_RAM_Server / ACS ) ,( ( FirstVNF_Mem_Server / PN ) - CRS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( Min( RRSe ,RRSe ) + MUR ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.7203703703703703, "obj2": 0.13153377816880263}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6496044440438999}, {"determining": "Max( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ),( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( AMS * FirstVNF_CPU_Server ) ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( CS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.19444444444444445, "obj2": 0.7048177558866622}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RMSe + ( DS + MUR ) ) ,RMSe ) ) + ( RCSe * Min( CS ,DS ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.630330309795936}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( Const / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_RAM_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6309207749947825}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,Max( RMSe,MLU ) ) * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.19693942923690488}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( Min( RRSe ,RRSe ) + MUR ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.16597569445995383}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( DS ,MUR ) + ( MUR - MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,RRSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.17962962962962964, "obj2": 0.7250148448490301}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( DDR / ( ( ( ( ( Max( AMS,FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( FirstVNF_Mem / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,( MUM / RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6822484485827511}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( MUC * MLU ),Max( ( MLU / ( ( MUC * MLU ) * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( MUC ,RMSe ) - Min( Min( Min( RCSe ,RRSe ) ,( MLU / MLU ) ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4666666666666667, "obj2": 0.35040529283766225}], "42": [{"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,( MUM / RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - Max( MRS,AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( MUM / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,DDR ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe * ( DS / MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7907407407407407, "obj2": 0.10399676448496739}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / ACS ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,MUR ) + ( MUR - MUM ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4942423902139911}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe * ( DS / MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.34814814814814815, "obj2": 0.5291300025384397}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.4484895797495747}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.4703703703703704, "obj2": 0.347997563192716}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( FirstVNF_CPU + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( MUC + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( CS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3149140852042598}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.32479681670665644}, {"determining": "( ( ( ( ( ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) - RRS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / FirstVNF_RAM )", "choosing": "Max( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ),Max( ( Min( ( ( RCSe - MUR ) / Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7648148148148148, "obj2": 0.12382029051261884}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5444444444444444, "obj2": 0.2767109118498069}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( Min( RMSe ,( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) )", "obj1": 0.9537037037037037, "obj2": 0.015057039923823621}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,Max( RMSe,MLU ) ) * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.19693942923690488}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.2568941631712282}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) - ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.20548081993323827}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( AMS - FirstVNF_CPU_Server ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( ( Min( ( ( RCSe - MUR ) / Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8537037037037037, "obj2": 0.06194677649250582}, {"determining": "( ( ( ( ( ( ( AMS - RRS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( RRS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) / FirstVNF_RAM )", "choosing": "Max( Min( ( RMSe + ( Max( ( RCSe - MLU ),( DS + MUR ) ) * MUC ) ) ,MUC ),Max( ( Min( ( ( RCSe - MUR ) / Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.25193382287858385}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3990683013829882}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe / ( ( ( RCSe - MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.3523659669519101}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ACS ) - Max( MDR,PN ) ) - ( MDR - AMS ) ) - ( BR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RMSe / RMSe ) ,RMSe ) ) + ( MUR + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.15555555555555556, "obj2": 0.7420623230803902}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21418781289711988}, {"determining": "( DDR / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6901902196447965}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.7444444444444445, "obj2": 0.1241454415595527}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( Max( ( ( FirstVNF_CPU - FirstVNF_CPU ) * ( MDR * ( ACS - ( ( MDR / PN ) - MDR ) ) ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( MUR + ( DS + RMSe ) ) / ( Max( ( Min( ( RMSe + ( Min( RRSe ,DS ) + MLU ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU * MLU ) ) ,( RMSe / MLU ) ) * MUM ) ),( ( MUC / RMSe ) + RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6759259259259259, "obj2": 0.1721911784377117}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( Min( RCSe ,RRSe ) ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( MLU * MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7562570150569061}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.1814814814814815, "obj2": 0.7118583327038361}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5806377130830267}, {"determining": "( MDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( BR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MUC ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.13442842897134236}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3990683013829882}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.3523659669519101}, {"determining": "( DDR / Max( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( FirstVNF_CPU_Server / PN ) ) - ( MDR - AMS ) ),( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( DS - RMSe ) ) ),Min( Min( Min( ( RMSe + RMSe ) ,MUC ) ,RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0032616873557039}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8870370370370371, "obj2": 0.04195802087554684}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( DS - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.14621787619293825}, {"determining": "( DDR / ( ( ( Min( FirstVNF_CPU ,FirstVNF_RAM ) * ( MDR * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + Max( MUM,Min( MUC ,DS ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8504449680618021}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * Max( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ),ACS ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ),Max( ( Min( Min( ( RRSe - MLU ) ,( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUC * MLU ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.03528271049946005}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6076537780109369}, {"determining": "( MRS / ( ( MDR * ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( MUC / MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.16666666666666666, "obj2": 0.725466160471258}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( RMSe + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( DS - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.912962962962963, "obj2": 0.030391324606843666}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( ( RMSe / MLU ) + ( RCSe + MUM ) ) / ( Min( MUC ,RCSe ) - ( RCSe - RMSe ) ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23265255755528202}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6496044440438999}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( DDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( ( RRSe - RRSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.018490634219142273}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.12407407407407407, "obj2": 0.7932246679946745}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + RRSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MUR / MLU ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6076537780109369}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe / ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Min( RRSe ,DS ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361014}], "43": [{"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - MDR ) )", "choosing": "Max( ( ( ( RMSe + ( DS + ( RCSe - MLU ) ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,( MUM / RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( BR - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( ( ( ( ( FirstVNF_CPU - ( BR * ( DDR / MDR ) ) ) * ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR * FirstVNF_CPU_Server ) ) ) ) / ( Min( MRS ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - AMS ) ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR * ( ( ( FirstVNF_CPU_Server / ACS ) * FirstVNF_CPU_Server ) - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe * ( DS / MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.34814814814814815, "obj2": 0.5291300025384397}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5806377130830267}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.35185185185185186, "obj2": 0.47382265707867965}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.32479681670665644}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( RRSe ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1210087258622871}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - Min( MDR ,Max( ACS,( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( ( RMSe + RCSe ) + MUC ),( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUC ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37248683840523295}, {"determining": "( MDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( BR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MUC ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.13442842897134236}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - ( FirstVNF_Mem_Server - FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe / ( ( ( RCSe - MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5639437401650792}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) * ( MDR * ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_RAM_Server / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( Min( RCSe ,RRSe ) ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( Min( ( ( FirstVNF_CPU - ( MRS - AMS ) ) * ( MDR * ( ACS - ( AMS - Min( MDR ,FirstVNF_CPU_Server ) ) ) ) ) ,( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + ( RRSe - DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5515340320272761}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5314814814814814, "obj2": 0.2896020725065413}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( RMSe + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( DS - Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7962962962962963, "obj2": 0.09272056580952204}, {"determining": "( DDR / ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6732209000141253}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) - ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.20548081993323827}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( Max( ( ( FirstVNF_CPU - FirstVNF_CPU ) * ( MDR * ( ACS - ( ( MDR / PN ) - MDR ) ) ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( MUR + ( DS + RMSe ) ) / ( Max( ( Min( ( RMSe + ( Min( RRSe ,DS ) + MLU ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU * MLU ) ) ,( RMSe / MLU ) ) * MUM ) ),( ( MUC / RMSe ) + RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6759259259259259, "obj2": 0.1721911784377117}, {"determining": "( DDR / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6901902196447965}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.5537037037037037, "obj2": 0.27250733678030997}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.4484895797495747}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( Min( RMSe ,( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) )", "obj1": 0.9537037037037037, "obj2": 0.015057039923823621}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.2568941631712282}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR + MUM ) ),( Min( DS ,RRSe ) + ( MUR - MUM ) ) )", "obj1": 0.3925925925925926, "obj2": 0.4284013838778595}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6496044440438999}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ACS ) - Max( MDR,PN ) ) - ( MDR - AMS ) ) - ( BR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RMSe / RMSe ) ,RMSe ) ) + ( MUR + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.15555555555555556, "obj2": 0.7420623230803902}, {"determining": "( MRS / ( ( MDR * ( DDR - ( ( MDR / PN ) - MDR ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( DS - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6402747463093236}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR + PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21418781289711988}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.4703703703703704, "obj2": 0.347997563192716}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.362962962962963, "obj2": 0.4526992565509417}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8870370370370371, "obj2": 0.04195802087554684}, {"determining": "( DDR / ( ( ( ( Max( AMS,Const ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( RCSe + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.39495827381003223}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( AMS - FirstVNF_CPU_Server ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( ( Min( ( ( RCSe - MUR ) / Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8685185185185185, "obj2": 0.055330783416815126}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( RMSe + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( DS - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),( Min( ( ( RRSe - MLU ) + ( MUC * MLU ) ) ,MUM ) / Max( MUR,MUM ) ) ) )", "obj1": 0.7685185185185185, "obj2": 0.11032494934278704}, {"determining": "( MRS / ( ( MDR * ( ACS - ( ( MDR / PN ) - ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( CS + ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * MLU ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( DS - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6196792404652978}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.1814814814814815, "obj2": 0.7118583327038361}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUM - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.028945908124347993}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe * ( DS / MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7907407407407407, "obj2": 0.10399676448496739}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8473463302259625}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( Max( ( FirstVNF_CPU - FirstVNF_RAM ),( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + RRSe ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MUR / MLU ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6076537780109369}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / MDR ) ) ,( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR * AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Max( MUM,DS ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361014}, {"determining": "( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( DDR,PN ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) ) ) / ( Min( ( AMS + AMS ) ,ACS ) - Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) ) ) * ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MLU ) + ( RMSe + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / DS ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7745837358594024}, {"determining": "( DDR / ( ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ) - ( ( ( MDR / ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( MUM / ( MUR * MUM ) ),( Min( RRSe ,RMSe ) * Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6699038992502618}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) ) )", "choosing": "Max( ( CS * ( MLU - ( MUC - ( DS / DS ) ) ) ),Max( ( Min( ( RMSe + ( ( ( MLU * MLU ) + ( DS + CS ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7562570150569061}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,Max( RMSe,MLU ) ) * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.19693942923690488}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( Max( FirstVNF_CPU,FirstVNF_RAM ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6076537780109369}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( DDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),( ( RRSe - RRSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.987037037037037, "obj2": 0.0034610315362454546}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.12407407407407407, "obj2": 0.7932246679946745}], "44": [{"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) * ( MDR - ( ACS - ( ( BR - CRS ) - FirstVNF_CPU ) ) ) ) / ( ( ACS / DDR ) - ( FirstVNF_RAM_Server / ( ( AMS - AMS ) / ACS ) ) ) ) - MDR ) )", "choosing": "Max( ( ( ( RMSe + ( DS + ( RCSe - MLU ) ) ) + MUC ) / ( MUC * MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( BR - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5220476460456955}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5806377130830267}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( Min( RCSe ,RRSe ) ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23076567472739207}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUM - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.028945908124347993}, {"determining": "( DDR / ( ( ( ( Max( AMS,FirstVNF_CPU ) - FirstVNF_CPU ) + ARS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( MLU / MLU ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.38713588113812414}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( DDR / ( ( ( ( ( ( MDR - AMS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7870370370370371, "obj2": 0.09235728792323006}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.5537037037037037, "obj2": 0.27250733678030997}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - Min( MDR ,Max( ACS,( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( ( RMSe + RCSe ) + MUC ),( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUC ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37248683840523295}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.34575961727709753}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) * ( RMSe / MLU ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.32479681670665644}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.2568941631712282}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / MDR ) ) ,( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR * AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Max( MUM,DS ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361014}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR + PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21418781289711988}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.35185185185185186, "obj2": 0.47382265707867965}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.35185185185185186, "obj2": 0.47382265707867965}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe - ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5314814814814814, "obj2": 0.2896020725065413}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) - ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.20548081993323827}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.17962962962962964, "obj2": 0.7115953171109913}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - DDR ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ) ) )", "obj1": 0.8629629629629629, "obj2": 0.05296758632837689}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( Max( ( ( FirstVNF_CPU - FirstVNF_CPU ) * ( MDR * ( ACS - ( ( MDR / PN ) - MDR ) ) ) ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,AMS ) ) ) - ( MDR - PN ) ) )", "choosing": "( ( MUR + ( DS + RMSe ) ) / ( Max( ( Min( ( RMSe + ( Min( RRSe ,DS ) + MLU ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU * MLU ) ) ,( RMSe / MLU ) ) * MUM ) ),( ( MUC / RMSe ) + RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6759259259259259, "obj2": 0.1721911784377117}, {"determining": "( MDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( BR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MUC ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.13442842897134236}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_RAM_Server * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( ( MUR + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( RMSe ,MLU ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.44759416695699766}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4648148148148148, "obj2": 0.3501394286097043}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( ( MDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.5876823543644619}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8870370370370371, "obj2": 0.04195802087554684}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe + MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6788185594156677}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,Max( RMSe,MLU ) ) * MUM ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.19693942923690488}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.362962962962963, "obj2": 0.4526992565509417}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.25, "obj2": 0.6164936742802599}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / AMS ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( DS - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.6685185185185185, "obj2": 0.17877818707304707}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) - ( DDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( CS + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( RRSe ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.147106358464326}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUM - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MUM ) ) ) )", "obj1": 0.8407407407407408, "obj2": 0.06309756219742531}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) / FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( ( ( RMSe + ( DS + MUR ) ) + MUC ) / ( MUC / MUM ) ),( Min( DS ,RRSe ) + Max( MUR,MUM ) ) )", "obj1": 0.7333333333333333, "obj2": 0.13249791762583418}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - ACS ) - Max( MDR,PN ) ) - ( MDR - AMS ) ) - ( BR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RMSe / RMSe ) ,RMSe ) ) + ( MUR + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.15555555555555556, "obj2": 0.7420623230803902}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8473463302259625}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7555555555555555, "obj2": 0.11772530198141878}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU + ACS ) - Max( MDR,PN ) ) - ( MDR - AMS ) ) - ( BR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RMSe / RMSe ) ,RMSe ) ) + ( MUR + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7382974197349191}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8870370370370371, "obj2": 0.04195802087554684}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( RRSe ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1210087258622871}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,( DS - RMSe ) ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7215176948458226}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.32479681670665644}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + Min( RRSe ,RRSe ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6331225575711523}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( RRSe ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.14653015897565722}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( AMS - ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) - FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( RMSe + RMSe ) ) ,MUC ) / ( Min( DS ,RRSe ) + Max( MUR,MUM ) ) ),Max( ( Min( ( ( DS - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),( Min( ( ( RRSe - MLU ) + ( MUC * MLU ) ) ,MUM ) / Max( MUR,MUM ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.011787311654102798}], "45": [{"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( BR - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.51826436039047}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / MDR ) ) ,( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR * AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Max( MUM,DS ) ) ) )", "obj1": 0.14629629629629629, "obj2": 0.785674712788899}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( AMS - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,MUM ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5220476460456955}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.2568941631712282}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + Min( RRSe ,RRSe ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6331225575711523}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6752152302893638}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - Min( MDR ,Max( ACS,( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( ( RMSe + RCSe ) + MUC ),( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUC ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37248683840523295}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5806377130830267}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_RAM_Server * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( ( MUR + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( RMSe ,MLU ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.44759416695699766}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6089882750512373}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( ( MDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.5876823543644619}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.35185185185185186, "obj2": 0.47382265707867965}, {"determining": "( DDR / ( ( ( ( Max( AMS,FirstVNF_CPU ) - FirstVNF_CPU ) + ARS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( MLU / MLU ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.38713588113812414}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.17962962962962964, "obj2": 0.7115953171109913}, {"determining": "( DDR / ( ( ( ( ( ( MDR - AMS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7870370370370371, "obj2": 0.09235728792323006}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR + PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7479298971744328}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - ( RRSe / RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.912962962962963, "obj2": 0.030391324606843666}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) )", "obj1": 0.8055555555555556, "obj2": 0.08451419617862284}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34454950372461446}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR / PN ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.020810509138546394}, {"determining": "( MDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( BR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MUC ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.13442842897134236}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( FirstVNF_Mem_Server - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,( MLU / MLU ) ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3974373190700421}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - PN ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,( MUR * CS ) ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.3925925925925926, "obj2": 0.421911565154932}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) / ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,RCSe ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Max( RRSe,DS ) ) ) )", "obj1": 0.524074074074074, "obj2": 0.3169524084221784}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( FirstVNF_RAM / PN ) ) * AMS ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,RCSe ) / ( MUR * MUM ) ),( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ) + Min( Min( ( RRSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.987037037037037, "obj2": 0.004787462839815277}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( Min( FirstVNF_CPU ,FirstVNF_CPU ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUM - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MUM ) ) ) )", "obj1": 0.8407407407407408, "obj2": 0.06309756219742531}, {"determining": "( DDR / ( ( ( MDR - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( Min( ( MDR * ( ACS - ( AMS - ACS ) ) ) ,( MDR * ( FirstVNF_CPU_Server - ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( DS * Min( RRSe ,RRSe ) ) ),Min( Min( RRSe ,DS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7685185185185185, "obj2": 0.10275033850955126}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( Min( RCSe ,RRSe ) ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23076567472739207}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.352424281198361}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - DDR ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ) ) )", "obj1": 0.8629629629629629, "obj2": 0.05296758632837689}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * Min( MDR ,( FirstVNF_CPU_Server - ( ( BR - MDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( Min( RMSe ,DS ) + MUR ) ) ,MUC ) ,Max( RMSe,( RRSe - RRSe ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.2642806708630408}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,( DS - RMSe ) ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7215176948458226}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUM - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.028945908124347993}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / MDR ) ) ,( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR * AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Max( MUM,DS ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361014}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( Min( RMSe ,( DS + MUR ) ) ,MUC ) / RRSe ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.1636640755908112}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - DDR ) ) ) ) / ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) - ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( RRSe ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.5351851851851852, "obj2": 0.2895756337657902}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUC + MUR ) ) ,MUC ) / ( MUR - RCSe ) ),Max( ( Min( DS ,DS ) + ( Max( MUM,RCSe ) - ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.20548081993323827}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe - ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5314814814814814, "obj2": 0.2896020725065413}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8473463302259625}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RMSe / RMSe ) ,RMSe ) ) + ( MUR + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6222222222222222, "obj2": 0.21285770108789812}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.25, "obj2": 0.6164936742802599}, {"determining": "( DDR / ( Max( MDR,PN ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( Min( RCSe ,RRSe ) ,RMSe ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * Max( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU_Server ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe + MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7359411833622445}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8870370370370371, "obj2": 0.04195802087554684}], "46": [{"determining": "( ( DDR - AMS ) + ( DDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( Max( Min( Max( ( ( RRSe * MLU ) * ( MUM - MUC ) ),( Max( MUM,RCSe ) + ( DS / MUR ) ) ) ,( ( ( MUR / MUM ) / Min( DS ,MUM ) ) + ( ( MLU + CS ) - ( MUM + MLU ) ) ) ),Max( Min( Max( ( MLU * MUM ),Max( MLU,MUM ) ) ,( ( RRSe * MLU ) / ( DS * MUC ) ) ),Min( ( Min( MUM ,RMSe ) * ( RCSe + RRSe ) ) ,( ( MUR + CS ) - ( MUR / MUR ) ) ) ) ) * Min( ( Min( ( ( CS / RMSe ) * ( RMSe + RRSe ) ) ,( ( RCSe * MUR ) / ( CS - MUC ) ) ) * ( ( Min( MUC ,RCSe ) + ( MUR / RCSe ) ) / ( ( MUM - RRSe ) / ( MUR * MUM ) ) ) ) ,( ( Max( ( MUC / RCSe ),Max( MLU,MUM ) ) * ( ( MLU * MUM ) / ( MLU + MUC ) ) ) + Min( Max( ( MUC * MLU ),( MLU * CS ) ) ,( Max( CS,MUR ) * Max( MUC,MUC ) ) ) ) ) ) - ( ( ( Max( Max( ( MLU - CS ),( RCSe / MUC ) ),( Min( MUC ,CS ) + Max( MLU,RMSe ) ) ) * ( Max( Max( MUC,MUM ),Max( RCSe,MLU ) ) / ( ( CS - RMSe ) + ( RRSe + MLU ) ) ) ) - ( ( ( ( RCSe * RRSe ) / Min( RMSe ,MLU ) ) / ( ( MUM * MUC ) * ( MUR - MLU ) ) ) - ( ( ( DS - DS ) / Min( MUM ,MUR ) ) - ( ( CS + RMSe ) - ( MUC + MUC ) ) ) ) ) * Min( ( ( ( ( MUM + RCSe ) + Min( MUC ,RMSe ) ) / ( Max( MUM,RCSe ) / ( MUM + RRSe ) ) ) / ( ( ( RRSe / DS ) * Max( DS,DS ) ) - ( Max( RMSe,DS ) + ( MUR / RRSe ) ) ) ) ,( ( ( ( MUC * RCSe ) - ( MUM + RMSe ) ) - ( Min( MUR ,CS ) - ( DS / CS ) ) ) / Max( ( ( RCSe - CS ) + ( MUR - RMSe ) ),( Max( MLU,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ),( ( Min( ( ( ( Min( RRSe ,RCSe ) / ( RMSe - RRSe ) ) + ( ( RRSe - RRSe ) - ( RRSe * MUR ) ) ) / Min( ( ( RCSe + MUR ) / ( CS / MLU ) ) ,( ( MUC - MUC ) * Max( RRSe,DS ) ) ) ) ,( ( ( ( RCSe / MLU ) / Min( CS ,MUC ) ) - Max( Min( MUM ,MUR ),( MUR * RCSe ) ) ) * ( ( ( MUR - DS ) - ( MUC / MUC ) ) / ( ( MUM + MUC ) / ( RCSe / MLU ) ) ) ) ) - ( Max( ( ( ( RMSe + DS ) / ( MUR * RRSe ) ) - ( ( MUM + RMSe ) - ( MLU * DS ) ) ),Max( Min( ( CS * RCSe ) ,( RMSe * MUC ) ),( Min( RMSe ,MUR ) * ( DS * MLU ) ) ) ) - Min( Min( Max( ( MUM - RMSe ),Max( RRSe,MUM ) ) ,( ( DS + MLU ) - ( MUR - CS ) ) ) ,( Max( ( DS + MUR ),( RRSe / RRSe ) ) - Max( ( RRSe / RCSe ),Max( CS,RCSe ) ) ) ) ) ) * ( Max( ( ( Min( ( RMSe - MUC ) ,( MUR * MUR ) ) + Min( ( MLU * RRSe ) ,Min( DS ,RCSe ) ) ) / Max( ( ( DS * RRSe ) + Max( MUM,RRSe ) ),( ( RRSe - DS ) * Max( RMSe,RMSe ) ) ) ),( ( ( Min( CS ,RCSe ) / ( RRSe * RCSe ) ) / Max( ( RRSe - MLU ),( MUC * MUC ) ) ) + ( ( ( MUM - RRSe ) * Max( MUC,CS ) ) - ( Max( MUM,RMSe ) + Max( MUR,MLU ) ) ) ) ) + Max( ( ( ( Min( RRSe ,RRSe ) - ( DS + MLU ) ) + ( ( MUM * RMSe ) / ( RMSe / MLU ) ) ) * ( ( Min( MLU ,DS ) * ( CS - MLU ) ) + Min( ( MUC + CS ) ,Min( MLU ,RMSe ) ) ) ),( ( ( ( RMSe - CS ) / ( MUM / RRSe ) ) + ( ( CS - MLU ) + Min( MLU ,MUC ) ) ) - Min( ( ( MUM * RMSe ) / Min( RMSe ,MUC ) ) ,( ( MUR / DS ) + ( DS - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( BR - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( AMS - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,MUM ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5220476460456955}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5806377130830267}, {"determining": "( DDR / ( ( ( ( Max( MDR,FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUM ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.33857472650267667}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) / ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,RCSe ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Max( RRSe,DS ) ) ) )", "obj1": 0.524074074074074, "obj2": 0.3169524084221784}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,( MUC * ( RRSe - RRSe ) ) ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7686265857580882}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.352424281198361}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - PN ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,( MUR * CS ) ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.3925925925925926, "obj2": 0.421911565154932}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RCSe - MLU ) + ( DS + Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.2568941631712282}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) / ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,RCSe ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM * Max( RRSe,DS ) ) ) )", "obj1": 0.6703703703703704, "obj2": 0.17994245648231874}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( Min( RCSe ,RRSe ) ,RMSe ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.34814814814814815, "obj2": 0.4918832491665996}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6089882750512373}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - Min( MDR ,Max( ACS,( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( ( RMSe + RCSe ) + MUC ),( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUC ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37248683840523295}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( ( MDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.5876823543644619}, {"determining": "( AMS / ( ( ( ( ( AMS - FirstVNF_CPU ) / FirstVNF_CPU ) + ACS ) - ( MDR + PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,RMSe ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7469624773774828}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR / PN ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.020810509138546394}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - DDR ) ) ) ) / ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) - ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( RRSe ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.5351851851851852, "obj2": 0.2895756337657902}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RRSe ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUM - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5981481481481481, "obj2": 0.23078338369347748}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( RRSe ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.6888888888888889, "obj2": 0.14949473123105197}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,Min( RRSe ,DS ) ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.7462962962962963, "obj2": 0.12048511732528816}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) )", "obj1": 0.8055555555555556, "obj2": 0.08451419617862284}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUM - MUR ),Max( RMSe,MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22962962962962963, "obj2": 0.6769311409397857}, {"determining": "( MDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( BR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MUC ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.13442842897134236}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.202964696667397}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_RAM_Server * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( ( MUR + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( RMSe ,MLU ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.44759416695699766}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( Min( RMSe ,( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.44759416695699766}, {"determining": "( DDR / ( Max( MDR,PN ) / ( MDR - AMS ) ) )", "choosing": "Max( Min( ( RRSe / RRSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6648219022683456}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - MDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( Min( RMSe ,DS ) + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.2642806708630408}, {"determining": "( DDR / ( ( ( MDR - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( Min( ( MDR * ( ACS - ( AMS - ACS ) ) ) ,( MDR * ( FirstVNF_CPU_Server - ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( DS * Min( RRSe ,RRSe ) ) ),Min( Min( RRSe ,DS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7685185185185185, "obj2": 0.10275033850955126}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( DDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.0105803938230129}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / MDR ) ) ,( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR * AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Max( MUM,DS ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361014}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUM - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.028945908124347993}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MUM + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe + MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35185185185185186, "obj2": 0.4730191711073919}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe - ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5314814814814814, "obj2": 0.2896020725065413}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + Min( RRSe ,RRSe ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6331225575711523}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( Min( RCSe ,RRSe ) ,RMSe ) ) ) ,Min( Min( MUC ,RCSe ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23076567472739207}, {"determining": "( DDR / ( ( ( ( ( ( MDR - AMS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7314814814814815, "obj2": 0.12062736535074309}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR + PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) - Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8870370370370371, "obj2": 0.04195802087554684}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8870370370370371, "obj2": 0.04195802087554684}, {"determining": "( DDR / ( Max( MDR,PN ) - ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * Min( MDR ,( FirstVNF_CPU_Server - ( ( BR - MDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( Min( RMSe ,DS ) + MUR ) ) ,MUC ) ,Max( RMSe,( RRSe - RRSe ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.2642806708630408}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42962962962962964, "obj2": 0.3868672268701618}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR - AMS ) ) + FirstVNF_CPU_Server ) - ( MDR / MDR ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Min( Min( ( RMSe + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) ,( RMSe + ( RRSe - RRSe ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.20813447844253835}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.17962962962962964, "obj2": 0.7115953171109913}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR / PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( Min( RMSe ,MUC ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.7203703703703703, "obj2": 0.13160967094965248}], "47": [{"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( AMS - FirstVNF_CPU ) + ACS ) / PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( MUC + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( Min( RMSe ,MUC ) * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - AMS ) + ( DDR - FirstVNF_RAM_Server ) )", "choosing": "Max( ( ( Max( Min( Max( ( ( RRSe * MLU ) * ( MUM - MUC ) ),( Max( MUM,RCSe ) + ( DS / MUR ) ) ) ,( ( ( MUR / MUM ) / Min( DS ,MUM ) ) + ( ( MLU + CS ) - ( MUM + MLU ) ) ) ),Max( Min( Max( ( MLU * MUM ),Max( MLU,MUM ) ) ,( ( RRSe * MLU ) / ( DS * MUC ) ) ),Min( ( Min( MUM ,RMSe ) * ( RCSe + RRSe ) ) ,( ( MUR + CS ) - ( MUR / MUR ) ) ) ) ) * Min( ( Min( ( ( CS / RMSe ) * ( RMSe + RRSe ) ) ,( ( RCSe * MUR ) / ( CS - MUC ) ) ) * ( ( Min( MUC ,RCSe ) + ( MUR / RCSe ) ) / ( ( MUM - RRSe ) / ( MUR * MUM ) ) ) ) ,( ( Max( ( MUC / RCSe ),Max( MLU,MUM ) ) * ( ( MLU * MUM ) / ( MLU + MUC ) ) ) + Min( Max( ( MUC * MLU ),( MLU * CS ) ) ,( Max( CS,MUR ) * Max( MUC,MUC ) ) ) ) ) ) - ( ( ( Max( Max( ( MLU - CS ),( RCSe / MUC ) ),( Min( MUC ,CS ) + Max( MLU,RMSe ) ) ) * ( Max( Max( MUC,MUM ),Max( RCSe,MLU ) ) / ( ( CS - RMSe ) + ( RRSe + MLU ) ) ) ) - ( ( ( ( RCSe * RRSe ) / Min( RMSe ,MLU ) ) / ( ( MUM * MUC ) * ( MUR - MLU ) ) ) - ( ( ( DS - DS ) / Min( MUM ,MUR ) ) - ( ( CS + RMSe ) - ( MUC + MUC ) ) ) ) ) * Min( ( ( ( ( MUM + RCSe ) + Min( MUC ,RMSe ) ) / ( Max( MUM,RCSe ) / ( MUM + RRSe ) ) ) / ( ( ( RRSe / DS ) * Max( DS,DS ) ) - ( Max( RMSe,DS ) + ( MUR / RRSe ) ) ) ) ,( ( ( ( MUC * RCSe ) - ( MUM + RMSe ) ) - ( Min( MUR ,CS ) - ( DS / CS ) ) ) / Max( ( ( RCSe - CS ) + ( MUR - RMSe ) ),( Max( MLU,MUC ) * ( MUR + RRSe ) ) ) ) ) ) ),( ( Min( ( ( ( Min( RRSe ,RCSe ) / ( RMSe - RRSe ) ) + ( ( RRSe - RRSe ) - ( RRSe * MUR ) ) ) / Min( ( ( RCSe + MUR ) / ( CS / MLU ) ) ,( ( MUC - MUC ) * Max( RRSe,DS ) ) ) ) ,( ( ( ( RCSe / MLU ) / Min( CS ,MUC ) ) - Max( Min( MUM ,MUR ),( MUR * RCSe ) ) ) * ( ( ( MUR - DS ) - ( MUC / MUC ) ) / ( ( MUM + MUC ) / ( RCSe / MLU ) ) ) ) ) - ( Max( ( ( ( RMSe + DS ) / ( MUR * RRSe ) ) - ( ( MUM + RMSe ) - ( MLU * DS ) ) ),Max( Min( ( CS * RCSe ) ,( RMSe * MUC ) ),( Min( RMSe ,MUR ) * ( DS * MLU ) ) ) ) - Min( Min( Max( ( MUM - RMSe ),Max( RRSe,MUM ) ) ,( ( DS + MLU ) - ( MUR - CS ) ) ) ,( Max( ( DS + MUR ),( RRSe / RRSe ) ) - Max( ( RRSe / RCSe ),Max( CS,RCSe ) ) ) ) ) ) * ( Max( ( ( Min( ( RMSe - MUC ) ,( MUR * MUR ) ) + Min( ( MLU * RRSe ) ,Min( DS ,RCSe ) ) ) / Max( ( ( DS * RRSe ) + Max( MUM,RRSe ) ),( ( RRSe - DS ) * Max( RMSe,RMSe ) ) ) ),( ( ( Min( CS ,RCSe ) / ( RRSe * RCSe ) ) / Max( ( RRSe - MLU ),( MUC * MUC ) ) ) + ( ( ( MUM - RRSe ) * Max( MUC,CS ) ) - ( Max( MUM,RMSe ) + Max( MUR,MLU ) ) ) ) ) + Max( ( ( ( Min( RRSe ,RRSe ) - ( DS + MLU ) ) + ( ( MUM * RMSe ) / ( RMSe / MLU ) ) ) * ( ( Min( MLU ,DS ) * ( CS - MLU ) ) + Min( ( MUC + CS ) ,Min( MLU ,RMSe ) ) ) ),( ( ( ( RMSe - CS ) / ( MUM / RRSe ) ) + ( ( CS - MLU ) + Min( MLU ,MUC ) ) ) - Min( ( ( MUM * RMSe ) / Min( RMSe ,MUC ) ) ,( ( MUR / DS ) + ( DS - CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( BR - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5806377130830267}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - ( MDR + PN ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8851851851851852, "obj2": 0.04189042106750144}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR + MUM ) ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.34814814814814815, "obj2": 0.4791174305807129}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + Min( RRSe ,RRSe ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6331225575711523}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5217327886029518}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( AMS - FirstVNF_CPU ) ) - ( AMS - MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( RRSe ,RMSe ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.17962962962962964, "obj2": 0.7070975722464137}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42962962962962964, "obj2": 0.3868672268701618}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / MDR ) ) ,( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR * AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Max( MUM,DS ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361014}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( RRS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - PN ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,ARS ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,( MUR / CS ) ) ) ) ,MUC ) / Max( MUR,MUR ) ) ) )", "obj1": 0.3925925925925926, "obj2": 0.4215537910036456}, {"determining": "( DDR / ( Max( MDR,PN ) - ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU * ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( MLU - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Max( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ),MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7333239553566882}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5220476460456955}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.512962962962963, "obj2": 0.31900300149293404}, {"determining": "( DDR / ( ( ( MDR - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( Min( ( MDR * ( ACS - ( AMS - ACS ) ) ) ,( MDR * ( FirstVNF_CPU_Server - ( ( Const - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( RRSe / RMSe ) ,RMSe ),Max( ( MUM / ( DS * Min( RRSe ,RRSe ) ) ),Min( Min( RRSe ,DS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7685185185185185, "obj2": 0.10275033850955126}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) * ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + ( RRSe / DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,DS ) ) )", "obj1": 0.8611111111111112, "obj2": 0.054342130861817835}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( Min( RMSe ,MUC ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.8481481481481481, "obj2": 0.06391628923688032}, {"determining": "( DDR / ( ( ( ( Max( MDR,FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( Min( Min( ( MLU + CS ) ,( MUR + MUC ) ) ,( DS / RMSe ) ) / MLU ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUM ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.33857472650267667}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - Min( MDR ,Max( ACS,( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( ( RMSe + RCSe ) + MUC ),( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUC ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37248683840523295}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( MLU ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.17831290642331712}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR - MUM ) ),Max( ( Min( DS ,DS ) + ( Min( RMSe ,DS ) + ( MUM - RMSe ) ) ),Min( ( Min( ( RMSe + RMSe ) ,MUC ) - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.028945908124347993}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RRSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.30337532478839013}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) )", "obj1": 0.8055555555555556, "obj2": 0.08451419617862284}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * Min( MDR ,( FirstVNF_CPU_Server - ( ( BR - MDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( Min( RMSe ,DS ) + MUR ) ) ,MUC ) ,Max( RMSe,( RRSe - RRSe ) ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.25083847266428766}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ( ACS - ( Const - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) ) - ( AMS - AMS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUM - MUR ),Max( RMSe,MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( MUC ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6787218762406504}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( BR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( Min( RMSe ,( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( RMSe + MUR ) ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.362962962962963, "obj2": 0.4526992565509417}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - DDR ) ) ) ) - ( MDR - ( FirstVNF_Mem_Server - ( ( ( AMS - FirstVNF_CPU ) - ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( Min( Min( CS ,DS ) ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.25925925925925924, "obj2": 0.5975412550690675}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( ( MDR - ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * ( MDR - FirstVNF_CPU_Server ) ) ) / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.5876823543644619}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( AMS - AMS ) ) - ( MDR / PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) ) + ( Min( RMSe ,MUC ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.0065453225431893886}, {"determining": "( MDR / ( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( BR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MUC ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.13442842897134236}, {"determining": "( DDR / ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.75, "obj2": 0.11789887584256263}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) ,( MDR - FirstVNF_Mem ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe + MLU ) + ( DS + MLU ) ) * CS ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.45740740740740743, "obj2": 0.36220521666336536}, {"determining": "( DDR / ( Max( MDR,PN ) / ( MDR - AMS ) ) )", "choosing": "Max( Min( ( RRSe / RRSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6648219022683456}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,( MUC * ( RRSe - RRSe ) ) ) ) + ( MUM * Min( ( MUC * ( RRSe - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7686265857580882}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.202964696667397}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) + ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5944444444444444, "obj2": 0.23951364847015275}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,MUR ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( ( DS + MUR ) ,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_RAM_Server * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( ( MUR + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( RMSe ,MLU ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.44759416695699766}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * Max( ( ( AMS - FirstVNF_CPU ) + MRS ),( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) / FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU + MLU ),Max( ( Min( ( ( DS - MLU ) + ( Max( ( MUM - MUR ),( RMSe / MLU ) ) - MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16280554102746467}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - MDR ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( ( ( RCSe - CS ) + ( DS + Min( RRSe ,Min( RRSe ,DS ) ) ) ) + MUR ) ,Min( ( ( MUC - MUC ) / ( RCSe * Min( Min( RCSe ,RRSe ) ,RMSe ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6759259259259259, "obj2": 0.17496880970715828}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10292675022178659}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS * RMSe ) ) ,MUC ) / ( MUR * CS ) ),Min( Min( ( RMSe + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) )", "obj1": 0.8055555555555556, "obj2": 0.08451419617862284}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) - Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.3481258857252458}, {"determining": "( AMS / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR + PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,DS ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7469624773774828}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe - ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.2596422890384892}], "48": [{"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( ( AMS - ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) + ACS ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( CS - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( AMS - FirstVNF_CPU ) + ACS ) / PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( MUC + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( Min( RMSe ,MUC ) * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( BR - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - ( ( MDR / PN ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( MUC * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MUC ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.028347710176160112}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR + MUM ) ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.34814814814814815, "obj2": 0.4791174305807129}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( AMS - AMS ) ) - ( MDR / PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) ) + ( Min( RMSe ,MUC ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.0065453225431893886}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5527578911391281}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / MDR ) ) ,( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR * AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Max( MUM,DS ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361014}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_CPU - ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + Min( RRSe ,RRSe ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6331225575711523}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + AMS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) / ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MLU ) ) * MLU ),Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5137856873768533}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( AMS + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( ( ( RMSe + RCSe ) + MUC ) + ( MUC * MUM ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.23403604736600073}, {"determining": "( ( MDR / PN ) / ( ( ( ( FirstVNF_CPU - ( AMS - AMS ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( ( ( Min( ( FirstVNF_RAM_Server / ACS ) ,( MRS / FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.672866923444965}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe - ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.2596422890384892}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,MUR ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( ( DS + MUR ) ,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - FirstVNF_CPU_Server ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),RMSe ) )", "obj1": 0.7277777777777777, "obj2": 0.12379916035098718}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( Min( RMSe ,( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) ) ,MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( RMSe ,MLU ) ) ) )", "obj1": 0.5407407407407407, "obj2": 0.2895724197141037}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.31296296296296294, "obj2": 0.5226766511543617}, {"determining": "( DDR / ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - ARS ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR / PN ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / Min( MUR ,MUM ) ),Max( ( Min( ( RMSe + ( DS * RMSe ) ) ,MUC ) / ( MUR * CS ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11075970813757022}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( ( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) - Max( MUR,MUM ) ) + DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( Min( RMSe ,MUC ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.037403242931584285}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - Min( MDR ,Max( ACS,( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( ( RMSe + RCSe ) + MUC ),( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUC ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37248683840523295}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6033082934384699}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( MLU ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.17831290642331712}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) )", "obj1": 0.4777777777777778, "obj2": 0.3589297815864092}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) ,( MDR - FirstVNF_Mem ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe + MLU ) + ( DS + MLU ) ) * CS ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.45740740740740743, "obj2": 0.36220521666336536}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2090499509556141}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * Max( ( ( AMS - FirstVNF_CPU ) + MRS ),( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) / FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU + MLU ),Max( ( Min( ( ( DS - MLU ) + ( Max( ( MUM - MUR ),( RMSe / MLU ) ) - MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16280554102746467}, {"determining": "( DDR / ( Max( MDR,PN ) - ( ( ( AMS - FirstVNF_CPU ) - ( MDR / PN ) ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUM,RCSe ) / MUM )", "obj1": 0.13333333333333333, "obj2": 0.7706090707309838}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6, "obj2": 0.23417255388585972}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_RAM_Server * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( ( MUR + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( RMSe ,MLU ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.44759416695699766}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU * ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( MLU - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Max( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ),MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7333239553566882}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( ARS / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) - ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( MUR ,DS ) / ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7248019289948477}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) * ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + ( RRSe / DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,DS ) ) )", "obj1": 0.8611111111111112, "obj2": 0.054342130861817835}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - DDR ) ) ) ) - ( MDR - ( FirstVNF_Mem_Server - ( ( ( AMS - FirstVNF_CPU ) - ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( Min( Min( CS ,DS ) ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.25925925925925924, "obj2": 0.5975412550690675}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - MDR ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42962962962962964, "obj2": 0.3868672268701618}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( Max( MDR,PN ) / ( MDR - AMS ) ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,Min( ( RRSe / RRSe ) ,RMSe ) ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09391739573920846}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * Max( ACS,AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( MLU - RMSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( MUM + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),( Min( RRSe ,RRSe ) / ( MLU / MLU ) ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6618103428754627}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - ( MDR + PN ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8851851851851852, "obj2": 0.04189042106750144}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * Min( MDR ,( FirstVNF_CPU_Server - ( ( BR - MDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( Min( RMSe ,DS ) + MUR ) ) ,MUC ) ,Max( RMSe,( RRSe - RRSe ) ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.25083847266428766}, {"determining": "( DDR / ( Max( MDR,PN ) - ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),MUM )", "obj1": 0.49444444444444446, "obj2": 0.3378035281033023}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - Min( MRS ,FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.30337532478839013}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_RAM_Server * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( ( MUR + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( RMSe ,MLU ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.28997850474706094}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5111111111111111, "obj2": 0.3209289146613886}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - MDR ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,( DS + MLU ) ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.754554842954786}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_RAM * ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( Min( RRSe ,MUR ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8314814814814815, "obj2": 0.06701406015573289}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.362962962962963, "obj2": 0.4526992565509417}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) + ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42962962962962964, "obj2": 0.3868672268701618}], "49": [{"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR - ( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( ( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) * Min( ( MUC / RMSe ) ,RMSe ) ) + ( MUM / Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( ( AMS - ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) + ACS ) ) + ACS ) - ( MDR * PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( CS - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Max( RRSe,RRSe ) ,RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( ( AMS - ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) + ACS ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( CS - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR / PN ) / ( ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) * ( MDR * ( ACS - ( AMS - ( MDR * FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( BR - FirstVNF_RAM ) * ( MDR * Max( ( MDR - AMS ),( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_CPU,FirstVNF_RAM ) ) ) ) ) - AMS ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8504846935425046}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / MDR ) ) ,( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR * AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Max( MUM,DS ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361014}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5527578911391281}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.33699693367627986}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / Max( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,MUM ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.42777777777777776, "obj2": 0.38635792588218676}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( PN - AMS ) ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR + MUM ) ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( MUM + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.2759259259259259, "obj2": 0.5790485161635206}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.31296296296296294, "obj2": 0.5226766511543617}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU * ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( MLU - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.37407407407407406, "obj2": 0.44203746979754027}, {"determining": "( DDR / ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - ARS ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR / PN ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / Min( MUR ,MUM ) ),Max( ( Min( ( RMSe + ( DS * RMSe ) ) ,MUC ) / ( MUR * CS ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11075970813757022}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) / FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( MUC + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.667295600659934}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5111111111111111, "obj2": 0.3209289146613886}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / Min( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ,( MDR - AMS ) ) )", "choosing": "Max( ( MUM * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RCSe - MUR ) ,( DS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( ( RMSe + ( DS + MUR ) ) + MUC ) ,( MLU / MLU ) ) ,( RMSe / MUC ) ) ) )", "obj1": 0.937037037037037, "obj2": 0.022178072234721503}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( DDR / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - MDR ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,( DS + MLU ) ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.754554842954786}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * DDR ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,MUM ) / Max( MLU,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6203703703703703, "obj2": 0.21629690677218383}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,MUR ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( ( DS + MUR ) ,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - FirstVNF_CPU_Server ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),RMSe ) )", "obj1": 0.7277777777777777, "obj2": 0.12379916035098718}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR + MUM ) ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.4812284288482987}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - Min( MRS ,FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.30337532478839013}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( Max( MDR,PN ) / ( MDR - AMS ) ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( Min( RRSe ,MUR ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7888888888888889, "obj2": 0.10410849925536247}, {"determining": "( AMS / ( ( ( ( ( ( MDR - AMS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( Min( RMSe ,( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) ) ,MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9740740740740741, "obj2": 0.009397741673636828}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5592592592592592, "obj2": 0.2661505937615347}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - Min( MDR ,Max( ACS,( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( ( RMSe + RCSe ) + MUC ),( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUC ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37248683840523295}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * Min( MDR ,( FirstVNF_CPU_Server - ( ( BR - MDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( Min( RMSe ,DS ) + MUR ) ) ,MUC ) ,Max( RMSe,( RRSe - RRSe ) ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.25083847266428766}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU * ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( MLU - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Max( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ),MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7333239553566882}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - ( MDR + PN ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * CS ) ),Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8851851851851852, "obj2": 0.04189042106750144}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - DDR ) ) ) ) - ( MDR - ( FirstVNF_Mem_Server - ( ( ( AMS - FirstVNF_CPU ) - ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( Min( Min( CS ,DS ) ,( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.25925925925925924, "obj2": 0.5975412550690675}, {"determining": "( DDR / ( Max( ( ( FirstVNF_CPU - FirstVNF_RAM_Server ) * MDR ),PN ) - ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,MUM ) ) ) )", "obj1": 0.13333333333333333, "obj2": 0.7704455576447221}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Max( ( Min( Min( RMSe ,( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),( ( RCSe - MLU ) + ( DS + MUR ) ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( RMSe ,MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.20621936294250773}, {"determining": "( ARS / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) - ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( MUR ,DS ) / ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7248019289948477}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + AMS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) / ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MLU ) ) * MLU ),Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5137856873768533}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) * ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + ( RRSe / DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,DS ) ) )", "obj1": 0.8611111111111112, "obj2": 0.054342130861817835}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( MLU ,( MUC - ( DS / RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.17877933356371134}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - MRS ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MUC ) ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.623165681176401}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) ,( MDR - FirstVNF_Mem ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe + MLU ) + ( DS + MLU ) ) * CS ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.45740740740740743, "obj2": 0.36220521666336536}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( FirstVNF_CPU_Server - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( ( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) - Max( MUR,MUM ) ) + DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( Min( RMSe ,MUC ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.037403242931584285}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( Max( MDR,PN ) / ( MDR - AMS ) ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,Min( ( RRSe / RRSe ) ,RMSe ) ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09391739573920846}, {"determining": "( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6033082934384699}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( FirstVNF_CPU - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( ( RRSe - ( MUR * CS ) ) + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6037037037037037, "obj2": 0.23295228357574663}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - CRS ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.2899785047470609}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * Max( ( ( AMS - FirstVNF_CPU ) + MRS ),( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) / FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU + MLU ),Max( ( Min( ( ( DS - MLU ) + ( Max( ( MUM - MUR ),( RMSe / MLU ) ) - MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16280554102746467}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.362962962962963, "obj2": 0.4526992565509417}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR * AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( ( ( RRSe - MLU ) * ( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5981481481481481, "obj2": 0.23850343235424437}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * Max( ACS,AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( MLU - RMSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( MUM + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),( Min( RRSe ,RRSe ) / ( MLU / MLU ) ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6618103428754627}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.05866714847380768}], "50": [{"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( ( AMS - ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) + ACS ) ) + ACS ) - ( MDR * PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( ( AMS - ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) + ACS ) ) + ACS ) - ( MDR * PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( CS - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Max( RRSe,RRSe ) ,RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8498877725048207}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / MDR ) ) ,( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR * AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Max( MUM,DS ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361014}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5527578911391281}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.4811842934891197}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU * ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( MLU - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.37407407407407406, "obj2": 0.44203746979754027}, {"determining": "( ARS / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) - ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( MUR ,DS ) / ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7248019289948477}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( PN - AMS ) ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR + MUM ) ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( MUM + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.2759259259259259, "obj2": 0.5790485161635206}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + AMS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) / ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MLU ) ) * MLU ),Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5137856873768533}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - MRS ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MUC ) ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.623165681176401}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * Max( ( ( AMS - FirstVNF_CPU ) + MRS ),( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) / FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU + MLU ),Max( ( Min( ( ( DS - MLU ) + ( Max( ( MUM - MUR ),( RMSe / MLU ) ) - MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16280554102746467}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( MLU ,( MUC - ( DS / RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.17877933356371134}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - Min( MDR ,Max( ACS,( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( ( RMSe + RCSe ) + MUC ),( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUC ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37248683840523295}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * Max( ACS,AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU - ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( MLU - RMSe ) ) ,RMSe ) ) ) ) ),Max( ( Min( ( RMSe + ( ( MUM + ( DS + MUR ) ) * MUC ) ) ,MUC ) / ( MUR * RRSe ) ),( Min( RRSe ,RRSe ) / ( MLU / MLU ) ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6618103428754627}, {"determining": "( ( ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3548359368355832}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,MUR ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( ( DS + MUR ) ,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) - Max( MUR,MUM ) ),DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.8092592592592592, "obj2": 0.08710736485578165}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * DDR ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,MUM ) / Max( MLU,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6203703703703703, "obj2": 0.21629690677218383}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( MDR * ( ACS - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( ( RRSe - ( MUR * CS ) ) + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.026260710212717}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( DS + MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3611111111111111, "obj2": 0.4625875980270404}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR + AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - RMSe ) + ( DS + ( RRSe + DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.667295600659934}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) ,( MDR - FirstVNF_Mem ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( MLU + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - CS ) + ( ( ( RCSe + MLU ) + ( DS + MLU ) ) * CS ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.45740740740740743, "obj2": 0.36220521666336536}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.5444444444444444, "obj2": 0.2810364643506503}, {"determining": "( DDR / ( ( ( ( ( ( AMS - BR ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUC ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6444444444444445, "obj2": 0.20448956029450627}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - ( MDR - ( ACS - ( AMS - DDR ) ) ) ) - ( MDR - ( AMS - FirstVNF_CPU ) ) ) / FirstVNF_RAM )", "choosing": "Max( ( ( ( RRSe - MLU ) + MUC ) + ( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUM ) ) )", "obj1": 0.9592592592592593, "obj2": 0.0194303697558013}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.33369700477374037}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU * ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( MLU - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Max( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ),MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7333239553566882}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( Max( MDR,PN ) / ( MDR - AMS ) ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,Min( ( RRSe / RRSe ) ,RMSe ) ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09391739573920846}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( MLU ,( MUC - ( DS / RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7111111111111111, "obj2": 0.14470897510538944}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( ( RMSe + RCSe ) + MUC ) + ( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUM ) ) )", "obj1": 0.7685185185185185, "obj2": 0.11042985365835856}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.3368347458245915}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MUR ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.31296296296296294, "obj2": 0.5226766511543617}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( MDR / PN ) ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,( DS / RRSe ) ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.752253663825902}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.30337532478839013}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.19806272353482163}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - FirstVNF_CPU_Server ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU + MLU ),Max( ( Min( ( ( DS - MLU ) + ( Max( ( MUM - MUR ),( RMSe / MLU ) ) - MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.10190329776995762}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6648721614015837}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5111111111111111, "obj2": 0.3209289146613886}, {"determining": "( DDR / ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR / PN ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.7203703703703703, "obj2": 0.13176445966814246}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / Max( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,MUM ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.42777777777777776, "obj2": 0.38635792588218676}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.42777777777777776, "obj2": 0.38635792588218676}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.24566346172987538}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.05866714847380768}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.362962962962963, "obj2": 0.4526992565509417}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.31296296296296294, "obj2": 0.5226766511543617}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) ) ) )", "obj1": 0.9814814814814815, "obj2": 0.004176437486369255}], "51": [{"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( ( AMS - ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) + ACS ) ) + ACS ) - ( MDR * PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( CS * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( ( AMS - ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) + ACS ) ) + ACS ) - ( MDR * PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8498877725048207}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - MRS ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MUC ) ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.623165681176401}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) - Max( MUR,MUM ) ),DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( ( MUM / Max( MUR,MUM ) ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.8759259259259259, "obj2": 0.05393806084026322}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.5444444444444444, "obj2": 0.2810364643506503}, {"determining": "( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7687404726778297}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( AMS - DDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( ( MUC * MUM ) * MUM ) ),Max( Max( Min( ( ( DS + MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5703703703703704, "obj2": 0.26832053102368}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6444689921017012}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) * ( ACS - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( ( RRSe - ( MUR * CS ) ) + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.03078124048856161}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5527578911391281}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.05866714847380768}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR + AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - RMSe ) + ( DS + ( RRSe + DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.667295600659934}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * DDR ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,MUM ) / Max( MLU,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6203703703703703, "obj2": 0.21629690677218383}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.24566346172987538}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / Max( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ),Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.3925925925925926, "obj2": 0.4327837222038021}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( PN - AMS ) ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR + MUM ) ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( MUM + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.2759259259259259, "obj2": 0.5790485161635206}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.2326379271826723}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) - ( PN - AMS ) ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR + MUM ) ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( MUM + ( DS + Min( RRSe ,RCSe ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.7164578428365601}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( RRS,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( MLU ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3180176111616409}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( PN - AMS ) ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR + MUM ) ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( MUM + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.2759259259259259, "obj2": 0.5790485161635206}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( BR - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( Min( ( RRSe - MLU ) ,( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5124104503522718}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - ( AMS - PN ) ) + FirstVNF_Mem_Server ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,( RCSe - RMSe ) ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / CS ) ) ) )", "obj1": 0.3111111111111111, "obj2": 0.5368708311662818}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - Min( MDR ,Max( ACS,( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( ( RMSe + RCSe ) + MUC ),( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUC ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37248683840523295}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,MUR ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( ( DS + MUR ) ,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - FirstVNF_RAM_Server ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( ( MUR * MUM ) ,( MLU / MLU ) ) ) )", "obj1": 0.37407407407407406, "obj2": 0.4400306514888952}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / Min( ( MUM + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) ) ) ) )", "obj1": 0.45555555555555555, "obj2": 0.3602575108306964}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.33369700477374037}, {"determining": "( ARS / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) - ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( MUR ,DS ) / ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7248019289948477}, {"determining": "( DDR / ( Min( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + MRS ) - ( MDR / MDR ) ) ,( ( AMS - FirstVNF_CPU ) - AMS ) ) - ( MDR * AMS ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUM ,Min( ( RRSe + ( Min( ( RRSe - MUR ) ,( RMSe / MLU ) ) - RMSe ) ) ,RMSe ) ) + ( RCSe * Max( MUM,DS ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.40868638954361014}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6370370370370371, "obj2": 0.2012090498006653}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( ( ( MUR * MUM ) - CS ) + ( RCSe - RMSe ) ) ),Min( MLU ,( MUC - ( DS / RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015910630657633106}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.19806272353482163}, {"determining": "( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) / ( ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) - Min( MDR ,AMS ) ) )", "choosing": "Max( ( ( RRSe - RRSe ) * ( MLU * ( Min( MUM ,Min( MUM ,RMSe ) ) + ( MUM * Min( ( MUC * ( MLU - RRSe ) ) ,RMSe ) ) ) ) ),Max( ( Max( ( RMSe + ( ( ( RCSe - MLU ) + ( DS + MUR ) ) * MUC ) ),MUC ) / ( MUR * RRSe ) ),Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7333239553566882}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.30337532478839013}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( MDR / PN ) ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,( DS / RRSe ) ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.752253663825902}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.4811842934891197}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) ) ) )", "obj1": 0.9814814814814815, "obj2": 0.004161766059898473}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) ) ) * MUR ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6759259259259259, "obj2": 0.1623377014148104}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( Min( ( RMSe + ( ( MUM + ( DS + MUR ) ) * MUC ) ) ,MUC ),Min( Min( ( RMSe + ( DS - MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.4055657702835996}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( ( DS + MUR ) + MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.111447202674276}, {"determining": "( DDR / ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR / PN ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),RMSe ) )", "obj1": 0.7333333333333333, "obj2": 0.11809547675057891}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + AMS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) / ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MLU ) ) * MLU ),Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5137856873768533}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3537037037037037, "obj2": 0.47786640690403}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( MLU ,( MUC - ( DS / RRSe ) ) ) ) ) * MLU ),Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( MLU ,( MUC - ( DS / RRSe ) ) ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.16428627949548244}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( Max( MDR,PN ) / ( MDR - AMS ) ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,Min( ( RRSe / RRSe ) ,RMSe ) ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09391739573920846}, {"determining": "( DDR / ( ( ( ( AMS - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( MLU ,( MUC - ( DS / RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.17877933356371134}], "52": [{"determining": "( ( FirstVNF_CPU_Server * ( ( Const + ( CRS - FirstVNF_CPU ) ) - ( FirstVNF_Mem + ( FirstVNF_Mem + PN ) ) ) ) * ( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( ( Max( Min( ( Min( ( RMSe / MUM ) ,( RCSe + RCSe ) ) * Min( ( RCSe / DS ) ,( RMSe - MUR ) ) ) ,( ( ( DS + MUR ) - Max( RMSe,MUM ) ) + Min( ( MUM * CS ) ,( RMSe - RRSe ) ) ) ),( ( ( ( RCSe - MUM ) - ( MUM + MUR ) ) - ( Max( CS,RRSe ) * ( CS + MUR ) ) ) - ( Max( Min( RRSe ,MLU ),( CS * MLU ) ) - ( Min( RRSe ,RRSe ) - ( MLU + MUR ) ) ) ) ) / Min( ( ( ( Max( CS,CS ) + ( MUM - MUR ) ) / ( Max( MUM,RRSe ) - Max( CS,MUM ) ) ) + ( ( ( RRSe + MLU ) - ( RRSe / MUM ) ) / Min( ( MUC - CS ) ,( RRSe / CS ) ) ) ) ,( ( ( Min( MUR ,MUC ) - ( RMSe - RCSe ) ) / Max( ( DS * RRSe ),Min( RCSe ,RCSe ) ) ) - ( ( ( RCSe - MUC ) * ( DS * CS ) ) / Min( ( RCSe / RMSe ) ,Max( DS,MUR ) ) ) ) ) ) * ( ( ( ( Min( ( MUR / MUC ) ,( RMSe + MLU ) ) / ( Max( RRSe,MUM ) - ( MUR - RRSe ) ) ) * ( ( Max( MUC,DS ) - ( MUM * MUC ) ) / Min( ( CS / MUC ) ,Min( MUC ,RRSe ) ) ) ) - ( ( Max( ( MUC * RCSe ),( DS - RRSe ) ) / ( Max( MUC,RRSe ) + Min( CS ,MUC ) ) ) + ( ( ( MUM + RMSe ) * Max( MUC,DS ) ) / ( Max( MUM,RRSe ) + ( MUC / RCSe ) ) ) ) ) / ( Max( ( ( Min( MUR ,RMSe ) - ( RRSe - CS ) ) / Max( ( MLU / RRSe ),Max( RMSe,MUC ) ) ),( ( ( MUM / MUM ) * ( DS + RRSe ) ) / Min( Max( RCSe,MUR ) ,Min( RRSe ,MLU ) ) ) ) * ( ( ( Min( CS ,CS ) + Min( RMSe ,MUC ) ) + ( ( MUR - MLU ) + ( MUM + DS ) ) ) - ( ( Min( CS ,MUM ) * Max( RRSe,RMSe ) ) * ( ( CS - CS ) / ( MUM + CS ) ) ) ) ) ) ),Min( Max( Min( Max( ( Max( Max( DS,MUC ),( RRSe - RCSe ) ) * ( ( MUM - RCSe ) - ( RMSe / MLU ) ) ),( ( Max( MLU,RMSe ) / Min( RMSe ,RMSe ) ) / ( Max( RRSe,MUC ) + ( RCSe + MUC ) ) ) ) ,Min( Min( ( Max( DS,RRSe ) - ( CS + RMSe ) ) ,( ( RCSe * DS ) + ( MLU * RRSe ) ) ) ,( Min( Min( RCSe ,RMSe ) ,Max( CS,MUR ) ) + ( ( RMSe * MUR ) - Min( MUM ,MUR ) ) ) ) ),Max( ( ( Max( ( RRSe / RCSe ),( MUC * RRSe ) ) + ( ( MLU * RRSe ) * ( MUM * MUC ) ) ) - Max( Min( ( DS / RMSe ) ,Min( CS ,MUC ) ),( ( RMSe * MUR ) / ( CS - RRSe ) ) ) ),( Max( Min( Max( RMSe,RRSe ) ,( RRSe - MUR ) ),Max( ( RRSe * MUC ),( RRSe + MUR ) ) ) + ( Min( Max( MUR,MUM ) ,Max( RMSe,DS ) ) * ( Max( MUC,MUR ) - ( RMSe / MUR ) ) ) ) ) ) ,( Max( ( ( Min( ( MUR * MUR ) ,Max( MUR,RMSe ) ) - ( ( MUR + MUC ) - Max( MUC,RCSe ) ) ) / Max( ( ( CS * MUR ) * ( RMSe / MUC ) ),( ( RRSe * MLU ) + ( RCSe / CS ) ) ) ),Min( ( ( ( CS * RCSe ) + ( DS * RMSe ) ) / ( Min( DS ,RRSe ) / ( MUR - CS ) ) ) ,( Max( ( DS * MUC ),Max( MUR,MUM ) ) / ( Max( RRSe,MLU ) * Max( MUC,MUR ) ) ) ) ) / ( ( ( ( ( MUC * MLU ) + Min( MLU ,RMSe ) ) - ( ( DS - CS ) + Max( RMSe,RCSe ) ) ) + ( Min( ( MUM + MUR ) ,Min( RRSe ,RMSe ) ) - ( ( RRSe / MUC ) / ( MUM + MLU ) ) ) ) * ( ( ( ( MUR * MLU ) + ( MUM / CS ) ) / ( ( RCSe + MUM ) - ( CS - RRSe ) ) ) * Max( ( Max( RCSe,RRSe ) * Max( MUC,CS ) ),( ( MUR * MUC ) * ( RMSe / CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( ( AMS - ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) + ACS ) ) + ACS ) - ( MDR * PN ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) / ( CS * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU / FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MLU ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8491603024751365}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,MUR ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( ( DS + MUR ) ,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6444689921017012}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( MDR * ( ( ( AMS - AMS ) - FirstVNF_CPU ) - FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( Max( ( Min( ( ( DS - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) - Max( MUR,MUM ) ),DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( ( MUM / Max( MUR,MUM ) ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.04501248438437571}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( ( ( ( Min( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ,ACS ) - ( MDR / PN ) ) - Min( MDR ,Max( ACS,( AMS - DDR ) ) ) ) - ( MDR - Max( FirstVNF_Mem_Server,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) ) ) / FirstVNF_RAM )", "choosing": "Max( Max( ( ( RMSe + RCSe ) + MUC ),( MUC * MUM ) ),( Min( DS ,RRSe ) + ( MUR + MUC ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37248683840523295}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - PN ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Max( ( MUM / RMSe ),RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.5953313960018494}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3968956307873777}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( Min( ( RMSe + ( ( MUM + ( DS + MUR ) ) * MUC ) ) ,MUC ),Min( Min( ( RMSe + ( DS - MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.7296296296296296, "obj2": 0.12154480787465319}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5527578911391281}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( MDR / PN ) ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.13333333333333333, "obj2": 0.7684908369572303}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - FirstVNF_RAM_Server ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.37037037037037035, "obj2": 0.45021210054604954}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + AMS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) / ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MLU ) ) * MLU ),Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5137856873768533}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - MRS ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MUC ) ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.623165681176401}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) * ( ACS - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( ( RRSe - ( MUR * CS ) ) + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.03078124048856161}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( ( MUR * MUM ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.33851565622597535}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6370370370370371, "obj2": 0.2012090498006653}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( BR - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( Min( ( RRSe - MLU ) ,( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5124104503522718}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ) ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / Min( ( MUM + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.35728705025152163}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) - ( PN - AMS ) ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( Min( DS ,RRSe ) + ( MUR + MUM ) ) ,RMSe ),Max( ( MUM / ( MUR * RMSe ) ),( Min( ( MUM + ( DS + Min( RRSe ,RCSe ) ) ) ,MUC ) / Max( MUR,MUM ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.7164578428365601}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.623165681176401}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - DDR ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( ( MUR * MUM ) ,( RMSe / Min( ( RRSe / RMSe ) ,RMSe ) ) ) ) )", "obj1": 0.5777777777777777, "obj2": 0.2502012856504636}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21418781289711988}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( DDR - ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( MLU ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( RCSe + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( ( MUR * MUM ) ,( RMSe / MLU ) ) ) ) ) )", "obj1": 0.6444444444444445, "obj2": 0.18840614865668434}, {"determining": "( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7590268622815686}, {"determining": "( ARS / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) - ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( MUR ,DS ) / ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7248019289948477}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( AMS - FirstVNF_CPU ) ) ) + ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) ) - ( BR - FirstVNF_CPU ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RMSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,Min( ( ( RRSe - MLU ) + ( CS + MUR ) ) ,MUC ) ) ) )", "obj1": 0.7722222222222223, "obj2": 0.10882121846969088}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR + AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - RMSe ) + ( DS + ( RRSe + DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.667295600659934}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ( AMS - FirstVNF_CPU ) ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5402059907247458}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.33369700477374037}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / Min( ( MUM + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.27829289926752926}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( DDR - DDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ) ) / ( ( MUC * MUM ) * MUM ) ),Max( Max( Min( ( ( DS + MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.2974969347990293}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( ( ( MUR * MUM ) - CS ) + ( RCSe - RMSe ) ) ),Min( MLU ,( MUC - ( DS / RRSe ) ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015910630657633106}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.4811842934891197}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - FirstVNF_RAM_Server ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( MLU ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4, "obj2": 0.4231451893010232}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / Min( ( MUM + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) ) ) ) )", "obj1": 0.45555555555555555, "obj2": 0.3602575108306964}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( MLU ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5055555555555555, "obj2": 0.32451226978897346}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( MDR / PN ) ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,( DS / RRSe ) ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.752253663825902}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3537037037037037, "obj2": 0.47786640690403}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + BR ) - ( MDR / PN ) ) - ( MDR - ( Max( MDR,PN ) / ( MDR / AMS ) ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / MUR ) ,Min( ( RRSe / RRSe ) ,RMSe ) ),Max( ( MUM / ( MUC * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09391739573920846}, {"determining": "( DDR / ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR / PN ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ) ,MUC ) / Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( ( MUR * MUM ) ,( RMSe / MLU ) ) ) ) ),RMSe ) )", "obj1": 0.7888888888888889, "obj2": 0.09829092409628946}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.24566346172987538}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.667295600659934}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - ( AMS - PN ) ) + FirstVNF_Mem_Server ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,( RCSe - RMSe ) ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / CS ) ) ) )", "obj1": 0.3111111111111111, "obj2": 0.5368708311662818}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.30337532478839013}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( Max( ( Min( ( ( ( MUR * MUM ) - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) - Max( MUR,MUM ) ),DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( ( MUM / Max( MUR,MUM ) ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.8759259259259259, "obj2": 0.05393806084026322}], "53": [{"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( ( AMS - ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) + ACS ) ) + ACS ) - ( MDR * PN ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server * ( ( Const + ( CRS - FirstVNF_CPU ) ) - ( FirstVNF_Mem + ( FirstVNF_Mem + PN ) ) ) ) * ( FirstVNF_CPU_Server * CRS ) )", "choosing": "Max( ( ( Max( Min( ( Min( ( RMSe / MUM ) ,( RCSe + RCSe ) ) * Min( ( RCSe / DS ) ,( RMSe - MUR ) ) ) ,( ( ( DS + MUR ) - Max( RMSe,MUM ) ) + Min( ( MUM * CS ) ,( RMSe - RRSe ) ) ) ),( ( ( ( RCSe - MUM ) - ( MUM + MUR ) ) - ( Max( CS,RRSe ) * ( CS + MUR ) ) ) - ( Max( Min( RRSe ,MLU ),( CS * MLU ) ) - ( Min( RRSe ,RRSe ) - ( MLU + MUR ) ) ) ) ) / Min( ( ( ( Max( CS,CS ) + ( MUM - MUR ) ) / ( Max( MUM,RRSe ) - Max( CS,MUM ) ) ) + ( ( ( RRSe + MLU ) - ( RRSe / MUM ) ) / Min( ( MUC - CS ) ,( RRSe / CS ) ) ) ) ,( ( ( Min( MUR ,MUC ) - ( RMSe - RCSe ) ) / Max( ( DS * RRSe ),Min( RCSe ,RCSe ) ) ) - ( ( ( RCSe - MUC ) * ( DS * CS ) ) / Min( ( RCSe / RMSe ) ,Max( DS,MUR ) ) ) ) ) ) * ( ( ( ( Min( ( MUR / MUC ) ,( RMSe + MLU ) ) / ( Max( RRSe,MUM ) - ( MUR - RRSe ) ) ) * ( ( Max( MUC,DS ) - ( MUM * MUC ) ) / Min( ( CS / MUC ) ,Min( MUC ,RRSe ) ) ) ) - ( ( Max( ( MUC * RCSe ),( DS - RRSe ) ) / ( Max( MUC,RRSe ) + Min( CS ,MUC ) ) ) + ( ( ( MUM + RMSe ) * Max( MUC,DS ) ) / ( Max( MUM,RRSe ) + ( MUC / RCSe ) ) ) ) ) / ( Max( ( ( Min( MUR ,RMSe ) - ( RRSe - CS ) ) / Max( ( MLU / RRSe ),Max( RMSe,MUC ) ) ),( ( ( MUM / MUM ) * ( DS + RRSe ) ) / Min( Max( RCSe,MUR ) ,Min( RRSe ,MLU ) ) ) ) * ( ( ( Min( CS ,CS ) + Min( RMSe ,MUC ) ) + ( ( MUR - MLU ) + ( MUM + DS ) ) ) - ( ( Min( CS ,MUM ) * Max( RRSe,RMSe ) ) * ( ( CS - CS ) / ( MUM + CS ) ) ) ) ) ) ),Min( Max( Min( Max( ( Max( Max( DS,MUC ),( RRSe - RCSe ) ) * ( ( MUM - RCSe ) - ( RMSe / MLU ) ) ),( ( Max( MLU,RMSe ) / Min( RMSe ,RMSe ) ) / ( Max( RRSe,MUC ) + ( RCSe + MUC ) ) ) ) ,Min( Min( ( Max( DS,RRSe ) - ( CS + RMSe ) ) ,( ( RCSe * DS ) + ( MLU * RRSe ) ) ) ,( Min( Min( RCSe ,RMSe ) ,Max( CS,MUR ) ) + ( ( RMSe * MUR ) - Min( MUM ,MUR ) ) ) ) ),Max( ( ( Max( ( RRSe / RCSe ),( MUC * RRSe ) ) + ( ( MLU * RRSe ) * ( MUM * MUC ) ) ) - Max( Min( ( DS / RMSe ) ,Min( CS ,MUC ) ),( ( RMSe * MUR ) / ( CS - RRSe ) ) ) ),( Max( Min( Max( RMSe,RRSe ) ,( RRSe - MUR ) ),Max( ( RRSe * MUC ),( RRSe + MUR ) ) ) + ( Min( Max( MUR,MUM ) ,Max( RMSe,DS ) ) * ( Max( MUC,MUR ) - ( RMSe / MUR ) ) ) ) ) ) ,( Max( ( ( Min( ( MUR * MUR ) ,Max( MUR,RMSe ) ) - ( ( MUR + MUC ) - Max( MUC,RCSe ) ) ) / Max( ( ( CS * MUR ) * ( RMSe / MUC ) ),( ( RRSe * MLU ) + ( RCSe / CS ) ) ) ),Min( ( ( ( CS * RCSe ) + ( DS * RMSe ) ) / ( Min( DS ,RRSe ) / ( MUR - CS ) ) ) ,( Max( ( DS * MUC ),Max( MUR,MUM ) ) / ( Max( RRSe,MLU ) * Max( MUC,MUR ) ) ) ) ) / ( ( ( ( ( MUC * MLU ) + Min( MLU ,RMSe ) ) - ( ( DS - CS ) + Max( RMSe,RCSe ) ) ) + ( Min( ( MUM + MUR ) ,Min( RRSe ,RMSe ) ) - ( ( RRSe / MUC ) / ( MUM + MLU ) ) ) ) * ( ( ( ( MUR * MLU ) + ( MUM / CS ) ) / ( ( RCSe + MUM ) - ( CS - RRSe ) ) ) * Max( ( Max( RCSe,RRSe ) * Max( MUC,CS ) ),( ( MUR * MUC ) * ( RMSe / CS ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU / FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MLU ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8491603024751365}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - PN ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Max( ( MUM / RMSe ),RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.5953313960018494}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( DDR - DDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ) ) / ( ( MUC * MUM ) * MUM ) ),Max( Max( Min( ( ( DS + MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3964765449642004}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.42088419222695933}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5527578911391281}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,MUR ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( ( DS + MUR ) ,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( MDR / PN ) ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.13333333333333333, "obj2": 0.7684908369572303}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - PN ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - ACS ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,( RMSe / MLU ) ) ,( RMSe / Min( ( MUM + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2768238258132715}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.23263792718267234}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.71182799420357}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + AMS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) / ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MLU ) ) * MLU ),Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5137856873768533}, {"determining": "( ARS / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) - ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( MUR ,DS ) / ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7248019289948477}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( BR - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( Min( ( RRSe - MLU ) ,( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5124104503522718}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8555555555555555, "obj2": 0.061197767219639605}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - MRS ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MUC ) ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.623165681176401}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) - ( MDR / PN ) ) / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * ( ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) * ( ACS - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( ( RRSe - ( MUR * CS ) ) + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( DS + MUR ) ) ,MUM ) / Max( MUR,MUR ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.03078124048856161}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - DDR ) ) - ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( ( MUR * MUM ) ,( RMSe / Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) / RMSe ) ,RMSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.1826133950669348}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.37407407407407406, "obj2": 0.4422797585693489}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ( AMS - AMS ) ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),( Min( ( MUM + ( DS + Min( RRSe ,RCSe ) ) ) ,MUC ) / Max( MUR,MUM ) ) )", "obj1": 0.4388888888888889, "obj2": 0.37864752846317284}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7385022947566264}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ( AMS - FirstVNF_CPU ) ) ) ) * ( MDR * ( CRS - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + Max( DS,Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5361476617766203}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6444689921017012}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( Min( ( RMSe + ( ( MUM + ( DS + MUR ) ) * MUC ) ) ,MUC ),Min( Min( ( RMSe + ( DS - MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.7296296296296296, "obj2": 0.12154480787465319}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( Min( ( RMSe + ( ( MUM + ( DS + MUR ) ) * MUC ) ) ,MUC ),Min( Min( ( RMSe + ( DS - MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.623165681176401}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( BR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( ( AMS - FirstVNF_CPU ) - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR / FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUM * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * RMSe ) ) ,( RMSe / MLU ) ) ) ) )", "obj1": 0.5518518518518518, "obj2": 0.2969963955382626}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.35555555555555557, "obj2": 0.47603810533328716}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,DS ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / Min( ( MUM + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) ) ) ) )", "obj1": 0.5740740740740741, "obj2": 0.26082129092558404}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.01787834403353391}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8, "obj2": 0.08363612519603669}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( DDR - DDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ) ) / ( ( MUC * MUM ) * MUM ) ),Max( Max( Min( ( ( DS + MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.2974969347990293}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) )", "obj1": 0.7296296296296296, "obj2": 0.12154480787465319}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR + AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - RMSe ) + ( DS + ( RRSe + DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.667295600659934}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( MDR * ( ( ( AMS - AMS ) - FirstVNF_CPU ) - ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( ( MUM / Max( MUR,MUM ) ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.6851851851851852, "obj2": 0.16420942165434338}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( MDR * ( ( ( AMS - AMS ) - FirstVNF_CPU ) - FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( Max( ( Min( ( ( DS - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) - Max( MUR,MUM ) ),DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( ( MUM / Max( MUR,MUM ) ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.04501248438437571}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ACS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4666666666666667, "obj2": 0.3510545719770651}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS * ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe + Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.746824960199002}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21418781289711988}, {"determining": "( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_CPU_Server ) * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7590268622815686}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.33369700477374037}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.24566346172987538}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21418781289711988}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.30337532478839013}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6444689921017012}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( MDR * ( ( ( AMS - AMS ) - FirstVNF_CPU ) - FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( Max( ( Min( ( ( DS - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) - Max( MUR,MUM ) ),DS ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( ( MUM / Max( MUR,MUM ) ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.04501248438437571}, {"determining": "( DDR / ( ( ( ( ( ( FirstVNF_RAM_Server - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - DDR ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( MUM ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ) / Max( MUR,MUM ) ),Min( Max( RRSe,RRSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3180176111616409}], "54": [{"determining": "( ( ( ( AMS - AMS ) - FirstVNF_CPU ) - FirstVNF_CPU ) / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( DS ,( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( ( ( AMS - ( AMS - FirstVNF_RAM_Server ) ) - FirstVNF_CPU ) + ACS ) ) + ACS ) - ( MDR * PN ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RMSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,MUM ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU / FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MLU ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8491603024751365}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + Max( Max( ( RRSe - MUR ),( RMSe / MLU ) ),MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7722222222222223, "obj2": 0.1062599079187225}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5527578911391281}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ( AMS - AMS ) ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),( Min( ( MUM + ( DS + Min( RRSe ,RCSe ) ) ) ,MUC ) / Max( MUR,MUM ) ) )", "obj1": 0.4388888888888889, "obj2": 0.37864752846317284}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,MUR ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( ( DS + MUR ) ,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) / FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) + ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8555555555555555, "obj2": 0.061197767219639605}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR + AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - RMSe ) + ( DS + ( RRSe + DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.667295600659934}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) )", "obj1": 0.3537037037037037, "obj2": 0.47569977992177753}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( FirstVNF_CPU - ( MRS - FirstVNF_CPU_Server ) ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8184926916531117}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( MDR * ( ( ( AMS - AMS ) - ( MDR - AMS ) ) - FirstVNF_CPU ) ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) )", "choosing": "( Min( RRSe ,RRSe ) / ( Min( ( Min( ( DS + MUR ) ,MUC ) / ( MUR * RRSe ) ) ,Min( ( MUC / RMSe ) ,RMSe ) ) + ( ( MUM / Max( MUR,MUM ) ) * Min( RRSe ,DS ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12181060657076229}, {"determining": "( DDR / ( ( ( ( ( ( ARS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - CS ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( RRSe + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.6370370370370371, "obj2": 0.2012090498006653}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - DDR ) ) - ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( ( MUR * MUM ) ,( RMSe / Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) / RMSe ) ,RMSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.1826133950669348}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.71182799420357}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,MUR ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( ( DS + MUR ) ,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.8851851851851852, "obj2": 0.04774128647634711}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( BR - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( Min( ( RRSe - MLU ) ,( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5124104503522718}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ( AMS - FirstVNF_CPU ) ) ) ) * ( MDR * ( CRS - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + Max( DS,Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5361476617766203}, {"determining": "( ARS / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) - ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( MUR ,DS ) / ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7248019289948477}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ACS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.35242428119836094}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.17835386224172942}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.37407407407407406, "obj2": 0.4422797585693489}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( ( AMS - FirstVNF_CPU ) - ACS ) ) ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( Max( MUR,MUM ) + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7361349332159363}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( DDR - DDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ) ) / ( ( MUC * MUM ) * MUM ) ),Max( Max( Min( ( ( ( MUR * MUM ) - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.26907869941234575}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.42088419222695933}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS * ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe + Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.5950006121258994}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.912962962962963, "obj2": 0.030391324606843666}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8314814814814815, "obj2": 0.06701406015573289}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ,( MLU / CS ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.12962962962962962, "obj2": 0.7743799776143102}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( BR - AMS ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( ( AMS - FirstVNF_CPU ) - ACS ) ) ) * ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server - ( ( BR / FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUM * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * RMSe ) ) ,( RMSe / MLU ) ) ) ) )", "obj1": 0.5518518518518518, "obj2": 0.2969963955382626}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( AMS - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ),Max( ( Min( ( ( RRSe - RRSe ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( CS / MLU ) ) ) )", "obj1": 0.8, "obj2": 0.08363612519603669}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( PN - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,RRSe ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.5950006121258994}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.37407407407407406, "obj2": 0.4422797585693489}, {"determining": "( AMS / ( ( ( ( ( ( FirstVNF_Mem - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - AMS ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Min( MUM ,RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) )", "obj1": 0.7296296296296296, "obj2": 0.12154480787465319}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.42088419222695933}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MUR ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.4811842934891197}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - MRS ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MUC ) ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.623165681176401}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23076567472739207}, {"determining": "( DDR / ( ( ( Max( ( ( AMS - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( DDR - DDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS * FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS * RMSe ) ) ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ) ) / ( Min( MUC ,MUM ) * MUM ) ),Max( Max( Min( ( ( DS + MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.394079919668793}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS * ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe + Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.746824960199002}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS * ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MUC ) ) ) ) )", "obj1": 0.2537037037037037, "obj2": 0.606070370677792}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MLU ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5282628005599829}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.01787834403353391}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8, "obj2": 0.08363612519603669}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.24566346172987538}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + AMS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) / ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MLU ) ) * MLU ),Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5137856873768533}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6445559699076077}], "55": [{"determining": "( DDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( AMS - AMS ) - FirstVNF_CPU ) - FirstVNF_CPU ) / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( DS ,( RMSe + MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU / FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MLU ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8491603024751365}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5527578911391281}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ACS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.35242428119836094}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( FirstVNF_CPU - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( ( ( RRSe - MUR ) - ( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.5948557991629737}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5296296296296297, "obj2": 0.2902602907521491}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR + AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - RMSe ) + ( DS + ( RRSe + DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.667295600659934}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( RRS - FirstVNF_Mem_Server ) * MDR ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + Max( Max( ( RRSe - MUR ),( RMSe / MLU ) ),MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7722222222222223, "obj2": 0.1062599079187225}, {"determining": "( DDR / ( ( ( ( ( ( ARS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - CS ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( RRSe + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.6370370370370371, "obj2": 0.2012090498006653}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( RRSe - Min( MUM ,( RRSe - MLU ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe + MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( CS / MLU ) ) ) )", "obj1": 0.725925925925926, "obj2": 0.1337819185508749}, {"determining": "( AMS / ( ( ( ( ( ( AMS - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ( AMS - AMS ) ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),( Min( ( MUM + ( DS + Min( RRSe ,RCSe ) ) ) ,MUC ) / Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ),MUM ) ) )", "obj1": 0.7296296296296296, "obj2": 0.12154480787465317}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( AMS / ( ( ( FirstVNF_Mem - PN ) - ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server * MDR ) ) ) + ACS ) )", "choosing": "Max( ( ( MUM / RMSe ) / RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,( RRSe - MLU ) ) ,( MLU / MUC ) ) ) ) )", "obj1": 0.17962962962962964, "obj2": 0.7099734469676552}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ACS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5777777777777777, "obj2": 0.26198514945360735}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.3476654376202501}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU / MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21364102736550053}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( BR - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( Min( ( RRSe - MLU ) ,( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5124104503522718}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS * AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,( RMSe / MLU ) ) ) / ( RRSe - RRSe ) ) ) ,Min( Min( MLU ,RRSe ) ,( MLU / MLU ) ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.4618369512289628}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ( AMS - FirstVNF_CPU ) ) ) ) * ( MDR * ( CRS - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + Max( DS,Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5361476617766203}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ,( MLU / CS ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.14722515070054842}, {"determining": "( AMS / ( ( ( ( ( ( AMS - MDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) / FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,Max( ( MUM - MUR ),( CS / MLU ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.4017207163655686}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ARS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) - ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( MUR ,DS ) / ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.7796296296296297, "obj2": 0.10541406781951372}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS * ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe + Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.746824960199002}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ),MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3106512975428452}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR - ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6445559699076077}, {"determining": "( ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( MDR / PN ) ) / ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) * ( MDR * ( ( ( FirstVNF_CPU - DDR ) * ( MDR - FirstVNF_CPU_Server ) ) - Max( AMS,FirstVNF_CPU ) ) ) ) / ( Min( CRS ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( FirstVNF_Mem - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( RMSe ,MUR ) + ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( ( DS + MUR ) ,RRSe ) - RRSe ) ) ) ) )", "obj1": 0.6925925925925925, "obj2": 0.1465301589756572}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( ( AMS - FirstVNF_CPU ) - ACS ) ) ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( Max( MUR,MUM ) + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7361349332159363}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MUR ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.4811842934891197}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( MDR - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( Min( RRSe ,RMSe ) + Min( RRSe ,DS ) ) ) ,MUC ),( DS - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.32566813579810094}, {"determining": "( DDR / ( ( ( ( ( ( ARS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - CS ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( RRSe + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.5462962962962963, "obj2": 0.27502348395542053}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6445559699076077}, {"determining": "( ARS / ( ( ( ( FirstVNF_CPU - FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) - ( MUR * MUM ) ),Max( ( Min( CS ,DS ) + ( Min( MUR ,DS ) / ( RCSe - RMSe ) ) ),Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( RMSe / ( Min( MLU ,RMSe ) - RRSe ) ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7248019289948477}, {"determining": "( DDR / ( ( ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( MDR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + ( RMSe / MUC ) ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.12962962962962962, "obj2": 0.7727812810474028}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - FirstVNF_CPU ) + ( ACS - ( ( MDR / PN ) - MDR ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( DDR - DDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ) ) / ( ( MUC * MUM ) * MUM ) ),Max( Max( Min( ( ( ( MUR * MUM ) - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.26907869941234575}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.01787834403353391}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( PN - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) ,Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6100738256319079}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUM * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) ) )", "obj1": 0.8, "obj2": 0.08363612519603669}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.42088419222695933}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ( AMS - AMS ) ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),( Min( ( MUM + ( DS + Min( RRSe ,RCSe ) ) ) ,MUC ) / Max( MUR,MUM ) ) )", "obj1": 0.4388888888888889, "obj2": 0.37864752846317284}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23076567472739207}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem + FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( DDR * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ),Max( ( ( ( ( RRSe - MLU ) + ( MUM + MUR ) ) - MUC ) / ( MUR * ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.044920749466337506}, {"determining": "( DDR / ( ( ( Max( ( ( AMS - ( AMS - FirstVNF_RAM ) ) - FirstVNF_CPU ),ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( DDR - DDR ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS * FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS * RMSe ) ) ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ) ) / ( Min( MUC ,MUM ) * MUM ) ),Max( Max( Min( ( ( DS + MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.394079919668793}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ( AMS - AMS ) ) ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS * RMSe ) ) ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ) ) / ( ( MUC * MUM ) * MUM ) ),Max( Max( Min( ( ( DS + MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4388888888888889, "obj2": 0.37864752846317284}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MLU ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5282628005599829}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.17835386224172942}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.37407407407407406, "obj2": 0.4422797585693489}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) / FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) + ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + AMS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) / ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MLU ) ) * MLU ),Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5137856873768533}], "56": [{"determining": "( AMS / ( MDR - AMS ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,( RMSe / MLU ) ) ) / ( RRSe - RRSe ) ) ) ,Min( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) ,( MLU / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) )", "choosing": "( RCSe / ( Min( ( DS + MUR ) ,Min( ( ( MUC - MUC ) / ( ( RCSe - CS ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU / FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MLU ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8491603024751365}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5527578911391281}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MLU / MLU ),Max( ( Min( ( ( RRSe - RCSe ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.039187424053282224}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR * FirstVNF_CPU ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.17835386224172942}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + MDR ) ) ) - ( ( ( MDR * ( FirstVNF_CPU - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + Min( DS ,Min( RRSe ,DS ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.26481481481481484, "obj2": 0.5851431386549117}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( FirstVNF_CPU_Server - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,RRSe ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2462962962962963, "obj2": 0.608852491882997}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR + AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - RMSe ) + ( DS + ( RRSe + DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.667295600659934}, {"determining": "( AMS / ( ( ( ( ( ( AMS - MDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) / FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) - ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,Max( ( MUM - MUR ),( CS / MLU ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.4017207163655686}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - Max( ( ARS + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - CS ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - RCSe ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.6444444444444445, "obj2": 0.19795284259016202}, {"determining": "( AMS / ( ( ( FirstVNF_Mem - PN ) - ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server * MDR ) ) ) + ACS ) )", "choosing": "Max( ( ( MUM / RMSe ) / RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,( RRSe - MLU ) ) ,( MLU / MUC ) ) ) ) )", "obj1": 0.17962962962962964, "obj2": 0.7099734469676552}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - Min( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) ,( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU + MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.23263792718267234}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ACS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.35242428119836094}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( BR - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( Min( ( RRSe - MLU ) ,( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5124104503522718}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS * AMS ) ) - FirstVNF_CPU ) + RRS ) - Max( MDR,PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,( RMSe / MLU ) ) ) / ( RRSe - RRSe ) ) ) ,( Min( MLU ,RRSe ) + ( MLU / MLU ) ) ) ) )", "obj1": 0.7555555555555555, "obj2": 0.11422412758398434}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5296296296296297, "obj2": 0.29026029075214904}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( Max( FirstVNF_CPU,( ACS - ( MDR - ( AMS - FirstVNF_CPU ) ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / RMSe ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5360906404949668}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RMSe - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.01787834403353391}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU / MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.21364102736550053}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( DDR * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU / MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.8611111111111112, "obj2": 0.053359019958277125}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - Min( RRSe ,DS ) ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.4425925925925926, "obj2": 0.37779667510714526}, {"determining": "( DDR / ( ( ( ( AMS - AMS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( MDR - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( Min( RRSe ,RMSe ) + Min( RRSe ,DS ) ) ) ,MUM ),( DS - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.1553614148087835}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( ( AMS - ACS ) - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9740740740740741, "obj2": 0.007985519766061806}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / AMS ) ) - ( MDR - ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe * MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6445559699076077}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.37407407407407406, "obj2": 0.4422797585693489}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR - ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6445559699076077}, {"determining": "( DDR / ( ( ( ( ( ( ARS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - CS ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( RRSe + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.5462962962962963, "obj2": 0.27502348395542053}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MUR ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.4811842934891197}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( ( BR - FirstVNF_CPU ) - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( Min( ( RRSe - CS ) ,( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.33847923316631273}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( MDR * ( ACS - ( PN - ACS ) ) ) * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU / MLU ),Max( ( Min( MUR ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.5777777777777777, "obj2": 0.2500366292493287}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( DDR * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( MUM + MUR ) ) ,MUC ) / ( MUR * ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.044920749466337506}, {"determining": "( DDR / ( ( ( ( ( ( MDR / PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( ( AMS - Max( FirstVNF_Mem_Server,FirstVNF_RAM ) ) * ( ( ACS + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( MDR + FirstVNF_CPU ) - FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + ( RMSe / MUC ) ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.12962962962962962, "obj2": 0.7727812810474028}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.42088419222695933}, {"determining": "( DDR / ( ( ( ( ( ( ARS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - CS ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( RRSe + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.6370370370370371, "obj2": 0.2012090498006653}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - MDR ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ( AMS - FirstVNF_CPU ) ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RMSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5703703703703704, "obj2": 0.252694724069983}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU / MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.6074074074074074, "obj2": 0.2230620378141012}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - FirstVNF_CPU_Server ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( RRSe / RMSe ) * RMSe ) ,Min( Min( MUC ,( RRSe + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5222222222222223, "obj2": 0.30489165165392207}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS * ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe + Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.746824960199002}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUM * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) ) )", "obj1": 0.8, "obj2": 0.08363612519603669}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS * AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( Min( ( RRSe - MLU ) ,( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.725925925925926, "obj2": 0.13277745598806018}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MLU ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5282628005599829}, {"determining": "( AMS / ( ( ( ( ( ( AMS - PN ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( Max( MDR,PN ) - FirstVNF_CPU ) ) * ( MDR - ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),( Min( ( MUM + ( ( MLU * MLU ) + Min( RRSe ,RCSe ) ) ) ,MUC ) / Max( MUR,MUM ) ) )", "obj1": 0.4222222222222222, "obj2": 0.3934759295464482}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + AMS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) / ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MLU ) ) * MLU ),Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5137856873768533}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.42088419222695933}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.01787834403353391}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ACS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.349246549853183}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) / FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) + ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}], "57": [{"determining": "( Min( ( ( ( Max( Min( Max( Const,DDR ) ,( ARS + FirstVNF_CPU_Server ) ),Min( Min( ACS ,CRS ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) ) ) * Max( ( ( Const / MDR ) * ( AMS - FirstVNF_Mem_Server ) ),Max( ( ACS / FirstVNF_Mem_Server ),( FirstVNF_CPU_Server / ACS ) ) ) ) * ( ( ( Max( PN,MRS ) * Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) + ( Min( DDR ,MDR ) * ( BR * FirstVNF_CPU ) ) ) / Min( ( ( BR - CRS ) / ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,Min( Min( MRS ,RRS ) ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) ) + Min( Min( Min( ( ( MRS - FirstVNF_CPU_Server ) / Min( DDR ,CRS ) ) ,Max( Min( AMS ,CRS ),( Const / FirstVNF_Mem ) ) ) ,Max( Max( ( PN * AMS ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ),Max( ( MRS * FirstVNF_Mem ),( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ) ,( ( ( ( RRS * ACS ) + ( FirstVNF_CPU / CRS ) ) - ( ( AMS / ARS ) * ( PN / MDR ) ) ) - Min( Min( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ,Min( RRS ,BR ) ) ,Max( ( BR + FirstVNF_Mem ),( MRS / MDR ) ) ) ) ) ) ,( Min( ( ( ( Min( DDR ,BR ) - ( FirstVNF_Mem / ACS ) ) + Min( ( ARS - FirstVNF_CPU ) ,( ACS * MDR ) ) ) * ( Max( ( AMS * MRS ),( DDR / CRS ) ) - Max( ( ARS + FirstVNF_Mem ),( FirstVNF_RAM_Server + ACS ) ) ) ) ,Min( Min( ( ( BR * RRS ) / ( MRS - FirstVNF_Mem_Server ) ) ,Min( ( FirstVNF_CPU / FirstVNF_CPU ) ,Max( Const,CRS ) ) ) ,Min( ( Min( PN ,DDR ) * ( FirstVNF_Mem / PN ) ) ,( ( RRS - MRS ) + Min( MDR ,RRS ) ) ) ) ) * ( ( ( ( ( PN / CRS ) - ( FirstVNF_Mem + FirstVNF_CPU ) ) * Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) ) ) + Max( Max( ( FirstVNF_RAM_Server / Const ),( FirstVNF_Mem - FirstVNF_RAM ) ),( ( Const / RRS ) + Max( CRS,Const ) ) ) ) / Min( ( Min( ( FirstVNF_CPU - FirstVNF_Mem ) ,( BR + FirstVNF_Mem ) ) + Min( ( FirstVNF_Mem * RRS ) ,( FirstVNF_CPU - FirstVNF_Mem ) ) ) ,( ( Min( PN ,FirstVNF_RAM ) + Max( PN,Const ) ) / ( Min( AMS ,FirstVNF_RAM ) / Min( CRS ,CRS ) ) ) ) ) ) ) + ( ( Min( Max( ( ( ( FirstVNF_Mem + FirstVNF_CPU_Server ) * ( FirstVNF_Mem + FirstVNF_CPU_Server ) ) * ( ( Const / MDR ) / ( FirstVNF_CPU * CRS ) ) ),( ( Min( ACS ,FirstVNF_RAM ) / ( MRS + RRS ) ) * Min( Max( CRS,FirstVNF_RAM_Server ) ,( FirstVNF_RAM + ARS ) ) ) ) ,( ( Min( ( FirstVNF_Mem_Server / FirstVNF_Mem ) ,( RRS / DDR ) ) * Min( ( ACS - MRS ) ,( DDR * ARS ) ) ) - ( Max( Max( MDR,FirstVNF_Mem ),( ACS - MDR ) ) * Min( ( AMS / Const ) ,( PN - RRS ) ) ) ) ) - Max( ( ( Max( ( AMS + FirstVNF_RAM_Server ),Max( FirstVNF_RAM,BR ) ) / ( ( MDR - DDR ) - Min( ARS ,FirstVNF_CPU_Server ) ) ) / Min( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) + ( PN * DDR ) ) ,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) - ( ARS - Const ) ) ) ),( ( ( ( DDR + FirstVNF_RAM_Server ) - Min( BR ,FirstVNF_RAM ) ) + Max( ( AMS + MRS ),( ACS - FirstVNF_Mem_Server ) ) ) / ( ( ( AMS + Const ) + Min( FirstVNF_CPU_Server ,DDR ) ) / Min( Min( Const ,ARS ) ,Max( ARS,FirstVNF_Mem ) ) ) ) ) ) * Min( ( Max( ( ( ( FirstVNF_RAM_Server * FirstVNF_RAM ) - Max( CRS,RRS ) ) * ( Min( DDR ,PN ) * ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ) ),Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) / ( PN + FirstVNF_CPU ) ),Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_Mem_Server * ACS ) ) ) ) * ( Min( ( ( FirstVNF_Mem_Server - CRS ) * Min( Const ,CRS ) ) ,( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) + Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) ) - ( ( ( Const + PN ) + ( FirstVNF_CPU_Server - FirstVNF_RAM_Server ) ) - Max( ( FirstVNF_CPU / AMS ),( DDR / PN ) ) ) ) ) ,( Max( ( ( ( MRS / FirstVNF_CPU_Server ) / Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) / Min( ( PN + CRS ) ,( BR - CRS ) ) ),( ( ( BR - RRS ) + ( BR - FirstVNF_RAM_Server ) ) - Min( ( ARS * BR ) ,Max( ARS,AMS ) ) ) ) / Max( Min( ( Max( RRS,ARS ) / ( MDR - Const ) ) ,( ( ARS * BR ) + ( ACS + CRS ) ) ),Max( ( Max( FirstVNF_Mem,BR ) + Min( RRS ,FirstVNF_CPU ) ),( ( Const / BR ) * Min( MDR ,FirstVNF_RAM ) ) ) ) ) ) ) )", "choosing": "Min( ( ( Max( Max( ( ( ( MUM / RCSe ) - Min( MLU ,MLU ) ) / ( ( RRSe - DS ) * ( DS * RRSe ) ) ),( ( Max( CS,CS ) - Min( MLU ,MUR ) ) + ( ( CS / RRSe ) * ( MUM / MUR ) ) ) ),( ( ( ( CS / MLU ) * Min( RRSe ,MLU ) ) / ( Max( MLU,CS ) - ( MUC + CS ) ) ) + ( Min( Max( RRSe,MUC ) ,( RMSe - RCSe ) ) - Max( ( CS + MUM ),Min( RRSe ,RCSe ) ) ) ) ) + ( ( ( ( ( RCSe * RMSe ) / ( MUM / MUR ) ) * Min( ( DS + CS ) ,( MUC / MUC ) ) ) + Min( Max( Max( MLU,MUR ),Min( DS ,CS ) ) ,( ( RMSe / RRSe ) - ( MLU * CS ) ) ) ) / ( ( Min( Min( RCSe ,DS ) ,Max( MUC,MLU ) ) / Min( Min( MLU ,RRSe ) ,( DS - DS ) ) ) / ( ( ( RRSe + RRSe ) + ( RRSe / RMSe ) ) * ( Min( RMSe ,MLU ) - Min( MUM ,RMSe ) ) ) ) ) ) - Max( ( ( Max( ( ( RMSe * CS ) / Max( MUC,RMSe ) ),( ( MUC * MLU ) * ( MUR * MLU ) ) ) - ( Min( Max( MUM,CS ) ,Min( CS ,RMSe ) ) + ( ( RMSe / MUR ) * ( MUR / RCSe ) ) ) ) / ( ( ( ( MUR / MLU ) * Min( MUM ,MUC ) ) * ( ( RCSe - RCSe ) / Min( MUC ,MUR ) ) ) - ( Max( Min( MUC ,MUM ),Min( MUC ,RCSe ) ) - ( ( MLU / DS ) * ( DS / CS ) ) ) ) ),( ( Min( Min( Max( RCSe,RCSe ) ,Min( RCSe ,MUR ) ) ,Max( ( MUR / MLU ),( CS + MUC ) ) ) / ( ( ( RRSe - RRSe ) / Max( MUC,MUC ) ) + Min( ( RMSe - MUC ) ,Max( RCSe,CS ) ) ) ) + ( ( ( ( DS - RRSe ) - Min( DS ,RMSe ) ) * ( ( DS * CS ) - Min( MUC ,MUR ) ) ) + ( ( ( CS + MUM ) / ( RRSe / RMSe ) ) + Min( ( DS / CS ) ,( RMSe - DS ) ) ) ) ) ) ) ,( Max( ( ( ( ( Min( MUC ,MUM ) + ( MUM * MUR ) ) / ( Max( RCSe,MUR ) + Min( CS ,MUC ) ) ) + ( ( ( MUC * RRSe ) + ( DS * RMSe ) ) - ( ( CS * CS ) + ( RRSe / DS ) ) ) ) * Min( ( Max( ( MUC * MUC ),( MUR * MUR ) ) + Min( Min( RMSe ,MUC ) ,( DS / MUC ) ) ) ,( ( Min( MUC ,RCSe ) - ( RRSe * DS ) ) / ( ( RMSe / CS ) + ( CS + RCSe ) ) ) ) ),Max( ( Min( ( ( MUR / RCSe ) / ( MUC * RCSe ) ) ,( ( MUM * MUM ) / ( RMSe - CS ) ) ) * ( Max( Min( DS ,MUC ),( MUR - RMSe ) ) - ( Min( MUC ,RMSe ) * Min( RMSe ,MLU ) ) ) ),( Max( Min( Max( RCSe,DS ) ,Min( RMSe ,DS ) ),( ( RRSe * RRSe ) / ( RMSe * DS ) ) ) + ( ( ( MUC - CS ) - Max( RCSe,MUR ) ) * ( Min( MUM ,CS ) * ( RMSe / MUC ) ) ) ) ) ) + ( ( Max( ( ( ( MLU + RCSe ) * ( MUC * RRSe ) ) / ( ( MLU + MUC ) + Max( MUC,MUC ) ) ),( ( Min( MUC ,MUR ) / ( MLU * RCSe ) ) - ( ( MUC * DS ) * ( RRSe / MUM ) ) ) ) - ( Max( ( Max( MUR,RMSe ) / ( RRSe + MLU ) ),( ( MUM - CS ) * ( MUC / MUR ) ) ) / Max( ( ( CS * MUM ) * ( MUM - MUC ) ),( Max( DS,RMSe ) / ( RCSe * MLU ) ) ) ) ) + Min( ( Max( ( ( MUM * CS ) - ( RRSe / MUR ) ),( Max( MUR,CS ) * Min( MUR ,RRSe ) ) ) / ( Min( ( MLU - DS ) ,( MUM / RRSe ) ) / Max( ( RCSe - CS ),( RRSe * RMSe ) ) ) ) ,( ( Max( ( RCSe * RCSe ),Min( MUC ,MUM ) ) * ( ( MUR * RRSe ) * ( RCSe + MUM ) ) ) * ( Max( Max( CS,CS ),Max( MLU,MUM ) ) + Max( Max( RRSe,MUM ),( DS / RRSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( AMS / ( MDR - AMS ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,( RMSe / MLU ) ) ) / ( RRSe - RRSe ) ) ) ,Min( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) ,( MLU / MLU ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU / FirstVNF_RAM ) * Max( MDR,( ACS - ( AMS - FirstVNF_CPU ) ) ) ) / ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,DS ) / ( Min( ( Min( ( RMSe + ( RRSe + MUR ) ) ,MLU ) / ( MUR * MUM ) ) ,Min( ( RRSe / RMSe ) ,RMSe ) ) + ( MUM * Min( RRSe ,DS ) ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8491603024751365}, {"determining": "( DDR / ( ( ( ( FirstVNF_CPU * FirstVNF_RAM ) * Max( MRS,( ACS - ( AMS / FirstVNF_CPU ) ) ) ) / ( ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUM,RCSe ) / ( Min( MUR ,( ( RRSe / RMSe ) * RMSe ) ) + ( RCSe * Min( RCSe ,RMSe ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.7947555994244176}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( ( FirstVNF_Mem_Server + FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MUR ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.4811842934891197}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) / FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.1735265120886812}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,( RMSe / MLU ) ) ) / ( RRSe - RRSe ) ) ) ,( ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) + ( MLU / MLU ) ) ) ) )", "obj1": 0.3685185185185185, "obj2": 0.4487647618871555}, {"determining": "( AMS / ( ( ( FirstVNF_Mem - PN ) - ( FirstVNF_Mem_Server * ( FirstVNF_CPU_Server * MDR ) ) ) + ACS ) )", "choosing": "Max( ( ( MUM / RMSe ) / RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,Min( Min( RRSe ,( RRSe - MLU ) ) ,( MLU / MUC ) ) ) ) )", "obj1": 0.17962962962962964, "obj2": 0.7099734469676552}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + MDR ) ) ) - ( ( ( MDR * ( FirstVNF_CPU - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + Min( DS ,Min( RRSe ,DS ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.4981481481481482, "obj2": 0.31972640663385155}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR + AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( Const,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( RMSe + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - RMSe ) + ( DS + ( RRSe + DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.667295600659934}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) / Min( MDR ,PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU - FirstVNF_Mem_Server ) ) )", "choosing": "Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,RMSe ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,DS ) ,( RMSe + MLU ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5527578911391281}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( MDR * ( ( Const - FirstVNF_Mem_Server ) * MRS ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * RCSe ) ),Min( ( Min( RRSe ,RRSe ) - ( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07283669303950892}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS / ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( BR - FirstVNF_CPU ) ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( Min( ( RRSe - MLU ) ,( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5124104503522718}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( Max( FirstVNF_CPU,( ACS - ( MDR - ( AMS - FirstVNF_CPU ) ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / RMSe ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5360906404949668}, {"determining": "( DDR / ( ( ( ( ( ( ARS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - CS ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( RRSe + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.5462962962962963, "obj2": 0.27502348395542053}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MLU / MLU ),Max( ( Min( ( ( RRSe - RCSe ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.039187424053282224}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ACS ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( MDR * FirstVNF_CPU ) ) )", "choosing": "Max( Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RMSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUM - MUR ),( CS / MLU ) ) + MUR ) ,( MLU / MLU ) ) ,( MUR / MLU ) ) ) )", "obj1": 0.7759259259259259, "obj2": 0.09591974396160777}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( DDR * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( MUM + MUR ) ) ,MUC ) / ( MUR * ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.044920749466337506}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS * AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7074074074074074, "obj2": 0.14205649300389903}, {"determining": "( DDR / ( ( ( ( AMS - AMS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( MDR - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( Min( RRSe ,RMSe ) + Min( RRSe ,DS ) ) ) ,MUM ),( DS - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.1553614148087835}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS * AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - RRSe ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUM ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( Min( ( RRSe - MLU ) ,( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.725925925925926, "obj2": 0.13277745598806018}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - Max( ( ARS + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / ( ( ( AMS - ( AMS - ( MDR - AMS ) ) ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - CS ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - RCSe ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + RMSe ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.65, "obj2": 0.1950132056298746}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( DS ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( DDR / ( ( ( ( ( Max( MDR,DDR ) - FirstVNF_CPU ) + ACS ) + ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MUM ) ) * MLU ),Max( ( Min( ( Min( RRSe ,MLU ) + ( Min( ( RRSe - RRSe ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC - ( DS / RRSe ) ) ) ) ) ,( RMSe - MLU ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6869403768943663}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + AMS ) - FirstVNF_CPU ) ) ) / ACS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( Max( ( MUM - MUR ),( CS / MLU ) ) - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.44074074074074077, "obj2": 0.3756080215073439}, {"determining": "( AMS / ( ( ( ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ACS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) ,( ( RMSe + ( DS + RMSe ) ) / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.7537037037037037, "obj2": 0.11393052683889289}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( RRSe / RMSe ) * RMSe ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5222222222222223, "obj2": 0.304891651653922}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( FirstVNF_Mem_Server + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU / MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( DS + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.6074074074074074, "obj2": 0.2230620378141012}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( Min( ( ( MUM * Min( RRSe ,( MLU * MLU ) ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUM * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) ) )", "obj1": 0.8388888888888889, "obj2": 0.06515309136460756}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS * AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ( AMS - AMS ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ),Min( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,( RMSe / MLU ) ) ) / ( RRSe - RRSe ) ) ) ,Min( Min( MLU ,RRSe ) ,( MLU / MLU ) ) ) ) )", "obj1": 0.7666666666666667, "obj2": 0.11079086533045882}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.42088419222695933}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( MDR * ( FirstVNF_CPU_Server - ( ( BR + FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( MDR * ( ( AMS - ( DDR - FirstVNF_CPU ) ) - ( AMS / MDR ) ) ) * ( MDR * ( ACS - ( ( BR - FirstVNF_RAM_Server ) - FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MLU ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5282628005599829}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( Min( ( AMS - FirstVNF_CPU ) ,FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( MDR - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.010109296618348909}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( Max( FirstVNF_CPU,( ACS - ( MDR - ( AMS - FirstVNF_CPU ) ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / RMSe ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.22962962962962963, "obj2": 0.6356164311880927}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.37962962962962965, "obj2": 0.4397170713469726}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_Mem_Server ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ( AMS - FirstVNF_CPU ) ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( RRSe,Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.14792059927930074}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( FirstVNF_CPU_Server - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RRSe ) ,RMSe ) ) + ( DS + Min( RRSe ,RRSe ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.1962962962962963, "obj2": 0.6809634665347993}, {"determining": "( ( ( ( ( ( ( AMS - ( AMS / AMS ) ) - FirstVNF_CPU ) + AMS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) * ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) ) / ( ( ( RRS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) / ( ( ( ( ( Max( AMS,DDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / RRS ) ) - ( MDR - AMS ) ) - ( MDR - AMS ) ) )", "choosing": "Max( ( ( Min( ( ( RRSe + MUC ) + ( DS + MUR ) ) ,MUM ) / ( MUR * MLU ) ) * MLU ),Min( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - RRSe ) ,( MUR / MLU ) ) + RMSe ) ) ,MUC ) / ( MUR * MUM ) ) ,Min( ( ( DS + MUR ) * ( Min( MUC ,RCSe ) - Min( Min( MUC ,RCSe ) ,( MUC * ( DS / RRSe ) ) ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5137856873768533}, {"determining": "( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / ( ( ( ( FirstVNF_Mem - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * ( ( FirstVNF_CPU - FirstVNF_Mem_Server ) * MDR ) ) ) + ACS ) - ( MDR / PN ) ) )", "choosing": "Max( Min( ( MUM / RMSe ) ,RMSe ),Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUM * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.08688702459937814}, {"determining": "( DDR / ( ( ( ( ( ( ARS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - Max( ( BR + FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( Min( ( ( MUR * MUM ) - CS ) ,( ( ( RCSe + RCSe ) + MUC ) * ( MUC * MUM ) ) ),Max( ( Min( ( ( RRSe - MLU ) + ( Min( ( RRSe - MLU ) ,( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( RMSe * MUM ) ),Min( Min( ( RRSe + MUR ) ,( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) / Max( MUR,MUM ) ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.6370370370370371, "obj2": 0.2012090498006653}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS * AMS ) ) - FirstVNF_CPU ) + ACS ) - Max( MDR,PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * ( ACS - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( FirstVNF_CPU_Server - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7358406132213202}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( FirstVNF_CPU * ( ACS - ( MDR - ( AMS - FirstVNF_CPU ) ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU_Server ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RRSe / RMSe ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.5696157649719357}, {"determining": "( DDR / ( ( ( ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( ( MDR * FirstVNF_CPU ) * ( MDR + ( FirstVNF_CPU_Server - ( ( BR + AMS ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( ( ( MUM * Min( RRSe ,DS ) ) + ( DS + RMSe ) ) ,MUC ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - MUR ) + ( DS + Max( ( MUM - MUR ),( CS / MLU ) ) ) ) ,MUC ),Max( MUR,MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.5574074074074075, "obj2": 0.2650233040558002}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( Max( ( MUR - MUR ),( RMSe / MUC ) ) + MUR ) ,( MLU / MLU ) ) ,( RMSe / ( RMSe / MLU ) ) ) ) )", "obj1": 0.8537037037037037, "obj2": 0.06496334062652624}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + MDR ) - FirstVNF_CPU ) ) ) / ACS ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - Min( MUM ,Min( MUM ,RMSe ) ) ) + ( Max( ( MUR - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( ( MUR - MUR ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.48703703703703705, "obj2": 0.3323766028224142}, {"determining": "( AMS / ( ( ( ( ( ( AMS - MDR ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( DS + MUR ),( RMSe / MUC ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,Max( ( MUM - MUR ),( CS / MLU ) ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.42777777777777776, "obj2": 0.3846513185041292}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - AMS ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR - ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( MLU * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) / ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / RCSe ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6445559699076077}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( FirstVNF_CPU - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5778800442292517}, {"determining": "( DDR / ( ( ( ( ( ( AMS - ( MDR - AMS ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - ( ( ( AMS - ( AMS - PN ) ) - FirstVNF_CPU ) + ACS ) ) ) - ( ( ( MDR * ( ACS - ( MDR - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - ( ( BR - FirstVNF_CPU ) - FirstVNF_CPU ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( ( AMS - FirstVNF_CPU ),FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Min( Min( ( RMSe + ( DS + MUR ) ) ,MUC ) ,( ( Min( ( ( RRSe - MLU ) + ( MUR + MUR ) ) ,RCSe ) - Min( ( RRSe / RMSe ) ,RMSe ) ) / ( RRSe - RRSe ) ) ) / ( MUR * MUM ) ),Max( Max( Min( ( ( RCSe - Min( ( RRSe / RMSe ) ,RMSe ) ) + ( DS + Min( RRSe ,DS ) ) ) ,MUC ),( MUR - MUM ) ),Min( ( RRSe - ( MUR * CS ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6227052522103672}, {"determining": "( DDR / ( ( ( ( ( MDR * ( AMS - FirstVNF_CPU ) ) / FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( ( ( MDR * ( ( ( AMS - FirstVNF_CPU ) + FirstVNF_CPU_Server ) - ( AMS - ACS ) ) ) * ( MDR * ( FirstVNF_CPU_Server - Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - ( MDR * ( ACS - ( AMS - ACS ) ) ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( Min( ( ( RRSe - MLU ) + ( Max( ( RRSe - MUR ),( RMSe / MLU ) ) + MUR ) ) ,MUC ) + ( MUR * MUM ) ),Min( Min( Min( RRSe ,RRSe ) ,( MLU / MLU ) ) ,( RMSe / MLU ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( AMS / ( ( ( ( ( ( AMS - ( AMS - FirstVNF_CPU ) ) - FirstVNF_CPU ) + ACS ) - ( MDR / PN ) ) - ( MDR - AMS ) ) - ( ( MDR * ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) - ( ( BR + FirstVNF_CPU ) - FirstVNF_CPU ) ) ) / ( ( ( AMS - FirstVNF_CPU ) - FirstVNF_CPU ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) ) ) )", "choosing": "Max( ( Max( ( Min( RMSe ,MUC ) / ( MUR * MUM ) ),Min( ( ( MUC - MUC ) / ( ( RCSe - RRSe ) + ( DS + Min( RRSe ,DS ) ) ) ) ,Min( Min( MUC ,( MUR + Min( RRSe ,DS ) ) ) ,( MUC - MUC ) ) ) ) * MLU ),Max( ( MUM / ( MUR * MUM ) ),Min( Min( RRSe ,RMSe ) ,( RMSe / MLU ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.42088419222695933}]}