{"1": [{"determining": "( ( DDR / FirstVNF_Mem ) - ( ( FirstVNF_Mem * CRS ) + FirstVNF_Mem ) )", "choosing": "( ( RMSe / RCSe ) - ( RCSe / Min( ( ( Max( Min( MUR ,MUM ),( MLU / MUR ) ) + ( ( DS - Max( RMSe,MLU ) ) + RRSe ) ) / MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) * Max( CRS,MRS ) )", "choosing": "( Min( MLU ,MUC ) * Min( MUC ,DS ) )", "obj1": 0.3648148148148148, "obj2": 0.5905347658871408}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / Max( ( Const * ( MRS + FirstVNF_Mem_Server ) ),ARS ) )", "choosing": "Min( ( Max( ( MUM * RRSe ),( DS - DS ) ) + RCSe ) ,( RMSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RMSe ) * ( RRSe - MUR ) )", "obj1": 0.24074074074074073, "obj2": 0.6774796616040648}, {"determining": "( Min( DDR ,( FirstVNF_CPU_Server / ( RRS + FirstVNF_Mem ) ) ) - ( ACS / FirstVNF_CPU_Server ) )", "choosing": "( ( MUR / MUC ) + ( ( Min( ( Max( MUM,CS ) - MUR ) ,DS ) * ( ( DS / RRSe ) / RMSe ) ) / CS ) )", "obj1": 0.6685185185185185, "obj2": 0.36920372374376964}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) )", "choosing": "( ( DS * DS ) / Min( DS ,RMSe ) )", "obj1": 0.3962962962962963, "obj2": 0.5537843765341142}, {"determining": "Min( ( MRS * MRS ) ,( ACS - RRS ) )", "choosing": "Max( ( MUR * MUR ),( MUR / RRSe ) )", "obj1": 0.23703703703703705, "obj2": 0.7054963496746485}, {"determining": "Min( ( BR / FirstVNF_RAM ) ,Min( RRS ,Const ) )", "choosing": "( Max( MLU,DS ) / ( RMSe + RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.6330398099394993}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.8333333333333334, "obj2": 0.16427877748141717}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - Max( RRS,PN ) )", "choosing": "( Max( DS,MUM ) * ( DS * RCSe ) )", "obj1": 0.35555555555555557, "obj2": 0.6052184386068863}, {"determining": "Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - MLU ) * MLU ) * Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,Const ) * ( BR - ACS ) )", "choosing": "Min( Min( MUC ,CS ) ,( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR * Const ) / ( FirstVNF_RAM * PN ) ) ,( ( RRS + BR ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( MUR,DS ) / MUR ),( Min( MLU ,DS ) - MUC ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( PN * ACS ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU / RRSe ) / MUR ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.5588249665833029}, {"determining": "( Min( ( RRS * DDR ) ,( Const + BR ) ) - ( ( FirstVNF_Mem / MDR ) - ( RRS * ARS ) ) )", "choosing": "( ( RMSe * RMSe ) / ( RMSe - Min( RCSe ,( Max( MUC,( Min( RCSe ,CS ) * CS ) ) * Max( CS,Min( ( Min( MUM ,MUC ) * ( MUR - RCSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS / MRS ) / ( BR - Min( ( RRS / AMS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.5074074074074074, "obj2": 0.41775286417172086}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) + ( ACS + FirstVNF_Mem ) ) * ( ( MDR * DDR ) * ( RRS - ARS ) ) )", "choosing": "Max( ( ( RRSe / MLU ) - ( MUC + MUR ) ),Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( ( ( Min( ( RRSe / Min( ( DS / CS ) ,MUR ) ) ,RRSe ) / MLU ) + ( Max( ( RMSe + CS ),MLU ) - Min( RRSe ,RMSe ) ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.19444444444444445, "obj2": 0.7114081594220554}, {"determining": "( ( ( FirstVNF_RAM + RRS ) - ( AMS + ACS ) ) / ( ( PN * FirstVNF_Mem ) + ( ARS + CRS ) ) )", "choosing": "( ( Max( RCSe,MUC ) * ( RMSe * DS ) ) * Min( ( MUR - MLU ) ,( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server - AMS ) - Max( MDR,ARS ) ) ,( ( FirstVNF_RAM_Server + MRS ) / Min( PN ,PN ) ) )", "choosing": "( ( MLU / CS ) + Max( ( RRSe + DS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - PN ) ,( ( FirstVNF_RAM + BR ) * Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( RMSe,RRSe ) ,( DS + DS ) ) / Max( Max( RRSe,MUC ),Max( MUC,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,ARS ) * ( Const - FirstVNF_RAM_Server ) ) / ( Max( ARS,AMS ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "Max( Min( Max( MUC,RCSe ) ,Max( MLU,RCSe ) ),Max( ( MUC - MUR ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - BR ) - ( MDR / CRS ) )", "choosing": "( ( ( RRSe / MUR ) - ( MUM / RMSe ) ) * ( Min( DS ,CS ) / Max( MLU,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR + MRS ) * FirstVNF_RAM_Server ) * Min( ( ACS + ( PN / FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - ( Min( Min( MUC ,( Min( MUC ,MUR ) + Max( RMSe,RRSe ) ) ) ,Max( ( CS + ( MUR / MUC ) ),MLU ) ) - CS ) ) * ( MUC - RCSe ) ) - ( CS - MUC ) )", "obj1": 0.2518518518518518, "obj2": 0.6474559975062952}, {"determining": "( ( MDR - DDR ) - ( Min( FirstVNF_RAM_Server ,PN ) - PN ) )", "choosing": "( ( MLU + ( MLU - MUC ) ) / ( DS + MLU ) )", "obj1": 0.9925925925925926, "obj2": 0.010304325633726083}, {"determining": "( ( BR - FirstVNF_Mem ) / ( ( FirstVNF_RAM / Const ) / MRS ) )", "choosing": "( ( MUR * MUM ) + ( MUC * Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ),( Max( ( FirstVNF_CPU - Const ),Min( Const ,MRS ) ) + Max( ( FirstVNF_Mem * BR ),( RRS * PN ) ) ) )", "choosing": "( Min( DS ,MUC ) / Min( MUR ,( MUR / RRSe ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5730937693097072}, {"determining": "( Min( Max( Max( AMS,FirstVNF_Mem_Server ),( PN * RRS ) ) ,Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,( AMS - MDR ) ) ) / Min( ( ( AMS + PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( Min( RRS ,ACS ) + ( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) + ( RRSe / RCSe ) ) * ( ( MUM + MUM ) / ( MUM * DS ) ) ) - ( ( Min( RCSe ,DS ) + Max( RMSe,MLU ) ) / Min( ( RMSe + MUM ) ,Max( MUR,RCSe ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.8103208621012737}, {"determining": "( ( ( ( FirstVNF_Mem * Max( AMS,Min( Max( MDR,RRS ) ,ARS ) ) ) + ( PN - PN ) ) * ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( ( ( Const + FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / AMS ) ) - Min( Max( PN,FirstVNF_RAM_Server ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( MUR,( CS / ( MLU * MUM ) ) ),( ( RMSe * RRSe ) + ( CS * ( MLU - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / MDR ) / Max( RRS,DDR ) ) * ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) - ( ( Max( ACS,MRS ) / Min( RRS ,MDR ) ) + ( ( FirstVNF_CPU_Server - MDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,Min( RCSe ,RRSe ) ) - Max( Min( MUC ,CS ),Max( MLU,MUR ) ) ) + Min( ( ( MLU * RMSe ) + Max( RMSe,RMSe ) ) ,( ( RMSe - MUR ) - ( DS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Max( FirstVNF_RAM_Server,MDR ) ,( ( AMS - FirstVNF_RAM_Server ) / PN ) )", "choosing": "( ( ( Max( MLU,MUR ) + ( CS + RRSe ) ) + Min( ( CS + DS ) ,( CS - RCSe ) ) ) * ( ( Max( MUC,MUC ) - ( MUM / MUR ) ) / ( ( RRSe - MLU ) / ( MLU / MUM ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.3410149209960168}, {"determining": "( ( FirstVNF_RAM / ARS ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.799199463401918}, {"determining": "( Max( ( PN * FirstVNF_CPU ),FirstVNF_CPU_Server ) + ( ( ( ACS * MDR ) / ( ACS / FirstVNF_RAM ) ) - FirstVNF_RAM_Server ) )", "choosing": "( Min( ( ( CS - RRSe ) - Min( RCSe ,MUC ) ) ,Max( ( RCSe + DS ),Max( MUM,DS ) ) ) - Max( Min( Max( DS,MLU ) ,( MUR * RMSe ) ),( Max( MUR,MLU ) / ( MUM - MUR ) ) ) )", "obj1": 0.17962962962962964, "obj2": 0.7621520282581749}, {"determining": "( Min( Const ,BR ) + ( RRS / ( ( FirstVNF_RAM_Server * AMS ) * FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( CS * MUR ) + ( MUR / DS ) ) * ( Max( MUC,CS ) / Min( MUR ,MUC ) ) ) - Min( ( ( MUM / MUM ) * ( DS * MUM ) ) ,( Min( RCSe ,MLU ) + ( RRSe + CS ) ) ) )", "obj1": 0.1259259259259259, "obj2": 0.8411881371076131}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( ARS / MRS ) ) + ( ( ARS - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( ( Min( BR ,ARS ) * ( RRS / FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_Mem ,ARS ) - ( PN + ACS ) ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,Max( CS,RRSe ) ) + ( Max( RCSe,MUR ) + ( DS / RCSe ) ) ) * Max( ( ( MLU / MUM ) * ( MUR + CS ) ),( Min( RCSe ,CS ) / ( RMSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ACS ) - ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,BR ) ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( Max( CRS,( ( FirstVNF_RAM + DDR ) / ( PN * DDR ) ) ),Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Min( RMSe ,MUC ) ,( MUC * RRSe ) ) - ( ( RRSe * MUC ) * ( DS * RRSe ) ) ) ,( Min( ( CS / RRSe ) ,Min( MLU ,MLU ) ) - ( ( CS * MUR ) + Min( CS ,MLU ) ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}], "2": [{"determining": "( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( ARS / MRS ) ) + ( ( ARS - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( ( Min( BR ,ARS ) * ( RRS / FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_Mem ,ARS ) - ( PN + ACS ) ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,Max( CS,RRSe ) ) + ( Max( RCSe,MUR ) + ( DS / RCSe ) ) ) * Max( ( ( MLU / MUM ) * ( MUR + CS ) ),( Min( RCSe ,CS ) / ( RMSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR / FirstVNF_Mem ) - ( ( FirstVNF_Mem * CRS ) + FirstVNF_Mem ) )", "choosing": "( ( RMSe / RCSe ) - ( RCSe / Min( ( ( Max( Min( MUR ,MUM ),( MLU / MUR ) ) + ( ( DS - Max( RMSe,MLU ) ) + RRSe ) ) / MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,RMSe ) )", "obj1": 0.11481481481481481, "obj2": 0.823283539870336}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( ACS / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - MUR ) - Min( CS ,CS ) )", "obj1": 0.6666666666666666, "obj2": 0.3105180704741585}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.8333333333333334, "obj2": 0.16427877748141717}, {"determining": "( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( RMSe / RCSe ) - ( RCSe / RCSe ) )", "obj1": 0.7666666666666667, "obj2": 0.24531157566994666}, {"determining": "( AMS - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( RMSe - ( RCSe / RCSe ) )", "obj1": 0.8574074074074074, "obj2": 0.11785469881659993}, {"determining": "( Min( ( MDR + Const ) ,FirstVNF_RAM ) - ( FirstVNF_CPU + PN ) )", "choosing": "( ( RCSe - Min( RRSe ,MUR ) ) + ( RCSe + Max( MLU,MLU ) ) )", "obj1": 0.7685185185185185, "obj2": 0.235477400549497}, {"determining": "( ( ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) / MRS ) / ( BR - MRS ) )", "choosing": "( ( ( MLU / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5314814814814814, "obj2": 0.3889206879923489}, {"determining": "( ( FirstVNF_Mem_Server / ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) + ( ACS / ACS ) )", "choosing": "( ( RCSe - Min( RCSe ,MUR ) ) + RCSe )", "obj1": 0.6314814814814815, "obj2": 0.34817657909648037}, {"determining": "( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ARS ) ) ,( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( RRS * MRS ) ) ) + ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) )", "choosing": "Min( ( Min( ( ( Max( MLU,Max( MUM,RMSe ) ) / ( Max( ( RRSe / RMSe ),RMSe ) + RRSe ) ) - RCSe ) ,RRSe ) * DS ) ,Max( MLU,CS ) )", "obj1": 0.6092592592592593, "obj2": 0.38363583781129534}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS * FirstVNF_RAM ) ),Max( FirstVNF_Mem,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( DS + MUM ),Max( RMSe,RRSe ) ) * ( Min( DS ,MLU ) + MUM ) ) - RMSe ) )", "obj1": 0.47962962962962963, "obj2": 0.4457492202986883}, {"determining": "( Min( CRS ,( Max( AMS,FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + CS ) * ( RRSe - ( ( ( RRSe / RMSe ) / MUR ) / RCSe ) ) )", "obj1": 0.4425925925925926, "obj2": 0.5019838901288004}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.937037037037037, "obj2": 0.03915502160550257}, {"determining": "Min( ( ACS - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( MUR / MUC ) + ( MUM * CS ) ) - RMSe ) )", "obj1": 0.3962962962962963, "obj2": 0.5268752116268406}, {"determining": "( ( MDR - DDR ) - ( Min( FirstVNF_RAM_Server ,PN ) - PN ) )", "choosing": "( ( MLU + ( MLU - MUC ) ) / ( DS + MLU ) )", "obj1": 0.9925925925925926, "obj2": 0.010304325633726083}, {"determining": "( Max( PN,( ( PN + ( BR * MRS ) ) * ( BR / Max( RRS,ARS ) ) ) ) / ( BR - MRS ) )", "choosing": "( ( Min( DS ,MUM ) / MUM ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.4537037037037037, "obj2": 0.47413627084713944}, {"determining": "( ( ACS - FirstVNF_Mem ) / ( Min( FirstVNF_Mem ,BR ) + FirstVNF_RAM ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.3, "obj2": 0.6099873187905762}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / Const ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( RCSe / RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( ( ( PN / FirstVNF_RAM_Server ) / ( MRS - FirstVNF_RAM ) ) * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUR / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6883427394665143}, {"determining": "Min( ( ( DDR * Const ) / ( FirstVNF_RAM * PN ) ) ,( ( RRS + BR ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( MUR,DS ) / MUR ),( Min( MLU ,DS ) - MUC ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( FirstVNF_RAM / BR ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUM / DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) )", "obj1": 0.3351851851851852, "obj2": 0.6014808154970028}, {"determining": "( ( AMS - Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) / Min( ( MDR - MRS ) ,ACS ) )", "choosing": "( ( MUR / MLU ) + ( Min( RCSe ,Max( CS,( ( MUM * ( ( MUR - RRSe ) * MUM ) ) - RCSe ) ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.837037037037037, "obj2": 0.128353243246398}, {"determining": "( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.17407407407407408, "obj2": 0.7366767270120771}, {"determining": "Max( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ),( Max( ( FirstVNF_CPU - Const ),Min( Const ,MRS ) ) + Max( ( FirstVNF_Mem * BR ),( RRS * PN ) ) ) )", "choosing": "( Min( DS ,MUC ) / Min( MUR ,( MUR / RRSe ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5730937693097072}, {"determining": "( ( MRS / MRS ) / ( BR - Min( ( RRS / AMS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.5074074074074074, "obj2": 0.41775286417172086}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RMSe ) * ( RRSe - MUR ) )", "obj1": 0.24074074074074073, "obj2": 0.6774796616040648}, {"determining": "( ( ACS + CRS ) * ( ( FirstVNF_CPU_Server / ACS ) + ( FirstVNF_Mem / ( Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,RRS ) * MRS ) ) ) )", "choosing": "( ( ( ( Max( CS,( MUC * ( DS + MUM ) ) ) / Min( CS ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.15555555555555556, "obj2": 0.7788213300696499}, {"determining": "Min( ( BR / FirstVNF_RAM ) ,Min( RRS ,Const ) )", "choosing": "( Max( MLU,DS ) / ( RMSe + RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.6330398099394993}, {"determining": "( ( PN - MRS ) / ( Max( CRS,Const ) - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + Max( MUM,RMSe ) ) + Max( RRSe,RCSe ) ) )", "obj1": 0.5074074074074074, "obj2": 0.41775286417172086}, {"determining": "Max( Max( MRS,BR ),( ARS - FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7647314667919485}, {"determining": "( Min( Max( Min( Const ,PN ),( BR / DDR ) ) ,PN ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( RCSe / DS ) ) / ( Min( ( MLU + ( MLU - DS ) ) ,MUM ) / MUC ) )", "obj1": 0.18888888888888888, "obj2": 0.7199148609311324}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( Min( AMS ,ACS ) * Max( CRS,DDR ) ) + DDR ) )", "choosing": "( ( DS * DS ) / ( MUR + ( RRSe * DS ) ) )", "obj1": 0.387037037037037, "obj2": 0.5557788561833601}, {"determining": "( FirstVNF_Mem_Server / ( ( ( FirstVNF_CPU_Server - MDR ) / Max( FirstVNF_Mem,PN ) ) - ( ( PN / FirstVNF_RAM_Server ) / ( MRS - FirstVNF_RAM ) ) ) )", "choosing": "Min( Max( MLU,RRSe ) ,( ( Max( Min( RRSe ,DS ),( DS + MLU ) ) * Min( ( DS - MUC ) ,Max( CS,DS ) ) ) / DS ) )", "obj1": 0.35555555555555557, "obj2": 0.5909872314441954}, {"determining": "Min( ( FirstVNF_RAM - CRS ) ,( FirstVNF_Mem + DDR ) )", "choosing": "( ( DS * DS ) / MUR )", "obj1": 0.3888888888888889, "obj2": 0.5538342793321438}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) / ( Max( AMS,( AMS + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RMSe ) * ( ( Min( CS ,Max( ( RMSe - MUR ),( ( ( MUR * CS ) / RRSe ) + RMSe ) ) ) / MUM ) - MUR ) )", "obj1": 0.24444444444444444, "obj2": 0.6518323339124772}, {"determining": "( Min( Max( Max( AMS,FirstVNF_Mem_Server ),( PN * RRS ) ) ,Min( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) ,( AMS - MDR ) ) ) / Min( ( ( AMS + PN ) + Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) ,( Min( RRS ,ACS ) + ( FirstVNF_Mem_Server / Const ) ) ) )", "choosing": "( ( ( ( RCSe / RMSe ) + ( RRSe / RCSe ) ) * ( ( MUM + MUM ) / ( MUM * DS ) ) ) - ( ( Min( RCSe ,DS ) + Max( RMSe,MLU ) ) / Min( ( RMSe + MUM ) ,Max( MUR,RCSe ) ) ) )", "obj1": 0.13148148148148148, "obj2": 0.8103208621012737}, {"determining": "Min( ( BR / FirstVNF_RAM ) ,Min( RRS ,Const ) )", "choosing": "( Max( MLU,DS ) / ( RMSe + RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.6330398099394993}, {"determining": "( ( ( DDR / Const ) / FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU - RRS ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS / RCSe ) + Min( RRSe ,MLU ) ) - Max( ( DS - MLU ),( RCSe * RCSe ) ) ) / ( Min( ( RMSe / RCSe ) ,Min( MLU ,MUR ) ) - ( ( CS / MUC ) / ( DS * DS ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.8205017457532469}, {"determining": "( ( ( ACS * DDR ) / Max( BR,ACS ) ) - ( FirstVNF_RAM_Server * Const ) )", "choosing": "( ( Max( ( MLU * CS ),( RRSe + MUR ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.13703703703703704, "obj2": 0.799199463401918}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.19444444444444445, "obj2": 0.7114081594220554}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) * Max( CRS,MRS ) )", "choosing": "( Min( MLU ,MUC ) * Min( MUC ,DS ) )", "obj1": 0.3648148148148148, "obj2": 0.5905347658871408}, {"determining": "( ( ( Const * ( MRS + Const ) ) * MDR ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,Min( ( Min( RRSe ,DS ) - MUR ) ,Min( ( MLU / MUR ) ,Max( ( MUM - ( RCSe / MUC ) ),( ( ( MUM + RCSe ) * DS ) / ( Min( DS ,MLU ) / RCSe ) ) ) ) ) ) - Min( RMSe ,MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server - AMS ) - Max( MDR,ARS ) ) ,( ( FirstVNF_RAM_Server + MRS ) / Min( PN ,PN ) ) ) + Max( ACS,RRS ) ) * ( ( Const + AMS ) * Max( DDR,Const ) ) )", "choosing": "Max( ( RMSe - CS ),( RRSe / MUC ) )", "obj1": 0.16666666666666666, "obj2": 0.7756045482222936}, {"determining": "( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ARS ) ) ,( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( RRS * MRS ) ) ) + ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) )", "choosing": "Min( ( Min( ( ( Max( MLU,Max( MUM,RMSe ) ) / ( Max( ( RRSe / RMSe ),RMSe ) + RRSe ) ) - RCSe ) ,RRSe ) * DS ) ,Max( MLU,CS ) )", "obj1": 0.6092592592592593, "obj2": 0.38363583781129534}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.19444444444444445, "obj2": 0.7114081594220554}, {"determining": "( ( FirstVNF_RAM / ARS ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.799199463401918}, {"determining": "Max( Max( CRS,( ( FirstVNF_RAM + DDR ) / ( PN * DDR ) ) ),Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Min( RMSe ,MUC ) ,( MUC * RRSe ) ) - ( ( RRSe * MUC ) * ( DS * RRSe ) ) ) ,( Min( ( CS / RRSe ) ,Min( MLU ,MLU ) ) - ( ( CS * MUR ) + Min( CS ,MLU ) ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RMSe ) * ( RRSe - MUR ) )", "obj1": 0.24074074074074073, "obj2": 0.6774796616040648}, {"determining": "( Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MRS,ACS ) ),ACS ) + ( ARS - ( MDR + MRS ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( MUR + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.6514213112809841}, {"determining": "Min( ( CRS / AMS ) ,Min( PN ,ACS ) )", "choosing": "( ( ( MLU + DS ) * ( MUM - RCSe ) ) - ( ( RCSe - ( RCSe - ( ( RMSe + MUM ) - DS ) ) ) - ( MLU - MLU ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6474559975062952}, {"determining": "( ( ( MDR + MRS ) * FirstVNF_RAM_Server ) * Min( ( ACS + ( PN / FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - ( Min( Min( MUC ,( Min( MUC ,MUR ) + Max( RMSe,RRSe ) ) ) ,Max( ( CS + ( MUR / MUC ) ),MLU ) ) - CS ) ) * ( MUC - RCSe ) ) - ( CS - MUC ) )", "obj1": 0.2518518518518518, "obj2": 0.6474559975062952}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / Max( ( Const * ( MRS + FirstVNF_Mem_Server ) ),ARS ) )", "choosing": "Min( ( Max( ( MUM * RRSe ),( DS - DS ) ) + RCSe ) ,( RMSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - MLU ) * MLU ) * Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,Const ) * ( BR - ACS ) )", "choosing": "Min( Min( MUC ,CS ) ,( DS / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,( Const + BR ) ) - ( ( FirstVNF_Mem / MDR ) - ( RRS * ARS ) ) )", "choosing": "( ( RMSe * RMSe ) / ( RMSe - Min( RCSe ,( Max( MUC,( Min( RCSe ,CS ) * CS ) ) * Max( CS,Min( ( Min( MUM ,MUC ) * ( MUR - RCSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_Mem_Server * DDR ) + ( ACS + FirstVNF_Mem ) ) * ( ( MDR * DDR ) * ( RRS - ARS ) ) )", "choosing": "Max( ( ( RRSe / MLU ) - ( MUC + MUR ) ),Max( RCSe,RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem_Server,CRS ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( FirstVNF_RAM / FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( ( ( Min( ( RRSe / Min( ( DS / CS ) ,MUR ) ) ,RRSe ) / MLU ) + ( Max( ( RMSe + CS ),MLU ) - Min( RRSe ,RMSe ) ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_RAM + RRS ) - ( AMS + ACS ) ) / ( ( PN * FirstVNF_Mem ) + ( ARS + CRS ) ) )", "choosing": "( ( Max( RCSe,MUC ) * ( RMSe * DS ) ) * Min( ( MUR - MLU ) ,( MUM + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server - AMS ) - Max( MDR,ARS ) ) ,( ( FirstVNF_RAM_Server + MRS ) / Min( PN ,PN ) ) )", "choosing": "( ( MLU / CS ) + Max( ( RRSe + DS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( CRS - PN ) ,( ( FirstVNF_RAM + BR ) * Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( RMSe,RRSe ) ,( DS + DS ) ) / Max( Max( RRSe,MUC ),Max( MUC,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,ARS ) * ( Const - FirstVNF_RAM_Server ) ) / ( Max( ARS,AMS ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "Max( Min( Max( MUC,RCSe ) ,Max( MLU,RCSe ) ),Max( ( MUC - MUR ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS - FirstVNF_CPU_Server ) - BR ) - ( MDR / CRS ) )", "choosing": "( ( ( RRSe / MUR ) - ( MUM / RMSe ) ) * ( Min( DS ,CS ) / Max( MLU,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( BR - FirstVNF_Mem ) / ( ( FirstVNF_RAM / Const ) / MRS ) )", "choosing": "( ( MUR * MUM ) + ( MUC * Min( CS ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * Max( AMS,Min( Max( MDR,RRS ) ,ARS ) ) ) + ( PN - PN ) ) * ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( ( ( Const + FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / AMS ) ) - Min( Max( PN,FirstVNF_RAM_Server ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( MUR,( CS / ( MLU * MUM ) ) ),( ( RMSe * RRSe ) + ( CS * ( MLU - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / MDR ) / Max( RRS,DDR ) ) * ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) - ( ( Max( ACS,MRS ) / Min( RRS ,MDR ) ) + ( ( FirstVNF_CPU_Server - MDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,Min( RCSe ,RRSe ) ) - Max( Min( MUC ,CS ),Max( MLU,MUR ) ) ) + Min( ( ( MLU * RMSe ) + Max( RMSe,RMSe ) ) ,( ( RMSe - MUR ) - ( DS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( ARS / MRS ) ) + ( ( ARS - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( ( Min( BR ,ARS ) * ( RRS / FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_Mem ,ARS ) - ( PN + ACS ) ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,Max( CS,RRSe ) ) + ( Max( RCSe,MUR ) + ( DS / RCSe ) ) ) * Max( ( ( MLU / MUM ) * ( MUR + CS ) ),( Min( RCSe ,CS ) / ( RMSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ACS ) - ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,BR ) ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / Min( ( DDR + FirstVNF_CPU ) ,( ARS + Min( Max( ( MRS + FirstVNF_CPU ),AMS ) ,( AMS - PN ) ) ) ) ) / ( BR - FirstVNF_Mem ) )", "choosing": "( Min( Min( DS ,( CS * ( Max( MUM,Max( MUM,( DS - DS ) ) ) / MUM ) ) ) ,( RCSe + Min( ( MUR + DS ) ,MLU ) ) ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,( Const + BR ) ) - ( ( FirstVNF_Mem / MDR ) - ( RRS * ARS ) ) )", "choosing": "( ( RMSe * RMSe ) / ( RMSe - Min( RCSe ,( Max( MUC,( Min( RCSe ,CS ) * CS ) ) * Max( CS,Min( ( Min( MUM ,MUC ) * ( MUR - RCSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * Max( AMS,Min( Max( MDR,RRS ) ,ARS ) ) ) + ( PN - PN ) ) * ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( ( ( Const + FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / AMS ) ) - Min( Max( PN,FirstVNF_RAM_Server ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( MUR,( CS / ( MLU * MUM ) ) ),( ( RMSe * RRSe ) + ( CS * ( MLU - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,( Const + BR ) ) - ( ( FirstVNF_Mem / MDR ) - ( RRS * ARS ) ) )", "choosing": "( ( RMSe * RMSe ) / ( RMSe - Min( RCSe ,( Max( MUC,( Min( RCSe ,CS ) * CS ) ) * Max( CS,Min( ( Min( MUM ,MUC ) * ( MUR - RCSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * Max( AMS,Min( Max( MDR,RRS ) ,ARS ) ) ) + ( PN - PN ) ) * ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( ( ( Const + FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / AMS ) ) - Min( Max( PN,FirstVNF_RAM_Server ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( MUR,( CS / ( MLU * MUM ) ) ),( ( RMSe * RRSe ) + ( CS * ( MLU - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,( Const + BR ) ) - ( ( FirstVNF_Mem / MDR ) - ( RRS * ARS ) ) )", "choosing": "( ( RMSe * RMSe ) / ( RMSe - Min( RCSe ,( Max( MUC,( Min( RCSe ,CS ) * CS ) ) * Max( CS,Min( ( Min( MUM ,MUC ) * ( MUR - RCSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * Max( AMS,Min( Max( MDR,RRS ) ,ARS ) ) ) + ( PN - PN ) ) * ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( ( ( Const + FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / AMS ) ) - Min( Max( PN,FirstVNF_RAM_Server ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( MUR,( CS / ( MLU * MUM ) ) ),( ( RMSe * RRSe ) + ( CS * ( MLU - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( RRS * DDR ) ,( Const + BR ) ) - ( ( FirstVNF_Mem / MDR ) - ( RRS * ARS ) ) )", "choosing": "( ( RMSe * RMSe ) / ( RMSe - Min( RCSe ,( Max( MUC,( Min( RCSe ,CS ) * CS ) ) * Max( CS,Min( ( Min( MUM ,MUC ) * ( MUR - RCSe ) ) ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( FirstVNF_Mem * Max( AMS,Min( Max( MDR,RRS ) ,ARS ) ) ) + ( PN - PN ) ) * ( Max( FirstVNF_Mem,MRS ) - ( FirstVNF_CPU_Server / MDR ) ) ) * ( ( ( Const + FirstVNF_CPU_Server ) / ( FirstVNF_CPU_Server / AMS ) ) - Min( Max( PN,FirstVNF_RAM_Server ) ,( MRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "Max( Max( MUR,( CS / ( MLU * MUM ) ) ),( ( RMSe * RRSe ) + ( CS * ( MLU - RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( PN,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( BR * DDR ) - FirstVNF_RAM ) ) / ( Max( ARS,AMS ) / ( Max( MDR,FirstVNF_Mem_Server ) - MRS ) ) )", "choosing": "Max( Max( Max( ( CS * MUR ),RCSe ),Max( ( ( MUC + Min( MUM ,DS ) ) + ( RRSe - RMSe ) ),CS ) ),Max( ( MUC - MUR ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) / ( Max( AMS,ARS ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( MUM + RCSe ) + MUM ) + ( RRSe / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ARS ,Const ) * ( BR - ACS ) )", "choosing": "( ( MUM - RMSe ) * ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( RMSe / RCSe ) - Min( RRSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,ARS ) * ( Const - FirstVNF_RAM_Server ) ) / ( ( ( ( ( FirstVNF_RAM_Server * FirstVNF_Mem ) / ( FirstVNF_Mem + MDR ) ) * Max( ( MRS - FirstVNF_Mem ),( FirstVNF_Mem_Server / RRS ) ) ) - Min( Min( Max( CRS,ACS ) ,( PN - FirstVNF_RAM_Server ) ) ,( Min( DDR ,DDR ) - ( FirstVNF_RAM_Server + PN ) ) ) ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "Max( Min( Max( MUC,RCSe ) ,Max( MLU,RCSe ) ),( ( MLU + CS ) - ( RMSe + RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( FirstVNF_Mem_Server ,ARS ) * ( Const - FirstVNF_RAM_Server ) ) / ( Max( ARS,AMS ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "Max( Min( Max( MUC,RCSe ) ,Max( MLU,RCSe ) ),Max( ( MUC - MUR ),Min( DS ,DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( FirstVNF_Mem_Server ,PN ) + ( RRS - ARS ) )", "choosing": "( ( DS - RMSe ) * ( RCSe + RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ACS ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU / RRSe ) / MUR ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ACS ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU / RRSe ) / MUR ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ACS ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU / RRSe ) / MUR ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ACS ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU / RRSe ) / MUR ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( ARS / FirstVNF_Mem ) ) + ( RRS / FirstVNF_RAM_Server ) ) * Min( ( FirstVNF_CPU_Server * FirstVNF_CPU ) ,( ( Max( ACS,MRS ) / ( CRS / ARS ) ) - ( PN + ACS ) ) ) )", "choosing": "( ( Min( ( MUR / MUM ) ,Max( CS,RRSe ) ) + ( ( ( Min( MUC ,( CS - RCSe ) ) / DS ) * ( MUM - CS ) ) + ( DS / RCSe ) ) ) * Max( ( ( MLU / MUM ) * ( MUR + CS ) ),( Min( ( CS - DS ) ,CS ) / ( RMSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( ARS / MRS ) ) + ( RRS * FirstVNF_RAM ) ) * Min( ( Min( BR ,ARS ) * ( RRS / RRS ) ) ,( Min( FirstVNF_Mem ,ARS ) - ( PN + ACS ) ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,Max( CS,RRSe ) ) + ( Max( MUR,RCSe ) + ( DS / RCSe ) ) ) * Max( ( ( MLU / MUM ) / ( MUR + CS ) ),( ( RRSe + RRSe ) * MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / MDR ) / Max( RRS,DDR ) ) * ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) - ( FirstVNF_CPU + ACS ) )", "choosing": "( ( Min( Min( MUR ,MUM ) ,Min( RCSe ,RRSe ) ) - Max( Min( MUC ,CS ),Max( MLU,MUR ) ) ) + Min( ( ( MLU * RMSe ) + Max( RMSe,RMSe ) ) ,( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( MRS / MDR ) / Max( RRS,DDR ) ) * ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) - ( ( Max( ACS,MRS ) / Min( RRS ,MDR ) ) + ( ( FirstVNF_CPU_Server - MDR ) - ( FirstVNF_RAM_Server * FirstVNF_CPU ) ) ) )", "choosing": "( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ACS ) - ( Min( ( PN / MRS ) ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU / RRSe ) / MUR ) / Max( ( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) ),Min( DS ,RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ACS ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server - AMS ) - Max( MDR,ARS ) ) ,( ( FirstVNF_RAM_Server + CRS ) / Min( PN ,PN ) ) )", "choosing": "( RRSe + Max( ( RRSe + DS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server - AMS ) - Max( MDR,ARS ) ) ,( ( FirstVNF_RAM_Server + MRS ) / Min( PN ,PN ) ) )", "choosing": "( ( MLU / CS ) + Max( ( RRSe + DS ),RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server + FirstVNF_RAM ) - ( ( Max( DDR,FirstVNF_Mem ) + Max( ACS,RRS ) ) * ( ( Const + AMS ) * Max( DDR,Const ) ) ) )", "choosing": "( ( RMSe - MLU ) * ( DS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( AMS * ACS ) - ( FirstVNF_Mem + Max( FirstVNF_RAM_Server,BR ) ) )", "choosing": "( ( ( MUM / DS ) + MUM ) - ( DS / ( RCSe - MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ARS * DDR ) / ( ( ( DDR - FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,ARS ) ) / AMS ) )", "choosing": "( Max( DS,RCSe ) + Min( RMSe ,MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( DDR - FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,( ( ARS * DDR ) / ( FirstVNF_Mem / AMS ) ) ) )", "choosing": "Min( RCSe ,( DS - CS ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( PN * CRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ,( ARS / MRS ) ) + ( ( ARS - CRS ) + ( FirstVNF_RAM_Server / FirstVNF_CPU ) ) ) * Min( ( Min( BR ,ARS ) * ( RRS / FirstVNF_Mem_Server ) ) ,( Min( FirstVNF_Mem ,ARS ) - ( PN + ACS ) ) ) )", "choosing": "( ( Min( ( DS / MUM ) ,Max( CS,RRSe ) ) + ( Max( RCSe,MUR ) + ( DS / RCSe ) ) ) * Max( ( ( MLU / MUM ) * ( MUR + CS ) ),( Min( RCSe ,CS ) / ( RMSe * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,RMSe ) )", "obj1": 0.11481481481481481, "obj2": 0.823283539870336}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( Min( MLU ,MUC ) * Min( MUC ,DS ) )", "obj1": 0.5833333333333334, "obj2": 0.368852300122612}, {"determining": "( Min( CRS ,( Max( AMS,FirstVNF_RAM_Server ) / ( FirstVNF_RAM * FirstVNF_Mem ) ) ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + CS ) * ( RRSe - ( ( ( RRSe / RMSe ) / MUR ) / RCSe ) ) )", "obj1": 0.4425925925925926, "obj2": 0.5019838901288004}, {"determining": "( ( MDR - DDR ) - ( Min( FirstVNF_RAM_Server ,PN ) - PN ) )", "choosing": "( ( MLU + ( MLU - MUC ) ) / ( DS + MLU ) )", "obj1": 0.9925925925925926, "obj2": 0.010304325633726083}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MLU / RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.3907407407407407, "obj2": 0.5164443200950254}, {"determining": "( Max( PN,( ( PN + ( BR * MRS ) ) * ( BR / Max( RRS,ARS ) ) ) ) / ( BR - MRS ) )", "choosing": "( ( Min( DS ,MUM ) / MUM ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.4537037037037037, "obj2": 0.47413627084713944}, {"determining": "( ( PN * ACS ) - ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( Min( MUR ,( MUR / RRSe ) ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.8907407407407407, "obj2": 0.10362885987657836}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.9388888888888889, "obj2": 0.0384485165101833}, {"determining": "( ( ARS - Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( DDR + FirstVNF_Mem ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.14821059655093693}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server - AMS ) - Max( MDR,ARS ) ) ,( ( FirstVNF_RAM_Server + MRS ) / Min( PN ,PN ) ) ) + Max( ACS,RRS ) ) * ( ( Const + AMS ) * Max( DDR,Const ) ) )", "choosing": "( ( RRSe + CS ) * ( RRSe - MUR ) )", "obj1": 0.7944444444444444, "obj2": 0.19382725440315554}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( RMSe / MUM ) - ( RCSe / RCSe ) )", "obj1": 0.6222222222222222, "obj2": 0.34782434695662784}, {"determining": "( ( MRS / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + ( Max( RRSe,MUR ) - ( CS * DS ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.37999495354315643}, {"determining": "( ( PN * ACS ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( RRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( MLU / RRSe ) / MUR ) / Max( Max( MUC,( Min( RCSe ,CS ) * CS ) ),Min( DS ,RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.20204439274344194}, {"determining": "( Min( CRS ,( ( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) / ( ( Const + AMS ) - Max( DDR,Const ) ) ) ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( Max( ( RMSe - CS ),( RRSe / MUC ) ) * ( RRSe - Min( ( ( RRSe - ( RRSe - MUR ) ) / MUM ) ,MLU ) ) )", "obj1": 0.7055555555555556, "obj2": 0.2823498196409668}, {"determining": "Min( ( Max( MDR,MRS ) - Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) ,Max( ( MDR * AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( Min( ( MUC - MUR ) ,MUM ) ,RCSe ) / Max( CS,( MUC * ( ( MUM * RRSe ) + MUM ) ) ) ) + DS ) * ( MUM - MUR ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.3814814814814815, "obj2": 0.5389910383456602}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_CPU_Server * Max( CRS,MRS ) ) + ( CRS + Min( ( BR / FirstVNF_Mem ) ,MRS ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / Min( RMSe ,Min( MUR ,MUM ) ) ) ) - DS ) ,Max( MUC,MUM ) )", "obj1": 0.9055555555555556, "obj2": 0.06259240255221528}, {"determining": "( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( RMSe / RCSe ) - ( RCSe / RCSe ) )", "obj1": 0.7666666666666667, "obj2": 0.24531157566994666}, {"determining": "( ( Min( FirstVNF_Mem_Server ,ARS ) * ( Const - ( FirstVNF_RAM + DDR ) ) ) / ( Max( ARS,AMS ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "Max( ( ( RMSe - MUR ) - Min( CS ,CS ) ),Max( ( MUC - MUR ),Min( DS ,DS ) ) )", "obj1": 0.7203703703703703, "obj2": 0.2511540612285824}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,Max( MRS,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RMSe ,RCSe ) - ( ( ( ( DS + RRSe ) + ( DS * RRSe ) ) + ( DS + ( MLU / RMSe ) ) ) - RRSe ) ) / MUM ) - MUR ) / ( MLU + ( RRSe * DS ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7521842248497013}, {"determining": "( ( AMS * ACS ) - FirstVNF_Mem )", "choosing": "( ( Max( Max( MUC,( RCSe - Min( RCSe ,MUR ) ) ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5939707635524251}, {"determining": "( ( Min( FirstVNF_Mem_Server ,MDR ) * ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) ) / ( Max( AMS,ARS ) / ( FirstVNF_Mem_Server - MRS ) ) )", "choosing": "( ( ( MUM + RCSe ) + MUM ) + ( RRSe / RMSe ) )", "obj1": 0.6944444444444444, "obj2": 0.3024639633907061}, {"determining": "( ( ACS - FirstVNF_Mem ) / ( Min( FirstVNF_Mem ,BR ) + FirstVNF_RAM ) )", "choosing": "( ( ( MLU / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5825152125730108}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.20925925925925926, "obj2": 0.6834978828724176}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8111111111111111, "obj2": 0.12883002038594732}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( ( MUC * ( DS + MUM ) ) + MUM ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.4777777777777778, "obj2": 0.4475645306678303}, {"determining": "( ( CRS / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + RCSe ) + Max( RRSe,CS ) ) )", "obj1": 0.4962962962962963, "obj2": 0.4345892530735094}, {"determining": "( ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUM / DS ) ) - ( ( MLU / RRSe ) / MUR ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5621517310401873}, {"determining": "( AMS - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( RMSe - ( RCSe / RCSe ) )", "obj1": 0.8648148148148148, "obj2": 0.1096607642155185}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( FirstVNF_CPU + ( ( MRS / MDR ) / Max( RRS,DDR ) ) ) )", "choosing": "( ( RMSe / RCSe ) - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) )", "obj1": 0.7111111111111111, "obj2": 0.2539121932704477}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.1962962962962963, "obj2": 0.7043244542953551}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU * ACS ) - FirstVNF_Mem ) / ( MRS / ( MDR / ( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + MUM ) * ( MUM - DS ) ) ,RMSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6747555931344873}, {"determining": "( ( ( DDR / Const ) / FirstVNF_RAM_Server ) + Min( ( FirstVNF_CPU - RRS ) ,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS / RCSe ) + Min( RRSe ,MLU ) ) - Max( ( DS - MLU ),( RCSe * RCSe ) ) ) / ( Min( ( RMSe / RCSe ) ,Min( MLU ,MUR ) ) - ( ( CS / MUC ) / ( DS * DS ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.8205017457532469}, {"determining": "( ( ACS - FirstVNF_Mem ) / ( Min( FirstVNF_Mem ,BR ) + FirstVNF_RAM ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.3, "obj2": 0.6099873187905762}, {"determining": "( Min( CRS ,( ( AMS - FirstVNF_RAM_Server ) / PN ) ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + CS ) * ( RRSe - MUR ) )", "obj1": 0.6370370370370371, "obj2": 0.3280195370342981}, {"determining": "( AMS - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( RMSe - ( RCSe / RCSe ) )", "obj1": 0.8574074074074074, "obj2": 0.11785469881659993}, {"determining": "( ( ( ( ( Const + FirstVNF_CPU_Server ) / ( AMS / FirstVNF_CPU_Server ) ) - ( FirstVNF_CPU_Server / ACS ) ) - FirstVNF_CPU_Server ) / Max( FirstVNF_CPU,ARS ) )", "choosing": "Min( ( MLU - RRSe ) ,( MUC / ( MUR * MUR ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6245998472291153}, {"determining": "( ( ACS + CRS ) * ( ( FirstVNF_CPU_Server / ACS ) + ( FirstVNF_Mem / ( Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,RRS ) * MRS ) ) ) )", "choosing": "( ( ( ( Max( CS,( MUC * ( DS + MUM ) ) ) / Min( CS ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.15555555555555556, "obj2": 0.7788213300696499}, {"determining": "( Min( ( MDR + Const ) ,FirstVNF_RAM ) - ( FirstVNF_CPU + PN ) )", "choosing": "( ( RCSe - Min( RRSe ,MUR ) ) + ( RCSe + Max( MLU,MLU ) ) )", "obj1": 0.7685185185185185, "obj2": 0.235477400549497}, {"determining": "( ( ( MDR * RRS ) / MRS ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - RRSe ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,Min( RCSe ,( MUC - ( MLU * RCSe ) ) ) ) ) ,( ( RRSe / MUC ) + ( MUM - MUC ) ) ) )", "obj1": 0.14629629629629629, "obj2": 0.7872413621193219}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( ACS / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - MUR ) - Min( CS ,CS ) )", "obj1": 0.6703703703703704, "obj2": 0.30693098436174854}, {"determining": "( ( FirstVNF_Mem_Server / ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) + ( ACS / ACS ) )", "choosing": "( ( RCSe - Min( RCSe ,MUR ) ) + RCSe )", "obj1": 0.6351851851851852, "obj2": 0.34536503560754994}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.13148148148148148, "obj2": 0.7981716960425715}, {"determining": "( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem ,( MDR + AMS ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( MLU ,DS ) + Min( Max( ( ( DS - CS ) * MUM ),MUC ) ,( MLU - MUM ) ) ) * MLU ) / ( ( CS + RRSe ) + Max( RRSe,CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.6189663437104849}, {"determining": "Max( ( ( ( PN * ACS ) - ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ),( Max( ( FirstVNF_CPU - Const ),Min( Const ,MRS ) ) + Max( ( FirstVNF_Mem * BR ),( RRS * PN ) ) ) )", "choosing": "( Min( DS ,MUC ) / Min( MUR ,( ( ( ( MLU / RRSe ) / MUR ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) ) / RRSe ) ) )", "obj1": 0.3592592592592593, "obj2": 0.5795709660636941}, {"determining": "( ( ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) / MRS ) / ( BR - MRS ) )", "choosing": "( ( ( MLU / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5314814814814814, "obj2": 0.3889206879923489}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS * FirstVNF_RAM ) ),Max( FirstVNF_Mem,( FirstVNF_CPU_Server * FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( DS + MUM ),Max( RMSe,RRSe ) ) * ( Min( DS ,MLU ) + MUM ) ) - RMSe ) )", "obj1": 0.47962962962962963, "obj2": 0.4457492202986883}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( Min( AMS ,ACS ) * Max( CRS,DDR ) ) + DDR ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.17407407407407408, "obj2": 0.7366767270120771}, {"determining": "( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.17407407407407408, "obj2": 0.7366767270120771}, {"determining": "( ( CRS / MRS ) / ( BR - MRS ) )", "choosing": "( Min( MUC ,DS ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.5148148148148148, "obj2": 0.4004783963327362}, {"determining": "( ( AMS - Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) / Min( ( MDR - MRS ) ,ACS ) )", "choosing": "( ( MUR / MLU ) + ( Min( RCSe ,Max( CS,( ( MUM * ( ( MUR - RRSe ) * MUM ) ) - RCSe ) ) ) * Min( DS ,RMSe ) ) )", "obj1": 0.837037037037037, "obj2": 0.128353243246398}, {"determining": "( ( FirstVNF_Mem_Server / ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) + ( ACS / ACS ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.6444444444444445, "obj2": 0.3159419342611708}, {"determining": "( ( FirstVNF_Mem_Server / ACS ) + ( ACS / ACS ) )", "choosing": "( ( RCSe - ( ( RCSe - ( RCSe - ( ( RMSe + MUM ) - DS ) ) ) - ( MLU - MLU ) ) ) + RCSe )", "obj1": 0.2777777777777778, "obj2": 0.6357443013320269}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.2388888888888889, "obj2": 0.669984230912663}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5037037037037037, "obj2": 0.4197111057109654}, {"determining": "( ( FirstVNF_Mem_Server / ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) + ( ACS / ACS ) )", "choosing": "( ( ( MLU + DS ) * ( MUM - RCSe ) ) - ( ( RCSe - ( RCSe - ( ( RMSe + MUM ) - DS ) ) ) - ( MLU - MLU ) ) )", "obj1": 0.6537037037037037, "obj2": 0.3154490777401837}, {"determining": "Max( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ),( Max( ( FirstVNF_CPU - Const ),Min( Const ,MRS ) ) + Max( ( FirstVNF_Mem * BR ),( RRS * PN ) ) ) )", "choosing": "( Min( DS ,MUC ) / Min( MUR ,( MUR / RRSe ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5730937693097072}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( ACS / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - MUR ) - Min( CS ,CS ) )", "obj1": 0.6666666666666666, "obj2": 0.3105180704741585}, {"determining": "Min( ( ( DDR * Const ) / ( Min( FirstVNF_RAM_Server ,PN ) - PN ) ) ,( ( RRS + BR ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( MUR,DS ) / ( MLU + ( MLU - MUC ) ) ),( Min( MLU ,DS ) - MUC ) )", "obj1": 0.9222222222222223, "obj2": 0.05698478033482926}, {"determining": "( Min( Max( Min( Const ,PN ),( BR / DDR ) ) ,PN ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( RCSe / DS ) ) / ( Min( ( MLU + ( MLU - DS ) ) ,MUM ) / MUC ) )", "obj1": 0.18888888888888888, "obj2": 0.7199148609311324}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( RRS * Max( Max( FirstVNF_CPU_Server,FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( ( MLU * CS ),( RRSe + MUR ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.19444444444444445, "obj2": 0.7108252211246754}, {"determining": "Min( ( CRS / AMS ) ,Min( PN ,PN ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) ) - ( ( RCSe - ( RCSe - ( ( RMSe + MUM ) - DS ) ) ) - ( MLU - MLU ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6419440649015568}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.18888888888888888, "obj2": 0.7199148609311324}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * ( DDR / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / RCSe ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.9074074074074074, "obj2": 0.05865148280568725}, {"determining": "( ( MRS / MRS ) / ( BR - Min( ( RRS / AMS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.5074074074074074, "obj2": 0.41775286417172086}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,ARS ) ) / Min( ARS ,ACS ) )", "choosing": "( ( MUR / ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) ) ) + ( MUR * Min( DS ,RMSe ) ) )", "obj1": 0.9333333333333333, "obj2": 0.04326675343895122}, {"determining": "( AMS - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( MLU + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.8407407407407408, "obj2": 0.12415230574094024}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ACS ),( ( ( MRS / MDR ) / Max( RRS,DDR ) ) * ( ( FirstVNF_CPU / FirstVNF_CPU_Server ) + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - MUC ) )", "obj1": 0.24074074074074073, "obj2": 0.6645849126836787}, {"determining": "( Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MRS,ACS ) ),ACS ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + ( RCSe + Min( MLU ,RMSe ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6542240325302873}, {"determining": "( ( ( Const * ( MRS + Const ) ) * MDR ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.26296296296296295, "obj2": 0.6444057597594997}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / Const ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( RCSe / RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( RCSe - Min( RCSe ,MUR ) ) + ( RCSe + Min( MLU ,RMSe ) ) )", "obj1": 0.7685185185185185, "obj2": 0.235477400549497}, {"determining": "( ( ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) / MRS ) / ( BR - MRS ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3936626432071621}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.13518518518518519, "obj2": 0.7942925737014156}, {"determining": "( ( ACS + CRS ) * ( ( FirstVNF_CPU_Server / ACS ) + ( FirstVNF_Mem / ( Min( FirstVNF_CPU_Server ,RRS ) * MRS ) ) ) )", "choosing": "( ( ( ( Max( CS,( MUC * ( DS + RCSe ) ) ) / Min( CS ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.15555555555555556, "obj2": 0.7788213300696499}, {"determining": "Max( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) * ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ),( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUC ) / ( RMSe + MUC ) )", "obj1": 0.3611111111111111, "obj2": 0.5773260146554994}, {"determining": "Max( Max( CRS,( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * Const ) ) / ( PN * DDR ) ) ),Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Min( RMSe ,MUC ) ,( MUC / RRSe ) ) - ( ( RRSe * MUC ) * ( DS * RRSe ) ) ) ,( Min( ( CS / RRSe ) ,Min( MLU ,MLU ) ) - ( ( CS * MUR ) + Min( ( MUM / RMSe ) ,MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.650272355149643}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.13518518518518519, "obj2": 0.7942925737014156}, {"determining": "Min( ( Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,( AMS - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) * MRS ) ,( CRS / AMS ) )", "choosing": "( ( ( MLU + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.8407407407407408, "obj2": 0.12415230574094024}, {"determining": "Max( Max( CRS,( ( FirstVNF_RAM + DDR ) / ( PN * DDR ) ) ),( Min( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) ,( ARS / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) + ( ( ARS - CRS ) + ( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) )", "choosing": "Min( ( ( Max( Min( Min( ( MUM - MUC ) ,( ( RCSe * MUR ) * ( RCSe * RMSe ) ) ) ,RMSe ),RCSe ) - Min( ( ( MUM + ( ( RCSe + MUM ) / ( MUM - CS ) ) ) / RCSe ) ,Max( ( Min( MLU ,MUM ) / MUR ),MLU ) ) ) - ( ( RRSe * MUC ) * ( DS * RRSe ) ) ) ,( Min( ( CS / RRSe ) ,Min( MLU ,MLU ) ) - ( ( RRSe * MUR ) + Min( MUM ,MLU ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6455113679887498}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / Const ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( RCSe / RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5074074074074074, "obj2": 0.41775286417172086}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( Min( MUM ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) - Min( RMSe ,MUR ) )", "obj1": 0.5203703703703704, "obj2": 0.3936626432071621}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ARS ) ) ,( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( RRS * MRS ) ) ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( Min( ( ( Max( MLU,Max( MUM,RMSe ) ) / ( Max( ( RRSe / RMSe ),RMSe ) + RRSe ) ) - RCSe ) ,RRSe ) * DS ) + ( MUR * Min( DS ,RMSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04085624630535778}, {"determining": "( Max( PN,( ( PN + ( BR * MRS ) ) * ( BR / Max( RRS,ARS ) ) ) ) / ( BR - MRS ) )", "choosing": "( ( Min( DS ,MUM ) / MUM ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.5166666666666667, "obj2": 0.39771632614605495}, {"determining": "( Min( CRS ,FirstVNF_Mem_Server ) / ( Max( AMS,BR ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RMSe ) * ( ( RMSe / MUM ) - MUR ) )", "obj1": 0.24444444444444444, "obj2": 0.6518323339124772}, {"determining": "( Max( PN,( ( PN + ( BR * MRS ) ) * ( BR / Max( RRS,ARS ) ) ) ) / ( BR - MRS ) )", "choosing": "( ( Min( DS ,MUM ) / MUM ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.5166666666666667, "obj2": 0.39771632614605495}, {"determining": "Min( Min( RRS ,( FirstVNF_Mem_Server * FirstVNF_Mem_Server ) ) ,Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) )", "choosing": "( ( ( MUM * Max( RRSe,DS ) ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6465686180048683}, {"determining": "( ( ( MDR + MRS ) * FirstVNF_RAM_Server ) * Min( ( ACS + ( PN / FirstVNF_CPU ) ) ,FirstVNF_Mem ) )", "choosing": "( ( ( MLU - ( Min( Min( MUC ,( Min( MUC ,MUR ) + Max( RMSe,RRSe ) ) ) ,Max( ( CS + ( MUR / MUC ) ),MLU ) ) - CS ) ) * ( MUC - RCSe ) ) - ( CS - MUC ) )", "obj1": 0.2518518518518518, "obj2": 0.6474559975062952}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( MUR / MLU ) + ( MUR * Min( DS ,RMSe ) ) )", "obj1": 0.837037037037037, "obj2": 0.128353243246398}, {"determining": "Min( ( CRS / AMS ) ,Min( PN ,ACS ) )", "choosing": "( ( ( MLU + DS ) * ( MUM - RCSe ) ) - ( ( RCSe - ( RCSe - ( ( RMSe + MUM ) - DS ) ) ) - ( MLU - MLU ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6474559975062952}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.937037037037037, "obj2": 0.03915502160550257}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) / ( Max( AMS,( AMS + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + RMSe ) * ( ( Min( CS ,Max( ( RMSe - MUR ),( ( ( MUR * CS ) / RRSe ) + RMSe ) ) ) / MUM ) - MUR ) )", "obj1": 0.24444444444444444, "obj2": 0.6518323339124772}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.937037037037037, "obj2": 0.03915502160550257}, {"determining": "( ( ( Const * ( MRS + Const ) ) * MDR ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "( Min( MUM ,Min( ( Min( RRSe ,DS ) - MUR ) ,Min( ( MLU / MUR ) ,Max( ( MUM - ( RCSe / MUC ) ),( ( ( MUM + RCSe ) * DS ) / ( Min( DS ,MLU ) / RCSe ) ) ) ) ) ) - Min( RMSe ,MUR ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}, {"determining": "( Max( FirstVNF_Mem,( ( ( FirstVNF_Mem / CRS ) * ACS ) / Const ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MUM - RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}, {"determining": "( ( DDR / FirstVNF_Mem ) - ( ( FirstVNF_Mem * CRS ) + FirstVNF_Mem ) )", "choosing": "( ( RMSe / RCSe ) - ( RCSe / Min( ( ( Max( Min( MUR ,MUM ),( MLU / MUR ) ) + ( ( DS - Max( RMSe,MLU ) ) + RRSe ) ) / MUC ) ,RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU_Server ) / Max( ( Const * ( MRS + FirstVNF_Mem_Server ) ),ARS ) )", "choosing": "Min( ( Max( ( MUM * RRSe ),( DS - DS ) ) + RCSe ) ,( RMSe - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_CPU_Server + ARS ) ,( FirstVNF_RAM_Server - FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - MLU ) * MLU ) * Min( CS ,MUM ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM + DDR ) - ( ACS / FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - ( RMSe - MUR ) ) ,Max( MUM,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( PN * CRS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,RMSe ) )", "obj1": 0.11481481481481481, "obj2": 0.823283539870336}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUR,MUC ) )", "obj1": 0.7111111111111111, "obj2": 0.21348313843819555}, {"determining": "( ( Min( ( ( FirstVNF_CPU_Server - AMS ) - Max( MDR,ARS ) ) ,( ( FirstVNF_RAM_Server + MRS ) / Min( PN ,PN ) ) ) + Max( ACS,RRS ) ) * ( ( Const + AMS ) * Max( DDR,Const ) ) )", "choosing": "Min( ( Min( Min( RMSe ,MUC ) ,( MUC * RRSe ) ) - ( ( RRSe * MUC ) * ( DS * RRSe ) ) ) ,( Min( ( CS / RRSe ) ,Min( MLU ,MLU ) ) - ( ( CS * MUR ) + Min( CS ,MLU ) ) ) )", "obj1": 0.7722222222222223, "obj2": 0.20282773110416555}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( MUR / MLU ) + ( MUR * Min( DS ,RMSe ) ) ) )", "obj1": 0.6888888888888889, "obj2": 0.2424336205162609}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( Min( MUR ,( MUR / RRSe ) ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.43333333333333335, "obj2": 0.5094644997648152}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.774074074074074, "obj2": 0.1550228524694316}, {"determining": "( ( CRS / MRS ) / ( BR - MRS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUM / DS ) ) - ( ( MLU / RRSe ) / MUR ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) )", "obj1": 0.5907407407407408, "obj2": 0.3480810145383656}, {"determining": "( Max( PN,( ( PN + ( BR * MRS ) ) * ( BR / Max( RRS,( FirstVNF_CPU + FirstVNF_Mem ) ) ) ) ) / ( BR - MRS ) )", "choosing": "( ( Min( DS ,MUM ) / MUM ) / Max( ( RMSe - ( MLU - MLU ) ),Min( DS ,RRSe ) ) )", "obj1": 0.5703703703703704, "obj2": 0.3662891940296269}, {"determining": "( ( ACS - FirstVNF_Mem ) / ( Min( FirstVNF_Mem ,Min( ( ( FirstVNF_CPU_Server - AMS ) - Max( MDR,ARS ) ) ,( ( FirstVNF_RAM_Server + MRS ) / Min( PN ,PN ) ) ) ) + FirstVNF_RAM ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + ( ( RRSe + CS ) * ( RRSe - MUR ) ) ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.8833333333333333, "obj2": 0.09361323062400945}, {"determining": "( Max( PN,( ( PN + ( BR * MRS ) ) * ( BR / Max( RRS,ARS ) ) ) ) / ( BR - MRS ) )", "choosing": "( ( Min( DS ,MUM ) / MUM ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.4537037037037037, "obj2": 0.47413627084713944}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MLU / RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.3907407407407407, "obj2": 0.5164443200950254}, {"determining": "( ( MRS / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + ( Max( RRSe,MUR ) - ( CS * DS ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.37999495354315643}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ,( ( RRS + BR ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( MUR,DS ) / ( MLU + ( MLU - MUC ) ) ),( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.03217315131343659}, {"determining": "( ( ARS - Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( DDR + FirstVNF_Mem ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.14821059655093693}, {"determining": "( ( AMS * ACS ) - FirstVNF_Mem )", "choosing": "( ( Max( Max( MUC,( RCSe - Min( RCSe ,MUR ) ) ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5939707635524251}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( FirstVNF_CPU + ( ( MRS / MDR ) / Max( RRS,DDR ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( Min( MLU ,MUM ) / MUC ) )", "obj1": 0.6851851851851852, "obj2": 0.28023044825911186}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,Max( MRS,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RMSe ,RCSe ) - ( ( ( ( DS + RRSe ) + ( DS * RRSe ) ) + ( DS + ( MLU / RMSe ) ) ) - RRSe ) ) / MUM ) - MUR ) / ( MLU + ( RRSe * DS ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7521842248497013}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_CPU_Server * Max( CRS,MRS ) ) + ( CRS + Min( ( BR / FirstVNF_Mem ) ,MRS ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / Min( RMSe ,Min( MUR ,MUM ) ) ) ) - DS ) ,Max( MUC,MUM ) )", "obj1": 0.9055555555555556, "obj2": 0.06259240255221528}, {"determining": "( Min( FirstVNF_Mem ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + ( FirstVNF_RAM - Max( Const,DDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( RCSe,( ( RMSe * CS ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.9796296296296296, "obj2": 0.010815431210395925}, {"determining": "Min( ( Max( MDR,MRS ) - Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) ,Max( ( MDR * AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( Min( ( MUC - MUR ) ,MUM ) ,RCSe ) / Max( CS,( MUC * ( ( MUM * RRSe ) + MUM ) ) ) ) + DS ) * ( MUM - MUR ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.3814814814814815, "obj2": 0.5389910383456602}, {"determining": "( ( Min( MDR ,FirstVNF_RAM ) / MRS ) / ( BR - MRS ) )", "choosing": "( Min( MUM ,Min( ( ( ( Min( MUR ,Max( RCSe,MUC ) ) - ( MLU / MUC ) ) + MUM ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) - ( RMSe * MUR ) )", "obj1": 0.4388888888888889, "obj2": 0.4771975663715752}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - ( AMS / ACS ) )", "choosing": "( ( RMSe / MUM ) - MUR )", "obj1": 0.6222222222222222, "obj2": 0.33359214001505827}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( MRS * ( CRS + ( MRS - Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7315818050780306}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ARS + RRS ) ) + ( ( PN - MDR ) + Min( ARS ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUM - RMSe ),DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,Min( MLU ,MUR ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6213647602820214}, {"determining": "( ( FirstVNF_RAM + DDR ) - ( ACS / FirstVNF_CPU_Server ) )", "choosing": "( ( RMSe - MUR ) - Min( CS ,CS ) )", "obj1": 0.6703703703703704, "obj2": 0.30693098436174854}, {"determining": "( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem ,( MDR + AMS ) ) + FirstVNF_RAM ) )", "choosing": "( ( ( ( Min( MLU ,DS ) + Min( Max( ( ( DS - CS ) * MUM ),MUC ) ,( MLU - MUM ) ) ) * MLU ) / ( ( CS + RRSe ) + Max( RRSe,CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.6189663437104849}, {"determining": "( Max( FirstVNF_Mem,PN ) - ( FirstVNF_CPU + ( ( MRS / MDR ) / ( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RMSe / RCSe ) - Min( ( ( RRSe - ( RRSe - MUR ) ) / MUM ) ,MLU ) )", "obj1": 0.6814814814814815, "obj2": 0.29334509583588547}, {"determining": "( ( ( FirstVNF_RAM * DDR ) / ARS ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - ( ( MLU / RRSe ) * MUR ) )", "obj1": 0.13518518518518519, "obj2": 0.772173156765417}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( ( MDR - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( MUM / ( CS * DS ) ) * ( Max( ( Min( Min( MUC ,MUR ) ,MUR ) + RCSe ),( RRSe + MUC ) ) + MUR ) )", "obj1": 0.2037037037037037, "obj2": 0.6998447580377722}, {"determining": "( ( ( Const * ( MRS + Const ) ) * MDR ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.26666666666666666, "obj2": 0.6328618521832058}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( BR - Min( ( RRS / AMS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,DS )", "obj1": 0.37962962962962965, "obj2": 0.5605353915307562}, {"determining": "( Max( PN,( ( PN + ( BR * MRS ) ) * ( BR / Max( RRS,ARS ) ) ) ) / ( BR - MRS ) )", "choosing": "( ( Min( DS ,MUM ) / MUM ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.5277777777777778, "obj2": 0.3856029237156147}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU * ACS ) - FirstVNF_Mem ) / ( MRS / ( MDR / ( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + MUM ) * ( MUM - DS ) ) ,RMSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6747555931344873}, {"determining": "( ( DDR + MDR ) - ( AMS / MDR ) )", "choosing": "( ( Min( Max( RRSe,MUR ) ,( CS * MLU ) ) - ( ( CS - RCSe ) + ( ( ( RMSe / MUR ) - ( RCSe / MUR ) ) / ( RRSe - ( CS + MUM ) ) ) ) ) - Max( MUM,RCSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7634578842515916}, {"determining": "( ( MDR - DDR ) - ( Min( FirstVNF_RAM_Server ,PN ) - PN ) )", "choosing": "( ( MLU + ( MLU - MUC ) ) / ( DS + MLU ) )", "obj1": 0.9925925925925926, "obj2": 0.010304325633726083}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.1814814814814815, "obj2": 0.72526000683461}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.20925925925925926, "obj2": 0.6834978828724176}, {"determining": "( ( FirstVNF_Mem_Server / ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) + ( ACS / ACS ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.6444444444444445, "obj2": 0.3159419342611708}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( ( MUC * ( DS + MUM ) ) + MUM ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.4777777777777778, "obj2": 0.4475645306678303}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8092592592592592, "obj2": 0.1292353502059461}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / FirstVNF_RAM_Server ) ,( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( RRS * MRS ) ) ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( Min( ( ( Max( MLU,Max( MUM,RMSe ) ) / ( Max( ( CS / RMSe ),RMSe ) + RRSe ) ) - RCSe ) ,RRSe ) * DS ) + ( MUR * Min( DS ,RMSe ) ) )", "obj1": 0.8703703703703703, "obj2": 0.09646098587773973}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.13148148148148148, "obj2": 0.7981716960425715}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5092592592592593, "obj2": 0.4114576573021342}, {"determining": "( ( ( MDR + ( FirstVNF_Mem * RRS ) ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ACS ),Min( ( FirstVNF_CPU_Server + ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6421084962268393}, {"determining": "( Min( CRS ,( ( AMS - FirstVNF_RAM_Server ) / PN ) ) / ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) )", "choosing": "( ( RRSe + CS ) * ( RRSe - MUR ) )", "obj1": 0.6370370370370371, "obj2": 0.3280195370342981}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( ( MUC * ( DS + MUM ) ) + MUM ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.4777777777777778, "obj2": 0.4475645306678303}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( ( DDR / FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( RCSe + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8351851851851851, "obj2": 0.1164650874411268}, {"determining": "( ( ( AMS * Const ) - ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / AMS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( ( Min( CS ,DS ) / MUM ) ,DS ),( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - CS ) ) ) )", "obj1": 0.8592592592592593, "obj2": 0.09896671606412351}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( MRS + RRS ) )", "choosing": "( ( ( ( CS / RCSe ) + Min( RRSe ,MLU ) ) - Max( ( DS - MLU ),( RCSe * RCSe ) ) ) / ( CS - MUM ) )", "obj1": 0.12222222222222222, "obj2": 0.821394176881437}, {"determining": "( ( FirstVNF_Mem_Server / ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) + ( ACS / ACS ) )", "choosing": "( ( RMSe - MUR ) - Min( CS ,CS ) )", "obj1": 0.6537037037037037, "obj2": 0.30840149794739924}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( MRS - ACS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( ( Min( RCSe ,RRSe ) - MLU ) ,RCSe ) ) + RCSe )", "obj1": 0.9425925925925925, "obj2": 0.03526728129643351}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + ( Min( FirstVNF_RAM_Server ,PN ) - PN ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,( Min( MLU ,DS ) - MUC ) )", "obj1": 0.837037037037037, "obj2": 0.1088880942905769}, {"determining": "( ( ACS - FirstVNF_Mem ) / ( Min( FirstVNF_Mem ,BR ) + FirstVNF_RAM ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.3, "obj2": 0.6099873187905762}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( RRS * Max( Max( FirstVNF_CPU_Server,FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( ( MLU * CS ),( RRSe + MUR ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.19444444444444445, "obj2": 0.7108252211246754}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( DS + MUM ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.47962962962962963, "obj2": 0.4443812665870182}, {"determining": "( ( ACS - FirstVNF_Mem ) / ( Min( FirstVNF_Mem ,BR ) + FirstVNF_RAM ) )", "choosing": "( ( ( MLU / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.337037037037037, "obj2": 0.5818469090238372}, {"determining": "( FirstVNF_RAM_Server - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.1259259259259259, "obj2": 0.8095762602485924}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUM - RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.48518518518518516, "obj2": 0.43268644478342444}, {"determining": "( Max( PN,( ( PN + ( BR * MRS ) ) * ( BR / Max( RRS,( PN / MRS ) ) ) ) ) / ( BR - MRS ) )", "choosing": "( ( Min( DS ,MUM ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.5148148148148148, "obj2": 0.39827906808402286}, {"determining": "Max( Max( CRS,( ( FirstVNF_RAM + DDR ) / ( PN * DDR ) ) ),( FirstVNF_Mem_Server / ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Min( Min( RMSe ,MUC ) ,( MUC * RRSe ) ) - ( ( RRSe * MUC ) * ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) ) ) ,( Min( ( CS / RRSe ) ,Min( MLU ,MLU ) ) - ( ( CS * MUR ) + Min( CS ,MLU ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6698882690690756}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Max( ( Max( MUR,DS ) / ( MLU + ( MLU - MUC ) ) ),( Min( MLU ,DS ) - MUC ) )", "obj1": 0.9111111111111111, "obj2": 0.057154019023432034}, {"determining": "( ( PN / MRS ) / ( BR - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / ( ( MLU * MUR ) - ( RCSe * DS ) ) ) / ( ( CS + MUM ) + Max( CS,CS ) ) )", "obj1": 0.5, "obj2": 0.4237673713765528}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( Min( DS ,MUM ) / MUM ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.8277777777777777, "obj2": 0.12787240780990486}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.1962962962962963, "obj2": 0.7043244542953551}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.8481481481481481, "obj2": 0.10519463715301572}, {"determining": "Max( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) * ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ),( DDR * FirstVNF_CPU_Server ) )", "choosing": "( Min( DS ,MUC ) / ( RMSe + MUC ) )", "obj1": 0.35555555555555557, "obj2": 0.5814345301965811}, {"determining": "( ( FirstVNF_Mem_Server * CRS ) / ( Max( AMS,( AMS + Min( FirstVNF_RAM ,FirstVNF_Mem ) ) ) + ( DDR / FirstVNF_Mem ) ) )", "choosing": "( ( RRSe + RMSe ) * ( ( Min( ( ( RMSe / RCSe ) - ( RCSe / RCSe ) ) ,Max( ( RMSe - MUR ),( ( ( MUR * CS ) / RRSe ) + RMSe ) ) ) / MUM ) - MUR ) )", "obj1": 0.2351851851851852, "obj2": 0.6616839419865639}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ARS ) ) ,( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( RRS * MRS ) ) ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + RCSe ) + Max( RRSe,CS ) ) )", "obj1": 0.9222222222222223, "obj2": 0.052152194043781484}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.49444444444444446, "obj2": 0.43115189553802036}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( MLU / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.8296296296296296, "obj2": 0.12629903971332845}, {"determining": "( ( ACS - FirstVNF_Mem ) / ( Min( FirstVNF_Mem ,BR ) + FirstVNF_RAM ) )", "choosing": "( ( ( MLU / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5825152125730108}, {"determining": "( ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUM / DS ) ) - ( ( MLU / RRSe ) / MUR ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5621517310401873}, {"determining": "( ( ACS - FirstVNF_Mem ) / ( Min( FirstVNF_Mem ,BR ) + FirstVNF_RAM ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.3, "obj2": 0.6099873187905762}, {"determining": "( ( FirstVNF_Mem_Server / ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) + ( ACS / ACS ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.32996465407458025}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( ARS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( MUR * Min( DS ,RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8518518518518519, "obj2": 0.10344000037042175}, {"determining": "( ( FirstVNF_Mem_Server / ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) + ( ACS / ACS ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.65, "obj2": 0.3117337985579959}, {"determining": "Max( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ),( Max( ( FirstVNF_CPU - Const ),Min( Const ,MRS ) ) + Max( ( FirstVNF_Mem * BR ),( RRS * PN ) ) ) )", "choosing": "( Min( DS ,MUC ) / Min( MUR ,( MUR / RRSe ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5730937693097072}, {"determining": "( Min( Max( Min( Const ,PN ),( BR / DDR ) ) ,PN ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( RCSe / DS ) ) / ( Min( ( MLU + ( MLU - DS ) ) ,MUM ) / MUC ) )", "obj1": 0.18888888888888888, "obj2": 0.7199148609311324}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8111111111111111, "obj2": 0.12883002038594732}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MLU / RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.3907407407407407, "obj2": 0.5164443200950254}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( RRS + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.23333333333333334, "obj2": 0.6645072726831838}, {"determining": "( ( ACS - FirstVNF_Mem ) / ( Min( FirstVNF_Mem ,BR ) + FirstVNF_RAM ) )", "choosing": "( ( ( MLU / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5825152125730108}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.20925925925925926, "obj2": 0.6834978828724176}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5037037037037037, "obj2": 0.4197111057109654}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / Const ) ) - ( ( Max( CRS,MRS ) * DDR ) + FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) ) - ( ( RCSe - ( ( ( DS + ( MUC + MUM ) ) - DS ) - RCSe ) ) - ( MLU - MLU ) ) )", "obj1": 0.9259259259259259, "obj2": 0.04836950499801219}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.6240740740740741, "obj2": 0.33296388972816837}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( Max( PN,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( DDR * BR ) - FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUM ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + MUR ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.13148148148148148, "obj2": 0.7981716960425715}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.12962962962962962, "obj2": 0.8068354793617365}, {"determining": "( ( ( Min( PN ,FirstVNF_Mem_Server ) + ( CRS * FirstVNF_Mem ) ) / MRS ) / ( BR - MRS ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3936626432071621}, {"determining": "Max( Max( CRS,( ( FirstVNF_RAM + ( FirstVNF_CPU_Server * Const ) ) / ( PN * DDR ) ) ),Min( AMS ,FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Min( RMSe ,MUC ) ,( MUC / RRSe ) ) - ( ( RRSe * MUC ) * ( DS * RRSe ) ) ) ,( Min( ( CS / RRSe ) ,Min( MLU ,MLU ) ) - ( ( CS * MUR ) + Min( ( MUM / RMSe ) ,MLU ) ) ) )", "obj1": 0.24814814814814815, "obj2": 0.650272355149643}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( Min( MUM ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) - Min( RMSe ,MUR ) )", "obj1": 0.5203703703703704, "obj2": 0.3936626432071621}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( Min( ( ( FirstVNF_Mem / FirstVNF_CPU_Server ) / ( FirstVNF_Mem * ARS ) ) ,( Max( FirstVNF_Mem,FirstVNF_RAM ) + ( RRS * ( CRS / MRS ) ) ) ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( Min( ( ( Max( MLU,Max( Max( RRSe,CS ),RMSe ) ) / ( Max( ( RRSe / RMSe ),RMSe ) + RRSe ) ) - RCSe ) ,RRSe ) * DS ) + ( MUR * Min( DS ,RMSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04084808260794511}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * ( DDR / FirstVNF_Mem ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / RCSe ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.9074074074074074, "obj2": 0.05865148280568725}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.18888888888888888, "obj2": 0.7199148609311324}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe - MUR ) - Min( CS ,CS ) )", "obj1": 0.9296296296296296, "obj2": 0.043171515822880834}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( ACS,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.4888888888888889, "obj2": 0.43205274380022857}, {"determining": "( ( MRS / MRS ) / ( BR - Min( ( RRS / AMS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.5074074074074074, "obj2": 0.41775286417172086}, {"determining": "Max( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ),( Max( ( FirstVNF_CPU - Const ),Min( Const ,MRS ) ) + Max( ( FirstVNF_Mem * BR ),( RRS * PN ) ) ) )", "choosing": "( Min( DS ,MUC ) / Min( MUR ,( MUR / RRSe ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5730937693097072}], "5": [{"determining": "Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,RMSe ) )", "obj1": 0.11481481481481481, "obj2": 0.823283539870336}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) / Max( ( ( ( MDR - DDR ) - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( MUM / ( CS * DS ) ) * ( Max( ( Min( Min( MUC ,MUR ) ,MUR ) + RCSe ),( RRSe + MUC ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM + DDR ) - ( ACS / FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - ( RMSe - MUR ) ) ,Max( MUM,MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,RMSe ) )", "obj1": 0.11481481481481481, "obj2": 0.823283539870336}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.45970145990552264}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) )", "obj1": 0.7444444444444445, "obj2": 0.1947470607367561}, {"determining": "Min( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( CS,( MUC * ( DS + MUM ) ) ) / Min( CS ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MUC ) ) )", "obj1": 0.6407407407407407, "obj2": 0.3068451877355385}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.6611111111111111, "obj2": 0.265396590765976}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "Min( ( ( RCSe / ( ( RCSe + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.4074074074074074, "obj2": 0.5083775751488412}, {"determining": "( ( FirstVNF_Mem * AMS ) / Min( ARS ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4311193401615686}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8722222222222222, "obj2": 0.0807890024887066}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) ,Max( Max( ACS,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.35, "obj2": 0.5658576989041783}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( MLU / RRSe ) + ( Min( ( CS / RRSe ) ,Min( MLU ,MLU ) ) - ( ( CS * MUR ) + Min( CS ,MLU ) ) ) ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.2962962962962963, "obj2": 0.6076477277023158}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7648148148148148, "obj2": 0.15885359117209047}, {"determining": "( ( ( ACS * DDR ) / Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - Max( CS,( MUC * ( DS + MUM ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5463574353134479}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_Mem_Server * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( MDR - ( FirstVNF_RAM_Server + Min( ACS ,AMS ) ) ) ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MLU * DS ) - MUC ) ,( RMSe * ( Min( MUR ,( MLU - ( MUM / DS ) ) ) - MUR ) ) )", "obj1": 0.7944444444444444, "obj2": 0.14130518002703016}, {"determining": "Min( ( Max( MDR,MRS ) - Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) ,Max( ( MDR * AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( ( Min( Min( ( MUC - MUR ) ,MUM ) ,RCSe ) / Max( CS,( MUC * ( ( MUM * RRSe ) + MUM ) ) ) ) + DS ) * ( MUM - MUR ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.3814814814814815, "obj2": 0.5389910383456602}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ARS + RRS ) ) + ( ( PN - MDR ) + Min( ARS ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUM - RMSe ),DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,Min( MLU ,MUR ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6213647602820214}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.674074074074074, "obj2": 0.2544349986684335}, {"determining": "( ( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( ( DDR / FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) + MDR ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - ( ( CS - DS ) + CS ) ) - Min( MUM ,Min( ( ( RCSe / ( ( RCSe + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Min( RCSe ,( MLU / MUR ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.21207902125870418}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ),MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / Min( RRSe ,MUM ) ) ) - DS ) ,Max( MUM,MUC ) )", "obj1": 0.9037037037037037, "obj2": 0.06364929020028876}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - ( FirstVNF_CPU + ( DDR / FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + RMSe ) )", "obj1": 0.6925925925925925, "obj2": 0.2274319325651199}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( ( MLU / RRSe ) - ( ( ( Max( RMSe,RCSe ) / MLU ) - MLU ) * ( MUR * ( MUM * MLU ) ) ) ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.3888888888888889, "obj2": 0.5127285627504993}, {"determining": "Min( ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) - RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.3333333333333333, "obj2": 0.5738050636071218}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( AMS / ACS ) * ( ( DDR * BR ) - FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUM ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( ( RMSe / MUM ) - MUR ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.13148148148148148, "obj2": 0.781257477257716}, {"determining": "( ( ARS - Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( DDR + Const ) ) ) / Min( DDR ,ACS ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) + Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( ( DS + MUR ) ,Max( RCSe,MUM ) ) ,( ( MUM - CS ) + ( RRSe / DS ) ) ) )", "obj1": 0.6888888888888889, "obj2": 0.24112289941258547}, {"determining": "( DDR / ( BR - MRS ) )", "choosing": "( DS / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3429001339381766}, {"determining": "( Min( Min( ( FirstVNF_Mem / FirstVNF_CPU_Server ) ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( ( DDR / FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( ( CS + RCSe ) + Max( RRSe,CS ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.9648148148148148, "obj2": 0.016841037304065425}, {"determining": "Min( ( Max( ( ( Max( Min( FirstVNF_CPU_Server ,MRS ),( FirstVNF_RAM_Server / PN ) ) - FirstVNF_CPU ) / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( DS + ( MUM / ( CS / DS ) ) ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( Max( ( DS + MUM ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( MLU * CS ) ) ) ) ) - RMSe ) )", "obj1": 0.5555555555555556, "obj2": 0.37117851264305596}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUR,MUC ) )", "obj1": 0.7111111111111111, "obj2": 0.21348313843819555}, {"determining": "Min( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ,( ( RRS + BR ) + ( FirstVNF_RAM - FirstVNF_CPU_Server ) ) )", "choosing": "Max( ( Max( MUR,DS ) / ( MLU + ( MLU - MUC ) ) ),( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.03049272396232294}, {"determining": "( ( AMS * ACS ) - FirstVNF_Mem )", "choosing": "( ( Max( Max( MUC,( RCSe - Min( RCSe ,MUR ) ) ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.32407407407407407, "obj2": 0.5869125942930599}, {"determining": "( ( MRS / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + ( Max( RRSe,MUR ) - ( CS * DS ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.37999495354315643}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_CPU ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( Max( RCSe,MUM ),MUC ) )", "obj1": 0.8240740740740741, "obj2": 0.12208851889839167}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6610393345282335}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,Max( MRS,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RMSe ,RCSe ) - ( ( ( ( DS + RRSe ) + ( DS * RRSe ) ) + ( DS + ( MLU / RMSe ) ) ) - RRSe ) ) / MUM ) - MUR ) / ( MLU + ( RRSe * DS ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7521842248497013}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.4777777777777778, "obj2": 0.4272370980778783}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + ( ( RMSe / MUM ) - MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7759259259259259, "obj2": 0.15394574340676714}, {"determining": "( Min( FirstVNF_Mem ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + ( FirstVNF_RAM - Max( Const,DDR ) ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( RCSe,( ( RMSe * CS ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.9796296296296296, "obj2": 0.010815431210395925}, {"determining": "( ( ARS + MDR ) + ( ACS / ACS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( ( ( Min( RCSe ,( ( RCSe / MUC ) - MUR ) ) + MUR ) + Min( MUR ,Max( ( Min( MUR ,RRSe ) - MLU ),( MUM - MUC ) ) ) ),MUR ) ) )", "obj1": 0.6333333333333333, "obj2": 0.3262170785279441}, {"determining": "( ( FirstVNF_RAM - Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( Min( Min( DS ,RMSe ) ,MUM ) / MUM ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.6203703703703703, "obj2": 0.3341871693371664}, {"determining": "( ( PN / MRS ) / ( BR - Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( DS / ( ( MLU * MUR ) - ( RCSe * DS ) ) ) / ( ( CS + MUM ) + Max( CS,CS ) ) )", "obj1": 0.5, "obj2": 0.4237673713765528}, {"determining": "( ( AMS * ACS ) - FirstVNF_Mem )", "choosing": "( ( Max( Max( MUC,( RCSe - Min( RCSe ,MUR ) ) ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5992240228492551}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ACS )", "choosing": "( RRSe - Min( RRSe ,MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.20925925925925926, "obj2": 0.6834978828724176}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( MRS + RRS ) )", "choosing": "( ( ( ( CS / RCSe ) + Min( RRSe ,MLU ) ) - Max( ( DS - MLU ),( RCSe * RCSe ) ) ) / ( CS - MUM ) )", "obj1": 0.12222222222222222, "obj2": 0.821394176881437}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( RRS * Max( Max( ( BR - MRS ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( MUM - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.13518518518518519, "obj2": 0.7692423743417707}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8092592592592592, "obj2": 0.1292353502059461}, {"determining": "( ( ARS - Min( ( ( ARS / Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) / FirstVNF_RAM_Server ) ,( DDR + FirstVNF_Mem ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Max( ( Max( MUR,DS ) / ( MLU + ( MLU - MUC ) ) ),( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) ) )", "obj1": 0.5722222222222222, "obj2": 0.3504872405140355}, {"determining": "( ( ( MDR + ( FirstVNF_Mem * RRS ) ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ACS ),Min( ( FirstVNF_CPU_Server + ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6421084962268393}, {"determining": "( ( ARS - Min( ( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) * DDR ) ,( DDR + FirstVNF_Mem ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * MUR ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( ( MLU - Max( Max( MUR,( ( CS * CS ) * ( MUR / MLU ) ) ),( RMSe - MLU ) ) ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) )", "obj1": 0.5574074074074075, "obj2": 0.35733081227242314}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( MUM ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6501628538023412}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( ( DDR / FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - ( ( CS - DS ) + CS ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8333333333333334, "obj2": 0.11359301447891275}, {"determining": "( Min( Min( ARS ,FirstVNF_CPU_Server ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + ( ( FirstVNF_Mem_Server * CRS ) / MDR ) ) ) ) - ( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( RCSe - DS ) * ( MUC / DS ) ) / Max( DS,Min( Min( RRSe ,MUR ) ,DS ) ) )", "obj1": 0.8648148148148148, "obj2": 0.09148882988812881}, {"determining": "( ( ( ACS * MRS ) / ARS ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( MUM ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7634578842515916}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( RRS * Max( Max( FirstVNF_CPU_Server,FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( ( MLU * CS ),( RRSe + MUR ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.19444444444444445, "obj2": 0.7108252211246754}, {"determining": "( ( CRS / MRS ) / ( BR - MRS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUM / DS ) ) - ( ( MLU / RRSe ) / MUR ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) )", "obj1": 0.5907407407407408, "obj2": 0.3480810145383656}, {"determining": "( ( ( Const * ( MRS + Const ) ) * MDR ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.26666666666666666, "obj2": 0.6328618521832058}, {"determining": "( FirstVNF_Mem_Server / ( Min( FirstVNF_Mem ,BR ) + ( ( ( ACS * MRS ) / ARS ) - ( MRS * FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( MLU / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) ) + ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) )", "obj1": 0.39814814814814814, "obj2": 0.5093223939746434}, {"determining": "( Max( PN,( ( PN + ( BR * MRS ) ) * ( BR / Max( RRS,( PN / MRS ) ) ) ) ) / ( BR - MRS ) )", "choosing": "( ( Min( DS ,MUM ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.5148148148148148, "obj2": 0.39827906808402286}, {"determining": "( ( ARS - Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( DDR + FirstVNF_Mem ) ) ) / Min( ARS ,ACS ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.5703703703703704, "obj2": 0.3565849095845905}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( ( MDR - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( MUM / ( CS * DS ) ) * ( Max( ( Min( Min( MUC ,MUR ) ,MUR ) + RCSe ),( RRSe + MUC ) ) + MUR ) )", "obj1": 0.2037037037037037, "obj2": 0.6998447580377722}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( RCSe ,MUR ) ) + RCSe )", "obj1": 0.9425925925925925, "obj2": 0.03526728129643351}, {"determining": "( ( DDR + MDR ) - ( AMS / MDR ) )", "choosing": "( ( Min( Max( RRSe,MUR ) ,( CS * MLU ) ) - ( ( CS - RCSe ) + ( ( ( RMSe / MUR ) - ( RCSe / MUR ) ) / ( RRSe - ( CS + MUM ) ) ) ) ) - Max( MUM,RCSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7634578842515916}, {"determining": "( ( ( AMS * Const ) - ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / AMS ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( ( Min( CS ,DS ) / MUM ) ,DS ),( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - CS ) ) ) )", "obj1": 0.8592592592592593, "obj2": 0.09896671606412351}, {"determining": "( ( MDR - DDR ) - ( Min( FirstVNF_RAM_Server ,PN ) - PN ) )", "choosing": "( ( MLU + ( MLU - MUC ) ) / ( DS + MLU ) )", "obj1": 0.9925925925925926, "obj2": 0.010304325633726083}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( ARS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( MUR * Min( DS ,RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8518518518518519, "obj2": 0.10344000037042175}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe - MUR ) - Min( CS ,CS ) )", "obj1": 0.9296296296296296, "obj2": 0.043171515822880834}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + ( ( ACS * MRS ) / ARS ) ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.25, "obj2": 0.643354281688186}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - ( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( ( MUC * ( CS + MUM ) ) + MUM ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.5296296296296297, "obj2": 0.38441441392957676}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.1962962962962963, "obj2": 0.7043244542953551}, {"determining": "( ( FirstVNF_CPU_Server / ARS ) - ( Min( FirstVNF_RAM_Server ,PN ) - PN ) )", "choosing": "( ( CS + ( RMSe / ( MUC * CS ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.9944444444444445, "obj2": 0.007915131192467596}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + ( Min( FirstVNF_RAM_Server ,PN ) - PN ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,( Min( MLU ,DS ) - MUC ) )", "obj1": 0.837037037037037, "obj2": 0.1088880942905769}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5092592592592593, "obj2": 0.4114576573021342}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU * ACS ) - FirstVNF_Mem ) / ( MRS / ( MDR / ( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + MUM ) * ( MUM - DS ) ) ,RMSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6747555931344873}, {"determining": "( ( FirstVNF_Mem_Server / ( ( DDR / FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) + ( ACS / ACS ) )", "choosing": "( ( Max( Max( MUC,DS ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.32996465407458025}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.1814814814814815, "obj2": 0.72526000683461}, {"determining": "( ( AMS * ACS ) - FirstVNF_Mem )", "choosing": "( ( Max( Max( MUC,( RCSe - Min( RCSe ,MUR ) ) ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5939707635524251}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.20925925925925926, "obj2": 0.6834978828724176}, {"determining": "( ( AMS * ACS ) - FirstVNF_Mem )", "choosing": "( ( Max( Max( MUC,( RCSe - Min( RCSe ,MUR ) ) ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5939707635524251}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( MRS - Max( BR,( ( AMS + ( PN * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( DS / RMSe ) * Max( RCSe,RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7315818050780306}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( MRS * ( CRS + ( MRS - Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7315818050780306}, {"determining": "( ( Max( FirstVNF_Mem,PN ) - ( FirstVNF_CPU + ( ( MRS / MDR ) / ( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ) )", "obj1": 0.9981481481481481, "obj2": 0.0004060850329572267}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( Min( AMS ,Min( ARS ,ACS ) ) * Max( CRS,DDR ) ) + DDR ) )", "choosing": "( ( ( RCSe / MUM ) - MUR ) / ( MUR + ( RRSe * DS ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7521842248497013}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5037037037037037, "obj2": 0.4197111057109654}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( Min( MLU ,MUM ) / MUC ) )", "obj1": 0.8611111111111112, "obj2": 0.09490543516943784}, {"determining": "( Min( Max( Min( Const ,PN ),( BR / DDR ) ) ,PN ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( RCSe / DS ) ) / ( Min( ( MLU + ( MLU - DS ) ) ,MUM ) / MUC ) )", "obj1": 0.18888888888888888, "obj2": 0.7199148609311324}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,Min( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR * FirstVNF_RAM ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) ,( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RRSe + MUM ) - MUM ) ,MUM )", "obj1": 0.8111111111111111, "obj2": 0.12883002038594732}, {"determining": "( ( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) ) - ( ( RCSe - ( RCSe - ( ( RMSe + MUM ) - ( CS * DS ) ) ) ) - ( MLU - MLU ) ) )", "obj1": 0.924074074074074, "obj2": 0.04911041591282746}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - ( AMS / ACS ) )", "choosing": "( ( RMSe / MUM ) - MUR )", "obj1": 0.6240740740740741, "obj2": 0.3317739526107315}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.18518518518518517, "obj2": 0.7215101540490079}, {"determining": "( AMS - ( ( BR / FirstVNF_Mem ) / ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ) )", "choosing": "( Min( MUM ,Min( ( Min( Min( RCSe ,MUM ) ,Min( ( Min( MLU ,MLU ) - ( RMSe - MUR ) ) ,MLU ) ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) - Min( RMSe ,MUR ) )", "obj1": 0.2222222222222222, "obj2": 0.6747555931344873}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.8481481481481481, "obj2": 0.10519463715301572}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.9166666666666666, "obj2": 0.05200846988787422}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( MRS - ACS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( ( Min( RCSe ,RRSe ) - MLU ) ,RCSe ) ) + RCSe )", "obj1": 0.9425925925925925, "obj2": 0.03526728129643351}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5092592592592593, "obj2": 0.4114576573021342}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.2, "obj2": 0.7001861962083314}, {"determining": "( ( PN / ( MDR * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) / ( BR - MRS ) )", "choosing": "( RMSe - ( ( ( RCSe + Max( RMSe,DS ) ) + ( MUC * Min( CS ,MUM ) ) ) / RCSe ) )", "obj1": 0.5222222222222223, "obj2": 0.3914977156133335}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / Const ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) ) - ( ( RCSe - ( RCSe - ( ( RMSe + MUM ) - DS ) ) ) - ( MLU - MLU ) ) )", "obj1": 0.9259259259259259, "obj2": 0.04836950499801218}], "6": [{"determining": "Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,RMSe ) )", "obj1": 0.11481481481481481, "obj2": 0.823283539870336}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Max( CRS,Min( Min( ARS ,Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( RRS - Const ) ) ) ,Max( BR,( FirstVNF_Mem_Server * DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( MUM,RRSe ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - ( RMSe + MUC ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) / Max( ( ( ( MDR - DDR ) - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( MUM / ( CS * DS ) ) * ( Max( ( Min( Min( MUC ,MUR ) ,MUR ) + RCSe ),( RRSe + MUC ) ) + MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,RMSe ) )", "obj1": 0.11481481481481481, "obj2": 0.823283539870336}, {"determining": "( Min( ACS ,( FirstVNF_CPU_Server * Min( DDR ,FirstVNF_Mem_Server ) ) ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,( MUM / RMSe ) ) - ( CS * RMSe ) ) - ( ( MLU * CS ) + ( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( MUR / MUM ) * ( CS / RRSe ) ) * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5012435396753333}, {"determining": "Min( ( Max( Min( FirstVNF_CPU_Server ,MRS ),( FirstVNF_Mem / ( DDR + Min( Min( PN ,FirstVNF_CPU ) ,AMS ) ) ) ) - PN ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - RRSe ) - Min( Max( Min( ( MUM - RRSe ) ,Max( RRSe,MLU ) ),MUR ) ,CS ) )", "obj1": 0.6407407407407407, "obj2": 0.28392330129109666}, {"determining": "( ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) * FirstVNF_RAM ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUM - RMSe ) * Max( ( Min( ( RCSe / ( MLU / MLU ) ) ,RCSe ) + ( RMSe / ( Min( MUR ,MLU ) / RRSe ) ) ),Min( ( ( RCSe / ( MLU / MUR ) ) / ( MUR / CS ) ) ,RRSe ) ) ) ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5850019364532228}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.4425925925925926, "obj2": 0.4509529166847088}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( Const - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ),Min( ACS ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - Min( RMSe ,( MLU - MUC ) ) ) - ( ( MLU * CS ) + ( ( MUR / ( MLU * MLU ) ) + MUR ) ) ) - ( ( ( Min( RMSe ,RCSe ) - DS ) / MUM ) - MUR ) )", "obj1": 0.5518518518518518, "obj2": 0.346178271904067}, {"determining": "Min( ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) - RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.3333333333333333, "obj2": 0.5738050636071218}, {"determining": "( ( FirstVNF_Mem * AMS ) / Min( ARS ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4311193401615686}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + MLU ) ) + MUR ) )", "obj1": 0.7314814814814815, "obj2": 0.18117307875666033}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( ARS + ( FirstVNF_Mem * RRS ) ) * RRS ) ) / FirstVNF_CPU ),FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( MUM - RCSe ) * ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + RMSe ) ) - ( RMSe - Min( ( ( ( ( ( CS * MUR ) + MUM ) * DS ) / MUC ) / RCSe ) ,( MUC * ( Max( MUR,( DS + CS ) ) - ( MUM + ( RCSe - ( MUM / RMSe ) ) ) ) ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5286550870482969}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.6129629629629629, "obj2": 0.3159485030965596}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.45970145990552264}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( ( MLU / RRSe ) - ( ( ( Max( RMSe,RCSe ) / MLU ) - MLU ) * ( MUR * ( MUM * MLU ) ) ) ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.3888888888888889, "obj2": 0.5127285627504993}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7592592592592593, "obj2": 0.16073645478420528}, {"determining": "( ( FirstVNF_RAM / FirstVNF_Mem ) - ( FirstVNF_CPU + ( DDR / FirstVNF_Mem ) ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + RMSe ) )", "obj1": 0.6925925925925925, "obj2": 0.2274319325651199}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) ,Max( Max( ACS,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.35, "obj2": 0.5658576989041783}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) + ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.5962962962962963, "obj2": 0.34545291360211666}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.6129629629629629, "obj2": 0.3159485030965596}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.47962962962962963, "obj2": 0.4136393951746558}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( AMS / ACS ) * ( ( DDR * BR ) - FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUM ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( ( RMSe / MUM ) - MUR ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.13148148148148148, "obj2": 0.781257477257716}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.45970145990552264}, {"determining": "( ( ( ACS * ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( ( ARS / FirstVNF_CPU ) / PN ) ,( DDR + FirstVNF_Mem ) ) ) ) / ARS ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( ( RMSe / MUC ) - ( MUR * Max( ( Max( DS,( CS - RMSe ) ) + ( DS / ( ( RCSe - CS ) * ( RCSe * RRSe ) ) ) ),CS ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RCSe ) )", "obj1": 0.5462962962962963, "obj2": 0.3642400715011762}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( MRS / MDR ) / ( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( CS / RCSe ) + Min( RRSe ,MLU ) ) - Max( ( DS - MLU ),( RCSe * ( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ) ) ) ) ) / ( Min( ( RMSe / RCSe ) ,Min( MLU ,MUR ) ) - ( ( CS / MUC ) / ( DS * DS ) ) ) )", "obj1": 0.29259259259259257, "obj2": 0.6092397824874246}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_RAM,ACS ) / Max( FirstVNF_CPU_Server,( MDR - DDR ) ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + Max( RRSe,( ( RMSe * RMSe ) * ( MUR * MLU ) ) ) ) / ( ( CS + MUM ) - ( Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) - Min( Min( Max( RCSe,CS ) ,Max( MLU,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8833333333333333, "obj2": 0.07177966248580944}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUR,MUC ) )", "obj1": 0.7111111111111111, "obj2": 0.21348313843819555}, {"determining": "( ( ( AMS * Const ) - ( ( ( BR - MRS ) + FirstVNF_RAM_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( ARS + FirstVNF_Mem ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( ( Min( Max( RCSe,Min( DS ,MLU ) ) ,Min( Min( MUR ,RCSe ) ,Min( MUC ,MLU ) ) ) * MUR ) ,DS ),CS ) ) )", "obj1": 0.5037037037037037, "obj2": 0.4062958894171172}, {"determining": "( ( FirstVNF_Mem_Server - Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( MLU / RRSe ) + ( Min( ( CS / RRSe ) ,Min( MLU ,MLU ) ) - ( ( CS * MUR ) + Min( CS ,MLU ) ) ) ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.2962962962962963, "obj2": 0.6076477277023158}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( DDR + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,PN ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( MUM + Min( ( RMSe - RRSe ) ,RMSe ) ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.6555555555555556, "obj2": 0.27398017301992794}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.674074074074074, "obj2": 0.25443499866843344}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ),MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / Min( RRSe ,MUM ) ) ) - DS ) ,Max( MUM,MUC ) )", "obj1": 0.9037037037037037, "obj2": 0.06364929020028876}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( ( ( FirstVNF_RAM * ACS ) / MDR ) + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) ) - FirstVNF_CPU ) ,Max( Max( ACS,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - RCSe ) ) )", "obj1": 0.362962962962963, "obj2": 0.5549502205816997}, {"determining": "( ( ( ACS * DDR ) / Min( ( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - Max( CS,( MUC * ( DS + MUM ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5463574353134479}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6213647602820214}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.7222222222222222, "obj2": 0.19463711379209894}, {"determining": "( ( ARS - Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( DDR + Const ) ) ) / Min( DDR ,ACS ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) + Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( ( DS + MUR ) ,Max( RCSe,MUM ) ) ,( ( MUM - CS ) + ( RRSe / DS ) ) ) )", "obj1": 0.6888888888888889, "obj2": 0.24112289941258547}, {"determining": "( ( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( ( DDR / FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) + MDR ) - ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - ( ( CS - DS ) + CS ) ) - Min( MUM ,Min( ( ( RCSe / ( ( RCSe + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Min( RCSe ,( MLU / MUR ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.21207902125870418}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( MUC * ( DS + MUM ) ) ) ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.9555555555555556, "obj2": 0.019471174228174588}, {"determining": "( DDR / ( BR - MRS ) )", "choosing": "( DS / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3429001339381766}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.20925925925925926, "obj2": 0.6834978828724176}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( ( MDR - DDR ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,( ( MLU + ( MLU - MUC ) ) / ( DS + MLU ) ) )", "obj1": 0.95, "obj2": 0.03223506807845789}, {"determining": "( ( ARS - Min( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) / FirstVNF_RAM_Server ) ,( ( DDR / FirstVNF_RAM ) + FirstVNF_Mem ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( RCSe / ( ( RCSe + RMSe ) / ( RMSe - RMSe ) ) ) - Min( Min( Max( RCSe,( MUR + RMSe ) ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.2478793774123832}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( ARS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( MUR * Min( DS ,RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.7907407407407407, "obj2": 0.15255795258447272}, {"determining": "( ( Min( FirstVNF_CPU_Server ,ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( Max( RCSe,MUM ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7556679993248587}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( ( MDR - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( MUM / ( CS * DS ) ) * ( Max( ( Min( Min( MUC ,MUR ) ,MUR ) + RCSe ),( RRSe + MUC ) ) + MUR ) )", "obj1": 0.2037037037037037, "obj2": 0.6998447580377722}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( MRS + FirstVNF_RAM_Server ) - ( MRS + RRS ) )", "choosing": "( ( ( ( CS / RCSe ) + Min( RRSe ,MLU ) ) - Max( ( DS - MLU ),( RCSe * RCSe ) ) ) / ( CS - MUM ) )", "obj1": 0.12222222222222222, "obj2": 0.821394176881437}, {"determining": "( Min( Min( ARS ,FirstVNF_CPU_Server ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + ( ( FirstVNF_Mem_Server * CRS ) / MDR ) ) ) ) - ( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( RCSe - DS ) * ( MUC / DS ) ) / Max( DS,Min( Min( RRSe ,MUR ) ,DS ) ) )", "obj1": 0.8648148148148148, "obj2": 0.09148882988812881}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ACS )", "choosing": "( RRSe - Min( RRSe ,MUM ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( MRS - ACS ) ) ) + ( ( MDR * Min( ( FirstVNF_CPU_Server - FirstVNF_Mem ) ,Max( AMS,FirstVNF_CPU_Server ) ) ) + FirstVNF_CPU_Server ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( DS + DS ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( MUM ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.058651482805687265}, {"determining": "( Max( PN,( ( PN + ( BR * MRS ) ) * ( BR / Max( RRS,( PN / MRS ) ) ) ) ) / ( BR - MRS ) )", "choosing": "( ( Min( DS ,MUM ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.5148148148148148, "obj2": 0.39827906808402286}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.1814814814814815, "obj2": 0.72526000683461}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6610393345282335}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8722222222222222, "obj2": 0.0807890024887066}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / Const ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Max( RRSe,CS ),CS ) ) )", "obj1": 0.7296296296296296, "obj2": 0.18869617738043604}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( RRSe ,DS ) ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.8055555555555556, "obj2": 0.13436673172349967}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( DDR + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( MUM + MUM ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.6611111111111111, "obj2": 0.265396590765976}, {"determining": "( ( DDR + MDR ) - ( AMS / MDR ) )", "choosing": "( ( Min( Max( RRSe,MUR ) ,( CS * MLU ) ) - ( ( CS - RCSe ) + ( ( ( RMSe / MUR ) - ( RCSe / MUR ) ) / ( RRSe - ( CS + MUM ) ) ) ) ) - Max( MUM,RCSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7634578842515916}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.9166666666666666, "obj2": 0.05200846988787422}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,Max( MRS,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RMSe ,RCSe ) - ( ( ( ( DS + RRSe ) + ( DS * RRSe ) ) + ( DS + ( MLU / RMSe ) ) ) - RRSe ) ) / MUM ) - MUR ) / ( MLU + ( RRSe * DS ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7521842248497013}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.4777777777777778, "obj2": 0.4272370980778783}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( RRS * Max( Max( FirstVNF_CPU_Server,FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( ( MLU * CS ),( RRSe + MUR ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.19444444444444445, "obj2": 0.7108252211246754}, {"determining": "( ( PN / ( FirstVNF_RAM_Server + MDR ) ) / ( BR - MRS ) )", "choosing": "( ( MLU + ( ( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - ( ( CS - DS ) + CS ) ) - Min( MUM ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( RCSe ,( MLU / MUR ) ) ) ) ) ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5444444444444444, "obj2": 0.3790304652896811}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + ( ( ACS * MRS ) / ARS ) ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.25, "obj2": 0.643354281688186}, {"determining": "( ( ( Const * ( MRS + Const ) ) * MDR ) / ( FirstVNF_RAM_Server / FirstVNF_RAM ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.26666666666666666, "obj2": 0.6328618521832058}, {"determining": "( ( PN / MRS ) / ( BR - MRS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.5092592592592593, "obj2": 0.4027023068063999}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( Max( Max( MUC,( RCSe - Min( RCSe ,MUR ) ) ),Max( DS,MUM ) ) / Min( ( RMSe + DS ) ,( RMSe * CS ) ) ) + Min( ( ( RCSe + DS ) - ( MUM * DS ) ) ,Max( ( RRSe * DS ),Max( RCSe,RMSe ) ) ) )", "obj1": 0.7962962962962963, "obj2": 0.13759742325800497}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.8574074074074074, "obj2": 0.0980800232169749}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( DDR / FirstVNF_RAM ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) - Max( ( MLU * Max( RCSe,( ( RMSe * CS ) / ( RMSe - RMSe ) ) ) ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) )", "obj1": 0.825925925925926, "obj2": 0.12106893655727079}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( PN + ( AMS + FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ) ) + RCSe )", "obj1": 0.9851851851851852, "obj2": 0.009520661591533421}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( ( DDR / FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - ( ( CS - DS ) + CS ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8333333333333334, "obj2": 0.11359301447891275}, {"determining": "( ( MRS / MRS ) / ( BR - MRS ) )", "choosing": "( DS / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.5981481481481481, "obj2": 0.3429001339381766}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.8148148148148148, "obj2": 0.12221213344806522}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.6611111111111111, "obj2": 0.265396590765976}, {"determining": "( ( FirstVNF_CPU_Server / ARS ) - ( Min( FirstVNF_RAM_Server ,PN ) - PN ) )", "choosing": "( ( CS + ( RMSe / ( MUC * CS ) ) ) - ( ( MUM / CS ) * MUR ) )", "obj1": 0.9944444444444445, "obj2": 0.007915131192467596}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.1962962962962963, "obj2": 0.7043244542953551}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( ARS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( MUR * Min( DS ,RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8518518518518519, "obj2": 0.10344000037042175}, {"determining": "( ( ( Max( ( Const * FirstVNF_CPU ),Max( Min( ACS ,ACS ),FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Min( MDR ,ACS ) ),ACS ) )", "choosing": "( ( ( MUC * DS ) - DS ) * ( ( RMSe - ( RRSe * ( Min( RMSe ,RMSe ) / RCSe ) ) ) + MUR ) )", "obj1": 0.22777777777777777, "obj2": 0.6713819292704728}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( RRS * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MUC / DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.8407407407407408, "obj2": 0.10475138525063885}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6570704441839247}, {"determining": "( Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR / MRS ) ) )", "choosing": "Min( ( ( RCSe - ( ( MUR / RCSe ) / ( CS - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe - RRSe ) ) ) - ( ( DS / Min( MLU ,Max( MLU,MLU ) ) ) + RMSe ) ) - DS ),( ( DS + RRSe ) + DS ) ) )", "obj1": 0.7759259259259259, "obj2": 0.15394574340676714}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( FirstVNF_RAM / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - ( ( MUM / MUR ) * MUR ) )", "obj1": 0.13333333333333333, "obj2": 0.7695446347214949}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU * ACS ) - FirstVNF_Mem ) / ( MRS / ( MDR / ( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + MUM ) * ( MUM - DS ) ) ,RMSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6747555931344873}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( MRS - ACS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( ( Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) - MLU ) ,RCSe ) ) + RCSe )", "obj1": 0.937037037037037, "obj2": 0.04155103583620202}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( RRS * Max( Max( ( BR - MRS ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( MUM - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.13518518518518519, "obj2": 0.7692423743417707}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( MLU ,DS ) - MUC ) ,Max( MUM,MUC ) )", "obj1": 0.7925925925925926, "obj2": 0.14331030668146535}, {"determining": "( ( ( ACS * MRS ) / ARS ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( MUM ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7634578842515916}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8759259259259259, "obj2": 0.07728245486365269}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.20925925925925926, "obj2": 0.6834978828724176}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ARS + RRS ) ) + ( ( PN - MDR ) + Min( ARS ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUM - RMSe ),DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,Min( MLU ,MUR ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6213647602820214}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( MRS * ( CRS + ( MRS - Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7315818050780306}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( AMS,FirstVNF_CPU_Server ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + Min( CRS ,FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / Min( FirstVNF_CPU ,MRS ) ) ) )", "choosing": "Min( Min( ( MUR + RRSe ) ,CS ) ,MUM )", "obj1": 0.837037037037037, "obj2": 0.10526454582725916}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( Min( MLU ,MUM ) / MUC ) )", "obj1": 0.8611111111111112, "obj2": 0.09490543516943784}, {"determining": "( ( ( MDR + ( FirstVNF_Mem * RRS ) ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ACS ),Min( ( FirstVNF_CPU_Server + ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6421084962268393}, {"determining": "( ( PN / ( MDR * ( FirstVNF_RAM_Server * FirstVNF_CPU_Server ) ) ) / ( BR - MRS ) )", "choosing": "( RMSe - ( ( ( RCSe + Max( RMSe,DS ) ) + ( MUC * Min( CS ,MUM ) ) ) / RCSe ) )", "obj1": 0.5222222222222223, "obj2": 0.3914977156133335}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( MRS - Max( BR,( ( AMS + ( PN * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( DS / RMSe ) * Max( RCSe,RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7315818050780306}], "7": [{"determining": "Min( ( RRS - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) + ( ( CS * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * Max( CRS,Min( Min( ARS ,Min( Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ,( RRS - Const ) ) ) ,Max( BR,( FirstVNF_Mem_Server * DDR ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( MUM,RRSe ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - ( RMSe + MUC ) ),MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,( FirstVNF_Mem - BR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8292336015951709}, {"determining": "( Min( ACS ,( FirstVNF_CPU_Server * Min( DDR ,FirstVNF_Mem_Server ) ) ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,( MUM / RMSe ) ) - ( CS * RMSe ) ) - ( ( MLU * CS ) + ( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( MUR / MUM ) * ( CS / RRSe ) ) * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5012435396753333}, {"determining": "( ( ( ACS * ( ( FirstVNF_CPU * FirstVNF_RAM ) - Min( ( ( ARS / FirstVNF_CPU ) / PN ) ,( DDR + FirstVNF_Mem ) ) ) ) / ARS ) + ( FirstVNF_RAM_Server * MRS ) )", "choosing": "( ( ( RMSe / MUC ) - ( MUR * Max( ( Max( DS,( CS - RMSe ) ) + ( DS / ( ( RCSe - CS ) * ( RCSe * RRSe ) ) ) ),CS ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RCSe ) )", "obj1": 0.5462962962962963, "obj2": 0.3642400715011762}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5074074074074074, "obj2": 0.37731833586211455}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( ( CS - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.34629629629629627, "obj2": 0.5515595558096837}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4425925925925926, "obj2": 0.44224206527542503}, {"determining": "Min( ( Max( Min( FirstVNF_CPU_Server ,MRS ),( FirstVNF_Mem / ( DDR + Min( Min( PN ,FirstVNF_CPU ) ,AMS ) ) ) ) - PN ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( RMSe - RRSe ) - Min( Max( Min( ( MUM - RRSe ) ,Max( RRSe,MLU ) ),MUR ) ,CS ) )", "obj1": 0.6407407407407407, "obj2": 0.28392330129109666}, {"determining": "Min( ( Max( ( AMS * RRS ),( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ) ) - FirstVNF_CPU ) ,Max( Max( ( DDR / RRS ),( FirstVNF_CPU_Server / ACS ) ),MDR ) )", "choosing": "( ( ( MLU - RRSe ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.5907407407407408, "obj2": 0.3280658812862139}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + ( ( MRS * Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( ARS - FirstVNF_CPU_Server ) ) ) + ( CRS + FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe * RMSe ) ) ) - MUR ) ,Max( MUR,( RCSe - Min( ( Min( Min( Min( MUR ,MUC ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) - MLU ) ,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2991484178081107}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + MDR ) ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - ( ( ( Min( RMSe ,RCSe ) - DS ) / MUM ) - MUR ) )", "obj1": 0.5518518518518518, "obj2": 0.346178271904067}, {"determining": "( ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) * FirstVNF_RAM ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUM - RMSe ) * Max( ( Min( ( RCSe / ( MLU / MLU ) ) ,RCSe ) + ( RMSe / ( Min( MUR ,MLU ) / RRSe ) ) ),Min( ( ( RCSe / ( MLU / MUR ) ) / ( MUR / CS ) ) ,RRSe ) ) ) ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5850019364532228}, {"determining": "( ( RRS * MDR ) + ( ARS - ( MDR + ( FirstVNF_CPU_Server + ACS ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( ( ( MUM - RMSe ) * DS ) - MUM ) )", "obj1": 0.43148148148148147, "obj2": 0.45970145990552264}, {"determining": "( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ARS - ( ARS / BR ) ) )", "choosing": "( ( MUM - ( ( MUM - ( ( ( ( RCSe + RRSe ) - RMSe ) * DS ) - MUM ) ) * Max( ( Min( ( RCSe / ( MLU / MLU ) ) ,RCSe ) + ( RMSe / ( Min( MUR ,MLU ) / RRSe ) ) ),Min( ( ( RCSe / ( MLU / MUR ) ) / ( RCSe / CS ) ) ,RRSe ) ) ) ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5018518518518519, "obj2": 0.39337463794131583}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.45970145990552264}, {"determining": "( ( FirstVNF_RAM / Min( MRS ,ACS ) ) - ( ( DDR / FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( MUC + RRSe ) ) + ( ( ( MUR / MUC ) + ( MLU - RMSe ) ) / MUR ) ) * ( ( CS * DS ) - MUM ) )", "obj1": 0.6925925925925925, "obj2": 0.2271968783723671}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + MLU ) ) + MUR ) )", "obj1": 0.7351851851851852, "obj2": 0.17833952353327936}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.6777777777777778, "obj2": 0.2297060667629512}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( PN + ( AMS + FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ) ) + RCSe )", "obj1": 0.9851851851851852, "obj2": 0.009520661591533421}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7592592592592593, "obj2": 0.16073645478420528}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( ( MLU * CS ),( RRSe + MUR ) ) - RMSe ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.12962962962962962, "obj2": 0.774253694848951}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.362962962962963, "obj2": 0.530297068323438}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + Min( ACS ,CRS ) ) + ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "( Min( CS ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) - ( ( Min( DS ,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.6066242248311635}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + Max( ( ( Max( ( MDR * MRS ),Const ) / MRS ) * FirstVNF_CPU_Server ),AMS ) ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + ( Min( Min( MLU ,( ( RMSe / RRSe ) / Min( MUR ,( MLU / MUC ) ) ) ) ,( RRSe / MUC ) ) - Min( MUC ,( Min( MUC ,( MLU / ( MUM + RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.48703703703703705, "obj2": 0.4069302446569975}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,( ( PN + Max( FirstVNF_Mem_Server,( BR + Const ) ) ) - FirstVNF_RAM_Server ) ) ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) ,( ( RCSe / ( ( MUR + Max( ( Min( RRSe ,RMSe ) * MUR ),( MUC * ( DS + MUM ) ) ) ) - ( RMSe - RMSe ) ) ) - RCSe ) )", "obj1": 0.9555555555555556, "obj2": 0.019471174228174588}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - Max( FirstVNF_RAM,Const ) )", "choosing": "( ( ( MLU / RRSe ) - ( ( ( Max( RMSe,RCSe ) / MLU ) - MLU ) * ( MUR * ( MUM * MLU ) ) ) ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.3888888888888889, "obj2": 0.5127285627504993}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / MRS ) ,( ( BR - MRS ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) / RRSe ) + RRSe ) / ( ( CS + MUM ) + ( CS + MUM ) ) )", "obj1": 0.4685185185185185, "obj2": 0.432309784755859}, {"determining": "Min( ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) - RCSe ) - CS )", "obj1": 0.3333333333333333, "obj2": 0.5727491667928903}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( ARS + ( FirstVNF_Mem * RRS ) ) * RRS ) ) / FirstVNF_CPU ),FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( MUM - RCSe ) * ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + RMSe ) ) - ( RMSe - Min( ( ( ( ( ( CS * MUR ) + MUM ) * DS ) / MUC ) / RCSe ) ,( MUC * ( Max( MUR,( DS + CS ) ) - ( MUM + ( RCSe - ( MUM / RMSe ) ) ) ) ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5286550870482969}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.6129629629629629, "obj2": 0.3159485030965596}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + DDR ) ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.674074074074074, "obj2": 0.25443499866843344}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( ARS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,RRS ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( MDR + Min( FirstVNF_CPU_Server ,Min( DDR ,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * ( ( Max( RMSe,DS ) * RCSe ) + ( RRSe / ( CS - CS ) ) ) ) ) ) - RMSe ) )", "obj1": 0.8555555555555555, "obj2": 0.09355521024810304}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ARS + RRS ) ) + ( ( PN - MDR ) + DDR ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUM - RMSe ),DS ) - MUM ) * ( ( MUM - MUC ) * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,Min( MLU ,MUR ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6323312334847393}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + Min( Min( ( FirstVNF_CPU_Server / DDR ) ,FirstVNF_Mem ) ,( FirstVNF_Mem + DDR ) ) ) ),( FirstVNF_CPU_Server + MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( Min( ( RMSe - Min( ( ( RCSe * ( CS * MUR ) ) - MUM ) ,RRSe ) ) ,RCSe ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.5925925925925926, "obj2": 0.32397849936221834}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUR,MUC ) )", "obj1": 0.7111111111111111, "obj2": 0.21348313843819555}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5803945953583144}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( ( FirstVNF_RAM / Const ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( RRSe + MUR ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7851851851851852, "obj2": 0.1418647862985169}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU * ACS ) - FirstVNF_Mem ) / ( MRS / ( MDR / ( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + MUM ) * ( MUM - DS ) ) ,RMSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6747555931344873}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,Max( MRS,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RMSe ,RCSe ) - ( ( ( ( DS + RRSe ) + ( DS * RRSe ) ) + ( DS + ( MLU / RMSe ) ) ) - RRSe ) ) / MUM ) - MUR ) / ( MLU + ( RRSe * DS ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7521842248497013}, {"determining": "( Min( ( FirstVNF_CPU_Server * ARS ) ,( ( CRS + FirstVNF_CPU ) + ( FirstVNF_RAM_Server * ( ( ( FirstVNF_Mem / Const ) / CRS ) * FirstVNF_Mem_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),( ( MUC - RCSe ) + MUR ) ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - Max( RRSe,( MUC * ( DS + MUM ) ) ) )", "obj1": 0.7148148148148148, "obj2": 0.19842172019926024}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ACS ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,Min( RRSe ,MUM ) ),CS ) ) )", "obj1": 0.8407407407407408, "obj2": 0.10331621557636644}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.47962962962962963, "obj2": 0.4136393951746558}, {"determining": "Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,RMSe ) )", "obj1": 0.12222222222222222, "obj2": 0.8207218966636233}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6173149034385048}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( DDR + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU,Max( MDR,( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( ( ( Max( RCSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) * ( RMSe / ( ( Max( MUC,( CS + ( MUM / ( RMSe * MUM ) ) ) ) + RMSe ) * MUC ) ) )", "obj1": 0.6518518518518519, "obj2": 0.2724589866994761}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6500355230590961}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.8148148148148148, "obj2": 0.12201899339878167}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( Const - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ),Min( ACS ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - Min( RMSe ,( MLU - MUC ) ) ) - ( ( MLU * CS ) + ( ( MUR / ( MLU * MLU ) ) + MUR ) ) ) - ( ( ( Min( RMSe ,RCSe ) - DS ) / MUM ) - MUR ) )", "obj1": 0.5518518518518518, "obj2": 0.346178271904067}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.1814814814814815, "obj2": 0.72526000683461}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6213647602820214}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + RMSe ) )", "obj1": 0.6722222222222223, "obj2": 0.25921937242383186}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / MUM ) - MUR ) ,Max( MUM,MUC ) )", "obj1": 0.8092592592592592, "obj2": 0.12933695989609856}, {"determining": "( ( ( ACS + ( FirstVNF_Mem / BR ) ) / Min( Min( RRS ,( CRS + FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_Mem_Server - BR ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( MLU + MLU ) + MUR ) ,MUM ) - CS ) / Max( ( Max( ( DS / RMSe ),( RCSe * CS ) ) * MUC ),( ( RMSe + MUM ) - ( ( MUC - CS ) + ( MUM / RMSe ) ) ) ) ) ) - ( Max( CS,MUR ) - ( CS * RMSe ) ) ) - ( ( MUC / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + ( ( ACS * MRS ) / ARS ) ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.25, "obj2": 0.643354281688186}, {"determining": "Min( ( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( CRS,MRS ) )", "choosing": "( ( ( ( MUR + RMSe ) / Min( ( MLU * ( ( DS / RRSe ) - MLU ) ) ,MUC ) ) - RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.3296296296296296, "obj2": 0.5738044819529241}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_RAM,ACS ) / Max( FirstVNF_CPU_Server,( MDR - DDR ) ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + ( ( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - ( ( CS - DS ) + CS ) ) - Min( MUM ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( RCSe ,( MLU / MUR ) ) ) ) ) ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.8925925925925926, "obj2": 0.0640160097009591}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.3925925925925926, "obj2": 0.5081134367303437}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( Max( ( FirstVNF_Mem / ( Const + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ),MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / Min( Min( ( DS + MUR ) ,Max( RCSe,MUM ) ) ,( ( MUM - CS ) + ( RRSe / DS ) ) ) ) ) - DS ) ,Max( MUM,MUC ) )", "obj1": 0.9037037037037037, "obj2": 0.06260207966341567}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.4777777777777778, "obj2": 0.4272370980778783}, {"determining": "( Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7556061469858423}, {"determining": "Min( ( FirstVNF_RAM_Server / ARS ) ,( ( ( ( ( BR * ( Const / FirstVNF_RAM ) ) * CRS ) - AMS ) * MDR ) + DDR ) )", "choosing": "( ( ( Min( ( Max( RRSe,MUC ) - DS ) ,( ( ( RRSe / RCSe ) / RMSe ) - ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) * ( MLU / MLU ) ) ) ) - Max( CS,MUR ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.19444444444444445, "obj2": 0.7081401886056177}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) / ARS ) - ( DDR * BR ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MUR ) ) - ( ( ( CS + RRSe ) * Min( DS ,Min( ( ( RCSe - MUM ) / MUM ) ,MUR ) ) ) - ( RRSe + DS ) ) ) - ( ( MUM / MUR ) * MUR ) )", "obj1": 0.14814814814814814, "obj2": 0.7588127061759897}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.20925925925925926, "obj2": 0.6834978828724176}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( ( MDR - DDR ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( AMS * Const ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,( ( MLU + ( MLU - MUC ) ) / DS ) )", "obj1": 0.9518518518518518, "obj2": 0.0314532167464768}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.9166666666666666, "obj2": 0.05200846988787422}, {"determining": "( ( ( MDR + ( FirstVNF_Mem * RRS ) ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ACS ),Min( ( FirstVNF_CPU_Server + ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6421084962268393}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( CS + MUM ) ,MUM )", "obj1": 0.8685185185185185, "obj2": 0.08930837058649686}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( MUM - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.8018518518518518, "obj2": 0.1327246183961369}, {"determining": "( Min( ( ( AMS * Const ) - ( ( ( BR - MRS ) + FirstVNF_RAM_Server ) * ( DDR / FirstVNF_RAM ) ) ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Min( ( Min( CS ,DS ) / MUM ) ,DS ) / ( ( MUR + ( ( RMSe / MUM ) - MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.9277777777777778, "obj2": 0.043430507178381296}, {"determining": "( ( ( ( CRS / FirstVNF_RAM_Server ) - ( AMS / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( ( MDR - FirstVNF_Mem ) - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( MUM / ( CS * DS ) ) * ( Max( ( Min( Min( MUC ,MUR ) ,MUR ) + RCSe ),( RRSe + MUC ) ) + MUR ) )", "obj1": 0.2037037037037037, "obj2": 0.6998447580377722}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * Max( FirstVNF_Mem,( ( RRS / DDR ) / Const ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( DS + RRSe ) / ( ( CS + MUM ) - Max( Max( RRSe,CS ),CS ) ) )", "obj1": 0.7925925925925926, "obj2": 0.13980133731627023}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( Max( FirstVNF_Mem,CRS ) * Min( ARS ,( MRS - ACS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( MUM ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / RMSe ) ,RCSe ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.0032349032841287174}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( DDR ,( MRS - ACS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MLU ) ,RCSe ) ) + RCSe )", "obj1": 0.9407407407407408, "obj2": 0.03698633636378975}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUR,MUC ) )", "obj1": 0.7111111111111111, "obj2": 0.21348313843819555}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.1962962962962963, "obj2": 0.7043244542953551}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.06980760553505992}, {"determining": "( Min( Min( ARS ,FirstVNF_CPU_Server ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + ( ( FirstVNF_Mem_Server * CRS ) / MDR ) ) ) ) - ( FirstVNF_CPU / ACS ) )", "choosing": "( ( ( RCSe - DS ) * ( MUC / DS ) ) / Max( DS,Min( Min( RRSe ,MUR ) ,DS ) ) )", "obj1": 0.8648148148148148, "obj2": 0.09148882988812881}, {"determining": "Min( Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) ,( FirstVNF_Mem * FirstVNF_Mem ) )", "choosing": "( ( MUR - ( ( RMSe * RCSe ) + RRSe ) ) - MUM )", "obj1": 0.924074074074074, "obj2": 0.050458502567682265}, {"determining": "( ( Min( Min( ARS ,FirstVNF_Mem_Server ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( ( ARS / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_CPU * FirstVNF_RAM_Server ) ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( MUC / ( ( CS + MUM ) - Max( ( Max( RCSe,RMSe ) + MUM ),MUC ) ) )", "obj1": 0.7962962962962963, "obj2": 0.13486286028966024}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( DDR + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( ( ( FirstVNF_RAM_Server * ACS ) - ( AMS / ACS ) ),( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,( MLU + Min( MUC ,RRSe ) ) ) ) / ( ( Max( ( MUM + MUM ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( MLU * RMSe ) ) ) - RMSe ) )", "obj1": 0.6537037037037037, "obj2": 0.2700112304234891}, {"determining": "( Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR / MRS ) ) )", "choosing": "Min( ( ( RCSe - ( ( MUR / RCSe ) / ( CS - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe - RRSe ) ) ) - ( ( DS / Min( MLU ,Max( MLU,MLU ) ) ) + RMSe ) ) - DS ),( ( DS + RRSe ) + DS ) ) )", "obj1": 0.7759259259259259, "obj2": 0.15394574340676714}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + MLU ) ) + MUR ) )", "obj1": 0.7314814814814815, "obj2": 0.18117307875666033}, {"determining": "( ( ( ( ( MDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( AMS + FirstVNF_Mem_Server ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,( MUC / DS ) ) / ( ( CS + RRSe ) + ( MUM / DS ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6610393345282335}, {"determining": "( ( ( Max( ( Const * FirstVNF_CPU ),Max( Min( ACS ,ACS ),FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Min( MDR ,ACS ) ),ACS ) )", "choosing": "( ( ( MUC * DS ) - DS ) * ( ( RMSe - ( RRSe * ( Min( RMSe ,RMSe ) / RCSe ) ) ) + MUR ) )", "obj1": 0.22777777777777777, "obj2": 0.6713819292704728}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( DDR / FirstVNF_RAM ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) - Max( ( MLU * Max( RCSe,( ( RMSe * CS ) / ( RMSe - RMSe ) ) ) ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) )", "obj1": 0.825925925925926, "obj2": 0.12106893655727079}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( MUR * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.6094258551471039}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.6611111111111111, "obj2": 0.265396590765976}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,ACS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( PN + ( AMS + FirstVNF_RAM_Server ) ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ) ) + RCSe )", "obj1": 0.9888888888888889, "obj2": 0.006981463403646956}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6213647602820214}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.20555555555555555, "obj2": 0.695438923208423}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( MRS - Max( BR,( ( AMS + ( PN * FirstVNF_RAM_Server ) ) - FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( DS / RMSe ) * Max( RCSe,RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7315818050780306}, {"determining": "( ( FirstVNF_Mem * AMS ) / Min( ARS ,Max( ( FirstVNF_RAM / FirstVNF_Mem ),( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( Max( RRSe,MUR ) / Max( Min( DS ,RRSe ),Min( DS ,RRSe ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4311193401615686}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( MUC * ( DS + MUM ) ) ) ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.9555555555555556, "obj2": 0.019471174228174588}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ),MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( RRSe ,DS ) ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.9481481481481482, "obj2": 0.03281557594762384}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( MRS * ( CRS + ( MRS - Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7315818050780306}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( DDR + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( Max( ( MUM + MUM ),Max( CS,RRSe ) ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 0.6611111111111111, "obj2": 0.265396590765976}], "8": [{"determining": "( Max( ( ( FirstVNF_RAM * ( ( ARS + ( FirstVNF_Mem * RRS ) ) * RRS ) ) / FirstVNF_CPU ),FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( MUM - RCSe ) * ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + RMSe ) ) - ( RMSe - Min( ( ( ( ( ( CS * MUR ) + MUM ) * DS ) / MUC ) / RCSe ) ,( MUC * ( Max( MUR,( DS + CS ) ) - ( MUM + ( RCSe - ( MUM / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( RRS - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( DS - CS ) + Max( RCSe,RRSe ) ) + ( ( CS * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8279649469175839}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + ( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2833002184114989}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + ( ( MRS * Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( MRS - ACS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5648148148148148, "obj2": 0.3319278519797425}, {"determining": "( Min( ACS ,( FirstVNF_CPU_Server * Min( DDR ,FirstVNF_Mem_Server ) ) ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,( MUM / RMSe ) ) - ( CS * RMSe ) ) - ( ( MLU * CS ) + ( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( MUR / MUM ) * ( CS / RRSe ) ) * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5012435396753333}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.6222222222222222, "obj2": 0.2749008310626992}, {"determining": "Min( Max( Max( MDR,AMS ),RRS ) ,( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ( FirstVNF_Mem - BR ) ) / MDR ) ) - ( RRS - PN ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MUM ) ) - Max( ( MLU * ( RRSe / RMSe ) ),( MUR + MUR ) ) ) - RCSe )", "obj1": 0.7296296296296296, "obj2": 0.172106536622449}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( ( CS - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.34629629629629627, "obj2": 0.5515595558096837}, {"determining": "Min( ( ( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( MUM - ( ( ( MUM - RMSe ) * DS ) - MUM ) ) * Max( ( Min( ( RCSe / ( MLU / MLU ) ) ,RCSe ) + ( RMSe / ( Min( MUR ,MLU ) / RRSe ) ) ),Min( ( ( RCSe / ( MLU / MUR ) ) / ( MUR / CS ) ) ,RRSe ) ) ) ) - MUM )", "obj1": 0.8351851851851851, "obj2": 0.09959779259048773}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + Max( ( ( Max( ( MDR * MRS ),Const ) / MRS ) * FirstVNF_CPU_Server ),AMS ) ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + ( Min( Min( MLU ,( ( RMSe / RRSe ) / Min( MUR ,( MLU / MUC ) ) ) ) ,( RRSe / MUC ) ) - Min( MUC ,( Min( MUC ,( MLU / ( MUM + RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.48703703703703705, "obj2": 0.4069302446569975}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( DS / RMSe ) * Max( RCSe,RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5185185185185185, "obj2": 0.35702564724554076}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.45970145990552264}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + MLU ) ) + MUR ) )", "obj1": 0.6574074074074074, "obj2": 0.2490640719285819}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5, "obj2": 0.38176447464104746}, {"determining": "( ( RRS * MDR ) + ( ARS - ( MDR + ( FirstVNF_CPU_Server + ACS ) ) ) )", "choosing": "( Min( MUM ,CS ) * ( ( ( MUM - RMSe ) * DS ) - MUM ) )", "obj1": 0.43148148148148147, "obj2": 0.45970145990552264}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.46296296296296297, "obj2": 0.4278161413409209}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,( ( PN + Max( FirstVNF_Mem_Server,( BR + Const ) ) ) - FirstVNF_RAM_Server ) ) ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) ,( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + RMSe ) )", "obj1": 0.6462962962962963, "obj2": 0.2687854581651247}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( ( MLU * CS ),( RRSe + MUR ) ) - RMSe ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.12962962962962962, "obj2": 0.774253694848951}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( ARS + ( FirstVNF_Mem * RRS ) ) * RRS ) ) / FirstVNF_CPU ),FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( MUM - RCSe ) * ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + RMSe ) ) - ( RMSe - Min( ( ( ( ( ( CS * MUR ) + MUM ) * DS ) / MUC ) / RCSe ) ,( MUC * ( Max( MUR,( DS + CS ) ) - ( MUM + ( RCSe - ( MUM / RMSe ) ) ) ) ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5286550870482969}, {"determining": "( ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) / ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ARS * FirstVNF_CPU_Server ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / Max( ( RRSe / DS ),( MUR + RRSe ) ) ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.0753413852423572}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + MDR ) ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - ( ( ( Min( RMSe ,RCSe ) - DS ) / MUM ) - MUR ) )", "obj1": 0.5481481481481482, "obj2": 0.3515194499394838}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - Min( RRSe ,MUM ) )", "obj1": 0.29444444444444445, "obj2": 0.594063923616093}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( DDR / FirstVNF_RAM ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) - Max( ( MLU * Max( RCSe,( ( RMSe * CS ) / ( RMSe - RMSe ) ) ) ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) )", "obj1": 0.825925925925926, "obj2": 0.12106893655727079}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( ARS / MRS ) ,( ( BR - MRS ) + DDR ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) / RRSe ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.8574074074074074, "obj2": 0.08855277997961944}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( DDR - FirstVNF_RAM ) * ( ( Max( Const,Max( Const,CRS ) ) + Min( RRS ,ACS ) ) + FirstVNF_CPU_Server ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,Max( MUM,MUC ) ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7166666666666667, "obj2": 0.19763061614929744}, {"determining": "( Max( ( Min( MRS ,( ACS / FirstVNF_CPU_Server ) ) / MDR ),FirstVNF_Mem ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( ( RRSe / MLU ) + RRSe ) / Min( RMSe ,( ( ( MUM + MUR ) / MUC ) / ( RCSe / Min( ( ( MUM - RCSe ) - MUR ) ,RMSe ) ) ) ) )", "obj1": 0.3888888888888889, "obj2": 0.5118373081212018}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) + ( MRS * FirstVNF_RAM_Server ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ) + MUM ) / RCSe ) )", "obj1": 0.7574074074074074, "obj2": 0.16264660580274445}, {"determining": "( Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR / MRS ) ) )", "choosing": "Min( ( ( RCSe - ( ( MUR / RCSe ) / ( CS - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe - RRSe ) ) ) - ( ( DS / Min( MLU ,Max( MLU,MLU ) ) ) + RMSe ) ) - DS ),( ( DS + RRSe ) + DS ) ) )", "obj1": 0.7759259259259259, "obj2": 0.15394574340676714}, {"determining": "( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,Min( CS ,MUR ) ) ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) )", "obj1": 0.7111111111111111, "obj2": 0.21008966429811177}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) * FirstVNF_RAM ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUM - RMSe ) * Max( ( Min( ( RCSe / ( MLU / MLU ) ) ,RCSe ) + ( RMSe / ( Min( MUR ,MLU ) / RRSe ) ) ),Min( ( ( RCSe / ( MLU / MUR ) ) / ( MUR / CS ) ) ,RRSe ) ) ) ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5850019364532228}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( CS * ( CS * RCSe ) ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.604394027889667}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4425925925925926, "obj2": 0.44224206527542503}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + RMSe ) )", "obj1": 0.7, "obj2": 0.22106234731135047}, {"determining": "( ( ( ( ( MDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( AMS + FirstVNF_Mem_Server ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,( MUC / DS ) ) / ( ( CS + RRSe ) + ( MUM / DS ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6610393345282335}, {"determining": "Min( ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.566766558875308}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ),( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUR ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.6777777777777778, "obj2": 0.2297060667629512}, {"determining": "( ( ( FirstVNF_Mem_Server - MRS ) / ARS ) - ( DDR * BR ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MUR ) ) - ( ( ( CS + RRSe ) * Min( DS ,Min( ( ( RCSe - MUM ) / MUM ) ,MUR ) ) ) - ( RRSe + DS ) ) ) - ( ( MUM / MUR ) * MUR ) )", "obj1": 0.14814814814814814, "obj2": 0.7588127061759897}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( ( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( ( ARS / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - ( MUC / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7712869152074854}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5803945953583144}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( DDR / FirstVNF_RAM ),FirstVNF_CPU ) )", "choosing": "( ( ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5166666666666667, "obj2": 0.37298209852303876}, {"determining": "( ( Min( Min( Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) ) ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - ( RMSe - RRSe ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.015876642697631994}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ) ) + RCSe )", "obj1": 0.65, "obj2": 0.25396065898013076}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.362962962962963, "obj2": 0.530297068323438}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.4777777777777778, "obj2": 0.4272370980778783}, {"determining": "( ( FirstVNF_RAM / Min( MRS ,ACS ) ) - ( ( DDR / FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( MUC + RRSe ) ) + ( ( ( MUR / MUC ) + ( MLU - RMSe ) ) / MUR ) ) * ( ( CS * DS ) - MUM ) )", "obj1": 0.6925925925925925, "obj2": 0.2271968783723671}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,Max( MRS,( FirstVNF_Mem * FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( Min( RMSe ,RCSe ) - ( ( ( ( DS + RRSe ) + ( DS * RRSe ) ) + ( DS + ( MLU / RMSe ) ) ) - RRSe ) ) / MUM ) - MUR ) / ( MLU + ( RRSe * DS ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7521842248497013}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ARS + RRS ) ) + ( ( PN - MDR ) + DDR ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MUM - RMSe ),DS ) - MUM ) * ( ( MUM - MUC ) * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,Min( MLU ,MUR ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6323312334847393}, {"determining": "Min( ( BR / DDR ) ,Max( MRS,AMS ) )", "choosing": "( Max( ( MLU / ( DS * ( ( DS * Max( RRSe,Max( CS,RMSe ) ) ) * RRSe ) ) ),MUR ) + Min( ( RRSe - RMSe ) ,Max( ( Min( ( ( CS * MUR ) - CS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( ( MUM / ( CS + ( CS - Max( DS,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8154842206263543}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.44074074074074077, "obj2": 0.44243021560947526}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.9092592592592592, "obj2": 0.05697057240430346}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7592592592592593, "obj2": 0.16073645478420523}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6500355230590961}, {"determining": "Min( Const ,( FirstVNF_Mem - BR ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.1814814814814815, "obj2": 0.7221055833841867}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Min( ( Min( CS ,DS ) / MUM ) ,DS ) / ( ( MUR + ( ( RMSe / MUM ) - MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.8537037037037037, "obj2": 0.09601884654076379}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5074074074074074, "obj2": 0.37731833586211455}, {"determining": "( ( ( Max( ( Const * FirstVNF_CPU ),Max( Min( ACS ,ACS ),FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Min( MDR ,ACS ) ),ACS ) )", "choosing": "( ( ( MUC * DS ) - DS ) * ( ( RMSe - ( RRSe * ( Min( RMSe ,RMSe ) / RCSe ) ) ) + MUR ) )", "obj1": 0.22777777777777777, "obj2": 0.6713819292704728}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6173149034385048}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.6777777777777778, "obj2": 0.2297060667629512}, {"determining": "Min( ( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( CRS,MRS ) )", "choosing": "( ( ( ( MUR + RMSe ) / Min( ( MLU * ( ( DS / RRSe ) - MLU ) ) ,MUC ) ) - RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.3296296296296296, "obj2": 0.5738044819529241}, {"determining": "( Min( Min( ( Max( ( FirstVNF_RAM / Const ),ACS ) * ACS ) ,FirstVNF_CPU_Server ) ,( MRS - MDR ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( ( RCSe * Min( MUM ,( MLU + ( MUR - RMSe ) ) ) ),RRSe ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.7814814814814814, "obj2": 0.14273946121415762}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.47962962962962963, "obj2": 0.4136393951746558}, {"determining": "( Min( Min( ( ARS - Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( DDR + FirstVNF_Mem ) ) ) ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - Max( CS,( MUC * ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) + MUM ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.011745614253508983}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.9166666666666666, "obj2": 0.05200846988787422}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( MRS / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) + ( MRS / FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe / Min( ( ( RCSe - ( MUC + MLU ) ) + ( ( RCSe - CS ) + RRSe ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.061856215810891915}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.1962962962962963, "obj2": 0.7043244542953551}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.8148148148148148, "obj2": 0.12201899339878167}, {"determining": "( Max( ( MDR + ARS ),( ( DDR - FirstVNF_RAM_Server ) * Max( Max( MDR,( ( AMS * Min( MDR ,ACS ) ) - FirstVNF_Mem ) ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + Max( ( ( ( ( MUC - RRSe ) - DS ) / Min( ( MUR / MUR ) ,MUM ) ) + MUR ),MUC ) ) + ( RRSe + RRSe ) ) / Min( ( RCSe - DS ) ,( MUC / DS ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7308623311611574}, {"determining": "( ( FirstVNF_RAM - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) / Min( ARS ,ACS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.3925925925925926, "obj2": 0.5081134367303437}, {"determining": "( Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7556061469858423}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ACS ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,Min( RRSe ,MUM ) ),CS ) ) )", "obj1": 0.8092592592592592, "obj2": 0.12540946952153983}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( CRS + Min( ( ARS / FirstVNF_RAM_Server ) ,( FirstVNF_Mem + MDR ) ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - ( ( ( Min( RMSe ,RCSe ) - DS ) / MUM ) - MUR ) )", "obj1": 0.5518518518518518, "obj2": 0.346178271904067}, {"determining": "( ( ( CRS + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( ( ( RRS / PN ) - PN ) / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RCSe / MLU ) - Max( ( Min( Max( ( MUR * CS ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe / DS ) ) ) - Max( CS,( MUC * ( DS + MUM ) ) ) )", "obj1": 0.7148148148148148, "obj2": 0.19839765351099328}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( MRS / ACS ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( ( PN * ( ACS / RRS ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( ( Min( ( RRSe / RCSe ) ,RCSe ) - MUC ) - ( DS * RRSe ) ) * RCSe ) ,RMSe ) ) )", "obj1": 0.2037037037037037, "obj2": 0.6967850654511977}, {"determining": "Min( ( Max( ( FirstVNF_Mem / ( Const - Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ),Min( ACS ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - Min( RMSe ,( MLU - MUC ) ) ) - ( ( MLU * CS ) + ( ( MUR / ( MLU * MLU ) ) + MUR ) ) ) - ( ( ( Min( RMSe ,RCSe ) - DS ) / MUM ) - MUR ) )", "obj1": 0.5518518518518518, "obj2": 0.346178271904067}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( ( ARS / FirstVNF_RAM_Server ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( Min( Const ,FirstVNF_Mem_Server ) - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( MUC / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( ( RRSe - RMSe ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.7925925925925926, "obj2": 0.13788177318035857}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.362962962962963, "obj2": 0.530297068323438}, {"determining": "( ( ( ACS + ( FirstVNF_Mem / BR ) ) / Min( Min( RRS ,( CRS + FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_Mem_Server - BR ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( MLU + MLU ) + MUR ) ,MUM ) - CS ) / Max( ( Max( ( DS / RMSe ),( RCSe * CS ) ) * MUC ),( ( RMSe + MUM ) - ( ( MUC - CS ) + ( MUM / RMSe ) ) ) ) ) ) - ( Max( CS,MUR ) - ( CS * RMSe ) ) ) - ( ( MUC / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU * ACS ) - FirstVNF_Mem ) / ( MRS / ( MDR / ( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + MUM ) * ( MUM - DS ) ) ,RMSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6747555931344873}, {"determining": "( ( PN * MDR ) * Min( RRS ,DDR ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6933259622138463}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( MRS * ( CRS + ( MRS - Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6494735838601409}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + ( ( ACS * MRS ) / ARS ) ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) * ( ( RMSe - ( MUC + RRSe ) ) + MUR ) )", "obj1": 0.25, "obj2": 0.643354281688186}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( ( FirstVNF_RAM / Const ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( RRSe + MUR ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7851851851851852, "obj2": 0.1418647862985169}, {"determining": "( ( ( FirstVNF_CPU_Server - ( AMS / ACS ) ) - ( MDR + MRS ) ) + ( RRS - Const ) )", "choosing": "( Max( RMSe,CS ) * ( Max( RMSe,( MUC + RRSe ) ) + MUR ) )", "obj1": 0.20925925925925926, "obj2": 0.6834978828724176}, {"determining": "( ( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( RCSe - DS ),MUC ) )", "obj1": 0.95, "obj2": 0.027454036687613443}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ),MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( RRSe ,DS ) ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.9481481481481482, "obj2": 0.03281557594762384}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( ARS / FirstVNF_RAM_Server ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + ( ( RMSe / MUM ) - MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe - RRSe ) ) ) - ( DS + RMSe ) ) - DS ),( ( DS + RRSe ) + DS ) ) )", "obj1": 0.8055555555555556, "obj2": 0.13122622622986255}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MLU ) ,RCSe ) ) + RCSe )", "obj1": 0.8851851851851852, "obj2": 0.07246005195283141}, {"determining": "Min( ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( FirstVNF_CPU_Server,FirstVNF_CPU ) )", "choosing": "( ( ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) - RCSe ) - CS )", "obj1": 0.3333333333333333, "obj2": 0.5727491667928903}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const + AMS ) ) * PN ) / ( ACS - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6801723465782513}, {"determining": "( ( PN * MDR ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9814814814814815, "obj2": 0.007673424402852712}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( Max( ( ARS - ( MDR + FirstVNF_CPU ) ),Min( FirstVNF_CPU_Server ,MRS ) ),MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( RRSe ,DS ) ) / ( ( CS + MUM ) - Max( Min( RRSe ,RRSe ),CS ) ) )", "obj1": 0.9333333333333333, "obj2": 0.04111957866931457}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( MUR * Min( ( ( RCSe - Min( RCSe ,RRSe ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.2759259259259259, "obj2": 0.6191173639163466}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_RAM + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( MUC * ( DS + MUM ) ) ) ) / ( RMSe - MUR ) ) ) - ( MUR * ( ( RRSe - MUC ) + DS ) ) ) ,Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) )", "obj1": 0.9555555555555556, "obj2": 0.019471174228174588}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6213647602820214}, {"determining": "Min( ( FirstVNF_RAM_Server / ARS ) ,( ( ( ( ( BR * ( Const / FirstVNF_RAM ) ) * CRS ) - AMS ) * MDR ) + DDR ) )", "choosing": "( ( ( Min( ( Max( RRSe,MUC ) - DS ) ,( ( ( RRSe / RCSe ) / RMSe ) - ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) * ( MLU / MLU ) ) ) ) - Max( CS,MUR ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.19444444444444445, "obj2": 0.7081401886056177}, {"determining": "( ( ( ( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + Min( ACS ,CRS ) ) + ( ARS - ( MRS + FirstVNF_CPU ) ) )", "choosing": "( Min( CS ,Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) - RRSe )", "obj1": 0.25555555555555554, "obj2": 0.6381038446584072}], "9": [{"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * ( Const + ( ( ARS - Const ) / PN ) ) ) / ( AMS * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MLU * CS ) * ( CS - ( MUC - Min( Max( ( RCSe - MUM ),( ( DS - RRSe ) / MUM ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( FirstVNF_RAM * ( ( ARS + ( FirstVNF_Mem * RRS ) ) * RRS ) ) / FirstVNF_CPU ),FirstVNF_Mem ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( MUM - RCSe ) * ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + RMSe ) ) - ( RMSe - Min( ( ( ( ( ( CS * MUR ) + MUM ) * DS ) / MUC ) / RCSe ) ,( MUC * ( Max( MUR,( DS + CS ) ) - ( MUM + ( RCSe - ( MUM / RMSe ) ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8279649469175839}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( MRS - ACS ) ) ) ) + ( ( PN - MDR ) + ( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( RMSe - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.3160936122346191}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.26999393633357166}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( CS - ( MUC + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5407407407407407, "obj2": 0.34375114243590427}, {"determining": "( ( PN * MDR ) + ( ARS - ( DDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.6407407407407407, "obj2": 0.25247931771277266}, {"determining": "( Max( MRS,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( Max( RRSe,MUC ) - DS ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.42407407407407405, "obj2": 0.49580189326544977}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( CS * DS ) - MUM ) * ( ( RMSe - ( MUC + MLU ) ) + MUR ) )", "obj1": 0.6574074074074074, "obj2": 0.2490640719285819}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2833002184114989}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ( FirstVNF_Mem - BR ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - RCSe )", "obj1": 0.7296296296296296, "obj2": 0.172106536622449}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.42777777777777776, "obj2": 0.46077089818604566}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( DS / RMSe ) * Max( RCSe,RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5185185185185185, "obj2": 0.35702564724554076}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( CRS ,FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS / ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( MUR * Min( ( ( Min( RCSe ,RRSe ) - Min( DS ,MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5940639236160927}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.46296296296296297, "obj2": 0.4278161413409209}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( DDR - FirstVNF_RAM ) * ( ( Max( Const,Max( Const,CRS ) ) + Min( RRS ,ACS ) ) + FirstVNF_CPU_Server ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,Max( MUM,MUC ) ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7166666666666667, "obj2": 0.19763061614929744}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.7574074074074074, "obj2": 0.1614442715476066}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( MDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( MUM ,Max( RRSe,( RMSe / MUM ) ) ),CS ) ) ) + RCSe )", "obj1": 0.4888888888888889, "obj2": 0.40478509824329345}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5245006036257821}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.35, "obj2": 0.5515016173549093}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) + RMSe ) )", "obj1": 0.7092592592592593, "obj2": 0.20635928111620824}, {"determining": "( ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + ( FirstVNF_Mem_Server / ( ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) * FirstVNF_RAM ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUM - ( ( MUM - RMSe ) * Max( ( Min( ( RCSe / ( MLU / MLU ) ) ,RCSe ) + ( RMSe / ( Min( MUR ,MLU ) / RRSe ) ) ),Min( ( ( RCSe / ( MLU / MUR ) ) / ( MUR / CS ) ) ,RRSe ) ) ) ) * ( RMSe * Min( ( ( RCSe - Min( RCSe ,MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5850019364532228}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( Min( ACS ,( FirstVNF_CPU_Server * Min( DDR ,FirstVNF_Mem_Server ) ) ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,( MUM / RMSe ) ) - ( CS * RMSe ) ) - ( ( MLU * CS ) + ( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( MUR / MUM ) * ( CS / RRSe ) ) * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5012435396753333}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( Max( ( Min( MRS ,( ACS / FirstVNF_CPU_Server ) ) / MDR ),FirstVNF_Mem ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( ( RRSe / MLU ) + RRSe ) / Min( RMSe ,( ( ( MUM + MUR ) / MUC ) / ( RCSe / Min( ( ( MUM - RCSe ) - MUR ) ,RMSe ) ) ) ) )", "obj1": 0.3888888888888889, "obj2": 0.5118373081212018}, {"determining": "( Min( FirstVNF_CPU ,AMS ) + ( Max( RRS,DDR ) - ( ACS + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS / MUC ) ) / ( ( DS * CS ) / Min( DS ,Max( RRSe,Max( ( RCSe * ( ( RRSe - RRSe ) + CS ) ),( ( ( MLU / RMSe ) - ( RRSe - RMSe ) ) / MUC ) ) ) ) ) )", "obj1": 0.4425925925925926, "obj2": 0.43938213771076595}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.6777777777777778, "obj2": 0.2297060667629512}, {"determining": "( ( CRS * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( ( RCSe - Min( RCSe ,RRSe ) ) + RRSe ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4759259259259259, "obj2": 0.4098702513453654}, {"determining": "Min( ( Max( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.566766558875308}, {"determining": "Min( ( ( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( Min( RRSe ,DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.8518518518518519, "obj2": 0.09309681962361682}, {"determining": "( Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR / MRS ) ) )", "choosing": "Min( ( ( RCSe - ( ( MUR / RCSe ) / ( CS - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe - RRSe ) ) ) - ( ( DS / Min( MLU ,Max( MLU,MLU ) ) ) + RMSe ) ) - DS ),( ( DS + RRSe ) + DS ) ) )", "obj1": 0.7759259259259259, "obj2": 0.15394574340676714}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( DDR / FirstVNF_RAM ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) - Max( ( MLU * Max( RCSe,( ( RMSe * CS ) / ( RMSe - RMSe ) ) ) ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) )", "obj1": 0.825925925925926, "obj2": 0.12106893655727079}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.512962962962963, "obj2": 0.36080870761597206}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + ( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2833002184114989}, {"determining": "Min( ( ( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( MRS / FirstVNF_RAM ) ) + FirstVNF_CPU ) ),FirstVNF_CPU ) )", "choosing": "( MUM - MUM )", "obj1": 0.8314814814814815, "obj2": 0.10043350364333332}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.4703703703703704, "obj2": 0.42450562007802023}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5, "obj2": 0.38176447464104746}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( ( CS - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.34629629629629627, "obj2": 0.5515595558096837}, {"determining": "( Min( ( FirstVNF_RAM_Server + AMS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUR - ( RCSe / MUM ) ) / ( Max( ( ( MUC + MUC ) + ( RRSe + RMSe ) ),CS ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( RCSe,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.9074074074074074, "obj2": 0.05279066130210538}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( ( MDR * FirstVNF_CPU ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( MRS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( MLU,MUC ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.25555555555555554, "obj2": 0.6304808749144932}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( CS ,Min( RCSe ,MUR ) ) )", "obj1": 0.8759259259259259, "obj2": 0.08229132497973571}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.25, "obj2": 0.6396685107612055}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6500355230590961}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.362962962962963, "obj2": 0.530297068323438}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5074074074074074, "obj2": 0.37731833586211455}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ( CRS * ( FirstVNF_RAM_Server - CRS ) ) - FirstVNF_Mem ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),( MRS + ARS ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( Max( ( ( ( ( MUC * DS ) - DS ) / ( ( RMSe + MUM ) + Max( MUC,CS ) ) ) + MUR ),MUC ) ,RCSe ) ) + RCSe )", "obj1": 0.8629629629629629, "obj2": 0.08606385325084283}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( CS * ( CS * RCSe ) ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.604394027889667}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( DDR * BR ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.13703703703703704, "obj2": 0.7673237154663717}, {"determining": "( Min( ACS ,( FirstVNF_CPU_Server * Min( DDR ,FirstVNF_Mem_Server ) ) ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,( MUM / RMSe ) ) - ( CS * RMSe ) ) - ( ( MLU * CS ) + ( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( MUR / MUM ) * ( CS / RRSe ) ) * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.16111111111111112, "obj2": 0.7508506962550334}, {"determining": "Min( Max( Max( MDR,AMS ),RRS ) ,( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ( FirstVNF_Mem - BR ) ) / MDR ) ) - ( RRS - PN ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MUM ) ) - Max( ( MLU * ( RRSe / RMSe ) ),( MUR + MUR ) ) ) - RCSe )", "obj1": 0.7296296296296296, "obj2": 0.172106536622449}, {"determining": "( Max( ( MDR + ARS ),( ( DDR - FirstVNF_RAM_Server ) * Max( Max( MDR,( ( AMS * Min( MDR ,ACS ) ) - FirstVNF_Mem ) ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + Max( ( ( ( ( MUC - RRSe ) - DS ) / Min( ( MUR / MUR ) ,MUM ) ) + MUR ),MUC ) ) + ( RRSe + RRSe ) ) / Min( ( RCSe - DS ) ,( MUC / DS ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7308623311611574}, {"determining": "Min( ( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( CRS,MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) * Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( CRS,MRS ) )", "choosing": "( ( ( ( MUR + RMSe ) / Min( ( MLU * ( ( DS / RRSe ) - MLU ) ) ,MUC ) ) - RCSe ) - Min( RRSe ,MUM ) )", "obj1": 0.3296296296296296, "obj2": 0.5738044819529241}, {"determining": "( ( ( Max( ( Const * FirstVNF_CPU ),Max( Min( ACS ,ACS ),FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Min( MDR ,ACS ) ),ACS ) )", "choosing": "( ( ( MUC * DS ) - DS ) * ( ( RMSe - ( RRSe * ( Min( RMSe ,RMSe ) / RCSe ) ) ) + MUR ) )", "obj1": 0.22777777777777777, "obj2": 0.6713819292704728}, {"determining": "( Min( Max( CRS,FirstVNF_CPU ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( Max( FirstVNF_RAM_Server,PN ) * FirstVNF_CPU ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( MUC ,RRSe ) - MUR ) ,Max( MUC,( ( RMSe * ( ( CS * ( MUM / MUM ) ) / ( CS - ( DS / RMSe ) ) ) ) - DS ) ) )", "obj1": 0.937037037037037, "obj2": 0.03762969738928064}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6173149034385048}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + RMSe ) )", "obj1": 0.7, "obj2": 0.22106234731135047}, {"determining": "( Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7556061469858423}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ),( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUR ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.6777777777777778, "obj2": 0.2297060667629512}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6247297082461027}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( MRS / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) + ( MRS / FirstVNF_RAM ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe / Min( ( ( RCSe - ( MUC + MLU ) ) + ( ( RCSe - CS ) + RRSe ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.061856215810891915}, {"determining": "Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + ( ( MLU + RRSe ) / ( ( RCSe + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( ( MUM * MUR ) * RMSe ),RMSe ) ) - ( RMSe - RRSe ) ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8246080871605784}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU * ACS ) - FirstVNF_Mem ) / ( MRS / ( MDR / ( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + MUM ) * ( MUM - DS ) ) ,RMSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6747555931344873}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const + AMS ) ) * PN ) / ( ACS - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6801723465782513}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.45970145990552264}, {"determining": "( Min( Min( ( Max( ( FirstVNF_RAM / Const ),ACS ) * ACS ) ,FirstVNF_CPU_Server ) ,( MRS - MDR ) ) - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( ( RCSe * Min( MUM ,( MLU + ( MUR - RMSe ) ) ) ),RRSe ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.7814814814814814, "obj2": 0.14273946121415762}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,Max( MUM,MUC ) ),CS ) ) )", "obj1": 0.95, "obj2": 0.02347523644992805}, {"determining": "( ( FirstVNF_RAM / Min( MRS ,ACS ) ) - ( ( DDR / FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( MUC + RRSe ) ) + ( ( ( MUR / MUC ) + ( MLU - RMSe ) ) / MUR ) ) * ( ( CS * DS ) - MUM ) )", "obj1": 0.6925925925925925, "obj2": 0.2271968783723671}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ),MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( RRSe ,DS ) ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.9481481481481482, "obj2": 0.03281557594762384}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( ( FirstVNF_RAM * ACS ),( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( ( CS * RMSe ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUR ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7648148148148148, "obj2": 0.15866464688293958}, {"determining": "( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( MUC + MLU ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.8981481481481481, "obj2": 0.061856215810891915}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.44074074074074077, "obj2": 0.44243021560947526}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6610393345282335}, {"determining": "Min( ( FirstVNF_RAM_Server / ARS ) ,( ( ( ( ( BR * ( Const / FirstVNF_RAM ) ) * CRS ) - AMS ) * MDR ) + DDR ) )", "choosing": "( ( ( Min( ( Max( RRSe,MUC ) - DS ) ,( ( ( RRSe / RCSe ) / RMSe ) - ( Min( Min( DS ,RMSe ) ,( MUM + RMSe ) ) * ( MLU / MLU ) ) ) ) - Max( CS,MUR ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.19444444444444445, "obj2": 0.7081401886056177}, {"determining": "Min( ( FirstVNF_RAM_Server / ACS ) ,( ( Max( FirstVNF_CPU_Server,MDR ) * ( BR - ARS ) ) + DDR ) )", "choosing": "( ( ( ( ( MLU * RCSe ) * CS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( Max( RRSe,MLU ) + MUR ) ) ) - Min( RMSe ,( DS * RRSe ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6894445544848785}, {"determining": "( ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) / ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ARS * FirstVNF_CPU_Server ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / Max( ( RRSe / DS ),( MUR + RRSe ) ) ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.0753413852423572}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( ARS / MRS ) ,( ( BR - MRS ) + DDR ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) / RRSe ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.8574074074074074, "obj2": 0.08855277997961944}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + Max( ( ( Max( ( MDR * MRS ),Const ) / MRS ) * FirstVNF_CPU_Server ),AMS ) ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) + ( Min( Min( MLU ,( ( RMSe / RRSe ) / Min( MUR ,( MLU / MUC ) ) ) ) ,( RRSe / MUC ) ) - Min( MUC ,( Min( MUC ,( MLU / ( MUM + RCSe ) ) ) * CS ) ) ) ) )", "obj1": 0.48703703703703705, "obj2": 0.4069302446569975}, {"determining": "Min( ( BR / DDR ) ,Max( MRS,AMS ) )", "choosing": "( Max( ( MLU / ( DS * ( ( DS * Max( RRSe,Max( CS,RMSe ) ) ) * RRSe ) ) ),MUR ) + Min( ( RRSe - RMSe ) ,Max( ( Min( ( ( CS * MUR ) - CS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( ( MUM / ( CS + ( CS - Max( DS,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8154842206263543}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5803945953583144}, {"determining": "( ( PN * MDR ) + ( ( ( FirstVNF_CPU + ( BR / MDR ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR + FirstVNF_RAM ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.003998128757007585}, {"determining": "Min( ( ( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( MUM - ( ( ( MUM - RMSe ) * DS ) - MUM ) ) * Max( ( Min( ( RCSe / ( MLU / MLU ) ) ,RCSe ) + ( RMSe / ( Min( MUR ,MLU ) / RRSe ) ) ),Min( ( ( RCSe / ( MLU / MUR ) ) / ( MUR / CS ) ) ,RRSe ) ) ) ) - MUM )", "obj1": 0.8351851851851851, "obj2": 0.09959779259048773}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - AMS ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8154842206263543}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MLU ) ,RCSe ) ) + RCSe )", "obj1": 0.8851851851851852, "obj2": 0.07246005195283141}, {"determining": "( ( BR + FirstVNF_RAM_Server ) * Max( ( ACS / FirstVNF_CPU_Server ),Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( FirstVNF_CPU_Server ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + ( ( MUR / ( RMSe + MUR ) ) + ( ( MUC * CS ) - CS ) ) ) * RCSe ) ,RMSe ) ) )", "obj1": 0.14629629629629629, "obj2": 0.7585351134830639}, {"determining": "( ( ( CRS + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) - Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( ( ( RRS / PN ) - PN ) / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( RCSe / MLU ) - Max( ( Min( Max( ( MUR * CS ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe / DS ) ) ) - Max( CS,( MUC * ( DS + MUM ) ) ) )", "obj1": 0.7148148148148148, "obj2": 0.19839765351099328}, {"determining": "( ( PN * MDR ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( CS - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.9814814814814815, "obj2": 0.007450973603833809}, {"determining": "( ( ( ACS + ( FirstVNF_Mem / BR ) ) / Min( Min( RRS ,( CRS + FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_Mem_Server - BR ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( MLU + MLU ) + MUR ) ,MUM ) - CS ) / Max( ( Max( ( DS / RMSe ),( RCSe * CS ) ) * MUC ),( ( RMSe + MUM ) - ( ( MUC - CS ) + ( MUM / RMSe ) ) ) ) ) ) - ( Max( CS,MUR ) - ( CS * RMSe ) ) ) - ( ( MUC / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ACS ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,Min( RRSe ,MUM ) ),CS ) ) )", "obj1": 0.8092592592592592, "obj2": 0.12540946952153983}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5803945953583144}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( ( ( RCSe / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MLU ) ,RCSe ) ) + RCSe )", "obj1": 0.8851851851851852, "obj2": 0.07246005195283141}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_RAM + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( MUC * ( DS + MUM ) ) ) ) / ( RMSe - MUR ) ) ) - ( MUR * ( ( RRSe - MUC ) + DS ) ) ) ,Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) )", "obj1": 0.9555555555555556, "obj2": 0.019471174228174588}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + RMSe ) )", "obj1": 0.7, "obj2": 0.22106234731135047}, {"determining": "( ( ( ( ( MDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( AMS + FirstVNF_Mem_Server ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,( MUC / DS ) ) / ( ( CS + RRSe ) + ( MUM / DS ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6610393345282335}, {"determining": "( ( ( RRS - ( CRS - FirstVNF_Mem ) ) + FirstVNF_RAM_Server ) - ( FirstVNF_Mem + FirstVNF_CPU ) )", "choosing": "( Max( ( CS + MUR ),DS ) - Max( ( CS - MUM ),Min( RCSe ,MUR ) ) )", "obj1": 0.36666666666666664, "obj2": 0.5283010812686046}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( MRS / ACS ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( ( PN * ( ACS / RRS ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( ( Min( ( RRSe / RCSe ) ,RCSe ) - MUC ) - ( DS * RRSe ) ) * RCSe ) ,RMSe ) ) )", "obj1": 0.2037037037037037, "obj2": 0.6967850654511977}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.362962962962963, "obj2": 0.530297068323438}, {"determining": "( ( Min( Min( Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) ) ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( FirstVNF_RAM / ACS ) ) * ( Min( ( DDR * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),Max( MUC,( DS + MUM ) ) ) / Min( ( Min( RCSe ,( RRSe / CS ) ) - ( MLU / MLU ) ) ,RCSe ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.9685185185185186, "obj2": 0.014304923700378346}], "10": [{"determining": "Min( Const ,Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8279649469175839}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * ( Const + ( ( ARS - Const ) / PN ) ) ) / ( AMS * FirstVNF_Mem ) ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( MLU * CS ) * ( CS - ( MUC - Min( Max( ( RCSe - MUM ),( ( DS - RRSe ) / MUM ) ) ,MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.10740740740740741, "obj2": 0.8279649469175839}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6166666666666667, "obj2": 0.2371438447806944}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ACS + ACS ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * ARS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - CS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),MUM ) ) / ( Min( MUC ,( MUM - Min( RRSe ,MLU ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.5611111111111111, "obj2": 0.31006272402496554}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.26999393633357166}, {"determining": "( Min( Min( ( MRS + Max( BR,FirstVNF_RAM_Server ) ) ,( Max( Min( ( AMS - ARS ) ,RRS ),ACS ) * ARS ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( DDR ,( BR * ACS ) ) ) + ( ( MRS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + Max( ACS,ARS ) ) * ( BR / Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "Min( Max( ( ( ( Max( RCSe,MUC ) * ( MUR * ( RMSe + MUM ) ) ) * DS ) - MLU ),Max( MUC,Min( Min( MLU ,( RMSe / RCSe ) ) ,MUC ) ) ) ,Max( Max( ( ( DS - ( RCSe / Min( CS ,Max( CS,MUC ) ) ) ) - ( ( RRSe + RRSe ) + ( ( ( DS / MUR ) / MUR ) / RCSe ) ) ),DS ),Max( ( RCSe * RMSe ),MLU ) ) )", "obj1": 0.6777777777777778, "obj2": 0.22970606676295116}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( Min( FirstVNF_RAM ,MDR ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_CPU ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_Mem_Server ,( AMS - ACS ) ) ) ) ) + ( ARS - ( FirstVNF_CPU + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( CS * MLU ),( RRSe / MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUR + MUC ) + ( RRSe - RMSe ) ),( Min( MUC ,MLU ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.412962962962963, "obj2": 0.4684615849367273}, {"determining": "( Max( ( ( RRS + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ),Min( CRS ,MRS ) ) + ( ARS - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( Min( Min( RCSe ,MUR ) ,( MUC * ( DS + ( CS * MUR ) ) ) ) * CS ) / ( RRSe + MUR ) ) ) - ( ( DS / MLU ) / RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.5761658456793008}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( MRS - ACS ) ) ) ) + ( ( PN - MDR ) + MDR ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( ( CS + RRSe ) / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( RMSe - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.3277777777777778, "obj2": 0.5555334122025607}, {"determining": "( Min( ACS ,( FirstVNF_CPU_Server * Min( DDR ,FirstVNF_Mem_Server ) ) ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,( MUM / RMSe ) ) - ( CS * RMSe ) ) - ( ( MLU * CS ) + ( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( MUR / MUM ) * ( CS / RRSe ) ) * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.5012435396753333}, {"determining": "( ( PN * MDR ) + ( ( MDR + FirstVNF_CPU ) - ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * BR ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( RRSe * MUC ) * MUR ) - MUM ) * ( RMSe * Min( ( RRSe + ( RCSe - ( ( CS - ( MUC + RRSe ) ) + MUR ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.34338256493926644}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.42592592592592593, "obj2": 0.45522789408646147}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( MUR - ( MUC + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.45925925925925926, "obj2": 0.42121130562479697}, {"determining": "( PN + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( DS / RMSe ) * DS ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3425925925925926, "obj2": 0.5383006170946724}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + ( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2833002184114989}, {"determining": "( Max( ( MDR + ARS ),( ( DDR - FirstVNF_RAM_Server ) * Max( Max( MDR,( ( AMS * Min( MDR ,ACS ) ) - FirstVNF_Mem ) ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + Max( ( ( ( ( MUC - RRSe ) - DS ) / Min( ( MUR / MUR ) ,MUM ) ) + MUR ),MUC ) ) + ( RRSe + RRSe ) ) / Min( ( RCSe - DS ) ,( MUC / DS ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7308623311611574}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ( FirstVNF_Mem - BR ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.7296296296296296, "obj2": 0.172106536622449}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.8, "obj2": 0.13289147654837627}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6475617794093077}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ACS ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,Min( RRSe ,MUM ) ),CS ) ) )", "obj1": 0.8092592592592592, "obj2": 0.12540946952153983}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( Max( ( Min( MRS ,( ACS / FirstVNF_CPU_Server ) ) / MDR ),FirstVNF_Mem ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( ( RRSe / MLU ) + RRSe ) / Min( RMSe ,( ( ( MUM + MUR ) / MUC ) / ( RCSe / Min( ( ( MUM - RCSe ) - MUR ) ,RMSe ) ) ) ) )", "obj1": 0.3888888888888889, "obj2": 0.5118373081212018}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) - Max( CS,( MUC * ( DS + MUM ) ) ) )", "obj1": 0.5222222222222223, "obj2": 0.35086700072633703}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),CS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.44814814814814813, "obj2": 0.43522919712663355}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ( MRS + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + Max( Min( MRS ,ACS ),( MDR + ARS ) ) ) * ( DDR + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - Min( Max( ( ( Max( MUC,RMSe ) * ( MLU / ( MUR + CS ) ) ) + MUR ),MUC ) ,RCSe ) ) + RCSe )", "obj1": 0.8962962962962963, "obj2": 0.06053596380698477}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.49074074074074076, "obj2": 0.39100402371272525}, {"determining": "( Max( FirstVNF_Mem,( ( ( FirstVNF_RAM * ACS ) * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Max( RRSe,MUR ) )", "obj1": 0.37222222222222223, "obj2": 0.5201802402736462}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( ARS / MRS ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( ( ( ( MUM - RMSe ) * DS ) - MUM ) / RRSe ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.8481481481481481, "obj2": 0.08970005644921937}, {"determining": "( Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR / MRS ) ) )", "choosing": "Min( ( ( RCSe - ( ( MUR / RCSe ) / ( CS - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe - RRSe ) ) ) - ( ( DS / Min( MLU ,Max( MLU,MLU ) ) ) + RMSe ) ) - DS ),( ( DS + RRSe ) + DS ) ) )", "obj1": 0.7759259259259259, "obj2": 0.15394574340676714}, {"determining": "( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),Max( MDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( MRS / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.3388888888888889, "obj2": 0.5537594882515333}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) + RMSe ) )", "obj1": 0.7092592592592593, "obj2": 0.2052768228890737}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2833002184114989}, {"determining": "( ( FirstVNF_RAM / Min( MRS ,ACS ) ) - ( ( DDR / FirstVNF_Mem ) + FirstVNF_CPU ) )", "choosing": "( ( ( RMSe - ( MUC + RRSe ) ) + ( ( ( MUR / MUC ) + ( MLU - RMSe ) ) / MUR ) ) * ( ( CS * DS ) - MUM ) )", "obj1": 0.6925925925925925, "obj2": 0.2271968783723671}, {"determining": "Min( ( ( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) * ( MRS / FirstVNF_RAM ) ) + FirstVNF_CPU ) ),FirstVNF_CPU ) )", "choosing": "( MUM - MUM )", "obj1": 0.8314814814814815, "obj2": 0.10043350364333332}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( DDR - FirstVNF_RAM ) * ( ( Max( Const,Max( Const,CRS ) ) + Min( RRS ,ACS ) ) + FirstVNF_CPU_Server ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,Max( MUM,MUC ) ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7166666666666667, "obj2": 0.19763061614929744}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( ( FirstVNF_RAM * ACS ),MRS ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( ( CS * RMSe ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,RMSe ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7851851851851852, "obj2": 0.14186478629851695}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5, "obj2": 0.38176447464104746}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_RAM + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( MUC * ( DS + MUM ) ) ) ) / ( RMSe - MUR ) ) ) - ( MUR * ( ( RRSe - MUC ) + DS ) ) ) ,Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) )", "obj1": 0.9555555555555556, "obj2": 0.019471174228174588}, {"determining": "Min( ( ( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ,Max( Max( MDR,( FirstVNF_CPU_Server / ACS ) ),FirstVNF_CPU ) )", "choosing": "( ( MUM - ( ( MUM - ( ( ( MUM - RMSe ) * DS ) - MUM ) ) * Max( ( Min( ( RCSe / ( MLU / MLU ) ) ,RCSe ) + ( RMSe / ( Min( MUR ,MLU ) / RRSe ) ) ),Min( ( ( RCSe / ( MLU / MUR ) ) / ( MUR / CS ) ) ,RRSe ) ) ) ) - MUM )", "obj1": 0.8351851851851851, "obj2": 0.09959779259048773}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,Min( ( ( ARS / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( MRS - ACS ) ) ) ) + ( ( PN - FirstVNF_CPU ) + ( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - Max( MUM,MUC ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( RMSe - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.8685185185185185, "obj2": 0.07668442676376366}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( MRS / ACS ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( ( PN * ( ACS / RRS ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( ( Min( ( RRSe / RCSe ) ,RCSe ) - MUC ) - ( DS * RRSe ) ) * RCSe ) ,RMSe ) ) )", "obj1": 0.2037037037037037, "obj2": 0.6967850654511977}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.7574074074074074, "obj2": 0.1614442715476066}, {"determining": "( ( Min( Min( Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_Mem - BR ) ) ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),CS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.9685185185185186, "obj2": 0.014221980552569435}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.2777777777777778, "obj2": 0.6164592651996706}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.7462962962962963, "obj2": 0.17057884096139903}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.512962962962963, "obj2": 0.36080870761597206}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.9074074074074074, "obj2": 0.05279066130210538}, {"determining": "( ( ( ACS * DDR ) / ARS ) - ( DDR * BR ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.13703703703703704, "obj2": 0.7673237154663717}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + RMSe ) )", "obj1": 0.7, "obj2": 0.22106234731135047}, {"determining": "( ( PN * MDR ) + ( ( ( FirstVNF_CPU + ( BR / MDR ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR + FirstVNF_RAM ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.003998128757007585}, {"determining": "( ( ( Max( ( Const * FirstVNF_CPU ),Max( Min( ACS ,ACS ),FirstVNF_RAM_Server ) ) * FirstVNF_RAM_Server ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Min( MDR ,ACS ) ),ACS ) )", "choosing": "( ( ( MUC * DS ) - DS ) * ( ( RMSe - ( RRSe * ( Min( RMSe ,RMSe ) / RCSe ) ) ) + MUR ) )", "obj1": 0.22777777777777777, "obj2": 0.6713819292704728}, {"determining": "( ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) / ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.0690237043514448}, {"determining": "( ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) / ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ARS * FirstVNF_CPU_Server ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / Max( ( RRSe / DS ),( MUR + RRSe ) ) ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8277777777777777, "obj2": 0.120892212561857}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ( CRS * ( FirstVNF_RAM_Server - CRS ) ) - FirstVNF_Mem ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),( MRS + ARS ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( Max( ( ( ( ( MUC * DS ) - DS ) / ( ( RMSe + MUM ) + Max( MUC,CS ) ) ) + MUR ),MUC ) ,RCSe ) ) + RCSe )", "obj1": 0.8629629629629629, "obj2": 0.08606385325084283}, {"determining": "( ( PN * MDR ) + ( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( CS - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.9814814814814815, "obj2": 0.007450973603833809}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( DDR / FirstVNF_RAM ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUC * DS ) - ( CS * DS ) ) - Max( ( MLU * Max( RCSe,( ( RMSe * CS ) / ( RMSe - RMSe ) ) ) ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / DS ) + ( MUM - CS ) ) ) )", "obj1": 0.825925925925926, "obj2": 0.12106893655727079}, {"determining": "( ( PN * MDR ) + ( ARS - ( ( FirstVNF_CPU + FirstVNF_Mem ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768226}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( MDR + FirstVNF_CPU ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( CS - ( MLU / MLU ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3722357960892628}, {"determining": "Min( Min( CRS ,FirstVNF_RAM_Server ) ,Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + ( ( MLU + RRSe ) / ( ( RCSe + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( ( MUM * MUR ) * RMSe ),RMSe ) ) - ( RMSe - RRSe ) ) ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8246080871605784}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6247297082461027}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.362962962962963, "obj2": 0.530297068323438}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) - ( ( ( FirstVNF_CPU * ACS ) - FirstVNF_Mem ) / ( MRS / ( MDR / ( ARS + FirstVNF_RAM ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + MUM ) * ( MUM - DS ) ) ,RMSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6747555931344873}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( DDR + ( ( ARS * ( Min( AMS ,DDR ) + DDR ) ) * MDR ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7065557638517079}, {"determining": "( ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) / ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ARS * FirstVNF_CPU_Server ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / Max( ( RRSe / DS ),( MUR + RRSe ) ) ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.0753413852423572}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Max( Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ),MRS ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( MLU + Min( RRSe ,DS ) ) / ( ( CS + MUM ) - Max( Min( RRSe ,DS ),CS ) ) )", "obj1": 0.9481481481481482, "obj2": 0.03281557594762384}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( CRS ,FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS / ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( MUR * Min( ( ( Min( RCSe ,RRSe ) - Min( DS ,MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5940639236160927}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( ( FirstVNF_RAM * ACS ),( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( ( CS * RMSe ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUR ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.7648148148148148, "obj2": 0.15866464688293958}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const + AMS ) ) * PN ) / ( ACS - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( DDR - MRS ) + DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( MUR + MUM ) / RMSe ) )", "obj1": 0.3925925925925926, "obj2": 0.504451120259505}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6610393345282335}, {"determining": "( ( Max( ( ( DDR / MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) ) ) ),( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( FirstVNF_RAM - ( ( MRS - RRS ) + MDR ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( Max( ( MUR / ( DS * RCSe ) ),( Max( ( ( CS - MUM ) / ( DS / MUM ) ),MLU ) - ( Min( MUR ,MUM ) + Min( RCSe ,MUC ) ) ) ) + RRSe ) / ( CS + RRSe ) ) )", "obj1": 0.9703703703703703, "obj2": 0.008534835941600446}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( ( ( RCSe / ( ( MUR + RMSe ) / ( ( CS * MUR ) + MUM ) ) ) - MLU ) ,RCSe ) ) + RCSe )", "obj1": 0.9351851851851852, "obj2": 0.0386430494213809}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / FirstVNF_RAM_Server ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( MUR - ( RCSe / ( RRSe / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.9277777777777778, "obj2": 0.047488510850307225}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.25, "obj2": 0.6396685107612055}, {"determining": "( Min( ACS ,( FirstVNF_CPU_Server * Min( DDR ,FirstVNF_Mem_Server ) ) ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,( MUM / RMSe ) ) - ( CS * RMSe ) ) - ( ( MLU * CS ) + ( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( MUR / MUM ) * ( CS / RRSe ) ) * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.16111111111111112, "obj2": 0.7508506962550334}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( CS - ( MUC + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5407407407407407, "obj2": 0.34375114243590427}, {"determining": "Min( ( BR / DDR ) ,Max( MRS,AMS ) )", "choosing": "( Max( ( MLU / ( DS * ( ( DS * Max( RRSe,Max( CS,RMSe ) ) ) * RRSe ) ) ),MUR ) + Min( ( RRSe - RMSe ) ,Max( ( Min( ( ( CS * MUR ) - CS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( ( MUM / ( CS + ( CS - Max( DS,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8154842206263543}, {"determining": "( ( PN * MDR ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( Max( RRSe,MUC ) - DS ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.29259259259259257, "obj2": 0.6004885467030396}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6610393345282335}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.44074074074074077, "obj2": 0.44243021560947526}, {"determining": "( ( CRS * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( ( RCSe - Min( RCSe ,RRSe ) ) + RRSe ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4759259259259259, "obj2": 0.4098702513453654}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) ) )", "choosing": "( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.13518518518518519, "obj2": 0.7712885362108787}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const + AMS ) ) * PN ) / ( ACS - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6801723465782513}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.25555555555555554, "obj2": 0.6304808749144932}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - AMS ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8154842206263543}, {"determining": "( ( CRS * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( ( RCSe - Min( RCSe ,RRSe ) ) + RRSe ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4759259259259259, "obj2": 0.4098702513453654}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ACS ),Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * RCSe ) ,RMSe ) ) )", "obj1": 0.14629629629629629, "obj2": 0.7585351134830639}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( MDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( MUM ,Max( RRSe,( RMSe / MUM ) ) ),CS ) ) ) + RCSe )", "obj1": 0.4888888888888889, "obj2": 0.40478509824329345}, {"determining": "( ( ( ACS + ( FirstVNF_Mem / BR ) ) / Min( Min( RRS ,( CRS + FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_Mem_Server - BR ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( MLU + MLU ) + MUR ) ,MUM ) - CS ) / Max( ( Max( ( DS / RMSe ),( RCSe * CS ) ) * MUC ),( ( RMSe + MUM ) - ( ( MUC - CS ) + ( MUM / RMSe ) ) ) ) ) ) - ( Max( CS,MUR ) - ( CS * RMSe ) ) ) - ( ( MUC / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * DDR ) / ARS ) ) ) + ( Max( FirstVNF_Mem,Max( MRS,RRS ) ) * RRS ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( CS ,MUM ) * ( MUR - Max( CS,RMSe ) ) ) * ( MUR * Min( ( RRSe + ( MUR - Min( RCSe ,RRSe ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5940639236160927}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + RMSe ) )", "obj1": 0.7, "obj2": 0.22106234731135047}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( ( FirstVNF_RAM / Const ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.7814814814814814, "obj2": 0.14273946121415762}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ACS ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.27037037037037037, "obj2": 0.6232662013473372}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.44074074074074077, "obj2": 0.44243021560947526}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( RRSe ,DS ) / ( ( CS + MUM ) - Max( Min( RRSe ,Max( MUM,MUC ) ),CS ) ) )", "obj1": 0.95, "obj2": 0.02347523644992805}, {"determining": "( ( PN * MDR ) + ( ( ARS / FirstVNF_RAM_Server ) - ( ACS + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUM * CS ) / Min( DS ,Max( Min( ( ( CS * MUR ) / RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ),RCSe ) ) ) )", "obj1": 0.9981481481481481, "obj2": 0.0004060850329572267}], "11": [{"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - Max( FirstVNF_Mem_Server,MDR ) ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( MUM - ( MUM - ( ( MLU * MUC ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8308517731315486}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7277777777777777, "obj2": 0.12143913989333743}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( Max( MRS,BR ) + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server * ( FirstVNF_RAM - Min( ( ARS / MRS ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Max( RRSe,CS ) / ( MUM - MUC ) )", "obj1": 0.8222222222222222, "obj2": 0.11120609457266413}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6166666666666667, "obj2": 0.2371438447806944}, {"determining": "Min( ( Max( ( Max( ( MDR + FirstVNF_CPU ),( ( FirstVNF_RAM * ( FirstVNF_Mem - BR ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.18297353523555035}, {"determining": "( ( PN * ( ( ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) - ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) / ( DDR * MRS ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( Max( Min( RRSe ,DS ),DS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * RMSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( ( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) - FirstVNF_CPU ) ) + ( ARS - ACS ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( MUM + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.2334265105740361}, {"determining": "( PN + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( DS / RMSe ) * DS ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3425925925925926, "obj2": 0.5383006170946724}, {"determining": "( Max( ( ( RRS + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ),Min( CRS ,MRS ) ) + ( ARS - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( Min( Min( RCSe ,MUR ) ,( MUC * ( DS + ( CS * MUR ) ) ) ) * CS ) / ( RRSe + MUR ) ) ) - ( ( DS / MLU ) / RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.5761658456793008}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( CS - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.6018518518518519, "obj2": 0.2555233446752069}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2833002184114989}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( ARS / MRS ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),CS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.8314814814814815, "obj2": 0.09909687960318109}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( CRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - CS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( ( Min( ( RCSe - CS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.31767025365413454}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const + AMS ) ) * PN ) / ( ACS - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6801723465782513}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( Min( AMS ,DDR ) + DDR ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * ( RMSe + RRSe ) ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.4874649193714408}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( ARS / MRS ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( ( ( ( MUM - RMSe ) * DS ) - MUM ) / RRSe ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.8481481481481481, "obj2": 0.08970005644921936}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( MRS / ACS ),Min( Min( ARS ,FirstVNF_CPU_Server ) ,( ( PN * ( ACS / RRS ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( ( Min( ( RRSe / RCSe ) ,RCSe ) - MUC ) - ( DS * RRSe ) ) * RCSe ) ,RMSe ) ) )", "obj1": 0.2037037037037037, "obj2": 0.6967850654511977}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( ( ACS * FirstVNF_RAM ) + AMS ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( ( ( ( MUM - RMSe ) * RMSe ) - MUM ) / RRSe ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.9333333333333333, "obj2": 0.03392598277708357}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ( Max( Const,Max( Const,CRS ) ) + Min( RRS ,ACS ) ) + FirstVNF_CPU_Server ) - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( RCSe / MUM ) - MUR ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.48714518519601374}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( MDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.5462962962962963, "obj2": 0.34017746978130997}, {"determining": "( Max( ( Min( MRS ,( ACS / FirstVNF_CPU_Server ) ) / MDR ),FirstVNF_Mem ) - Min( FirstVNF_CPU ,FirstVNF_Mem ) )", "choosing": "( ( ( RRSe / MLU ) + RRSe ) / Min( RMSe ,( ( ( MUM + MUR ) / MUC ) / ( RCSe / Min( ( ( MUM - RCSe ) - MUR ) ,RMSe ) ) ) ) )", "obj1": 0.3888888888888889, "obj2": 0.5118373081212018}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5, "obj2": 0.38176447464104746}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6701327660876752}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.26999393633357166}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.49074074074074076, "obj2": 0.39100402371272525}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.5074074074074074, "obj2": 0.36795474984645976}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( DDR + ( ( ARS * ( Min( AMS ,DDR ) + DDR ) ) * MDR ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7065557638517079}, {"determining": "( ( ( FirstVNF_CPU_Server - ( ( ( MRS * Min( ARS ,ACS ) ) + ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( MDR / FirstVNF_RAM ) ) + FirstVNF_CPU ) ) / ACS ) ) - ( MDR + MRS ) ) + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),ACS ) )", "choosing": "( ( ( MLU + RRSe ) / ( ( CS + MUM ) - Max( Min( MUM ,Max( RRSe,( RMSe / MUM ) ) ),CS ) ) ) + RCSe )", "obj1": 0.4888888888888889, "obj2": 0.40478509824329345}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ( MRS + Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) ) - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + Max( Min( MRS ,ACS ),( MDR + ARS ) ) ) * ( DDR + FirstVNF_RAM ) ) )", "choosing": "( ( MUC - Min( Max( ( ( Max( MUC,RMSe ) * ( MLU / ( MUR + CS ) ) ) + MUR ),MUC ) ,RCSe ) ) + RCSe )", "obj1": 0.8962962962962963, "obj2": 0.06053596380698477}, {"determining": "Min( ( FirstVNF_CPU - Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ( FirstVNF_Mem - BR ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ) ) ,Max( Max( MDR,AMS ),ARS ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * Min( MUM ,RCSe ) ) - Min( CS ,( MLU - DS ) ) )", "obj1": 0.7129629629629629, "obj2": 0.18461459191378546}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.412962962962963, "obj2": 0.4684615849367273}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + ( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2833002184114989}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ACS + ACS ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * ARS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - CS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),MUM ) ) / ( Min( MUC ,( MUM - Min( RRSe ,MLU ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.5611111111111111, "obj2": 0.31006272402496554}, {"determining": "( Max( FirstVNF_Mem,( ( ( FirstVNF_RAM * ACS ) * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Max( RRSe,MUR ) )", "obj1": 0.37222222222222223, "obj2": 0.5201802402736462}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5979536766453076}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( ( FirstVNF_RAM * ACS ),( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * ACS ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( MUR - ( RCSe / ( RRSe / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.687037037037037, "obj2": 0.22352139733037918}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.362962962962963, "obj2": 0.530297068323438}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( Min( ACS ,( FirstVNF_CPU_Server * Min( DDR ,FirstVNF_Mem_Server ) ) ) / ( PN / FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,( MUM / RMSe ) ) - ( CS * RMSe ) ) - ( ( MLU * CS ) + ( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( MUR / MUM ) * ( CS / RRSe ) ) * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.16111111111111112, "obj2": 0.7508506962550334}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ACS ) )", "choosing": "( MUM - MUM )", "obj1": 0.2851851851851852, "obj2": 0.6148410280761557}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6475617794093077}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.44074074074074077, "obj2": 0.4421924816230403}, {"determining": "( ( PN * ( ( ( ( ( FirstVNF_Mem * CRS ) / ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( MUR ,Max( RMSe,( MUM / ( CS + MUC ) ) ) ) * MLU ) * DS ) - MUM ) * ( RMSe * Min( ( ( MUM - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + Max( CS,MUM ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5888699166958756}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) + RMSe ) )", "obj1": 0.7092592592592593, "obj2": 0.2052768228890737}, {"determining": "( Min( AMS ,( Max( Max( FirstVNF_CPU_Server,( AMS + MRS ) ),ACS ) * ACS ) ) + Min( CRS ,RRS ) )", "choosing": "( ( CS * ( MLU / Max( MUR,MUM ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.1814814814814815, "obj2": 0.7188530774135522}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.25, "obj2": 0.6396685107612055}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - CS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5611111111111111, "obj2": 0.31006272402496554}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.9648148148148148, "obj2": 0.010250440864219909}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ARS - ( MDR + FirstVNF_CPU ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - Max( ( ( DS / RMSe ) * DS ),( CS * MUC ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.8870370370370371, "obj2": 0.06575759058016643}, {"determining": "( ( PN * MDR ) + ( ( PN * Min( ARS ,( FirstVNF_RAM / Max( ( FirstVNF_CPU_Server - AMS ),( FirstVNF_RAM * DDR ) ) ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( ( MLU * CS ),( RRSe + MUR ) ) - ( Max( ( MLU * Max( RRSe,( RMSe / MUM ) ) ),CS ) - Max( CS,RMSe ) ) ) - ( Min( MUC ,Max( ( MUR * MLU ),Min( MUM ,MLU ) ) ) / RMSe ) )", "obj1": 0.7037037037037037, "obj2": 0.21169176413377627}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( CS - ( MUC + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.45740740740740743, "obj2": 0.42427235758248877}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( MLU / RRSe ) + RRSe ) / ( ( CS + MUM ) + Max( RRSe,CS ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5195582054777198}, {"determining": "( ( CRS * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( ( RCSe - Min( RCSe ,RRSe ) ) + RRSe ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4759259259259259, "obj2": 0.4098702513453654}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ( CRS * ( FirstVNF_RAM_Server - CRS ) ) - FirstVNF_Mem ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),( MRS + ARS ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( Max( ( ( ( ( MUC * DS ) - DS ) / ( ( RMSe + MUM ) + Max( MUC,CS ) ) ) + MUR ),MUC ) ,RCSe ) ) + RCSe )", "obj1": 0.8629629629629629, "obj2": 0.08606385325084283}, {"determining": "( Max( ( MDR + ARS ),( ( DDR - FirstVNF_RAM_Server ) * Max( Max( MDR,( ( AMS * Min( MDR ,ACS ) ) - FirstVNF_Mem ) ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + Max( ( ( ( ( MUC - RRSe ) - DS ) / Min( ( MUR / MUR ) ,MUM ) ) + MUR ),MUC ) ) + ( RRSe + RRSe ) ) / Min( ( RCSe - DS ) ,( MUC / DS ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7308623311611574}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ACS ),Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( ( ACS / FirstVNF_Mem ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe - ( ( Min( Max( CS,MUC ) ,CS ) / ( RRSe - RRSe ) ) * Min( ( ( RRSe + MUR ) * RCSe ) ,RMSe ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6565611050416303}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.26851851851851855, "obj2": 0.6213647602820214}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ACS ),Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * RCSe ) ,RMSe ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7538694939053436}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_RAM,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( ARS - AMS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + RMSe ) )", "obj1": 0.7, "obj2": 0.22106234731135047}, {"determining": "( ( CRS * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( ( RCSe - Min( RCSe ,RRSe ) ) + RRSe ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4759259259259259, "obj2": 0.4098702513453654}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_RAM + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( MUC * ( DS + MUM ) ) ) ) / ( RMSe - MUR ) ) ) - ( MUR * ( ( RRSe - MUC ) + DS ) ) ) ,Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) )", "obj1": 0.9555555555555556, "obj2": 0.019471174228174588}, {"determining": "( Min( Min( ( MRS + Max( BR,FirstVNF_RAM_Server ) ) ,( Max( Min( ( AMS - ARS ) ,RRS ),ACS ) * ARS ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( DDR ,( BR * ACS ) ) ) + ( ( MRS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + Max( ACS,ARS ) ) * ( BR / Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "Min( Max( ( ( ( Max( RCSe,MUC ) * ( MUR * ( RMSe + MUM ) ) ) * DS ) - MLU ),Max( MUC,Min( Min( MLU ,( RMSe / RCSe ) ) ,MUC ) ) ) ,Max( Max( ( ( DS - ( RCSe / Min( CS ,Max( CS,MUC ) ) ) ) - ( ( RRSe + RRSe ) + ( ( ( DS / MUR ) / MUR ) / RCSe ) ) ),DS ),Max( ( RCSe * RMSe ),MLU ) ) )", "obj1": 0.6777777777777778, "obj2": 0.22970606676295116}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,Min( ( ( FirstVNF_RAM / FirstVNF_CPU ) / FirstVNF_RAM_Server ) ,( MRS - ACS ) ) ) ) + ( ( PN - FirstVNF_CPU ) + ( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( Max( CS,MUC ) / MUM ) / Max( RRSe,RRSe ) ) ) - Max( MUM,MUC ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( RMSe - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.8685185185185185, "obj2": 0.07668442676376366}, {"determining": "( Min( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - ( RCSe / ( ( MUR + Max( CS,( MUC * ( DS + MUM ) ) ) ) / ( RMSe - RMSe ) ) ) ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.9444444444444444, "obj2": 0.02808216482280112}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( MUR - ( MUC + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.3447751606810359}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.42592592592592593, "obj2": 0.45522789408646147}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( PN * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( RCSe - ( MUC + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.45925925925925926, "obj2": 0.42121130562479697}, {"determining": "( ( Max( ACS,ARS ) * MDR ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - CS ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( RRSe / ( MUM * CS ) ) + MUM ) / ( MUC * Max( Min( MUR ,( ( RCSe / ( MLU - CS ) ) / ( Max( MUR,DS ) + MUM ) ) ),Max( ( MUC / DS ),DS ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.35832029044696434}, {"determining": "( ( Max( ( ( DDR / MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) ) ) ),( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( FirstVNF_RAM - ( ( MRS - RRS ) + MDR ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( Max( ( MUR / ( DS * RCSe ) ),( Max( ( ( CS - MUM ) / ( DS / MUM ) ),MLU ) - ( Min( MUR ,MUM ) + Min( RCSe ,MUC ) ) ) ) + RRSe ) / ( CS + RRSe ) ) )", "obj1": 0.9703703703703703, "obj2": 0.008534835941600446}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ( AMS * FirstVNF_RAM ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem_Server ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( Min( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ,Max( ( MLU * CS ),Min( MLU ,( Max( RCSe,RRSe ) * ( ( ( MUR + MUR ) * CS ) + DS ) ) ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.43148148148148147, "obj2": 0.44657172158524205}, {"determining": "( Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) - ( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) * ( DDR / MRS ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * RCSe ) ,RMSe ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7327964807247637}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),CS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.44814814814814813, "obj2": 0.43522919712663355}, {"determining": "( ( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( ARS / MRS ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( ( ( ( MUM - RMSe ) * DS ) - CS ) / RRSe ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.9166666666666666, "obj2": 0.04785584871858804}, {"determining": "( ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) / ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ARS * FirstVNF_CPU_Server ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / Max( ( RRSe / DS ),( MUR + RRSe ) ) ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.0753413852423572}, {"determining": "Min( ( BR / DDR ) ,Max( MRS,AMS ) )", "choosing": "( Max( ( MLU / ( DS * ( ( DS * Max( RRSe,Max( CS,RMSe ) ) ) * RRSe ) ) ),MUR ) + Min( ( RRSe - RMSe ) ,Max( ( Min( ( ( CS * MUR ) - CS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( ( MUM / ( CS + ( CS - Max( DS,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8154842206263543}, {"determining": "( Min( Min( ( MRS + Max( BR,FirstVNF_RAM_Server ) ) ,( Max( Min( ( AMS - ARS ) ,RRS ),ACS ) * ARS ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( DDR ,( BR * ACS ) ) ) + ( ( MRS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + Max( ACS,ARS ) ) * ( BR / Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "Min( Max( ( ( ( Max( RCSe,MUC ) * ( MUR * ( RMSe + MUM ) ) ) * DS ) - MLU ),Max( MUC,Min( Min( MLU ,( RMSe / RCSe ) ) ,MUC ) ) ) ,Max( Max( ( ( DS - ( RCSe / Min( CS ,Max( CS,MUC ) ) ) ) - ( ( RRSe + RRSe ) + ( ( ( DS / MUR ) / MUR ) / RCSe ) ) ),DS ),Max( ( RCSe * RMSe ),MLU ) ) )", "obj1": 0.9203703703703704, "obj2": 0.047483185675319416}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.2777777777777778, "obj2": 0.6164592651996706}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( Min( FirstVNF_RAM ,MDR ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_CPU ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_Mem_Server ,( AMS - ACS ) ) ) ) ) + ( ARS - ( FirstVNF_CPU + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( CS * MLU ),( RRSe / MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUR + MUC ) + ( RRSe - RMSe ) ),( Min( MUC ,MLU ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.412962962962963, "obj2": 0.4684615849367273}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( MUR * Min( ( ( RCSe - Min( RCSe ,RRSe ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.362962962962963, "obj2": 0.530297068323438}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - RMSe ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.8814814814814815, "obj2": 0.0714248953827291}, {"determining": "( ( ( ACS * DDR ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) ) )", "choosing": "( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.13518518518518519, "obj2": 0.7712885362108787}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.9074074074074074, "obj2": 0.05279066130210538}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - AMS ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8154842206263543}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6610393345282335}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5940398444063612}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),CS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.44814814814814813, "obj2": 0.43522919712663355}, {"determining": "( ( ( ACS + ( FirstVNF_Mem / BR ) ) / Min( Min( RRS ,( CRS + FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_Mem_Server - BR ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( MLU + MLU ) + MUR ) ,MUM ) - CS ) / Max( ( Max( ( DS / RMSe ),( RCSe * CS ) ) * MUC ),( ( RMSe + MUM ) - ( ( MUC - CS ) + ( MUM / RMSe ) ) ) ) ) ) - ( Max( CS,MUR ) - ( CS * RMSe ) ) ) - ( ( MUC / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.9074074074074074, "obj2": 0.05279066130210538}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.26999393633357166}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.42592592592592593, "obj2": 0.45522789408646147}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( DDR + ( ( ARS * ( Min( AMS ,DDR ) + DDR ) ) * MDR ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7659162275469451}, {"determining": "( ( MDR / ( CRS - MDR ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - Min( ( MUC / ( DS / ( ( MUC - CS ) + RMSe ) ) ) ,( ( MUC * Min( ( MUC / MUR ) ,RMSe ) ) * MUC ) ) )", "obj1": 0.2537037037037037, "obj2": 0.634662371291825}, {"determining": "( ( PN * MDR ) + ( ( ( FirstVNF_CPU + ( BR / MDR ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR + FirstVNF_RAM ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.003998128757007585}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( MUR - ( MUC + RRSe ) ) + RMSe ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.42777777777777776, "obj2": 0.44821607567477756}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.34934524586388627}], "12": [{"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) + Min( ( PN - ( Const - ( FirstVNF_RAM / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( MUM - ( MUM - ( ( MLU * ( MUC + RRSe ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - Max( FirstVNF_Mem_Server,MDR ) ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( MUM - ( MUM - ( ( MLU * MUC ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,Max( ( FirstVNF_RAM_Server * FirstVNF_Mem ),FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( ( RRSe + DS ) * MUR ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + RCSe ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.198151860810925}, {"determining": "( ( ( ( BR / Min( Max( RRS,FirstVNF_Mem_Server ) ,( MRS * Min( BR ,FirstVNF_RAM_Server ) ) ) ) / ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( Max( MUM,RRSe ) - RMSe ) / ( MUR - DS ) ) ) - MUR ) ,( ( ( ( RMSe - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - ( ( MLU + DS ) - Min( RMSe ,MLU ) ) ) + Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.27749485654887157}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) ) )", "obj1": 0.7796296296296297, "obj2": 0.0968248708585242}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / PN ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5555555555555556, "obj2": 0.30543236867085427}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RRSe - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6351851851851852, "obj2": 0.21365514815213585}, {"determining": "Min( ( FirstVNF_CPU - Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ( FirstVNF_Mem - BR ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ) ) ,Max( Max( MDR,AMS ),ARS ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * Min( MUM ,RCSe ) ) - Min( CS ,( MLU - DS ) ) )", "obj1": 0.7129629629629629, "obj2": 0.18461459191378546}, {"determining": "( ( CRS * FirstVNF_Mem ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( ARS / ACS ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( DS - ( ( ( CS + CS ) + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.837037037037037, "obj2": 0.09495115195597822}, {"determining": "Min( ( Max( ( Max( ( MDR + FirstVNF_CPU ),( ( FirstVNF_RAM * ( FirstVNF_Mem - BR ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),CS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.725925925925926, "obj2": 0.17647624111118948}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7277777777777777, "obj2": 0.12137476026538974}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.36666666666666664, "obj2": 0.5126399082766192}, {"determining": "( ( PN * ( AMS / FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,RRSe ) + RMSe ) - Min( ( ( ( MUC + RMSe ) * MUC ) + RRSe ) ,RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5364151054646559}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( MUM - ( MUM - ( MUR + MUR ) ) )", "obj1": 0.7666666666666667, "obj2": 0.11006023064185763}, {"determining": "( ( PN * Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + ( CS * RMSe ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.387037037037037, "obj2": 0.4926797112616133}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6166666666666667, "obj2": 0.23613280586084076}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.46111111111111114, "obj2": 0.4041114060082203}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( CS - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.6, "obj2": 0.25658214965444803}, {"determining": "( ( CRS * Max( MDR,( FirstVNF_CPU_Server / ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.55, "obj2": 0.3318134412951199}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.48333333333333334, "obj2": 0.39747052010531614}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.480495705727895}, {"determining": "( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.3148148148148148, "obj2": 0.5721258045310849}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( ( ( ( ( ( MDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ) / FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),MLU ) - ( CS * RMSe ) ) - Min( RRSe ,RCSe ) ) - ( ( ( ( MUM * CS ) / DS ) + MUM ) / RMSe ) )", "obj1": 0.7425925925925926, "obj2": 0.11349948391098172}, {"determining": "( Max( FirstVNF_Mem,Max( MDR,( ( ARS + ACS ) * ( PN + ARS ) ) ) ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( MUR - ( Min( ( ( RRSe + MUR ) * Max( RRSe,Min( Max( RCSe,Min( RCSe ,MUR ) ) ,Max( ( RMSe * RMSe ),Max( MUM,RRSe ) ) ) ) ) ,MUC ) * RCSe ) )", "obj1": 0.3592592592592593, "obj2": 0.5339968074799796}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( ( ( ( DDR * ( RRS + ( Min( FirstVNF_Mem ,BR ) * ( ARS + PN ) ) ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,RRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Min( BR ,FirstVNF_CPU_Server ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUC - ( RRSe + MUC ) ) ,( MUC / DS ) ) / ( ( Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( ( RMSe + RRSe ) + ( Min( ( MLU + MUM ) ,Min( RMSe ,RRSe ) ) + RRSe ) ) ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.2397080562619256}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ACS ),Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7010910614505911}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ( CRS * ( FirstVNF_RAM_Server - CRS ) ) - FirstVNF_Mem ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),( MRS + ARS ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( Max( ( ( ( ( MUC * DS ) - DS ) / ( ( RMSe + MUM ) + Max( MUC,CS ) ) ) + MUR ),MUC ) ,RCSe ) ) + RCSe )", "obj1": 0.8629629629629629, "obj2": 0.08606385325084283}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( PN * MDR ) + ( ( ( FirstVNF_CPU + ( BR / MDR ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR + FirstVNF_RAM ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.003998128757007585}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.2851851851851852, "obj2": 0.6070471853811268}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.49074074074074076, "obj2": 0.39100402371272525}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + AMS ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( RCSe - ( RRSe + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.46596361278495135}, {"determining": "( Min( Min( ( MRS + Max( BR,FirstVNF_RAM_Server ) ) ,( Max( Min( ( AMS - ARS ) ,RRS ),ACS ) * ARS ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( DDR ,( BR * ACS ) ) ) + ( ( MRS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + Max( ACS,ARS ) ) * ( BR / Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "Min( Max( ( ( ( Max( RCSe,MUC ) * ( MUR * ( RMSe + MUM ) ) ) * DS ) - MLU ),Max( MUC,Min( Min( MLU ,( RMSe / RCSe ) ) ,MUC ) ) ) ,Max( Max( ( ( DS - ( RCSe / Min( CS ,Max( CS,MUC ) ) ) ) - ( ( RRSe + RRSe ) + ( ( ( DS / MUR ) / MUR ) / RCSe ) ) ),DS ),Max( ( RCSe * RMSe ),MLU ) ) )", "obj1": 0.9203703703703704, "obj2": 0.047483185675319416}, {"determining": "Min( Min( CRS ,ACS ) ,( ( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,PN ) ) - FirstVNF_CPU ) )", "choosing": "( Min( ( DS - RCSe ) ,( MUC / Min( RMSe ,MUC ) ) ) / ( ( RMSe + Max( MUC,( ( Min( MUR ,( MLU * RCSe ) ) / ( MUC + RRSe ) ) + MUR ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7508230367409743}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6475617794093077}, {"determining": "( Min( FirstVNF_CPU_Server ,( ( Max( PN,( AMS + MRS ) ) - ( FirstVNF_RAM_Server + PN ) ) * ACS ) ) + ( ( MDR + FirstVNF_CPU ) - ARS ) )", "choosing": "( ( ( Max( ( Max( MUM,RRSe ) - RMSe ),MUM ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( ( DS / ( MUM * CS ) ) + MUM ) ) ) + Min( MUR ,CS ) ) / RMSe ) )", "obj1": 0.20925925925925926, "obj2": 0.6923305452058168}, {"determining": "( Min( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,( ( PN + DDR ) - FirstVNF_RAM_Server ) ) ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - ( ( ( MUC + MUC ) + ( RRSe - RMSe ) ) / ( ( MUR + Max( CS,( MUC * ( DS + MUM ) ) ) ) / ( RMSe - RMSe ) ) ) ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.9444444444444444, "obj2": 0.02805371672455256}, {"determining": "( ( Max( ( ( DDR / MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( ( FirstVNF_RAM_Server + CRS ) / FirstVNF_RAM ) ) ) ),( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( FirstVNF_RAM - ( ( MRS - RRS ) + MDR ) ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( Max( ( MUR / ( DS * RCSe ) ),( Max( ( ( CS - MUM ) / ( DS / MUM ) ),MLU ) - ( Min( MUR ,MUM ) + Min( RCSe ,MUC ) ) ) ) + RRSe ) / ( CS + RRSe ) ) )", "obj1": 0.9703703703703703, "obj2": 0.008534835941600446}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( Min( AMS ,DDR ) + DDR ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * ( RMSe + RRSe ) ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.3907407407407407, "obj2": 0.4874649193714408}, {"determining": "( ( ( PN + MDR ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / PN ),Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * FirstVNF_Mem_Server ) ) ) + Min( Min( MDR ,FirstVNF_RAM_Server ) ,( Max( ( PN - FirstVNF_Mem_Server ),RRS ) - DDR ) ) ) ) ) )", "choosing": "( RMSe - ( RCSe * ( RMSe + Min( RCSe ,RCSe ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7558577972703358}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.4185185185185185, "obj2": 0.46514802854837395}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5, "obj2": 0.38176447464104746}, {"determining": "( Max( ( ( RRS + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ),Min( CRS ,MRS ) ) + ( ARS - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( Min( Min( RCSe ,MUR ) ,( MUC * ( DS + ( CS * MUR ) ) ) ) * CS ) / ( RRSe + MUR ) ) ) - ( ( DS / MLU ) / RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.5761658456793008}, {"determining": "( Max( ( MDR + ARS ),( ( DDR - FirstVNF_RAM_Server ) * Max( Max( MDR,( ( AMS * Min( MDR ,ACS ) ) - FirstVNF_Mem ) ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( RMSe + Max( ( ( ( ( MUC - RRSe ) - DS ) / Min( ( MUR / MUR ) ,MUM ) ) + MUR ),MUC ) ) + ( RRSe + RRSe ) ) / Min( ( RCSe - DS ) ,( MUC / DS ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7308623311611574}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6701327660876752}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + ( MRS - FirstVNF_RAM_Server ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS / ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RMSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( RRSe,MUC ) ) ) )", "obj1": 0.2777777777777778, "obj2": 0.6135374155036639}, {"determining": "Min( ( BR / DDR ) ,Max( MRS,AMS ) )", "choosing": "( Max( ( MLU / ( DS * ( ( DS * Max( RRSe,Max( CS,RMSe ) ) ) * RRSe ) ) ),MUR ) + Min( ( RRSe - RMSe ) ,Max( ( Min( ( ( CS * MUR ) - CS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( ( MUM / ( CS + ( CS - Max( DS,RMSe ) ) ) ) + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8154842206263543}, {"determining": "( ( PN * ( ( ( ( Min( CRS ,( ACS * CRS ) ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + ( FirstVNF_CPU_Server + DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( MLU ,RMSe ) / ( RRSe / MUR ) ) * DS ) - MUM ) * ( RMSe * ( ( ( RCSe - ( ( MUR + Min( RRSe ,RCSe ) ) / ( RMSe * RMSe ) ) ) + RRSe ) * ( RRSe / RCSe ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5943940910455175}, {"determining": "( ( Max( ACS,ARS ) * MDR ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - CS ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( RRSe / ( MUM * CS ) ) + MUM ) / ( MUC * Max( Min( MUR ,( ( RCSe / ( MLU - CS ) ) / ( Max( MUR,DS ) + MUM ) ) ),Max( ( MUC / DS ),DS ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.35832029044696434}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.6234580617250868}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.362962962962963, "obj2": 0.530297068323438}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_RAM + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( MUC * ( DS + MUM ) ) ) ) / ( RMSe - MUR ) ) ) - ( MUR * ( ( RRSe - MUC ) + DS ) ) ) ,Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) )", "obj1": 0.9555555555555556, "obj2": 0.019471174228174588}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_Mem_Server - ARS ) ) ),ACS ),( ( FirstVNF_RAM * ( Const * FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) - ( RRS - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUC - MUC ) * ( DS * Min( ( ( ( RRSe + MUM ) - RCSe ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5444444444444444, "obj2": 0.3382404132170421}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( PN / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - Max( ( MUR * MLU ),Min( MUM ,MLU ) ) )", "obj1": 0.9648148148148148, "obj2": 0.01019933149543649}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - AMS ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8154842206263543}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.34934524586388627}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,Min( ( FirstVNF_Mem / FirstVNF_RAM_Server ) ,( MRS - ACS ) ) ) ) + ( ( PN - FirstVNF_CPU ) + ( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) - ( CS - Min( ( RMSe - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.8685185185185185, "obj2": 0.07668442676376366}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Min( ( Min( RRSe ,DS ) - DS ) ,Min( ( MLU / MUR ) ,RCSe ) ) ) + RMSe ) )", "obj1": 0.45555555555555555, "obj2": 0.43068051108779415}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const + AMS ) ) * PN ) / ( ACS - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6801723465782513}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.63071754543732}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( Max( Max( FirstVNF_CPU_Server,( MDR + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * FirstVNF_Mem ) ) ,( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( ( RRSe * RRSe ) / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.9537037037037037, "obj2": 0.02042364910268774}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( PN * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( RCSe - ( MUC + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.45925925925925926, "obj2": 0.42121130562479697}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.5037037037037037, "obj2": 0.3787959818769396}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( ( ACS * FirstVNF_RAM ) + AMS ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( ( ( ( MUM - RMSe ) * RMSe ) - MUM ) / RRSe ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.9333333333333333, "obj2": 0.03392598277708357}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe / MUR ) - ( CS * RMSe ) ) - Min( MUR ,( MUM + MUC ) ) ) - Min( RCSe ,Min( RCSe ,RCSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.6607231334193956}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.44074074074074077, "obj2": 0.4421924816230403}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / MDR ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * ( MUC / DS ) ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5838327365435579}, {"determining": "( ( PN * ( ( ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) - ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) / ( DDR * MRS ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( FirstVNF_Mem,ARS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( Max( Min( RRSe ,DS ),DS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * RMSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( CS - ( MUC + RRSe ) ) + MUR ),( MUC * ( DS + MUM ) ) ) / Min( CS ,MUR ) ) + DS ) * ( MUM - RCSe ) ) - ( RMSe - ( MLU - MLU ) ) )", "obj1": 0.6018518518518519, "obj2": 0.2555233446752069}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( Max( RRS,FirstVNF_RAM ) + AMS ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( RMSe - RMSe ) / ( MUR + RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( MUC,MUR ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.13333333333333333, "obj2": 0.7666366961096452}, {"determining": "( ( BR - Min( ( RRS / DDR ) ,FirstVNF_RAM_Server ) ) / ( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ARS * FirstVNF_CPU_Server ) ) * ( Min( ( FirstVNF_RAM_Server * FirstVNF_Mem_Server ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( MLU + RRSe ) / ( ( CS + MUM ) - ( ( ( Max( RRSe,MUR ) - ( CS * DS ) ) - Max( ( MLU * MLU ),( RRSe + MUR ) ) ) - Min( Min( Max( RCSe,CS ) ,Max( RCSe,MUM ) ) ,( ( RRSe / Max( ( RRSe / DS ),( MUR + RRSe ) ) ) + ( MUM - MUC ) ) ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.0753413852423572}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM - RMSe ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.2740740740740741, "obj2": 0.6191513553176488}, {"determining": "( Min( MDR ,PN ) + ( ARS - ( MDR + Min( MRS ,RRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MUC ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( RMSe / DS ) - MUM ) ) )", "obj1": 0.512962962962963, "obj2": 0.3678881530706054}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - RMSe ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.8814814814814815, "obj2": 0.0714248953827291}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.737037037037037, "obj2": 0.11632656201947725}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6680436707250103}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( ( AMS + Min( FirstVNF_Mem_Server ,( BR / BR ) ) ) + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( ( ACS * FirstVNF_RAM ) + AMS ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RRSe - ( MUM / ( RMSe + RCSe ) ) ) + RCSe )", "obj1": 0.9388888888888889, "obj2": 0.033407015996415566}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.35341309620400485}, {"determining": "( ( FirstVNF_Mem * Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( ARS - ( MDR + FirstVNF_CPU ) ) ,( ARS / MRS ) ) ) ) * ( ( MDR + FirstVNF_Mem ) / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( ( ( ( MUM - MUM ) * DS ) - MLU ) / RRSe ) / ( RMSe - RMSe ) ) ) - RCSe ) ,Max( MUM,MUC ) )", "obj1": 0.8481481481481481, "obj2": 0.08970005644921936}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( ARS / MRS ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.8444444444444444, "obj2": 0.0919277858346861}, {"determining": "( Min( FirstVNF_CPU_Server ,( Max( Max( FirstVNF_CPU_Server,( AMS + MRS ) ),ACS ) * ACS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( Max( MUM,RRSe ) - RMSe ),MUR ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.1814814814814815, "obj2": 0.7188530774135522}, {"determining": "( ( ( ACS + ( FirstVNF_Mem / BR ) ) / Min( Min( RRS ,( CRS + FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_Mem_Server - BR ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( MLU + MLU ) + MUR ) ,MUM ) - CS ) / Max( ( Max( ( DS / RMSe ),( RCSe * CS ) ) * MUC ),( ( RMSe + MUM ) - ( ( MUC - CS ) + ( MUM / RMSe ) ) ) ) ) ) - ( Max( CS,MUR ) - ( CS * RMSe ) ) ) - ( ( MUC / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( Min( Min( ( Max( Max( FirstVNF_CPU_Server,( FirstVNF_Mem + ( FirstVNF_RAM * FirstVNF_CPU ) ) ),ACS ) * FirstVNF_Mem ) ,FirstVNF_CPU_Server ) ,Max( FirstVNF_CPU_Server,ACS ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( Max( ( ( CS - MUM ) + MUC ),MUM ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.9037037037037037, "obj2": 0.055175824438523084}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( DDR + ( ( ARS * ( Min( AMS ,DDR ) + DDR ) ) * MDR ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7659162275469451}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const + AMS ) ) * PN ) / ( ACS - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6801723465782513}, {"determining": "Min( ( Max( ( Max( ( MDR + FirstVNF_CPU ),( ( FirstVNF_RAM * ( FirstVNF_Mem - BR ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( Max( MDR,AMS ),FirstVNF_CPU ) )", "choosing": "( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) - ( CS - Min( ( MUR - ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,Max( MLU,MUC ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.18297353523555035}, {"determining": "( ( ( ( Min( DDR ,MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,( CRS / BR ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,RRSe ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( Max( MUM,DS ) - ( MUM / MUR ) ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.619905756213083}, {"determining": "( ( PN * ( ( ( ( ( FirstVNF_Mem * CRS ) / ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( MUR ,Max( RMSe,( MUM / ( CS + MUC ) ) ) ) * MLU ) * DS ) - MUM ) * ( RMSe * Min( ( ( MUM - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + Max( CS,MUM ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5888699166958756}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.25, "obj2": 0.6396685107612055}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.5055555555555555, "obj2": 0.3681307884502748}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * RCSe ) ,RMSe ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6338768946942953}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.42592592592592593, "obj2": 0.45522789408646147}, {"determining": "Min( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ),( Max( FirstVNF_Mem,( ( Min( RRS ,PN ) + ARS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( ( ( Max( Max( DS,RRSe ),Max( MUC,MUR ) ) - MUC ) - MUC ) * CS ),( RRSe + MUR ) ) ) - ( ( ( RCSe / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.4462962962962963, "obj2": 0.43758569370493733}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( MUR - ( MUC + RRSe ) ) + RMSe ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.42777777777777776, "obj2": 0.44821607567477756}], "13": [{"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ( CRS * ( FirstVNF_RAM_Server - CRS ) ) - FirstVNF_Mem ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),( MRS + ARS ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( Max( ( ( ( ( MUC * DS ) - DS ) / ( ( RMSe + MUM ) + Max( MUC,CS ) ) ) + MUR ),MUC ) ,RCSe ) ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) + Min( ( PN - ( Const - ( FirstVNF_RAM / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( MUM - ( MUM - ( ( MLU * ( MUC + RRSe ) ) + RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,( Min( FirstVNF_CPU_Server ,ARS ) * ( ( ( BR / FirstVNF_Mem_Server ) + DDR ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,MUC ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.8166666666666667, "obj2": 0.07447623820533372}, {"determining": "Min( ( FirstVNF_CPU - Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ( FirstVNF_Mem - BR ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,Max( AMS,BR ) ) ) ) ,Max( Max( MDR,AMS ),ARS ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( Min( RRSe ,MLU ),RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * Min( MUM ,RCSe ) ) - Min( CS ,( MLU - DS ) ) )", "obj1": 0.7129629629629629, "obj2": 0.18461459191378546}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - RMSe ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.8814814814814815, "obj2": 0.0714248953827291}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6351851851851852, "obj2": 0.213615157857809}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) ) )", "obj1": 0.7796296296296297, "obj2": 0.0968248708585242}, {"determining": "( ( ( Min( ( FirstVNF_Mem - ( Min( DDR ,AMS ) * FirstVNF_CPU ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + Min( ( PN - MDR ) ,( Min( ( ( Const - ACS ) - FirstVNF_Mem ) ,RRS ) + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( BR + Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),Const ) ) )", "choosing": "( ( ( ( Min( RMSe ,( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( MUM - ( ( DS / ( MUR + Min( ( MLU + MUM ) ,( CS / DS ) ) ) ) + ( ( ( RRSe - RCSe ) / ( ( RCSe / DS ) - RCSe ) ) + ( RCSe / RMSe ) ) ) ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,( ( ( DS / Max( MUR,CS ) ) + MUM ) / ( ( RMSe / DS ) - MUM ) ) ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.19507670126901416}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,RCSe ) ) )", "obj1": 0.7148148148148148, "obj2": 0.14564015395181495}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.198151860810925}, {"determining": "( ( ( ( BR / Min( Max( RRS,FirstVNF_Mem_Server ) ,( MRS * Min( BR ,FirstVNF_RAM_Server ) ) ) ) / ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( Max( MUM,RRSe ) - RMSe ) / ( MUR - DS ) ) ) - MUR ) ,( ( ( ( RMSe - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - ( ( MLU + DS ) - Min( RMSe ,MLU ) ) ) + Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.27749485654887157}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ( BR + BR ) ),Min( ( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( MUM - MUM ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7001949341110095}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5462962962962963, "obj2": 0.3179544638691844}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5740740740740741, "obj2": 0.282053651532582}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - AMS ) * MDR ) / ( Min( ( FirstVNF_Mem_Server - ARS ) ,RRS ) - ( ACS * ARS ) ) ) )", "choosing": "( Max( ( MUR / ( RCSe / MLU ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / PN ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.30283985939669084}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ( ARS - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( MUM ,DS ) * ( MLU + RCSe ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) * MUM ) / RMSe ) )", "obj1": 0.387037037037037, "obj2": 0.4923124916232211}, {"determining": "( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.3148148148148148, "obj2": 0.5721258045310849}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ( DDR * MRS ) / MDR ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( RMSe * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5078512780806221}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( MUM - ( MUM - ( MUR + MUR ) ) )", "obj1": 0.7666666666666667, "obj2": 0.11006023064185763}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RRSe - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5907407407407408, "obj2": 0.2519039648022637}, {"determining": "( ( PN * ( ( ( MRS * DDR ) * ( ( ( ( MRS - RRS ) * FirstVNF_RAM_Server ) / PN ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / ( MRS + ACS ) ) ) ) ) + ( ( ( ( ( AMS - MDR ) / FirstVNF_Mem ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + Max( ( PN / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( ( MUC * MLU ) - Max( RMSe,( CS + MUC ) ) ),MUR ) - ( RRSe * DS ) ) - Max( RRSe,( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Min( ( ( RMSe - RMSe ) + ( MUC + RMSe ) ) ,( ( MUR + DS ) * MLU ) ) ) ) + ( ( CS - Max( ( DS - RMSe ),MUR ) ) - RCSe ) ) / RMSe ) )", "obj1": 0.27037037037037037, "obj2": 0.6101101998598194}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6475617794093077}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( MUM - ( MUM - Max( ( MUC / ( DS * RCSe ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.1316096709496525}, {"determining": "Min( Min( CRS ,ACS ) ,Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( DDR / FirstVNF_RAM ) * ( FirstVNF_RAM_Server + ( RRS + FirstVNF_RAM ) ) ) + ( CRS + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( RMSe - RMSe ) + ( MUC + RMSe ) ),( ( MUR + DS ) - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.20925925925925926, "obj2": 0.6915156449921955}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( ( ( ( ( ( MDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ) / FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),MLU ) - ( CS * RMSe ) ) - Min( RRSe ,RCSe ) ) - ( ( ( ( MUM * CS ) / DS ) + MUM ) / RMSe ) )", "obj1": 0.7425925925925926, "obj2": 0.11349948391098172}, {"determining": "( Min( Min( ( MRS + Max( BR,FirstVNF_RAM_Server ) ) ,( Max( Min( ( AMS - ARS ) ,RRS ),ACS ) * ARS ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( DDR ,( BR * ACS ) ) ) + ( ( MRS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + Max( ACS,ARS ) ) * ( BR / Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "Min( Max( ( ( ( Max( RCSe,MUC ) * ( MUR * ( RMSe + MUM ) ) ) * DS ) - MLU ),Max( MUC,Min( Min( MLU ,( RMSe / RCSe ) ) ,MUC ) ) ) ,Max( Max( ( ( DS - ( RCSe / Min( CS ,Max( CS,MUC ) ) ) ) - ( ( RRSe + RRSe ) + ( ( ( DS / MUR ) / MUR ) / RCSe ) ) ),DS ),Max( ( RCSe * RMSe ),MLU ) ) )", "obj1": 0.9203703703703704, "obj2": 0.047483185675319416}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.48333333333333334, "obj2": 0.39747052010531614}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * Max( ( MLU * CS ),( MUR + MUR ) ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.6037037037037037, "obj2": 0.25030499766145187}, {"determining": "( ( ( PN + MDR ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / PN ),Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * FirstVNF_Mem_Server ) ) ) + Min( Min( MDR ,FirstVNF_RAM_Server ) ,( Max( ( PN - FirstVNF_Mem_Server ),RRS ) - DDR ) ) ) ) ) )", "choosing": "( RMSe - ( RCSe * ( RMSe + Min( RCSe ,RCSe ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7558577972703358}, {"determining": "Min( ( Max( Min( FirstVNF_CPU_Server ,FirstVNF_RAM_Server ),( Max( FirstVNF_Mem,( ( Min( RRS ,PN ) + ARS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( ( ( Max( Max( DS,RRSe ),Max( MUC,MUR ) ) - MUC ) - MUC ) * CS ),( RRSe + MUR ) ) ) - ( ( ( RCSe / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.4462962962962963, "obj2": 0.43758569370493733}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.2851851851851852, "obj2": 0.6003311475396872}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + AMS ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( RCSe - ( RRSe + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.46596361278495135}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( ( Max( MUM,RRSe ) - RMSe ),MUR ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.7277777777777777, "obj2": 0.1213518593048158}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ( MRS - RRS ) * AMS ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( FirstVNF_CPU_Server / ( CRS / CRS ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( MUM * MUR ) )", "obj1": 0.25, "obj2": 0.6312813961466208}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,( DDR / PN ) ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / Max( FirstVNF_Mem,ACS ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ( ( FirstVNF_Mem_Server * FirstVNF_RAM_Server ) + BR ) - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),( MDR + ARS ) ) + FirstVNF_RAM_Server ) * ( DDR / PN ) ) )", "choosing": "( ( RCSe - ( Max( ( ( ( Max( RRSe,RCSe ) + Max( MLU,MLU ) ) / ( ( RMSe + MUM ) + ( CS + MUC ) ) ) + MUR ),MUC ) * RCSe ) ) + RCSe )", "obj1": 0.8981481481481481, "obj2": 0.06776394360107925}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.480495705727895}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( Max( DDR,RRS ) + ( FirstVNF_RAM / RRS ) ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem_Server ) / ( AMS + MDR ) ) ) ) ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - Max( ( CS * MLU ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( DS - MUR ) ,( MUC / CS ) ),( CS * Max( CS,MUC ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5, "obj2": 0.37566601385087633}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_Mem_Server - ARS ) ) ),ACS ),( ( FirstVNF_RAM * ( Const * FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) - ( RRS - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUC - MUC ) * ( DS * Min( ( ( ( RRSe + MUM ) - RCSe ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5444444444444444, "obj2": 0.3382404132170421}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( PN * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( RCSe - ( MUC + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.45555555555555555, "obj2": 0.42463859572776597}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + MUR ) ) ) - Min( RCSe ,Min( RCSe ,MUR ) ) )", "obj1": 0.362962962962963, "obj2": 0.530297068323438}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( DDR + ( ( ARS * ( Min( AMS ,DDR ) + DDR ) ) * MDR ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7659162275469451}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.44074074074074077, "obj2": 0.4421924816230403}, {"determining": "( ( PN * MDR ) + ( ( ( FirstVNF_CPU + ( BR / MDR ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR + FirstVNF_RAM ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.003998128757007585}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( MUR - ( MUC + RRSe ) ) + RMSe ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.42777777777777776, "obj2": 0.44821607567477756}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.34444444444444444, "obj2": 0.5357597274699248}, {"determining": "( ( ( ( ( DDR * ( RRS + ( Min( FirstVNF_Mem ,BR ) * ( ARS + PN ) ) ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,RRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Min( BR ,FirstVNF_CPU_Server ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUC - ( RRSe + MUC ) ) ,( MUC / DS ) ) / ( ( Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( ( RMSe + RRSe ) + ( Min( ( MLU + MUM ) ,Min( RMSe ,RRSe ) ) + RRSe ) ) ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.2397080562619256}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6166666666666667, "obj2": 0.23613280586084076}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( PN * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( RCSe - ( MUC + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.45925925925925926, "obj2": 0.42121130562479697}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe - Min( Max( ( ( ( ( MUC - RRSe ) - DS ) / ( ( RMSe + MUM ) + ( MUC + CS ) ) ) + MUR ),MUC ) ,RCSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.9259259259259259, "obj2": 0.0381068064111534}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / PN ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5555555555555556, "obj2": 0.30543236867085427}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( RRS + ACS ) + FirstVNF_CPU ) ) )", "choosing": "( MUM - ( MUM - ( MUR + MUR ) ) )", "obj1": 0.7759259259259259, "obj2": 0.10570485996788527}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + RMSe ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5364151054646559}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.4648148148148148, "obj2": 0.3999603144699024}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + RMSe ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.38897203008503256}, {"determining": "( Max( ( ( RRS + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ),Min( CRS ,MRS ) ) + ( ARS - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( Min( Min( RCSe ,MUR ) ,( MUC * ( DS + ( CS * MUR ) ) ) ) * CS ) / ( RRSe + MUR ) ) ) - ( ( DS / MLU ) / RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.5761658456793008}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / RRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU + ( Const + MRS ) ) * ( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Max( ( MUC * ( DS + MUM ) ),Min( ( RCSe / RMSe ) ,MUM ) ) )", "obj1": 0.9074074074074074, "obj2": 0.05431793218731586}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6701327660876752}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.737037037037037, "obj2": 0.11632656201947725}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * Min( Const ,FirstVNF_Mem_Server ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),CS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.5370370370370371, "obj2": 0.34384124998786336}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.36666666666666664, "obj2": 0.5126399082766192}, {"determining": "Min( Min( CRS ,ACS ) ,( ( FirstVNF_CPU - Min( FirstVNF_RAM_Server ,PN ) ) - FirstVNF_CPU ) )", "choosing": "( Min( ( DS - RCSe ) ,( MUC / Min( RMSe ,MUC ) ) ) / ( ( RMSe + Max( MUC,( ( Min( MUR ,( MLU * RCSe ) ) / ( MUC + RRSe ) ) + MUR ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7508230367409743}, {"determining": "( ( PN * ( ( ( ( ( FirstVNF_Mem * CRS ) / ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( MUR ,Max( RMSe,( MUM / ( CS + MUC ) ) ) ) * MLU ) * DS ) - MUM ) * ( RMSe * Min( ( ( MUM - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + Max( CS,MUM ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5888699166958756}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6166666666666667, "obj2": 0.23613280586084076}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ACS ,Max( ( Min( RRS ,RRS ) - ACS ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( ( Max( RCSe,RRSe ) - RMSe ),MUR ) ) - Max( ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / Min( MUM ,CS ) ) + ( ( ( ( MLU - RCSe ) / RMSe ) + Max( Min( ( RRSe + CS ) ,( RRSe * RCSe ) ),DS ) ) * RMSe ) ) / MLU ) )", "obj1": 0.17962962962962964, "obj2": 0.7201765084717286}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( Max( RRS,FirstVNF_RAM ) + AMS ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( RMSe - RMSe ) / ( MUR + RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( MUC,MUR ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.13333333333333333, "obj2": 0.7666366961096452}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,PN ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( PN + AMS ) - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( ( RCSe - MUR ) / RRSe ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.46111111111111114, "obj2": 0.4041114060082203}, {"determining": "( Min( MDR ,PN ) + ( ARS - ( MDR + Min( MRS ,RRS ) ) ) )", "choosing": "( ( ( Max( RRSe,MUC ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( RMSe / DS ) - MUM ) ) )", "obj1": 0.512962962962963, "obj2": 0.3678881530706054}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.3888888888888889, "obj2": 0.4852285815656049}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const + Max( RRS,Const ) ) ) * PN ) / ( ACS - Min( ( ( BR - ACS ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,Min( MUC ,DS ) ) * ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6801723465782513}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( Max( ( MUR / ( DS * RCSe ) ),MUR ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.9703703703703703, "obj2": 0.008534835941600446}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN - MDR ) + ( PN - ( Const - ( FirstVNF_RAM / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( RMSe + Max( ( ( ( MUC + RRSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.014649183409019724}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.4185185185185185, "obj2": 0.46514802854837395}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( Min( PN ,FirstVNF_Mem_Server ) ,( FirstVNF_RAM / FirstVNF_Mem ) ) ) + ( FirstVNF_CPU + CRS ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,( MUC / Max( ( ( RCSe / CS ) + RMSe ),MLU ) ) ) * DS ) - MUM ) * ( RMSe * Min( ( ( MUM - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + Max( MUM,CS ) ) ,( DS / RCSe ) ) ) )", "obj1": 0.9, "obj2": 0.05807915821912782}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( Max( FirstVNF_Mem,Max( MDR,( ( ARS + ACS ) * ( PN + ARS ) ) ) ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( MUR - ( Min( ( ( RRSe + MUR ) * Max( RRSe,Min( Max( RCSe,Min( RCSe ,MUR ) ) ,Max( ( RMSe * RMSe ),Max( MUM,RRSe ) ) ) ) ) ,MUC ) * RCSe ) )", "obj1": 0.3592592592592593, "obj2": 0.5339968074799796}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4203703703703704, "obj2": 0.45678399074594395}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.4842569289438209}, {"determining": "( ( ( ( ( Const + BR ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - ( ( CRS / FirstVNF_Mem ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,ACS ) ) ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) / DS ) * ( RMSe - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,RRSe ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6558932556872974}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / PN ),Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.22592592592592592, "obj2": 0.6674488153538349}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( ( MUM * CS ) * ( DS + MUM ) ) ) ) / ( RMSe - MUR ) ) ) - ( MUR * ( ( RRSe - MUC ) + DS ) ) ) ,Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) )", "obj1": 0.95, "obj2": 0.026989990129504832}, {"determining": "( ( PN * ( ( ( ( Min( CRS ,( ACS * CRS ) ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + ( FirstVNF_CPU_Server + DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( MLU ,RMSe ) / ( RRSe / MUR ) ) * DS ) - MUM ) * ( RMSe * ( ( ( RCSe - ( ( MUR + Min( RRSe ,RCSe ) ) / ( RMSe * RMSe ) ) ) + RRSe ) * ( RRSe / RCSe ) ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5943940910455175}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.42592592592592593, "obj2": 0.45522789408646147}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RRSe - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5907407407407408, "obj2": 0.2519039648022637}, {"determining": "( ( ( FirstVNF_RAM_Server * ( Const + AMS ) ) * PN ) / ( ACS - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6801723465782513}, {"determining": "( ( Max( ACS,ARS ) * MDR ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - CS ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( RRSe / ( MUM * CS ) ) + MUM ) / ( MUC * Max( Min( MUR ,( ( RCSe / ( MLU - CS ) ) / ( Max( MUR,DS ) + MUM ) ) ),Max( ( MUC / DS ),DS ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.35832029044696434}, {"determining": "( ( ( ACS + ( FirstVNF_Mem / BR ) ) / Min( Min( RRS ,( CRS + FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_Mem_Server - BR ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( MLU + MLU ) + MUR ) ,MUM ) - CS ) / Max( ( Max( ( DS / RMSe ),( RCSe * CS ) ) * MUC ),( ( RMSe + MUM ) - ( ( MUC - CS ) + ( MUM / RMSe ) ) ) ) ) ) - ( Max( CS,MUR ) - ( CS * RMSe ) ) ) - ( ( MUC / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( PN * ( AMS / FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,RRSe ) + RMSe ) - Min( ( ( ( MUC + RMSe ) * MUC ) + RRSe ) ,RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5364151054646559}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) ) ) )", "obj1": 0.2574074074074074, "obj2": 0.6304005358410602}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.35341309620400485}, {"determining": "( ( ( ( Min( DDR ,MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,( CRS / BR ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,RRSe ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( Max( MUM,DS ) - ( MUM / MUR ) ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.619905756213083}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe / MUR ) - ( CS * RMSe ) ) - Min( MUR ,( MUM + MUC ) ) ) - Min( RCSe ,Min( RCSe ,RCSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.6607231334193956}], "14": [{"determining": "( Max( FirstVNF_Mem,Max( MDR,( FirstVNF_RAM * ( ( ( ( MRS - RRS ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) ) ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( MUR - ( Min( ( ( MUM * Max( ( ( RMSe - RMSe ) + ( MUC + RMSe ) ),( ( MUR + DS ) - MLU ) ) ) * Max( RRSe,Min( Max( RCSe,MUM ) ,( ( RMSe * RMSe ) / Max( MUM,RRSe ) ) ) ) ) ,MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( ( Max( FirstVNF_CPU_Server,AMS ) / ( ( CRS * ( FirstVNF_RAM_Server - CRS ) ) - FirstVNF_Mem ) ) * ( Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,FirstVNF_CPU ) / ( ARS - AMS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( FirstVNF_RAM_Server + Max( ( ( DDR - FirstVNF_RAM_Server ) * Max( MDR,ACS ) ),( MRS + ARS ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( RCSe - Min( Max( ( ( ( ( MUC * DS ) - DS ) / ( ( RMSe + MUM ) + Max( MUC,CS ) ) ) + MUR ),MUC ) ,RCSe ) ) + RCSe )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Const ,( Min( FirstVNF_CPU_Server ,ARS ) * ( ( ( BR / FirstVNF_Mem_Server ) + DDR ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,MUC ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.16404564496909477}, {"determining": "( ( ( Min( ( FirstVNF_Mem - ( Min( DDR ,AMS ) * FirstVNF_CPU ) ) ,( FirstVNF_RAM + FirstVNF_CPU_Server ) ) + Min( ( PN - MDR ) ,( Min( ( ( Const - ACS ) - FirstVNF_Mem ) ,RRS ) + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( BR + Max( FirstVNF_Mem,FirstVNF_CPU ) ) ),Const ) ) )", "choosing": "( ( ( ( Min( RMSe ,( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( MUM - ( ( DS / ( MUR + Min( ( MLU + MUM ) ,( CS / DS ) ) ) ) + ( ( ( RRSe - RCSe ) / ( ( RCSe / DS ) - RCSe ) ) + ( RCSe / RMSe ) ) ) ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,( ( ( DS / Max( MUR,CS ) ) + MUM ) / ( ( RMSe / DS ) - MUM ) ) ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.19507670126901416}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( ( DDR * ARS ) * RRS ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( RRS / FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( CS ,RCSe ) - RCSe ) ,Max( DS,( MUM / ( ( MUM - RMSe ) - MUC ) ) ) )", "obj1": 0.8740740740740741, "obj2": 0.07329177961042838}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.8166666666666667, "obj2": 0.07447623820533372}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( ( BR - MRS ),MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( MUC + CS ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ( BR + BR ) ),Min( ( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( MUM - MUM ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7001949341110095}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5462962962962963, "obj2": 0.3179544638691844}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RRSe - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7888888888888889, "obj2": 0.08684983505131987}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.29086515355121095}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( ( MUM * CS ) * ( DS + MUM ) ) ) ) / ( RMSe - MUR ) ) ) - ( MUR * ( ( RRSe - MUC ) + DS ) ) ) ,Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) )", "obj1": 0.95, "obj2": 0.026989990129504832}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.43148148148148147, "obj2": 0.436805976877463}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS - CS ) + Max( RCSe,RRSe ) ) / ( ( ( ( MUR + MUC ) + MUC ) * ( ( RRSe / CS ) + ( MLU * RRSe ) ) ) - RMSe ) ) - Min( ( Min( Max( CS,MUC ) ,CS ) * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) )", "obj1": 0.3592592592592593, "obj2": 0.5296237479551255}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( ( ( ( ( ( MDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ) / FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),MLU ) - ( CS * RMSe ) ) - Min( RRSe ,RCSe ) ) - ( ( ( ( MUM * CS ) / DS ) + MUM ) / RMSe ) )", "obj1": 0.7425925925925926, "obj2": 0.11349948391098172}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( PN * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( RMSe - RMSe ) / RMSe ) )", "obj1": 0.6333333333333333, "obj2": 0.22708165681535109}, {"determining": "( ( ( ( ( ARS - ( MDR + FirstVNF_CPU ) ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) ) ) )", "obj1": 0.4537037037037037, "obj2": 0.42437615047044214}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / PN ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5555555555555556, "obj2": 0.30543236867085427}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) + ( ( MDR + FirstVNF_CPU ) - ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_RAM ) ) ),ACS ),( ( ( FirstVNF_Mem_Server - CRS ) * Max( FirstVNF_RAM_Server,ARS ) ) / MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,Const ) ) ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( DS * Min( ( RCSe / RCSe ) ,( ( RCSe - ( ( CS + ( MUC + RCSe ) ) - MUM ) ) + RRSe ) ) ) )", "obj1": 0.4740740740740741, "obj2": 0.3964956425452218}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * Min( DDR ,FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( MDR + FirstVNF_CPU ) - ARS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( RCSe + RRSe ) )", "obj1": 0.6111111111111112, "obj2": 0.2396564105908963}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - AMS ) * MDR ) / ( Min( ( FirstVNF_Mem_Server - ARS ) ,RRS ) - ( ACS * ARS ) ) ) )", "choosing": "( Max( ( MUR / ( RCSe / MLU ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( Max( ( MUR / ( DS * RCSe ) ),MUR ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.9703703703703703, "obj2": 0.008534835941600446}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( PN * ( PN + ( Min( AMS ,FirstVNF_CPU_Server ) / DDR ) ) ) + ( ARS - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) ,Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( RRSe + MUR ),( ( DS + DS ) - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5618421327586776}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.2777777777777778, "obj2": 0.5970642481238816}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * RRSe ) + ( RRSe - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5925925925925926, "obj2": 0.25029340779858117}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_Mem_Server - ARS ) ) ),ACS ),( ( FirstVNF_RAM * ( Const * FirstVNF_Mem_Server ) ) / FirstVNF_Mem ) ) - ( RRS - ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUC - MUC ) * ( DS * Min( ( ( ( RRSe + MUM ) - RCSe ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5444444444444444, "obj2": 0.3382404132170421}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( ( Max( MUM,RRSe ) - RMSe ),MUR ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.7148148148148148, "obj2": 0.14559719684179365}, {"determining": "( ( ( PN + MDR ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / PN ),Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( ( ACS / AMS ) * FirstVNF_Mem_Server ) ) ) + Min( Min( MDR ,FirstVNF_RAM_Server ) ,( Max( ( PN - FirstVNF_Mem_Server ),RRS ) - DDR ) ) ) ) ) )", "choosing": "( RMSe - ( RCSe * ( RMSe + Min( RCSe ,RCSe ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7558577972703358}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / Max( RRSe,RCSe ) ) - MUR ) ,Max( MUM,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( RMSe / DS ) - MUM ) ) ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.15104700404032773}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( CS * MUR ) - Max( ( MUC / ( DS * RCSe ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.1304950699003773}, {"determining": "( Min( Min( ( MRS + Max( BR,FirstVNF_RAM_Server ) ) ,( Max( Min( ( AMS - ARS ) ,RRS ),ACS ) * ARS ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( DDR ,( BR * ACS ) ) ) + ( ( MRS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + Max( ACS,ARS ) ) * ( BR / Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "Min( Max( ( ( ( Max( RCSe,MUC ) * ( MUR * ( RMSe + MUM ) ) ) * DS ) - MLU ),Max( MUC,Min( Min( MLU ,( RMSe / RCSe ) ) ,MUC ) ) ) ,Max( Max( ( ( DS - ( RCSe / Min( CS ,Max( CS,MUC ) ) ) ) - ( ( RRSe + RRSe ) + ( ( ( DS / MUR ) / MUR ) / RCSe ) ) ),DS ),Max( ( RCSe * RMSe ),MLU ) ) )", "obj1": 0.9203703703703704, "obj2": 0.047483185675319416}, {"determining": "( ( PN * ( ( ( MRS * DDR ) * ( ( ( ( MRS - RRS ) * FirstVNF_RAM_Server ) / PN ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / ( MRS + ACS ) ) ) ) ) + ( ( ( ( ( AMS - MDR ) / FirstVNF_Mem ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + Max( ( PN / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( ( MUC * MLU ) - Max( RMSe,( CS + MUC ) ) ),MUR ) - ( RRSe * DS ) ) - Max( RRSe,( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Min( ( ( RMSe - RMSe ) + ( MUC + RMSe ) ) ,( ( MUR + DS ) * MLU ) ) ) ) + ( ( CS - Max( ( DS - RMSe ),MUR ) ) - RCSe ) ) / RMSe ) )", "obj1": 0.27037037037037037, "obj2": 0.6101101998598194}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + AMS ) ),ACS ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( RCSe - ( RRSe + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.46596361278495135}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( MDR - PN ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU ,Min( MRS ,ACS ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUR * ( RRSe - ( MUR - MLU ) ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5833333333333334, "obj2": 0.27422435166496734}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( DDR * ACS ) / ( ( DDR * MRS ) / Min( FirstVNF_Mem ,CRS ) ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + ( MDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - ( CS * ( Min( DS ,RCSe ) * Max( MUC,MUR ) ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( MUC / DS ) ,( RCSe - DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.36666666666666664, "obj2": 0.5102624887349949}, {"determining": "( ( Max( ARS,ACS ) * MDR ) + ( ( MDR + FirstVNF_CPU ) * ARS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7469078504013423}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.5111111111111111, "obj2": 0.36566216980769795}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.2792426141499402}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.480495705727895}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6840324754913392}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / RRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU + ( Const + MRS ) ) * ( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Max( ( MUC * ( DS + MUM ) ),Min( ( RCSe / RMSe ) ,MUM ) ) )", "obj1": 0.9074074074074074, "obj2": 0.05431793218731586}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ACS ,Max( ( Min( RRS ,RRS ) - ACS ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( ( Max( RCSe,RRSe ) - RMSe ),MUR ) ) - Max( ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / Min( MUM ,CS ) ) + ( ( ( ( MLU - RCSe ) / RMSe ) + Max( Min( ( RRSe + CS ) ,( RRSe * RCSe ) ),DS ) ) * RMSe ) ) / MLU ) )", "obj1": 0.17962962962962964, "obj2": 0.7201765084717286}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( DDR + ( ( ARS * ( Min( AMS ,DDR ) + DDR ) ) * ( Min( FirstVNF_CPU_Server ,ARS ) * ( ( ( BR / FirstVNF_Mem_Server ) + DDR ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + ( CS * Max( CS,MUC ) ) ) ) - DS ),MUC ) )", "obj1": 0.1388888888888889, "obj2": 0.7637675393916129}, {"determining": "Min( ( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) - FirstVNF_CPU ) ,Max( ( FirstVNF_Mem / ( MDR + FirstVNF_RAM ) ),( AMS * RRS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + RMSe ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.38897203008503256}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( DDR * MRS ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe - Min( Max( ( MUR + MUR ),MUC ) ,RCSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.9333333333333333, "obj2": 0.03392598277708357}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( Max( DDR,RRS ) + ( FirstVNF_RAM / RRS ) ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_Mem_Server ) ) * ( Min( Const ,FirstVNF_Mem_Server ) / ( AMS + MDR ) ) ) ) ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - Max( ( CS * MLU ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( DS - MUR ) ,( MUC / CS ) ),( CS * Max( CS,MUC ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5, "obj2": 0.37566601385087633}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3502921856238207}, {"determining": "( ( PN * ( ( ( ( ( FirstVNF_Mem * CRS ) / ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( MUR ,Max( RMSe,( MUM / ( CS + MUC ) ) ) ) * MLU ) * DS ) - MUM ) * ( RMSe * Min( ( ( MUM - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + Max( CS,MUM ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5888699166958756}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.8055555555555556, "obj2": 0.07860592873221006}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.6462962962962963, "obj2": 0.20738676125238695}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RRSe - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5851851851851851, "obj2": 0.253704153800071}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) + ( ( PN - ( ( CRS / FirstVNF_Mem ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Min( FirstVNF_CPU ,DDR ) ) ) ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM * ( ( MRS - ( AMS / BR ) ) * Const ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + Min( DS ,MUR ) ) ) - DS ) * ( RMSe - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( ( MUR + MUC ) + MUC ) * Max( ( RRSe / CS ),( MLU * RRSe ) ) ) - RMSe ),MUC ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6461142598263708}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN - MDR ) + ( PN - ( Const - ( FirstVNF_RAM / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( RMSe + Max( ( ( ( MUC + RRSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.014649183409019724}, {"determining": "( ( PN * MDR ) + ( ( Max( ( ACS - Min( ( ARS / FirstVNF_RAM_Server ) ,( ( BR - MRS ) + DDR ) ) ),( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( ( DS / ( MUM * CS ) ) - ( ( RCSe - ( RRSe + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.45740740740740743, "obj2": 0.4215667290716123}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6351851851851852, "obj2": 0.213615157857809}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.42777777777777776, "obj2": 0.4407620575424575}, {"determining": "( ( ( ( ( Const + BR ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - ( ( CRS / FirstVNF_Mem ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,ACS ) ) ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) / DS ) * ( RMSe - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,RRSe ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.23703703703703705, "obj2": 0.6558932556872974}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) ) )", "obj1": 0.7796296296296297, "obj2": 0.0968248708585242}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ( ARS - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( MUM ,DS ) * ( MLU + RCSe ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) * MUM ) / RMSe ) )", "obj1": 0.387037037037037, "obj2": 0.4923124916232211}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.42592592592592593, "obj2": 0.45522789408646147}, {"determining": "( ( PN * ( AMS / FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,RRSe ) + RMSe ) - Min( ( ( ( MUC + RMSe ) * MUC ) + RRSe ) ,RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5364151054646559}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( Max( ( ( RRS + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ),Min( CRS ,MRS ) ) + ( ARS - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( Min( Min( RCSe ,MUR ) ,( MUC * ( DS + ( CS * MUR ) ) ) ) * CS ) / ( RRSe + MUR ) ) ) - ( ( DS / MLU ) / RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.5761658456793008}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.198151860810925}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe / MUR ) - ( CS * RMSe ) ) - Min( MUR ,( MUM + MUC ) ) ) - Min( RCSe ,Min( RCSe ,RCSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.6607231334193956}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ( MRS - RRS ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( RMSe - RMSe ) + ( MUC + RMSe ) ),( ( MUR + DS ) - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.25, "obj2": 0.6312813961466208}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( DDR / ( FirstVNF_CPU + FirstVNF_Mem ) ) ) )", "choosing": "( ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUM ) ) )", "obj1": 0.9851851851851852, "obj2": 0.004893801787633787}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6701327660876752}, {"determining": "( ( ( ( ( DDR * FirstVNF_Mem_Server ) / Max( ( AMS * FirstVNF_Mem ),CRS ) ) + Min( ( PN - MDR ) ,( Min( MRS ,RRS ) + MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * Max( ( MLU * CS ),( MUR + MUR ) ) ) - Max( ( DS + MUC ),RCSe ) )", "obj1": 0.6518518518518519, "obj2": 0.2032496793723672}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.45925925925925926, "obj2": 0.4055632813582307}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * ( DDR * MRS ) ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( RCSe - DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5314269272346481}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.4648148148148148, "obj2": 0.3999603144699024}, {"determining": "Min( Const ,( Min( FirstVNF_CPU_Server ,ARS ) * ( ( ( BR / FirstVNF_Mem_Server ) + DDR ) + ( ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,MUC ) ),RCSe ) ,( MUR / RMSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10925925925925926, "obj2": 0.8259154178908814}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - ( ( CRS / FirstVNF_Mem ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( RMSe - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( MUC ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5753789983656102}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( ARS * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( RCSe - DS ) ,( Min( MUC ,RCSe ) + RCSe ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) ) )", "obj1": 0.7759259259259259, "obj2": 0.09811554294338122}, {"determining": "( ( Max( ACS,ARS ) * MDR ) + ( AMS * FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - CS ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( RRSe / ( MUM * CS ) ) + MUM ) / ( MUC * Max( Min( MUR ,( ( RCSe / ( MLU - CS ) ) / ( Max( MUR,DS ) + MUM ) ) ),Max( ( MUC / DS ),DS ) ) ) ) )", "obj1": 0.5148148148148148, "obj2": 0.35832029044696434}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6166666666666667, "obj2": 0.23613280586084076}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ( DDR * MRS ) / MDR ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( RMSe * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5078512780806221}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( Max( RRS,FirstVNF_RAM ) + AMS ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( RMSe - RMSe ) / ( MUR + RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( MUC,MUR ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.13333333333333333, "obj2": 0.7666366961096452}, {"determining": "( ( PN * MDR ) + ( ( ( FirstVNF_CPU + ( BR / MDR ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR + FirstVNF_RAM ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.003998128757007585}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.3888888888888889, "obj2": 0.4852285815656049}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,MUC ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.5166666666666667, "obj2": 0.3517700607138182}, {"determining": "( Max( ARS,CRS ) + ( ARS - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( ( RRSe + MLU ) + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.37592592592592594, "obj2": 0.4962769144372789}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( MRS * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Max( MUM,RRSe ) - RMSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4148148148148148, "obj2": 0.4594833044223691}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( Max( MUM,RRSe ) - RMSe ),MUR ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.4962962962962963, "obj2": 0.37895556601913083}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.4982714070730399}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6475617794093077}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RRSe - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.725925925925926, "obj2": 0.12200468436650229}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_RAM ) ) ),ACS ),( ( FirstVNF_RAM * Min( Const ,FirstVNF_Mem_Server ) ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),CS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.5370370370370371, "obj2": 0.34384124998786336}, {"determining": "( Min( FirstVNF_Mem ,Max( ( FirstVNF_Mem / ( CRS + FirstVNF_RAM ) ),Min( FirstVNF_CPU_Server ,MRS ) ) ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( FirstVNF_RAM_Server * ( BR - MRS ) ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.06271543400462325}, {"determining": "( ( ( ( BR / Min( Max( RRS,FirstVNF_Mem_Server ) ,( MRS * Min( BR ,FirstVNF_RAM_Server ) ) ) ) / ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( Max( MUM,RRSe ) - RMSe ) / ( MUR - DS ) ) ) - MUR ) ,( ( ( ( RMSe - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - ( ( MLU + DS ) - Min( RMSe ,MLU ) ) ) + Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.27749485654887157}, {"determining": "( ( ( ACS + ( FirstVNF_Mem / BR ) ) / Min( Min( RRS ,( CRS + FirstVNF_RAM ) ) ,FirstVNF_Mem_Server ) ) - ( ( Min( ( FirstVNF_Mem_Server - BR ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( Min( MUM ,( ( Min( ( ( MLU + MLU ) + MUR ) ,MUM ) - CS ) / Max( ( Max( ( DS / RMSe ),( RCSe * CS ) ) * MUC ),( ( RMSe + MUM ) - ( ( MUC - CS ) + ( MUM / RMSe ) ) ) ) ) ) - ( Max( CS,MUR ) - ( CS * RMSe ) ) ) - ( ( MUC / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}], "15": [{"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( ACS * ARS ) ) )", "choosing": "( ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( Max( FirstVNF_Mem,Max( MDR,( FirstVNF_RAM * ( ( ( ( MRS - RRS ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) ) ) - ( FirstVNF_CPU + AMS ) )", "choosing": "( MUR - ( Min( ( ( MUM * Max( ( ( RMSe - RMSe ) + ( MUC + RMSe ) ),( ( MUR + DS ) - MLU ) ) ) * Max( RRSe,Min( Max( RCSe,MUM ) ,( ( RMSe * RMSe ) / Max( MUM,RRSe ) ) ) ) ) ,MUC ) * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( AMS ,FirstVNF_CPU_Server ) ) * ( Min( Const ,FirstVNF_Mem_Server ) / ( CRS / FirstVNF_Mem ) ) ) ) ) + ( ( ACS - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + DS ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,RCSe ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,( ( CS / ( MLU * MUM ) ) / RCSe ) ) ) )", "obj1": 0.8722222222222222, "obj2": 0.055911035482335135}, {"determining": "( ( ( ( ( CRS * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * ( MUC / ( DS * RCSe ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.8333333333333334, "obj2": 0.07198795852817913}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / RRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU + ( Const + MRS ) ) * ( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Max( ( MUC * ( DS + MUM ) ),Min( ( RCSe / RMSe ) ,MUM ) ) )", "obj1": 0.9074074074074074, "obj2": 0.05431793218731586}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4888888888888889, "obj2": 0.3700609124379677}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ( BR + BR ) ),Min( ( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( MUM - MUM ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7001949341110095}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( Min( Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6796296296296296, "obj2": 0.16681543542801408}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - ( RRSe / MUR ) ),MUC ) )", "obj1": 0.47962962962962963, "obj2": 0.38558725412535216}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.16404564496909477}, {"determining": "( ( PN * ( AMS / FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU_Server ) ) )", "choosing": "( ( Max( RCSe,RRSe ) + RMSe ) - Min( ( ( ( MUC + RMSe ) * MUC ) + RRSe ) ,RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5364151054646559}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5259259259259259, "obj2": 0.32854679585781477}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) )", "obj1": 0.6685185185185185, "obj2": 0.17780263149717584}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6840324754913392}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.24909651757796938}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5, "obj2": 0.3591173626578637}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( Min( Min( ( MRS + Max( BR,FirstVNF_RAM_Server ) ) ,( Max( Min( ( AMS - ARS ) ,RRS ),ACS ) * ARS ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( DDR ,( BR * ACS ) ) ) + ( ( MRS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + Max( ACS,ARS ) ) * ( BR / Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "Min( Max( ( ( ( Max( RCSe,MUC ) * ( MUR * ( RMSe + MUM ) ) ) * DS ) - MLU ),Max( MUC,Min( Min( MLU ,( RMSe / RCSe ) ) ,MUC ) ) ) ,Max( Max( ( ( DS - ( RCSe / Min( CS ,Max( CS,MUC ) ) ) ) - ( ( RRSe + RRSe ) + ( ( ( DS / MUR ) / MUR ) / RCSe ) ) ),DS ),Max( ( RCSe * RMSe ),MLU ) ) )", "obj1": 0.9203703703703704, "obj2": 0.047483185675319416}, {"determining": "( ( ( ( BR / Min( Max( RRS,FirstVNF_Mem_Server ) ,( MRS * Min( BR ,FirstVNF_RAM_Server ) ) ) ) / ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( Max( MUM,RRSe ) - RMSe ) / ( MUR - DS ) ) ) - MUR ) ,( ( ( ( RMSe - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - ( ( MLU + DS ) - Min( RMSe ,MLU ) ) ) + Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.27749485654887157}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23964874617119367}, {"determining": "( ( PN * ( ( ( MRS * DDR ) * ( ( ( ( MRS - RRS ) * FirstVNF_RAM_Server ) / PN ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / ( MRS + ACS ) ) ) ) ) + ( ( ( ( ( AMS - MDR ) / FirstVNF_Mem ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + Max( ( PN / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( ( MUC * MLU ) - Max( RMSe,( CS + MUC ) ) ),MUR ) - ( RRSe * DS ) ) - Max( RRSe,( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Min( ( ( RMSe - RMSe ) + ( MUC + RMSe ) ) ,( ( MUR + DS ) * MLU ) ) ) ) + ( ( CS - Max( ( DS - RMSe ),MUR ) ) - RCSe ) ) / RMSe ) )", "obj1": 0.27037037037037037, "obj2": 0.6101101998598194}, {"determining": "( ( PN * ( PN + ( Min( AMS ,FirstVNF_CPU_Server ) / DDR ) ) ) + ( ARS - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) ,Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( RRSe + MUR ),( ( DS + DS ) - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5618421327586776}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6259259259259259, "obj2": 0.21979645451752022}, {"determining": "( ( Max( ARS,ACS ) * MDR ) + ( ( MDR + FirstVNF_CPU ) * ARS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7469078504013423}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( DDR * MRS ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.44814814814814813, "obj2": 0.43213055874096346}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( ACS,( PN / FirstVNF_RAM ) ),Max( ( ( MDR + ( AMS - MRS ) ) * FirstVNF_CPU_Server ),( AMS - PN ) ) ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU - DS ),( MLU - RMSe ) ) * ( RMSe * ( Min( ( MUR / RMSe ) ,Min( ( ( ( RCSe + CS ) + ( RRSe + DS ) ) * Max( CS,MUC ) ) ,RCSe ) ) * MLU ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6752257719278503}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / ( CRS * FirstVNF_Mem ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) + RRSe ) ) )", "obj1": 0.5462962962962963, "obj2": 0.3127717158851259}, {"determining": "( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.2777777777777778, "obj2": 0.5970642481238816}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( Min( FirstVNF_RAM ,Max( Const,MRS ) ) + CRS ) + ( ( PN - MDR ) + ( PN - ACS ) ) ) ) + ( ( MDR - PN ) / ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - DS ) ,Max( RCSe,MUR ) ) * ( RRSe + DS ) ) / ( Max( CS,CS ) + ( CS + MUR ) ) )", "obj1": 0.55, "obj2": 0.29690648655797297}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.2792426141499402}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN - MDR ) + ( PN - ( Const - ( FirstVNF_RAM / ( FirstVNF_Mem_Server / FirstVNF_CPU ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( RMSe + Max( ( ( ( MUC + RRSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.014649183409019724}, {"determining": "( ( ( ( ( ARS - ( MDR + FirstVNF_CPU ) ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) ) ) )", "obj1": 0.4537037037037037, "obj2": 0.42437615047044214}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ACS ,Max( ( Min( RRS ,RRS ) - ACS ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( ( Max( RCSe,RRSe ) - RMSe ),MUR ) ) - Max( ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / Min( MUM ,CS ) ) + ( ( ( ( MLU - RCSe ) / RMSe ) + Max( Min( ( RRSe + CS ) ,( RRSe * RCSe ) ),DS ) ) * RMSe ) ) / MLU ) )", "obj1": 0.17962962962962964, "obj2": 0.7201765084717286}, {"determining": "( ( ARS * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( ( ( MDR * FirstVNF_RAM ) - FirstVNF_Mem_Server ) + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( Max( RCSe,MLU ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.5184338504555056}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.3888888888888889, "obj2": 0.4852285815656049}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,Max( MUM,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( RMSe / DS ) - MUM ) ) ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.1939311598615759}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( CS * MUR ) - Max( ( MUC / ( DS * RMSe ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.13041958674552634}, {"determining": "( Min( ( FirstVNF_RAM_Server - FirstVNF_CPU ) ,FirstVNF_RAM_Server ) + ( ( MDR + FirstVNF_CPU ) - ( Max( Max( Max( FirstVNF_CPU_Server,( AMS + ( FirstVNF_RAM * FirstVNF_RAM ) ) ),ACS ),( ( ( FirstVNF_Mem_Server - CRS ) * Max( FirstVNF_RAM_Server,ARS ) ) / MDR ) ) - ( FirstVNF_CPU_Server - Max( FirstVNF_CPU,Const ) ) ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( DS * Min( ( RCSe / RCSe ) ,( ( RCSe - ( ( CS + ( MUC + RCSe ) ) - MUM ) ) + RRSe ) ) ) )", "obj1": 0.4740740740740741, "obj2": 0.3964956425452218}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( ( ( ( ( ( MDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ) / FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),MLU ) - ( CS * RMSe ) ) - Min( RRSe ,RCSe ) ) - ( ( ( ( MUM * CS ) / DS ) + MUM ) / RMSe ) )", "obj1": 0.7425925925925926, "obj2": 0.11349948391098172}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.43148148148148147, "obj2": 0.436805976877463}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( RRSe / MUR ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.524074074074074, "obj2": 0.3493440054798799}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.14629629629629629, "obj2": 0.7539641969778645}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( Min( MDR ,RRS ) + ( RRS / FirstVNF_RAM ) ) / ARS ) - ( BR * ACS ) ) ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - ( Min( MUC ,DS ) + ( DS + ( CS + RMSe ) ) ) ) - ( ( ( DS / ( MUM * Max( RCSe,Min( ( DS - MUR ) ,( MUC / CS ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4, "obj2": 0.47529577632605113}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( FirstVNF_RAM_Server * Min( AMS ,DDR ) ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe - Min( CS ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.9314814814814815, "obj2": 0.04071314770370003}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * Max( AMS,FirstVNF_RAM ) ) / ARS ) - ( ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR / MUM ) + ( MUR + MUM ) ) + DS ) - DS ) ,Min( RCSe ,DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5274988719941759}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ( MRS - RRS ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( RMSe - RMSe ) + ( MUC + RMSe ) ),( ( MUR + DS ) - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.25, "obj2": 0.6312813961466208}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( MUC - MUM ) ) ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.23263462184948794}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,FirstVNF_CPU_Server ) ) + ( ( PN - ( ( CRS / FirstVNF_Mem ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,Min( FirstVNF_CPU ,DDR ) ) ) ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( FirstVNF_RAM * ( ( MRS - ( AMS / BR ) ) * Const ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + Min( DS ,MUR ) ) ) - DS ) * ( RMSe - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( ( MUR + MUC ) + MUC ) * Max( ( RRSe / CS ),( MLU * RRSe ) ) ) - RMSe ),MUC ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6461142598263708}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( ( BR - MRS ),MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( MUC + CS ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6261689186516273}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * ( DDR * MRS ) ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.26296296296296295, "obj2": 0.6185915367218461}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6351851851851852, "obj2": 0.213615157857809}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ( MRS - RRS ) * FirstVNF_RAM_Server ) / PN ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( ( ( AMS - MDR ) / FirstVNF_Mem ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + Max( ( PN / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.45740740740740743, "obj2": 0.41080725929601425}, {"determining": "( ( PN * ( ( ( ( ( FirstVNF_Mem * CRS ) / ( ( PN * FirstVNF_CPU_Server ) * FirstVNF_CPU ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( Min( MUR ,Max( RMSe,( MUM / ( CS + MUC ) ) ) ) * MLU ) * DS ) - MUM ) * ( RMSe * Min( ( ( MUM - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + Max( CS,MUM ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5888699166958756}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,MUC ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.5148148148148148, "obj2": 0.3565920221966304}, {"determining": "( Min( RRS ,FirstVNF_CPU ) + ( ARS - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( MUM ,DS ) * ( MLU + RCSe ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) * MUM ) / RMSe ) )", "obj1": 0.387037037037037, "obj2": 0.4923124916232211}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( MUM - RCSe ) ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.198151860810925}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.42592592592592593, "obj2": 0.45522789408646147}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Max( ( MUC * ( DS + MUM ) ),Min( ( RCSe / RMSe ) ,MUM ) ) )", "obj1": 0.9407407407407408, "obj2": 0.030106156511249794}, {"determining": "( Max( ( ( RRS + FirstVNF_Mem_Server ) - FirstVNF_CPU_Server ),Min( CRS ,MRS ) ) + ( ARS - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( Min( Min( RCSe ,MUR ) ,( MUC * ( DS + ( CS * MUR ) ) ) ) * CS ) / ( RRSe + MUR ) ) ) - ( ( DS / MLU ) / RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.5761658456793008}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( RCSe - ( RRSe + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.15104700404032773}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( Max( RRS,FirstVNF_RAM ) + AMS ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( RMSe - RMSe ) / ( MUR + RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( MUC,MUR ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.13333333333333333, "obj2": 0.7666366961096452}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( ( BR / MDR ),( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ) * FirstVNF_CPU ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( CS * MUR ) - ( MUR + RRSe ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10974083822593796}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / PN ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5388888888888889, "obj2": 0.3235255077397312}, {"determining": "( ( ( ( ( DDR * FirstVNF_Mem_Server ) / Max( ( AMS * FirstVNF_Mem ),CRS ) ) + Min( ( PN - MDR ) ,( Min( MRS ,RRS ) + MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( RMSe / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * Max( ( MLU * CS ),( MUR + MUR ) ) ) - Max( ( DS + MUC ),RCSe ) )", "obj1": 0.6518518518518519, "obj2": 0.2032496793723672}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7925925925925926, "obj2": 0.08555360780874188}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( ( DS / ( MUM * CS ) ) + MUM ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5964598667855916}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( DDR * ACS ) / ( ( DDR * MRS ) / Min( FirstVNF_Mem ,CRS ) ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + ( MDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - ( CS * ( Min( DS ,RCSe ) * Max( MUC,MUR ) ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( MUC / DS ) ,( RCSe - DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.36666666666666664, "obj2": 0.5102624887349949}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - Max( Const,( FirstVNF_CPU * ( Max( ( ( ACS + ARS ) + MDR ),FirstVNF_CPU ) + BR ) ) ) ) )", "choosing": "Min( ( ( MUM / CS ) / CS ) ,Max( ( ( ( RMSe + ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.1439077409657111}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( ( AMS - MDR ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.651580046498581}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.29086515355121095}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.8166666666666667, "obj2": 0.07447623820533372}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( ( ( MDR + FirstVNF_CPU ) - MRS ),MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( MUC / DS ) + CS ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7574074074074074, "obj2": 0.105792754307566}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - ( ( CRS / FirstVNF_Mem ) / Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / Max( RRSe,RRSe ) ) ) - ( DS + RMSe ) ) - DS ) * ( RMSe - RCSe ) ) - ( CS - Min( ( ( RCSe / ( ( MUR + Min( MUC ,MUR ) ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( MUM,MUC ) ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5753789983656102}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( ( MUM * CS ) * ( DS + MUM ) ) ) ) / ( RMSe - MUR ) ) ) - ( MUR * ( ( RRSe - MUC ) + DS ) ) ) ,Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) )", "obj1": 0.9555555555555556, "obj2": 0.02479602653539114}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( ARS - ( MDR + FirstVNF_CPU ) ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( ( Max( MUM,RRSe ) - RMSe ),MUR ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( ( RRSe / RCSe ) + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.7148148148148148, "obj2": 0.14556179607738132}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( RCSe / ( ( MUR + Max( CS,( ( MUM * CS ) * ( DS + MUM ) ) ) ) / ( RMSe - MUR ) ) ) - ( MUR * ( ( RRSe - MUC ) + DS ) ) ) ,Max( ( ( CS + MUM ) - Max( Min( MUM ,DS ),CS ) ),MUC ) )", "obj1": 0.95, "obj2": 0.026989990129504832}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( MLU * CS ),( RRSe + RRSe ) ) ) - ( Min( RRSe ,RRSe ) / ( RMSe * MUM ) ) )", "obj1": 0.8037037037037037, "obj2": 0.07940033669556329}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - AMS ) * MDR ) / ( Min( ( FirstVNF_Mem_Server - ARS ) ,RRS ) - ( ACS * ARS ) ) ) )", "choosing": "( Max( ( MUR / ( RCSe / MLU ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.29086515355121095}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RRSe - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7314814814814815, "obj2": 0.11890556908276151}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( Max( ( MUR / ( DS * RCSe ) ),MUR ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.9703703703703703, "obj2": 0.008534835941600446}, {"determining": "( Max( ARS,CRS ) + ( ARS - Min( MDR ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( ( RRSe + MLU ) + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.37592592592592594, "obj2": 0.4962769144372789}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.42777777777777776, "obj2": 0.4407620575424575}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.46296296296296297, "obj2": 0.39827399728499213}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Min( FirstVNF_CPU_Server ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5425925925925926, "obj2": 0.32263485917797186}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - AMS ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6701327660876752}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.4982714070730399}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe / MUR ) - ( CS * RMSe ) ) - Min( MUR ,( MUM + MUC ) ) ) - Min( RCSe ,Min( RCSe ,RCSe ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7608837529369045}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.6462962962962963, "obj2": 0.20738676125238695}], "16": [{"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( MRS - Max( ( FirstVNF_CPU * ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ),Const ) ) )", "choosing": "( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( MUC - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( ACS * ARS ) ) )", "choosing": "( ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( AMS ,FirstVNF_CPU_Server ) ) * ( Min( Const ,FirstVNF_Mem_Server ) / ( CRS / FirstVNF_Mem ) ) ) ) ) + ( ( ACS - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + DS ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,RCSe ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,( ( CS / ( MLU * MUM ) ) / RCSe ) ) ) )", "obj1": 0.8722222222222222, "obj2": 0.055911035482335135}, {"determining": "( ( ( ( ( CRS * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * ( MUC / ( DS * RCSe ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( CS + RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8333333333333334, "obj2": 0.07194005164522817}, {"determining": "( Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( FirstVNF_RAM_Server * Min( ARS ,( FirstVNF_RAM / RRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( ( FirstVNF_CPU + ( Const + MRS ) ) * ( CRS / FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Max( ( MUC * ( DS + MUM ) ),Min( ( RCSe / RMSe ) ,MUM ) ) )", "obj1": 0.9074074074074074, "obj2": 0.05431793218731586}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( ARS - ( MDR + ( BR - ( MDR + AMS ) ) ) ) + Min( MDR ,RRS ) )", "choosing": "( Min( Min( RCSe ,DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( Max( MUC,MUR ) / Min( CS ,MUM ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6518518518518519, "obj2": 0.18780997282946396}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ( MRS - RRS ) * FirstVNF_RAM_Server ) / PN ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( ( ( AMS - MDR ) / FirstVNF_Mem ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + Max( ( PN / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.45740740740740743, "obj2": 0.41080725929601425}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( ( ( ( ( DDR * MRS ) / Min( FirstVNF_RAM ,( ACS * Min( CRS ,Min( FirstVNF_CPU_Server ,Const ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + CRS ) ) * PN ) + ( FirstVNF_Mem - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( RCSe / MUM ) - MUR ) ) - MUR ) ,Max( ( ( ( RCSe - ( ( MUC / RRSe ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - ( RRSe / MUR ) ),MUC ) )", "obj1": 0.47962962962962963, "obj2": 0.38544045084556}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( MRS,BR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),( ( ( ( RMSe - DS ) / RRSe ) / ( MUM + MUR ) ) + DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.4166666666666667, "obj2": 0.4610722347945589}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5351472327256387}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) + ARS ) - ( ( FirstVNF_Mem_Server / AMS ) * ( ( MDR + RRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( MDR + FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,MRS ) ) ) )", "choosing": "( ( RCSe - DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + Min( Min( Min( RMSe ,( Max( RRSe,RRSe ) / ( MUR - RMSe ) ) ) ,Min( RCSe ,DS ) ) ,CS ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.31091726301406364}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * Max( AMS,FirstVNF_RAM ) ) / ARS ) - ( ( ARS * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR / MUM ) + ( MUR + MUM ) ) + DS ) - DS ) ,Min( RCSe ,DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5274988719941759}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ( MRS - RRS ) * FirstVNF_RAM_Server ) / PN ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( ( ( AMS - MDR ) / FirstVNF_Mem ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + Max( ( PN / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4388888888888889, "obj2": 0.4222619315785699}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6840324754913392}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( RRSe / MUR ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.524074074074074, "obj2": 0.3493440054798799}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5, "obj2": 0.3591173626578637}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( FirstVNF_RAM_Server * Min( AMS ,DDR ) ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe - Min( CS ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.9314814814814815, "obj2": 0.04071314770370003}, {"determining": "( Min( Min( ( MRS + Max( BR,FirstVNF_RAM_Server ) ) ,( Max( Min( ( AMS - ARS ) ,RRS ),ACS ) * ARS ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( DDR ,( BR * ACS ) ) ) + ( ( MRS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + Max( ACS,ARS ) ) * ( BR / Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "Min( Max( ( ( ( Max( RCSe,MUC ) * ( MUR * ( RMSe + MUM ) ) ) * DS ) - MLU ),Max( MUC,Min( Min( MLU ,( RMSe / RCSe ) ) ,MUC ) ) ) ,Max( Max( ( ( DS - ( RCSe / Min( CS ,Max( CS,MUC ) ) ) ) - ( ( RRSe + RRSe ) + ( ( ( DS / MUR ) / MUR ) / RCSe ) ) ),DS ),Max( ( RCSe * RMSe ),MLU ) ) )", "obj1": 0.9203703703703704, "obj2": 0.047483185675319416}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5259259259259259, "obj2": 0.32854679585781477}, {"determining": "( ( PN * ( ( ( MRS * DDR ) * ( ( ( ( MRS - RRS ) * FirstVNF_RAM_Server ) / PN ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / ( MRS + ACS ) ) ) ) ) + ( ( ( ( ( AMS - MDR ) / FirstVNF_Mem ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + Max( ( PN / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( ( MUC * MLU ) - Max( RMSe,( CS + MUC ) ) ),MUR ) - ( RRSe * DS ) ) - Max( RRSe,( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Min( ( ( RMSe - RMSe ) + ( MUC + RMSe ) ) ,( ( MUR + DS ) * MLU ) ) ) ) + ( ( CS - Max( ( DS - RMSe ),MUR ) ) - RCSe ) ) / RMSe ) )", "obj1": 0.27037037037037037, "obj2": 0.6101101998598194}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.16404564496909477}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( ( DS * MUC ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * Min( DS ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.7851851851851852, "obj2": 0.08921554879886692}, {"determining": "( ( PN * ( PN + ( ( ( ( ( RRS / FirstVNF_RAM ) - ( MRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( CS * Max( ( RRSe + MUR ),( ( CS + MLU ) - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.29444444444444445, "obj2": 0.5789354053589134}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.5891983407699237}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( ( AMS - MDR ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.651580046498581}, {"determining": "( Max( ( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( FirstVNF_CPU + FirstVNF_Mem ) ),Min( FirstVNF_CPU_Server ,MRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Min( ( MUC * ( DS + MUM ) ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / RMSe ) )", "obj1": 0.2777777777777778, "obj2": 0.5970642481238816}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( ACS,( PN / FirstVNF_RAM ) ),Max( ( ( MDR + ( AMS - MRS ) ) * FirstVNF_CPU_Server ),( AMS - PN ) ) ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU - DS ),( MLU - RMSe ) ) * ( RMSe * ( Min( ( MUR / RMSe ) ,Min( ( ( ( RCSe + CS ) + ( RRSe + DS ) ) * Max( CS,MUC ) ) ,RCSe ) ) * MLU ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6752257719278503}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,MUC ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.5148148148148148, "obj2": 0.3565920221966304}, {"determining": "( ( PN * Min( DDR ,( MRS * DDR ) ) ) + ( ( MDR + FirstVNF_CPU ) - DDR ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( MUM / MUM ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5725374542284503}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5814814814814815, "obj2": 0.26873841648969726}, {"determining": "( ( PN * MDR ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.42592592592592593, "obj2": 0.45522789408646147}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * ( DDR * MRS ) ) / ( ( PN * PN ) - ACS ) ) - ( Min( Min( PN ,Const ) ,Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ACS * CRS ) + Min( BR ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( FirstVNF_CPU + MDR ) ) )", "choosing": "( ( Min( ( ( ( ( ( RMSe - MUR ) + MUR ) + ( MUR + MUM ) ) + DS ) / DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( ( MLU + ( MLU + DS ) ) ,RRSe ) + RMSe ) )", "obj1": 0.24074074074074073, "obj2": 0.644029914353674}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.6462962962962963, "obj2": 0.20738676125238695}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( RCSe / MUR ),( MUC + DS ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.5370370370370371, "obj2": 0.32590142777897596}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( Max( RRS,FirstVNF_RAM ) + AMS ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( RMSe - RMSe ) / ( MUR + RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( MUC,MUR ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.13333333333333333, "obj2": 0.7666366961096452}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.3888888888888889, "obj2": 0.4852285815656049}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ACS ,Max( ( Min( RRS ,RRS ) - ACS ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( ( Max( RCSe,RRSe ) - RMSe ),MUR ) ) - Max( ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / Min( MUM ,CS ) ) + ( ( ( ( MLU - RCSe ) / RMSe ) + Max( Min( ( RRSe + CS ) ,( RRSe * RCSe ) ),DS ) ) * RMSe ) ) / MLU ) )", "obj1": 0.17962962962962964, "obj2": 0.7201765084717286}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( DDR * ACS ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ARS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( CRS ,BR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( MUC - DS ) ,( MUR / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3574074074074074, "obj2": 0.5177647041970506}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU ,DDR ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * ( MUC / DS ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3277777777777778, "obj2": 0.5464304638356307}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - ( MDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( CS + RRSe ) + ( CS + RRSe ) ) ) ) )", "obj1": 0.22962962962962963, "obj2": 0.6668544134637953}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( Max( ( MUR / ( DS * RCSe ) ),MUR ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.9703703703703703, "obj2": 0.008534835941600446}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.4685185185185185, "obj2": 0.39544548735081536}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ( BR + BR ) ),Min( ( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( MUM - MUM ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7001949341110095}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( Max( ( ( AMS - ARS ) - RRS ),ACS ) * ARS ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,MUC ) - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5962962962962963, "obj2": 0.24860133754215777}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4888888888888889, "obj2": 0.3700609124379677}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RRSe - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6666666666666666, "obj2": 0.17937536358778527}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe / MUR ) - ( CS * RMSe ) ) - Min( MUR ,( MUM + MUC ) ) ) - Min( RCSe ,Min( RCSe ,RCSe ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7608837529369045}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Max( ( MUC * ( DS + MUM ) ),Min( ( RCSe / RMSe ) ,MUM ) ) )", "obj1": 0.9407407407407408, "obj2": 0.030106156511249794}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( MDR + FirstVNF_CPU_Server ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,MUC ) ),RRSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11481481481481481, "obj2": 0.823283539870336}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.2905248832267162}, {"determining": "( ( PN * ( PN + ( Min( AMS ,FirstVNF_CPU_Server ) / DDR ) ) ) + ( ARS - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) ,Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( RRSe + MUR ),( ( DS + DS ) - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5618421327586776}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( MRS ,FirstVNF_CPU_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.37407407407407406, "obj2": 0.4975473320136133}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( MLU * CS ),( RRSe + RRSe ) ) ) - ( Min( RRSe ,RRSe ) / ( RMSe * MUM ) ) )", "obj1": 0.8037037037037037, "obj2": 0.07940033669556329}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) / Min( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_CPU ) ,( MDR - PN ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( MUC * MUR ) + Max( ( ( DS + Min( MLU ,MLU ) ) / ( RMSe / MUM ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12945944767069278}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ARS ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + RMSe ) )", "obj1": 0.562962962962963, "obj2": 0.2859896453979755}, {"determining": "( ( FirstVNF_RAM + FirstVNF_CPU_Server ) + ( ARS - ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,MDR ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( CS * RMSe ) - Max( ( ( Max( DS,MUC ) + ( Min( MLU ,( DS * MLU ) ) * ( MUR + ( MUM / RMSe ) ) ) ) * DS ),MUR ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10915560914391681}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( FirstVNF_Mem - ( MDR + ( BR - MDR ) ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + ( DS - MUR ) ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / RCSe ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.4351851851851852, "obj2": 0.4291987092641966}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( DDR * ACS ) / ( ( DDR * MRS ) / Min( FirstVNF_Mem ,CRS ) ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + ( MDR + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUR - ( CS * ( Min( DS ,RCSe ) * Max( MUC,MUR ) ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( MUC / DS ) ,( RCSe - DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.36666666666666664, "obj2": 0.5102624887349949}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Min( ( RCSe - DS ) ,( MUC / DS ) ) ) - ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) )", "obj1": 0.6759259259259259, "obj2": 0.17449336572020632}, {"determining": "( ( ( ( PN * Max( BR,Max( ( BR + ( FirstVNF_RAM_Server + ACS ) ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( MDR - PN ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( Min( DS ,( MUR + ( Min( Min( ( MUR / MLU ) ,RCSe ) ,( Max( MLU,MUM ) - Max( MUM,RCSe ) ) ) + MUR ) ) ) * DS ) )", "obj1": 0.55, "obj2": 0.29690648655797297}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ( DDR / FirstVNF_RAM ) + ( FirstVNF_RAM / RRS ) ) / ARS ) - ( BR * ACS ) ) ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( ( RRSe - MUC ),MUR ) - ( CS * MUC ) ) - Max( ( CS * MLU ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( DS - MUR ) ,( MUC / CS ) ),RCSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.4779715062576743}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( ( DS * MUC ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * Min( DS ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.6833333333333333, "obj2": 0.1652705776105953}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6261689186516273}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - FirstVNF_CPU_Server ) + ( ( AMS - MDR ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - RMSe ) ,( MUC / DS ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31296296296296294, "obj2": 0.5599679394423541}, {"determining": "( ( ( ( ( PN - MDR ) + ( PN - PN ) ) + ( ( DDR * MRS ) / ( ( ARS - RRS ) / FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS / ( RRSe - RMSe ) ) ) / ( ( RMSe + RRSe ) + ( CS + ( ( MUR * MUR ) / ( Max( DS,MUR ) * DS ) ) ) ) )", "obj1": 0.6203703703703703, "obj2": 0.2280900606598742}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6111111111111112, "obj2": 0.23964874617119367}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( ( BR - MRS ),MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( MUC + CS ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4888888888888889, "obj2": 0.3700609124379677}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - Max( Const,( FirstVNF_CPU * ( Max( ( ( ACS + ARS ) + MDR ),FirstVNF_CPU ) + BR ) ) ) ) )", "choosing": "Min( ( ( MUM / CS ) / CS ) ,Max( ( ( ( RMSe + ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.1439077409657111}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( Max( DDR,RRS ) + ( FirstVNF_RAM / RRS ) ) / ARS ) - ( BR * ACS ) ) ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - Max( ( CS * MLU ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( DS - MUR ) ,( MUC / CS ) ),RCSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4, "obj2": 0.47529577632605113}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.46296296296296297, "obj2": 0.39827399728499213}, {"determining": "( ( Max( ARS,PN ) * MDR ) + ( Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) + MDR ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( Max( Max( Max( MLU,Max( MUM,MUC ) ),MLU ),MUC ) / ( ( ( ( MUC * DS ) + ( RCSe * DS ) ) + ( CS / RRSe ) ) / MLU ) ) ) - Max( ( MLU * MUR ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7519097872813434}, {"determining": "( ( ( ( BR / Min( Max( RRS,FirstVNF_Mem_Server ) ,( MRS * Min( BR ,FirstVNF_RAM_Server ) ) ) ) / ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( Max( MUM,RRSe ) - RMSe ) / ( MUR - DS ) ) ) - MUR ) ,( ( ( ( RMSe - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - ( ( MLU + DS ) - Min( RMSe ,MLU ) ) ) + Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.27749485654887157}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.812962962962963, "obj2": 0.07540662694293535}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( Min( FirstVNF_RAM ,Max( Const,MRS ) ) + CRS ) + ( ( PN - MDR ) + ( PN - ACS ) ) ) ) + ( ( MDR - PN ) / ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - DS ) ,Max( RCSe,MUR ) ) * ( RRSe + DS ) ) / ( Max( CS,CS ) + ( CS + MUR ) ) )", "obj1": 0.55, "obj2": 0.29690648655797297}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( ( ( MDR + FirstVNF_CPU ) - MRS ),MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( MUC / DS ) + CS ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7574074074074074, "obj2": 0.105792754307566}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7981481481481482, "obj2": 0.08326214162363457}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.8166666666666667, "obj2": 0.07447623820533372}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.42777777777777776, "obj2": 0.4407620575424575}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( Min( MDR ,RRS ) + ( RRS / FirstVNF_RAM ) ) / ARS ) - ( BR * ACS ) ) ) + ( FirstVNF_RAM * FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - ( Min( MUC ,DS ) + ( DS + ( CS + RMSe ) ) ) ) - ( ( ( DS / ( MUM * Max( RCSe,Min( ( DS - MUR ) ,( MUC / CS ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4, "obj2": 0.47529577632605113}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / PN ),Min( Min( FirstVNF_CPU_Server ,ARS ) ,( ( MRS * Min( ARS ,( ( ARS / AMS ) * FirstVNF_Mem ) ) ) + ( CRS + ( ARS + Const ) ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + RRSe ) * Max( ( ( RCSe + MUC ) + ( ( RRSe - RRSe ) * DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7001949341110095}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,FirstVNF_Mem ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( Const + FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( Min( MRS ,RRS ) + MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( ( MLU * CS ) / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( ( MLU * CS ) + ( RMSe - MUC ) ) ) - Max( ( DS + MUC ),RCSe ) )", "obj1": 0.7407407407407407, "obj2": 0.11425661940775864}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.49201942901535956}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.14629629629629629, "obj2": 0.7539641969778645}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6298986550728412}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( ( ( ( ( ( MDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ) / FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( ( MLU * RCSe ),MLU ) - ( CS * RMSe ) ) - Min( RRSe ,RCSe ) ) - ( ( ( ( MUM * CS ) / DS ) + MUM ) / RMSe ) )", "obj1": 0.7425925925925926, "obj2": 0.11349948391098172}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,ACS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( ( BR + FirstVNF_RAM ) - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - RCSe ) ,( ( DS / ( ( ( CS + MUC ) / DS ) + RMSe ) ) + MUM ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5703703703703704, "obj2": 0.28104384725872966}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - AMS ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( ( BR - MRS ),MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( MUC + CS ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( ( MUR + RRSe ) - ( ( RCSe - ( RRSe + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.15104700404032773}], "17": [{"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( ACS * ARS ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * ( MUC / ( DS * RCSe ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( CS + RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( MRS - Max( ( FirstVNF_CPU * ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ),Const ) ) )", "choosing": "( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) - ( CS - Min( ( ( ( Max( RRSe,RCSe ) / ( RMSe / MUC ) ) / ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RCSe ) ) ) - MUR ) ,Max( MUM,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( MUC - MUM ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( CRS + FirstVNF_Mem_Server ) ) ) + ( ( PN - MRS ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,DS ) ),RRSe ) ,( MUR / RCSe ) ) * Max( MUM,MLU ) ),( MUC + DS ) ) ) + Max( MUR,( MUR / ( DS * RCSe ) ) ) )", "obj1": 0.4537037037037037, "obj2": 0.3828004977285236}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ( MRS - RRS ) * FirstVNF_RAM_Server ) / PN ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / FirstVNF_CPU_Server ) ) ) ) + ( ( ( ( ( AMS - MDR ) / FirstVNF_Mem ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + Max( ( PN / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4388888888888889, "obj2": 0.4222619315785699}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4222222222222222, "obj2": 0.42818829408568254}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( DDR * ACS ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ARS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( CRS ,BR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( MUC - DS ) ,( MUR / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3574074074074074, "obj2": 0.5177647041970506}, {"determining": "( Min( Min( ( MRS + Max( BR,FirstVNF_RAM_Server ) ) ,( Max( Min( ( AMS - ARS ) ,RRS ),ACS ) * ARS ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( DDR ,( BR * ACS ) ) ) + ( ( MRS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + Max( ACS,ARS ) ) * ( BR / Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "Min( Max( ( ( ( Max( RCSe,MUC ) * ( MUR * ( RMSe + MUM ) ) ) * DS ) - MLU ),Max( MUC,Min( Min( MLU ,( RMSe / RCSe ) ) ,MUC ) ) ) ,Max( Max( ( ( DS - ( RCSe / Min( CS ,Max( CS,MUC ) ) ) ) - ( ( RRSe + RRSe ) + ( ( ( DS / MUR ) / MUR ) / RCSe ) ) ),DS ),Max( ( RCSe * RMSe ),MLU ) ) )", "obj1": 0.9203703703703704, "obj2": 0.047483185675319416}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "Min( ( MUR / ( DS * RCSe ) ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,RCSe ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.8870370370370371, "obj2": 0.05324022387799159}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3648148148148148, "obj2": 0.4937016894813517}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( MRS,BR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),( ( ( ( RMSe - DS ) / RRSe ) / ( MUM + MUR ) ) + DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.4166666666666667, "obj2": 0.4610722347945589}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( ACS,( PN / FirstVNF_RAM ) ),Max( ( ( MDR + ( AMS - MRS ) ) * FirstVNF_CPU_Server ),( AMS - PN ) ) ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU - DS ),( MLU - RMSe ) ) * ( RMSe * ( Min( ( MUR / RMSe ) ,Min( ( ( ( RCSe + CS ) + ( RRSe + DS ) ) * Max( CS,MUC ) ) ,RCSe ) ) * MLU ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6752257719278503}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.26481481481481484, "obj2": 0.6008932545414347}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - ( MDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( CS + RRSe ) + ( CS + RRSe ) ) ) ) )", "obj1": 0.22962962962962963, "obj2": 0.6668544134637953}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( FirstVNF_RAM_Server * ( PN * MDR ) ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe - ( RMSe - ( MUC + RRSe ) ) ) ,Max( MUM,MUC ) )", "obj1": 0.9629629629629629, "obj2": 0.021428040829836313}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( FirstVNF_CPU - ( MDR * FirstVNF_RAM ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.6261689186516273}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( AMS ,FirstVNF_CPU_Server ) ) * ( Min( Const ,FirstVNF_Mem_Server ) / ( CRS / FirstVNF_Mem ) ) ) ) ) + ( ( ACS - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + DS ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,RCSe ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,( ( CS / ( MLU * MUM ) ) / RCSe ) ) ) )", "obj1": 0.8722222222222222, "obj2": 0.055911035482335135}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4888888888888889, "obj2": 0.3700609124379677}, {"determining": "( ( ( ( ( CRS * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( ACS * ARS ) ) ) + ( RRS * Max( Max( ( ( ( ( DDR * FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * ( MUC / ( DS * RCSe ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( CS + RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8333333333333334, "obj2": 0.07194005164522817}, {"determining": "( ( ( ( Min( DDR ,MRS ) / ( ( ( DDR * ACS ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( ARS - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) / ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Const * AMS ) )", "choosing": "( ( ( ( Max( RMSe,MUC ) - ( DS * ( ( RCSe - Max( RMSe,RMSe ) ) - ( CS + Min( MUC ,RCSe ) ) ) ) ) - Max( Max( MLU,Min( ( CS + MUC ) ,DS ) ),RMSe ) ) / ( ( RMSe + ( ( MUR - ( Max( RRSe,CS ) - MUC ) ) + Max( Max( RRSe,( RRSe - MUR ) ),MUC ) ) ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,RRSe ) + RMSe ) )", "obj1": 0.6314814814814815, "obj2": 0.21631250937576751}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.6074074074074074, "obj2": 0.2376433678088408}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.5891983407699237}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.16404564496909477}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) + ARS ) - ( ( FirstVNF_Mem_Server / AMS ) * ( ( MDR + RRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( MDR + FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,MRS ) ) ) )", "choosing": "( ( RCSe - DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + Min( Min( Min( RMSe ,( Max( RRSe,RRSe ) / ( MUR - RMSe ) ) ) ,Min( RCSe ,DS ) ) ,CS ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.31091726301406364}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( ( AMS - MDR ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.651580046498581}, {"determining": "( ( PN * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.47038998393295556}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( ( DS * MUC ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * Min( DS ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09137666291843877}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3351851851851852, "obj2": 0.5242330881779476}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6444444444444445, "obj2": 0.20526675872536645}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( ( CS * RMSe ) + RRSe ) ) )", "obj1": 0.5685185185185185, "obj2": 0.2748938547376079}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5351472327256387}, {"determining": "( Min( FirstVNF_CPU ,ACS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( ( MUC - ( RRSe * ( Min( MLU ,RRSe ) - Max( Max( DS,MLU ),DS ) ) ) ) ,( ( RCSe - Max( ( MUR + Min( MUM ,MUR ) ),( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5665075785831442}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * ( DDR * MRS ) ) / ( ( PN * PN ) - ACS ) ) - ( Min( Min( PN ,Const ) ,Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ACS * CRS ) + Min( BR ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( FirstVNF_CPU + MDR ) ) )", "choosing": "( ( Min( ( ( ( ( ( RMSe - MUR ) + MUR ) + ( MUR + MUM ) ) + DS ) / DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( ( MLU + ( MLU + DS ) ) ,RRSe ) + RMSe ) )", "obj1": 0.24074074074074073, "obj2": 0.644029914353674}, {"determining": "( ( ( ( ( PN - MDR ) + ( PN - PN ) ) + ( ( DDR * MRS ) / ( ( ARS - RRS ) / FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( FirstVNF_RAM_Server - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS / ( RRSe - RMSe ) ) ) / ( ( RMSe + RRSe ) + ( CS + ( ( MUR * MUR ) / ( Max( DS,MUR ) * DS ) ) ) ) )", "obj1": 0.6203703703703703, "obj2": 0.2280900606598742}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,RCSe ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.8722222222222222, "obj2": 0.055911035482335135}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ACS ,Max( ( Min( RRS ,RRS ) - ACS ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( ( Max( RCSe,RRSe ) - RMSe ),MUR ) ) - Max( ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / Min( MUM ,CS ) ) + ( ( ( ( MLU - RCSe ) / RMSe ) + Max( Min( ( RRSe + CS ) ,( RRSe * RCSe ) ),DS ) ) * RMSe ) ) / MLU ) )", "obj1": 0.17962962962962964, "obj2": 0.7201765084717286}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + ( CRS + FirstVNF_RAM ) ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Max( ( MUC * ( DS + MUM ) ),( ( ( DS / ( MUM * CS ) ) + MUM ) / MLU ) ) )", "obj1": 0.9425925925925925, "obj2": 0.029485325470095577}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / ARS ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( MDR - ( CRS + FirstVNF_CPU ) ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( DS,( RRSe * Max( RCSe,MLU ) ) ) * RCSe ) ) + MLU ) / RMSe ) )", "obj1": 0.32222222222222224, "obj2": 0.5434436710120202}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.2722222222222222, "obj2": 0.5938844735042514}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( FirstVNF_CPU_Server + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,CS ) / ( ( Max( ( MUR / ( DS * RCSe ) ),MUR ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.9703703703703703, "obj2": 0.008534835941600446}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( ( ( ( MUR + MUR ) + ( MUR + MUM ) ) + ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5814814814814815, "obj2": 0.26873841648969726}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - Max( Const,( FirstVNF_CPU * ( Max( ( ( ACS + ARS ) + MDR ),FirstVNF_CPU ) + BR ) ) ) ) )", "choosing": "Min( ( ( MUM / CS ) / CS ) ,Max( ( ( ( RMSe + ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.1439077409657111}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / Max( ( Const * BR ),CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,( MUC - RMSe ) ) * MUR ) * ( ( ( MUC * ( DS + MUR ) ) + ( MUC * Min( DS ,MUM ) ) ) / MUM ) ) * ( RMSe + Min( ( RRSe + ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6840324754913392}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( MUM - RMSe ) * DS ) - MUM ) * ( RMSe * Min( ( ( ( MUR + RRSe ) - ( ( RCSe - ( RRSe + RRSe ) ) + MUR ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.15104700404032773}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Min( ( RCSe - DS ) ,( MUC / DS ) ) ) - ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) )", "obj1": 0.6759259259259259, "obj2": 0.17449336572020632}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( DDR,Min( ( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + DS ),CS ) ) ,RMSe ) ) )", "obj1": 0.19444444444444445, "obj2": 0.7042606687219459}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6481481481481481, "obj2": 0.20030682465263447}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + ( BR - ( MDR + MDR ) ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7483137728232263}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6518518518518519, "obj2": 0.18780997282946396}, {"determining": "( ( PN * ( PN + ( ( ( ( ( RRS / FirstVNF_RAM ) - ( MRS + FirstVNF_CPU_Server ) ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( CS * Max( ( RRSe + MUR ),( ( CS + MLU ) - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.29444444444444445, "obj2": 0.5789354053589134}, {"determining": "( ( ( ( ( MRS * DDR ) / ( ( ( ACS * DDR ) + ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( RRS / FirstVNF_RAM_Server ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM + ( Max( DS,( MUM + ( MUC / MLU ) ) ) * RCSe ) ) + RMSe ) + MUC ) / ( ( RMSe + Max( ( ( MLU - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5259259259259259, "obj2": 0.32854679585781477}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( RRSe / MUR ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.524074074074074, "obj2": 0.3493440054798799}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6222222222222222, "obj2": 0.22157466877445575}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( MLU * CS ),( RRSe + RRSe ) ) ) - ( Min( RRSe ,RRSe ) / ( RMSe * MUM ) ) )", "obj1": 0.8037037037037037, "obj2": 0.07940033669556329}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) / Min( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_CPU ) ,( MDR - PN ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( MUC * MUR ) + Max( ( ( DS + Min( MLU ,MLU ) ) / ( RMSe / MUM ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12945944767069278}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * MDR ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.24475729170679988}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( Max( Const,MRS ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( MDR + FirstVNF_CPU ) - ARS ) )", "choosing": "( ( RCSe - DS ) / ( ( MLU + RRSe ) + ( CS + ( MUM * Max( Min( ( RCSe - Min( MUC ,MUR ) ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.36441200308405475}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( Min( FirstVNF_RAM ,Max( Const,MRS ) ) + CRS ) + ( ( PN - MDR ) + ( PN - ACS ) ) ) ) + ( ( MDR - PN ) / ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - DS ) ,Max( RCSe,MUR ) ) * ( RRSe + DS ) ) / ( Max( CS,CS ) + ( CS + MUR ) ) )", "obj1": 0.55, "obj2": 0.29690648655797297}, {"determining": "( ( PN * ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( CRS ,FirstVNF_CPU_Server ) ) + PN ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( ( ( MUR / RMSe ) - RRSe ) - MLU ) * MUR ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( DS ,RCSe ) + RCSe ) ) )", "obj1": 0.3962962962962963, "obj2": 0.4747933622309899}, {"determining": "( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( RMSe - CS ) + MUR ) * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.662962962962963, "obj2": 0.18325665565322605}, {"determining": "( ( PN * ( ( ( MRS * DDR ) * ( ( ( ( MRS - RRS ) * FirstVNF_RAM_Server ) / PN ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / ( MRS + ACS ) ) ) ) ) + ( ( ( ( ( AMS - MDR ) / FirstVNF_Mem ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + Max( ( PN / FirstVNF_Mem ),FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( Max( ( ( MUC * MLU ) - Max( RMSe,( CS + MUC ) ) ),MUR ) - ( RRSe * DS ) ) - Max( RRSe,( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Min( ( ( RMSe - RMSe ) + ( MUC + RMSe ) ) ,( ( MUR + DS ) * MLU ) ) ) ) + ( ( CS - Max( ( DS - RMSe ),MUR ) ) - RCSe ) ) / RMSe ) )", "obj1": 0.5111111111111111, "obj2": 0.35160232564687544}, {"determining": "( ( PN * ( PN + ( Min( AMS ,FirstVNF_CPU_Server ) / DDR ) ) ) + ( ARS - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) ,Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( RRSe + MUR ),( ( DS + DS ) - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5618421327586776}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.49201942901535956}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( ( DS * MUC ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * Min( DS ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.6833333333333333, "obj2": 0.1652705776105953}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - FirstVNF_CPU_Server ) + ( ( AMS - MDR ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - RMSe ) ,( MUC / DS ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31296296296296294, "obj2": 0.5599679394423541}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_CPU ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( AMS / MDR ) - FirstVNF_RAM ) )", "choosing": "( ( MUM * ( ( MLU + RCSe ) + MUC ) ) - Min( RMSe ,( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.009867276783327293}, {"determining": "( ( ( MDR + PN ) * FirstVNF_RAM_Server ) * Max( ( FirstVNF_CPU_Server / ( BR + BR ) ),Min( ( ( MRS * Min( ARS ,( ( ACS / AMS ) * MRS ) ) ) + ( CRS + FirstVNF_CPU ) ) ,Min( FirstVNF_CPU_Server ,ARS ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( MUM - MUM ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.7001949341110095}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( Max( RRS,FirstVNF_RAM ) + AMS ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( RMSe - RMSe ) / ( MUR + RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( MUC,MUR ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.13333333333333333, "obj2": 0.7666366961096452}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7981481481481482, "obj2": 0.08326214162363457}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.14629629629629629, "obj2": 0.7539641969778645}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( MUM - ( ( CS * MUR ) - Max( ( MUC / ( DS * RMSe ) ),MUR ) ) )", "obj1": 0.937037037037037, "obj2": 0.03547123410692633}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( MDR + RRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Max( FirstVNF_CPU_Server,Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,MRS ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,DS ) ) * CS ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.31925410039308416}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - RMSe ) ,( MUC / DS ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5055555555555555, "obj2": 0.3560079876508494}, {"determining": "( ( ( ( ( CRS * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,CS ) - ( CS * RMSe ) ) - Max( ( MLU * ( MUC / ( DS * RCSe ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( CS + RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8314814814814815, "obj2": 0.07307951991730141}, {"determining": "( ( ( ( ( CRS * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * ( MUC / ( DS * RCSe ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( CS + RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8333333333333334, "obj2": 0.07194005164522817}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + RRSe ) * Max( ( ( RCSe + MUC ) + ( ( RRSe - RRSe ) * DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.8166666666666667, "obj2": 0.07428729391618283}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( ( BR - MRS ),MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,MRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( CS * RMSe ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6298986550728412}, {"determining": "( ( ( ( PN * Max( BR,Max( ( BR + ( FirstVNF_RAM_Server + ACS ) ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( MDR - PN ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( Min( DS ,( MUR + ( Min( Min( ( MUR / MLU ) ,RCSe ) ,( Max( MLU,MUM ) - Max( MUM,RCSe ) ) ) + MUR ) ) ) * DS ) )", "obj1": 0.55, "obj2": 0.29690648655797297}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.2905248832267162}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( ( DS / ( MUM * CS ) ) + MUM ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5648148148148148, "obj2": 0.2846955390984015}, {"determining": "( ( ( ( MDR - DDR ) + Min( ( PN - MDR ) ,( Max( CRS,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( Max( Min( MLU ,( CS * DS ) ),( ( RCSe / RMSe ) - MUM ) ) - ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) )", "obj1": 0.6796296296296296, "obj2": 0.16681543542801408}, {"determining": "( ( Max( ARS,PN ) * MDR ) + ( Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) + MDR ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( Max( Max( Max( MLU,Max( MUM,MUC ) ),MLU ),MUC ) / ( ( ( ( MUC * DS ) + ( RCSe * DS ) ) + ( CS / RRSe ) ) / MLU ) ) ) - Max( ( MLU * MUR ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7519097872813434}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( ( ( MDR + FirstVNF_CPU ) - MRS ),MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,MDR ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * RMSe ) ) + MUM ) / ( ( MUC / DS ) + CS ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7314814814814815, "obj2": 0.11893508295563474}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,FirstVNF_Mem ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( Const + FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( Min( MRS ,RRS ) + MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( ( ( RMSe - ( ( ( MLU * CS ) / MUM ) / Max( RRSe,RRSe ) ) ) - ( RRSe + MUR ) ) - DS ) * ( ( MLU * CS ) + ( RMSe - MUC ) ) ) - Max( ( DS + MUC ),RCSe ) )", "obj1": 0.7407407407407407, "obj2": 0.11425661940775864}, {"determining": "( Min( FirstVNF_Mem ,FirstVNF_CPU ) - ( ( FirstVNF_RAM_Server + ( FirstVNF_RAM - Min( ( FirstVNF_RAM_Server * Min( AMS ,DDR ) ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "Min( ( RCSe - Min( CS ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.9314814814814815, "obj2": 0.04071314770370003}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - MUR ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( CRS + FirstVNF_CPU ) - MDR ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ( MDR * FirstVNF_RAM_Server ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( Min( RCSe ,MUC ) * Min( MUR ,MUR ) ) + MUC ) * Min( ( MUC * MLU ) ,CS ) ),( ( ( MUR + MUM ) + ( CS + MUR ) ) + DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.4166666666666667, "obj2": 0.4610722347945589}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.4888888888888889, "obj2": 0.3700609124379677}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.3888888888888889, "obj2": 0.4852285815656049}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,ARS ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5222222222222223, "obj2": 0.35106398880023676}], "18": [{"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,ARS ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ( DDR * MRS ) / ( ( ( ACS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / ARS ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ,( MUC / DS ) ) / ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * ( ARS - ( MDR + FirstVNF_CPU ) ) ) - ( ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) + FirstVNF_CPU_Server ) * ( ACS * ARS ) ) )", "choosing": "( ( ( Max( RRSe,( RMSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * ( MUC / ( DS * RCSe ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( CS + RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ARS / ( ACS * DDR ) ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( CRS + FirstVNF_Mem_Server ) ) ) + ( ( PN - MRS ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,DS ) ),RRSe ) ,( MUR / RCSe ) ) * Max( MUM,MLU ) ),( MUC + DS ) ) ) + Max( MUR,( MUR / ( DS * RCSe ) ) ) )", "obj1": 0.4537037037037037, "obj2": 0.3828004977285236}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.47962962962962963, "obj2": 0.35600515564424023}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( MUR + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.44074074074074077, "obj2": 0.41358234957932366}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( DS * RCSe ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5148083483289059}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( Min( MRS ,RRS ) + MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( RMSe,CS ) ) ,RMSe ) ) )", "obj1": 0.19444444444444445, "obj2": 0.6995014362155733}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( MRS,BR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),( ( ( ( RMSe - DS ) / RRSe ) / ( MUM + MUR ) ) + DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.4166666666666667, "obj2": 0.4610722347945589}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / Max( ( Const * BR ),CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,( MUC - RMSe ) ) * MUR ) * ( ( ( MUC * ( DS + MUR ) ) + ( MUC * Min( DS ,MUM ) ) ) / MUM ) ) * ( RMSe + Min( ( RRSe + ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6840324754913392}, {"determining": "( Min( Min( ( MRS + Max( BR,FirstVNF_RAM_Server ) ) ,( Max( Min( ( AMS - ARS ) ,RRS ),ACS ) * ARS ) ) ,( ( ( FirstVNF_RAM_Server / FirstVNF_CPU_Server ) * Min( DDR ,( BR * ACS ) ) ) + ( ( MRS * FirstVNF_RAM ) + FirstVNF_CPU ) ) ) - ( ( FirstVNF_CPU_Server + Max( ACS,ARS ) ) * ( BR / Min( FirstVNF_Mem ,PN ) ) ) )", "choosing": "Min( Max( ( ( ( Max( RCSe,MUC ) * ( MUR * ( RMSe + MUM ) ) ) * DS ) - MLU ),Max( MUC,Min( Min( MLU ,( RMSe / RCSe ) ) ,MUC ) ) ) ,Max( Max( ( ( DS - ( RCSe / Min( CS ,Max( CS,MUC ) ) ) ) - ( ( RRSe + RRSe ) + ( ( ( DS / MUR ) / MUR ) / RCSe ) ) ),DS ),Max( ( RCSe * RMSe ),MLU ) ) )", "obj1": 0.9203703703703704, "obj2": 0.047483185675319416}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.25925925925925924, "obj2": 0.60475946252736}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7055555555555556, "obj2": 0.15095330155092912}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3648148148148148, "obj2": 0.4937016894813517}, {"determining": "( ( ( ( MDR - DDR ) + Min( ( PN - MDR ) ,( Max( CRS,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8888888888888888, "obj2": 0.048169226109728104}, {"determining": "( ( PN * ( ( ( ( ( PN - DDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( MUR,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5731742800534977}, {"determining": "( ( ( Min( ( PN - MDR ) ,( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( DDR / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) + RMSe ) + ( Max( DS,( ( RRSe + RMSe ) / ( ( RRSe - Min( RCSe ,MLU ) ) - RRSe ) ) ) / ( MUM * ( RMSe / ( RCSe * Min( RCSe ,MUC ) ) ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.42818829408568254}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,MRS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( DS,MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9796296296296296, "obj2": 0.004611865372268047}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - Max( Const,( FirstVNF_CPU * ( Max( ( ( ACS + ARS ) + MDR ),FirstVNF_CPU ) + BR ) ) ) ) )", "choosing": "Min( ( ( MUM / CS ) / CS ) ,Max( ( ( ( RMSe + ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.1439077409657111}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( FirstVNF_CPU + ( FirstVNF_RAM_Server + BR ) ) ) ) + ( CRS * FirstVNF_RAM_Server ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe - RCSe ) * RMSe ) / ( ( CS + RRSe ) + ( MUC + RRSe ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5537932321277091}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.5891983407699237}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) + ARS ) - ( ( FirstVNF_Mem_Server / AMS ) * ( ( MDR + RRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( MDR + FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,MRS ) ) ) )", "choosing": "( ( RCSe - DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + Min( Min( Min( RMSe ,( Max( RRSe,RRSe ) / ( MUR - RMSe ) ) ) ,Min( RCSe ,DS ) ) ,CS ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.31091726301406364}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( FirstVNF_CPU / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( MUC,DS ) ),RRSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.4925925925925926, "obj2": 0.3524010915927057}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - MUR ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6298986550728412}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.8481481481481481, "obj2": 0.06798903540535657}, {"determining": "( ( ( ( MDR - DDR ) + Min( ( PN - MDR ) ,( Max( CRS,FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,DDR ) ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( Max( Min( MLU ,( CS * DS ) ),( ( ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) / RMSe ) - MUM ) ) - ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) )", "obj1": 0.95, "obj2": 0.020318627532635858}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6645860112950367}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6518518518518519, "obj2": 0.187785343928106}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3491719102458261}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( ACS,( PN / FirstVNF_RAM ) ),Max( ( ( MDR + ( AMS - MRS ) ) * FirstVNF_CPU_Server ),( AMS - PN ) ) ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU - DS ),( MLU - RMSe ) ) * ( RMSe * ( Min( ( MUR / RMSe ) ,Min( ( ( ( RCSe + CS ) + ( RRSe + DS ) ) * Max( CS,MUC ) ) ,RCSe ) ) * MLU ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6752257719278503}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * MDR ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.24475729170679988}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( ( CS * RMSe ) + RRSe ) ) )", "obj1": 0.5685185185185185, "obj2": 0.2748938547376079}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ACS ,Max( ( Min( RRS ,RRS ) - ACS ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( ( Max( RCSe,RRSe ) - RMSe ),MUR ) ) - Max( ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / Min( MUM ,CS ) ) + ( ( ( ( MLU - RCSe ) / RMSe ) + Max( Min( ( RRSe + CS ) ,( RRSe * RCSe ) ),DS ) ) * RMSe ) ) / MLU ) )", "obj1": 0.17962962962962964, "obj2": 0.7201765084717286}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3888888888888889, "obj2": 0.4819525134781685}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( MUM - ( ( CS * MUR ) - Max( ( MUC / ( DS * RMSe ) ),MUR ) ) )", "obj1": 0.937037037037037, "obj2": 0.03547123410692633}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.37592592592592594, "obj2": 0.4851412415246541}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3351851851851852, "obj2": 0.5242330881779476}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - Max( ARS,ACS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( ( RMSe - MUR ) + MUR ) + ( MUR + MUM ) ) + DS ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.9222222222222223, "obj2": 0.038978395738816014}, {"determining": "( ( ( ( Min( DDR ,MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Min( MRS ,RRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / Const ) ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( Min( MUR ,RCSe ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * MUR ) ) * ( RRSe * RMSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.23341227039278026}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + ( CRS + FirstVNF_RAM ) ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) - Max( ( MUC * ( DS + MUM ) ),( ( ( DS / ( MUM * CS ) ) + MUM ) / MLU ) ) )", "obj1": 0.9425925925925925, "obj2": 0.029485325470095577}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + RRSe ) * Max( ( ( RCSe + MUC ) + ( ( RRSe - RRSe ) * DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.8166666666666667, "obj2": 0.07428729391618283}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.16404564496909477}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( RCSe - DS ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.10061995691586355}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( Max( RRS,FirstVNF_RAM ) + AMS ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( RMSe - RMSe ) / ( MUR + RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( MUC,MUR ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.13333333333333333, "obj2": 0.7666366961096452}, {"determining": "( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( RMSe - CS ) + MUR ) * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.662962962962963, "obj2": 0.18325665565322605}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) )", "obj1": 0.14444444444444443, "obj2": 0.764712697035177}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( MDR + FirstVNF_CPU ) - MRS ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - ( MDR + FirstVNF_CPU ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( ( ( DS / ( MUM * RMSe ) ) + MUM ) + RRSe ) + ( CS + RRSe ) ) ) ) )", "obj1": 0.22407407407407406, "obj2": 0.6743470748743474}, {"determining": "( ( ( PN * MDR ) + ( PN - MDR ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( MUC - RMSe ) ,( MUC / DS ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5185185185185185, "obj2": 0.3416302392682055}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.31851851851851853, "obj2": 0.5505530599975927}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( ( BR - MRS ),MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,MRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( CS * RMSe ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11296296296296296, "obj2": 0.8272947093185631}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + ( BR - ( MDR + MDR ) ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7483137728232263}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( ( DS / ( MUM * CS ) ) + MUM ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5648148148148148, "obj2": 0.2846955390984015}, {"determining": "( ( PN * ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( CRS ,FirstVNF_CPU_Server ) ) + PN ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MLU + ( ( ( ( MUR / RMSe ) - RRSe ) - MLU ) * MUR ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( DS ,RCSe ) + RCSe ) ) )", "obj1": 0.3962962962962963, "obj2": 0.4747933622309899}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6481481481481481, "obj2": 0.20030682465263447}, {"determining": "( ( ( ( ( MRS * DDR ) / ( ( ( ACS * DDR ) + ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( RRS / FirstVNF_RAM_Server ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM + ( Max( DS,( MUM + ( MUC / MLU ) ) ) * RCSe ) ) + RMSe ) + MUC ) / ( ( RMSe + Max( ( ( MLU - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5259259259259259, "obj2": 0.32854679585781477}, {"determining": "( ( PN * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * RMSe ) ) + MUM ) / ( ( MUC / DS ) + CS ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.40555555555555556, "obj2": 0.4660928324951033}, {"determining": "( Min( FirstVNF_CPU ,ACS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( ( MUC - ( RRSe * ( Min( MLU ,RRSe ) - Max( Max( DS,MLU ),DS ) ) ) ) ,( ( RCSe - Max( ( MUR + Min( MUM ,MUR ) ),( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5665075785831442}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.42962962962962964, "obj2": 0.4214711719642947}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * ( DDR * MRS ) ) / ( ( PN * PN ) - ACS ) ) - ( Min( Min( PN ,Const ) ,Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ACS * CRS ) + Min( BR ,Max( ARS,ACS ) ) ) ) ) + ( ARS - ( FirstVNF_CPU + MDR ) ) )", "choosing": "( ( Min( ( ( ( ( ( RMSe - MUR ) + MUR ) + ( MUR + MUM ) ) + DS ) / DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( ( MLU + ( MLU + DS ) ) ,RRSe ) + RMSe ) )", "obj1": 0.24074074074074073, "obj2": 0.644029914353674}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( ACS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR * Max( ( RRS + FirstVNF_RAM ),Const ) ) ) )", "choosing": "Min( ( MUR / ( DS * ( RMSe + Min( ( RMSe * Min( RRSe ,( RMSe / MUR ) ) ) ,Max( ( CS * CS ),( ( RMSe * MUC ) - MUR ) ) ) ) ) ) ,Max( ( ( ( RMSe - ( RCSe / ( DS * DS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( ( MUR + ( MUR / Max( MUM,Min( DS ,MUC ) ) ) ),Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.06446847414827311}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5351472327256387}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) / Min( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_CPU ) ,( MDR - PN ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( MUC * MUR ) + Max( ( ( DS + Min( MLU ,MLU ) ) / ( RMSe / MUM ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12945944767069278}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) + MUR ),( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.6203703703703703, "obj2": 0.2223953544502072}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( ( ( ( MUR + MUR ) + ( MUR + RMSe ) ) + ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5796296296296296, "obj2": 0.26859889611116006}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( ( AMS - MDR ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.651580046498581}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( FirstVNF_Mem + RRS ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * ( MRS + FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS + Max( CS,MUC ) ),( MUR - RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( MUR,( MUR / ( DS * RCSe ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.20982041012167674}, {"determining": "( Min( ( FirstVNF_CPU - PN ) ,BR ) + ( Max( FirstVNF_CPU_Server,Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS * FirstVNF_RAM ) ) ,MRS ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( RCSe,CS ) * DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,RRSe ) ) * CS ) ) ) )", "obj1": 0.5277777777777778, "obj2": 0.327134691552259}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.14629629629629629, "obj2": 0.7539641969778645}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( ( DS * MUC ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * Min( DS ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.49289768967955816}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( ( ACS * DDR ) / ARS ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( ( MUC + RRSe ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5814814814814815, "obj2": 0.26651426536327544}, {"determining": "( ( ( ( MDR - DDR ) + Min( ( PN - MDR ) ,( Max( CRS,FirstVNF_Mem_Server ) * FirstVNF_CPU ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( Max( Min( MLU ,( CS * DS ) ),( ( RCSe / RMSe ) - MUM ) ) - ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) )", "obj1": 0.9629629629629629, "obj2": 0.016545988267750524}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( ( DS * MUC ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * Min( DS ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09137666291843877}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Max( ( ( CRS + FirstVNF_CPU ) - MRS ),MRS ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,MDR ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),Const ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * RMSe ) ) + MUM ) / ( ( MUC / Max( CS,MLU ) ) + CS ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + RRSe ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.7574074074074074, "obj2": 0.10579275430756599}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.6074074074074074, "obj2": 0.2376433678088408}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.55, "obj2": 0.29690648655797297}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.32222222222222224, "obj2": 0.5434436710120202}, {"determining": "( ( PN * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.47038998393295556}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( CS ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.8074074074074075, "obj2": 0.07768227438028581}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + RRSe ) + ( MUM - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.2883020875095269}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( MDR + RRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Max( FirstVNF_CPU_Server,Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,MRS ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,DS ) ) * CS ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.31925410039308416}, {"determining": "( ( ( ( ( CRS * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,CS ) - ( CS * RMSe ) ) - Max( ( MLU * ( MUC / ( DS * RCSe ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( CS + RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.837037037037037, "obj2": 0.07054965352689571}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.26481481481481484, "obj2": 0.6008932545414347}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( ACS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "Min( ( MUR / ( DS * ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,RCSe ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.8796296296296297, "obj2": 0.05554902928636067}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.6222222222222222, "obj2": 0.22157466877445575}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5166666666666667, "obj2": 0.3443176144279158}, {"determining": "( ( Max( ARS,PN ) * MDR ) + ( Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) + MDR ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( Max( Max( Max( MLU,Max( MUM,MUC ) ),MLU ),MUC ) / ( ( ( ( MUC * DS ) + ( RCSe * DS ) ) + ( CS / RRSe ) ) / MLU ) ) ) - Max( ( MLU * MUR ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7519097872813434}, {"determining": "( ( ( ( ( CRS * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,CS ) - ( CS * RMSe ) ) - Max( ( MLU * ( MUC / ( DS * RCSe ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( CS + RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8314814814814815, "obj2": 0.07307951991730141}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( Min( FirstVNF_RAM ,Max( Const,MRS ) ) + CRS ) + ( ( PN - MDR ) + ( PN - ACS ) ) ) ) + ( ( MDR - PN ) / ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - DS ) ,Max( RCSe,MUR ) ) * ( RRSe + DS ) ) / ( Max( CS,CS ) + ( CS + MUR ) ) )", "obj1": 0.55, "obj2": 0.29690648655797297}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / ( RMSe - RMSe ) ) ) ) + RRSe ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7981481481481482, "obj2": 0.08326214162363457}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + ARS ) - FirstVNF_CPU_Server ) + ( ( AMS - ( PN * MDR ) ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( MUC + DS ) / DS ) / DS ) )", "obj1": 0.24444444444444444, "obj2": 0.6397437833030404}], "19": [{"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( Min( Min( ( FirstVNF_CPU * Max( ( FirstVNF_CPU_Server + PN ),RRS ) ) ,FirstVNF_Mem_Server ) ,MDR ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - RMSe ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,ARS ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ( DDR * MRS ) / ( ( ( ACS * Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) / ARS ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( Max( ( ( RMSe - ( MUC + RRSe ) ) + MUR ),MUC ) ,( MUC / DS ) ) / ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Max( FirstVNF_RAM,CRS ) * Max( FirstVNF_RAM,MRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,RRS ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) + ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * RMSe ) - ( RRSe + MUR ) ) - Max( ( MUR + RRSe ),( MLU * CS ) ) ) - ( Max( MUR,( MUM * Min( ( Max( ( DS / RMSe ),( MUC / MLU ) ) + Max( MLU,CS ) ) ,MUC ) ) ) / RMSe ) )", "obj1": 0.5203703703703704, "obj2": 0.3156979646362303}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( PN + FirstVNF_Mem ) ) ) ) + ( ( ( MRS * DDR ) - MDR ) + ( PN - MDR ) ) ) + ( CRS * MDR ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe + DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( RCSe + ( Min( MUR ,MUM ) + Max( DS,MUR ) ) ) ) )", "obj1": 0.4388888888888889, "obj2": 0.40201955872201484}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) + ARS ) - ( ( FirstVNF_Mem_Server / AMS ) * ( ( MDR + RRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( MDR + FirstVNF_CPU ) - Max( FirstVNF_CPU_Server,Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,MRS ) ) ) )", "choosing": "( ( RCSe - DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + Min( Min( Min( RMSe ,( Max( RRSe,RRSe ) / ( MUR - RMSe ) ) ) ,Min( RCSe ,DS ) ) ,CS ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.31091726301406364}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,( ( FirstVNF_CPU_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( MRS,BR ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),( ( ( ( RMSe - DS ) / RRSe ) / ( MUM + MUR ) ) + DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.4166666666666667, "obj2": 0.4610722347945589}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,MRS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( ( ( DS / ( MUM * RMSe ) ) + MUM ) + RRSe ) + ( CS + RRSe ) ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3648148148148148, "obj2": 0.4937016894813517}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( FirstVNF_Mem + RRS ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * ( MRS + FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS + Max( CS,MUC ) ),( MUR - RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( MUR,( MUR / ( DS * RCSe ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.20982041012167674}, {"determining": "( ( ( Min( ( PN - MDR ) ,( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( DDR / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) + RMSe ) + ( Max( DS,( ( RRSe + RMSe ) / ( ( RRSe - Min( RCSe ,MLU ) ) - RRSe ) ) ) / ( MUM * ( RMSe / ( RCSe * Min( RCSe ,MUC ) ) ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.42818829408568254}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( FirstVNF_CPU + ( FirstVNF_RAM_Server + BR ) ) ) ) + ( CRS * FirstVNF_RAM_Server ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( RCSe - RCSe ) * RMSe ) / ( ( CS + RRSe ) + ( MUC + RRSe ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5537932321277091}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / Max( ( Const * BR ),CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,( MUC - RMSe ) ) * MUR ) * ( ( ( MUC * ( DS + MUR ) ) + ( MUC * Min( DS ,MUM ) ) ) / MUM ) ) * ( RMSe + Min( ( RRSe + ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6840324754913392}, {"determining": "( ( ( ( Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) * PN ) + ( ( PN * PN ) + ( PN - ( ( RRS * MDR ) - ( RRS + Const ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM / Max( ( ( MUC * MUC ) + ( DS - RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4723542646472011}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( DS * RCSe ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5148083483289059}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6425925925925926, "obj2": 0.19787292109369886}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( CRS + FirstVNF_Mem_Server ) ) ) + ( ( PN - MRS ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,DS ) ),RRSe ) ,( MUR / RCSe ) ) * Max( MUM,MLU ) ),( MUC + DS ) ) ) + Max( MUR,( MUR / ( DS * RCSe ) ) ) )", "obj1": 0.4537037037037037, "obj2": 0.3828004977285236}, {"determining": "( ( PN * ( ( ( ( ( PN - DDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( MUR,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5731742800534977}, {"determining": "( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( CRS * ( Max( DDR,FirstVNF_RAM ) - ( RRS + FirstVNF_CPU_Server ) ) ) ) + ( ( MDR + FirstVNF_RAM_Server ) - ARS ) )", "choosing": "( ( ( ( MUM - ( RCSe * CS ) ) * ( RCSe - ( RRSe * RCSe ) ) ) - MUM ) * ( Min( ( ( RCSe - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( MUR + RRSe ) / Max( RRSe,DS ) ) ) ) + RRSe ) ,Min( RRSe ,RCSe ) ) * RMSe ) )", "obj1": 0.674074074074074, "obj2": 0.17508877766709866}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( ACS,( PN / FirstVNF_RAM ) ),Max( ( ( MDR + ( AMS - MRS ) ) * FirstVNF_CPU_Server ),( AMS - PN ) ) ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU - DS ),( MLU - RMSe ) ) * ( RMSe * ( Min( ( MUR / RMSe ) ,Min( ( ( ( RCSe + CS ) + ( RRSe + DS ) ) * Max( CS,MUC ) ) ,RCSe ) ) * MLU ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6752257719278503}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( RMSe - RMSe ) / ( MUR + RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( MUC,MUR ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.687037037037037, "obj2": 0.17047380780898003}, {"determining": "( ( ( ( MDR / ( ( ( ACS * Max( FirstVNF_Mem,CRS ) ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM * ( CS + RRSe ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.6474588883419322}, {"determining": "( ( ( PN * MDR ) + ( PN - MDR ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( MUC - RMSe ) ,( MUC / DS ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5185185185185185, "obj2": 0.3416302392682055}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5351472327256387}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6645860112950367}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.16404564496909477}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4703703703703704, "obj2": 0.36862085923117066}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,DS ) ),RRSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.45740740740740743, "obj2": 0.3822385752029725}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ACS ,Max( ( Min( RRS ,RRS ) - ACS ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( ( Max( RCSe,RRSe ) - RMSe ),MUR ) ) - Max( ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / Min( MUM ,CS ) ) + ( ( ( ( MLU - RCSe ) / RMSe ) + Max( Min( ( RRSe + CS ) ,( RRSe * RCSe ) ),DS ) ) * RMSe ) ) / MLU ) )", "obj1": 0.17962962962962964, "obj2": 0.7201765084717286}, {"determining": "( ( PN * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.47038998393295556}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ARS ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( ( RCSe - DS ) + RRSe ) ) )", "obj1": 0.43703703703703706, "obj2": 0.4151837641158397}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( ( CS * RMSe ) + RRSe ) ) )", "obj1": 0.5685185185185185, "obj2": 0.2748938547376079}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,CS ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9018518518518519, "obj2": 0.044489061814565196}, {"determining": "( ( ( PN * Max( BR,Max( Min( ACS ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( RMSe - CS ) + MUC ) * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.662962962962963, "obj2": 0.18319227602527838}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11066851083902372}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,CS ) * DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,RRSe ) ) * CS ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.013491991715025162}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( FirstVNF_CPU / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( MUC,DS ) ),RRSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.4925925925925926, "obj2": 0.3524010915927057}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6298986550728412}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( Max( RRSe,MUR ) - ( CS * RRSe ) ) + MUR ),( ( ( MUR + MUR ) + ( MUR + MUM ) ) + DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.6222222222222222, "obj2": 0.22132827995686963}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.37592592592592594, "obj2": 0.4851412415246541}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( Max( RRS,FirstVNF_RAM ) + AMS ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( RMSe - RMSe ) / ( MUR + RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( MUC,MUR ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.13333333333333333, "obj2": 0.7666366961096452}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.22037037037037038, "obj2": 0.6664847916249733}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) * FirstVNF_CPU ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( PN * MRS ) / Max( FirstVNF_Mem,MDR ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Min( ( ( ( ( DS / ( MUM * RMSe ) ) + MUM ) / ( ( MUC / DS ) + CS ) ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + DS ) + ( CS + RRSe ) ) ) - ( Min( RRSe ,( DS + RMSe ) ) + RMSe ) )", "obj1": 0.737037037037037, "obj2": 0.1170289781623577}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Max( RRS,FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - RMSe ) / ( MUR + RMSe ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5439295893631545}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( MUM - ( ( CS * MUR ) - Max( ( MUC / ( DS * RMSe ) ),MUR ) ) )", "obj1": 0.937037037037037, "obj2": 0.035471234106926326}, {"determining": "( ( ARS + ( MDR + FirstVNF_CPU ) ) + Min( ACS ,Max( Max( Max( FirstVNF_RAM_Server,RRS ),RRS ),FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU * CS ),( MUR + RRSe ) ) + ( RRSe * ( Max( MUR,RCSe ) + ( RRSe + RMSe ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8242530485530052}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7469078504013423}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.7759259259259259, "obj2": 0.09755402699352052}, {"determining": "( ( ( ( Min( DDR ,MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Min( MRS ,RRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / Const ) ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( Min( MUR ,RCSe ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * MUR ) ) * ( RRSe * RMSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.23341227039278026}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / MDR ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( Min( Max( CS,MUC ) ,CS ) / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.14629629629629629, "obj2": 0.7539641969778645}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) )", "obj1": 0.40370370370370373, "obj2": 0.46260750554714086}, {"determining": "( Min( FirstVNF_CPU ,ACS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( ( MUC - ( RRSe * ( Min( MLU ,RRSe ) - Max( Max( DS,MLU ),DS ) ) ) ) ,( ( RCSe - Max( ( MUR + Min( MUM ,MUR ) ),( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5665075785831442}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.5891983407699237}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.32222222222222224, "obj2": 0.5434436710120202}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - Max( ARS,ACS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( ( RMSe - MUR ) + MUR ) + ( MUR + MUM ) ) + DS ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.9222222222222223, "obj2": 0.038978395738816014}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.47962962962962963, "obj2": 0.35600515564424023}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.18888888888888888, "obj2": 0.7046271932065532}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - MUR ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - Max( Const,( FirstVNF_CPU * ( Max( ( ( ACS + ARS ) + MDR ),FirstVNF_CPU ) + BR ) ) ) ) )", "choosing": "Min( ( ( MUM / CS ) / CS ) ,Max( ( ( ( RMSe + ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.1439077409657111}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( RCSe,DS ) ),RRSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.4722222222222222, "obj2": 0.3661118389405207}, {"determining": "( Max( FirstVNF_Mem,( ( FirstVNF_RAM * ACS ) / ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) - ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / MRS ) / Min( ( FirstVNF_Mem_Server - FirstVNF_Mem ) ,FirstVNF_Mem_Server ) ) * ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( MUR + RMSe ) / ( RMSe - RMSe ) ) ) - MUR ) ,Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) )", "obj1": 0.14444444444444443, "obj2": 0.764712697035177}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUR + RRSe ) * Max( ( ( RCSe + MUC ) + ( ( RRSe - RRSe ) * DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.7870370370370371, "obj2": 0.08846086050958933}, {"determining": "( ( PN - ( ( ( PN - FirstVNF_RAM ) / ( ( ( DDR * ACS ) / ARS ) - ( Max( FirstVNF_RAM,FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( ( ( RCSe * MUM ) * ( MUR * RRSe ) ) + RMSe ) ) ) + RMSe ) / ( MUC + RRSe ) ) )", "obj1": 0.8796296296296297, "obj2": 0.051890839544842735}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7055555555555556, "obj2": 0.15095330155092912}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( Min( MRS ,RRS ) + MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( RMSe,CS ) ) ,RMSe ) ) )", "obj1": 0.19444444444444445, "obj2": 0.6995014362155733}, {"determining": "( ( ( ( ( DDR + MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,( ARS / ( FirstVNF_RAM * Const ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( ( ( ( MUR + MUR ) + ( MUC + RMSe ) ) + ( ( RMSe + Min( RMSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2670010905927695}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7018518518518518, "obj2": 0.15426059334428494}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * MDR ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.24475729170679988}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ARS / AMS ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - ( RRSe * DS ) ) - Max( ( MLU * MUM ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3425925925925926, "obj2": 0.5153408845746762}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - Max( ARS,ACS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( ( RMSe - MUR ) + MUR ) + ( MUR + MUM ) ) + DS ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.9222222222222223, "obj2": 0.038978395738816014}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.7148148148148148, "obj2": 0.14565549856677984}, {"determining": "( ( ( ( MDR - DDR ) + Min( ( PN - MDR ) ,( Max( CRS,FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,DDR ) ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( Max( Min( MLU ,( CS * DS ) ),( ( ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) / RMSe ) - MUM ) ) - ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) )", "obj1": 0.95, "obj2": 0.020318627532635858}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( CRS + FirstVNF_RAM ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( Max( ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) + ( CS + RRSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.48644254246182617}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5018518518518519, "obj2": 0.3497559198194507}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( ( DS * MUC ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * Min( DS ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.5907407407407408, "obj2": 0.250020544354234}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ARS / ( ACS * DDR ) ) - ( ( Min( PN ,FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_CPU ) / Min( PN ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( Max( ( RMSe - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8131474525675209}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.85, "obj2": 0.06682581997020477}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( ( ( ( MDR - DDR ) + Min( ( PN - MDR ) ,( Max( CRS,FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,DDR ) ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( Max( Min( MLU ,( CS * DS ) ),( ( ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) / RMSe ) - MUM ) ) - ( ( ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) + Max( RCSe,RRSe ) ) / ( Max( MUM,MUR ) - RMSe ) ) )", "obj1": 0.9425925925925925, "obj2": 0.02627296127853612}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.42962962962962964, "obj2": 0.4214711719642947}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) / Min( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_CPU ) ,( MDR - PN ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( MUC * MUR ) + Max( ( ( DS + Min( MLU ,MLU ) ) / ( RMSe / MUM ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12945944767069278}, {"determining": "( ( ( ( PN * ( BR + ( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( Min( FirstVNF_Mem_Server ,FirstVNF_Mem ) ,RRS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * RRSe ) + ( DS - DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3351851851851852, "obj2": 0.5242330881779476}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( CS ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.8074074074074075, "obj2": 0.07768227438028581}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.6074074074074074, "obj2": 0.2376433678088408}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( Min( FirstVNF_RAM ,Max( Const,MRS ) ) + CRS ) + ( ( PN - MDR ) + ( PN - ACS ) ) ) ) + ( ( MDR - PN ) / ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - DS ) ,Max( RCSe,MUR ) ) * ( RRSe + DS ) ) / ( Max( CS,CS ) + ( CS + MUR ) ) )", "obj1": 0.55, "obj2": 0.29690648655797297}, {"determining": "( ( Max( ARS,PN ) * MDR ) + ( Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) + MDR ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( Max( Max( Max( MLU,Max( MUM,MUC ) ),MLU ),MUC ) / ( ( ( ( MUC * DS ) + ( RCSe * DS ) ) + ( CS / RRSe ) ) / MLU ) ) ) - Max( ( MLU * MUR ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7519097872813434}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( ACS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR * Max( ( RRS + FirstVNF_RAM ),Const ) ) ) )", "choosing": "Min( ( MUR / ( DS * ( RMSe + Min( ( RMSe * Min( RRSe ,( RMSe / MUR ) ) ) ,Max( ( CS * CS ),( ( RMSe * MUC ) - MUR ) ) ) ) ) ) ,Max( ( ( ( RMSe - ( RCSe / ( DS * DS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( ( MUR + ( MUR / Max( MUM,Min( DS ,MUC ) ) ) ),Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.06446847414827311}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ARS ) + ( Min( ACS ,Const ) * Min( MRS ,( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "( ( RCSe * ( MLU * ( DS - RCSe ) ) ) - RMSe )", "obj1": 0.8166666666666667, "obj2": 0.07428729391618283}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + RRSe ) + ( MUM - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.2883020875095269}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( ( ACS * DDR ) / ARS ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( ( MUC + RRSe ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5814814814814815, "obj2": 0.26651426536327544}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * Min( ( CRS / FirstVNF_Mem ) ,Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( MUR * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2759259259259259, "obj2": 0.5961434547299711}], "20": [{"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( Min( Min( BR ,( FirstVNF_CPU * Max( RRS,( FirstVNF_CPU_Server + Min( Const ,Const ) ) ) ) ) ,MDR ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) - ( ( FirstVNF_RAM_Server * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) / DS ) - MUM ) * ( RMSe * Min( ( MLU * Min( MUC ,RRSe ) ) ,( ( RCSe - RMSe ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( ( FirstVNF_CPU * Max( ( FirstVNF_CPU_Server + PN ),RRS ) ) ,FirstVNF_Mem_Server ) ,MDR ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - RMSe ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Max( MRS,FirstVNF_RAM_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM * ( CS * RRSe ) ),( RRSe + MUR ) ) ) - ( Max( Max( RRSe,RCSe ),( Max( MUC,( ( Min( CS ,RMSe ) * ( RRSe + CS ) ) * RMSe ) ) / Min( RRSe ,Max( DS,Min( CS ,( MUC + RRSe ) ) ) ) ) ) / RMSe ) )", "obj1": 0.5370370370370371, "obj2": 0.3055451217422039}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( RCSe - DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + Min( Min( Min( RMSe ,( Max( RRSe,RRSe ) / ( MUR - RMSe ) ) ) ,Min( RCSe ,DS ) ) ,CS ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.3489931797021373}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) )", "obj1": 0.3962962962962963, "obj2": 0.4642549866266985}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Max( FirstVNF_RAM,CRS ) * Max( FirstVNF_RAM,MRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,RRS ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) + ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * RMSe ) - ( RRSe + MUR ) ) - Max( ( MUR + RRSe ),( MLU * CS ) ) ) - ( Max( MUR,( MUM * Min( ( Max( ( DS / RMSe ),( MUC / MLU ) ) + Max( MLU,CS ) ) ,MUC ) ) ) / RMSe ) )", "obj1": 0.5203703703703704, "obj2": 0.3156979646362303}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.037207968983006164}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - RMSe ) / ( MUR + RMSe ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4703703703703704, "obj2": 0.36596632972651055}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( CRS + FirstVNF_Mem_Server ) ) ) + ( ( PN - MRS ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,DS ) ),RRSe ) ,( MUR / RCSe ) ) * Max( MUM,MLU ) ),( MUC + DS ) ) ) + Max( MUR,( MUR / ( DS * RCSe ) ) ) )", "obj1": 0.4537037037037037, "obj2": 0.3828004977285236}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( RMSe - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.4484717669314552}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( ( DS * MUC ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * Min( Min( ( MUC - RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.5407407407407407, "obj2": 0.28870936662600977}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / Max( ( Const * BR ),CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,( MUC - RMSe ) ) * MUR ) * ( ( ( MUC * ( DS + MUR ) ) + ( MUC * Min( DS ,MUM ) ) ) / MUM ) ) * ( RMSe + Min( ( RRSe + ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6840324754913392}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10318423337140852}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( ACS,( PN / FirstVNF_RAM ) ),Max( ( ( MDR + ( AMS - MRS ) ) * FirstVNF_CPU_Server ),( AMS - PN ) ) ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU - DS ),( MLU - RMSe ) ) * ( RMSe * ( Min( ( MUR / RMSe ) ,Min( ( ( ( RCSe + CS ) + ( RRSe + DS ) ) * Max( CS,MUC ) ) ,RCSe ) ) * MLU ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6752257719278503}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.5891983407699237}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( Min( BR ,CRS ) * ( FirstVNF_Mem_Server - ACS ) ) / FirstVNF_Mem_Server ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Max( MUR,Min( MUR ,RMSe ) ) ) )", "obj1": 0.8296296296296296, "obj2": 0.06914945700619488}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( MDR - FirstVNF_RAM ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - Max( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ),( Min( Const ,FirstVNF_Mem_Server ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( Min( RMSe ,( Max( RRSe,RRSe ) / ( MUR - RMSe ) ) ),MUR ) - ( CS * RMSe ) ) - Max( ( MLU * MUC ),( MUR + RRSe ) ) ) - Max( Max( ( Max( RCSe,DS ) - MUC ),MLU ),MLU ) )", "obj1": 0.5166666666666667, "obj2": 0.3288951494769263}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * Max( CS,DS ) ),RRSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.45740740740740743, "obj2": 0.3822385752029725}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,CS ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9018518518518519, "obj2": 0.044489061814565196}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5273800251976424}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6574242689600505}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * MDR ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.24475729170679988}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.8703703703703703, "obj2": 0.05673476630713927}, {"determining": "( ( PN - ( ( ( PN - FirstVNF_RAM ) / ( ( ( DDR * ACS ) / ARS ) - ( Max( FirstVNF_RAM,FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( ( ( RCSe * MUM ) * ( MUR * RRSe ) ) + RMSe ) ) ) + RMSe ) / ( MUC + RRSe ) ) )", "obj1": 0.8796296296296297, "obj2": 0.051890839544842735}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) - Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,( Const / RRS ) ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( CRS,FirstVNF_Mem ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( MUC * MUR ) - ( Max( ( MLU * ( ( ( MUM + MLU ) * ( DS + MLU ) ) / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,DS ) ) ) )", "obj1": 0.7888888888888889, "obj2": 0.088317812741255}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( MUM - ( ( CS * MUR ) - Max( ( MUC / ( DS * RMSe ) ),MUR ) ) )", "obj1": 0.937037037037037, "obj2": 0.035471234106926326}, {"determining": "( Min( FirstVNF_CPU_Server ,Min( ACS ,Max( ( Min( RRS ,RRS ) - ACS ),ACS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( ( Max( RCSe,RRSe ) - RMSe ),MUR ) ) - Max( ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,MUR ) ) * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / Min( MUM ,CS ) ) + ( ( ( ( MLU - RCSe ) / RMSe ) + Max( Min( ( RRSe + CS ) ,( RRSe * RCSe ) ),DS ) ) * RMSe ) ) / MLU ) )", "obj1": 0.17962962962962964, "obj2": 0.7201765084717286}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * Min( ( CRS / FirstVNF_Mem ) ,Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( MUR * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2759259259259259, "obj2": 0.5961434547299711}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ARS ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( ( RCSe - DS ) + RRSe ) ) )", "obj1": 0.43703703703703706, "obj2": 0.4151837641158397}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) + Max( ARS,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( Min( FirstVNF_CPU ,Max( ARS,ACS ) ) + ( PN - MDR ) ) ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - ( ( MUM + MUM ) - ( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RMSe ) * Max( MUR,Min( Max( DS,CS ) ,Min( MLU ,RCSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5037037037037037, "obj2": 0.3329792565768294}, {"determining": "( ( ( ( MDR - DDR ) + Min( ( PN - MDR ) ,( Max( CRS,FirstVNF_Mem_Server ) * Min( FirstVNF_CPU ,DDR ) ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( ARS - Max( ( FirstVNF_CPU * FirstVNF_RAM_Server ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( ( DS * MUC ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * Min( DS ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.8925925925925926, "obj2": 0.046988849657210625}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( RMSe - ( CS - CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) ) )", "obj1": 0.4388888888888889, "obj2": 0.40201955872201484}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.42962962962962964, "obj2": 0.4214711719642947}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ARS / AMS ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - ( RRSe * DS ) ) - Max( ( MLU * MUM ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3425925925925926, "obj2": 0.5153408845746762}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11066851083902372}, {"determining": "( ( PN * ( ( ( ( ( PN - DDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( MUR,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5731742800534977}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.37592592592592594, "obj2": 0.4851412415246541}, {"determining": "( Min( FirstVNF_CPU ,ACS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( ( MUC - ( RRSe * ( Min( MLU ,RRSe ) - Max( Max( DS,MLU ),DS ) ) ) ) ,( ( RCSe - Max( ( MUR + Min( MUM ,MUR ) ),( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5665075785831442}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.23703703703703705, "obj2": 0.6400990752554615}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ACS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( MUR,( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3648148148148148, "obj2": 0.4936193210680985}, {"determining": "( ( ( ( Min( DDR ,MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Min( MRS ,RRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / Const ) ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( Min( MUR ,RCSe ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * MUR ) ) * ( RRSe * RMSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.23341227039278026}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( FirstVNF_Mem + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,CS ) * DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,RRSe ) ) * CS ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.013491991715025162}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4723542646472011}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( ( CS * RMSe ) + RRSe ) ) )", "obj1": 0.5685185185185185, "obj2": 0.2748938547376079}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( FirstVNF_CPU_Server * FirstVNF_Mem ) ) + Max( CRS,CRS ) )", "choosing": "( ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) - ( RCSe / RRSe ) )", "obj1": 0.587037037037037, "obj2": 0.2496994971195149}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Max( RRS,FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - RMSe ) / ( MUR + RMSe ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5439295893631545}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,MRS ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( DS * RCSe ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3537037037037037, "obj2": 0.5148083483289059}, {"determining": "( ( ARS + ( MDR + FirstVNF_CPU ) ) + Min( ACS ,Max( Max( Max( FirstVNF_RAM_Server,RRS ),RRS ),FirstVNF_RAM ) ) )", "choosing": "( Max( ( MLU * CS ),( MUR + RRSe ) ) + ( RRSe * ( Max( MUR,RCSe ) + ( RRSe + RMSe ) ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8242530485530052}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7469078504013423}, {"determining": "( ( ( ( ( PN - MDR ) / ( MDR + FirstVNF_CPU ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( RMSe - RMSe ) / ( MUR + RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RMSe / ( RRSe * RRSe ) ) ) - ( DS + RMSe ) ) - DS ),MUC ) )", "obj1": 0.6277777777777778, "obj2": 0.2153463829538707}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.6074074074074074, "obj2": 0.2376433678088408}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6425925925925926, "obj2": 0.19787292109369886}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5037037037037037, "obj2": 0.3329792565768294}, {"determining": "( Min( Min( ( FirstVNF_CPU * Max( ( ( ARS - ( MDR + FirstVNF_CPU ) ) + PN ),RRS ) ) ,FirstVNF_Mem_Server ) ,MDR ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( CS + Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.2, "obj2": 0.6991567466804923}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.6444444444444445, "obj2": 0.19531775619915537}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( RRS + FirstVNF_RAM ),Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.8592592592592593, "obj2": 0.06340701129009188}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( PN * Max( BR,Max( Min( ACS ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( ( RMSe - CS ) + MUC ) * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + RCSe ) ) )", "obj1": 0.662962962962963, "obj2": 0.18319227602527838}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ARS ) + ( Min( ACS ,Const ) * Min( MRS ,( FirstVNF_Mem_Server / ACS ) ) ) )", "choosing": "( ( RCSe * ( MLU * ( DS - RCSe ) ) ) - RMSe )", "obj1": 0.8166666666666667, "obj2": 0.07428729391618283}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.18888888888888888, "obj2": 0.7046271932065532}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - MUR ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( ( Min( ( PN - MDR ) ,( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( DDR / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) + RMSe ) + ( Max( DS,( ( RRSe + RMSe ) / ( ( RRSe - Min( RCSe ,MLU ) ) - RRSe ) ) ) / ( MUM * ( RMSe / ( RCSe * Min( RCSe ,MUC ) ) ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.42818829408568254}, {"determining": "( ( ( Min( ( PN - MDR ) ,( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( DDR / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.5626665711936746}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - Max( Const,( FirstVNF_CPU * ( Max( ( ( ACS + ARS ) + MDR ),FirstVNF_CPU ) + BR ) ) ) ) )", "choosing": "Min( ( ( MUM / CS ) / CS ) ,Max( ( ( ( RMSe + ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.1439077409657111}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RCSe,( MUC - RMSe ) ) * MUR ) * ( ( ( MUC * ( DS + MUR ) ) + ( MUC * Min( DS ,MUM ) ) ) / MUM ) ) * ( RMSe + Min( ( RRSe + ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.8444444444444444, "obj2": 0.06722389167514803}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( PN + FirstVNF_Mem ) ) ) ) + ( ( ( MRS * DDR ) - MDR ) + ( PN - MDR ) ) ) + ( CRS * MDR ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe + DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( RCSe + ( Min( MUR ,MUM ) + Max( DS,MUR ) ) ) ) )", "obj1": 0.4388888888888889, "obj2": 0.40201955872201484}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( MUR + RRSe ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.6203703703703703, "obj2": 0.224233222881833}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( DDR + PN ) ,RRS ) ) ) ) * ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( MDR - PN ) - ( ( Min( AMS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( ( MLU * ( MUM - Min( ( Max( RCSe,DS ) * RMSe ) ,( MUR + ( MUC / RRSe ) ) ) ) ),( RRSe + MUR ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( ( DS / ( ( DS / ( DS * MUM ) ) * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + RMSe ) / ( MUC + RRSe ) ) )", "obj1": 0.687037037037037, "obj2": 0.16858549744027626}, {"determining": "( ( ( ( ( DDR + MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,( ARS / ( FirstVNF_RAM * Const ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( ( ( ( MUR + MUR ) + ( MUC + RMSe ) ) + ( ( RMSe + Min( RMSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2670010905927695}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.16404564496909477}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) / Min( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_CPU ) ,( MDR - PN ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( MUC * MUR ) + Max( ( ( DS + Min( MLU ,MLU ) ) / ( RMSe / MUM ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12945944767069278}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.32222222222222224, "obj2": 0.5434436710120202}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( CS ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.8074074074074075, "obj2": 0.07768227438028581}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5537932321277091}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) / ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / ( PN * DDR ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( MRS - PN ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MLU * Min( Max( Max( RMSe,RRSe ),Max( MUM,MUR ) ) ,( MUR / RCSe ) ) ) ) ) ) - Max( RMSe,Max( ( DS / ( MUM * CS ) ),MUC ) ) )", "obj1": 0.4166666666666667, "obj2": 0.43082899383498224}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( FirstVNF_Mem + RRS ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * ( MRS + FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS + Max( CS,MUC ) ),( MUR - RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( MUR,( MUR / ( DS * RCSe ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.20982041012167674}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( Min( PN ,Const ) + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,( ( CS + RRSe ) + ( CS + RRSe ) ) ) + RCSe ),MUC ) ) + ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) ) )", "obj1": 0.4777777777777778, "obj2": 0.36097634909266835}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) )", "obj1": 0.40925925925925927, "obj2": 0.4396280433247101}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.5018388828934122}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3574074074074074, "obj2": 0.5050117055121124}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + RRSe ) + ( MUM - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5574074074074075, "obj2": 0.2883020875095269}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( ( ARS - ( MDR + FirstVNF_CPU ) ) + FirstVNF_RAM ) ) ,MRS ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( ( ( DS / ( RCSe + MUC ) ) + MUM ) + RRSe ) + ( CS + RRSe ) ) ) ) )", "obj1": 0.9518518518518518, "obj2": 0.016883968160230963}, {"determining": "( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.27942130357279105}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS / FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS / MUC ) ) / ( ( RMSe + Max( ( Min( Max( MUM,RCSe ) ,MUR ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09934000637211733}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) + RMSe ) + ( Max( DS,( ( RRSe + RMSe ) / ( ( RRSe - Min( RCSe ,MLU ) ) - RRSe ) ) ) / ( MUM * ( RMSe / ( RCSe * Min( RCSe ,MUC ) ) ) ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2856829806168484}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7055555555555556, "obj2": 0.15095330155092912}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.47962962962962963, "obj2": 0.35600515564424023}], "21": [{"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( MUR + Min( RRSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,( FirstVNF_CPU * Max( RRS,( FirstVNF_CPU_Server + Min( Const ,Const ) ) ) ) ) ,MDR ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) - ( ( FirstVNF_RAM_Server * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) / DS ) - MUM ) * ( RMSe * Min( ( MLU * Min( MUC ,RRSe ) ) ,( ( RCSe - RMSe ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( DDR * MRS ) / Max( ( Const * BR ),CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ACS ,Max( Max( RRS,FirstVNF_CPU ),FirstVNF_RAM ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( RRSe / RRSe ),Min( DS ,MUM ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) )", "obj1": 0.4537037037037037, "obj2": 0.3702664479259933}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0372015470821292}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ACS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUR,( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.15, "obj2": 0.7594363318607108}, {"determining": "( ( ( ( PN * ( ( RRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( ARS - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( MUM + RRSe ) ) ) - ( ( Max( MUC,( Max( CS,DS ) / ( ( MUR - Max( DS,DS ) ) - ( MUM + Max( MUC,RMSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.3476921865976444}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ),FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC / DS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7055555555555556, "obj2": 0.15095330155092912}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / DDR ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / CS )", "obj1": 0.662962962962963, "obj2": 0.18038028199830639}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( CS ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.8074074074074075, "obj2": 0.07768227438028581}, {"determining": "( ( PN * ( ( ( ( ( PN - DDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( MUR,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5731742800534977}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / Max( ( Const * BR ),CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,( MUC - RMSe ) ) * MUR ) * ( ( ( MUC * ( DS + MUR ) ) + ( MUC * Min( DS ,MUM ) ) ) / MUM ) ) * ( RMSe + Min( ( RRSe + ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6840324754913392}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * MDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( RMSe - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.4981481481481482, "obj2": 0.3307923062624376}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( MUR + RRSe ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.5370370370370371, "obj2": 0.3033032620903692}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( ACS,( PN / FirstVNF_RAM ) ),Max( ( ( MDR + ( AMS - MRS ) ) * FirstVNF_CPU_Server ),( AMS - PN ) ) ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU - DS ),( MLU - RMSe ) ) * ( RMSe * ( Min( ( MUR / RMSe ) ,Min( ( ( ( RCSe + CS ) + ( RRSe + DS ) ) * Max( CS,MUC ) ) ,RCSe ) ) * MLU ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6752257719278503}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - Max( Const,( FirstVNF_CPU * ( Max( ( ( ACS + ARS ) + MDR ),FirstVNF_CPU ) + BR ) ) ) ) )", "choosing": "Min( ( ( MUM / CS ) / CS ) ,Max( ( ( ( RMSe + ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.1439077409657111}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.16404564496909477}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) ) )", "obj1": 0.4388888888888889, "obj2": 0.40201955872201484}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.39444444444444443, "obj2": 0.456017962748406}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( RMSe - ( CS - CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.5891983407699237}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( ACS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( RMSe * Max( ( ( RCSe + MUC ) + ( ( RRSe - RRSe ) * DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.7870370370370371, "obj2": 0.0879671617676103}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11066851083902372}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5111111111111111, "obj2": 0.3233462386467193}, {"determining": "( ( Min( MRS ,Min( MRS ,RRS ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( DS,RCSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6833333333333333, "obj2": 0.17060415826910186}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.22407407407407406, "obj2": 0.6691281068271053}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( FirstVNF_Mem + RRS ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * ( MRS + FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS + Max( CS,MUC ) ),( MUR - RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( MUR,( MUR / ( DS * RCSe ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.20982041012167674}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.3074074074074074, "obj2": 0.5537932321277091}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * Min( ( CRS / FirstVNF_Mem ) ,Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( MUR * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2759259259259259, "obj2": 0.5961434547299711}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.37592592592592594, "obj2": 0.4851412415246541}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ARS ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( ( RCSe - DS ) + RRSe ) ) )", "obj1": 0.43703703703703706, "obj2": 0.4151837641158397}, {"determining": "( Min( Min( ( FirstVNF_CPU * Max( ( ( ARS - ( MDR + FirstVNF_CPU ) ) + PN ),RRS ) ) ,FirstVNF_Mem_Server ) ,MDR ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( CS + Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.2, "obj2": 0.6991567466804923}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.5259259259259259, "obj2": 0.3108750935884669}, {"determining": "( Min( FirstVNF_CPU_Server ,MDR ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Min( Max( ( CS * Max( CS,DS ) ),RRSe ) ,( MUR / RCSe ) ) - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( MUR + Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7689398505802131}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - Max( MDR,AMS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + PN ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( RCSe + ( Min( Max( ( MUM + MUR ),MUM ) ,RCSe ) + RCSe ) ) ) )", "obj1": 0.4388888888888889, "obj2": 0.40201955872201484}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),Max( ACS,ACS ) ) ) ) + ( ( PN - MDR ) + ( MDR - ACS ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC / Min( RMSe ,RMSe ) ) ,( MUC / DS ) ) ,RCSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.5407407407407407, "obj2": 0.2886940220110449}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.32592592592592595, "obj2": 0.5322679831692783}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Max( FirstVNF_RAM,CRS ) * Max( FirstVNF_RAM,MRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,RRS ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) + ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( ( ( ( CS * RMSe ) - ( RRSe + MUR ) ) - Max( ( MUR + RRSe ),( MLU * CS ) ) ) - ( Max( MUR,( MUM * Min( ( Max( ( DS / RMSe ),( MUC / MLU ) ) + Max( MLU,CS ) ) ,MUC ) ) ) / RMSe ) )", "obj1": 0.5203703703703704, "obj2": 0.3156979646362303}, {"determining": "( Min( FirstVNF_CPU ,ACS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( ( MUC - ( RRSe * ( Min( MLU ,RRSe ) - Max( Max( DS,MLU ),DS ) ) ) ) ,( ( RCSe - Max( ( MUR + Min( MUM ,MUR ) ),( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5665075785831442}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * ( DDR * MRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.2351851851851852, "obj2": 0.6418628101655257}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( ( ARS - ( MDR + FirstVNF_CPU ) ) + FirstVNF_RAM ) ) ,MRS ) )", "choosing": "( Min( ( RCSe + DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( RCSe + ( Min( MUR ,MUM ) + Max( DS,MUR ) ) ) ) )", "obj1": 0.95, "obj2": 0.019119560103644646}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + RRSe ) + ( MUM - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02687597810974018}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5851851851851851, "obj2": 0.24948147320397213}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + RRSe ) + ( MUM - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02687597810974018}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS / FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS / MUC ) ) / ( ( RMSe + Max( ( Min( Max( MUM,RCSe ) ,MUR ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09934000637211733}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( RMSe - ( RCSe * Min( ( RMSe * ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) ) ,RMSe ) ) )", "obj1": 0.762962962962963, "obj2": 0.10300807017612294}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.42962962962962964, "obj2": 0.4214711719642947}, {"determining": "( ( PN - ( ( ( PN - FirstVNF_RAM ) / ( ( ( DDR * ACS ) / ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) - ( Max( FirstVNF_RAM,FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * ( RRSe / RCSe ) ) ) + RMSe ) / ( MUC + RRSe ) ) )", "obj1": 0.9925925925925926, "obj2": 0.0018132844209798064}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) / Min( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_CPU ) ,( MDR - PN ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( MUC * MUR ) + Max( ( ( DS + Min( MLU ,MLU ) ) / ( RMSe / MUM ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12945944767069278}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ARS / AMS ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - ( RRSe * DS ) ) - Max( ( MLU * MUM ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3425925925925926, "obj2": 0.5153408845746762}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * MDR ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.24475729170679988}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4723542646472011}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4723542646472011}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.6425925925925926, "obj2": 0.1968307737660602}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( Min( BR ,CRS ) * ( FirstVNF_Mem_Server - ACS ) ) / FirstVNF_Mem_Server ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Max( MUR,Min( MUR ,RMSe ) ) ) )", "obj1": 0.8296296296296296, "obj2": 0.06914945700619488}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.8703703703703703, "obj2": 0.05673476630713927}, {"determining": "( ( ( ( ( DDR + MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,( ARS / ( FirstVNF_RAM * Const ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( ( ( ( MUR + MUR ) + ( MUC + RMSe ) ) + ( ( RMSe + Min( RMSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2670010905927695}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ( BR - AMS ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * Min( FirstVNF_RAM ,Max( MRS,AMS ) ) ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_Mem_Server ) - MDR ) + Min( FirstVNF_RAM_Server ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( CS - MUR ),CS ),RRSe ) * ( RMSe * Min( Min( ( DS - Max( ( CS / MUM ),MLU ) ) ,MUR ) ,( ( DS / RCSe ) + RRSe ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.43962804332471}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + FirstVNF_CPU ),FirstVNF_CPU_Server ) ) * Min( FirstVNF_CPU ,BR ) ) + DDR ) ,( ARS / ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11460253776579704}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( ( Min( ( PN - MDR ) ,( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( DDR / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.5626665711936746}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( ( ARS - ( MDR + FirstVNF_CPU ) ) + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,CS ) * DS ) / ( RRSe + ( CS + ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,RRSe ) ) * CS ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012797469411385874}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( BR / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( CS * MUC ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.35185185185185186, "obj2": 0.5091830751068376}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5451950100831746}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6018518518518519, "obj2": 0.23524084492754588}, {"determining": "( ( ( ( Min( DDR ,MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Min( MRS ,RRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / Const ) ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( Min( MUR ,RCSe ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * MUR ) ) * ( RRSe * RMSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.23341227039278026}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ( FirstVNF_RAM_Server / FirstVNF_RAM_Server ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * Min( ( CRS / FirstVNF_Mem ) ,Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( Min( FirstVNF_CPU ,Max( ARS,ACS ) ) + ( PN - MDR ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) * ( CS * RMSe ) ) - Max( ( MUM + MUM ),( RRSe + MUR ) ) ) - ( MUR + MUC ) )", "obj1": 0.5018518518518519, "obj2": 0.3306320877032078}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.5018388828934122}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6574242689600505}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5273800251976424}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6574242689600505}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( ( Min( RRS ,RRS ) - ACS ),ACS ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + ( ( ( ( RRS / CRS ) - BR ) + FirstVNF_RAM ) * MRS ) ) ) )", "choosing": "( ( Max( RRSe,Max( Max( ( MUC / MUC ),DS ),( DS * RMSe ) ) ) - MUM ) / ( ( RMSe + Max( ( Min( MUC ,CS ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9055555555555556, "obj2": 0.04309907836478274}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - MUR ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.32222222222222224, "obj2": 0.5434436710120202}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ARS ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( ( RCSe - DS ) + RRSe ) ) )", "obj1": 0.4222222222222222, "obj2": 0.4251005375727014}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - FirstVNF_CPU_Server ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * ( PN * ( AMS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,Min( ( RCSe + ( MLU * RRSe ) ) ,Max( DS,DS ) ) ) * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RRSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4666666666666667, "obj2": 0.3624699660976334}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) )", "choosing": "( ( RCSe - DS ) / ( ( Min( MUC ,CS ) + RRSe ) + ( CS + Min( Min( Min( RMSe ,( Max( RRSe,RRSe ) / ( MUR - RMSe ) ) ) ,( RMSe - CS ) ) ,CS ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12570074226285058}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( RMSe * Max( ( ( RCSe + MUC ) + ( ( RRSe - RRSe ) * DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.6481481481481481, "obj2": 0.19377231848480866}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.7796296296296297, "obj2": 0.0920313224798366}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( DDR / FirstVNF_CPU ) - ( ( Min( MRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + Max( ( PN - MDR ),Min( ( BR * MDR ) ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS - ( Min( MDR ,FirstVNF_Mem_Server ) + ( BR / MRS ) ) ),( BR / Min( ACS ,( AMS / Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUC * CS ) ) - Max( ( CS * MLU ),( Max( DS,MUM ) + MUR ) ) ) - ( ( ( DS / ( Min( MUC ,Min( MUM ,( DS / RCSe ) ) ) * Max( ( ( MUC + MUC ) + ( DS - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + ( RCSe / CS ) ) / RMSe ) )", "obj1": 0.8574074074074074, "obj2": 0.06435948616460503}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) + RMSe ) + ( Max( DS,( ( RRSe + RMSe ) / ( ( RRSe - Min( RCSe ,MLU ) ) - RRSe ) ) ) / ( MUM * ( RMSe / ( RCSe * Min( RCSe ,MUC ) ) ) ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2856829806168484}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( DDR + PN ) ,RRS ) ) ) ) * ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( MDR - PN ) - ( ( Min( AMS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( ( MLU * ( MUM - Min( ( Max( RCSe,DS ) * RMSe ) ,( MUR + ( MUC / RRSe ) ) ) ) ),( RRSe + MUR ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( ( DS / ( ( DS / ( DS * MUM ) ) * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + RMSe ) / ( MUC + RRSe ) ) )", "obj1": 0.687037037037037, "obj2": 0.16858549744027626}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( AMS * Min( MRS ,AMS ) ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * DDR ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( ( ( RMSe + MUR ) - ( MLU / Max( CS,RRSe ) ) ) - ( Max( MUR,Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.8240740740740741, "obj2": 0.071397865563011}, {"determining": "( ( ( ( ( DDR - MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( FirstVNF_RAM_Server / AMS ) ) + ( FirstVNF_Mem * CRS ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MRS ) ) ,MRS ) )", "choosing": "( ( DS - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( ( ( DS / ( RCSe + MUC ) ) + MUC ) + ( Max( ( RMSe + MUR ),Min( DS ,MUM ) ) + RMSe ) ) + ( RRSe + RRSe ) ) ) ) )", "obj1": 0.9592592592592593, "obj2": 0.015508220041534624}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15925925925925927, "obj2": 0.7443504316082814}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ACS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( MUR + Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.37037037037037035, "obj2": 0.48912753620478105}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.8648148148148148, "obj2": 0.060828869362319106}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.8796296296296297, "obj2": 0.051890839544842735}], "22": [{"determining": "( Min( Min( BR ,( FirstVNF_CPU * Max( RRS,( FirstVNF_CPU_Server + Min( Const ,Const ) ) ) ) ) ,MDR ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) - ( ( FirstVNF_RAM_Server * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) / DS ) - MUM ) * ( RMSe * Min( ( MLU * Min( MUC ,RRSe ) ) ,( ( RCSe - RMSe ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( MUR + Min( RRSe ,MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) + ( ( ( ( DDR * MRS ) / Max( BR,Const ) ) + ( ( PN / MDR ) - ( Min( ( Min( ARS ,AMS ) + ( RRS - AMS ) ) ,FirstVNF_RAM ) * FirstVNF_CPU ) ) ) + ( Min( ( MDR - FirstVNF_RAM_Server ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Min( ( ( Min( RMSe ,RRSe ) * RRSe ) - Max( MUM,RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ,( ( MUR / DS ) - RRSe ) ) + Max( ( ( Min( RMSe ,( MLU + MUR ) ) / CS ) / DS ),( MLU - RMSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - FirstVNF_CPU_Server ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * ( PN * ( AMS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,Min( ( RCSe + ( MLU * RRSe ) ) ,Max( DS,DS ) ) ) * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RRSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4666666666666667, "obj2": 0.3624699660976334}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,MDR ) ) ) ) + ( ( MDR + CRS ) * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( CS * MLU ),( RRSe / MUR ) ) ) - ( MUR - RRSe ) )", "obj1": 0.45185185185185184, "obj2": 0.37047544055496545}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( AMS / FirstVNF_CPU ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ACS ) ) ) ) ),Const ) - ARS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC - DS ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( DS,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6259259259259259, "obj2": 0.21612320817533118}, {"determining": "( Min( Min( ( FirstVNF_CPU * Max( ( ( ARS - ( MDR + FirstVNF_CPU ) ) + PN ),RRS ) ) ,FirstVNF_Mem_Server ) ,MDR ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( CS + Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.2, "obj2": 0.6991567466804923}, {"determining": "( ( ( ( Min( DDR ,MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Min( MRS ,RRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / Const ) ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( Min( MUR ,RCSe ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * MUR ) ) * ( RRSe * RMSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.23341227039278026}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),Max( ACS,ACS ) ) ) ) + ( ( PN - MDR ) + ( MDR - ACS ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC / Min( RMSe ,RMSe ) ) ,( MUC / DS ) ) ,RCSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.5407407407407407, "obj2": 0.2886940220110449}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) + RMSe ) + ( Max( DS,( ( RRSe + RMSe ) / ( ( RRSe - Min( RCSe ,MLU ) ) - RRSe ) ) ) / ( MUM * ( RMSe / ( RCSe * Min( RCSe ,MUC ) ) ) ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2856829806168484}, {"determining": "( ( ( ( PN * ( ( RRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( ARS - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( MUM + RRSe ) ) ) - ( ( Max( MUC,( Max( CS,DS ) / ( ( MUR - Max( DS,DS ) ) - ( MUM + Max( MUC,RMSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.3476921865976444}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / Max( ( Const * BR ),CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,( MUC - RMSe ) ) * MUR ) * ( ( ( MUC * ( DS + MUR ) ) + ( MUC * Min( DS ,MUM ) ) ) / MUM ) ) * ( RMSe + Min( ( RRSe + ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6840324754913392}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( MDR,CRS ) ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_Mem ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( Min( Min( ( CS * RCSe ) ,( Min( MUM ,Min( MUR ,DS ) ) - RCSe ) ) ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( RCSe ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.5666666666666667, "obj2": 0.27317650401142646}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( ACS,( PN / FirstVNF_RAM ) ),Max( ( ( MDR + ( AMS - MRS ) ) * FirstVNF_CPU_Server ),( AMS - PN ) ) ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( MLU - DS ),( MLU - RMSe ) ) * ( RMSe * ( Min( ( MUR / RMSe ) ,Min( ( ( ( RCSe + CS ) + ( RRSe + DS ) ) * Max( CS,MUC ) ) ,RCSe ) ) * MLU ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6752257719278503}, {"determining": "( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ( ( PN * Max( BR,( ( FirstVNF_RAM * AMS ) + ( CRS + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5166666666666667, "obj2": 0.3093386056070891}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( CRS * FirstVNF_Mem ) )", "choosing": "( RMSe - ( RCSe * Min( ( RMSe * ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) ) ,RMSe ) ) )", "obj1": 0.762962962962963, "obj2": 0.10300807017612294}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ARS ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( ( RCSe - DS ) + RRSe ) ) )", "obj1": 0.4222222222222222, "obj2": 0.4251005375727014}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( ( Min( RRS ,RRS ) - ACS ),ACS ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + ( ( ( ( RRS / CRS ) - BR ) + FirstVNF_RAM ) * MRS ) ) ) )", "choosing": "( ( Max( RRSe,Max( Max( ( MUC / MUC ),DS ),( DS * RMSe ) ) ) - MUM ) / ( ( RMSe + Max( ( Min( MUC ,CS ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9055555555555556, "obj2": 0.04309907836478274}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) ) )", "obj1": 0.4388888888888889, "obj2": 0.40201955872201484}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,Max( MLU,( RRSe + MLU ) ) ) ) ) )", "obj1": 0.3277777777777778, "obj2": 0.5248250200955324}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.1259259259259259, "obj2": 0.796586015888108}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / MUR )", "obj1": 0.7185185185185186, "obj2": 0.13701141501409725}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - Max( MDR,AMS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + PN ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( RCSe + ( Min( Max( ( MUM + MUR ),MUM ) ,RCSe ) + RCSe ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.14591625033832728}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.16404564496909477}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.22407407407407406, "obj2": 0.6691281068271053}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.44972804821360357}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ACS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( MUR + Min( MUM ,MUR ) ) / ( ( MUM * CS ) - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.37037037037037035, "obj2": 0.4862138545254977}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ACS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( DS,RCSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7256444367470393}, {"determining": "( ( ( ( ( ( MDR + FirstVNF_CPU ) * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( PN ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( ACS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( DS - ( RCSe * Min( ( RMSe * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ,RMSe ) ) )", "obj1": 0.8222222222222222, "obj2": 0.0711057790641557}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * MDR ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.24570597738419286}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ARS ) ) ) ) ) + ( ( PN - MDR ) + Min( ( ( ACS * DDR ) / ARS ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( ( RCSe - DS ) + RRSe ) ) )", "obj1": 0.43703703703703706, "obj2": 0.4151837641158397}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5111111111111111, "obj2": 0.3233462386467193}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( MUR + RRSe ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.5370370370370371, "obj2": 0.3033032620903692}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ( BR - AMS ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * Min( FirstVNF_RAM ,Max( MRS,AMS ) ) ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_Mem_Server ) - MDR ) + Min( FirstVNF_RAM_Server ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( CS - MUR ),CS ),RRSe ) * ( RMSe * Min( Min( ( DS - Max( ( CS / MUM ),MLU ) ) ,MUR ) ,( ( DS / RCSe ) + RRSe ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.43962804332471}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS / FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS / MUC ) ) / ( ( RMSe + Max( ( Min( Max( MUM,RCSe ) ,MUR ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09934000637211733}, {"determining": "( ( PN * ( ( ( ( ( PN - DDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( MUR,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5731742800534977}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.23501331165125286}, {"determining": "( Min( FirstVNF_CPU ,ACS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( ( MUC - ( RRSe * ( Min( MLU ,RRSe ) - Max( Max( DS,MLU ),DS ) ) ) ) ,( ( RCSe - Max( ( MUR + Min( MUM ,MUR ) ),( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5665075785831442}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( BR / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( CS * MUC ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUR ) + ( RMSe - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3611111111111111, "obj2": 0.5013601304460115}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.37592592592592594, "obj2": 0.4851412415246541}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( ( PN * AMS ) * ( DDR * MRS ) ) * ( ( CRS / FirstVNF_Mem ) / Max( Const,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MLU ) - ( CS * RMSe ) ) - Max( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( Max( MUC,MUC ) * MUC ) ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.2351851851851852, "obj2": 0.6418628101655257}, {"determining": "( ( ( ( ( DDR + MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,( ARS / ( FirstVNF_RAM * Const ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( ( ( ( MUR + MUR ) + ( MUC + RMSe ) ) + ( ( RMSe + Min( RMSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2670010905927695}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04671261295902273}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - ( ( FirstVNF_Mem / ( BR + AMS ) ) / CRS ) ) + ( PN - CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ARS ,( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RCSe ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( ( ( RCSe / MUM ) / ( RMSe * MUC ) ) ,RRSe ) + RCSe ),MUC ) ) + ( RCSe + ( Min( MUR ,MUM ) + RCSe ) ) ) )", "obj1": 0.4388888888888889, "obj2": 0.40201955872201484}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( RMSe + RRSe ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.5314814814814814, "obj2": 0.30679996961563627}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Max( FirstVNF_RAM,CRS ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) + ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) ) ) )", "choosing": "( Max( ( RMSe - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.48703703703703705, "obj2": 0.342693170798566}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( FirstVNF_Mem + RRS ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * ( MRS + FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS + Max( CS,MUC ) ),( MUR - RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( MUR,( MUR / ( DS * RCSe ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.20982041012167674}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.32592592592592595, "obj2": 0.5322679831692783}, {"determining": "( ( ( ( ( DDR - MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( FirstVNF_RAM_Server / AMS ) ) + ( FirstVNF_Mem * CRS ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MRS ) ) ,MRS ) )", "choosing": "( ( DS - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( ( ( DS / ( RCSe + MUC ) ) + MUC ) + ( Max( ( RMSe + MUR ),Min( DS ,MUM ) ) + RMSe ) ) + ( RRSe + RRSe ) ) ) ) )", "obj1": 0.9592592592592593, "obj2": 0.015508220041534624}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( CRS * FirstVNF_Mem ) ) ) ) + ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ACS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( ( Max( RRSe,RRSe ) / ( MUR - RMSe ) ),( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7609678738802761}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4723542646472011}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( CS ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.8074074074074075, "obj2": 0.07768227438028581}, {"determining": "( ( ( FirstVNF_Mem * CRS ) + ( ( PN * Max( BR,( FirstVNF_Mem + ( ( BR + FirstVNF_CPU ) - ( ACS - BR ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( DDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( Min( RCSe ,MUM ) / ( MUM * Max( ( ( MUC - MUC ) + Max( MUC,RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4723542646472011}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0372015470821292}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - MUR ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.5891983407699237}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - RRS ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( ( ( ( MUC / CS ) / CS ) + MUM ),Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( CS + Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.4962962962962963, "obj2": 0.33680808847865557}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - RMSe ) + RRSe ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.43962804332471}, {"determining": "( Min( MDR ,Min( ( FirstVNF_CPU * Max( ( FirstVNF_CPU_Server + PN ),AMS ) ) ,FirstVNF_Mem_Server ) ) + ( PN * FirstVNF_RAM_Server ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( RRSe / RRSe ),Min( DS ,MUM ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + ( ( MUR / ( MLU - MUC ) ) / MUR ) )", "obj1": 0.10925925925925926, "obj2": 0.825677771997286}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ACS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUR,( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.15, "obj2": 0.7594363318607108}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) )", "obj1": 0.4537037037037037, "obj2": 0.3702664479259933}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5851851851851851, "obj2": 0.24948147320397213}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * Min( ( CRS / FirstVNF_Mem ) ,Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( MUR * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2759259259259259, "obj2": 0.5961434547299711}, {"determining": "( ( ( ACS * DDR ) / FirstVNF_Mem ) - ( ( FirstVNF_RAM - ( DDR + ( Max( ( RRS + ARS ),MDR ) - ( Min( ( MDR * FirstVNF_CPU ) ,ARS ) + Const ) ) ) ) / ( BR - PN ) ) )", "choosing": "( ( Max( ( ( Max( ( MLU / DS ),RCSe ) / Max( ( ( MUC + MUC ) + Max( MUR,RMSe ) ),CS ) ) * MLU ),( RRSe + DS ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) - ( ( Min( Min( RMSe ,RRSe ) ,MUM ) / CS ) * MUR ) )", "obj1": 0.12407407407407407, "obj2": 0.8035396157942888}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + RRSe ) + ( MUM - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02687597810974018}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0372015470821292}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( Min( RMSe ,( DS + RCSe ) ) * ( RMSe - ( MUC / RMSe ) ) ) * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ARS / AMS ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - ( RRSe * DS ) ) - Max( ( MLU * MUM ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3425925925925926, "obj2": 0.5153408845746762}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - Min( Min( RRS ,FirstVNF_Mem ) ,MRS ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_CPU ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( RCSe,( MLU * CS ) ) ) - ( ( ( DS / ( MUM * ( CS / ( ( CS * RRSe ) - CS ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6407407407407407, "obj2": 0.20570211162016128}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.8648148148148148, "obj2": 0.06057780811357414}, {"determining": "( ( PN * MDR ) + ( ( Max( Max( ACS,( PN / FirstVNF_RAM ) ),( ( ( RRS - MRS ) + PN ) / MDR ) ) + ( FirstVNF_CPU + FirstVNF_Mem ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7496420128998567}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / DDR ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / CS )", "obj1": 0.6685185185185185, "obj2": 0.17927544755807573}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6574242689600505}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.22777777777777777, "obj2": 0.6574242689600505}, {"determining": "( ( Min( Const ,FirstVNF_Mem_Server ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( RMSe - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + ( Max( MUR,( MLU * RRSe ) ) / RMSe ) ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8129328058770515}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.39444444444444443, "obj2": 0.456017962748406}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + FirstVNF_CPU ),FirstVNF_CPU_Server ) ) * Min( FirstVNF_CPU ,BR ) ) + DDR ) ,( ARS / ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11460253776579704}, {"determining": "( ( ( Min( Const ,DDR ) + ( ( PN - MDR ) + Min( ( MDR * FirstVNF_CPU ) ,DDR ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * ( RMSe / ( MUC + MUM ) ) ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11066851083902372}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.7796296296296297, "obj2": 0.0920313224798366}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( DDR / FirstVNF_CPU ) - ( ( Min( MRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + Max( ( PN - MDR ),Min( ( BR * MDR ) ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS - ( Min( MDR ,FirstVNF_Mem_Server ) + ( BR / MRS ) ) ),( BR / Min( ACS ,( AMS / Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUC * CS ) ) - Max( ( CS * MLU ),( Max( DS,MUM ) + MUR ) ) ) - ( ( ( DS / ( Min( MUC ,Min( MUM ,( DS / RCSe ) ) ) * Max( ( ( MUC + MUC ) + ( DS - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + ( RCSe / CS ) ) / RMSe ) )", "obj1": 0.8574074074074074, "obj2": 0.06435948616460503}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + CS ),CS ) ) ,RMSe ) ) )", "obj1": 0.8703703703703703, "obj2": 0.056728344406262315}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5536820589230697}, {"determining": "( ( ( ( ACS * DDR ) / ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,PN ) ) / ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( RRSe + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * Max( ( ( MUC * MUC ) + ( MLU / MLU ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15925925925925927, "obj2": 0.7381347785412387}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5451950100831746}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( ( ARS - ( MDR + FirstVNF_CPU ) ) + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,CS ) * DS ) / ( RRSe + ( CS + ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,RRSe ) ) * CS ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012797469411385874}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.39444444444444443, "obj2": 0.456017962748406}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) / Min( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_CPU ) ,( MDR - PN ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( MUC * MUR ) + Max( ( ( DS + Min( MLU ,MLU ) ) / ( RMSe / MUM ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12945944767069278}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3425925925925926, "obj2": 0.5153408845746762}], "23": [{"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR - MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( FirstVNF_RAM_Server / AMS ) ) + ( FirstVNF_Mem * CRS ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MRS ) ) ,MRS ) )", "choosing": "( ( DS - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( ( ( DS / ( RCSe + MUC ) ) + MUC ) + ( Max( ( RMSe + MUR ),Min( DS ,MUM ) ) + RMSe ) ) + ( RRSe + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Min( BR ,( FirstVNF_CPU * Max( RRS,( FirstVNF_CPU_Server + Min( Const ,Const ) ) ) ) ) ,MDR ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) - ( ( FirstVNF_RAM_Server * PN ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) / DS ) - MUM ) * ( RMSe * Min( ( MLU * Min( MUC ,RRSe ) ) ,( ( RCSe - RMSe ) + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) + ( ( ( ( DDR * MRS ) / Max( BR,Const ) ) + ( ( PN / MDR ) - ( Min( ( Min( ARS ,AMS ) + ( RRS - AMS ) ) ,FirstVNF_RAM ) * FirstVNF_CPU ) ) ) + ( Min( ( MDR - FirstVNF_RAM_Server ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Min( ( ( Min( RMSe ,RRSe ) * RRSe ) - Max( MUM,RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ,( ( MUR / DS ) - RRSe ) ) + Max( ( ( Min( RMSe ,( MLU + MUR ) ) / CS ) / DS ),( MLU - RMSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( RRSe / RRSe ),Max( MUM,RRSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.42962962962962964, "obj2": 0.41431062526312373}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( RMSe + Max( ( RMSe * MUM ),MUC ) ) ) ) )", "obj1": 0.43703703703703706, "obj2": 0.38293539284009387}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + RRSe ) + ( MUM - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02687597810974018}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - FirstVNF_CPU_Server ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * ( PN * ( AMS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,Min( ( RCSe + ( MLU * RRSe ) ) ,Max( DS,DS ) ) ) * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RRSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4666666666666667, "obj2": 0.3624699660976334}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( ACS * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( MUM - ( MLU * CS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5111111111111111, "obj2": 0.32313504194918136}, {"determining": "( ( ( CRS * ( ARS + ( RRS * MDR ) ) ) / FirstVNF_Mem_Server ) + Min( RRS ,Max( Max( ( ( ( Max( DDR,MRS ) / Max( FirstVNF_Mem,FirstVNF_RAM_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),( ( AMS - ARS ) - FirstVNF_CPU ) ),ACS ) ) )", "choosing": "( ( ( Min( Min( RMSe ,( ( MUR + MLU ) - ( Max( RCSe,DS ) / ( RMSe + RCSe ) ) ) ) ,RCSe ) - Max( RMSe,( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) * MUC ) - ( Max( ( ( RCSe * MLU ) * MLU ),RRSe ) + ( RRSe - MUM ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7750410719483585}, {"determining": "( Min( FirstVNF_CPU ,ACS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( ( MUC - ( RRSe * ( Min( MLU ,RRSe ) - Max( Max( DS,MLU ),DS ) ) ) ) ,( ( RCSe - Max( ( MUR + Min( MUM ,MUR ) ),( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5665075785831442}, {"determining": "( ( ( ( Min( DDR ,MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Min( MRS ,RRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / Const ) ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( Min( MUR ,RCSe ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * MUR ) ) * ( RRSe * RMSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.23341227039278026}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - Min( Min( RRS ,FirstVNF_Mem ) ,MRS ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_CPU ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( RCSe,( MLU * CS ) ) ) - ( ( ( DS / ( MUM * ( CS / ( ( CS * RRSe ) - CS ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6407407407407407, "obj2": 0.20570211162016128}, {"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem / CRS ) ) + Min( ( PN - ( PN - Min( DDR ,( ACS / BR ) ) ) ) ,( MDR + Min( MRS ,ARS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( Max( DS,Max( RCSe,Max( ( ( RRSe / CS ) / ( RMSe + MUM ) ),( MUR * DS ) ) ) ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - Max( ( MUC * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2735704438343623}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( AMS / FirstVNF_CPU ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ACS ) ) ) ) ),Const ) - ARS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC - DS ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( DS,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6259259259259259, "obj2": 0.21612320817533118}, {"determining": "( ( ( ( PN * ( ( RRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( ARS - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( MUM + RRSe ) ) ) - ( ( Max( MUC,( Max( CS,DS ) / ( ( MUR - Max( DS,DS ) ) - ( MUM + Max( MUC,RMSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.3476921865976444}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( Const + CRS ) * ARS ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( PN ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( CRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( MUR + CS ),MUC ) ) + Max( RRSe,CS ) ) )", "obj1": 0.7944444444444444, "obj2": 0.08547880391184921}, {"determining": "( ( PN * ( ( ( ( ( PN - DDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( MUR,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.28703703703703703, "obj2": 0.5731742800534977}, {"determining": "( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ( ( PN * Max( BR,( ( FirstVNF_RAM * AMS ) + ( CRS + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5166666666666667, "obj2": 0.3093386056070891}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) )", "obj1": 0.9518518518518518, "obj2": 0.01964389641132686}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.5891983407699237}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( CRS * FirstVNF_Mem ) ) ) ) + ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ACS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( ( Max( RRSe,RRSe ) / ( MUR - RMSe ) ),( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7609678738802761}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5451950100831746}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.1259259259259259, "obj2": 0.796586015888108}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ( FirstVNF_CPU + Const ) + ( CRS * ( ARS - Min( ( FirstVNF_Mem_Server / Max( AMS,MRS ) ) ,MDR ) ) ) ) + ( RRS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),Max( RRSe,( MUC / MUR ) ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * RMSe ),CS ) * ( ( ( RCSe + MUM ) + RCSe ) / ( RCSe + MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.5052186198997247}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Max( CRS,MRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( Max( PN,FirstVNF_CPU ) + BR ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( MUM * Max( DS,RCSe ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6981481481481482, "obj2": 0.16052543636475156}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * Min( ( CRS / FirstVNF_Mem ) ,Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( MUR * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2759259259259259, "obj2": 0.5961434547299711}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( Const / FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( PN * MDR ) + DDR ) + ( PN - MDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( ( MUM - RRSe ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,( ( RMSe + RCSe ) / ( Max( CS,MUR ) / DS ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.1962962962962963, "obj2": 0.6945582881051018}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * MDR ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.24570597738419286}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7042291897077725}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( ( MRS * DDR ) * Min( PN ,Const ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - ( CRS * ( FirstVNF_Mem_Server + AMS ) ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ACS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,Min( Max( CS,Max( ( Min( RRSe ,CS ) / RCSe ),MUC ) ) ,MUR ) ) - ( RMSe / Max( ( RMSe / ( MUM * RCSe ) ),MUM ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6395076488859971}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( Max( AMS,BR ) ,( MDR - RRS ) ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - AMS ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( RCSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( Max( CS,RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.7148148148148148, "obj2": 0.13203741865155338}, {"determining": "( ( PN * ( ( ( ( ( DDR * MRS ) / Max( ( Const * BR ),CRS ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) ) ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - Max( MDR,FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,( MUC - RMSe ) ) * MUR ) * ( ( ( MUC * ( DS + MUR ) ) + ( MUC * Min( DS ,MUM ) ) ) / MUM ) ) * ( RMSe + Min( ( RRSe + ( RCSe - ( ( MUR + Min( RRSe ,MUR ) ) / ( RMSe - RMSe ) ) ) ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6840324754913392}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_Mem ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / DDR ) ) ) ) + ( ( PN - MDR ) + Min( ( MDR * PN ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( MLU * MUC ) ) - Max( MUM,DS ) )", "obj1": 0.6685185185185185, "obj2": 0.17630701163520393}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + MDR ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUR + RRSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.4185185185185185, "obj2": 0.4287983757589855}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( RRSe * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.8814814814814815, "obj2": 0.053195635433727954}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( Max( ( ( RMSe - CS ) + MUR ),MUC ) - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.45, "obj2": 0.3804115515446545}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUC ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.23452230812397748}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( DDR / FirstVNF_CPU ) - ( ( Min( MRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + Max( ( PN - MDR ),Min( ( BR * MDR ) ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS - ( Min( MDR ,FirstVNF_Mem_Server ) + ( BR / MRS ) ) ),( BR / Min( ACS ,( AMS / Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUC * CS ) ) - Max( ( CS * MLU ),( Max( DS,MUM ) + MUR ) ) ) - ( ( ( DS / ( Min( MUC ,Min( MUM ,( DS / RCSe ) ) ) * Max( ( ( MUC + MUC ) + ( DS - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + ( RCSe / CS ) ) / RMSe ) )", "obj1": 0.8574074074074074, "obj2": 0.06435948616460503}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.37592592592592594, "obj2": 0.4851412415246541}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / FirstVNF_Mem_Server ) - ( ( Min( PN ,Const ) * ( DDR * MRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * ( RCSe / MUM ) ) ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.649720156364934}, {"determining": "( ( ( ( ( DDR + MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,( ARS / ( FirstVNF_RAM * Const ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( ( ( ( MUR + MUR ) + ( MUC + RMSe ) ) + ( ( RMSe + Min( RMSe ,MUR ) ) / ( RMSe * RMSe ) ) ) - DS ) + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.5796296296296296, "obj2": 0.2670010905927695}, {"determining": "( ( ( ( DDR + BR ) + FirstVNF_CPU_Server ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RCSe - MUC ) + MUC ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.8296296296296296, "obj2": 0.07051064362495928}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,Max( ( Min( Max( ( CS * MUR ),RCSe ) ,Max( ( ( DS + MUC ) + ( RRSe - MUR ) ),CS ) ) * MLU ),( RRSe + DS ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8152178177760192}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( ( AMS * AMS ) - ( FirstVNF_Mem_Server * Const ) ) ) ) ) + ( ( PN - MDR ) + ( PN - Max( MDR,AMS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + PN ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( Max( MUM,Max( RCSe,DS ) ) / ( MUR * DS ) ) - RMSe ),MUC ) ) + ( RCSe + ( Min( Max( ( MUM + MUR ),MUM ) ,MUR ) + RCSe ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.14353554444955083}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS / FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS / MUC ) ) / ( ( RMSe + Max( ( Min( Max( MUM,RCSe ) ,MUR ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09934000637211733}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( ( CS + RRSe ) + ( CS + RRSe ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5536820589230697}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - Max( MDR,AMS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + PN ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( RCSe + ( Min( Max( ( MUM + MUR ),MUM ) ,RCSe ) + RCSe ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.14591625033832728}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( AMS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / DDR ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( Max( FirstVNF_RAM_Server,ARS ) * ARS ) ) )", "choosing": "( Min( ( ( MUC + CS ) / DS ) ,( RCSe - DS ) ) / CS )", "obj1": 0.6611111111111111, "obj2": 0.18245822457819147}, {"determining": "( ( ( ( Max( BR,( FirstVNF_RAM_Server + ( ( RRS * ARS ) - ( FirstVNF_RAM + Const ) ) ) ) * PN ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,Max( MUC,MUC ) ) - ( ( ( DS / ( Max( MUR,MUM ) * ( MUR / ( CS - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6601489230863515}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * CRS ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RMSe ) * Max( ( ( RRSe * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6907407407407408, "obj2": 0.16455488732927126}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) / Min( ( Min( PN ,FirstVNF_CPU ) * FirstVNF_CPU ) ,( MDR - PN ) ) ) / ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "( MUM - ( ( MUC * MUR ) + Max( ( ( DS + Min( MLU ,MLU ) ) / ( RMSe / MUM ) ),MUR ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12945944767069278}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( ( ( DDR - MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( FirstVNF_RAM_Server / AMS ) ) + ( FirstVNF_Mem * CRS ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MRS ) ) ,MRS ) )", "choosing": "( ( DS - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( ( ( DS / ( RCSe + MUC ) ) + MUC ) + ( Max( ( RMSe + MUR ),Min( DS ,MUM ) ) + RMSe ) ) + ( RRSe + RRSe ) ) ) ) )", "obj1": 0.9592592592592593, "obj2": 0.015508220041534624}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.4461487988191638}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( MUR + RRSe ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.5370370370370371, "obj2": 0.3033032620903692}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( ACS * DDR ) / ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,PN ) ) / ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( RRSe + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * Max( ( ( MUC * MUC ) + ( MLU / MLU ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15925925925925927, "obj2": 0.7381347785412387}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RRSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7555555555555555, "obj2": 0.10652681583781179}, {"determining": "( ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7234188725113188}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.7796296296296297, "obj2": 0.0920313224798366}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - RRS ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( ( ( ( MUC / CS ) / CS ) + MUM ),Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( CS + Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.4962962962962963, "obj2": 0.33680808847865557}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3425925925925926, "obj2": 0.5153408845746762}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6686603936710813}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,PN ) * ( FirstVNF_CPU + BR ) ) * ( ( CRS / FirstVNF_Mem ) / DDR ) ) ) ) + ( ( PN - MDR ) - Min( ( PN * ( BR * MDR ) ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( RMSe ,( DS + Max( MUC,CS ) ) ) - MUM ) ,( MUC / DS ) ) / CS )", "obj1": 0.6796296296296296, "obj2": 0.17260725820024445}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( Min( ACS ,FirstVNF_CPU ) ,( ARS - ( AMS / MRS ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( ACS,Max( ( ( ( ( FirstVNF_Mem_Server * Const ) / Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),Const ) ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) - ( RCSe * Min( RCSe ,( MLU - Min( DS ,( CS / MLU ) ) ) ) ) ) ,Max( MUM,MUC ) )", "obj1": 0.8055555555555556, "obj2": 0.07867469373607554}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04671261295902273}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + FirstVNF_CPU ),FirstVNF_CPU_Server ) ) * Min( FirstVNF_CPU ,BR ) ) + DDR ) ,( ARS / ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11460253776579704}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC - RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.5407407407407407, "obj2": 0.2886940220110449}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( Min( RMSe ,( DS + RCSe ) ) * ( RMSe - ( MUC / RMSe ) ) ) * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( MUR + Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.4962962962962963, "obj2": 0.33680808847865557}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3888888888888889, "obj2": 0.46913248653027556}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( MDR + Max( ( RRS + FirstVNF_RAM ),Const ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( ( ( RRSe * MUR ) * RRSe ) / RCSe ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.0372015470821292}, {"determining": "( ( PN * ( ARS / PN ) ) + ( ( FirstVNF_RAM_Server + RRS ) - Max( MDR,( BR - Const ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( ( ( Max( RCSe,RCSe ) / Max( ( ( RCSe / ( MLU + DS ) ) / CS ),Min( ( CS * Max( MUM,MUC ) ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6773568402031983}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ARS + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8075053021273294}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( RMSe + RRSe ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.5314814814814814, "obj2": 0.30679996961563627}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.7296296296296296, "obj2": 0.12074414816844622}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ARS / AMS ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( MLU - ( RRSe * DS ) ) - Max( ( MLU * MUM ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3425925925925926, "obj2": 0.5153408845746762}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_CPU_Server,FirstVNF_CPU ) + Const ) ),Const ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) * Max( ( ( MUC + MUC ) + CS ),CS ) ) ,RMSe ) ) )", "obj1": 0.9907407407407407, "obj2": 0.0028440485411734945}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * ( MDR * FirstVNF_CPU ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU_Server ,DDR ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),Min( DS ,RMSe ) ) + Max( ( MUR / ( DS * DS ) ),MUR ) )", "obj1": 0.6814814814814815, "obj2": 0.16824946783253886}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.3925925925925926, "obj2": 0.4617117644545769}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) + RMSe ) + Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - RMSe ) + RRSe ) ) ) )", "obj1": 0.5722222222222222, "obj2": 0.2679200702156189}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( CS ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.8074074074074075, "obj2": 0.07768227438028581}, {"determining": "( Min( FirstVNF_Mem ,Max( ( ( ARS + ( ( ARS - ( MDR + FirstVNF_CPU ) ) + PN ) ) / FirstVNF_Mem ),Min( FirstVNF_CPU_Server ,( ( PN + ( AMS + FirstVNF_RAM_Server ) ) - FirstVNF_RAM_Server ) ) ) ) - ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) )", "choosing": "( ( Max( RCSe,CS ) * DS ) / ( RRSe + ( CS + ( Min( ( ( Max( RMSe,RCSe ) + MUM ) * MUC ) ,Min( RCSe ,RRSe ) ) * CS ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.012797469411385874}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC - RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.5388888888888889, "obj2": 0.289115451658967}, {"determining": "( ( ( FirstVNF_Mem * CRS ) + ( ( PN * Max( BR,( FirstVNF_Mem + ( ( BR + FirstVNF_CPU ) - ( ACS - BR ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( DDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( Min( RCSe ,MUM ) / ( MUM * Max( ( ( MUC - MUC ) + Max( MUC,RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4723542646472011}, {"determining": "Min( ACS ,( Min( FirstVNF_CPU_Server ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( MDR ,RRS ) ) ),MRS ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) + ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + DDR ) ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( ( Max( MUC,MUM ) / RMSe ) + ( DS + MUM ) ) ) + MUM ) / ( ( ( RCSe * ( MLU * ( MUM / DS ) ) ) / MLU ) + MUM ) ) ) + Max( ( MUC + ( DS * RCSe ) ),MUR ) )", "obj1": 0.12222222222222222, "obj2": 0.8014596286352669}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ( BR - AMS ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * Min( FirstVNF_RAM ,Max( MRS,AMS ) ) ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_Mem_Server ) - MDR ) + Min( FirstVNF_RAM_Server ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( CS - MUR ),CS ),RRSe ) * ( RMSe * Min( Min( ( DS - Max( ( CS / MUM ),MLU ) ) ,MUR ) ,( ( DS / RCSe ) + RRSe ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.43962804332471}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.32592592592592595, "obj2": 0.5322679831692783}, {"determining": "Min( ( FirstVNF_CPU / ARS ) ,( ( ( ( ( ( ACS + RRS ) / FirstVNF_RAM ) * ARS ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( MUR - RMSe ) ,( MUR / RRSe ) ) )", "obj1": 0.1111111111111111, "obj2": 0.824845806405504}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7277777777777777, "obj2": 0.1213112023672196}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( PN - MDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN + MDR ) + ( ( Const - FirstVNF_CPU ) - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( ( ( ( MUR / CS ) + ( MLU / MUM ) ) + ( MUR * RCSe ) ) - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,( DS / ( MUM * MUC ) ) ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5204055416734484}], "24": [{"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( Min( ( ( RRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MRS ) ) ,MRS ) + ( ( ACS + FirstVNF_RAM_Server ) + AMS ) )", "choosing": "( ( DS + Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( RCSe + ( MLU - ( RRSe / MUC ) ) ) * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( ( ( DS / ( RCSe + MUC ) ) + MUC ) + ( Max( ( RMSe + MUR ),Min( DS ,MUM ) ) + RMSe ) ) + ( RRSe + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR - MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( FirstVNF_RAM_Server / AMS ) ) + ( FirstVNF_Mem * CRS ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MRS ) ) ,MRS ) )", "choosing": "( ( DS - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( ( ( DS / ( RCSe + MUC ) ) + MUC ) + ( Max( ( RMSe + MUR ),Min( DS ,MUM ) ) + RMSe ) ) + ( RRSe + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) + ( ( ( ( DDR * MRS ) / Max( BR,Const ) ) + ( ( PN / MDR ) - ( Min( ( Min( ARS ,AMS ) + ( RRS - AMS ) ) ,FirstVNF_RAM ) * FirstVNF_CPU ) ) ) + ( Min( ( MDR - FirstVNF_RAM_Server ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Min( ( ( Min( RMSe ,RRSe ) * RRSe ) - Max( MUM,RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ,( ( MUR / DS ) - RRSe ) ) + Max( ( ( Min( RMSe ,( MLU + MUR ) ) / CS ) / DS ),( MLU - RMSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + MDR ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUR + RRSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.4185185185185185, "obj2": 0.4287983757589855}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - FirstVNF_CPU_Server ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * ( PN * ( AMS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,Min( ( RCSe + ( MLU * RRSe ) ) ,Max( DS,DS ) ) ) * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RRSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4666666666666667, "obj2": 0.3624699660976334}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) * ( PN + ( ( ( FirstVNF_CPU + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( Max( ( ( RMSe - CS ) + MUR ),Min( MLU ,RRSe ) ) - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.42962962962962964, "obj2": 0.39389535629271694}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( Max( ( ( RMSe - CS ) + MUR ),MUC ) - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.45, "obj2": 0.3804115515446545}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( ACS * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( MUM - ( MLU * CS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5111111111111111, "obj2": 0.32313504194918136}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( CRS * FirstVNF_Mem ) ) ) ) + ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ACS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7562302956373447}, {"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem / CRS ) ) + Min( ( PN - ( PN - Min( DDR ,( ACS / BR ) ) ) ) ,( MDR + Min( MRS ,ARS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( Max( DS,Max( RCSe,Max( ( ( RRSe / CS ) / ( RMSe + MUM ) ),( MUR * DS ) ) ) ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - Max( ( MUC * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2735704438343623}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( DDR / FirstVNF_CPU ) - ( ( Min( MRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + Max( ( PN - MDR ),Min( ( BR * MDR ) ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS - ( Min( MDR ,FirstVNF_Mem_Server ) + ( BR / MRS ) ) ),( BR / Min( ACS ,( AMS / Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUC * CS ) ) - Max( ( CS * MLU ),( Max( DS,MUM ) + MUR ) ) ) - ( ( ( DS / ( Min( MUC ,Min( MUM ,( DS / RCSe ) ) ) * Max( ( ( MUC + MUC ) + ( DS - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + ( RCSe / CS ) ) / RMSe ) )", "obj1": 0.8574074074074074, "obj2": 0.06435948616460503}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.5277777777777778, "obj2": 0.3018857315591923}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( ACS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( MUR + RRSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9574074074074074, "obj2": 0.012473866012312982}, {"determining": "( ( ( ( PN * ( ( RRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( ARS - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( MUM + RRSe ) ) ) - ( ( Max( MUC,( Max( CS,DS ) / ( ( MUR - Max( DS,DS ) ) - ( MUM + Max( MUC,RMSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.3476921865976444}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.32592592592592595, "obj2": 0.5322679831692783}, {"determining": "( ( ( ( DDR + BR ) + FirstVNF_CPU_Server ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RCSe - MUC ) + MUC ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.8296296296296296, "obj2": 0.07051064362495928}, {"determining": "( Min( FirstVNF_CPU ,ACS ) + ( ( FirstVNF_CPU + FirstVNF_Mem ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( ( MUC - ( RRSe * ( Min( MLU ,RRSe ) - Max( Max( DS,MLU ),DS ) ) ) ) ,( ( RCSe - Max( ( MUR + Min( MUM ,MUR ) ),( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5665075785831442}, {"determining": "( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ( ( PN * Max( BR,( ( FirstVNF_RAM * AMS ) + ( CRS + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5166666666666667, "obj2": 0.3093386056070891}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( MUR * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.9518518518518518, "obj2": 0.019614553558385293}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * MDR ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5981481481481481, "obj2": 0.24570597738419286}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "Min( ACS ,( Min( FirstVNF_CPU_Server ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( MDR ,( CRS / FirstVNF_Mem ) ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11481481481481481, "obj2": 0.8028941081759269}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * ( DDR / FirstVNF_RAM ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( RRSe * Max( Max( ( MUC / ( RCSe * DS ) ),MUR ),CS ) ) ,RMSe ) ) )", "obj1": 0.8759259259259259, "obj2": 0.05528061060840164}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ( BR - AMS ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * Min( FirstVNF_RAM ,Max( MRS,AMS ) ) ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_Mem_Server ) - MDR ) + Min( FirstVNF_RAM_Server ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( CS - MUR ),CS ),RRSe ) * ( RMSe * Min( Min( ( DS - Max( ( CS / MUM ),MLU ) ) ,MUR ) ,( ( DS / RCSe ) + RRSe ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.43962804332471}, {"determining": "( ( ( FirstVNF_CPU + Const ) + ( CRS * ( ARS - Min( ( FirstVNF_Mem_Server / Max( AMS,MRS ) ) ,MDR ) ) ) ) + ( RRS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),Max( RRSe,( MUC / MUR ) ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * RMSe ),CS ) * ( ( ( RCSe + MUM ) + RCSe ) / ( RCSe + MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.5052186198997247}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( RMSe + Max( ( RMSe * MUM ),MUC ) ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.3817522364994617}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.1259259259259259, "obj2": 0.796586015888108}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / PN ) - ( ( Min( FirstVNF_CPU ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( BR * MDR ) ,FirstVNF_CPU ) ) ) + Max( DDR,( PN - FirstVNF_Mem_Server ) ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS + FirstVNF_RAM ),Const ) ) ) )", "choosing": "( ( ( Max( Max( Max( RMSe,DS ),MUM ),( RMSe / ( MLU - Max( RMSe,RCSe ) ) ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( Min( RMSe ,( DS + RCSe ) ) * ( ( MUC / RMSe ) - RCSe ) ) * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + MUM ) / ( RCSe / Min( MLU ,( Max( ( MUR + MLU ),DS ) / Min( Max( CS,RRSe ) ,( RRSe - ( CS - RCSe ) ) ) ) ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.045335680800348895}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( Const / FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( PN * MDR ) + DDR ) + ( PN - MDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( ( MUM - RRSe ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,( ( RMSe + RCSe ) / ( Max( CS,MUR ) / DS ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.1962962962962963, "obj2": 0.6945582881051018}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( RRSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC - RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7749824582259219}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7042291897077725}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5545132785102355}, {"determining": "( ( ( FirstVNF_Mem * CRS ) + ( ( PN * Max( BR,( FirstVNF_Mem + ( ( BR + FirstVNF_CPU ) - ( ACS - BR ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( DDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( Min( RCSe ,MUM ) / ( MUM * Max( ( ( MUC - MUC ) + Max( MUC,RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4723542646472011}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( ( MRS * DDR ) * Min( PN ,Const ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - ( CRS * ( FirstVNF_Mem_Server + AMS ) ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ACS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,Min( Max( CS,Max( ( Min( RRSe ,CS ) / RCSe ),MUC ) ) ,MUR ) ) - ( RMSe / Max( ( RMSe / ( MUM * RCSe ) ),MUM ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6395076488859971}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( CRS / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RRSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC - RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) ) ,Max( MUM,MUC ) )", "obj1": 0.8111111111111111, "obj2": 0.07622726210066318}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ACS ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( RMSe + ( DS - RCSe ) ),RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.20185185185185187, "obj2": 0.6840300662697903}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( MDR + Max( ( RRS + FirstVNF_RAM ),Const ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( ( ( RRSe * MUR ) * RRSe ) / RCSe ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.03647773614228016}, {"determining": "( ( PN * ( ARS / PN ) ) + ( ( FirstVNF_RAM_Server + RRS ) - Max( MDR,( BR - Const ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( ( ( Max( RCSe,RCSe ) / Max( ( ( RCSe / ( MLU + DS ) ) / CS ),Min( ( CS * Max( MUM,MUC ) ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6773568402031983}, {"determining": "( ( ( ( PN - MDR ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( Max( RRSe,MUR ) - ( CS * RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.2833333333333333, "obj2": 0.577874759570168}, {"determining": "Min( ( FirstVNF_CPU / ARS ) ,( ( ( ( ( ( ACS + RRS ) / FirstVNF_RAM ) * ARS ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( MUR - RMSe ) ,( MUR / RRSe ) ) )", "obj1": 0.1111111111111111, "obj2": 0.824845806405504}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * ( MDR + FirstVNF_CPU ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( MUR + RRSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.6888888888888889, "obj2": 0.16026357505816993}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.37592592592592594, "obj2": 0.4851412415246541}, {"determining": "( ( ( ( Max( BR,( FirstVNF_RAM_Server + ( ( RRS * ARS ) - ( FirstVNF_RAM + Const ) ) ) ) * PN ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,Max( MUC,MUC ) ) - ( ( ( DS / ( Max( MUR,MUM ) * ( MUR / ( CS - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6601489230863515}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( PN * MDR ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.34814814814814815, "obj2": 0.5109966717299603}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5388888888888889, "obj2": 0.2890864727954317}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ACS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( RRSe,( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2796296296296296, "obj2": 0.5935233382356481}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + RRSe ) + ( MUM - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02687597810974018}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.39814814814814814, "obj2": 0.4530450967554705}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.4605872653006222}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( AMS / FirstVNF_CPU ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ACS ) ) ) ) ),Const ) - ARS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC - DS ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( DS,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6259259259259259, "obj2": 0.21612320817533118}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( MUR + Min( CS ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6581863422743687}, {"determining": "( ( ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( RMSe + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6351851851851852, "obj2": 0.2127090951784997}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6425925925925926, "obj2": 0.19787292109369886}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * MDR ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( DS - ( RCSe * Max( ( RMSe * Max( ( ( RCSe + MUC ) + ( ( CS - RRSe ) * DS ) ),CS ) ),RMSe ) ) )", "obj1": 0.6222222222222222, "obj2": 0.2253289518296032}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUC ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.23452230812397748}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + RRSe ) + ( MUM - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02687597810974018}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( RRSe * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7676182691032097}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( Min( RMSe ,( DS + RCSe ) ) * ( RMSe - ( MUC / RMSe ) ) ) * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * CRS ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RMSe ) * Max( ( ( RRSe * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.65, "obj2": 0.1904199113112634}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / FirstVNF_Mem_Server ) - ( ( Min( PN ,Const ) * ( DDR * MRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * ( RCSe / MUM ) ) ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.649720156364934}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - Min( Min( RRS ,FirstVNF_Mem ) ,MRS ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_CPU ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( RCSe,( MLU * CS ) ) ) - ( ( ( DS / ( MUM * ( CS / ( ( CS * RRSe ) - CS ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6407407407407407, "obj2": 0.20570211162016128}, {"determining": "( ( ( ( ACS * DDR ) / ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * PN ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15925925925925927, "obj2": 0.7381347785412387}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * Min( ( CRS / FirstVNF_Mem ) ,Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + Max( FirstVNF_CPU,FirstVNF_Mem ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( MUR * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2759259259259259, "obj2": 0.5961434547299711}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.8907407407407407, "obj2": 0.04671261295902273}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * ( MDR * FirstVNF_CPU ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( Min( FirstVNF_CPU_Server ,DDR ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),Min( DS ,RMSe ) ) + Max( ( MUR / ( DS * DS ) ),MUR ) )", "obj1": 0.6814814814814815, "obj2": 0.16824946783253886}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( Max( AMS,BR ) ,( MDR - RRS ) ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - AMS ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( RCSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( Max( CS,RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.7148148148148148, "obj2": 0.13203741865155338}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( PN + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe - DS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.362962962962963, "obj2": 0.4923251315043954}, {"determining": "( Min( DDR ,FirstVNF_CPU_Server ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - RRS ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( ( ( ( MUC / CS ) / CS ) + MUM ),Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( CS + Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.4962962962962963, "obj2": 0.33680808847865557}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( PN - MDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,( DS / ( MUM * MUC ) ) ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5204055416734484}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( RMSe ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.7092592592592593, "obj2": 0.13992063362834203}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,PN ) * ( FirstVNF_CPU + BR ) ) * ( ( CRS / FirstVNF_Mem ) / DDR ) ) ) ) + ( ( PN - MDR ) - Min( ( PN * ( BR * MDR ) ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Min( RMSe ,( DS + Max( MUC,CS ) ) ) - MUM ) ,( MUC / DS ) ) / CS )", "obj1": 0.6796296296296296, "obj2": 0.17260725820024445}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS / FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS / MUC ) ) / ( ( RMSe + Max( ( Min( Max( MUM,RCSe ) ,MUR ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09934000637211733}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RRSe * Min( ( ( RMSe - CS ) + MUR ) ,( RRSe / RCSe ) ) ) )", "obj1": 0.7555555555555555, "obj2": 0.10652681583781179}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC - RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.5407407407407407, "obj2": 0.2886940220110449}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( MUR + Min( MUM ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.4962962962962963, "obj2": 0.33680808847865557}, {"determining": "( ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7234188725113188}, {"determining": "( ( ( ( Min( DDR ,MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Min( MRS ,RRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / Const ) ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( Min( MUR ,RCSe ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * MUR ) ) * ( RRSe * RMSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.23341227039278026}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3888888888888889, "obj2": 0.46913248653027556}, {"determining": "( ( ( ( ACS * DDR ) / ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,PN ) ) / ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( RRSe + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * Max( ( ( MUC * MUC ) + ( MLU / MLU ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15925925925925927, "obj2": 0.7381347785412387}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( MDR + ( CRS / FirstVNF_Mem ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( ( ( MUM - ( MLU * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * ( RCSe / MUM ) ) ) ) ) * MUC ) - MUM ) * ( RMSe * Min( ( ( RMSe - CS ) + MUR ) ,( ( ( RRSe * MUR ) * RRSe ) / RCSe ) ) ) )", "obj1": 0.9148148148148149, "obj2": 0.03800707090645233}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( CRS * FirstVNF_Mem ) ) ) ) + ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( ACS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( ( Max( RRSe,RRSe ) / ( MUR - RMSe ) ),( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7609678738802761}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "Min( ( ( ( Min( ARS ,( MRS / RRS ) ) - Max( ( FirstVNF_CPU + MRS ),FirstVNF_CPU_Server ) ) * ( CRS * ( ( ( ( AMS + BR ) + ACS ) - FirstVNF_Mem ) - MRS ) ) ) + DDR ) ,( ARS / FirstVNF_RAM_Server ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( MUC + MUR ) ) - ( Max( ( Min( ( RMSe * ( MUC - CS ) ) ,Max( ( CS + RRSe ),Min( MLU ,MUM ) ) ) / ( MUM / ( RCSe - DS ) ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.712565322306074}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5451950100831746}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( Min( ACS ,FirstVNF_CPU ) ,( ARS - ( AMS / MRS ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( ACS,Max( ( ( ( ( FirstVNF_Mem_Server * Const ) / Max( FirstVNF_Mem,FirstVNF_Mem_Server ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),Const ) ) ) )", "choosing": "Min( ( Min( CS ,RMSe ) - ( RCSe * Min( RCSe ,( MLU - Min( DS ,( CS / MLU ) ) ) ) ) ) ,Max( MUM,MUC ) )", "obj1": 0.8055555555555556, "obj2": 0.07867469373607554}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC - RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.5407407407407407, "obj2": 0.2886940220110449}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * ( MDR + FirstVNF_CPU ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6944444444444444, "obj2": 0.15401855235263978}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( BR * DDR ) / FirstVNF_Mem ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( Min( MRS ,DDR ) - MDR ) + ( PN - MDR ) ) ) + ( FirstVNF_CPU * CRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( Min( MLU ,RMSe ),RCSe ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) ) + Min( Min( Max( MUC,Min( Max( MUR,Max( MLU,DS ) ) ,CS ) ) ,MUR ) ,( ( RCSe - RMSe ) + RRSe ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.2621248221930757}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.6981481481481482, "obj2": 0.1520647683706704}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Min( Const ,FirstVNF_CPU ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - RRSe ) + MUC ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6148148148148148, "obj2": 0.22940828616455483}, {"determining": "Min( ACS ,( Min( FirstVNF_CPU_Server ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( MDR ,RRS ) ) ),MRS ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) + ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + DDR ) ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( ( Max( MUC,MUM ) / RMSe ) + ( DS + MUM ) ) ) + MUM ) / ( ( ( RCSe * ( MLU * ( MUM / DS ) ) ) / MLU ) + MUM ) ) ) + Max( ( MUC + ( DS * RCSe ) ),MUR ) )", "obj1": 0.12222222222222222, "obj2": 0.8014596286352669}], "25": [{"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( PN - MDR ) * Max( BR,Max( Min( Max( AMS,BR ) ,( MDR - RRS ) ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - AMS ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( RCSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( Max( CS,RMSe ) ,( RMSe - ( MUC / RMSe ) ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( ( RRS - FirstVNF_Mem_Server ) - ( FirstVNF_CPU / MRS ) ) ,MRS ) + ( ( ACS + FirstVNF_RAM_Server ) + AMS ) )", "choosing": "( ( DS + Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( RCSe + ( MLU - ( RRSe / MUC ) ) ) * CS ) ) + MUM ) / ( Min( MUC ,RCSe ) + ( ( ( ( DS / ( RCSe + MUC ) ) + MUC ) + ( Max( ( RMSe + MUR ),Min( DS ,MUM ) ) + RMSe ) ) + ( RRSe + RRSe ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) + ( ( ( ( DDR * MRS ) / Max( BR,Const ) ) + ( ( PN / MDR ) - ( Min( ( Min( ARS ,AMS ) + ( RRS - AMS ) ) ,FirstVNF_RAM ) * FirstVNF_CPU ) ) ) + ( Min( ( MDR - FirstVNF_RAM_Server ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Min( ( ( Min( RMSe ,RRSe ) * RRSe ) - Max( MUM,RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ,( ( MUR / DS ) - RRSe ) ) + Max( ( ( Min( RMSe ,( MLU + MUR ) ) / CS ) / DS ),( MLU - RMSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) + ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - FirstVNF_CPU_Server ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * ( PN * ( AMS / FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( Min( RMSe ,Min( ( RCSe + ( MLU * RRSe ) ) ,Max( DS,DS ) ) ) * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RRSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4666666666666667, "obj2": 0.3624699660976334}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( Max( ( ( RMSe - CS ) + MUR ),MUC ) - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.45, "obj2": 0.3804115515446545}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02669593647909139}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5662097876131792}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7003986470109033}, {"determining": "( ( ( ( Max( BR,( FirstVNF_RAM_Server + ( ( RRS * ARS ) - ( FirstVNF_RAM + Const ) ) ) ) * PN ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,Max( MUC,MUC ) ) - ( ( ( DS / ( Max( MUR,MUM ) * ( MUR / ( CS - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6601489230863515}, {"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem / CRS ) ) + Min( ( PN - ( PN - Min( DDR ,( ACS / BR ) ) ) ) ,( MDR + Min( MRS ,ARS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( Max( DS,Max( RCSe,Max( ( ( RRSe / CS ) / ( RMSe + MUM ) ),( MUR * DS ) ) ) ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - Max( ( MUC * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2735704438343623}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * ( MDR + FirstVNF_CPU ) ) + ( ( PN - Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( ( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),RCSe ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) ) + RRSe ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.42592592592592593, "obj2": 0.40985693559292125}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.32592592592592595, "obj2": 0.5322679831692783}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( CRS * FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.7183093853192382}, {"determining": "( ( PN * ( ARS / PN ) ) + ( ( FirstVNF_RAM_Server + RRS ) - Max( MDR,( BR - Const ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( ( ( Max( RCSe,RCSe ) / Max( ( ( RCSe / ( MLU + DS ) ) / CS ),Min( ( CS * Max( MUM,MUC ) ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6773568402031983}, {"determining": "( ( ( ( PN * Max( BR,( Min( MRS ,RRS ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) / RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5054279404967553}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.4498477317897245}, {"determining": "( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ( ( PN * Max( BR,( ( FirstVNF_RAM * AMS ) + ( CRS + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5166666666666667, "obj2": 0.3093386056070891}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ( BR - AMS ) * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * Min( FirstVNF_RAM ,Max( MRS,AMS ) ) ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_Mem_Server ) - MDR ) + Min( FirstVNF_RAM_Server ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( Max( ( CS - MUR ),CS ),RRSe ) * ( RMSe * Min( Min( ( DS - Max( ( CS / MUM ),MLU ) ) ,MUR ) ,( ( DS / RCSe ) + RRSe ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.43962804332471}, {"determining": "( ( ( ( ( DDR * FirstVNF_CPU_Server ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,MDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( MDR - PN ) + Min( Max( FirstVNF_CPU_Server,( ARS + AMS ) ) ,DDR ) ) ) + ( CRS * PN ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem / CRS ) / ( MDR + MDR ) ) ) ) ) )", "choosing": "( ( ( ( MUM - ( RMSe - Min( DS ,DS ) ) ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( ( RRSe + CS ),MUC ) ,MUR ) ,( Max( Max( ( MLU + MUC ),Min( Max( CS,RRSe ) ,MUR ) ),MUC ) / RMSe ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11743793493702366}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( MUR * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.9518518518518518, "obj2": 0.019614553558385293}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * ( RCSe / MUM ) ) ) ) ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * RCSe ) ) + MUM ) / RMSe ) )", "obj1": 0.5925925925925926, "obj2": 0.24374829808848938}, {"determining": "Min( ( FirstVNF_CPU / ARS ) ,( ( ( ( ( ( ACS + RRS ) / FirstVNF_RAM ) * ARS ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( MUR - RMSe ) ,( MUR / RRSe ) ) )", "obj1": 0.1111111111111111, "obj2": 0.824845806405504}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5518518518518518, "obj2": 0.28667588958294526}, {"determining": "Min( ACS ,( Min( FirstVNF_CPU_Server ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( MDR ,( CRS / FirstVNF_Mem ) ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11481481481481481, "obj2": 0.8028941081759269}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( Const / FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( PN * MDR ) + DDR ) + ( PN - MDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( ( MUM - RRSe ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,( ( RMSe + RCSe ) / ( Max( CS,MUR ) / DS ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.1962962962962963, "obj2": 0.6945582881051018}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.42962962962962964, "obj2": 0.3884948140571985}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.5277777777777778, "obj2": 0.3018857315591923}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.1259259259259259, "obj2": 0.796586015888108}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( RRSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC - RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7749824582259219}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,PN ) * ( FirstVNF_CPU + BR ) ) * ( ( CRS / FirstVNF_Mem ) / DDR ) ) ) ) + ( ( PN - MDR ) - Min( ( PN * ( BR * MDR ) ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6722222222222223, "obj2": 0.17459518807805202}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( DDR / FirstVNF_CPU ) - ( ( Min( MRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + Max( ( PN - MDR ),Min( ( BR * MDR ) ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS - ( Min( MDR ,FirstVNF_Mem_Server ) + ( BR / MRS ) ) ),( BR / Min( ACS ,( AMS / Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUC * CS ) ) - Max( ( CS * MLU ),( Max( DS,MUM ) + MUR ) ) ) - ( ( ( DS / ( Min( MUC ,Min( MUM ,( DS / RCSe ) ) ) * Max( ( ( MUC + MUC ) + ( DS - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + ( RCSe / CS ) ) / RMSe ) )", "obj1": 0.8574074074074074, "obj2": 0.06435948616460503}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( ( ( ( ACS * DDR ) - ARS ) - ( BR - ( RRS * ( FirstVNF_CPU * ACS ) ) ) ) / Min( ( CRS + PN ) ,Min( FirstVNF_CPU ,AMS ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RMSe ,( MUM / ( CS / MUR ) ) ) - ( CS * MLU ) ) - Max( ( RRSe + MUR ),( MLU * CS ) ) ) - ( RCSe * RCSe ) )", "obj1": 0.5722222222222222, "obj2": 0.2645198419449927}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * ( DDR / FirstVNF_RAM ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( RRSe * Max( Max( ( MUC / ( RCSe * DS ) ),MUR ),CS ) ) ,RMSe ) ) )", "obj1": 0.8759259259259259, "obj2": 0.05528061060840164}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUC ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.23452230812397748}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( FirstVNF_CPU + Const ) + ( CRS * ( ARS - Min( ( FirstVNF_Mem_Server / Max( AMS,MRS ) ) ,MDR ) ) ) ) + ( RRS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),Max( RRSe,( MUC / MUR ) ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * RMSe ),CS ) * ( ( ( RCSe + MUM ) + RCSe ) / ( RCSe + MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.5052186198997247}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS / FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS / MUC ) ) / ( ( RMSe + Max( ( Min( Max( MUM,RCSe ) ,MUR ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09934000637211733}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( CRS * FirstVNF_Mem ) ) ) ) + ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( RMSe + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7525164997465058}, {"determining": "( ( ( FirstVNF_Mem * CRS ) + ( ( PN * Max( BR,( FirstVNF_Mem + ( ( BR + FirstVNF_CPU ) - ( ACS - BR ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( DDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( Min( RCSe ,MUM ) / ( MUM * Max( ( ( MUC - MUC ) + Max( MUC,RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4723542646472011}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( ( MRS * DDR ) * Min( PN ,Const ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - ( CRS * ( FirstVNF_Mem_Server + AMS ) ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ACS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,Min( Max( CS,Max( ( Min( RRSe ,CS ) / RCSe ),MUC ) ) ,MUR ) ) - ( RMSe / Max( ( RMSe / ( MUM * RCSe ) ),MUM ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6395076488859971}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.4605872653006222}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ( ( ( Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * MDR ) ) * MRS ) / ( ( MDR + Max( ( RRS + FirstVNF_RAM ),Const ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( RCSe * Max( ( RMSe * Max( ( ( RCSe + MUC ) + ( ( CS - RRSe ) * DS ) ),CS ) ),RMSe ) ) )", "obj1": 0.9185185185185185, "obj2": 0.03626557242965605}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( RRS - FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( Max( ( MLU * ( MUM / MUM ) ),MUM ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.7851851851851852, "obj2": 0.09002731192693747}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5545132785102355}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( ACS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( MUR + RRSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9574074074074074, "obj2": 0.012473866012312982}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * ( DDR / FirstVNF_RAM ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8685185185185185, "obj2": 0.058558006045363535}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( ACS * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( MUM - ( MLU * CS ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5111111111111111, "obj2": 0.32313504194918136}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_RAM_Server + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + Max( RRSe,MUR ) ) + ( MUM - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9, "obj2": 0.04233173451604679}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( ( ( ( PN * ( ( RRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( ARS - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( MUM + RRSe ) ) ) - ( ( Max( MUC,( Max( CS,DS ) / ( ( MUR - Max( DS,DS ) ) - ( MUM + Max( MUC,RMSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.3476921865976444}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( AMS / FirstVNF_CPU ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ACS ) ) ) ) ),Const ) - ARS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC - DS ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( DS,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6259259259259259, "obj2": 0.21612320817533118}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.8, "obj2": 0.08121391607890814}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( CRS / FirstVNF_Mem ) / ( ARS + MDR ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,( CRS + DDR ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Max( ( Min( ( MRS * Min( RRS ,BR ) ) ,Const ) + DDR ),RRS ) )", "choosing": "( ( RCSe / MLU ) - ( ( ( DS / ( ( RRSe / RRSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.49444444444444446, "obj2": 0.33965529102888703}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) )", "obj1": 0.7592592592592593, "obj2": 0.10502636834724553}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( MUR + Min( CS ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6581863422743687}, {"determining": "( ( ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( RMSe + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6351851851851852, "obj2": 0.2127090951784997}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( RMSe + Max( ( RMSe * MUM ),MUC ) ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.3817522364994617}, {"determining": "( ( ( ( PN * Max( BR,( ( CRS + ( FirstVNF_Mem / MDR ) ) + Max( ( PN + MDR ),( ARS * FirstVNF_RAM ) ) ) ) ) + ( PN + CRS ) ) + ( CRS * FirstVNF_Mem ) ) + ( RRS / ( BR + ( FirstVNF_CPU * MRS ) ) ) )", "choosing": "Min( ( RCSe * CS ) ,Max( RMSe,MUR ) )", "obj1": 0.3333333333333333, "obj2": 0.5204055416734484}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_CPU ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( RRSe + RRSe ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.6203703703703703, "obj2": 0.224233222881833}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( PN + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe - DS ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.362962962962963, "obj2": 0.4923251315043954}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4759259259259259, "obj2": 0.3518308856982456}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.5351851851851852, "obj2": 0.2946094100762949}, {"determining": "( ( ( ( Max( FirstVNF_Mem,CRS ) / ( DDR * MRS ) ) * Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( CRS / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( ( Max( RRSe,RRSe ) / ( MUR - RMSe ) ),( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.812962962962963, "obj2": 0.07542839345877721}, {"determining": "( ( ( ( PN - MDR ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( Max( RRSe,MUR ) - ( CS * RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.2833333333333333, "obj2": 0.577874759570168}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.37592592592592594, "obj2": 0.4851412415246541}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) + FirstVNF_CPU ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Const ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) + Max( ( MUR / ( DS * RCSe ) ),Max( ( RMSe * MUM ),RMSe ) ) )", "obj1": 0.7037037037037037, "obj2": 0.14760244280234813}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8888888888888888, "obj2": 0.04762023796471551}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( PN - MDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,( DS / ( MUM * MUC ) ) ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5204055416734484}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - Min( Min( RRS ,FirstVNF_Mem ) ,MRS ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_CPU ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( RCSe,( MLU * CS ) ) ) - ( ( ( DS / ( MUM * ( CS / ( ( CS * RRSe ) - CS ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6407407407407407, "obj2": 0.20570211162016128}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + MDR ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + RRSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.42407407407407405, "obj2": 0.4238189202084208}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( BR * DDR ) / FirstVNF_Mem ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( Min( MRS ,DDR ) - MDR ) + ( PN - MDR ) ) ) + ( FirstVNF_CPU * CRS ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( Max( Min( MLU ,RMSe ),RCSe ) - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - RMSe ) - ( MUC + RRSe ) ) + MUR ),MUC ) ) + Min( Min( Max( MUC,Min( Max( MUR,Max( MLU,DS ) ) ,CS ) ) ,MUR ) ,( ( RCSe - RMSe ) + RRSe ) ) ) )", "obj1": 0.5814814814814815, "obj2": 0.2621248221930757}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( MDR - PN ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( Max( CS,( MUR + ( Min( MUR ,RCSe ) * ( MUR / MUR ) ) ) ),DS ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.9944444444444445, "obj2": 0.002139553590849566}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( ( CRS * MRS ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( RMSe ,Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ) ) ,Max( MUM,MUC ) )", "obj1": 0.7203703703703703, "obj2": 0.1286583547443826}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - Max( FirstVNF_RAM_Server,DDR ) ) * ( ( DDR / FirstVNF_Mem ) / ( Const * FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( ( ( ( MUM / MLU ) / ( RCSe / ( MLU * MUR ) ) ) / MLU ) / ( Max( Min( RRSe ,CS ),RMSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5037037037037037, "obj2": 0.33104600205606666}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( MRS * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.9111111111111111, "obj2": 0.037590427755515084}, {"determining": "( ( ( ( DDR + BR ) + FirstVNF_CPU_Server ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( Min( MUC ,RMSe ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RCSe - MUC ) + MUC ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.8296296296296296, "obj2": 0.07051064362495928}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5451950100831746}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / DDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * ( DDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) / MUR ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( CS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7277777777777777, "obj2": 0.12102043889470938}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + MDR ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( MUR + RRSe ) + ( ( MUC / DS ) / ( Max( ( ( MUC - MUC ) + Max( MUC,RRSe ) ),( CS * MUC ) ) * MUM ) ) )", "obj1": 0.4166666666666667, "obj2": 0.43163873223820043}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( MUC / DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.37407407407407406, "obj2": 0.48621919862144825}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ACS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( RRSe,( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2796296296296296, "obj2": 0.5935233382356481}, {"determining": "( Min( ACS ,RRS ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,( DDR / ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( ( ( RRSe - RMSe ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( ( Max( ( ( MUC * MUC ) + ( DS / RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) / DS ) + MUM ) / RMSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( Min( DDR ,MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR - PN ) ,( Min( MRS ,RRS ) * FirstVNF_CPU ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( FirstVNF_CPU_Server / Const ) ),Const ) ) )", "choosing": "( RRSe - ( ( Max( Max( CS,( MUR + ( Min( MUR ,RCSe ) * ( MUR / MUR ) ) ) ),DS ) - ( MUC * MUR ) ) * ( RRSe * RMSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.23341227039278026}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3888888888888889, "obj2": 0.46913248653027556}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5545132785102355}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( PN * ( CRS / RRS ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( MUR * MLU ) / ( MUC + RRSe ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5451950100831746}, {"determining": "( ( ( ( ACS * DDR ) / ARS ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,PN ) ) / ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( RRSe + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * Max( ( ( MUC * MUC ) + ( MLU / MLU ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.15925925925925927, "obj2": 0.7381347785412387}, {"determining": "( ( ( Max( Max( DDR,FirstVNF_CPU_Server ),Max( FirstVNF_RAM,ACS ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + Min( FirstVNF_Mem ,CRS ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( MUC + RMSe ) ,( DS / MUC ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + ( RMSe - Min( ( DS / MUC ) ,RRSe ) ) ),MUC ) ) + ( MUR + RRSe ) ) )", "obj1": 0.8296296296296296, "obj2": 0.07051064362495928}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( RMSe ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.7092592592592593, "obj2": 0.13992063362834203}, {"determining": "Min( ACS ,( Min( FirstVNF_CPU_Server ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( MDR ,RRS ) ) ),MRS ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) + ( Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM ) + DDR ) ,FirstVNF_RAM ) / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( ( Max( MUC,MUM ) / RMSe ) + ( DS + MUM ) ) ) + MUM ) / ( ( ( RCSe * ( MLU * ( MUM / DS ) ) ) / MLU ) + MUM ) ) ) + Max( ( MUC + ( DS * RCSe ) ),MUR ) )", "obj1": 0.12222222222222222, "obj2": 0.8014596286352669}, {"determining": "( ( ( ( PN * Max( BR,( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUC + RRSe ) + ( DS - ( RCSe * CS ) ) ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9703703703703703, "obj2": 0.01041102169260135}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Min( Const ,FirstVNF_CPU ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - RRSe ) + MUC ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6148148148148148, "obj2": 0.22940828616455483}], "26": [{"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( FirstVNF_Mem ,RRS ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),Max( ( Min( ( ( RMSe + RCSe ) * Max( MUR,Max( MLU,DS ) ) ) ,( Max( ( RCSe / MLU ),MUM ) / ( CS - ( MLU + RCSe ) ) ) ) / RRSe ),CS ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( ( ( ACS * DDR ) - ARS ) - ( BR - ( RRS * ( FirstVNF_CPU * ACS ) ) ) ) / Min( ( CRS + PN ) ,Min( FirstVNF_CPU ,AMS ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RMSe ,( MUM / ( CS / MUR ) ) ) - ( CS * MLU ) ) - Max( ( RRSe + MUR ),( MLU * CS ) ) ) - ( RCSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( PN - MDR ) * Max( BR,Max( Min( Max( AMS,BR ) ,( MDR - RRS ) ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - AMS ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( RCSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( Max( CS,RMSe ) ,( RMSe - ( MUC / RMSe ) ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) + ( ( ( ( DDR * MRS ) / Max( BR,Const ) ) + ( ( PN / MDR ) - ( Min( ( Min( ARS ,AMS ) + ( RRS - AMS ) ) ,FirstVNF_RAM ) * FirstVNF_CPU ) ) ) + ( Min( ( MDR - FirstVNF_RAM_Server ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Min( ( ( Min( RMSe ,RRSe ) * RRSe ) - Max( MUM,RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ,( ( MUR / DS ) - RRSe ) ) + Max( ( ( Min( RMSe ,( MLU + MUR ) ) / CS ) / DS ),( MLU - RMSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem_Server,CRS ) ) + Min( ( PN - MDR ) ,( Max( Min( ( PN - Const ) ,ARS ),ACS ) + Min( ( PN * MDR ) ,Min( AMS ,Const ) ) ) ) ) + ( CRS * MDR ) ) + PN )", "choosing": "( Max( ( MUC / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,( ( ( RRSe / Min( MUR ,MUC ) ) + ( RMSe / Min( DS ,( RRSe + MUC ) ) ) ) / DS ) ) )", "obj1": 0.40370370370370373, "obj2": 0.4144542083636523}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.4498477317897245}, {"determining": "( ( PN * ( ARS / PN ) ) + ( ( FirstVNF_RAM_Server + RRS ) - Max( MDR,( BR - Const ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( ( ( Max( RCSe,RCSe ) / Max( ( ( RCSe / ( MLU + DS ) ) / CS ),Min( ( CS * Max( MUM,MUC ) ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6773568402031983}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.412962962962963, "obj2": 0.3954527176914207}, {"determining": "( ( ( ( PN * Max( BR,( Min( MRS ,RRS ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) / RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5054279404967553}, {"determining": "( ( ( ( Max( BR,( FirstVNF_RAM_Server + ( ( RRS * ARS ) - ( FirstVNF_RAM + Const ) ) ) ) * PN ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,Max( MUC,MUC ) ) - ( ( ( DS / ( Max( MUR,MUM ) * ( MUR / ( CS - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6601489230863515}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.32592592592592595, "obj2": 0.5322679831692783}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( CRS * FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.7183093853192382}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( ( MRS * DDR ) * Min( PN ,Const ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - ( CRS * ( FirstVNF_Mem_Server + AMS ) ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ACS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,Min( Max( CS,Max( ( Min( RRSe ,CS ) / RCSe ),MUC ) ) ,MUR ) ) - ( RMSe / Max( ( RMSe / ( MUM * RCSe ) ),MUM ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6395076488859971}, {"determining": "( ( PN * ( ( ( MDR + FirstVNF_Mem ) / ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / FirstVNF_Mem ) / ( AMS * ACS ) ) * Min( Max( PN,MDR ) ,FirstVNF_Mem ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,AMS ) ) ) ) + ( FirstVNF_CPU_Server / Min( ( BR + FirstVNF_Mem_Server ) ,BR ) ) )", "choosing": "( ( RCSe - DS ) / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7746621932225014}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( CRS / FirstVNF_Mem ) / ( ARS + MDR ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,( CRS + DDR ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Max( ( Min( ( MRS * Min( RRS ,BR ) ) ,Const ) + DDR ),RRS ) )", "choosing": "( ( RCSe / MLU ) - ( ( ( DS / ( ( RRSe / RRSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.49444444444444446, "obj2": 0.33965529102888703}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5518518518518518, "obj2": 0.28667588958294526}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( ACS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( RRSe * Max( Max( ( MUC / ( RCSe * DS ) ),MUR ),CS ) ) ,RMSe ) ) )", "obj1": 0.9462962962962963, "obj2": 0.016197825559123885}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.025596422368479112}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "Min( ( FirstVNF_CPU / ARS ) ,( ( ( ( ( ( ACS + RRS ) / FirstVNF_RAM ) * ARS ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( MUR - RMSe ) ,( MUR / RRSe ) ) )", "obj1": 0.1111111111111111, "obj2": 0.824845806405504}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - Max( FirstVNF_RAM_Server,DDR ) ) * ( ( DDR / FirstVNF_Mem ) / ( Const * FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( ( ( ( MUM / MLU ) / ( RCSe / ( MLU * MUR ) ) ) / MLU ) / ( Max( Min( RRSe ,CS ),RMSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5037037037037037, "obj2": 0.33104600205606666}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( ( ( CRS + FirstVNF_CPU ) - MDR ) ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( RMSe ,RMSe ) ) ,MUR )", "obj1": 0.6907407407407408, "obj2": 0.1672411561707134}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4537037037037037, "obj2": 0.36279189658275734}, {"determining": "( ( ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + ARS ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( RRS * ( DDR - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) + ( ARS - ( ( FirstVNF_CPU_Server - RRS ) + FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,MLU ) + ( ( DS / RCSe ) / ( RMSe * RCSe ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3189339361987874}, {"determining": "Min( ACS ,( Min( FirstVNF_CPU_Server ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * Min( MDR ,( CRS / FirstVNF_Mem ) ) ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11481481481481481, "obj2": 0.8028941081759269}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.7851851851851852, "obj2": 0.08956447961550529}, {"determining": "( ( BR - FirstVNF_Mem ) + Min( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ,Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( MUC / DS ) / ( RMSe * MUM ) ) + Max( ( ( ( Max( ( ( RMSe - CS ) + MUR ),MUC ) - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( RCSe * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + MLU ) ) ) ) )", "obj1": 0.6981481481481482, "obj2": 0.14957573547362682}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( ( RRS + FirstVNF_RAM ) * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4648148148148148, "obj2": 0.3561007417827641}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( PN - MDR ) + Max( ( PN - MDR ),( FirstVNF_Mem / BR ) ) ) * ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) + PN ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( MLU * Min( ( ( RRSe / ( CS * CS ) ) / RCSe ) ,( MUR / RCSe ) ) ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.2759259259259259, "obj2": 0.5925279212053204}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.42962962962962964, "obj2": 0.38706112621041366}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,PN ) * ( FirstVNF_CPU + BR ) ) * ( ( CRS / FirstVNF_Mem ) / DDR ) ) ) ) + ( ( PN - MDR ) - Min( ( PN * ( BR * MDR ) ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6722222222222223, "obj2": 0.17459518807805202}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_RAM_Server + FirstVNF_CPU_Server ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Min( RRSe ,CS ) ) ,MUR ) ,( ( RCSe - ( ( MUR + Min( CS ,MUR ) ) / ( RMSe - RMSe ) ) ) + RRSe ) ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6581863422743687}, {"determining": "( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ( ( PN * Max( BR,( ( FirstVNF_RAM * AMS ) + ( CRS + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5166666666666667, "obj2": 0.3093386056070891}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( ( CRS / ARS ) ,BR ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( RRS * ( DDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) / MUR ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( CS / ( MUM * ( ( MUC + MUC ) + ( RMSe - MUR ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7518518518518519, "obj2": 0.11270625401184768}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( ACS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC - RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5564980516846785}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + MUM ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.49331796368619796}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( Max( RRSe,MUR ) - ( CS * RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.15, "obj2": 0.752647670298793}, {"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem / CRS ) ) + Min( ( PN - ( PN - Min( DDR ,( ACS / BR ) ) ) ) ,( MDR + Min( MRS ,ARS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( Max( DS,Max( RCSe,Max( ( ( RRSe / CS ) / ( RMSe + MUM ) ),( MUR * DS ) ) ) ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - Max( ( MUC * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2735704438343623}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,DDR ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / ARS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_Mem_Server - Min( DDR ,FirstVNF_CPU_Server ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU - CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - RMSe ) ,( RMSe - MUM ) ),( CS * MUC ) ) ) ) + Min( Max( MUM,MUC ) ,( RCSe + Max( MUC,( RRSe - MLU ) ) ) ) ) / ( MUC + RRSe ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5749400404705883}, {"determining": "( ( ( FirstVNF_Mem * CRS ) + ( ( PN * Max( BR,( FirstVNF_Mem + ( ( BR + FirstVNF_CPU ) - ( ACS - BR ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( DDR + FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( Min( RCSe ,MUM ) / ( MUM * Max( ( ( MUC - MUC ) + Max( MUC,RRSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4723542646472011}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.1259259259259259, "obj2": 0.796586015888108}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( RMSe + Max( ( RMSe * MUM ),MUC ) ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.3817522364994617}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( ( ( ( PN * ( ( RRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( ARS - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( MUM + RRSe ) ) ) - ( ( Max( MUC,( Max( CS,DS ) / ( ( MUR - Max( DS,DS ) ) - ( MUM + Max( MUC,RMSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.3476921865976444}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( AMS / FirstVNF_CPU ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ACS ) ) ) ) ),Const ) - ARS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC - DS ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( DS,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6259259259259259, "obj2": 0.21612320817533118}, {"determining": "Min( ( ARS / FirstVNF_RAM_Server ) ,( ( ( ( CRS * ARS ) - ( MRS / ( ACS - ( Min( MDR ,FirstVNF_CPU ) / ACS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( ( DS / ( MUM * MUC ) ) - ( ( Max( RMSe,DS ) - ( MUC * Min( Min( ( MUC - RMSe ) ,( MUC / DS ) ) ,RMSe ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7631771771934104}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2796296296296296, "obj2": 0.5840098973871425}, {"determining": "( ( ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( RMSe + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6351851851851852, "obj2": 0.2127090951784997}, {"determining": "( ( ( ( ( DDR * FirstVNF_CPU_Server ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,MDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( MDR - PN ) + Min( Max( FirstVNF_CPU_Server,( ARS + AMS ) ) ,DDR ) ) ) + ( CRS * PN ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem / CRS ) / ( MDR + MDR ) ) ) ) ) )", "choosing": "( ( ( ( MUM - ( RMSe - Min( DS ,DS ) ) ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( ( RRSe + CS ),MUC ) ,MUR ) ,( Max( Max( ( MLU + MUC ),Min( Max( CS,RRSe ) ,MUR ) ),MUC ) / RMSe ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11743793493702366}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( Const / FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( PN * MDR ) + DDR ) + ( PN - MDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( ( MUM - RRSe ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,( ( RMSe + RCSe ) / ( Max( CS,MUR ) / DS ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.1962962962962963, "obj2": 0.6945582881051018}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( PN - MDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,( DS / ( MUM * MUC ) ) ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5204055416734484}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( MUR + RRSe ) + ( ( MUC / DS ) / ( RMSe * DS ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9574074074074074, "obj2": 0.012458521397348087}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.8, "obj2": 0.08121391607890814}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS / FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( DS / MUC ) ) / ( ( RMSe + Max( ( Min( Max( MUM,RCSe ) ,MUR ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09934000637211733}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * ( MRS * DDR ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7469078504013423}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( Min( PN ,( FirstVNF_CPU + ARS ) ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - Min( CS ,RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUC,( Max( MUM,CS ) + MUR ) ) * MUC ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7003986470109033}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( Max( ( ( RMSe - CS ) + MUR ),MUC ) - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.45, "obj2": 0.3804115515446545}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.37592592592592594, "obj2": 0.4851412415246541}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,PN ) * ( FirstVNF_CPU + BR ) ) * ( ( CRS / FirstVNF_Mem ) / DDR ) ) ) ) + ( ( PN - MDR ) - Min( ( PN * ( BR * MDR ) ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6814814814814815, "obj2": 0.16797027582425497}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( MRS * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - ( MLU / MUM ) )", "obj1": 0.9259259259259259, "obj2": 0.032261869242437714}, {"determining": "( ( ( ( PN * Max( BR,( ( CRS + ( FirstVNF_Mem / MDR ) ) + Max( ( PN + MDR ),( ARS * FirstVNF_RAM ) ) ) ) ) + ( PN + CRS ) ) + ( CRS * FirstVNF_Mem ) ) + ( RRS / ( BR + ( FirstVNF_CPU * MRS ) ) ) )", "choosing": "Min( ( RCSe * CS ) ,Max( RMSe,MUR ) )", "obj1": 0.3333333333333333, "obj2": 0.5204055416734484}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUC,( CS * MUC ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.7185185185185186, "obj2": 0.1313038960529296}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_CPU ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( RRSe + RRSe ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.6203703703703703, "obj2": 0.224233222881833}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe - Min( RMSe ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.45185185185185184, "obj2": 0.37789790280528873}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ACS * DDR ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.7796296296296297, "obj2": 0.09496427712299593}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5451950100831746}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ),ACS ) ) )", "choosing": "( ( ( ( MUM - ( MLU * CS ) ) * MUC ) - MUM ) * ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) )", "obj1": 0.7592592592592593, "obj2": 0.10502636834724553}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5545132785102355}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + ( ( CRS + FirstVNF_CPU ) - MDR ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3888888888888889, "obj2": 0.46913248653027556}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4759259259259259, "obj2": 0.3518308856982456}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,( Const / FirstVNF_Mem ) ) ) ,( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) * Const ) ) )", "choosing": "( ( CS + DS ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5907407407407408, "obj2": 0.2510806677781804}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( DDR / FirstVNF_CPU ) - ( ( Min( MRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + Max( ( PN - MDR ),Min( ( BR * MDR ) ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS - ( Min( MDR ,FirstVNF_Mem_Server ) + ( BR / MRS ) ) ),( BR / Min( ACS ,( AMS / Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUC * CS ) ) - Max( ( CS * MLU ),( Max( DS,MUM ) + MUR ) ) ) - ( ( ( DS / ( Min( MUC ,Min( MUM ,( DS / RCSe ) ) ) * Max( ( ( MUC + MUC ) + ( DS - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + ( RCSe / CS ) ) / RMSe ) )", "obj1": 0.8574074074074074, "obj2": 0.06435948616460503}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( MUC / DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.5388888888888889, "obj2": 0.28911545165896696}, {"determining": "( ( RRS / ( DDR + BR ) ) + ( ( MDR + FirstVNF_CPU ) - ARS ) )", "choosing": "( ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + ( RRSe * RCSe ) ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.31666666666666665, "obj2": 0.5451950100831746}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) / ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / ( FirstVNF_CPU_Server / PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( ( DS - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( Min( Max( RRSe,CS ) ,( MUC - DS ) ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.18888888888888888, "obj2": 0.6976360953118425}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6481481481481481, "obj2": 0.19297975167854714}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUC ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.23452230812397748}, {"determining": "( ( Max( ( ( Max( MRS,ACS ) - MDR ) + ( PN - MDR ) ),( PN * Max( BR,Max( BR,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + Max( MUC,Max( RRSe,RMSe ) ) ) - RRSe ),Max( ( Max( ( Max( MUC,MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3042844530609376}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( PN - MDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( ACS + RRS ) / FirstVNF_RAM ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( MUR,MUC ) ,CS ) ) ) - ( DS + RMSe ) ) - DS ),Max( MLU,Max( RMSe,( DS / ( MUM * MUC ) ) ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.769137909816158}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * ( FirstVNF_CPU + Const ) ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + ( RCSe + MUC ) ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8777777777777778, "obj2": 0.05298891020248251}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5662097876131792}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.8185185185185185, "obj2": 0.07278840164419524}, {"determining": "( ( PN * ( ( ( ( ( MDR - MRS ) * FirstVNF_RAM ) * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / Const ) / Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe - Min( ( ( RRSe + MUR ) * Max( ( Min( ( MUM / RCSe ) ,MUC ) + ( MUC / DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.3685185185185185, "obj2": 0.49160490217148617}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( RMSe ,RMSe ) ) ,Max( MUM,MUC ) )", "obj1": 0.7092592592592593, "obj2": 0.13992063362834203}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / DDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * ( DDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RCSe,MLU ) / MUR ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( CS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7277777777777777, "obj2": 0.12102043889470938}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - Min( Min( RRS ,FirstVNF_Mem ) ,MRS ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_CPU ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( RCSe,( MLU * CS ) ) ) - ( ( ( DS / ( MUM * ( CS / ( ( CS * RRSe ) - CS ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6407407407407407, "obj2": 0.20570211162016128}, {"determining": "( ( ( ( ( DDR * MRS ) / Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,( PN * Min( FirstVNF_RAM ,MRS ) ) ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,( ( RRS * MRS ) - ( MRS + ARS ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + DDR ) ) ,( DDR / ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR * CS ) - ( MUM / MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,RRS ) * ( DDR / FirstVNF_RAM ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( Min( PN ,Const ) - Min( MRS ,FirstVNF_CPU_Server ) ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( ( ( Min( RCSe ,MUR ) + ( RRSe / Min( RMSe ,MUC ) ) ) / ( MUM * CS ) ) - MUC ) + RMSe ) + ( CS + RRSe ) ) )", "obj1": 0.8592592592592593, "obj2": 0.06264360186975307}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8870370370370371, "obj2": 0.04831522968960674}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * Max( ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( Max( ( MLU * ( MUM / MUM ) ),MUM ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.7333333333333333, "obj2": 0.11968418743121205}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5662097876131792}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8907407407407407, "obj2": 0.046966227878319916}, {"determining": "( ( ACS * FirstVNF_Mem ) + ( ARS - Max( ( ( ( ( ( ACS * DDR ) / FirstVNF_RAM_Server ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) * FirstVNF_CPU ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),Min( ( MUR * RRSe ) ,( RMSe - MUM ) ) ) ) ) + RCSe ) / RMSe ) )", "obj1": 0.6444444444444445, "obj2": 0.19527446989855546}], "27": [{"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ( CRS * FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RCSe - DS ) ),RRSe ) ) ) + MUM ) / RMSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( ( ( ACS * DDR ) - ARS ) - ( BR - ( RRS * ( FirstVNF_CPU * ACS ) ) ) ) / Min( ( CRS + PN ) ,Min( FirstVNF_CPU ,AMS ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( RMSe ,( MUM / ( CS / MUR ) ) ) - ( CS * MLU ) ) - Max( ( RRSe + MUR ),( MLU * CS ) ) ) - ( RCSe * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) - ( Max( ACS,CRS ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( MUC ,CS ),MUM ) + ( MUC * MUR ) )", "obj1": 0.1037037037037037, "obj2": 0.8510068539346329}, {"determining": "( ( PN * ( ARS / PN ) ) + ( ( FirstVNF_RAM_Server + RRS ) - Max( MDR,( BR - Const ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( ( ( Max( RCSe,RCSe ) / Max( ( ( RCSe / ( MLU + DS ) ) / CS ),Min( ( CS * Max( MUM,MUC ) ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6773568402031983}, {"determining": "( ( ( ( Max( BR,( FirstVNF_RAM_Server + ( ( RRS * ARS ) - ( FirstVNF_RAM + Const ) ) ) ) * PN ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,Max( MUC,MUC ) ) - ( ( ( DS / ( Max( MUR,MUM ) * ( MUR / ( CS - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6601489230863515}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.328890150957359}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.035202837137860654}, {"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem / CRS ) ) + Min( ( PN - ( PN - Min( DDR ,( ACS / BR ) ) ) ) ,( MDR + Min( MRS ,ARS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( Max( DS,Max( RCSe,Max( ( ( RRSe / CS ) / ( RMSe + MUM ) ),( MUR * DS ) ) ) ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - Max( ( MUC * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2735704438343623}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.8185185185185185, "obj2": 0.0727412157801789}, {"determining": "( ( ( ( ( DDR * MRS ) / Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,( PN * Min( FirstVNF_RAM ,MRS ) ) ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,( ( RRS * MRS ) - ( MRS + ARS ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + DDR ) ) ,( DDR / ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR * CS ) - ( MUM / MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( MUC / DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.5388888888888889, "obj2": 0.28911545165896696}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.4498477317897245}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) * FirstVNF_CPU ) + ( ( MDR - MDR ) + ( ( PN / ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,MUC ) / ( MLU * MUR ) ) - Min( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) ,( MUC + RRSe ) ) )", "obj1": 0.3814814814814815, "obj2": 0.467311644544682}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( FirstVNF_CPU ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40185185185185185, "obj2": 0.42786189629731597}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + FirstVNF_RAM ) ) ) * ( PN + ( ( MRS * ( RRS / MRS ) ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - Max( ( MLU * CS ),( Min( RRSe ,CS ) + MUR ) ) ) - ( ( ( DS / ( Max( DS,( CS * MUC ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6685185185185185, "obj2": 0.17146141826024128}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem_Server,CRS ) ) + Min( ( PN - MDR ) ,( Max( Min( ( PN - Const ) ,ARS ),ACS ) + Min( ( PN * MDR ) ,Min( AMS ,Const ) ) ) ) ) + ( CRS * MDR ) ) + PN )", "choosing": "( Max( ( MUC / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,( ( ( RRSe / Min( MUR ,MUC ) ) + ( RMSe / Min( DS ,( RRSe + MUC ) ) ) ) / DS ) ) )", "obj1": 0.40370370370370373, "obj2": 0.4144542083636523}, {"determining": "( ( BR - FirstVNF_Mem ) + Min( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ,Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( MUC / DS ) / ( RMSe * MUM ) ) + Max( ( ( ( Max( ( ( RMSe - CS ) + MUR ),MUC ) - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( RCSe * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + MLU ) ) ) ) )", "obj1": 0.6981481481481482, "obj2": 0.14957573547362682}, {"determining": "( ( ( ( PN * ( ( RRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( ARS - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( MUM + RRSe ) ) ) - ( ( Max( MUC,( Max( CS,DS ) / ( ( MUR - Max( DS,DS ) ) - ( MUM + Max( MUC,RMSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.3476921865976444}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * ( FirstVNF_CPU + Const ) ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + ( RCSe + MUC ) ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8777777777777778, "obj2": 0.05298891020248251}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5518518518518518, "obj2": 0.28667588958294526}, {"determining": "( ( PN * ( ( Max( DDR,MRS ) / ( ( ARS / ( ACS * DDR ) ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + ( BR * FirstVNF_Mem_Server ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( MUM + RRSe ) * Max( ( ( MUC + MUC ) + ( RRSe - RMSe ) ),CS ) ) ,( MUR - MUR ) ) ) )", "obj1": 0.37407407407407406, "obj2": 0.4842497067218254}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.22962962962962963, "obj2": 0.6479182124865871}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( ( RRS + FirstVNF_RAM ) * PN ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( Max( ( MLU * CS ),( RRSe + MUC ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4444444444444444, "obj2": 0.3737978242607911}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( Const ,PN ) ) * ( ( FirstVNF_RAM * FirstVNF_CPU_Server ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( FirstVNF_Mem_Server + DDR ) - MDR ) * ( Min( AMS ,ARS ) / FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( MUM * RMSe ) ),Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Max( MUM,( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6337467411964423}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( ( ( CRS + FirstVNF_CPU ) - MDR ) ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( RMSe ,RMSe ) ) ,MUR )", "obj1": 0.6907407407407408, "obj2": 0.1672411561707134}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( RMSe + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3925925925925926, "obj2": 0.46061624132693557}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,PN ) * Min( FirstVNF_CPU ,AMS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( CRS / ARS ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( RMSe * Min( ( MUM - ( MUM / DS ) ) ,CS ) ) * ( ( ( ( MUM * Max( Min( ( RMSe - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - MUM ) )", "obj1": 0.1962962962962963, "obj2": 0.6928752442891158}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( PN * ( ( ( MDR + FirstVNF_Mem ) / ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / FirstVNF_Mem ) / ( AMS * ACS ) ) * Min( Max( PN,MDR ) ,FirstVNF_Mem ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,AMS ) ) ) ) + ( FirstVNF_CPU_Server / Min( ( BR + FirstVNF_Mem_Server ) ,BR ) ) )", "choosing": "( ( RCSe - DS ) / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7746621932225014}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.1259259259259259, "obj2": 0.796586015888108}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * ( DDR / FirstVNF_RAM ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.8592592592592593, "obj2": 0.06257735599681663}, {"determining": "( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ( ( PN * Max( BR,( ( FirstVNF_RAM * AMS ) + ( CRS + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5166666666666667, "obj2": 0.3093386056070891}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( ( MRS * DDR ) * Min( PN ,Const ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - ( CRS * ( FirstVNF_Mem_Server + AMS ) ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ACS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,Min( Max( CS,Max( ( Min( RRSe ,CS ) / RCSe ),MUC ) ) ,MUR ) ) - ( RMSe / Max( ( RMSe / ( MUM * RCSe ) ),MUM ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6395076488859971}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * ( MRS * DDR ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7469078504013423}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6333333333333333, "obj2": 0.2071906208546325}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * Min( MRS ,MDR ) ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( PN ,Const ) + MDR ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( DS - ( RCSe * Max( ( RMSe * Max( ( ( RRSe - DS ) + ( DS * ( CS - RRSe ) ) ),CS ) ),RMSe ) ) )", "obj1": 0.8314814814814815, "obj2": 0.06783473387487782}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_CPU ) ) ) ) ),Const ) ) )", "choosing": "( Max( ( MLU * CS ),( RRSe + RRSe ) ) + Max( ( MUR / ( DS * RCSe ) ),MUR ) )", "obj1": 0.6166666666666667, "obj2": 0.22624532120547208}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( PN * ( ( DDR - RRS ) + FirstVNF_CPU ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( FirstVNF_CPU_Server - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - Min( DS ,( ( MUM + MUR ) * MUC ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5562397293338617}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( AMS / FirstVNF_CPU ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ACS ) ) ) ) ),Const ) - ARS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC - DS ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( DS,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6259259259259259, "obj2": 0.21612320817533118}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973786733471403}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( PN ,FirstVNF_RAM ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * ( ( MUR * RCSe ) * MLU ) ) ) + MUM ) + RMSe ) )", "obj1": 0.8925925925925926, "obj2": 0.046055207255286744}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) + ( ( ( ( DDR * MRS ) / Max( BR,Const ) ) + ( ( PN / MDR ) - ( Min( ( Min( ARS ,AMS ) + ( RRS - AMS ) ) ,FirstVNF_RAM ) * FirstVNF_CPU ) ) ) + ( Min( ( MDR - FirstVNF_RAM_Server ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Min( ( ( Min( RMSe ,RRSe ) * RRSe ) - Max( MUM,RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ,( ( MUR / DS ) - RRSe ) ) + Max( ( ( Min( RMSe ,( MLU + MUR ) ) / CS ) / DS ),( MLU - RMSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( RMSe + Max( ( RMSe * MUM ),MUC ) ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.3817522364994617}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( RRS ,Max( FirstVNF_CPU,FirstVNF_RAM_Server ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Const / FirstVNF_CPU ) )", "choosing": "( ( ( ( MUC - MUC ) * Max( MUR,( ( ( ( MUM - MUR ) - ( RMSe * MLU ) ) * ( Min( MLU ,DS ) - RRSe ) ) + Min( ( RCSe / RRSe ) ,( MUR + ( MUM * RMSe ) ) ) ) ) ) + MUM ) / ( ( RMSe + Max( ( RCSe * RRSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.23452230812397748}, {"determining": "( ( ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + ARS ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( RRS * ( DDR - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) + ( ARS - ( ( FirstVNF_CPU_Server - RRS ) + FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,MLU ) + ( ( DS / RCSe ) / ( RMSe * RCSe ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3189339361987874}, {"determining": "( ( ( ( PN * Max( BR,Max( BR,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.5074074074074074, "obj2": 0.3264083263609779}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( AMS / FirstVNF_CPU ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ACS ) ) ) ) ),Const ) - ARS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC - DS ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( DS,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.575925925925926, "obj2": 0.26523491373228725}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,DDR ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / ARS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RMSe - Max( ( MLU - CS ),( RRSe + MUR ) ) ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11296296296296296, "obj2": 0.8110470540796998}, {"determining": "( Max( MDR,( ( ( FirstVNF_RAM / Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,CRS ) ) ) * ACS ) * ARS ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( DS - RCSe ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( ( DS + MLU ) / MUM ) / DS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5944444444444444, "obj2": 0.24469946636815718}, {"determining": "Min( ( FirstVNF_CPU / ARS ) ,( ( ( ( ( ( ACS + RRS ) / FirstVNF_RAM ) * ARS ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( MUR - RMSe ) ,( MUR / RRSe ) ) )", "obj1": 0.1111111111111111, "obj2": 0.824845806405504}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( ARS - Min( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ,FirstVNF_CPU ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.32592592592592595, "obj2": 0.5322679831692783}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2796296296296296, "obj2": 0.5840098973871425}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( CRS * FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.7183093853192382}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4759259259259259, "obj2": 0.3518308856982456}, {"determining": "( ( Max( ( ( Max( MRS,ACS ) - MDR ) + ( PN - MDR ) ),( PN * Max( BR,Max( BR,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + Max( MUC,Max( RRSe,RMSe ) ) ) - RRSe ),Max( ( Max( ( Max( MUC,MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3042844530609376}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.8, "obj2": 0.08121391607890814}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( Min( PN ,( FirstVNF_CPU + ARS ) ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - Min( CS ,RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUC,( Max( MUM,CS ) + MUR ) ) * MUC ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7003986470109033}, {"determining": "Min( ( ( Min( ( CRS - Const ) ,DDR ) / ARS ) / ARS ) ,( ( ( ARS * Const ) * ( ( ARS * ( ( ACS - MDR ) / FirstVNF_RAM ) ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) ) + DDR ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( ( RMSe - DS ) ,MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7630408461257844}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( MUR + RRSe ) + ( ( MUC / DS ) / ( RMSe * DS ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9574074074074074, "obj2": 0.012458521397348087}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.30925925925925923, "obj2": 0.5543666559011072}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6407407407407407, "obj2": 0.20023499137058465}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ( PN + AMS ) ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( Min( ACS ,DDR ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( ( MUM - RRSe ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,( Max( Max( MUM,MUC ),DS ) / ( Max( CS,MUR ) / DS ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.7888888888888889, "obj2": 0.08757985592799182}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4537037037037037, "obj2": 0.36279189658275734}, {"determining": "( ( ( ( PN * Max( BR,( Min( MRS ,RRS ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) / RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5054279404967553}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4203703703703704, "obj2": 0.39330737941906607}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - Min( Const ,FirstVNF_Mem_Server ) ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( CS * RMSe ) )", "obj1": 0.9925925925925926, "obj2": 0.003009739320660653}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + MUM ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.49331796368619796}, {"determining": "( ( ( ( PN * Max( BR,( Min( MRS ,RRS ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) / RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5054279404967553}, {"determining": "( ( ( ( PN - MDR ) + Max( ( PN - MDR ),( FirstVNF_Mem / BR ) ) ) * ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) + PN ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( MLU * Min( ( ( RRSe / ( CS * CS ) ) / RCSe ) ,( MUR / RCSe ) ) ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.2759259259259259, "obj2": 0.5925279212053204}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( DDR + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,Max( RRSe,MUR ) ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.45185185185185184, "obj2": 0.3660760157307868}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.8, "obj2": 0.08121391607890814}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( DDR / FirstVNF_CPU ) - ( ( Min( MRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + Max( ( PN - MDR ),Min( ( BR * MDR ) ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS - ( Min( MDR ,FirstVNF_Mem_Server ) + ( BR / MRS ) ) ),( BR / Min( ACS ,( AMS / Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUC * CS ) ) - Max( ( CS * MLU ),( Max( DS,MUM ) + MUR ) ) ) - ( ( ( DS / ( Min( MUC ,Min( MUM ,( DS / RCSe ) ) ) * Max( ( ( MUC + MUC ) + ( DS - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + ( RCSe / CS ) ) / RMSe ) )", "obj1": 0.8574074074074074, "obj2": 0.06435948616460503}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3277777777777778, "obj2": 0.5310767508004932}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ARS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( CS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.016998470153916586}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( MRS * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - ( MLU / MUM ) )", "obj1": 0.9259259259259259, "obj2": 0.032261869242437714}, {"determining": "( ( ( ( MDR * FirstVNF_Mem ) + ACS ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( PN - ( FirstVNF_CPU + MDR ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( ( Max( RRSe,MUC ) - ( CS * RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.15, "obj2": 0.752647670298793}, {"determining": "( ( Max( FirstVNF_RAM_Server,RRS ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * MRS ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( RMSe ,RMSe ) ) ,( MUC / ( MUR / CS ) ) )", "obj1": 0.7148148148148148, "obj2": 0.13780836597538407}, {"determining": "( ( ( ( PN * Min( BR ,( ( PN - MDR ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * Min( RRS ,Const ) ) ) ) ) + ( ( MDR - PN ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( Max( RRSe,MUR ) - ( CS * RMSe ) ),Max( ( MLU * CS ),( ( MUR - ( Min( CS ,Min( RMSe ,MLU ) ) + MUR ) ) + ( MUM + CS ) ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( MLU - DS ) ,( MUC / DS ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.937037037037037, "obj2": 0.02542959952517016}, {"determining": "( ( ( ( PN * Max( BR,Max( BR,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3042844530609376}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( ( RRS + FirstVNF_RAM ) * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4648148148148148, "obj2": 0.3561007417827641}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5662097876131792}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,DDR ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / ARS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_Mem_Server - Min( DDR ,FirstVNF_CPU_Server ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11666666666666667, "obj2": 0.8007147303233689}, {"determining": "( ( ( Max( MDR,( ( ( ACS * DDR ) / ARS ) - ( ( PN * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem / CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( CRS - ARS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( RRSe * Min( Min( ( RCSe - DS ) ,( MUM - RMSe ) ) ,( CS * MUC ) ) ) ) + MUM ) / ( MUC + ( MUR * CS ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.54953824693522}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.7851851851851852, "obj2": 0.08956447961550529}, {"determining": "( ( PN * ( ( ( ( ( MDR - MRS ) * FirstVNF_RAM ) * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / Const ) / Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RMSe - ( RCSe - Min( ( ( RRSe + MUR ) * Max( ( Min( ( MUM / RCSe ) ,MUC ) + ( MUC / DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.3685185185185185, "obj2": 0.49160490217148617}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( RRS * FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUM ,MUM ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + Max( ( MLU * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5749400404705883}, {"determining": "( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ( ( PN * Max( BR,( ( FirstVNF_RAM * MDR ) + ( CRS + PN ) ) ) ) + ( Min( BR ,( Const * BR ) ) + ( PN - MDR ) ) ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( ( ( DS / ( ( MUM + MLU ) - Max( MUR,MUR ) ) ) * Max( Max( RMSe,Min( RCSe ,RMSe ) ),( ( RCSe + MUR ) - MUM ) ) ) * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),MLU ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2611111111111111, "obj2": 0.6073704129053723}, {"determining": "( ( ( ( PN * Max( BR,( ( CRS + ( FirstVNF_Mem / MDR ) ) + Max( ( PN + MDR ),( ARS * FirstVNF_RAM ) ) ) ) ) + ( PN + CRS ) ) + ( CRS * FirstVNF_Mem ) ) + ( RRS / ( BR + ( FirstVNF_CPU * MRS ) ) ) )", "choosing": "Min( ( RCSe * CS ) ,Max( RMSe,MUR ) )", "obj1": 0.17962962962962964, "obj2": 0.7126973009996477}, {"determining": "( ( ( ( PN * Max( BR,Max( BR,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS + RRSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.6796296296296296, "obj2": 0.1709284002177814}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5662097876131792}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ( FirstVNF_CPU_Server * AMS ) * DDR ) / DDR ) - ( Max( Min( PN ,Const ),Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * ( DDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),( RCSe + RMSe ) ) ) ) - Max( ( MLU * CS ),( RRSe * MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.75, "obj2": 0.10923176638015569}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.7240740740740741, "obj2": 0.13004927968554575}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.025596422368479112}], "28": [{"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * Min( MRS ,MDR ) ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( PN ,Const ) + MDR ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( DS - ( RCSe * Max( ( RMSe * Max( ( ( RRSe - DS ) + ( DS * ( CS - RRSe ) ) ),CS ) ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ( CRS * FirstVNF_Mem ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RCSe - DS ) ),RRSe ) ) ) + MUM ) / RMSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) - ( Max( ACS,CRS ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( MUC ,CS ),MUM ) + ( MUC * MUR ) )", "obj1": 0.1037037037037037, "obj2": 0.8510068539346329}, {"determining": "( ( BR - FirstVNF_Mem ) + Min( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ,Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( MUC / DS ) / ( RMSe * MUM ) ) + Max( ( ( ( Max( ( ( RMSe - CS ) + MUR ),MUC ) - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( RCSe * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + MLU ) ) ) ) )", "obj1": 0.6981481481481482, "obj2": 0.14957573547362682}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3611111111111111, "obj2": 0.4786471074667323}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.328890150957359}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.337037037037037, "obj2": 0.516686147393384}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( FirstVNF_CPU ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40185185185185185, "obj2": 0.42786189629731586}, {"determining": "( ( ( ( Max( BR,( FirstVNF_RAM_Server + ( ( RRS * ARS ) - ( FirstVNF_RAM + Const ) ) ) ) * PN ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,Max( MUC,MUC ) ) - ( ( ( DS / ( Max( MUR,MUM ) * ( MUR / ( CS - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6601489230863515}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17146141826024125}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( ( ( CRS + FirstVNF_CPU ) - MDR ) ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "Min( ( RCSe - Min( RMSe ,RMSe ) ) ,MUR )", "obj1": 0.6907407407407408, "obj2": 0.1672411561707134}, {"determining": "( ( ( ( PN * ( ( RRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( ARS - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( MUM + RRSe ) ) ) - ( ( Max( MUC,( Max( CS,DS ) / ( ( MUR - Max( DS,DS ) ) - ( MUM + Max( MUC,RMSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.3476921865976444}, {"determining": "( ( ( ( ( DDR * ACS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * ( ( RRS + CRS ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Max( ( ( ( RCSe - ( DS / ( ( CS * RMSe ) * DS ) ) ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RCSe,MUR ) - ( CS * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * RCSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09983600213695817}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RRSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.22962962962962963, "obj2": 0.6479182124865871}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ( FirstVNF_CPU_Server * AMS ) * DDR ) / DDR ) - ( Max( Min( PN ,Const ),Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * ( DDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),( RCSe + RMSe ) ) ) ) - Max( ( MLU * CS ),( RRSe * MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.75, "obj2": 0.10923176638015569}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( Max( MDR,( ( ( FirstVNF_RAM / Min( FirstVNF_Mem ,Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,CRS ) ) ) * ACS ) * ARS ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( DS - RCSe ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( ( DS + MLU ) / MUM ) / DS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5944444444444444, "obj2": 0.24469946636815718}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4203703703703704, "obj2": 0.39330737941906607}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6328526591025865}, {"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem / CRS ) ) + Min( ( PN - ( PN - Min( DDR ,( ACS / BR ) ) ) ) ,( MDR + Min( MRS ,ARS ) ) ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( Max( DS,Max( RCSe,Max( ( ( RRSe / CS ) / ( RMSe + MUM ) ),( MUR * DS ) ) ) ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * MUC ) ) - Max( ( MUC * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2735704438343623}, {"determining": "( ( PN * ( ARS / PN ) ) + ( ( FirstVNF_RAM_Server + RRS ) - Max( MDR,( BR - Const ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( ( ( Max( RCSe,RCSe ) / Max( ( ( RCSe / ( MLU + DS ) ) / CS ),Min( ( CS * Max( MUM,MUC ) ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6773568402031983}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) + ( ( ( ( DDR * MRS ) / Max( BR,Const ) ) + ( ( PN / MDR ) - ( Min( ( Min( ARS ,AMS ) + ( RRS - AMS ) ) ,FirstVNF_RAM ) * FirstVNF_CPU ) ) ) + ( Min( ( MDR - FirstVNF_RAM_Server ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Min( ( ( Min( RMSe ,RRSe ) * RRSe ) - Max( MUM,RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ,( ( MUR / DS ) - RRSe ) ) + Max( ( ( Min( RMSe ,( MLU + MUR ) ) / CS ) / DS ),( MLU - RMSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.1259259259259259, "obj2": 0.796586015888108}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + MUM ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.49331796368619796}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Min( ( FirstVNF_CPU + ARS ) ,FirstVNF_RAM_Server ) + MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / RRSe ) ) / ( ( CS + RRSe ) + Max( MUC,DS ) ) )", "obj1": 0.4648148148148148, "obj2": 0.3556847260783783}, {"determining": "( ( ( Max( MDR,( ( ( ACS * DDR ) / ARS ) - ( ( PN * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem / CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( CRS - ARS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( RRSe * Min( Min( ( RCSe - DS ) ,( MUM - RMSe ) ) ,( CS * MUC ) ) ) ) + MUM ) / ( MUC + ( MUR * CS ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.54953824693522}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( RMSe + Max( ( RMSe * MUM ),MUC ) ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.3817522364994617}, {"determining": "( ( ( ( PN - MDR ) + Max( ( PN - MDR ),( FirstVNF_Mem / BR ) ) ) * ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) + PN ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( MLU * Min( ( ( RRSe / ( CS * CS ) ) / RCSe ) ,( MUR / RCSe ) ) ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.2759259259259259, "obj2": 0.5925279212053204}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ( ( PN * Max( BR,( ( FirstVNF_RAM * AMS ) + ( CRS + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( AMS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5166666666666667, "obj2": 0.3093386056070891}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.8185185185185185, "obj2": 0.0727412157801789}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( PN * ( ( DDR - RRS ) + FirstVNF_CPU ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( FirstVNF_CPU_Server - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - Min( DS ,( ( MUM + MUR ) * MUC ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5562397293338617}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + FirstVNF_RAM ) ) ) * ( PN + ( ( MRS * ( RRS / MRS ) ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( Min( ( RMSe - Max( ( MLU - CS ),( RRSe + MUR ) ) ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.7111111111111111, "obj2": 0.1389214865173065}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( ( MRS * DDR ) * Min( PN ,Const ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - ( CRS * ( FirstVNF_Mem_Server + AMS ) ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ACS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,Min( Max( CS,Max( ( Min( RRSe ,CS ) / RCSe ),MUC ) ) ,MUR ) ) - ( RMSe / Max( ( RMSe / ( MUM * RCSe ) ),MUM ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6395076488859971}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( MUM,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.575925925925926, "obj2": 0.265229670080568}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( RRS * FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUM ,MUM ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + Max( ( MLU * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5749400404705883}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( PN * Max( BR,( Min( MRS ,RRS ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( Max( PN,FirstVNF_RAM_Server ) + ( ACS / Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * RRSe ),( RRSe + MUR ) ) ) - Min( Max( ( ( ( ( ( CS * MLU ) + MUM ) - ( Min( MUC ,RCSe ) + Min( MUR ,RCSe ) ) ) - RMSe ) * CS ),DS ) ,( MUR * ( ( RRSe + DS ) + Min( MUR ,( RCSe * MUC ) ) ) ) ) )", "obj1": 0.34629629629629627, "obj2": 0.5032656212156777}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( ARS - Min( PN ,FirstVNF_CPU ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUM ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.32037037037037036, "obj2": 0.5332969447836342}, {"determining": "( ( ( Max( FirstVNF_RAM,( FirstVNF_RAM_Server / ( ACS / Min( PN ,Const ) ) ) ) * FirstVNF_CPU ) + ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + FirstVNF_CPU ) * PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( Max( ( ( ( RMSe - RCSe ) + RRSe ) - CS ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( MLU * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( Min( MUM ,Max( ( RRSe * MUR ),CS ) ) / ( RMSe * RCSe ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6742821774518665}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ) ) + ( ( PN - PN ) + ( PN - MDR ) ) ) + ( Const - ( FirstVNF_Mem_Server + RRS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( Min( RRSe ,DS ) / MUR ) * MLU ),Min( Min( CS ,RRSe ) ,DS ) ) + ( MLU * Min( MUC ,Min( ( MLU - MLU ) ,RMSe ) ) ) ) + ( RMSe - MLU ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( DS,( CS * CS ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7506770560416202}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.4498477317897245}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( CRS * MRS ) / ( CRS - ( ( PN - MDR ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.7240740740740741, "obj2": 0.13004927968554575}, {"determining": "( ( PN * ( ( ( MDR + FirstVNF_Mem ) / ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / FirstVNF_Mem ) / ( AMS * ACS ) ) * Min( Max( PN,MDR ) ,FirstVNF_Mem ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,AMS ) ) ) ) + ( FirstVNF_CPU_Server / Min( ( BR + FirstVNF_Mem_Server ) ,BR ) ) )", "choosing": "( ( RCSe - DS ) / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7746621932225014}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,DDR ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / ARS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_Mem_Server - Min( DDR ,FirstVNF_CPU_Server ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11666666666666667, "obj2": 0.7970507853157724}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3277777777777778, "obj2": 0.5310767508004932}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,PN ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( PN * ( FirstVNF_CPU + Const ) ) ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( ( ( MUM * MUM ) - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6918716804077536}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) * FirstVNF_CPU ) + ( ( MDR - MDR ) + ( ( PN / ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,MUC ) / ( MLU * MUR ) ) - Min( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) ,( MUC + RRSe ) ) )", "obj1": 0.3814814814814815, "obj2": 0.467311644544682}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.035202837137860654}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( ( DDR * MRS ) * MDR ) + FirstVNF_RAM ) ) ) * ( PN + ( ( MRS * ( RRS / MRS ) ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - Max( ( MLU * CS ),( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + MUR ) ) ) - ( ( ( DS / ( Max( DS,( CS * MUC ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.7333333333333333, "obj2": 0.12652043341246252}, {"determining": "( ( ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + ARS ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( RRS * ( DDR - ( FirstVNF_RAM_Server - FirstVNF_Mem ) ) ) ) + ( ARS - ( ( FirstVNF_CPU_Server - RRS ) + FirstVNF_CPU ) ) )", "choosing": "( Max( MUM,MLU ) + ( ( DS / RCSe ) / ( RMSe * RCSe ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3189339361987874}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4444444444444444, "obj2": 0.3699569128784753}, {"determining": "( ( ( ( PN * Max( BR,Max( BR,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( CS + RRSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.6796296296296296, "obj2": 0.1709284002177814}, {"determining": "( ( ( ( PN * Max( BR,( ( CRS + ( FirstVNF_Mem / MDR ) ) + Max( ( PN + MDR ),( ARS * FirstVNF_RAM ) ) ) ) ) + ( PN + CRS ) ) + ( CRS * FirstVNF_Mem ) ) + ( RRS / ( BR + ( FirstVNF_CPU * MRS ) ) ) )", "choosing": "Min( ( RCSe * CS ) ,Max( RMSe,MUR ) )", "obj1": 0.17962962962962964, "obj2": 0.7126973009996477}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( Max( FirstVNF_Mem,CRS ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( BR * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS + FirstVNF_RAM ),Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( Min( RMSe ,( DS + RCSe ) ) * ( RMSe - ( MUC / RMSe ) ) ) * Max( ( ( MUC + MUC ) + ( RMSe - MUR ) ),( ( CS * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.9037037037037037, "obj2": 0.045381338025416995}, {"determining": "Min( ( FirstVNF_CPU / ARS ) ,( ( ( ( ( ( ACS + RRS ) / FirstVNF_RAM ) * ARS ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( DS * RCSe ) ),MUR ) + Min( ( MUR - RMSe ) ,( MUR / RRSe ) ) )", "obj1": 0.1111111111111111, "obj2": 0.824845806405504}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_Mem_Server ) ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2796296296296296, "obj2": 0.5840098973871425}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7003986470109033}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( CRS * FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.7183093853192382}, {"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem + CRS ) ) + Min( ( MDR - Min( ( Max( FirstVNF_CPU_Server,ARS ) + RRS ) ,FirstVNF_Mem_Server ) ) ,( MDR + Min( ( FirstVNF_CPU + ( BR * DDR ) ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( ( MUM + DS ) / ( MUM * CS ) ) + MUM ) / ( ( MUR - ( RCSe / MUM ) ) / ( ( ( Max( RRSe,RRSe ) * ( MLU * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUM / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40925925925925927, "obj2": 0.4112582054876354}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( DDR + Min( Const ,FirstVNF_CPU ) ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RRSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.43703703703703706, "obj2": 0.3778152664367215}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( RMSe - ( RCSe * Min( ( ( RRSe + MUR ) * Max( ( ( MUC + MUC ) + ( MUC / DS ) ),CS ) ) ,RMSe ) ) )", "obj1": 0.6129629629629629, "obj2": 0.23298311165662064}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4759259259259259, "obj2": 0.35182579052967367}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5518518518518518, "obj2": 0.28667588958294526}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem_Server,CRS ) ) + Min( ( PN - MDR ) ,( Max( Min( ( PN - Const ) ,ARS ),ACS ) + Min( ( PN * MDR ) ,Min( AMS ,Const ) ) ) ) ) + ( CRS * MDR ) ) + PN )", "choosing": "( Max( ( MUC / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,( ( ( RRSe / Min( MUR ,MUC ) ) + ( RMSe / Min( DS ,( RRSe + MUC ) ) ) ) / DS ) ) )", "obj1": 0.40370370370370373, "obj2": 0.4144542083636523}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( ( PN - MDR ) ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( MUR + RRSe ) + ( ( MUC / DS ) / ( RMSe * DS ) ) ),( RRSe + MUR ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.9574074074074074, "obj2": 0.012458521397348087}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973786733471403}, {"determining": "( ( ( ( ( DDR * MRS ) / Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,( PN * Min( FirstVNF_RAM ,MRS ) ) ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,( ( RRS * MRS ) - ( MRS + ARS ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + DDR ) ) ,( DDR / ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR * CS ) - ( MUM / MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,PN ) * Min( FirstVNF_CPU ,AMS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( CRS / ARS ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( RMSe * Min( ( MUM - ( MUM / DS ) ) ,CS ) ) * ( ( ( ( MUM * Max( Min( ( RMSe - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - MUM ) )", "obj1": 0.1962962962962963, "obj2": 0.6928752442891158}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.30925925925925923, "obj2": 0.5543666559011072}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,MRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - ( Min( ( MRS * AMS ) ,Max( ( Const / Const ),DDR ) ) - PN ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( Max( ( Min( ( ( RCSe + MUR ) * Max( MUC,DS ) ) ,Min( RRSe ,( RMSe + DS ) ) ) + DS ),DS ) / MUR ) ) / ( ( RMSe + Max( ( ( ( DS + MUM ) - ( MUC + RRSe ) ) + MUC ),( Min( RRSe ,MLU ) / DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.23452230812397748}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * ( DDR / FirstVNF_RAM ) ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) ) + ( ARS - ( MDR + Max( ( FirstVNF_CPU * ( Max( FirstVNF_Mem,FirstVNF_CPU ) + BR ) ),Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8685185185185185, "obj2": 0.05878872722019972}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( RMSe - CS ) + MUR ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.5703703703703704, "obj2": 0.27024668700018994}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR / FirstVNF_RAM ),( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * Min( Min( FirstVNF_CPU_Server ,DDR ) ,FirstVNF_CPU_Server ) ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( DS - ( ( RRSe * Min( RCSe ,CS ) ) + MUR ) ) + RRSe ) - RRSe ),Max( ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.35185185185185186, "obj2": 0.5025771213613588}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( AMS / FirstVNF_CPU ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ACS ) ) ) ) ),Const ) - ARS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC - DS ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( DS,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6259259259259259, "obj2": 0.21612320817533118}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ACS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - RRSe ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3814814814814815, "obj2": 0.467311644544682}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( PN * Max( BR,Max( BR,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.5074074074074074, "obj2": 0.3264083263609779}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( RMSe + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3925925925925926, "obj2": 0.46061624132693557}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ARS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9425925925925925, "obj2": 0.016921747079092102}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.7148148148148148, "obj2": 0.13618919371935134}, {"determining": "Min( ( FirstVNF_CPU / ARS ) ,( ( ( ( ( ( ACS + RRS ) / FirstVNF_RAM ) * ARS ) - ( PN - MDR ) ) * MDR ) + DDR ) )", "choosing": "( ( ( ( MUM - DS ) * ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ) ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7677209111126304}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( MRS * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - ( MLU / MUM ) )", "obj1": 0.924074074074074, "obj2": 0.034408329469749734}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ARS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( RMSe + Max( ( RMSe * MUM ),MUC ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.02450416275583027}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( MLU * CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) - MUR ) ,Max( ( ( ( RMSe - ( RCSe / Min( Max( CS,RCSe ) ,CS ) ) ) - ( DS + RMSe ) ) - RCSe ),Max( MLU,Max( RMSe,( ( MUM * MUC ) / DS ) ) ) ) )", "obj1": 0.937037037037037, "obj2": 0.022416053573438784}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6407407407407407, "obj2": 0.20023499137058465}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( DDR / FirstVNF_CPU ) - ( ( Min( MRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + Max( ( PN - MDR ),Min( ( BR * MDR ) ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS - ( Min( MDR ,FirstVNF_Mem_Server ) + ( BR / MRS ) ) ),( BR / Min( ACS ,( AMS / Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUC * CS ) ) - Max( ( CS * MLU ),( Max( DS,MUM ) + MUR ) ) ) - ( ( ( DS / ( Min( MUC ,Min( MUM ,( DS / RCSe ) ) ) * Max( ( ( MUC + MUC ) + ( DS - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + ( RCSe / CS ) ) / RMSe ) )", "obj1": 0.8574074074074074, "obj2": 0.06435948616460503}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( CRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( ( MUC + MUC ) * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6185185185185185, "obj2": 0.22276596346676927}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUC - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6481481481481481, "obj2": 0.19330967326792312}, {"determining": "Min( ( ( Min( ( CRS - Const ) ,DDR ) / ARS ) / ARS ) ,( ( ( ARS * Const ) * ( ( ARS * ( ( ACS - MDR ) / FirstVNF_RAM ) ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) ) + DDR ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( ( RMSe - DS ) ,MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7630408461257844}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + FirstVNF_RAM ) ) ) * ( PN + ( ( MRS * ( RRS / MRS ) ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - Max( ( MLU * CS ),( Min( RRSe ,CS ) + MUR ) ) ) - ( ( ( DS / ( Max( DS,( CS * MUC ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11134190642183187}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) + PN )", "choosing": "( Min( ( RMSe - Max( ( MLU - CS ),( RRSe + MUR ) ) ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / DS ) - RCSe ) / ( ( ( Max( RRSe,RRSe ) - ( RRSe - DS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11296296296296296, "obj2": 0.8110470540796998}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5662097876131792}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * ( FirstVNF_CPU + Const ) ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RRSe * MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( MUR + ( RCSe + MUC ) ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * ( MUM * MLU ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8777777777777778, "obj2": 0.05298891020248251}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MDR ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( Min( PN ,MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( Max( BR,FirstVNF_CPU ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - Max( RMSe,( RRSe + Min( MUC ,( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( Min( RCSe ,MLU ) + ( DS - RCSe ) ),RMSe ) ) ) ) ) )", "obj1": 0.7944444444444444, "obj2": 0.08405053931946552}], "29": [{"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * Min( MRS ,MDR ) ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( PN ,Const ) + MDR ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * Min( MRS ,MDR ) ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( PN ,Const ) + MDR ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( DS - ( RCSe * Max( ( RMSe * Max( ( ( RRSe - DS ) + ( DS * ( CS - RRSe ) ) ),CS ) ),RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) - ( Max( ACS,CRS ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( MUC ,CS ),MUM ) + ( MUC * MUR ) )", "obj1": 0.1037037037037037, "obj2": 0.8510068539346329}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( PN - Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + Max( ACS,PN ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( MLU + CS ) - ( RCSe / RCSe ) )", "obj1": 0.674074074074074, "obj2": 0.1662350094513867}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( FirstVNF_CPU ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40185185185185185, "obj2": 0.42786189629731586}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ) ) + ( ( PN - PN ) + ( PN - MDR ) ) ) + ( Const - ( FirstVNF_Mem_Server + RRS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( Min( RRSe ,DS ) / MUR ) * MLU ),Min( Min( CS ,RRSe ) ,DS ) ) + ( MLU * Min( MUC ,Min( ( MLU - MLU ) ,RMSe ) ) ) ) + ( RMSe - MLU ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( DS,( CS * CS ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7506770560416202}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( RRSe / ( CS * RMSe ) ) * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.5505286762526707}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( MUC + RRSe ) ) )", "obj1": 0.5222222222222223, "obj2": 0.30883150575413315}, {"determining": "( ( ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( ( ( ( ( MUM * Max( Min( ( RCSe - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6476539151636825}, {"determining": "( ( PN * ( ( ( MDR + FirstVNF_Mem ) / ( ( ( ACS * DDR ) / ARS ) - ( ( ( CRS / FirstVNF_Mem ) / ( AMS * ACS ) ) * Min( Max( PN,MDR ) ,FirstVNF_Mem ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,AMS ) ) ) ) + ( FirstVNF_CPU_Server / Min( ( BR + FirstVNF_Mem_Server ) ,BR ) ) )", "choosing": "( ( RCSe - DS ) / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7746621932225014}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( ( MRS * DDR ) * Min( PN ,Const ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - ( CRS * ( FirstVNF_Mem_Server + AMS ) ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ACS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,Min( Max( CS,Max( ( Min( RRSe ,CS ) / RCSe ),MUC ) ) ,MUR ) ) - ( RMSe / Max( ( RMSe / ( MUM * RCSe ) ),MUM ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6395076488859971}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7003986470109033}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( Min( MRS ,RRS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( MLU,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5370370370370371, "obj2": 0.2918077929732686}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,MDR ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUC ),MUC ) ) + ( CS + ( MLU * CS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.24409591175288797}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ACS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - RRSe ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3611111111111111, "obj2": 0.4786471074667323}, {"determining": "( ( ACS - FirstVNF_CPU_Server ) + PN )", "choosing": "( Min( ( RMSe - Max( ( MLU - CS ),( RRSe + MUR ) ) ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / DS ) - RCSe ) / ( ( ( Max( RRSe,RRSe ) - ( RRSe - DS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11296296296296296, "obj2": 0.8110470540796998}, {"determining": "( ( ( ( Max( BR,( FirstVNF_RAM_Server + ( ( RRS * ARS ) - ( FirstVNF_RAM + Const ) ) ) ) * PN ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,Max( MUC,MUC ) ) - ( ( ( DS / ( Max( MUR,MUM ) * ( MUR / ( CS - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6601489230863515}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR / Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC * DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + MUC ) ) )", "obj1": 0.45555555555555555, "obj2": 0.3642874545134017}, {"determining": "( ( PN * ( ARS / PN ) ) + ( ( FirstVNF_RAM_Server + RRS ) - Max( MDR,( BR - Const ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( ( ( Max( RCSe,RCSe ) / Max( ( ( RCSe / ( MLU + DS ) ) / CS ),Min( ( CS * Max( MUM,MUC ) ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6773568402031983}, {"determining": "( ( ( ( PN * Max( ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ),BR ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + Max( PN,Max( RRS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( RRSe + ( RCSe - RMSe ) ) - MUR ),Max( ( Max( ( CS + RRSe ),( CS * MUC ) ) * MLU ),( MUC + ( ( ( Min( RMSe ,RRSe ) * RCSe ) + MLU ) * RCSe ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.3907407407407407, "obj2": 0.45460600256730715}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.1259259259259259, "obj2": 0.796586015888108}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + MUM ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.49331796368619796}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) + ( ( ( ( DDR * MRS ) / Max( BR,Const ) ) + ( ( PN / MDR ) - ( Min( ( Min( ARS ,AMS ) + ( RRS - AMS ) ) ,FirstVNF_RAM ) * FirstVNF_CPU ) ) ) + ( Min( ( MDR - FirstVNF_RAM_Server ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Min( ( ( Min( RMSe ,RRSe ) * RRSe ) - Max( MUM,RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ,( ( MUR / DS ) - RRSe ) ) + Max( ( ( Min( RMSe ,( MLU + MUR ) ) / CS ) / DS ),( MLU - RMSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.328890150957359}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) * FirstVNF_CPU ) + ( ( MDR - MDR ) + ( ( PN / ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,MUC ) / ( MLU * MUR ) ) - Min( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) ,( MUC + RRSe ) ) )", "obj1": 0.3814814814814815, "obj2": 0.467311644544682}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( ( MDR / RRS ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * FirstVNF_CPU_Server ) + FirstVNF_RAM ) ) ) * ( ( ( MRS * ( RRS / MRS ) ) + Min( FirstVNF_CPU ,DDR ) ) + PN ) ) + ( ACS - ( Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - Min( CS ,MLU ) ) - Min( DS ,MUM ) ) - ( ( ( DS / ( Max( ( CS * MUC ),DS ) * MUC ) ) + MUM ) / ( DS / ( Max( MUR,( MUR + RRSe ) ) * MUC ) ) ) )", "obj1": 0.7888888888888889, "obj2": 0.09835810289768082}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( Min( ( FirstVNF_CPU + ARS ) ,FirstVNF_RAM_Server ) + MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / RRSe ) ) / ( ( CS + RRSe ) + Max( MUC,DS ) ) )", "obj1": 0.4648148148148148, "obj2": 0.3556847260783783}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.337037037037037, "obj2": 0.516686147393384}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6333333333333333, "obj2": 0.20741296747938112}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * DDR ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( DS - ( ( ( MUC * MUC ) + ( RCSe - DS ) ) * Max( ( RMSe * Max( ( ( RCSe + MUC ) + ( ( CS - RRSe ) * DS ) ),CS ) ),RMSe ) ) )", "obj1": 0.837037037037037, "obj2": 0.06657772231987427}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) * ( ( DDR - RRS ) + FirstVNF_CPU ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( FirstVNF_CPU_Server - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( MUM * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7424574178080315}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973786733471403}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * ( AMS / FirstVNF_CPU ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,ACS ) ) ) ) ),Const ) - ARS ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC - DS ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( DS,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.6259259259259259, "obj2": 0.21612320817533118}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( BR ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( RRS - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,( ( AMS + FirstVNF_Mem_Server ) * BR ) ) ) ) ) * PN ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( ( ( MUC / RMSe ) + ( CS + RCSe ) ) / MUM ),RCSe ) ) ) * ( DS / MUC ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4888888888888889, "obj2": 0.34655120666089295}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ARS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9425925925925925, "obj2": 0.016906402464127206}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.4498477317897245}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( DDR / FirstVNF_CPU ) - ( ( Min( MRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + Max( ( PN - MDR ),Min( ( BR * MDR ) ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS - ( Min( MDR ,FirstVNF_Mem_Server ) + ( BR / MRS ) ) ),( BR / Min( ACS ,( AMS / Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUC * CS ) ) - Max( ( CS * MLU ),( Max( DS,MUM ) + MUR ) ) ) - ( ( ( DS / ( Min( MUC ,Min( MUM ,( DS / RCSe ) ) ) * Max( ( ( MUC + MUC ) + ( DS - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + ( RCSe / CS ) ) / RMSe ) )", "obj1": 0.8574074074074074, "obj2": 0.06435948616460503}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( CRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( ( MUC + MUC ) * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6185185185185185, "obj2": 0.22276596346676927}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( RRS * FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUM ,MUM ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + Max( ( MLU * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5749400404705883}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( PN * Max( BR,( Min( MRS ,RRS ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( Max( PN,FirstVNF_RAM_Server ) + ( ACS / Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * RRSe ),( RRSe + MUR ) ) ) - Min( Max( ( ( ( ( ( CS * MLU ) + MUM ) - ( Min( MUC ,RCSe ) + Min( MUR ,RCSe ) ) ) - RMSe ) * CS ),DS ) ,( MUR * ( ( RRSe + DS ) + Min( MUR ,( RCSe * MUC ) ) ) ) ) )", "obj1": 0.34629629629629627, "obj2": 0.5032656212156777}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.035202837137860654}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( Max( FirstVNF_Mem,CRS ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( BR * MDR ) ,( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS + FirstVNF_RAM ),Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( Min( RMSe ,( DS + RCSe ) ) * ( RMSe - ( MUC / RMSe ) ) ) * Max( MUM,( ( CS * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8981481481481481, "obj2": 0.046730692626878706}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,DDR ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / ARS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_Mem_Server - Min( DDR ,FirstVNF_CPU_Server ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11666666666666667, "obj2": 0.7970507853157724}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( RRS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / ACS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( ( PN - MDR ) ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUM / ( ( RMSe + Max( ( ( MUR - RRSe ) + ( ( MUC / DS ) / ( RMSe * DS ) ) ),( RRSe + ( Max( ( MLU / CS ),( MUC - MUR ) ) - RRSe ) ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.9611111111111111, "obj2": 0.011143168052554588}, {"determining": "( ( ( Max( MDR,( ( ( ACS * DDR ) / ARS ) - ( ( PN * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem / CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( CRS - ARS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( RRSe * Min( Min( ( RCSe - DS ) ,( MUM - RMSe ) ) ,( CS * MUC ) ) ) ) + MUM ) / ( MUC + ( MUR * CS ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.54953824693522}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( MLU * CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( MRS * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - ( MLU / MUM ) )", "obj1": 0.924074074074074, "obj2": 0.034408329469749734}, {"determining": "( ( BR - FirstVNF_Mem ) + Min( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ,Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( ( MUC / DS ) / ( RMSe * MUM ) ) + Max( ( ( ( Max( ( ( RMSe - CS ) + MUR ),MUC ) - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( RCSe * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + MLU ) ) ) ) )", "obj1": 0.6981481481481482, "obj2": 0.14957573547362682}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( DS,( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.8796296296296297, "obj2": 0.04993428945181238}, {"determining": "( ( ( ( PN * Max( BR,( ( CRS + ( FirstVNF_Mem / MDR ) ) + Max( ( PN + MDR ),( ARS * FirstVNF_RAM ) ) ) ) ) + ( PN + CRS ) ) + ( CRS * FirstVNF_Mem ) ) + ( RRS / ( BR + ( FirstVNF_CPU * MRS ) ) ) )", "choosing": "Min( ( RCSe * CS ) ,Max( RMSe,MUR ) )", "obj1": 0.17962962962962964, "obj2": 0.7126973009996477}, {"determining": "Min( ( Max( FirstVNF_RAM_Server,PN ) / ARS ) ,( ( ( ( ( ( ACS + RRS ) / FirstVNF_RAM ) * MDR ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) * MDR ) + DDR ) )", "choosing": "( Max( ( MUR / ( ( DS * MUR ) * RCSe ) ),MUR ) + ( ( MUR / RRSe ) - ( MUR - RMSe ) ) )", "obj1": 0.10925925925925926, "obj2": 0.8238157466220811}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4185185185185185, "obj2": 0.39050688774429654}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( Const ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + ( CRS * FirstVNF_Mem ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.7183093853192382}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( MUC,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5518518518518518, "obj2": 0.2866362921708711}, {"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem + CRS ) ) + Min( ( MDR - Min( ( Max( FirstVNF_CPU_Server,ARS ) + RRS ) ,FirstVNF_Mem_Server ) ) ,( MDR + Min( ( FirstVNF_CPU + ( BR * DDR ) ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( ( MUM + DS ) / ( MUM * CS ) ) + MUM ) / ( ( MUR - ( RCSe / MUM ) ) / ( ( ( Max( RRSe,RRSe ) * ( MLU * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUM / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40925925925925927, "obj2": 0.4112582054876354}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( ( FirstVNF_CPU + ACS ) * Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( RCSe + DS ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) * MUM ) / RMSe ) )", "obj1": 0.6092592592592593, "obj2": 0.2291540322376408}, {"determining": "( ( ( ( PN - MDR ) + Max( ( FirstVNF_Mem / BR ),( PN - MDR ) ) ) * ( ( ( ( ( FirstVNF_CPU_Server * ( DDR + FirstVNF_RAM_Server ) ) + FirstVNF_CPU ) + MDR ) + FirstVNF_CPU ) + PN ) ) + ( ARS - ( FirstVNF_RAM / ( FirstVNF_Mem_Server / RRS ) ) ) )", "choosing": "( ( ( ( MUM - DS ) * ( ( ( CS + RRSe ) + ( RCSe - RMSe ) ) - RRSe ) ) - MUM ) * ( RMSe * Min( Min( Max( DS,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,Max( MLU,Min( DS ,CS ) ) ) ) )", "obj1": 0.13333333333333333, "obj2": 0.7676595984649621}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem_Server,CRS ) ) + Min( ( PN - MDR ) ,( Max( Min( ( PN - Const ) ,ARS ),ACS ) + Min( ( PN * MDR ) ,Min( AMS ,Const ) ) ) ) ) + ( CRS * MDR ) ) + PN )", "choosing": "( Max( ( MUC / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,( ( ( RRSe / Min( MUR ,MUC ) ) + ( RMSe / Min( DS ,( RRSe + MUC ) ) ) ) / DS ) ) )", "obj1": 0.40370370370370373, "obj2": 0.4144542083636523}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4444444444444444, "obj2": 0.3699569128784753}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RCSe - DS ) ),RRSe ) ) ) + MUM ) / RMSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.3351851851851852, "obj2": 0.5231079334841211}, {"determining": "( ( ( Min( FirstVNF_CPU_Server ,( FirstVNF_CPU_Server + CRS ) ) * Max( FirstVNF_CPU,ACS ) ) - Min( Min( FirstVNF_RAM_Server ,ARS ) ,BR ) ) - ( ( FirstVNF_Mem_Server * CRS ) * BR ) )", "choosing": "( RRSe - ( ( Max( Min( Max( RRSe,DS ) ,( ( ( MLU * MUM ) / CS ) + MUR ) ),DS ) - ( MUC * Min( RMSe ,DS ) ) ) * ( RMSe * RMSe ) ) )", "obj1": 0.16296296296296298, "obj2": 0.7349850789805619}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( ARS - Min( PN ,FirstVNF_CPU ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUM ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.32037037037037036, "obj2": 0.5332969447836342}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.29074074074074074, "obj2": 0.5662097876131792}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,PN ) * Min( FirstVNF_CPU ,AMS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( CRS / ARS ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( RMSe * Min( ( MUM - ( MUM / DS ) ) ,CS ) ) * ( ( ( ( MUM * Max( Min( ( RMSe - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - MUM ) )", "obj1": 0.1962962962962963, "obj2": 0.6928752442891158}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR / FirstVNF_RAM ),( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * Min( Min( FirstVNF_CPU_Server ,DDR ) ,FirstVNF_CPU_Server ) ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( DS - ( ( RRSe * Min( RCSe ,CS ) ) + MUR ) ) + RRSe ) - RRSe ),Max( ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.35185185185185186, "obj2": 0.5025771213613588}, {"determining": "( ( ( ( ( DDR * MRS ) / Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,( PN * Min( FirstVNF_RAM ,MRS ) ) ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,( ( RRS * MRS ) - ( MRS + ARS ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + DDR ) ) ,( DDR / ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR * CS ) - ( MUM / MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,MLU ) ) ) )", "obj1": 0.8185185185185185, "obj2": 0.0727412157801789}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,MRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - ( Min( ( MRS * AMS ) ,Max( ( Const / Const ),DDR ) ) - PN ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( Max( ( Min( ( ( RCSe + MUR ) * Max( MUC,DS ) ) ,Min( RRSe ,( RMSe + DS ) ) ) + DS ),DS ) / MUR ) ) / ( ( RMSe + Max( ( ( ( DS + MUM ) - ( MUC + RRSe ) ) + MUC ),( Min( RRSe ,MLU ) / DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.23452230812397748}, {"determining": "( ( Max( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ),Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( DDR / RRS ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( ( CS + ( ( RMSe / MLU ) * ( RCSe + MLU ) ) ) * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5537037037037037, "obj2": 0.2789790103355386}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( PN * ( ( DDR - RRS ) + FirstVNF_CPU ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( FirstVNF_CPU_Server - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.31666666666666665, "obj2": 0.543462011300991}, {"determining": "( ( ( ( ( DDR * ACS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_Mem_Server ,Const ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * ( ( RRS + CRS ) * FirstVNF_RAM ) ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Max( ( ( ( RCSe - ( DS / ( ( CS * RMSe ) * DS ) ) ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RCSe,MUR ) - ( CS * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * RCSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09983600213695817}, {"determining": "( ( ( Max( FirstVNF_RAM,( FirstVNF_RAM_Server / ( ACS / Min( PN ,Const ) ) ) ) * FirstVNF_CPU ) + ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + FirstVNF_CPU ) * PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( Max( ( ( ( RMSe - RCSe ) + RRSe ) - CS ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( MLU * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( Min( MUM ,Max( ( RRSe * MUR ),CS ) ) / ( RMSe * RCSe ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6742821774518665}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * DDR ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( PN ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.8092592592592592, "obj2": 0.07728409969628176}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + FirstVNF_RAM ) ) ) * ( PN + ( ( Max( BR,( ( FirstVNF_RAM * AMS ) + ( CRS + PN ) ) ) * ( RRS / MRS ) ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MLU ) ) - Max( ( MLU * CS ),( Min( RRSe ,CS ) + MUR ) ) ) - ( Max( RRSe,MUR ) - ( CS * RMSe ) ) )", "obj1": 0.7555555555555555, "obj2": 0.10790478680213475}, {"determining": "( ( Max( Min( ( PN - MDR ) ,( MDR + Min( ( ( BR + MRS ) / FirstVNF_Mem_Server ) ,RRS ) ) ),( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( Min( MUC ,Max( MUC,MLU ) ) + MUM ) / RMSe ) )", "obj1": 0.42962962962962964, "obj2": 0.3901573408186092}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MDR ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) ) ) )", "obj1": 0.8037037037037037, "obj2": 0.07980692425829897}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Max( ( ( ( Max( ( ( RMSe - CS ) + MUR ),MUC ) - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.6981481481481482, "obj2": 0.14957573547362682}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3814814814814815, "obj2": 0.467311644544682}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / DDR ) - ( ( Min( PN ,Const ) * Min( MDR ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * ( DDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - RMSe )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689535}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17146141826024125}, {"determining": "( ( ( ( ( ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MDR ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) ) ) ) )", "obj1": 0.7925925925925926, "obj2": 0.08539089509461018}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( PN * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),( Max( Max( RCSe,( Max( ( MUR / DS ),( CS - MLU ) ) + MUM ) ),( Max( MUM,( RMSe + MUM ) ) + RCSe ) ) * MUC ) ) + ( ( MUC / DS ) / ( RMSe * RCSe ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6314676945880774}, {"determining": "Min( ( ( Min( ( CRS - Const ) ,DDR ) / ARS ) / ARS ) ,( ( ( ARS * Const ) * ( ( ARS * ( ( ACS - MDR ) / FirstVNF_RAM ) ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) ) + DDR ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( ( RMSe - DS ) ,MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7630408461257844}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( RMSe + Max( ( RMSe * MUM ),MUC ) ) ) ) )", "obj1": 0.43148148148148147, "obj2": 0.3817522364994617}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17146141826024125}, {"determining": "( ( ( ( PN * Max( BR,Max( BR,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( RCSe - DS ) / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.2890864727954317}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( Min( ( ACS * DDR ) ,ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + ( FirstVNF_CPU * MRS ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( RRSe,MUR ) ,( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( DS - RRSe ) / ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) ) )", "obj1": 0.2722222222222222, "obj2": 0.5953538794255007}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ARS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( RMSe + Max( ( RMSe * MUM ),MUC ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.02450416275583027}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6328526591025865}, {"determining": "( ( ( ( PN - MDR ) + Max( ( PN - MDR ),( FirstVNF_Mem / BR ) ) ) * ( ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) + PN ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( MLU * Min( ( ( RRSe / ( CS * CS ) ) / RCSe ) ,( MUR / RCSe ) ) ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.2759259259259259, "obj2": 0.5925279212053204}, {"determining": "( ( ( ( PN * ( ( RRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( ARS - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( MUM + RRSe ) ) ) - ( ( Max( MUC,( Max( CS,DS ) / ( ( MUR - Max( DS,DS ) ) - ( MUM + Max( MUC,RMSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.3476921865976444}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( DDR + Min( Const ,FirstVNF_CPU ) ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RRSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.43703703703703706, "obj2": 0.3778152664367215}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( MUM,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.575925925925926, "obj2": 0.265229670080568}], "30": [{"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( MRS * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( ( MDR / Min( ( PN * MDR ) ,RRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - ( MLU / ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * Min( MRS ,MDR ) ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( PN ,Const ) + MDR ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) - ( Max( ACS,CRS ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( MUC ,CS ),MUM ) + ( MUC * MUR ) )", "obj1": 0.1037037037037037, "obj2": 0.8510068539346329}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,PN ) * Min( FirstVNF_CPU ,AMS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( CRS / ARS ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( RMSe * Min( ( MUM - ( MUM / DS ) ) ,CS ) ) * ( ( ( ( MUM * Max( Min( ( RMSe - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - MUM ) )", "obj1": 0.1962962962962963, "obj2": 0.6928752442891158}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( PN - Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + Max( ACS,PN ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( MLU + CS ) - ( RCSe / RCSe ) )", "obj1": 0.674074074074074, "obj2": 0.1662350094513867}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( MUC + MUC ) * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.3114051259472549}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN - FirstVNF_CPU_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( MUM * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( Min( CS ,MUR ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.49444444444444446, "obj2": 0.32876618024354004}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ) ) + ( ( PN - PN ) + ( PN - MDR ) ) ) + ( Const - ( FirstVNF_Mem_Server + RRS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( Min( RRSe ,DS ) / MUR ) * MLU ),Min( Min( CS ,RRSe ) ,DS ) ) + ( MLU * Min( MUC ,Min( ( MLU - MLU ) ,RMSe ) ) ) ) + ( RMSe - MLU ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( DS,( CS * CS ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7506770560416202}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Max( ( MUC / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,( ( ( RRSe / MLU ) + ( RMSe / Min( DS ,( RRSe + CS ) ) ) ) / DS ) ) )", "obj1": 0.6962962962962963, "obj2": 0.15362928004857895}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.4498477317897245}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( PN * ( ARS / PN ) ) + ( ( FirstVNF_RAM_Server + RRS ) - Max( MDR,( BR - Const ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( ( ( Max( RCSe,RCSe ) / Max( ( ( RCSe / ( MLU + DS ) ) / CS ),Min( ( CS * Max( MUM,MUC ) ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6773568402031983}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( ( MRS * DDR ) * Min( PN ,Const ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - ( CRS * ( FirstVNF_Mem_Server + AMS ) ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ACS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,Min( Max( CS,Max( ( Min( RRSe ,CS ) / RCSe ),MUC ) ) ,MUR ) ) - ( RMSe / Max( ( RMSe / ( MUM * RCSe ) ),MUM ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6395076488859971}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7003986470109033}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( ( FirstVNF_CPU / FirstVNF_CPU ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - Max( ( ( DS / ( MUM * Max( DS,( Max( CS,RCSe ) + MUR ) ) ) ) + MUM ),( MUC + RRSe ) ) )", "obj1": 0.5685185185185185, "obj2": 0.2718006463119915}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( RRSe / ( CS * RMSe ) ) * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.5505286762526707}, {"determining": "( ( ( ( Max( BR,( FirstVNF_RAM_Server + ( ( RRS * ARS ) - ( FirstVNF_RAM + Const ) ) ) ) * PN ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,Max( MUC,MUC ) ) - ( ( ( DS / ( Max( MUR,MUM ) * ( MUR / ( CS - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6601489230863515}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR / Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC * DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + MUC ) ) )", "obj1": 0.45555555555555555, "obj2": 0.3642874545134017}, {"determining": "( ( ( ( PN * Max( ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ),BR ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + Max( PN,Max( RRS,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( ( ( RRSe + ( RCSe - RMSe ) ) - MUR ),Max( ( Max( ( CS + RRSe ),( CS * MUC ) ) * MLU ),( MUC + ( ( ( Min( RMSe ,RRSe ) * RCSe ) + MLU ) * RCSe ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.3907407407407407, "obj2": 0.45460600256730715}, {"determining": "( ( ( PN + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + FirstVNF_CPU ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),Max( ( Min( Max( ( RRSe / ( CS * RMSe ) ),RCSe ) ,( MUR / RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.1259259259259259, "obj2": 0.796586015888108}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + MUM ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.49331796368619796}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) + ( ( ( ( DDR * MRS ) / Max( BR,Const ) ) + ( ( PN / MDR ) - ( Min( ( Min( ARS ,AMS ) + ( RRS - AMS ) ) ,FirstVNF_RAM ) * FirstVNF_CPU ) ) ) + ( Min( ( MDR - FirstVNF_RAM_Server ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Min( ( ( Min( RMSe ,RRSe ) * RRSe ) - Max( MUM,RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ,( ( MUR / DS ) - RRSe ) ) + Max( ( ( Min( RMSe ,( MLU + MUR ) ) / CS ) / DS ),( MLU - RMSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ARS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( RMSe + Max( ( RMSe * MUM ),MUC ) ) ) ) )", "obj1": 0.9296296296296296, "obj2": 0.02450416275583027}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( ( Min( Min( CRS ,DDR ) ,Min( ( PN - MDR ) ,( ARS - ( Max( PN,Const ) + ( DDR - FirstVNF_RAM ) ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUC / DS ) ,( RCSe * DS ) ) / ( ( ( MLU / Max( Min( MUR ,MUM ),RRSe ) ) * ( ( MUC * MUM ) / ( ( MUC / RCSe ) * ( MLU - MUC ) ) ) ) + ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) ) )", "obj1": 0.7759259259259259, "obj2": 0.09764867864721039}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( RRS * FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUM ,MUM ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + Max( ( MLU * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5749400404705883}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( PN * ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,ACS ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( RRSe / RRSe ),RCSe ) ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * MUC ) ) + ( CS + RRSe ) ) / ( MUC + RRSe ) ) )", "obj1": 0.5333333333333333, "obj2": 0.3033274398953486}, {"determining": "Min( ( ( Min( ( CRS - Const ) ,DDR ) / ARS ) / ARS ) ,( ( ( ARS * Const ) * ( ( ARS * ( ( ACS - MDR ) / FirstVNF_RAM ) ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) ) + DDR ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( ( RMSe - DS ) ,MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7630408461257844}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,MRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - ( Min( ( MRS * AMS ) ,Max( ( Const / Const ),DDR ) ) - PN ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( Max( ( Min( ( ( RCSe + MUR ) * Max( MUC,DS ) ) ,Min( RRSe ,( RMSe + DS ) ) ) + DS ),DS ) / MUR ) ) / ( ( RMSe + Max( ( ( ( DS + MUM ) - ( MUC + RRSe ) ) + MUC ),( Min( RRSe ,MLU ) / DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.23452230812397748}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.47337666860242456}, {"determining": "( ( Max( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ),Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( DDR / RRS ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( ( CS + ( ( RMSe / MLU ) * ( RCSe + MLU ) ) ) * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5537037037037037, "obj2": 0.2789790103355386}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) * ( ( DDR - RRS ) + FirstVNF_CPU ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( FirstVNF_CPU_Server - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( RRSe - ( MUM * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7424574178080315}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * DDR ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( DS - ( ( ( MUC * MUC ) + ( RCSe - DS ) ) * Max( ( RMSe * Max( ( ( RCSe + MUC ) + ( ( CS - RRSe ) * DS ) ),CS ) ),RMSe ) ) )", "obj1": 0.837037037037037, "obj2": 0.06657772231987427}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * DDR ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( PN ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.8185185185185185, "obj2": 0.07254294621975922}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( Max( FirstVNF_Mem,CRS ) * MDR ) ) ) + ( ( PN - MDR ) + Min( ( BR * MDR ) ,( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS + FirstVNF_RAM ),Const ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( RMSe * CS ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( Min( RMSe ,( DS + RCSe ) ) * ( RMSe - ( MUC / RMSe ) ) ) * Max( MUM,( ( CS * MUR ) * RRSe ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.8981481481481481, "obj2": 0.046730692626878706}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUC ),MUC ) ) )", "obj1": 0.6407407407407407, "obj2": 0.2012639910239303}, {"determining": "( ( ( Max( FirstVNF_RAM,( FirstVNF_RAM_Server / ( ACS / Min( PN ,Const ) ) ) ) * FirstVNF_CPU ) + ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + FirstVNF_CPU ) * PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( Max( ( ( ( RMSe - RCSe ) + RRSe ) - CS ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( MLU * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( Min( MUM ,Max( ( RRSe * MUR ),CS ) ) / ( RMSe * RCSe ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6742821774518665}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( ( MUC + MUC ) * Max( Min( RRSe ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6518518518518519, "obj2": 0.1920496807601243}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( MRS * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),( Max( Max( RCSe,( Max( ( MUR / DS ),( CS - MLU ) ) + MUM ) ),( Max( MUM,( RMSe + MUM ) ) + RCSe ) ) * MUC ) ) + ( ( MUC / DS ) / ( RMSe * RCSe ) ) )", "obj1": 0.8759259259259259, "obj2": 0.05626166454260057}, {"determining": "( ( ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( Max( ACS,FirstVNF_RAM_Server ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( ( ( ( ( MUM * Max( Min( ( CS - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7746476923458964}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,DDR ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / ARS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_Mem_Server - Min( DDR ,FirstVNF_CPU_Server ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11666666666666667, "obj2": 0.7970507853157724}, {"determining": "( ( ( Max( MDR,( ( ( ACS * DDR ) / ARS ) - ( ( PN * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem / CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( CRS - ARS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( RRSe * Min( Min( ( RCSe - DS ) ,( MUM - RMSe ) ) ,( CS * MUC ) ) ) ) + MUM ) / ( MUC + ( MUR * CS ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.54953824693522}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RCSe - DS ) ),RRSe ) ) ) + MUM ) / RMSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.3351851851851852, "obj2": 0.5231079334841211}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ( PN - ( PN - MDR ) ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( Min( ( RCSe - DS ) ,Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) ) / ( MUC + RRSe ) ) )", "obj1": 0.8629629629629629, "obj2": 0.06358379586016187}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ARS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / MRS ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9425925925925925, "obj2": 0.016906402464127206}, {"determining": "( ( ( ( PN * Max( BR,( ( CRS + ( FirstVNF_Mem / MDR ) ) + Max( ( PN + MDR ),( ARS * FirstVNF_RAM ) ) ) ) ) + ( PN + CRS ) ) + ( CRS * FirstVNF_Mem ) ) + ( RRS / ( BR + ( FirstVNF_CPU * MRS ) ) ) )", "choosing": "Min( ( RCSe * CS ) ,Max( RMSe,MUR ) )", "obj1": 0.17962962962962964, "obj2": 0.7126973009996477}, {"determining": "( ( ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( ( ( ( ( MUM * Max( Min( ( RCSe - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6476539151636825}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( BR ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( MDR + MDR ) ) ) ) ) + ( ( RRS - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ( ( DDR * MRS ) / ( CRS - ( ( MDR - AMS ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( FirstVNF_CPU ,Max( ARS,( ( AMS + FirstVNF_Mem_Server ) * BR ) ) ) ) ) * PN ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * Max( ( ( ( MUC / RMSe ) + ( CS + RCSe ) ) / MUM ),RCSe ) ) ) * ( DS / MUC ) ) - ( ( ( DS / ( MUM * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.4888888888888889, "obj2": 0.34655120666089295}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( RRSe * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2796296296296296, "obj2": 0.5922294055211043}, {"determining": "( ( ARS - ( MDR + FirstVNF_CPU ) ) + ( ( ( PN * Max( BR,( Min( FirstVNF_RAM ,RRS ) + Max( Max( FirstVNF_Mem,FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( MDR * MDR ) + ( PN - MDR ) ) ) + ( CRS * ( ARS - Min( PN ,FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * MUM ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( MUC + RCSe ) )", "obj1": 0.32407407407407407, "obj2": 0.5303504014622641}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( RRS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / ACS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( ( PN - MDR ) ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUM / ( ( RMSe + Max( ( ( MUR - RRSe ) + ( ( MUC / DS ) / ( RMSe * DS ) ) ),( RRSe + ( Max( ( MLU / CS ),( MUC - MUR ) ) - RRSe ) ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.9611111111111111, "obj2": 0.011143168052554588}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( RMSe * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6240740740740741, "obj2": 0.21467210326608466}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MDR ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) ) ) )", "obj1": 0.8037037037037037, "obj2": 0.07980692425829897}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( ( RRS + ARS ) * PN ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( Max( ( MLU * CS ),( Max( ( MLU * CS ),( RRSe + MUR ) ) + MUC ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4722222222222222, "obj2": 0.35260017313852554}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( ( RRS + FirstVNF_RAM ) * PN ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40185185185185185, "obj2": 0.42786189629731586}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem_Server,CRS ) ) + Min( ( PN - MDR ) ,( Max( Min( ( PN - Const ) ,ARS ),ACS ) + Min( ( PN * MDR ) ,Min( AMS ,Const ) ) ) ) ) + ( CRS * MDR ) ) + PN )", "choosing": "( Max( ( MUC / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,( ( ( RRSe / Min( MUR ,MUC ) ) + ( RMSe / Min( DS ,( RRSe + MUC ) ) ) ) / DS ) ) )", "obj1": 0.40370370370370373, "obj2": 0.4144542083636523}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ACS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - RRSe ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3611111111111111, "obj2": 0.4786471074667323}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( ( PN - MDR ) ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUM / ( ( RMSe + Max( ( ( MUR + RRSe ) + ( ( MUC / DS ) / ( RMSe * DS ) ) ),( RRSe + MUR ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.9611111111111111, "obj2": 0.011143168052554588}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) * FirstVNF_CPU ) + ( ( MDR - MDR ) + ( ( PN / ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,MUC ) / ( MLU * MUR ) ) - Min( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) ,( MUC + RRSe ) ) )", "obj1": 0.3814814814814815, "obj2": 0.467311644544682}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.035202837137860654}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( DS,( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.8796296296296297, "obj2": 0.04993428945181238}, {"determining": "( ( ( ( ( ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MDR ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) ) ) ) )", "obj1": 0.7925925925925926, "obj2": 0.08539089509461018}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( PN * Max( BR,( Min( MRS ,RRS ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( Max( PN,FirstVNF_RAM_Server ) + ( ACS / Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * RRSe ),( RRSe + MUR ) ) ) - Min( Max( ( ( ( ( ( CS * MLU ) + MUM ) - ( Min( MUC ,RCSe ) + Min( MUR ,RCSe ) ) ) - RMSe ) * CS ),DS ) ,( MUR * ( ( RRSe + DS ) + Min( MUR ,( RCSe * MUC ) ) ) ) ) )", "obj1": 0.34629629629629627, "obj2": 0.5032656212156777}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR / FirstVNF_RAM ),( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * Min( Min( FirstVNF_CPU_Server ,DDR ) ,FirstVNF_CPU_Server ) ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( DS - ( ( RRSe * Min( RCSe ,CS ) ) + MUR ) ) + RRSe ) - RRSe ),Max( ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.35185185185185186, "obj2": 0.5025771213613588}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( MUC * MUC ) + ( DS - RCSe ) ) / RMSe ) )", "obj1": 0.3388888888888889, "obj2": 0.5129282076815155}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( ( FirstVNF_CPU + ACS ) * Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( RCSe + DS ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) * MUM ) / RMSe ) )", "obj1": 0.6092592592592593, "obj2": 0.2291540322376408}, {"determining": "( ( ( ( PN * ( ( RRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( ARS - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Min( CRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( Max( Min( ( MUM / RRSe ) ,MUC ),Max( MUC,( RMSe + Max( CS,RRSe ) ) ) ) * CS ),( MUM + RRSe ) ) ) - ( ( Max( MUC,( Max( CS,DS ) / ( ( MUR - Max( DS,DS ) ) - ( MUM + Max( MUC,RMSe ) ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.3476921865976444}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( ( ( ( PN - PN ) + ( PN - MDR ) ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( Min( CS ,RRSe ) * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.9925925925925926, "obj2": 0.0036654702471479094}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( DDR / FirstVNF_CPU ) - ( ( Min( MRS ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * MDR ) ) ) + Max( ( PN - MDR ),Min( ( BR * MDR ) ,DDR ) ) ) + ( FirstVNF_Mem * CRS ) ) + ( Max( Min( ARS ,MRS ),FirstVNF_RAM_Server ) - ( MDR + Max( ( RRS - ( Min( MDR ,FirstVNF_Mem_Server ) + ( BR / MRS ) ) ),( BR / Min( ACS ,( AMS / Max( MRS,ACS ) ) ) ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( MUC * CS ) ) - Max( ( CS * MLU ),( Max( DS,MUM ) + MUR ) ) ) - ( ( ( DS / ( Min( MUC ,Min( MUM ,( DS / RCSe ) ) ) * Max( ( ( MUC + MUC ) + ( DS - MUR ) ),( ( RRSe * MUR ) * RRSe ) ) ) ) + ( RCSe / CS ) ) / RMSe ) )", "obj1": 0.8574074074074074, "obj2": 0.06435948616460503}, {"determining": "( ( ( ( ( ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MDR ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( RRS * Max( Max( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( ( Max( Min( CS ,Min( DS ,RCSe ) ),( RMSe + MUR ) ) - ( Max( ( MLU * ( MUM / MUM ) ),MUM ) + ( CS * RMSe ) ) ) - ( RMSe / ( RRSe + Min( MUC ,( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RCSe ) ) ) ) ) )", "obj1": 0.7925925925925926, "obj2": 0.08539089509461018}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / DDR ) - ( ( Min( PN ,Const ) * Min( MDR ,FirstVNF_CPU_Server ) ) * ( DDR / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) ) / ARS ) + ( RRS * ( DDR + FirstVNF_CPU ) ) )", "choosing": "( Max( RRSe,MUR ) - RMSe )", "obj1": 0.7351851851851852, "obj2": 0.11963378166578979}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4444444444444444, "obj2": 0.3699569128784753}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( DDR + Min( Const ,FirstVNF_CPU ) ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RRSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.43703703703703706, "obj2": 0.3778152664367215}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17146141826024125}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( PN * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),( Max( Max( RCSe,( Max( ( MUR / DS ),( CS - MLU ) ) + MUM ) ),( Max( MUM,( RMSe + MUM ) ) + RCSe ) ) * MUC ) ) + ( ( MUC / DS ) / ( RMSe * RCSe ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6314676945880774}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( Min( MRS ,RRS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( MLU,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5370370370370371, "obj2": 0.2918077929732686}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.328890150957359}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),RRSe ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17146141826024125}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( Min( ( ACS * DDR ) ,ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + ( FirstVNF_CPU * MRS ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( RRSe,MUR ) ,( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( DS - RRSe ) / ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) ) )", "obj1": 0.2722222222222222, "obj2": 0.5953538794255007}, {"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem + CRS ) ) + Min( ( MDR - Min( ( Max( FirstVNF_CPU_Server,ARS ) + RRS ) ,FirstVNF_Mem_Server ) ) ,( MDR + Min( ( FirstVNF_CPU + ( BR * DDR ) ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( ( MUM + DS ) / ( MUM * CS ) ) + MUM ) / ( ( MUR - ( RCSe / MUM ) ) / ( ( ( Max( RRSe,RRSe ) * ( MLU * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUM / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40925925925925927, "obj2": 0.4112582054876354}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( ( DDR * MRS ) / Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,( PN * Min( FirstVNF_RAM ,MRS ) ) ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,( ( RRS * MRS ) - ( MRS + ARS ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + DDR ) ) ,( DDR / ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR * CS ) - ( MUM / MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( MUC,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5518518518518518, "obj2": 0.2866362921708711}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( MLU * CS ) )", "obj1": 0.7092592592592593, "obj2": 0.1466599215289204}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6328526591025865}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( MUM,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.575925925925926, "obj2": 0.265229670080568}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + FirstVNF_RAM ) ) ,( ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) / DDR ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( MLU * CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,MDR ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUC ),MUC ) ) + ( CS + ( MLU * CS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.24409591175288797}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.42962962962962964, "obj2": 0.3845176118267457}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ARS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.9425925925925925, "obj2": 0.016906402464127206}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( PN * MDR ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUM ,MUM ) / ( MUC + RRSe ) ) - ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5648584338363042}, {"determining": "( ( ( ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) + ( ( PN - MDR ) / ( ( Min( PN ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) ) * ( Min( ( PN * CRS ) ,RRS ) + ( ( ( CRS + FirstVNF_CPU ) * MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / Max( BR,( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) + Min( MRS ,RRS ) ) ) ) ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),MUR ) - ( CS * RRSe ) ) - ( RRSe * ( MUM + MUR ) ) ) - ( MLU * CS ) )", "obj1": 0.7148148148148148, "obj2": 0.13931233946820482}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( FirstVNF_CPU ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40185185185185185, "obj2": 0.42786189629731586}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / Max( ( ( RMSe * CS ) * MUM ),RMSe ) ) ) / Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.03154762562978257}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,MDR ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUC ),MUC ) ) + ( CS + ( MLU * CS ) ) ) )", "obj1": 0.5925925925925926, "obj2": 0.24409591175288797}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( ( Min( PN ,FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( RRS * FirstVNF_Mem_Server ) ) ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUR * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4203703703703704, "obj2": 0.3894638075307959}], "31": [{"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem + CRS ) ) + Min( ( MDR - Min( ( Max( FirstVNF_CPU_Server,ARS ) + RRS ) ,FirstVNF_Mem_Server ) ) ,( MDR + Min( ( FirstVNF_CPU + ( BR * DDR ) ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( ( MUM + DS ) / ( MUM * CS ) ) + MUM ) / ( ( MUR - ( RCSe / MUM ) ) / ( ( ( Max( RRSe,RRSe ) * ( MLU * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUM / ( DS * RCSe ) ),MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( MRS * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( ( MDR / Min( ( PN * MDR ) ,RRS ) ) + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - ( MLU / ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) - ( Max( ACS,CRS ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( Min( MUC ,CS ),MUM ) + ( MUC * MUR ) )", "obj1": 0.1037037037037037, "obj2": 0.8510068539346329}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) )", "choosing": "( Max( ( MLU * CS ),( RRSe + MUR ) ) - ( MLU * CS ) )", "obj1": 0.7444444444444445, "obj2": 0.11390322073942609}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( RMSe * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6240740740740741, "obj2": 0.21467210326608466}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / Max( BR,( Min( MRS ,RRS ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( Max( MUM,RCSe ) / Max( RCSe,RRSe ) ) - ( Min( DS ,RCSe ) / ( RMSe + DS ) ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( DS - MUR ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RCSe ) ,( MUC / DS ) ) )", "obj1": 0.6944444444444444, "obj2": 0.15085739088875466}, {"determining": "( ( Min( Min( CRS ,DDR ) ,Min( ( PN - MDR ) ,( ARS - ( Max( PN,Const ) + ( DDR - FirstVNF_RAM ) ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( ( MUC / DS ) ,( RCSe * DS ) ) / ( ( ( MLU / Max( Min( MUR ,MUM ),RRSe ) ) * ( ( MUC * MUM ) / ( ( MUC / RCSe ) * ( MLU - MUC ) ) ) ) + ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) ) )", "obj1": 0.7759259259259259, "obj2": 0.09764867864721039}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( PN - Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + Max( ACS,PN ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( MLU + CS ) - ( RCSe / RCSe ) )", "obj1": 0.674074074074074, "obj2": 0.1662350094513867}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( ( FirstVNF_CPU + ACS ) * Min( FirstVNF_CPU_Server ,MRS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_CPU_Server - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( RCSe + DS ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),RMSe ) ) ) * MUM ) / RMSe ) )", "obj1": 0.6092592592592593, "obj2": 0.2291540322376408}, {"determining": "( ( ( Max( MDR,( ( ( ACS * DDR ) / ARS ) - ( ( PN * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem / CRS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( ( CRS - ARS ) + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( RRSe * Min( Min( ( RCSe - DS ) ,( MUM - RMSe ) ) ,( CS * MUC ) ) ) ) + MUM ) / ( MUC + ( MUR * CS ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.54953824693522}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( DS,( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.8888888888888888, "obj2": 0.043853378526410455}, {"determining": "Min( FirstVNF_CPU_Server ,( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( Max( ( Const * ( FirstVNF_CPU * MRS ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( Max( ( MUC * CS ),( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) ) + Max( ( MUC / ( RCSe * DS ) ),MUR ) )", "obj1": 0.7203703703703703, "obj2": 0.13175482611168626}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( RMSe + Max( ( ( ( MUM - DS ) - ( CS * RMSe ) ) + MUC ),MUC ) ) )", "obj1": 0.7351851851851852, "obj2": 0.11769174466110002}, {"determining": "( ( ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( Max( ACS,FirstVNF_RAM_Server ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( ( ( ( ( MUM * Max( Min( ( CS - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - ( Max( MUM,( RMSe + MUM ) ) + RCSe ) ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.12777777777777777, "obj2": 0.7746476923458963}, {"determining": "( ( ( ( PN * Max( BR,( ( CRS + ( FirstVNF_Mem / MDR ) ) + Max( ( PN + MDR ),( ARS * FirstVNF_RAM ) ) ) ) ) + ( PN + CRS ) ) + ( CRS * FirstVNF_Mem ) ) + ( RRS / ( BR + ( FirstVNF_CPU * MRS ) ) ) )", "choosing": "Min( ( RCSe * CS ) ,Max( RMSe,MUR ) )", "obj1": 0.17962962962962964, "obj2": 0.7126973009996477}, {"determining": "( ( ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( Max( ACS,FirstVNF_RAM_Server ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),( Max( Max( RCSe,( Max( ( MUR / DS ),( CS - MLU ) ) + MUM ) ),( Max( MUM,( RMSe + MUM ) ) + RCSe ) ) * MUC ) ) + ( ( MUC / DS ) / ( RMSe * RCSe ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8198052881885126}, {"determining": "( ( Max( FirstVNF_CPU_Server,BR ) - DDR ) + ( FirstVNF_CPU / Min( ( BR + FirstVNF_Mem_Server ) ,( ( ( Const * ( FirstVNF_RAM_Server * ( Const + MDR ) ) ) * FirstVNF_Mem ) / MRS ) ) ) )", "choosing": "( ( Max( CS,CS ) - CS ) - Max( ( ( ( ( MLU / Min( RCSe ,RRSe ) ) - MUM ) + RMSe ) / DS ),MUM ) )", "obj1": 0.17037037037037037, "obj2": 0.7281933326213094}, {"determining": "( Min( ACS ,Max( Min( FirstVNF_CPU_Server ,RRS ),( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) + ( ( ( ( DDR * MRS ) / Max( BR,Const ) ) + ( ( PN / MDR ) - ( Min( ( Min( ARS ,AMS ) + ( RRS - AMS ) ) ,FirstVNF_RAM ) * FirstVNF_CPU ) ) ) + ( Min( ( MDR - FirstVNF_RAM_Server ) ,( BR * FirstVNF_Mem ) ) * FirstVNF_Mem ) ) )", "choosing": "( Min( Max( ( Min( ( ( Min( RMSe ,RRSe ) * RRSe ) - Max( MUM,RCSe ) ) ,( MUR / RCSe ) ) * MLU ),( MUC + DS ) ) ,( ( MUR / DS ) - RRSe ) ) + Max( ( ( Min( RMSe ,( MLU + MUR ) ) / CS ) / DS ),( MLU - RMSe ) ) )", "obj1": 0.10555555555555556, "obj2": 0.8288295641797873}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( PN * Max( BR,( Min( MRS ,RRS ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( Max( PN,FirstVNF_RAM_Server ) + ( ACS / Const ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / ( MUM * CS ) ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11296296296296296, "obj2": 0.7963424533631798}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.39814814814814814, "obj2": 0.4498477317897245}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.2536762799909816}, {"determining": "( ( ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ARS - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( ( ( ( ( MUM * Max( Min( ( RCSe - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6476539151636825}, {"determining": "( ( PN * ( ( ( DDR * MRS ) / ( Min( ( ACS * DDR ) ,ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + ( FirstVNF_CPU * MRS ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( Max( RRSe,MUR ) ,( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( DS - RRSe ) / ( ( DS / ( MUM * Max( RRSe,MUR ) ) ) + MUM ) ) )", "obj1": 0.2722222222222222, "obj2": 0.5953538794255007}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU ,DDR ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7003986470109033}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUC ),MUC ) ) )", "obj1": 0.6407407407407407, "obj2": 0.2012639910239303}, {"determining": "( ( ( ( Max( BR,( FirstVNF_RAM_Server + ( ( RRS * ARS ) - ( FirstVNF_RAM + Const ) ) ) ) * PN ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( ( MRS * DDR ) / Max( FirstVNF_Mem,CRS ) ) + Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( RRSe ,Max( MUC,MUC ) ) - ( ( ( DS / ( Max( MUR,MUM ) * ( MUR / ( CS - MLU ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6601489230863515}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUM ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33965046632974477}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * MDR ) ,PN ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( MUC + MUC ) * Max( Min( ( RCSe - DS ) ,MUC ),( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.5314814814814814, "obj2": 0.30309832598203323}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( ( ( DS / ( Max( ( ( MUC * MUC ) + MUM ),( CS + MUC ) ) * Max( CS,RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.49331796368619796}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * RRSe ),( RRSe + MUR ) ) ) - Min( Max( ( ( ( ( ( CS * MLU ) + MUM ) - ( Min( MUC ,RCSe ) + Min( MUR ,RCSe ) ) ) - RMSe ) * CS ),DS ) ,( MUR * ( ( RRSe + DS ) + Min( MUR ,( RCSe * MUC ) ) ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.397437319070042}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( ( RRSe / ( CS * RMSe ) ) * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.2962962962962963, "obj2": 0.5505286762526707}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR / Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC * DS ) ) / ( ( RMSe + Max( ( DS / ( MUM * CS ) ),MUC ) ) + ( CS + MUC ) ) )", "obj1": 0.45555555555555555, "obj2": 0.3642874545134017}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * DDR ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( PN ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.8185185185185185, "obj2": 0.07254294621975922}, {"determining": "( ( ARS - ( RRS / MRS ) ) + ( ( ( PN * Max( BR,( PN + Min( ( ACS * DDR ) ,( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN * MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( ( ( Max( CS,MUC ) + ( ( MLU + MLU ) - ( RMSe / MUR ) ) ) / DS ) + MUR ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) / ( DS - RCSe ) ),( MUC * MUC ) ) ) ) + ( Max( MUM,MLU ) * RRSe ) ) / RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.6101653090791163}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ( ( PN - ( PN - MDR ) ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( Min( ( RMSe - DS ) ,MUR ) ,( RCSe / MUM ) ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( Min( ( RCSe - DS ) ,Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) ) / ( MUC + RRSe ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7328092727206365}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.2796296296296296, "obj2": 0.5795215930076739}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( Min( MRS ,RRS ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( MLU,( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.5370370370370371, "obj2": 0.2918077929732686}, {"determining": "( ( ( ( PN * Max( BR,Max( ( ( ACS * DDR ) / ARS ),( FirstVNF_Mem * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) / ARS ) + ( ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) * Max( Max( ( ( ( ( DDR * Const ) / Max( FirstVNF_Mem,CRS ) ) + DDR ) + ( CRS * FirstVNF_Mem ) ),FirstVNF_RAM ),ACS ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( Max( ( MLU * CS ),( Max( ( MLU * CS ),( RRSe + MUR ) ) + MUC ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.7074074074074074, "obj2": 0.14315836119275188}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,PN ) * Min( FirstVNF_CPU ,AMS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( CRS / ARS ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) )", "choosing": "( ( RMSe * Min( ( MUM - ( MUM / DS ) ) ,CS ) ) * ( ( ( ( MUM * Max( Min( ( RMSe - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - MUM ) )", "obj1": 0.1962962962962963, "obj2": 0.6928752442891158}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,ACS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - RRSe ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.3611111111111111, "obj2": 0.4786471074667323}, {"determining": "( ( Min( CRS ,( CRS / FirstVNF_Mem ) ) + ( CRS * Min( FirstVNF_Mem_Server ,( ( MDR * ARS ) + FirstVNF_CPU_Server ) ) ) ) + ( PN / ( Min( BR ,Const ) / DDR ) ) )", "choosing": "( ( ( RMSe + Max( ( RMSe * ( ( ( RRSe - RCSe ) / MLU ) - ( MUM / MUR ) ) ),( RCSe - ( MUR * ( ( RCSe / MUC ) + ( MUR - DS ) ) ) ) ) ) + ( RRSe + CS ) ) / Min( ( DS - RMSe ) ,( MUC / DS ) ) )", "obj1": 0.6537037037037037, "obj2": 0.18602739654049164}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( Min( PN ,Const ) * ( MRS / FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) - ( ( ACS * DDR ) / ARS ) ) ) + Min( ( PN - MDR ) ,( ARS - ( MDR + FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( DS - ( ( ( MUC * MUC ) + ( RCSe - DS ) ) * Max( ( RMSe * Max( ( ( RCSe + MUC ) + ( ( CS - RRSe ) * DS ) ),CS ) ),RMSe ) ) )", "obj1": 0.837037037037037, "obj2": 0.06657772231987427}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5994466793475148}, {"determining": "( ( ( ( ( PN - MDR ) / ( ( Min( PN ,Const ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) + ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) ) * ( PN + ( ( ( CRS + FirstVNF_CPU ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MUM + MUM ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( RMSe * MUM ),( Max( RRSe,MUR ) - ( CS * RMSe ) ) ) * ( Max( MUC,( RRSe + MUR ) ) * MUC ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6648148148148149, "obj2": 0.17461934581480734}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR / Min( ( PN * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( AMS + FirstVNF_RAM ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7469078504013423}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + Min( PN ,Const ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - DS ) ),( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5326335343257825}, {"determining": "( ( ( Max( FirstVNF_RAM,( FirstVNF_RAM_Server / ( ACS / Min( PN ,Const ) ) ) ) * FirstVNF_CPU ) + ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + FirstVNF_CPU ) * PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( Max( ( ( ( RMSe - RCSe ) + RRSe ) - CS ),Max( ( Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( RRSe,MUR ) - ( MLU * RMSe ) ) ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( Min( MUM ,Max( ( RRSe * MUR ),CS ) ) / ( RMSe * RCSe ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6742821774518665}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Const ) ) ) + ( ( DDR * MRS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / Min( ( MUC + RRSe ) ,( MUR / ( Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3572232923525608}, {"determining": "( ( ( ( PN * Max( BR,Max( Min( MRS ,FirstVNF_RAM_Server ),( FirstVNF_Mem_Server * ( FirstVNF_RAM_Server + FirstVNF_CPU ) ) ) ) ) + ( ( PN - PN ) + ( PN - MDR ) ) ) + ( Const - ( FirstVNF_Mem_Server + RRS ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( Max( ( ( Min( RRSe ,DS ) / MUR ) * MLU ),Min( Min( CS ,RRSe ) ,DS ) ) + ( MLU * Min( MUC ,Min( ( MLU - MLU ) ,RMSe ) ) ) ) + ( RMSe - MLU ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( Max( DS,( CS * CS ) ) * MUC ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7506770560416202}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( ( MRS * DDR ) * Min( PN ,Const ) ) * ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem ) + FirstVNF_Mem ) ) ) ) + ( ( PN - ( CRS * ( FirstVNF_Mem_Server + AMS ) ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ACS - ( MDR - FirstVNF_CPU ) ) )", "choosing": "( Min( ( MUR - DS ) ,Min( Max( CS,Max( ( Min( RRSe ,CS ) / RCSe ),MUC ) ) ,MUR ) ) - ( RMSe / Max( ( RMSe / ( MUM * RCSe ) ),MUM ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6395076488859971}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( PN ,Const ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RMSe * CS ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.20555555555555555, "obj2": 0.6906128173759404}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( Min( FirstVNF_CPU_Server ,FirstVNF_Mem_Server ) * MDR ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( MUC + MUC ) * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) )", "obj1": 0.5166666666666667, "obj2": 0.3114051259472549}, {"determining": "( ( PN * ( ARS / PN ) ) + ( ( FirstVNF_RAM_Server + RRS ) - Max( MDR,( BR - Const ) ) ) )", "choosing": "( ( RMSe + MUM ) - ( ( ( Max( RCSe,RCSe ) / Max( ( ( RCSe / ( MLU + DS ) ) / CS ),Min( ( CS * Max( MUM,MUC ) ) ,Min( Max( MUM,MUR ) ,RRSe ) ) ) ) + MUM ) / ( RRSe + MUC ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6773568402031983}, {"determining": "Min( ( ( Min( ( CRS - Const ) ,DDR ) / ARS ) / ARS ) ,( ( ( ARS * Const ) * ( ( ARS * ( ( ACS - MDR ) / FirstVNF_RAM ) ) - ( MRS / ( ACS - ( FirstVNF_Mem_Server * MRS ) ) ) ) ) + DDR ) )", "choosing": "( ( ( ( MUM - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( ( RMSe - DS ) ,MUR ) ,( RCSe / MUM ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7630408461257844}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUM ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5055555555555555, "obj2": 0.321315106906833}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( RRS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / ACS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( ( PN - MDR ) ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUM / ( ( RMSe + Max( ( ( MUR - RRSe ) + ( ( MUC / DS ) / ( RMSe * DS ) ) ),( RRSe + ( Max( ( MLU / CS ),( MUC - MUR ) ) - RRSe ) ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.9611111111111111, "obj2": 0.011143168052554588}, {"determining": "( ( ( ( Min( FirstVNF_CPU_Server ,MDR ) * FirstVNF_CPU ) + ( ( MDR - MDR ) + ( ( PN / ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Max( CS,MUC ) / ( MLU * MUR ) ) - Min( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) ,( MUC + RRSe ) ) )", "obj1": 0.3814814814814815, "obj2": 0.467311644544682}, {"determining": "( ( ( ( ( DDR * MRS ) / ( FirstVNF_Mem + CRS ) ) + Min( ( MDR - Min( ( Max( FirstVNF_CPU_Server,ARS ) + RRS ) ,FirstVNF_Mem_Server ) ) ,( MDR + Min( ( FirstVNF_CPU + ( BR * DDR ) ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( ( MUM + DS ) / ( MUM * CS ) ) + MUM ) / ( ( MUR - ( RCSe / MUM ) ) / ( ( ( Max( RRSe,RRSe ) * ( MLU * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUM / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40925925925925927, "obj2": 0.4112582054876354}, {"determining": "Min( FirstVNF_CPU_Server ,( Min( Min( Max( BR,BR ) ,( FirstVNF_CPU / PN ) ) ,ARS ) * ( Max( ( Const * ( FirstVNF_CPU * MRS ) ),FirstVNF_RAM_Server ) + ( ( FirstVNF_RAM_Server + ( CRS + FirstVNF_RAM ) ) * ( DDR / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( RRSe * MUM ) ) - ( MLU * CS ) )", "obj1": 0.12962962962962962, "obj2": 0.7719963324038731}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( RRS * FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUM ,MUM ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + Max( ( MLU * CS ),( RRSe + MUR ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5749400404705883}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( FirstVNF_CPU ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40185185185185185, "obj2": 0.42786189629731586}, {"determining": "( ( ( ( ( PN - MDR ) + ( ( PN * MDR ) + DDR ) ) + ( ( PN - MDR ) / ( ( Min( PN ,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) * Min( Min( PN ,Const ) ,FirstVNF_CPU_Server ) ) * ACS ) ) ) * ( Min( ( PN * CRS ) ,RRS ) + ( ( ( CRS + FirstVNF_CPU ) * MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( ACS - ( Min( Const ,FirstVNF_CPU ) / Max( BR,( Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) + Min( MRS ,RRS ) ) ) ) ) )", "choosing": "( ( ( Max( ( MUC * RCSe ),MUR ) - ( CS * RRSe ) ) - ( RRSe * ( MUM + MUR ) ) ) - ( MLU * CS ) )", "obj1": 0.7148148148148148, "obj2": 0.13931233946820482}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem_Server,CRS ) ) + Min( ( PN - MDR ) ,( Max( Min( ( PN - Const ) ,ARS ),ACS ) + Min( ( PN * MDR ) ,Min( AMS ,Const ) ) ) ) ) + ( CRS * MDR ) ) + PN )", "choosing": "( Max( ( MUC / ( DS * RCSe ) ),MUR ) + Min( ( RMSe - RRSe ) ,( ( ( RRSe / Min( MUR ,MUC ) ) + ( RMSe / Min( DS ,( RRSe + MUC ) ) ) ) / DS ) ) )", "obj1": 0.40370370370370373, "obj2": 0.4144542083636523}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,DDR ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / ARS ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( FirstVNF_Mem_Server - Min( DDR ,( ( DDR * MRS ) / Max( FirstVNF_Mem,MRS ) ) ) ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RMSe - RRSe ) ,( ( ( DS / MUM ) + MUM ) / ( ( ( RCSe / MUM ) - MUR ) / ( ( ( Max( RRSe,RRSe ) - ( RMSe * CS ) ) + RMSe ) / ( Max( MUM,RRSe ) - RMSe ) ) ) ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.11296296296296296, "obj2": 0.7963424533631798}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6168497981747462}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / PN ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( ( PN - MDR ) ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( MUM / ( ( RMSe + Max( ( ( MUR - RRSe ) + ( ( MUC / DS ) / ( RMSe * DS ) ) ),( RRSe + ( Max( ( MLU / CS ),( MUC - MUR ) ) - RRSe ) ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.9611111111111111, "obj2": 0.011143168052554588}, {"determining": "( ( ( CRS * FirstVNF_Mem ) + ( ( PN * Max( BR,( Min( MRS ,RRS ) + Max( ( MDR + FirstVNF_CPU ),( MDR / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) ) + ( Max( PN,FirstVNF_RAM_Server ) + ( ACS / Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * RRSe ),( RRSe + MUR ) ) ) - Min( Max( ( ( ( ( ( CS * MLU ) + MUM ) - ( Min( MUC ,RCSe ) + Min( MUR ,RCSe ) ) ) - RMSe ) * CS ),DS ) ,( MUR * ( ( RRSe + DS ) + Min( MUR ,( RCSe * MUC ) ) ) ) ) )", "obj1": 0.34629629629629627, "obj2": 0.5032656212156777}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,MRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( AMS * FirstVNF_Mem ) ) + ( ARS - ( Min( ( MRS * AMS ) ,Max( ( Const / Const ),DDR ) ) - PN ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( Max( ( Min( ( ( RCSe + MUR ) * Max( MUC,DS ) ) ,Min( RRSe ,( RMSe + DS ) ) ) + DS ),DS ) / MUR ) ) / ( ( RMSe + Max( ( ( ( DS + MUM ) - ( MUC + RRSe ) ) + MUC ),( Min( RRSe ,MLU ) / DS ) ) ) + ( CS + RRSe ) ) )", "obj1": 0.6, "obj2": 0.23452230812397748}, {"determining": "( ( ( ( ( DDR * MRS ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( FirstVNF_CPU_Server ,ARS ) ) * ( ( CRS / FirstVNF_Mem ) / Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ) ) ) ) + Min( ( PN - MDR ) ,( ARS - ( Min( FirstVNF_CPU ,Const ) + FirstVNF_CPU ) ) ) ) / ARS ) + ( ( MRS / ( ACS - ( Min( Const ,FirstVNF_CPU ) / ACS ) ) ) * Min( MRS ,FirstVNF_CPU_Server ) ) )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( MUC ,RCSe ) + RCSe ),MUC ) ) + ( ( ( Min( MUM ,MUM ) / ( MUC + RRSe ) ) - ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) + Max( ( MLU * CS ),( RRSe + MUR ) ) ) ) + RRSe ) ) )", "obj1": 0.9425925925925925, "obj2": 0.016906402464127206}, {"determining": "( ( ( ( Min( FirstVNF_CPU ,( PN * MDR ) ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ),Const ) ) )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( ( MUC + MUC ) * Max( Min( RRSe ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.6518518518518519, "obj2": 0.1920496807601243}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( MDR / FirstVNF_RAM ),( MDR + FirstVNF_CPU ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) / ( ( ( ACS * DDR ) / ARS ) - ( ( BR + FirstVNF_CPU ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * Min( Min( FirstVNF_CPU_Server ,DDR ) ,FirstVNF_CPU_Server ) ) + DDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( DS - ( ( RRSe * Min( RCSe ,CS ) ) + MUR ) ) + RRSe ) - RRSe ),Max( ( Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * RCSe ) ) * MLU ),( MUC + ( RMSe + DS ) ) ) ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.35185185185185186, "obj2": 0.5025771213613588}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( FirstVNF_Mem_Server,( FirstVNF_CPU / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( MUC * MUC ) + ( DS - RCSe ) ) / RMSe ) )", "obj1": 0.3388888888888889, "obj2": 0.5129282076815155}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.34482784181781956}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Max( FirstVNF_Mem,FirstVNF_CPU ) ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / Max( ( ( RMSe * CS ) * MUM ),RMSe ) ) ) / Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.9166666666666666, "obj2": 0.03154762562978257}, {"determining": "( ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( Max( RRSe,MUR ) * MUM ),RMSe ) * Max( ( ( MUC * MUM ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.38333333333333336, "obj2": 0.4615984396928164}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.035202837137860654}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( PN * MDR ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( MUM ,MUM ) / ( MUC + RRSe ) ) - ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5648584338363042}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ( FirstVNF_CPU / FirstVNF_Mem_Server ),FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( ( FirstVNF_CPU / FirstVNF_CPU ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - Max( ( ( DS / ( MUM * Max( DS,( Max( CS,RCSe ) + MUR ) ) ) ) + MUM ),( MUC + RRSe ) ) )", "obj1": 0.5685185185185185, "obj2": 0.2718006463119915}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( PN * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( ( MUM * Max( Min( ( CS - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - DS ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.29074074074074074, "obj2": 0.566324769212445}, {"determining": "( ( PN * ( ( ( ( ( PN - MDR ) + Min( ( MRS * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,( PN * MDR ) ) ) ) ) + ( MDR - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),( Max( Max( RCSe,( Max( ( MUR / DS ),( CS - MLU ) ) + MUM ) ),( Max( MUM,( RMSe + MUM ) ) + RCSe ) ) * MUC ) ) + ( ( MUC / DS ) / ( RMSe * RCSe ) ) )", "obj1": 0.8759259259259259, "obj2": 0.05626166454260057}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,MDR ) ) ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUC * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.6425925925925926, "obj2": 0.19787292109369886}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( RCSe - DS ) ,Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( DS,( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.8685185185185185, "obj2": 0.059533961894780656}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( PN * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,FirstVNF_Mem_Server ) ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Max( ( ( ( RCSe - RMSe ) + RRSe ) - RRSe ),( Max( Max( RCSe,( Max( ( MUR / DS ),( CS - MLU ) ) + MUM ) ),( Max( MUM,( RMSe + MUM ) ) + RCSe ) ) * MUC ) ) + ( ( MUC / DS ) / ( RMSe * RCSe ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6314676945880774}, {"determining": "( ( Min( MDR ,DDR ) * ( ( ( ( ( PN - MDR ) + Min( ( PN * MDR ) ,DDR ) ) + FirstVNF_CPU ) / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( MRS ,FirstVNF_CPU_Server ) * Min( PN ,Const ) ) * ( ( PN / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( ( CRS + DDR ) - MDR ) + Min( FirstVNF_CPU ,DDR ) ) ) ) + ( Const - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + ( MUM * CS ) ) ) ) - ( ( ( DS / ( ( ( RMSe / ( RMSe * DS ) ) - ( MUM / RMSe ) ) * MUM ) ) + MUM ) / Max( MUC,RRSe ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7613032273174064}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,RRS ) ) ) ) + ( ( ( PN * Max( BR,( ARS + ( FirstVNF_Mem + PN ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) ) + ( ARS - Max( ( FirstVNF_CPU * ( CRS - ( ( Min( PN ,FirstVNF_RAM_Server ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ACS ) ) ),Const ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( MUC,( CS * MUR ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.55, "obj2": 0.28975223572419667}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS / FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( PN - MDR ) - ( ( Max( FirstVNF_CPU,FirstVNF_CPU ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) ) / ( ( RMSe + Max( ( MUM - ( DS / Min( Min( MUC ,MLU ) ,Max( MUM,RCSe ) ) ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.575925925925926, "obj2": 0.265229670080568}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( FirstVNF_CPU_Server + CRS ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( ( MUC * MUM ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.5018518518518519, "obj2": 0.32184959491480825}, {"determining": "( ( ( ( ( DDR * MRS ) / Min( FirstVNF_Mem ,Min( FirstVNF_CPU ,( PN * Min( FirstVNF_RAM ,MRS ) ) ) ) ) + Min( ( PN - MDR ) ,( MDR + Min( MRS ,( ( RRS * MRS ) - ( MRS + ARS ) ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + Min( ( ( RRS - FirstVNF_Mem_Server ) + ( CRS + DDR ) ) ,( DDR / ( FirstVNF_RAM_Server * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ) ) )", "choosing": "( ( MUR * CS ) - ( MUM / MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "( ( ( ( PN * Max( BR,Max( FirstVNF_CPU_Server,( ( MDR + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( Max( ACS,FirstVNF_RAM_Server ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_CPU ) ) + ( ( ( ( ( ( PN - PN ) + ( PN - MDR ) ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) - ( ( ACS * DDR ) / ARS ) ) )", "choosing": "( ( ( ( ( MUM * Max( Min( ( CS - RMSe ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) - RRSe ) * DS ) - MUM ) * ( RMSe * Min( Min( Max( MUC,Max( ( MLU * CS ),( ( MUC / DS ) / ( RMSe * MUM ) ) ) ) ,MUR ) ,CS ) ) )", "obj1": 0.3314814814814815, "obj2": 0.5273601272090284}, {"determining": "( ( ( ( PN * Max( BR,( ( PN - MDR ) + Const ) ) ) + ( ( PN - ARS ) + ( PN - MDR ) ) ) + ( ( PN * Max( BR,Max( Min( MRS ,BR ),( ( FirstVNF_Mem_Server + FirstVNF_CPU ) * FirstVNF_Mem_Server ) ) ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / Min( Max( ( RRSe / RRSe ),RCSe ) ,( MUR / ( Max( Max( ( MLU * CS ),( RRSe + MUR ) ),MUR ) - ( CS * RMSe ) ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.035202837137860654}, {"determining": "( ( ( ( ( DDR * MRS ) / ( AMS + Min( ( FirstVNF_Mem_Server + PN ) ,Min( ARS ,MRS ) ) ) ) + Min( ( MRS - MDR ) ,( ARS - ( Min( PN ,Const ) - FirstVNF_CPU ) ) ) ) / ARS ) + ( Min( Min( Const ,FirstVNF_CPU ) ,Const ) * Min( BR ,FirstVNF_CPU_Server ) ) )", "choosing": "( Min( Max( DS,MLU ) ,MUC ) - ( RCSe * ( Min( Min( MUM ,RCSe ) ,( RRSe + MLU ) ) * RMSe ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06567860369034828}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( ( RRS + FirstVNF_RAM ) * PN ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) + Max( ( MUC / ( DS * RCSe ) ),MUR ) )", "obj1": 0.40185185185185185, "obj2": 0.42786189629731586}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,RRS ) ) ) ) + ( ( Min( PN ,FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / ( RRS * FirstVNF_Mem_Server ) ) ) ) + PN )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( MUR * MUM ),RMSe ) * Max( ( ( MUC * MUC ) + ( DS - RCSe ) ),( CS * MUC ) ) ) ) + MUM ) / RMSe ) )", "obj1": 0.4203703703703704, "obj2": 0.3894638075307959}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN * MDR ) ,MRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,MUC ),( CS * MUC ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.42962962962962964, "obj2": 0.3845176118267457}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( Max( ACS,FirstVNF_RAM_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - Max( ( FirstVNF_CPU * ( ( ( ( ACS * DDR ) / ARS ) - MDR ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS * FirstVNF_Mem ) / Min( Const ,MDR ) ) ) ) ),Const ) ) )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( ( ( ( MUM - DS ) - ( MUC + RRSe ) ) + MUC ),MUC ) ) + ( CS + ( MLU * CS ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.2394798410480984}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( FirstVNF_CPU_Server ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Max( Min( Max( RRSe,DS ) ,( ( CS * CS ) + MUR ) ),DS ) / ( ( RMSe + Max( ( Min( CS ,RRSe ) + RCSe ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.44814814814814813, "obj2": 0.3678288900148111}, {"determining": "( ( ( ( PN * Max( BR,( FirstVNF_Mem + Max( ( ACS * DDR ),( ARS / FirstVNF_RAM ) ) ) ) ) + ( ( PN * MDR ) + ( PN - MDR ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( ( DS / ( MUM * Max( ( ( MUC * MUC ) + ( RCSe - DS ) ),RRSe ) ) ) + MUM ) / RMSe ) + ( ( MUC / DS ) / ( RMSe * MUM ) ) )", "obj1": 0.3351851851851852, "obj2": 0.5231079334841211}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( ( RRS + ARS ) * PN ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( Min( ( RCSe - DS ) ,( MUC / DS ) ) / ( ( RMSe + Max( Max( ( MLU * CS ),( Max( ( MLU * CS ),( RRSe + MUR ) ) + MUC ) ),MUC ) ) + ( CS + RRSe ) ) )", "obj1": 0.4722222222222222, "obj2": 0.35260017313852554}, {"determining": "( ( ( ( ( DDR * MRS ) / Max( FirstVNF_Mem,CRS ) ) + Min( ( PN - MDR ) ,( MDR + Min( ( PN - FirstVNF_CPU_Server ) ,RRS ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + PN )", "choosing": "( ( ( ( CS * RMSe ) - Max( RRSe,MUR ) ) - Max( ( MUM * CS ),( MUR + RRSe ) ) ) - ( ( ( DS / ( Max( ( ( RMSe * CS ) * MUM ),RMSe ) * Max( ( Min( CS ,MUR ) + ( DS - RCSe ) ),RMSe ) ) ) + MUM ) / RMSe ) )", "obj1": 0.49444444444444446, "obj2": 0.32876618024354004}, {"determining": "( ( ( ( MDR / ( ( ( ACS * DDR ) / ARS ) - ( ( Min( PN ,Const ) * Min( MRS ,FirstVNF_CPU_Server ) ) * ( ( CRS / FirstVNF_Mem ) / Min( Const ,PN ) ) ) ) ) + ( ( PN - MDR ) + ( ( PN * ( ( CRS / FirstVNF_Mem_Server ) * MDR ) ) + ( ( PN - MDR ) + ( PN - MDR ) ) ) ) ) + ( CRS * FirstVNF_Mem ) ) + ( ARS - ( MDR + FirstVNF_CPU ) ) )", "choosing": "( ( ( Max( RRSe,MUR ) - ( CS * RMSe ) ) - Max( ( MLU * CS ),( RRSe + MUR ) ) ) - ( ( ( DS / ( MUM * Max( Min( ( RCSe - DS ) ,( MUM - RMSe ) ),( CS * RCSe ) ) ) ) + MUM ) / ( MUC + RRSe ) ) )", "obj1": 0.37037037037037035, "obj2": 0.47337666860242456}]}