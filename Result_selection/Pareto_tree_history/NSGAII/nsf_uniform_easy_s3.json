{"1": [{"determining": "( ( ( PN * AMS ) / AMS ) / ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUC ) - ( MUM + ( Min( ( MLU - RRSe ) ,RRSe ) / MUR ) ) )", "obj1": 0.18888888888888888, "obj2": 0.7382072494701368}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - CS ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.6186329289864648}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUM - DS ) + Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + MRS ) )", "choosing": "( Max( MUC,RMSe ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) + ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - RRS ) - ( PN * ARS ) )", "choosing": "Max( Max( RMSe,CS ),( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( Min( ( FirstVNF_RAM + AMS ) ,( DDR / FirstVNF_CPU ) ) * ( ACS * RRS ) ) * FirstVNF_RAM ) / PN ),PN ) - ( AMS - CRS ) )", "choosing": "Max( ( ( RRSe / MUR ) / RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.04321402337834086}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "( ( PN - ACS ) / ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Max( MUM,CS ),( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS + FirstVNF_Mem ) / Max( BR,MDR ) )", "choosing": "( ( RRSe * RCSe ) - ( ( RRSe - ( ( Min( RCSe ,RCSe ) * ( ( MUR / RRSe ) * RCSe ) ) / DS ) ) / RRSe ) )", "obj1": 0.8981481481481481, "obj2": 0.08683880369879197}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,DS ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( DDR,Min( RRS ,BR ) ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR + DS ) ,( ( MUC * Min( RCSe ,RMSe ) ) * RCSe ) )", "obj1": 0.7833333333333333, "obj2": 0.24759249968738906}, {"determining": "( Min( Const ,FirstVNF_CPU ) / Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,Max( BR,Const ) ) )", "choosing": "( ( ( MUR - MUR ) / ( RRSe - RRSe ) ) / Min( Max( DS,RRSe ) ,( RMSe + MUC ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6617697542670059}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( FirstVNF_Mem + MRS ) ) - ( ( PN - AMS ) - ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM + RMSe ) * Max( CS,RMSe ) ) + ( Max( ( ( CS * ( RCSe - ( RMSe + RCSe ) ) ) / RCSe ),RRSe ) / ( RRSe / RMSe ) ) )", "obj1": 0.6444444444444445, "obj2": 0.3440973987059831}, {"determining": "( ( ( MDR * Min( FirstVNF_RAM_Server ,CRS ) ) - Max( FirstVNF_Mem,Const ) ) * ( ( RRS / RRS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( Max( Max( MUM,CS ),( DS / DS ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU ) - Max( ( MRS - DDR ),FirstVNF_Mem ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RMSe / MUC ) * ( RMSe - RCSe ) ) - ( RRSe - MUM ) ) ,( ( MUC + RCSe ) + ( ( CS - RRSe ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,( ( RRSe * RCSe ) - Min( MUM ,RMSe ) ) )", "obj1": 0.2037037037037037, "obj2": 0.7237778128986074}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( FirstVNF_CPU_Server - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - DS ) + ( MUC - RMSe ) ) + ( ( DS / MUC ) / RMSe ) )", "obj1": 0.2962962962962963, "obj2": 0.6198356226596747}, {"determining": "Max( ( RRS - PN ),( Max( Max( ( ( ARS * ( MRS / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + FirstVNF_Mem_Server ) )", "choosing": "Min( Max( ( DS + ( MUC * MUC ) ),( RCSe - RRSe ) ) ,Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.3574074074074074, "obj2": 0.60128738776056}, {"determining": "( ( ( AMS - RRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( ( MUC / MUC ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( RRS ,MDR ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.6574074074074074, "obj2": 0.3225371830896669}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS - CS ) / Min( RCSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS * ( FirstVNF_RAM / MDR ) ) ,( BR - DDR ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.17222222222222222, "obj2": 0.7512673453939724}, {"determining": "( ( ( MDR / MDR ) - Min( FirstVNF_RAM ,DDR ) ) / ( Max( Const,FirstVNF_Mem ) * ( MRS * Const ) ) )", "choosing": "( ( DS - ( MUM / MUR ) ) - ( ( CS - RMSe ) / ( MUC * MUM ) ) )", "obj1": 0.29444444444444445, "obj2": 0.6533932900395362}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( PN / PN ) ) )", "choosing": "( ( ( DS + MLU ) / ( DS - MUM ) ) / ( ( MLU + RRSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,Min( BR ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / DDR ) )", "choosing": "( ( MLU / CS ) + ( ( RRSe - MUR ) / MUC ) )", "obj1": 0.22592592592592592, "obj2": 0.6843438581654583}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( Max( Max( CRS,ACS ),FirstVNF_CPU ) * MRS ) * ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUM * MUR ) + ( MUC / MUM ) ),( ( RRSe * RCSe ) / ( DS + MUC ) ) ) / ( ( Min( DS ,MUM ) + Max( RCSe,CS ) ) / Min( ( RCSe - MUM ) ,Min( RMSe ,MUR ) ) ) )", "obj1": 0.4981481481481482, "obj2": 0.5405445940727835}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * ARS ) ) ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( Min( MUC ,MUR ) * MLU ) ,( MUM - ( DS * DS ) ) )", "obj1": 0.6611111111111111, "obj2": 0.31746754418288703}, {"determining": "( ( ( Min( ARS ,FirstVNF_Mem ) - Min( CRS ,PN ) ) / FirstVNF_RAM ) - Max( ARS,FirstVNF_Mem ) )", "choosing": "( ( ( ( CS * RRSe ) + ( RCSe - MUR ) ) / Min( Max( MLU,MUR ) ,( MUC * MUR ) ) ) * ( ( Min( MLU ,MUC ) - ( MLU + DS ) ) / Max( ( MUC / RCSe ),( MUM * CS ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.3974376871902085}, {"determining": "( ( ( Min( RRS ,PN ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) / Min( BR ,RRS ) ) )", "choosing": "( ( CS + RMSe ) + ( ( ( MUC * CS ) + ( RMSe * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( Min( RRSe ,RCSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( MLU,DS ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( Max( MRS,FirstVNF_RAM_Server ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUC + ( RMSe + ( MUR / CS ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.5693552967379886}, {"determining": "Min( Min( Min( Max( AMS,CRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Min( Max( MRS,BR ) ,Max( DDR,MDR ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) - ( DDR / MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,RRS ) ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) * Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,MRS ) - ( ( AMS / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe + Min( Min( MLU ,( ( DS / RCSe ) / CS ) ) ,RMSe ) ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( AMS,ACS ) ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,RMSe ) / RCSe ) / MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}], "2": [{"determining": "Min( Min( MRS ,( FirstVNF_Mem - Max( AMS,( DDR - ( FirstVNF_CPU + BR ) ) ) ) ) ,( BR - DDR ) )", "choosing": "( ( ( MUM / MUM ) * ( MUM / ( Min( DS ,( ( MUR / MUC ) + MLU ) ) + ( ( RCSe - Min( DS ,RRSe ) ) * ( ( ( MUM + RCSe ) + ( RRSe * RCSe ) ) + ( MLU - MUC ) ) ) ) ) ) - Min( ( MLU + MLU ) ,( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUM - DS ) + Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( AMS,ACS ) ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,RMSe ) / RCSe ) / MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "( ( ( MDR - Const ) / ARS ) + Min( ( ( DDR - FirstVNF_RAM ) * ( FirstVNF_Mem_Server / BR ) ) ,( ( ARS + FirstVNF_RAM ) / Min( FirstVNF_CPU ,FirstVNF_RAM ) ) ) )", "choosing": "( Min( RCSe ,RCSe ) / Min( ( MUR + DS ) ,( CS * RCSe ) ) )", "obj1": 0.8111111111111111, "obj2": 0.18826620081458656}, {"determining": "( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) )", "choosing": "Min( ( MUR * DS ) ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.7592592592592593, "obj2": 0.19038811850397774}, {"determining": "( ( MRS + FirstVNF_Mem ) / Max( BR,MDR ) )", "choosing": "( ( RRSe * RCSe ) - ( ( RRSe - ( ( Min( RCSe ,RCSe ) * ( ( MUR / RRSe ) * RCSe ) ) / DS ) ) / RRSe ) )", "obj1": 0.8981481481481481, "obj2": 0.08683880369879197}, {"determining": "( ( ( Const + FirstVNF_RAM ) + ( ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) )", "obj1": 0.6851851851851852, "obj2": 0.2851248972949714}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( ( ( RMSe - MLU ) + RCSe ) - ( Max( DS,MLU ) / CS ) ) ,( ( MUR + MUC ) / Max( CS,RRSe ) ) )", "obj1": 0.5259259259259259, "obj2": 0.4461557495074568}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( ( Min( MRS ,PN ) - FirstVNF_RAM ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUC + ( RMSe + ( MUR / RRSe ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.38097370026119187}, {"determining": "( ( Max( Max( CRS,ACS ),FirstVNF_CPU ) * MRS ) * ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUM * MUR ) + ( MUC / MUM ) ),( ( RRSe * RCSe ) / ( DS + MUC ) ) ) / ( ( Min( DS ,MUM ) + Max( RCSe,CS ) ) / Min( ( RCSe - MUM ) ,Min( RMSe ,MUR ) ) ) )", "obj1": 0.4981481481481482, "obj2": 0.5405445940727835}, {"determining": "( Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) ) + ( FirstVNF_RAM * FirstVNF_Mem_Server ) )", "choosing": "Min( ( RMSe / RRSe ) ,DS )", "obj1": 0.39444444444444443, "obj2": 0.5576691191300437}, {"determining": "( ( Max( Max( CRS,ACS ),Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) * MRS ) * ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUM * MUR ) + ( MUC / MUM ) ),( ( RRSe * RCSe ) / ( DS + MUC ) ) ) / ( ( Min( DS ,MUM ) + Max( RCSe,CS ) ) / ( DS - RMSe ) ) )", "obj1": 0.5203703703703704, "obj2": 0.5168426004409982}, {"determining": "Min( ( Max( ACS,FirstVNF_Mem ) - MDR ) ,PN )", "choosing": "Min( Max( MLU,( Min( MLU ,MUM ) - MUR ) ) ,( RCSe - MUM ) )", "obj1": 0.3296296296296296, "obj2": 0.5643529685474018}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( Min( ( PN + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) - ( Max( FirstVNF_Mem_Server,( ACS * BR ) ) + ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR + RRSe ) ),( MUR - MUM ) )", "obj1": 0.55, "obj2": 0.39640082248586034}, {"determining": "Max( ( ( PN * FirstVNF_RAM ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( Const - Max( RRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUR ,Min( CS ,DS ) ) - RMSe ) / ( RCSe / MUC ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( ( FirstVNF_RAM + FirstVNF_RAM ) + ( FirstVNF_Mem + MRS ) ) - ( ( PN - AMS ) - ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM + RMSe ) * Max( CS,RMSe ) ) + ( Max( ( ( CS * ( RCSe - ( RMSe + RCSe ) ) ) / RCSe ),RRSe ) / ( RRSe / RMSe ) ) )", "obj1": 0.6444444444444445, "obj2": 0.3440973987059831}, {"determining": "Min( Max( BR,Max( ( ( BR * Max( FirstVNF_Mem,BR ) ) - DDR ),BR ) ) ,( ACS * MDR ) )", "choosing": "Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3055555555555556, "obj2": 0.5954171633365081}, {"determining": "Min( Min( MRS ,Min( BR ,FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / DDR ) )", "choosing": "( ( MLU / CS ) + ( ( RRSe - MUR ) / MUC ) )", "obj1": 0.22592592592592592, "obj2": 0.6843438581654583}, {"determining": "Max( ( FirstVNF_Mem_Server / PN ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( ACS + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( ( ( DS + ( RCSe + CS ) ) * MLU ) + MUC ) / ( RCSe / RRSe ) )", "obj1": 0.3907407407407407, "obj2": 0.5600448824821919}, {"determining": "Max( ( ( ( Min( RRS ,ARS ) + MRS ) - FirstVNF_RAM_Server ) - CRS ),( ( RRS - AMS ) / PN ) )", "choosing": "( ( ( CS * ( ( ( Max( ( CS - MUR ),RMSe ) * MUC ) * ( Max( ( MUM * MUR ),( MUR * RMSe ) ) / DS ) ) - ( MLU * MUR ) ) ) + MUC ) - ( MUM + MUC ) )", "obj1": 0.1685185185185185, "obj2": 0.7548467452210821}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( Min( RRS ,FirstVNF_Mem ) ,MDR ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( RMSe ,DS ) )", "obj1": 0.6685185185185185, "obj2": 0.31414079176941834}, {"determining": "( Min( ACS ,Max( Max( DDR,PN ),( DDR - PN ) ) ) / Min( Const ,FirstVNF_Mem ) )", "choosing": "Min( ( ( RRSe * RCSe ) - Min( MUM ,RMSe ) ) ,( DS * RRSe ) )", "obj1": 0.21296296296296297, "obj2": 0.7194010899774786}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.043214023378340856}, {"determining": "( ( ( FirstVNF_Mem_Server / ( PN / BR ) ) - Max( MRS,FirstVNF_Mem_Server ) ) + ( ( CRS - RRS ) / ( FirstVNF_RAM + MDR ) ) )", "choosing": "( ( Max( RMSe,DS ) / Max( RMSe,RMSe ) ) * ( ( Max( Min( DS ,( RMSe + ( DS / MUC ) ) ),( ( MUC - DS ) + RCSe ) ) * ( MUR - MUM ) ) * ( ( DS / DS ) + ( DS * MUM ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.026076736645658207}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "( ( ( MUM + RMSe ) * Max( CS,RMSe ) ) + ( Max( MUR,RRSe ) / ( RRSe / DS ) ) )", "obj1": 0.6444444444444445, "obj2": 0.3440973987059831}, {"determining": "Min( ( CRS / ( ARS * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.22962962962962963, "obj2": 0.663780472953121}, {"determining": "( ( Max( Max( CRS,ACS ),FirstVNF_CPU ) * MRS ) * ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUM * MUR ) + ( MUC / MUM ) ),( ( RRSe * RCSe ) / ( DS + MUC ) ) ) / ( ( Min( DS ,MUM ) + Max( RCSe,CS ) ) / Min( ( RCSe - MUM ) ,Min( RMSe ,MUR ) ) ) )", "obj1": 0.4981481481481482, "obj2": 0.5405445940727835}, {"determining": "( ( ARS + RRS ) / MRS )", "choosing": "( MUC - ( MUM + MUC ) )", "obj1": 0.26296296296296295, "obj2": 0.6336006383111169}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( MRS / RRS ) / ( FirstVNF_RAM - Max( FirstVNF_RAM,( FirstVNF_RAM + ( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + ( ARS * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Min( ( ( RRSe + RCSe ) - ( Max( DS,( ( MUR * Min( RCSe ,( RMSe * RCSe ) ) ) - ( MUR * RMSe ) ) ) / CS ) ) ,( ( MUC + MUR ) / Max( CS,RRSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.07253791703632666}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ),( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( MLU * Min( MUC ,MUR ) ) ,( MUC + MUM ) )", "obj1": 0.6518518518518519, "obj2": 0.323017829793015}, {"determining": "Max( Max( ( Const / ARS ),( FirstVNF_CPU * FirstVNF_Mem ) ),Max( ( FirstVNF_RAM_Server / FirstVNF_CPU ),Max( ( RRS - PN ),( FirstVNF_RAM + FirstVNF_Mem_Server ) ) ) )", "choosing": "( ( RCSe * MLU ) - ( RMSe + MUR ) )", "obj1": 0.2851851851851852, "obj2": 0.6299290460130119}, {"determining": "( ( Min( ACS ,ACS ) / Min( Const ,FirstVNF_Mem ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( ( DS * RRSe ),MUM ) + ( RCSe - RRSe ) ) ,( ( RRSe * RCSe ) - Min( MUM ,RMSe ) ) )", "obj1": 0.18333333333333332, "obj2": 0.7466910105822964}, {"determining": "( ( ( MDR + Max( FirstVNF_Mem,Min( FirstVNF_Mem_Server ,Min( RRS ,FirstVNF_CPU_Server ) ) ) ) * ( DDR + ( MDR - Max( ARS,( FirstVNF_CPU / FirstVNF_RAM_Server ) ) ) ) ) / Max( ( DDR - FirstVNF_CPU_Server ),Max( Const,PN ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( RRSe * RRSe ) )", "obj1": 0.2537037037037037, "obj2": 0.6471225670320588}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - CS ) ,( RCSe - MUM ) )", "obj1": 0.3037037037037037, "obj2": 0.6164685273195547}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,( PN + FirstVNF_Mem_Server ) ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( CS * RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.7242164467159237}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "( ( ( AMS - Const ) + ARS ) / Min( MRS ,ARS ) )", "choosing": "( ( MUC + ( CS * Min( MUR ,RCSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.2759259259259259, "obj2": 0.6306304391501885}, {"determining": "( Max( FirstVNF_RAM,PN ) - Max( FirstVNF_RAM_Server,RRS ) )", "choosing": "Max( ( DS + Max( ( ( ( MUC * ( RCSe + RRSe ) ) / ( ( RRSe * MUC ) * Min( MLU ,RMSe ) ) ) - ( ( MUM * MUR ) * MUC ) ),Max( Min( DS ,MLU ),MLU ) ) ),( DS * RMSe ) )", "obj1": 0.9333333333333333, "obj2": 0.043214023378340856}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS - CS ) / Min( RCSe ,RCSe ) )", "obj1": 0.9814814814814815, "obj2": 0.02201784011670493}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.17222222222222222, "obj2": 0.7512673453939724}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / Const ) ),Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.24259259259259258, "obj2": 0.659724427912248}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS - CS ) / Min( RCSe ,RCSe ) )", "obj1": 0.9814814814814815, "obj2": 0.02201784011670493}, {"determining": "Max( ( RRS - AMS ),( Max( Max( ( ( MRS * ( Max( FirstVNF_RAM,FirstVNF_CPU ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) + MUC ) ) ,( MUC / ( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.7378999815260622}, {"determining": "( ( ( MDR + ( MRS - ( FirstVNF_RAM_Server / ( ( CRS + Max( DDR,FirstVNF_Mem ) ) - ARS ) ) ) ) - Max( MRS,FirstVNF_Mem_Server ) ) + ( ( CRS - RRS ) / ( FirstVNF_RAM + MDR ) ) )", "choosing": "( ( Max( RMSe,DS ) / Max( RMSe,RMSe ) ) * ( ( CS * Max( ( MUR + RMSe ),Min( ( Max( ( MLU - RCSe ),RRSe ) - MUC ) ,RMSe ) ) ) * ( ( DS / DS ) + ( DS * MUM ) ) ) )", "obj1": 0.9796296296296296, "obj2": 0.026076736645658207}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * ARS ) ) ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( Min( MUC ,MUR ) * MLU ) ,( MUM - ( DS * DS ) ) )", "obj1": 0.6611111111111111, "obj2": 0.31746754418288703}, {"determining": "( ( ( ( RRS - CRS ) + Max( MDR,FirstVNF_CPU ) ) / ( ( FirstVNF_RAM / FirstVNF_Mem_Server ) / ( AMS * AMS ) ) ) * ( MRS + MDR ) )", "choosing": "( ( Max( ( MUC / RMSe ),RCSe ) / ( RRSe * MUR ) ) - ( MUM / ( ( CS - CS ) + ( MUR / MUC ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.65586789051164}, {"determining": "Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( MRS * DDR ) ) ) )", "choosing": "( ( RCSe * MUR ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6471834780950126}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( RMSe - MLU ) ,Max( CS,MLU ) )", "obj1": 0.9222222222222223, "obj2": 0.059074744509433855}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RMSe + RCSe ) - ( Max( DS,MLU ) / CS ) ) + ( ( MUR + MUC ) / Max( CS,RRSe ) ) )", "obj1": 0.9185185185185185, "obj2": 0.06862777888972127}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( FirstVNF_CPU_Server - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - DS ) + ( MUC - RMSe ) ) + ( ( DS / MUC ) / RMSe ) )", "obj1": 0.2962962962962963, "obj2": 0.6198356226596747}, {"determining": "( Min( ( FirstVNF_RAM + BR ) ,FirstVNF_CPU ) - ( Min( BR ,ACS ) / ARS ) )", "choosing": "( ( ( DS * DS ) * RMSe ) / Min( MUM ,( RRSe * MUR ) ) )", "obj1": 0.6574074074074074, "obj2": 0.32244681422660293}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,RMSe ) / RCSe ) / MUM ) )", "obj1": 0.2111111111111111, "obj2": 0.7230472371868686}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_Mem_Server - Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUM,MUM ),( CS - MUM ) )", "obj1": 0.9203703703703704, "obj2": 0.060639408236303934}, {"determining": "Max( ( FirstVNF_RAM_Server + AMS ),( FirstVNF_CPU_Server - ( MDR - FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( MUC - DS ) + ( MUC - RMSe ) ) + ( ( DS / MUC ) / RMSe ) )", "obj1": 0.2962962962962963, "obj2": 0.6198356226596747}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - CS ) ,( RCSe - MUM ) )", "obj1": 0.30185185185185187, "obj2": 0.6186329289864648}, {"determining": "( ( ARS + RRS ) / ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 0.18888888888888888, "obj2": 0.7382072494701368}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,( ( RRSe * RCSe ) - Min( MUM ,RMSe ) ) )", "obj1": 0.2037037037037037, "obj2": 0.7237778128986074}, {"determining": "( Max( Max( DDR,PN ),( DDR - PN ) ) * Max( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ),Min( BR ,MRS ) ) )", "choosing": "Min( ( Max( MLU,MUM ) + ( RCSe - RRSe ) ) ,( ( RRSe * RCSe ) - Min( MUM ,RMSe ) ) )", "obj1": 0.2037037037037037, "obj2": 0.7237778128986074}, {"determining": "( ( ( PN * AMS ) / AMS ) / ( ACS / FirstVNF_Mem_Server ) )", "choosing": "( ( MLU + MUC ) - ( MUM + ( Min( ( MLU - RRSe ) ,RRSe ) / MUR ) ) )", "obj1": 0.18888888888888888, "obj2": 0.7382072494701368}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + MRS ) )", "choosing": "( Max( MUC,RMSe ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) + ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - RRS ) - ( PN * ARS ) )", "choosing": "Max( Max( RMSe,CS ),( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) / ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Max( MUM,CS ),( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,DS ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * Min( FirstVNF_RAM_Server ,CRS ) ) - Max( FirstVNF_Mem,Const ) ) * ( ( RRS / RRS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( Max( Max( MUM,CS ),( DS / DS ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU ) - Max( ( MRS - DDR ),FirstVNF_Mem ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RMSe / MUC ) * ( RMSe - RCSe ) ) - ( RRSe - MUM ) ) ,( ( MUC + RCSe ) + ( ( CS - RRSe ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - RRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( ( MUC / MUC ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS - CS ) / Min( RCSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS * ( FirstVNF_RAM / MDR ) ) ,( BR - DDR ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( PN / PN ) ) )", "choosing": "( ( ( DS + MLU ) / ( DS - MUM ) ) / ( ( MLU + RRSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,PN ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) / Min( BR ,RRS ) ) )", "choosing": "( ( CS + RMSe ) + ( ( ( MUC * CS ) + ( RMSe * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( Min( RRSe ,RCSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( MLU,DS ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( AMS,CRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Min( Max( MRS,BR ) ,Max( DDR,MDR ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) - ( DDR / MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,RRS ) ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) * Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,MRS ) - ( ( AMS / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe + Min( Min( MLU ,( ( DS / RCSe ) / CS ) ) ,RMSe ) ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( ( ARS + RRS ) / ( FirstVNF_Mem_Server / MRS ) ) ) ,( BR - DDR ) )", "choosing": "( ( ( RRSe + MUC ) - ( MUM + MUC ) ) - Min( ( MLU + MLU ) ,( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,MRS ) ,( BR - DDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( Max( Const,BR ) + PN ) ) )", "choosing": "( ( ( DS + MUR ) / ( DS - MUM ) ) / ( ( CS + MUC ) * Max( ( ( ( CS + MUM ) - RMSe ) * ( CS * ( Max( ( DS + RMSe ),Max( MUM,DS ) ) + CS ) ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server / BR ) / FirstVNF_Mem ) - Max( FirstVNF_RAM_Server,( PN / PN ) ) )", "choosing": "( Max( DS,MLU ) / ( ( MLU + RMSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) )", "choosing": "( Max( MUC,RMSe ) - ( RMSe / ( MUR / DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + MRS ) )", "choosing": "( Max( MUC,RMSe ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + MDR ) ) / ( ( FirstVNF_RAM / CRS ) - ( ( FirstVNF_CPU_Server * RRS ) / Max( FirstVNF_Mem,ARS ) ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + MUR ) * ( RRSe - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem_Server ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + MDR ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( Max( ( ( RRSe / CS ) + ( MUM / CS ) ),( ( RCSe + MUR ) * ( RRSe - RMSe ) ) ) + ( Min( ( RRSe + RMSe ) ,( RCSe - DS ) ) * ( Min( CS ,RRSe ) * Min( RRSe ,RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + Max( ARS,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - Min( ( ( MUR * DS ) / ( MUM + CS ) ) ,( ( CS - RCSe ) * MUC ) ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( ACS,Const ) ) ) * ( ( ARS + FirstVNF_CPU_Server ) * BR ) )", "choosing": "( ( MUM * ( ( MUC - ( RMSe - MLU ) ) * MUR ) ) + Min( ( ( MUR * DS ) / Min( MUM ,CS ) ) ,( ( CS - RCSe ) * MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / ( MUM * ( DS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( MUC + Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( Max( DS,RMSe ) / ( MUM - MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Const / BR ) ,( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) ) ) / Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) )", "choosing": "( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) * ( ( MUC / MUR ) / ( MUM / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - Max( FirstVNF_CPU_Server,ACS ) ) - ( ( BR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) )", "choosing": "( ( MUC * MUM ) * ( ( MUC / MUR ) / ( MUM / MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU ) - Max( ( MRS - DDR ),FirstVNF_Mem ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RMSe / MUC ) * ( RMSe - RCSe ) ) - ( RRSe - MUM ) ) ,( ( MUC + RCSe ) + ( ( CS - RRSe ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU ) - Max( ( MRS - DDR ),FirstVNF_Mem ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RMSe / MUC ) * ( RMSe - RCSe ) ) - ( RRSe - MUM ) ) ,( ( MUC + RCSe ) + ( ( CS - RRSe ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU ) - Max( ( MRS - DDR ),FirstVNF_Mem ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RMSe / MUC ) * ( RMSe - RCSe ) ) - ( RRSe - MUM ) ) ,( ( MUC + RCSe ) + ( ( CS - RRSe ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( FirstVNF_RAM_Server,FirstVNF_Mem ) - ( ACS / PN ) ) - ( ( DDR * FirstVNF_Mem ) * ( RRS + FirstVNF_CPU ) ) )", "choosing": "Min( Max( ( MUC - CS ),( ( Max( CS,MLU ) - MUM ) - CS ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( CS * RMSe ) - DS ) + Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ARS ,FirstVNF_Mem_Server ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( Max( MUM,MUR ) * MUM ) + ( CS * RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( MUM - DS ) + Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( Max( FirstVNF_RAM,PN ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( DS * RMSe ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}], "3": [{"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUC,DS ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( AMS,ACS ) ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,RMSe ) / RCSe ) / MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "Min( Min( MRS ,( FirstVNF_Mem - Max( AMS,( DDR - ( FirstVNF_CPU + BR ) ) ) ) ) ,( BR - DDR ) )", "choosing": "( ( ( MUM / MUM ) * ( MUM / ( Min( DS ,( ( MUR / MUC ) + MLU ) ) + ( ( RCSe - Min( DS ,RRSe ) ) * ( ( ( MUM + RCSe ) + ( RRSe * RCSe ) ) + ( MLU - MUC ) ) ) ) ) ) - Min( ( MLU + MLU ) ,( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( AMS,ACS ) ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,RMSe ) / RCSe ) / MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "( ( ( ( ARS / ( MDR - Max( ( DDR * ( FirstVNF_Mem_Server - FirstVNF_RAM ) ),( FirstVNF_Mem - ( MRS - RRS ) ) ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM - MLU ),( CS + MUR ) ) / ( ( Max( RCSe,CS ) + ( MUM * MUC ) ) * ( DS - ( Min( ( MUR - MUM ) ,CS ) + RMSe ) ) ) )", "obj1": 0.7444444444444445, "obj2": 0.12361618149298739}, {"determining": "( ( ( Const + FirstVNF_RAM ) + ( ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) )", "obj1": 0.6851851851851852, "obj2": 0.2851248972949714}, {"determining": "( ( MRS + FirstVNF_Mem ) / Max( BR,MDR ) )", "choosing": "( ( RRSe * RCSe ) - ( ( RRSe - ( ( Min( RCSe ,RCSe ) * ( ( MUR / RRSe ) * RCSe ) ) / DS ) ) / RRSe ) )", "obj1": 0.8981481481481481, "obj2": 0.08683880369879197}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( Min( ( MUR * DS ) ,( MUR - Min( MUR ,RMSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.4425925925925926, "obj2": 0.5178146510579357}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 0.46111111111111114, "obj2": 0.45989899189077965}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( Min( RRSe ,RCSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( MLU,DS ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 0.3925925925925926, "obj2": 0.5360919009246556}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( Min( ( PN + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) - ( Max( FirstVNF_Mem_Server,( ACS * BR ) ) + ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR + RRSe ) ),( MUR - MUM ) )", "obj1": 0.55, "obj2": 0.39640082248586034}, {"determining": "( Max( FirstVNF_RAM,CRS ) - ( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) * ( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RCSe * CS ),( CS - MUM ) )", "obj1": 0.5, "obj2": 0.44815451432563314}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( ( ( RMSe - MLU ) + RCSe ) - ( Max( DS,MLU ) / CS ) ) ,( ( MUR + MUC ) / Max( CS,RRSe ) ) )", "obj1": 0.5259259259259259, "obj2": 0.4461557495074568}, {"determining": "Min( ( FirstVNF_CPU_Server - AMS ) ,( FirstVNF_Mem - FirstVNF_RAM ) )", "choosing": "Min( ( ( MUC - ( MUM - ( Max( Max( ( MLU + MUR ),DS ),RMSe ) * CS ) ) ) - MUM ) ,( RRSe * RRSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6747762690808969}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_RAM - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( ( ACS + FirstVNF_CPU ) - Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( ( RMSe + RCSe ) - ( Max( DS,( ( MUC + MUC ) * ( ( RMSe / MUC ) * ( RMSe - RCSe ) ) ) ) / CS ) ) ,( ( MUR + MUC ) / Max( CS,RRSe ) ) )", "obj1": 0.6037037037037037, "obj2": 0.36598388566948675}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - Min( FirstVNF_Mem ,MDR ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUR - CS ) ) ) * RCSe ) ) / MUM ) ) )", "obj1": 0.13148148148148148, "obj2": 0.8274579268110299}, {"determining": "Max( ( RRS - PN ),( Max( Max( ( ( MRS * ( ( CRS - RRS ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + FirstVNF_Mem_Server ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUC ) ) ,MUC )", "obj1": 0.2111111111111111, "obj2": 0.716579283344443}, {"determining": "Min( ( ( ( MRS + PN ) * ( MRS - AMS ) ) - PN ) ,Max( AMS,Max( Max( Max( DDR,Max( BR,RRS ) ),Const ),FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Min( RRSe ,DS ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( RCSe / MUM ) )", "obj1": 0.2833333333333333, "obj2": 0.6050427959079633}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR * DS ) ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.6222222222222222, "obj2": 0.32970686633816404}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( MUC + ( RMSe / ( MUR / DS ) ) )", "obj1": 0.6129629629629629, "obj2": 0.34472776544929046}, {"determining": "Max( ( ( ( Min( RRS ,ARS ) + MRS ) - FirstVNF_RAM_Server ) - CRS ),( ( RRS - AMS ) / PN ) )", "choosing": "( ( ( CS * ( ( ( Max( ( CS - MUR ),RMSe ) * MUC ) * ( Max( ( MUM * MUR ),( MUR * RMSe ) ) / DS ) ) - ( MLU * MUR ) ) ) + MUC ) - ( MUM + MUC ) )", "obj1": 0.1685185185185185, "obj2": 0.7548467452210821}, {"determining": "Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( RRSe * RRSe ) )", "obj1": 0.13703703703703704, "obj2": 0.7695839638400434}, {"determining": "Min( ( FirstVNF_Mem / MDR ) ,Min( PN ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MLU + MUC ) - ( MUM + ( ( Min( ( ( MUR / RCSe ) * Min( RCSe ,( MUR / RRSe ) ) ) ,MLU ) - ( ( RMSe + Min( RRSe ,( RMSe / RMSe ) ) ) / MUR ) ) / ( Min( RCSe ,( RRSe * ( RRSe + MUC ) ) ) + ( MUR - DS ) ) ) ) )", "obj1": 0.3574074074074074, "obj2": 0.5455119541025331}, {"determining": "Min( Max( BR,Max( ( ( BR * Max( FirstVNF_Mem,BR ) ) - DDR ),BR ) ) ,( ACS * MDR ) )", "choosing": "Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3055555555555556, "obj2": 0.5954171633365081}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.3314814814814815, "obj2": 0.5608004551375122}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),Min( PN ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( RMSe - RRSe ) / ( MLU + ( Min( MUM ,Max( CS,( RMSe - MLU ) ) ) + Min( RRSe ,MUM ) ) ) ),RMSe ) * ( MUC - ( MUC * MUM ) ) )", "obj1": 0.9666666666666667, "obj2": 0.0390800855876614}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( ( Min( MRS ,PN ) - FirstVNF_RAM ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUC + ( RMSe + ( MUR / RRSe ) ) ) )", "obj1": 0.5777777777777777, "obj2": 0.37850181178665604}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( MRS / RRS ) / ( FirstVNF_RAM - Max( FirstVNF_RAM,( FirstVNF_RAM + ( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + ( ARS * FirstVNF_CPU ) ) ) ) ) ) )", "choosing": "Min( ( ( RRSe + RCSe ) - ( Max( DS,( ( MUR * Min( RCSe ,( RMSe * RCSe ) ) ) - ( MUR * RMSe ) ) ) / CS ) ) ,( ( MUC + MUR ) / Max( CS,RRSe ) ) )", "obj1": 0.9166666666666666, "obj2": 0.07253791703632666}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3111111111111111, "obj2": 0.583883988675509}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ),( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( MLU * Min( MUC ,MUR ) ) ,( MUC + MUM ) )", "obj1": 0.6518518518518519, "obj2": 0.323017829793015}, {"determining": "Max( Min( ( ( FirstVNF_RAM / PN ) + ( FirstVNF_RAM - DDR ) ) ,Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( RMSe / DS ) ) + ( ( RCSe + MUR ) * ( RRSe - RMSe ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7359861658688495}, {"determining": "Min( ( CRS / ( ARS * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.22962962962962963, "obj2": 0.663780472953121}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) + ( Const * ARS ) ) ) ) ) )", "choosing": "Max( ( DS * MUC ),( ( MUC - DS ) - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.043214023378340856}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( RRS ,MDR ) ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUR ) )", "obj1": 0.6759259259259259, "obj2": 0.2877067540627091}, {"determining": "Max( ( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ),( BR + ( MRS * ( CRS * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Max( ( RMSe - MUC ),Max( DS,( MUM - CS ) ) ) * MLU ) ,( MUM - ( MUM / DS ) ) )", "obj1": 0.5611111111111111, "obj2": 0.38258417723639504}, {"determining": "( ( ARS + RRS ) / MRS )", "choosing": "( MUC - ( MUM + MUC ) )", "obj1": 0.26296296296296295, "obj2": 0.6336006383111169}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MLU + MUC ) - ( MUM + MUC ) )", "obj1": 0.3574074074074074, "obj2": 0.5455119541025331}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( Min( RRS ,Max( AMS,ACS ) ) ,MDR ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( ( Min( RMSe ,RMSe ) / RCSe ) ,DS ) )", "obj1": 0.6722222222222223, "obj2": 0.3094694700725785}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + MDR ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.726064559401218}, {"determining": "( ( ARS + RRS ) / Min( MRS ,MRS ) )", "choosing": "( ( MLU + MUC ) - ( MUM + MUC ) )", "obj1": 0.2777777777777778, "obj2": 0.6298497157580191}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( MUR - ( Max( Max( MLU,DS ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 0.9740740740740741, "obj2": 0.0189853012468206}, {"determining": "Min( Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( RCSe - MUM ) )", "obj1": 0.32222222222222224, "obj2": 0.5704803943902143}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,RMSe ) - ( RMSe / RCSe ) )", "obj1": 0.9703703703703703, "obj2": 0.03652975247343645}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( ( ( RMSe - MLU ) + RCSe ) - ( Max( DS,MLU ) / CS ) ) ,( ( MUR + MUC ) / Max( CS,RRSe ) ) )", "obj1": 0.5259259259259259, "obj2": 0.4461557495074568}, {"determining": "Max( ( ( ARS / DDR ) / ( FirstVNF_CPU_Server / ( Min( Const ,ACS ) - ( AMS * FirstVNF_RAM_Server ) ) ) ),( Min( PN ,FirstVNF_CPU ) + ( BR + AMS ) ) )", "choosing": "( ( MUC - RMSe ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7506333058676471}, {"determining": "Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUM,DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6570619844752725}, {"determining": "( ( Max( ( Const - FirstVNF_CPU ),FirstVNF_CPU ) * MRS ) * ( ( ACS / PN ) * FirstVNF_CPU ) )", "choosing": "( Max( ( ( MUR * MUM ) + ( RCSe / MUM ) ),( ( RRSe * RCSe ) / ( DS + MUC ) ) ) / ( ( MUR + MUM ) / DS ) )", "obj1": 0.2, "obj2": 0.7230789556918568}, {"determining": "( ( ( MDR + ( DDR - FirstVNF_CPU ) ) - Max( MRS,FirstVNF_Mem_Server ) ) + ( ( CRS - RRS ) / ( FirstVNF_RAM + MDR ) ) )", "choosing": "( ( Max( RMSe,DS ) / Max( RMSe,RMSe ) ) * ( ( Max( Min( DS ,( RMSe + ( DS / MUC ) ) ),( ( MUC - ( ( MUC / CS ) - RCSe ) ) + RCSe ) ) * Max( MUR,MUM ) ) * ( ( DS / DS ) + ( DS * MUM ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.007356405657515505}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * ARS ) ) ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( Min( MUC ,MUR ) * MLU ) ,( MUM - ( DS * DS ) ) )", "obj1": 0.6611111111111111, "obj2": 0.31746754418288703}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( Min( RRS ,FirstVNF_Mem ) ,MDR ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( RMSe ,DS ) )", "obj1": 0.6685185185185185, "obj2": 0.31414079176941834}, {"determining": "( ( ( AMS - Const ) + ARS ) / Min( MRS ,ARS ) )", "choosing": "( ( MUC + ( CS * Min( MUR ,RCSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.2759259259259259, "obj2": 0.6306304391501885}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + Max( ( FirstVNF_Mem_Server / PN ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( ACS + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ) ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( Min( RRSe ,RCSe ) + ( MUR - RCSe ) ) ) - ( RCSe / RRSe ) )", "obj1": 0.9796296296296296, "obj2": 0.014913359571944897}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( ( Min( MRS ,PN ) - FirstVNF_RAM ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUC + ( RMSe + ( MUR / RRSe ) ) ) )", "obj1": 0.5722222222222222, "obj2": 0.38121808042820693}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM - Min( RRSe ,RCSe ) ) + ( RMSe * RRSe ) )", "obj1": 0.9185185185185185, "obj2": 0.06502321280396359}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,( PN + FirstVNF_Mem_Server ) ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( CS * RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.7242164467159237}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( DS * RMSe ),( MUR - MUM ) )", "obj1": 0.9888888888888889, "obj2": 0.008784729465904731}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( DS + ( RCSe + CS ) ) * MLU ) + MUC ) / ( RCSe / RRSe ) )", "obj1": 0.9851851851851852, "obj2": 0.013512808806828994}, {"determining": "Max( ( RRS - AMS ),( Max( Max( ( ( MRS * ( Max( FirstVNF_RAM,FirstVNF_CPU ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) + MUC ) ) ,( MUC / ( RMSe + MUR ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6434158292053921}, {"determining": "( ( ( FirstVNF_CPU_Server * BR ) - BR ) + ( ARS - MDR ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( ( CS / DS ) / RMSe ) )", "obj1": 0.9222222222222223, "obj2": 0.058759169278952694}, {"determining": "Max( ( RRS - AMS ),( Max( Max( ( ( MRS * ( Max( FirstVNF_RAM,FirstVNF_CPU ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) + MUC ) ) ,( MUC / ( RMSe + MUR ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6434158292053921}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.924074074074074, "obj2": 0.050458502567682265}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "( Max( ( ( MUM * MUR ) + ( MUC / MUM ) ),( ( RRSe * RCSe ) / ( DS + MUC ) ) ) / ( ( Min( DS ,MUM ) + Max( RCSe,CS ) ) / Min( ( RCSe - MUM ) ,Min( RMSe ,MUR ) ) ) )", "obj1": 0.3277777777777778, "obj2": 0.5697443118761633}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.043214023378340856}, {"determining": "( Min( ( FirstVNF_RAM + BR ) ,FirstVNF_CPU ) - ( Min( BR ,ACS ) / ARS ) )", "choosing": "( ( ( DS * DS ) * RMSe ) / Min( MUM ,( RRSe * MUR ) ) )", "obj1": 0.6574074074074074, "obj2": 0.32244681422660293}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6482996279744971}, {"determining": "Max( ( RRS - PN ),( Max( Max( ( ( MDR + ( MRS - FirstVNF_CPU ) ) - Max( MRS,FirstVNF_Mem_Server ) ),MDR ),DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( RCSe * ( RRSe + Max( RRSe,RRSe ) ) ) + MUC ) ) ,( RMSe + ( DS / MUC ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6543428784198395}, {"determining": "Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.24444444444444444, "obj2": 0.6539075250401891}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.3296296296296296, "obj2": 0.5643529685474018}, {"determining": "Max( ( ( PN * FirstVNF_RAM ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( Const - Max( RRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUR ,Min( CS ,DS ) ) - RMSe ) / ( RCSe / MUC ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_Mem_Server - Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUM,MUM ),( CS - MUM ) )", "obj1": 0.9203703703703704, "obj2": 0.060639408236303934}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( ( Min( MRS ,PN ) - FirstVNF_RAM ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUC + ( RMSe + ( MUR / RRSe ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.38097370026119187}, {"determining": "Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( MRS * DDR ) ) ) )", "choosing": "( ( RCSe * MUR ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6471834780950126}, {"determining": "Min( ( Max( ACS,FirstVNF_Mem ) - MDR ) ,PN )", "choosing": "Min( Max( MLU,( Min( MLU ,MUM ) - MUR ) ) ,( RCSe - MUM ) )", "obj1": 0.3296296296296296, "obj2": 0.5643529685474018}, {"determining": "Max( ( RRS - PN ),( Max( Max( ( ( MRS * ( MRS / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.24814814814814815, "obj2": 0.6471834780950126}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( RRS ,MDR ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.6574074074074074, "obj2": 0.32244681422660293}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( FirstVNF_Mem_Server - Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( Max( MUM,MUM ),( CS - MUM ) )", "obj1": 0.9203703703703704, "obj2": 0.060639408236303934}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( ( Min( MRS ,PN ) - FirstVNF_RAM ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "( Min( MUC ,DS ) / ( MUC + ( RMSe + ( MUR / RRSe ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.38097370026119187}, {"determining": "( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( MUM - DS ) + Min( RMSe ,RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS - FirstVNF_CPU_Server ) * ( CRS + MRS ) )", "choosing": "( Max( MUC,RMSe ) - ( RMSe / RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( Const ,ACS ) - ( AMS * FirstVNF_RAM_Server ) )", "choosing": "( ( CS * RMSe ) + ( MUM * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MRS - RRS ) - ( PN * ARS ) )", "choosing": "Max( Max( RMSe,CS ),( MUM / DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( PN - ACS ) / ( MDR + FirstVNF_CPU ) )", "choosing": "Max( Max( MUM,CS ),( RRSe * MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR + ACS ) ,( RRS / RRS ) ) - ( ( FirstVNF_RAM_Server / FirstVNF_RAM ) + ( PN / FirstVNF_Mem_Server ) ) )", "choosing": "( Max( MUC,DS ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR * Min( FirstVNF_RAM_Server ,CRS ) ) - Max( FirstVNF_Mem,Const ) ) * ( ( RRS / RRS ) * ( FirstVNF_RAM * DDR ) ) )", "choosing": "( Max( Max( MUM,CS ),( DS / DS ) ) - ( MUC - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ACS,FirstVNF_CPU ) - Max( ( MRS - DDR ),FirstVNF_Mem ) ) - ( PN * FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( ( RMSe / MUC ) * ( RMSe - RCSe ) ) - ( RRSe - MUM ) ) ,( ( MUC + RCSe ) + ( ( CS - RRSe ) / RRSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( AMS - RRS ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM_Server ) ) + ( ( DDR - Const ) * PN ) )", "choosing": "( ( ( CS * MLU ) / ( DS + MUR ) ) - Min( ( RRSe * MUR ) ,( ( MUC / MUC ) * DS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),FirstVNF_Mem_Server ) )", "choosing": "( ( DS - CS ) / Min( RCSe ,RCSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MRS * ( FirstVNF_RAM / MDR ) ) ,( BR - DDR ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( PN / PN ) ) )", "choosing": "( ( ( DS + MLU ) / ( DS - MUM ) ) / ( ( MLU + RRSe ) * ( MUC / MUC ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Max( ( BR / Const ),( Const + MRS ) ) - Max( Max( Const,PN ),Max( AMS,Const ) ) ) * ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) )", "choosing": "( ( Min( ( MUR * DS ) ,Max( DS,MUM ) ) - ( Max( MUM,DS ) * Min( MLU ,MUR ) ) ) / ( ( ( CS / RRSe ) - ( MUM * CS ) ) + Min( ( MUR - MUC ) ,Min( MUM ,DS ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Min( RRS ,PN ) + ( Const - RRS ) ) * ( ( DDR - PN ) - Max( ARS,Const ) ) ) + ( ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) / Min( BR ,RRS ) ) )", "choosing": "( ( CS + RMSe ) + ( ( ( MUC * CS ) + ( RMSe * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( Min( RRSe ,RCSe ) + ( MUR - RCSe ) ) ) - ( Max( Max( MLU,DS ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - FirstVNF_CPU ) * ( MRS / ( BR - BR ) ) )", "choosing": "( ( ( MUC - MUM ) - ( Min( MUR ,MUM ) * ( RMSe - MUR ) ) ) * ( ( ( MLU * DS ) * MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( Min( Max( AMS,CRS ) ,Max( FirstVNF_RAM_Server,FirstVNF_Mem_Server ) ) ,Min( Max( MRS,BR ) ,Max( DDR,MDR ) ) ) ,( ( Min( FirstVNF_Mem ,ACS ) - ( DDR / MRS ) ) + Min( ( FirstVNF_Mem / FirstVNF_Mem_Server ) ,Max( FirstVNF_CPU,RRS ) ) ) )", "choosing": "( Min( MLU ,( MUM - MLU ) ) * Min( MUM ,MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( PN ,MRS ) - ( ( AMS / FirstVNF_Mem_Server ) * Const ) ) - ( FirstVNF_Mem + DDR ) )", "choosing": "( ( Min( ( RRSe / RMSe ) ,Min( CS ,MUM ) ) + ( ( RRSe + Min( Min( MLU ,( ( DS / RCSe ) / CS ) ) ,RMSe ) ) - ( MUM * MUR ) ) ) / ( ( Max( MUM,RMSe ) + Max( MUM,RRSe ) ) - ( ( MUC / RMSe ) * ( MUR + MUR ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( ( ARS + RRS ) / ( FirstVNF_Mem_Server / MRS ) ) ) ,( BR - DDR ) )", "choosing": "( ( ( RRSe + MUC ) - ( MUM + MUC ) ) - Min( ( MLU + MLU ) ,( MUR - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,MRS ) ,( BR - DDR ) )", "choosing": "( ( RRSe + MUC ) - ( MUM + MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( CRS / FirstVNF_Mem ) - ( FirstVNF_RAM_Server + ( Max( Const,BR ) + PN ) ) )", "choosing": "( ( ( DS + MUR ) / ( DS - MUM ) ) / ( ( CS + MUC ) * Max( ( ( ( CS + MUM ) - RMSe ) * ( CS * ( Max( ( DS + RMSe ),Max( MUM,DS ) ) + CS ) ) ),MLU ) ) )", "obj1": 1.0, "obj2": 0.0}], "4": [{"determining": "Min( ( ( FirstVNF_CPU_Server * BR ) - BR ) ,( MDR - ARS ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( ( CS / DS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( AMS,ACS ) ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,RMSe ) / RCSe ) / MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( Max( MUC,DS ) / ( ( DS + RCSe ) + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * MDR ) / Max( AMS,ACS ) ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server / Max( FirstVNF_RAM,CRS ) ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) + ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( RMSe + MLU ) * DS ) ) + ( ( Min( RMSe ,( DS - ( MUR / ( Min( MUR ,MLU ) / MUR ) ) ) ) / RCSe ) / MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "( ( ( ( ARS / ( MDR - Max( ( DDR * ( FirstVNF_Mem_Server - FirstVNF_RAM ) ),( FirstVNF_Mem - ( MRS - RRS ) ) ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM - MLU ),( CS + MUR ) ) / ( ( Max( RCSe,CS ) + ( MUM * MUC ) ) * ( DS - ( Min( ( MUR - MUM ) ,CS ) + RMSe ) ) ) )", "obj1": 0.7444444444444445, "obj2": 0.12361618149298739}, {"determining": "( ( ( Const + FirstVNF_RAM ) + ( ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) )", "obj1": 0.6851851851851852, "obj2": 0.2825156165645319}, {"determining": "( ( MRS + FirstVNF_Mem ) / Max( BR,MDR ) )", "choosing": "( ( RRSe * RCSe ) - ( ( RRSe - ( ( Min( RCSe ,RCSe ) * ( ( MUR / RRSe ) * RCSe ) ) / DS ) ) / RRSe ) )", "obj1": 0.8981481481481481, "obj2": 0.08683880369879197}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.3925925925925926, "obj2": 0.5115954760568916}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 0.46111111111111114, "obj2": 0.45989899189077965}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - Min( FirstVNF_Mem ,MDR ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUR - CS ) ) ) * RCSe ) ) / MUM ) ) )", "obj1": 0.13148148148148148, "obj2": 0.8274579268110299}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( ( Min( MRS ,PN ) - FirstVNF_RAM ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.5444444444444444, "obj2": 0.4127025032561363}, {"determining": "( ( Min( CRS ,RRS ) + ( Const + FirstVNF_Mem ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "Min( ( ( RRSe + MLU ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) + MUC ) ) ,( Min( ( MUM / DS ) ,MUM ) * ( MLU * ( RCSe - MUC ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.3099608957967886}, {"determining": "Max( ( ( PN * FirstVNF_RAM ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( Const - Max( RRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUR ,Min( CS ,DS ) ) - RMSe ) / ( RCSe / MUC ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "( ( RRSe * RCSe ) - ( DS / RRSe ) )", "obj1": 0.8981481481481481, "obj2": 0.08683880369879197}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.3888888888888889, "obj2": 0.535080254399721}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 0.5777777777777777, "obj2": 0.3522008567092044}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( ( ( CS * ( ( ( Max( ( CS - MUR ),RMSe ) * MUC ) * ( Max( ( MUM * MUR ),( MUR * RMSe ) ) / DS ) ) - ( MLU * MUR ) ) ) + MUC ) - ( MUM + MUC ) )", "obj1": 0.5259259259259259, "obj2": 0.43885509587286026}, {"determining": "Max( ( RRS - AMS ),( CRS + Max( BR,ARS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( Min( MUR ,RCSe ),MLU ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( ( MUR + MUC ) - Max( CS,MUR ) ) ) / ( RMSe + MUR ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6933129621266029}, {"determining": "Max( ( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ),( BR + ( MRS * ( CRS * FirstVNF_Mem ) ) ) )", "choosing": "Min( ( Max( ( RMSe - MUC ),Max( DS,( MUM - CS ) ) ) * MLU ) ,( MUM - ( MUM / DS ) ) )", "obj1": 0.5611111111111111, "obj2": 0.38258417723639504}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "( ( ( Const + FirstVNF_RAM ) + ( ( ( RRS / Min( ( Max( ACS,FirstVNF_Mem ) - MDR ) ,PN ) ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "( ( ( MUR + DS ) - Max( CS,MLU ) ) / ( MUM - DS ) )", "obj1": 0.6685185185185185, "obj2": 0.29919103106558115}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.5648148148148148, "obj2": 0.35729501962871996}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( ( ( MUC - DS ) + ( MUC - RMSe ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.2833333333333333, "obj2": 0.6050427959079633}, {"determining": "Min( Max( BR,Max( ( ( BR * Max( FirstVNF_Mem,BR ) ) - DDR ),BR ) ) ,( ACS * MDR ) )", "choosing": "Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3055555555555556, "obj2": 0.5954171633365081}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * ARS ) ) ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "( Min( ( MUR * DS ) ,( MUR - Min( MUR ,RMSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.6296296296296297, "obj2": 0.32491592599287566}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR - MUM ),( CS - MUM ) )", "obj1": 0.9166666666666666, "obj2": 0.06758908373664625}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ),( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) )", "obj1": 0.6111111111111112, "obj2": 0.34746857472678366}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUC ) ) ,MUC )", "obj1": 0.3611111111111111, "obj2": 0.5359445929337785}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.741894801533086}, {"determining": "Min( ( MDR - ( CRS / Max( MRS,Const ) ) ) ,PN )", "choosing": "Min( ( CS + ( Min( CS ,Min( RRSe ,( RCSe / ( ( CS / CS ) * MUR ) ) ) ) - ( DS + Min( MUM ,MUC ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.337037037037037, "obj2": 0.558373286220879}, {"determining": "Max( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) ) ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "Min( ( RRSe - MUM ) ,( MUM - ( MUM / DS ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04066129550475484}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.2611111111111111, "obj2": 0.6311020735856768}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + Max( FirstVNF_Mem_Server,( RRS + ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( CS + MUR ) ,RMSe ) - MUR ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + Min( RCSe ,( RRSe - ( ( MUM / DS ) / ( CS + ( ( ( CS + MUR ) - ( MLU / MUC ) ) - ( Min( RRSe ,RRSe ) * ( MLU - MUC ) ) ) ) ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7582844612424846}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( Min( ( MUR * DS ) ,( MUR - Min( MUR ,RMSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.5222222222222223, "obj2": 0.44523196923255776}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Max( DS,( CS - MUM ) )", "obj1": 0.4925925925925926, "obj2": 0.45279973868807516}, {"determining": "Max( ( RRS - PN ),( Max( Max( ( ( MDR + ( MRS - FirstVNF_CPU ) ) - Max( MRS,FirstVNF_Mem_Server ) ),MDR ),DDR ) + MDR ) )", "choosing": "( ( MLU + MUC ) - ( MUM + MUC ) )", "obj1": 0.2777777777777778, "obj2": 0.6295153249580321}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),Min( PN ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( RMSe - RRSe ) / ( MLU + ( Min( MUM ,Max( CS,( RMSe - MLU ) ) ) + Min( RRSe ,MUM ) ) ) ),RMSe ) * ( MUC - ( MUC * MUM ) ) )", "obj1": 0.9666666666666667, "obj2": 0.0390800855876614}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( Max( ( ( MUM * MUR ) + ( MUC / MUM ) ),( ( RRSe * RCSe ) / ( DS + MUC ) ) ) / ( ( Min( DS ,MUM ) + Max( RCSe,CS ) ) / Min( ( RCSe - MUM ) ,Min( RMSe ,MUR ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.45457489551152047}, {"determining": "Min( ( ( Min( DDR ,ARS ) / ( CRS + MRS ) ) / ( RRS + AMS ) ) ,Min( ( ACS + ( PN * MDR ) ) ,Max( ( FirstVNF_RAM_Server / ACS ),FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR * RRSe ) ,( ( RMSe * RCSe ) - ( ( MLU + MUR ) - ( RMSe * Max( MUC,MUR ) ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6747762690808969}, {"determining": "Min( ( FirstVNF_Mem / MDR ) ,Min( PN ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MLU + MUC ) - ( MUM + ( ( Min( ( ( MUR / RCSe ) * Min( RCSe ,( MUR / RRSe ) ) ) ,MLU ) - ( ( RMSe + Min( RRSe ,( RMSe / RMSe ) ) ) / MUR ) ) / ( Min( RCSe ,( RRSe * ( RRSe + MUC ) ) ) + ( MUR - DS ) ) ) ) )", "obj1": 0.3574074074074074, "obj2": 0.5455119541025331}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( Min( ( PN + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) - ( Max( FirstVNF_Mem_Server,( ACS * BR ) ) + ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "Max( Min( DS ,( MUR + RRSe ) ),( MUR - MUM ) )", "obj1": 0.55, "obj2": 0.39640082248586034}, {"determining": "( Min( FirstVNF_RAM ,PN ) - ( ( ( Max( RRS,Const ) + MDR ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Max( DS,( CS - Min( MLU ,RMSe ) ) )", "obj1": 0.5, "obj2": 0.44815451432563314}, {"determining": "Max( ( RRS - PN ),( Max( Max( ( ( MRS * ( MRS / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + ( FirstVNF_Mem - MDR ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6678381230504002}, {"determining": "Min( ( PN - Min( Max( ( MRS * MDR ),PN ) ,( FirstVNF_Mem / Max( FirstVNF_CPU,Min( Max( MRS,( MRS * FirstVNF_RAM_Server ) ) ,AMS ) ) ) ) ) ,( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MLU / ( ( MUM / MUR ) - ( MUM + CS ) ) ) + ( MUC / Max( RRSe,( DS / RRSe ) ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.1814814814814815, "obj2": 0.7200579844878136}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,RMSe ) - ( RMSe / RCSe ) )", "obj1": 0.9703703703703703, "obj2": 0.03652975247343645}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem_Server / MRS ) )", "choosing": "Min( ( Min( MUC ,MUR ) * MLU ) ,( MUM - ( MUM / DS ) ) )", "obj1": 0.6148148148148148, "obj2": 0.34076045496367385}, {"determining": "( Min( Min( Max( MRS,AMS ) ,Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( ARS * Const ) ) ) / Min( Max( FirstVNF_Mem_Server,( FirstVNF_CPU + FirstVNF_RAM_Server ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( Min( ( MUM * ( RCSe + ( RMSe + Max( RMSe,DS ) ) ) ) ,RCSe ) + ( MUR - MUC ) ) ) - ( Max( Max( MLU,DS ),( MLU + DS ) ) - Max( Max( DS,RCSe ),( MUR * RRSe ) ) ) )", "obj1": 0.9722222222222222, "obj2": 0.020271409817963274}, {"determining": "Min( ( ( ( MRS + PN ) * ( MRS - AMS ) ) - PN ) ,Max( AMS,Max( Max( Max( DDR,Max( BR,RRS ) ),Const ),FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Min( RRSe ,DS ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( RCSe / MUM ) )", "obj1": 0.1814814814814815, "obj2": 0.7200579844878136}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - MRS ) * ( ( CRS - RRS ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) )", "choosing": "Max( ( DS * RMSe ),( ( MUC + RRSe ) - Min( ( DS - MUC ) ,MUR ) ) )", "obj1": 0.5481481481481482, "obj2": 0.3970958142107516}, {"determining": "Max( Min( ( ( FirstVNF_RAM / PN ) + ( FirstVNF_RAM - DDR ) ) ,Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( RMSe / DS ) ) + ( ( RCSe + MUR ) * ( RRSe - RMSe ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7359861658688495}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR * DS ) ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.6222222222222222, "obj2": 0.329706866338164}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( RRS ,MDR ) ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUR ) )", "obj1": 0.6759259259259259, "obj2": 0.2877067540627091}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.1685185185185185, "obj2": 0.7383615976754833}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( MUR - Min( MUR ,RMSe ) ),RMSe ) ) ) )", "obj1": 0.9203703703703704, "obj2": 0.054273524816143524}, {"determining": "( ( CRS * ( Min( ( FirstVNF_Mem + ACS ) ,FirstVNF_CPU_Server ) - ACS ) ) - ( Min( BR ,ACS ) / ARS ) )", "choosing": "Min( ( ( RCSe - DS ) - ( MUC - CS ) ) ,( RRSe * RRSe ) )", "obj1": 0.14629629629629629, "obj2": 0.7639935864807768}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM - Min( RRSe ,RCSe ) ) + ( RMSe * RRSe ) )", "obj1": 0.9185185185185185, "obj2": 0.06502321280396359}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM_Server + ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( RRS ,MDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC - DS ) + ( MUC - Min( MUM ,Max( MUR,RRSe ) ) ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.30925925925925923, "obj2": 0.5852811243221554}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + BR ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.31666666666666665, "obj2": 0.5767749217693653}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MLU + MUC ) - ( MUM + MUC ) )", "obj1": 0.3574074074074074, "obj2": 0.5455119541025331}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 0.4648148148148148, "obj2": 0.45834393523240646}, {"determining": "Max( ( RRS - AMS ),( Max( Max( ( ( MRS * ( Max( FirstVNF_RAM,FirstVNF_CPU ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) + MUC ) ) ,( MUC / ( RMSe + MUR ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6434158292053921}, {"determining": "( ( ( AMS - Const ) + ARS ) / Min( MRS ,ARS ) )", "choosing": "( ( MUC + ( CS * Min( MUR ,RCSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.2759259259259259, "obj2": 0.6306304391501885}, {"determining": "Min( ( ( ( MRS + PN ) * ( MRS - AMS ) ) - PN ) ,Max( AMS,Max( Max( Max( DDR,Max( BR,RRS ) ),Const ),FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Min( RRSe ,DS ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( RCSe / MUM ) )", "obj1": 0.2833333333333333, "obj2": 0.6050427959079633}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5680905011635148}, {"determining": "Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( RRSe * RRSe ) )", "obj1": 0.1388888888888889, "obj2": 0.7676698404890971}, {"determining": "Min( ( FirstVNF_CPU_Server - AMS ) ,( FirstVNF_Mem - FirstVNF_RAM ) )", "choosing": "Min( ( ( MUC - ( MUM - ( Max( Max( ( MLU + MUR ),DS ),RMSe ) * CS ) ) ) - MUM ) ,( RRSe * RRSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6747762690808969}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( MDR - DDR ) ) ) - AMS ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * Max( Min( RRSe ,RCSe ),( MUR - RCSe ) ) ) - ( CS - Max( Max( DS,RCSe ),( MUR * Max( CS,RRSe ) ) ) ) )", "obj1": 0.9944444444444445, "obj2": 0.0014071993880225798}, {"determining": "Max( ( RRS - PN ),( Min( ( FirstVNF_Mem + FirstVNF_CPU_Server ) ,DDR ) + FirstVNF_Mem_Server ) )", "choosing": "( ( MUC - ( RRSe * ( ( MUM * ( RRSe * DS ) ) + ( ( MLU - MUM ) / ( RMSe - ( RRSe - ( MUC * RMSe ) ) ) ) ) ) ) * Max( ( MUC + MUC ),RMSe ) )", "obj1": 0.2351851851851852, "obj2": 0.6591150079285734}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),( ( MLU * RCSe ) / ( MUR / MUR ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.005014517881579416}, {"determining": "Max( ( RRS - AMS ),( Max( Max( ( ( MRS * ( Max( FirstVNF_RAM,FirstVNF_CPU ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) + MUC ) ) ,( MUC / ( RMSe + MUR ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6434158292053921}, {"determining": "Min( ( ( MRS - RRS ) - MDR ) ,( ACS * MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( RCSe * ( RMSe + Max( RRSe,RRSe ) ) ) + MUC ) ) ,( ( RCSe - MUR ) + ( DS / MUC ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5666023831094509}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( RRS ,MDR ) ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUR ) )", "obj1": 0.6759259259259259, "obj2": 0.2877067540627091}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ARS * DDR ) )", "choosing": "Min( ( CS + MUC ) ,( ( MUR - ( ( CS + MUM ) * RRSe ) ) - MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.574235602361357}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) )", "choosing": "( MUC + ( RMSe / ( MUR / DS ) ) )", "obj1": 0.6129629629629629, "obj2": 0.34472776544929046}, {"determining": "( Max( FirstVNF_RAM,CRS ) - ( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( Min( ARS ,FirstVNF_CPU_Server ) * ( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Max( ( RCSe * CS ),( CS - MUM ) )", "obj1": 0.5, "obj2": 0.44815451432563314}, {"determining": "( ( MDR - FirstVNF_CPU ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) + ( Const * ARS ) ) ) ) ) )", "choosing": "Max( ( DS * MUC ),( ( MUC - DS ) - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.043214023378340856}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( ARS * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.24444444444444444, "obj2": 0.6517243338121712}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + MUR ) * ( RRSe - RMSe ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7359861658688495}, {"determining": "Min( ( CRS / ( ARS * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.22962962962962963, "obj2": 0.663780472953121}, {"determining": "( Min( ( Const - CRS ) ,( ( Const * ARS ) * Min( FirstVNF_CPU ,DDR ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( DS * RMSe ),Max( MUM,Min( Min( MUC ,( DS * RMSe ) ) ,Max( RRSe,( Max( Max( ( CS / RCSe ),RMSe ),RRSe ) / ( RRSe - Min( MUM ,( DS / MLU ) ) ) ) ) ) ) )", "obj1": 0.9851851851851852, "obj2": 0.011775392525867671}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3111111111111111, "obj2": 0.583883988675509}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Min( Max( ( MDR + AMS ),FirstVNF_RAM_Server ) ,FirstVNF_CPU_Server ) ,( ( AMS - FirstVNF_RAM_Server ) - FirstVNF_RAM_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( Min( ( Max( ( MLU + RRSe ),( Max( RCSe,MLU ) / RRSe ) ) - Min( ( RCSe / RCSe ) ,RRSe ) ) ,( RRSe + ( MUC + ( MUR + RCSe ) ) ) ),RMSe ) )", "obj1": 0.9777777777777777, "obj2": 0.015520599292138969}, {"determining": "Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( RRSe * RRSe ) )", "obj1": 0.13703703703703704, "obj2": 0.7695839638400434}, {"determining": "Max( ( RRS - PN ),( Max( Max( ( ( MDR + ( MRS - FirstVNF_CPU ) ) - Max( MRS,FirstVNF_Mem_Server ) ),MDR ),DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( RCSe * ( RRSe + Max( RRSe,RRSe ) ) ) + MUC ) ) ,( RMSe + ( DS / MUC ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6543428784198395}, {"determining": "Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUM,DS ) )", "obj1": 0.23703703703703705, "obj2": 0.6570619844752725}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6482996279744971}, {"determining": "Max( ( RRS - PN ),( Max( Max( ( ( MDR + ( MRS - FirstVNF_CPU ) ) - Max( MRS,FirstVNF_Mem_Server ) ),MDR ),DDR ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( RCSe * ( RRSe + Max( RRSe,RRSe ) ) ) + MUC ) ) ,( RMSe + ( DS / MUC ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6545614496165123}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( ( RCSe - MUM ) + MUM ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.560733250984854}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Max( FirstVNF_Mem_Server,MRS ) )", "choosing": "Min( ( ( ( MUR + MLU ) * RMSe ) - ( RMSe * CS ) ) ,( RRSe * RRSe ) )", "obj1": 0.3333333333333333, "obj2": 0.5602373511224719}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - CRS ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.043214023378340856}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( DS * RMSe ),( MUR - MUM ) )", "obj1": 0.9888888888888889, "obj2": 0.008784729465904731}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.3296296296296296, "obj2": 0.5643529685474018}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3111111111111111, "obj2": 0.583883988675509}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( ( CRS / ( ARS * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.22962962962962963, "obj2": 0.663780472953121}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( MUR * DS ) ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.3290182965141497}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + Max( ( FirstVNF_Mem_Server / PN ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( ACS + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) ) ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUR ) )", "obj1": 0.9814814814814815, "obj2": 0.013516413681908066}, {"determining": "( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( ( Min( MRS ,PN ) - FirstVNF_RAM ) - Min( AMS ,PN ) ) ) ) ) )", "choosing": "Min( ( Min( MUC ,DS ) / ( MUC + ( RMSe + ( MUR / RRSe ) ) ) ) ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.6240740740740741, "obj2": 0.3290182965141497}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.9740740740740741, "obj2": 0.01816619264914227}], "5": [{"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( Min( ( PN + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) - ( Max( FirstVNF_Mem_Server,( ACS * BR ) ) + ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( FirstVNF_CPU_Server * BR ) - BR ) ,( MDR - ARS ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( ( CS / DS ) / RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) + ( ( ( MRS + Max( ( MDR * CRS ),BR ) ) * ( FirstVNF_CPU_Server / Const ) ) / ( ( FirstVNF_RAM / CRS ) - Min( ARS ,ARS ) ) ) )", "choosing": "( ( MLU * RCSe ) - ( ( RRSe - Max( MLU,Max( ( MUR * CS ),CS ) ) ) / MUM ) )", "obj1": 0.12407407407407407, "obj2": 0.8402462517709937}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem_Server / MRS ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( ( CS / DS ) / RMSe ) )", "obj1": 0.7277777777777777, "obj2": 0.23496670980003276}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( ( ( AMS - Const ) + ARS ) / Min( MRS ,ARS ) ) ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / Min( MUR ,RCSe ) )", "obj1": 0.7759259259259259, "obj2": 0.10848754658372768}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_RAM + MRS ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR - ( MLU / CS ) ),( ( Min( DS ,DS ) - RMSe ) - MUM ) )", "obj1": 0.8888888888888888, "obj2": 0.07728550833276612}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.2692116407084289}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - RMSe ) ) )", "obj1": 0.7444444444444445, "obj2": 0.12361618149298739}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( MUC ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.4074074074074074, "obj2": 0.49256593423885836}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) )", "choosing": "( ( MUC - ( MUC + ( RMSe / ( MUR / DS ) ) ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.5111111111111111, "obj2": 0.4155207063141622}, {"determining": "( Max( FirstVNF_RAM,PN ) - Max( ( ACS - DDR ),RRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe + ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) )", "obj1": 0.44814814814814813, "obj2": 0.44934678392061667}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.45555555555555555, "obj2": 0.43979017643095025}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - Min( FirstVNF_Mem ,MDR ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUR - CS ) ) ) * RCSe ) ) / MUM ) ) )", "obj1": 0.13148148148148148, "obj2": 0.8274579268110299}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "Min( ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM * ( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.6518518518518519, "obj2": 0.30313849995755665}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "( Max( Max( Min( FirstVNF_Mem ,FirstVNF_CPU_Server ),( RRS / FirstVNF_Mem_Server ) ),( ( Min( MRS ,PN ) - FirstVNF_RAM ) - Min( AMS ,PN ) ) ) + ( Max( ( FirstVNF_Mem - FirstVNF_Mem_Server ),Min( ARS ,FirstVNF_RAM ) ) - ( ( CRS * FirstVNF_Mem ) + Max( DDR,Const ) ) ) )", "choosing": "Max( ( DS * RMSe ),( CS - MUM ) )", "obj1": 0.5444444444444444, "obj2": 0.4127025032561363}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( MUC - DS ) + ( MUC - Min( MUM ,Max( MUR,RRSe ) ) ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.2740740740740741, "obj2": 0.6143782152912188}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUC ) ) ,MUC )", "obj1": 0.3611111111111111, "obj2": 0.5359445929337785}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( ( RRS / FirstVNF_RAM_Server ),Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUC - ( MUC * Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.5592592592592592, "obj2": 0.3662930931956112}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM * ( MUR - Min( MUR ,RMSe ) ) ) + ( MUC / MUM ) ) / ( MUM * ( DS - RMSe ) ) )", "obj1": 0.7518518518518519, "obj2": 0.11974983038520368}, {"determining": "Min( Max( BR,Max( ( ( BR * Max( FirstVNF_Mem,BR ) ) - DDR ),BR ) ) ,( ACS * MDR ) )", "choosing": "Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3055555555555556, "obj2": 0.5954171633365081}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.2611111111111111, "obj2": 0.6311020735856768}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ) / RRS ) ) )", "choosing": "( ( ( MUR + DS ) - Max( CS,MUR ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 0.5981481481481481, "obj2": 0.34223379282877264}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "Max( ( DS * RMSe ),( MUR + DS ) )", "obj1": 0.5555555555555556, "obj2": 0.3961718556409805}, {"determining": "( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUC ) ) ,MUC )", "obj1": 0.9, "obj2": 0.07654750863799326}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.6055555555555555, "obj2": 0.33152327102895507}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM - Min( RRSe ,RMSe ) ) + ( RMSe * RRSe ) )", "obj1": 0.9462962962962963, "obj2": 0.039388860269308296}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.3925925925925926, "obj2": 0.5115954760568916}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * ARS ) ) ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "( Min( ( MUR * DS ) ,( MUR - Min( MUR ,RMSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.6296296296296297, "obj2": 0.32491592599287566}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.3425925925925926, "obj2": 0.554774826516753}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - Max( Max( BR,MRS ),( CRS - MDR ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( MUM - ( CS / DS ) ) ,( Min( Min( MLU ,DS ) ,MLU ) - ( ( MUM - ( Min( ( ( MUM * MLU ) - MUR ) ,( ( MUR / CS ) / RMSe ) ) - ( Max( CS,MUC ) * Min( ( CS * CS ) ,MUR ) ) ) ) - ( Max( MLU,( DS * CS ) ) + MUC ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.3279978297825986}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),Min( PN ,Max( FirstVNF_RAM,FirstVNF_CPU ) ) ) )", "choosing": "( Max( ( ( RMSe - RRSe ) / ( MLU + ( Min( MUM ,Max( CS,( RMSe - MLU ) ) ) + Min( RRSe ,MUM ) ) ) ),RMSe ) * ( MUC - ( MUC * MUM ) ) )", "obj1": 0.9666666666666667, "obj2": 0.0390800855876614}, {"determining": "Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUM,DS ) )", "obj1": 0.21296296296296297, "obj2": 0.6846050004335721}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 0.5833333333333334, "obj2": 0.34956235806242525}, {"determining": "Min( ( ( ( MRS + PN ) * ( MRS - AMS ) ) - PN ) ,Max( AMS,Max( Max( Max( DDR,Max( BR,RRS ) ),Const ),FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Min( RRSe ,DS ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( RCSe / MUM ) )", "obj1": 0.1814814814814815, "obj2": 0.7200579844878136}, {"determining": "Max( ( RRS - AMS ),( CRS + Max( BR,ARS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( Min( MUR ,RCSe ),MLU ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( ( MUR + MUC ) - Max( CS,MUR ) ) ) / ( RMSe + MUR ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6933129621266029}, {"determining": "Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,PN )", "choosing": "Min( ( ( ( RRSe - ( ( ( ( DS * MUR ) * ( RCSe + RCSe ) ) / MUM ) / CS ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.31666666666666665, "obj2": 0.5709264997200265}, {"determining": "Min( ( FirstVNF_CPU_Server - AMS ) ,( FirstVNF_Mem - FirstVNF_RAM ) )", "choosing": "Min( ( ( MUC - ( MUM - ( Max( Max( ( MLU + MUR ),DS ),RMSe ) * CS ) ) ) - MUM ) ,( RRSe * RRSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6747762690808969}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ACS ) ,( Const * ARS ) ) ) / Min( MRS ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC - ( MUC * ( ( ( ( ( RMSe + RRSe ) / MUR ) - MLU ) / RRSe ) - RCSe ) ) ) * ( ( Min( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) ,( ( MUC - MUM ) - ( RMSe * RCSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9722222222222222, "obj2": 0.020217140979418353}, {"determining": "Min( ( PN - Min( Max( ( MRS * MDR ),PN ) ,( FirstVNF_Mem / Max( FirstVNF_CPU,Min( Max( MRS,( MRS * FirstVNF_RAM_Server ) ) ,AMS ) ) ) ) ) ,( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MLU / ( ( MUM / MUR ) - ( MUM + CS ) ) ) + ( MUC / Max( RRSe,( DS / RRSe ) ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.1814814814814815, "obj2": 0.7200579844878136}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( ( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) - MRS ) * ( ( CRS - RRS ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem_Server + DDR ) ) ) ) )", "choosing": "Max( ( DS * RMSe ),( ( MUC + RRSe ) - Min( ( DS - MUC ) ,MUR ) ) )", "obj1": 0.5481481481481482, "obj2": 0.3970958142107516}, {"determining": "Max( Min( ( ( FirstVNF_RAM / PN ) + ( FirstVNF_RAM - DDR ) ) ,Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( RMSe / DS ) ) + ( ( RCSe + MUR ) * ( RRSe - RMSe ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7359861658688495}, {"determining": "Min( ( PN - ( ( MRS + PN ) * ( Min( ( CRS / ( ARS * DDR ) ) ,Min( MRS ,CRS ) ) - AMS ) ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM - RMSe ),CS ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.25925925925925924, "obj2": 0.641229287503714}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.3925925925925926, "obj2": 0.5115954760568916}, {"determining": "( ( ( MDR - Const ) / Min( MDR ,ACS ) ) + Max( Min( PN ,ACS ),FirstVNF_Mem_Server ) )", "choosing": "( Max( MUC,RMSe ) - ( RMSe / RCSe ) )", "obj1": 0.9703703703703703, "obj2": 0.03652975247343645}, {"determining": "( ( ( ( ARS / ( MDR - Max( ( DDR * ( FirstVNF_Mem_Server - FirstVNF_RAM ) ),( FirstVNF_Mem - ( MRS - RRS ) ) ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) - Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( Max( ( MUM - MLU ),( CS + MUR ) ) / ( ( Max( RCSe,CS ) + ( MUM * MUC ) ) * ( DS - ( Min( ( MUR - MUM ) ,CS ) + RMSe ) ) ) )", "obj1": 0.7444444444444445, "obj2": 0.12361618149298739}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( RRS ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR - MUM ),( CS - MUM ) )", "obj1": 0.9166666666666666, "obj2": 0.06758908373664625}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( MRS / Const ) * ( MRS + Max( FirstVNF_Mem,BR ) ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.14444444444444443, "obj2": 0.7616453814941402}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.741894801533086}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + AMS ) )", "choosing": "Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.1574074074074074, "obj2": 0.745473920586785}, {"determining": "Max( ( RRS - AMS ),( Max( Max( ( ( MRS * ( Max( FirstVNF_RAM,FirstVNF_CPU ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),( ( Const + FirstVNF_RAM ) + ( ( ( RRS / FirstVNF_RAM_Server ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ) ) ) + MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) + MUC ) ) ,( ( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) / ( RMSe + MUR ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6933129621266029}, {"determining": "( ( ( ( ACS * MDR ) / Max( AMS,ACS ) ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server / Max( FirstVNF_RAM,CRS ) ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) + ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( RMSe + MLU ) * DS ) ) + ( ( Min( RMSe ,( DS - ( MUR / ( Min( MUR ,MLU ) / MUR ) ) ) ) / RCSe ) / MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM - Min( RRSe ,RCSe ) ) + ( RMSe * RRSe ) )", "obj1": 0.9185185185185185, "obj2": 0.06502321280396359}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM_Server + ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( RRS ,MDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC - DS ) + ( MUC - Min( MUM ,Max( MUR,RRSe ) ) ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.30925925925925923, "obj2": 0.5852811243221554}, {"determining": "( Min( FirstVNF_CPU ,( CRS - MDR ) ) - Min( FirstVNF_CPU ,Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Min( ( CS + MUC ) ,( ( RMSe - RRSe ) - ( ( CS + ( MUM / DS ) ) * RRSe ) ) )", "obj1": 0.4537037037037037, "obj2": 0.4470327736945696}, {"determining": "Max( ( RRS - PN ),( Max( Max( ( ( MRS * ( MRS / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + ( FirstVNF_Mem - MDR ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6678381230504002}, {"determining": "Max( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) ) ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "Min( ( RRSe - MUM ) ,( MUM - ( MUM / DS ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04066129550475484}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + Max( FirstVNF_Mem,BR ) ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1537037037037037, "obj2": 0.7540553773295221}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( ( ( ARS + ( MDR / ( MRS * FirstVNF_Mem ) ) ) / CRS ) / RRS ) / ( FirstVNF_Mem - Max( FirstVNF_RAM,( Max( ( ACS + Const ),ARS ) - CRS ) ) ) ) )", "choosing": "Min( ( CS + ( Min( CS ,Min( RRSe ,( RCSe + Min( ( MUR / CS ) ,Max( MLU,CS ) ) ) ) ) - ( DS + ( MUC / ( MUC / MUC ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5685185185185185, "obj2": 0.3561199727800064}, {"determining": "( ( ( Const + FirstVNF_RAM ) + ( ( ( RRS / Min( ( Max( ACS,FirstVNF_Mem ) - MDR ) ,PN ) ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) + MUC ) ) ,( MUC / ( RMSe + MUR ) ) )", "obj1": 0.6444444444444445, "obj2": 0.3126684400066741}, {"determining": "Min( ( FirstVNF_Mem / MDR ) ,Min( PN ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MLU + MUC ) - ( MUM + ( ( Min( ( ( MUR / RCSe ) * Min( RCSe ,( MUR / RRSe ) ) ) ,MLU ) - ( ( RMSe + Min( RRSe ,( RMSe / RMSe ) ) ) / MUR ) ) / ( Min( RCSe ,( RRSe * ( RRSe + MUC ) ) ) + ( MUR - DS ) ) ) ) )", "obj1": 0.3574074074074074, "obj2": 0.5455119541025331}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( DS * RMSe ),( MUR - MUM ) )", "obj1": 0.9888888888888889, "obj2": 0.008784729465904731}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3111111111111111, "obj2": 0.583883988675509}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( MRS / FirstVNF_CPU_Server ) / ( FirstVNF_Mem - Max( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),MDR ),( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - MRS ) ) ) ) )", "choosing": "( ( ( RRSe * MLU ) - ( RCSe / RMSe ) ) - ( CS / MLU ) )", "obj1": 0.9203703703703704, "obj2": 0.054273524816143524}, {"determining": "( ( ( Const + FirstVNF_RAM ) + ( ( ( RRS / Min( ( Max( ACS,FirstVNF_Mem ) - MDR ) ,PN ) ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( RCSe * ( RRSe + Max( RRSe,RRSe ) ) ) + MUC ) ) ,( RMSe + ( DS / MUC ) ) )", "obj1": 0.6444444444444445, "obj2": 0.3126684400066741}, {"determining": "( ( Min( CRS ,RRS ) + ( Const + FirstVNF_Mem ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "Min( ( ( RRSe + MLU ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) + MUC ) ) ,( Min( ( MUM / DS ) ,MUM ) * ( MLU * ( RCSe - MUC ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.3099608957967886}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ),( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.6277777777777778, "obj2": 0.32580528279843424}, {"determining": "Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( RRSe * RRSe ) )", "obj1": 0.1388888888888889, "obj2": 0.7676698404890971}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5602798579096261}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ACS * MDR ) )", "choosing": "( ( MLU + MUC ) - ( MUM + MUC ) )", "obj1": 0.3592592592592593, "obj2": 0.5447565396703511}, {"determining": "( ( MDR - FirstVNF_CPU ) / Max( ( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ),MDR ) )", "choosing": "( ( RRSe * RCSe ) - ( RCSe / DS ) )", "obj1": 0.9296296296296296, "obj2": 0.04784847131341581}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Min( ( Min( ARS ,FirstVNF_CPU_Server ) * ( AMS / FirstVNF_Mem ) ) ,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( Min( RRSe ,RCSe ) + ( MUR - RCSe ) ) ) - ( RCSe * CS ) )", "obj1": 0.9907407407407407, "obj2": 0.002219369453937033}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + Max( FirstVNF_Mem_Server,( RRS + ( CRS - FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Min( ( Min( ( CS + MUR ) ,RMSe ) - MUR ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + Min( RCSe ,( RRSe - ( ( MUM / DS ) / ( CS + ( ( ( CS + MUR ) - ( MLU / MUC ) ) - ( Min( RRSe ,RRSe ) * ( MLU - MUC ) ) ) ) ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7582844612424846}, {"determining": "( Min( ( Const - CRS ) ,( ( Const * ARS ) * Min( FirstVNF_CPU ,DDR ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( DS * RMSe ),Max( MUM,Min( Min( MUC ,( DS * RMSe ) ) ,Max( RRSe,( Max( Max( ( CS / RCSe ),RMSe ),RRSe ) / ( RRSe - Min( MUM ,( DS / MLU ) ) ) ) ) ) ) )", "obj1": 0.9851851851851852, "obj2": 0.011775392525867671}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.1685185185185185, "obj2": 0.7383615976754833}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( MRS ,CRS ) )", "choosing": "( ( MLU + MUC ) - ( MUM + MUC ) )", "obj1": 0.3574074074074074, "obj2": 0.5455119541025331}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( DS * RMSe ),Max( MUM,MUM ) )", "obj1": 0.9814814814814815, "obj2": 0.013269378656244068}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.5648148148148148, "obj2": 0.35729501962871996}, {"determining": "( Max( FirstVNF_RAM,Min( CRS ,( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - ( AMS * Const ) ) )", "choosing": "Max( Min( MUR ,MUM ),( RCSe + MLU ) )", "obj1": 0.9166666666666666, "obj2": 0.06758908373664625}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - ( RRS / FirstVNF_Mem ) ) )", "choosing": "Max( ( MUR - MUM ),Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.924074074074074, "obj2": 0.05045850256768225}, {"determining": "Min( ( CRS / ( ARS * DDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( MUR - ( ( ( MUM * MUR ) + ( MUC / MUM ) ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.23333333333333334, "obj2": 0.659551149145049}, {"determining": "Min( Max( MRS,( MDR - BR ) ) ,( ACS * MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RCSe,Max( ( MLU - MUR ),MLU ) ) ) * RCSe ) + MUC ) ) ,( MUC / ( RMSe + MUR ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6434158292053921}, {"determining": "Min( ( ( MRS - RRS ) - MDR ) ,( ACS * MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( RCSe * ( RMSe + Max( RRSe,RRSe ) ) ) + MUC ) ) ,( ( RCSe - MUR ) + ( DS / MUC ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5666023831094509}, {"determining": "Min( ( PN / ARS ) ,( FirstVNF_Mem_Server / ( MDR / ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUM,( RMSe / RCSe ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6519356198703167}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 0.5777777777777777, "obj2": 0.3522008567092044}, {"determining": "( Max( ( ( MRS + FirstVNF_Mem ) / Max( BR,MDR ) ),Max( MRS,PN ) ) + ( ( ( FirstVNF_RAM_Server / Const ) * ( AMS + FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + Min( ( Min( MDR ,ACS ) - FirstVNF_RAM_Server ) ,RRS ) ) ) ) )", "choosing": "( ( RRSe / ( MUC / DS ) ) + ( ( Min( ( ( RMSe - RCSe ) - ( MLU * DS ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + RRSe ) / Min( ( MUM * MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.15, "obj2": 0.7544762190795297}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( Min( Min( ( CS / CS ) ,( MUR + CS ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + MUR ) * ( RRSe - RMSe ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7359861658688495}, {"determining": "Min( ( ( FirstVNF_Mem - MDR ) / ( Min( ( Min( ( AMS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ,( Max( DDR,MRS ) + ACS ) ) + BR ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( MLU + RMSe ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5555689502891942}, {"determining": "Max( ( RRS - AMS ),( Max( Max( ( ( MRS * ( Max( FirstVNF_RAM,FirstVNF_CPU ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + MDR ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.1685185185185185, "obj2": 0.7383615976754833}, {"determining": "Max( ( RRS - PN ),( Max( Max( ( ( MRS * ( MRS / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) + ( FirstVNF_Mem - MDR ) ) )", "choosing": "Min( ( CS + MUC ) ,( ( MUR - ( ( CS + MUM ) * RRSe ) ) - MUM ) )", "obj1": 0.22777777777777777, "obj2": 0.6678381230504002}, {"determining": "Min( ( ( Min( DDR ,ARS ) / ( CRS + MRS ) ) / ( RRS + AMS ) ) ,Min( ( ACS + ( PN * MDR ) ) ,Max( ( FirstVNF_RAM_Server / ACS ),FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR * RRSe ) ,( ( RMSe * RCSe ) - ( ( MLU + MUR ) - ( RMSe * Max( MUC,MUR ) ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6747762690808969}, {"determining": "Min( ( PN * ( FirstVNF_RAM_Server * CRS ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_CPU / FirstVNF_Mem_Server ) ) )", "choosing": "( ( MLU * Min( CS ,MLU ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7680837969504981}, {"determining": "Max( ( ( PN * FirstVNF_RAM ) - ( FirstVNF_CPU - FirstVNF_CPU_Server ) ),( Const - Max( RRS,FirstVNF_RAM_Server ) ) )", "choosing": "( ( Min( MUR ,Min( CS ,DS ) ) - RMSe ) / ( RCSe / MUC ) )", "obj1": 0.13518518518518519, "obj2": 0.7725854555181106}, {"determining": "( Min( MRS ,ARS ) * ( FirstVNF_RAM - ACS ) )", "choosing": "( ( MLU + DS ) / Max( CS,RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.049037646588535495}, {"determining": "Min( ( CRS / ( ARS * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.22962962962962963, "obj2": 0.663780472953121}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( MDR - Min( ( Max( ( Min( ( BR + CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ) / MRS ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( ( PN * CRS ) / FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUC,( RMSe + ( ( Max( RMSe,MUC ) + MUC ) * ( ( ( Max( MLU,MUC ) + MUM ) * MUM ) / ( RCSe / MUR ) ) ) ) ) * ( DS - ( MUC * MUM ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6501642433422873}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( ( MUR - ( ( CS + MUM ) * RRSe ) ) - MUM ) )", "obj1": 0.32222222222222224, "obj2": 0.5670813508526071}], "6": [{"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM - Min( RRSe ,RCSe ) ) + ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( Min( ( PN + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) - ( Max( FirstVNF_Mem_Server,( ACS * BR ) ) + ( RRS / FirstVNF_Mem ) ) ) ) )", "choosing": "Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_CPU_Server / ACS ) + ( ( ( MRS + Max( ( MDR * CRS ),BR ) ) * ( FirstVNF_CPU_Server / Const ) ) / ( ( FirstVNF_RAM / CRS ) - Min( ARS ,ARS ) ) ) )", "choosing": "( ( MLU * RCSe ) - ( ( RRSe - Max( MLU,Max( ( MUR * CS ),CS ) ) ) / MUM ) )", "obj1": 0.12407407407407407, "obj2": 0.8402462517709937}, {"determining": "( Max( Max( ( ( MRS * ( MRS / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ),DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12957540400157247}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Min( ( Min( ARS ,FirstVNF_CPU_Server ) * ( AMS / FirstVNF_Mem ) ) ,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( MUM * MUR ) ) - ( RCSe * CS ) )", "obj1": 0.7703703703703704, "obj2": 0.10536409802694593}, {"determining": "( Max( FirstVNF_RAM,( FirstVNF_RAM + MRS ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR - ( MLU / CS ) ),( ( Min( DS ,DS ) - RMSe ) - MUM ) )", "obj1": 0.8888888888888888, "obj2": 0.07728550833276612}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.2692116407084289}, {"determining": "( ( ( ( ( RRS + ACS ) / DDR ) - Max( FirstVNF_RAM,Min( ( ARS / FirstVNF_CPU_Server ) ,Min( FirstVNF_CPU ,FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) * ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RRSe ) ) - Min( RMSe ,Max( RRSe,Max( ( RMSe / ( ( DS * ( CS / RMSe ) ) / DS ) ),Max( ( RMSe - ( RCSe - MUR ) ),( ( Min( MUC ,CS ) - DS ) + Max( ( DS * DS ),( DS + RMSe ) ) ) ) ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.2692116407084289}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MUR + Max( RCSe,Max( ( MLU - RRSe ),CS ) ) ) * DS ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.4166666666666667, "obj2": 0.4895715722315096}, {"determining": "( Max( FirstVNF_RAM,PN ) - Max( ( ACS - DDR ),RRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe + ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) )", "obj1": 0.44814814814814813, "obj2": 0.44934678392061667}, {"determining": "( Max( ( ( MRS + FirstVNF_Mem ) / Max( BR,MDR ) ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + Max( FirstVNF_Mem,BR ) ) ) / ( ( FirstVNF_RAM - DDR ) - ( ARS + Min( ( Min( MDR ,ACS ) - FirstVNF_RAM_Server ) ,RRS ) ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + ( Min( DS ,DS ) - RMSe ) ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MLU * DS ) - ( RMSe - RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + RRSe ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.42672423812404986}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - Min( FirstVNF_Mem ,MDR ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUR - CS ) ) ) * RCSe ) ) / MUM ) ) )", "obj1": 0.13148148148148148, "obj2": 0.8274579268110299}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + Max( FirstVNF_Mem,( FirstVNF_Mem - MDR ) ) ) ) / ( ( AMS + ( RRS / DDR ) ) + ACS ) ) )", "choosing": "( ( RRSe - ( MUC * MUM ) ) * Max( ( MUC + Min( ( MUR - ( ( ( CS + RRSe ) / ( DS * MLU ) ) - RMSe ) ) ,( RCSe - MUM ) ) ),RMSe ) )", "obj1": 0.13333333333333333, "obj2": 0.7709226266806772}, {"determining": "Min( ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM * ( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.5407407407407407, "obj2": 0.4039540090376205}, {"determining": "Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( RRSe * RRSe ) )", "obj1": 0.20555555555555555, "obj2": 0.6908531476310177}, {"determining": "( ( Min( CRS ,RRS ) + ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "Min( ( ( RRSe + MLU ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),( RRSe * MLU ) ) ) ) * RCSe ) + MUC ) ) ,( Min( ( MUM / DS ) ,MUM ) * ( MLU * ( RCSe - MUC ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3821698741591372}, {"determining": "Min( ( Min( AMS ,RRS ) - FirstVNF_CPU ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUC + ( MUM * MUC ) ) * Max( Max( RRSe,MLU ),RCSe ) )", "obj1": 0.387037037037037, "obj2": 0.5105359840124993}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( MUC ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.4074074074074074, "obj2": 0.49256593423885836}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - Max( MRS,ARS ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( CS + ( Min( CS ,Min( RRSe ,( RCSe + ( ( CS / CS ) * MUR ) ) ) ) - ( DS + ( MUC / ( ( MUR / CS ) - DS ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5092592592592593, "obj2": 0.40754829907698614}, {"determining": "( ( ( FirstVNF_Mem * MRS ) - ( ( ACS - CRS ) - Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( FirstVNF_RAM,( Max( FirstVNF_CPU,( MDR + FirstVNF_RAM_Server ) ) + Const ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,RMSe ) / MUC ) / DS ) / RCSe ) - CS ) / RRSe ) - MUM )", "obj1": 0.27037037037037037, "obj2": 0.6069621365481602}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server / ACS ) ) * Max( Min( ARS ,( ARS * Min( PN ,( BR / MDR ) ) ) ),( ( FirstVNF_Mem_Server - DDR ) + RRS ) ) )", "choosing": "Min( ( ( CS + MUR ) + ( ( DS + ( CS * ( ( ( RMSe * MUC ) * MLU ) - RRSe ) ) ) - ( ( DS * DS ) - Min( MUR ,MLU ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5537037037037037, "obj2": 0.3633843540290229}, {"determining": "( CRS * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( MUM * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( CS ,DS ),RMSe ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.29881327314321804}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( ( MDR * Max( BR,FirstVNF_CPU ) ),( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - MRS ) / ( MRS / AMS ) ) - CRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe + MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( MUM ,( RMSe / RCSe ) ),( RMSe + MUC ) ) ) ) )", "obj1": 0.5907407407407408, "obj2": 0.33425590974565134}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( MUR - ( RCSe * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.673433892907692}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( Max( PN,FirstVNF_Mem_Server ) + DDR ) ) ) - AMS ) ) * MDR ) )", "choosing": "Min( ( Min( ( MUR + DS ) ,Max( DS,MUR ) ) / ( MUM - Min( RMSe ,Min( RRSe ,( ( RCSe / RMSe ) - RCSe ) ) ) ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4387207157421171}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( RRSe,( DS / RRSe ) ) ) + Max( ( ( ( MLU - MLU ) + MUC ) + MUM ),DS ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.36666666666666664, "obj2": 0.535526334742873}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.30668642235754867}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.2611111111111111, "obj2": 0.6311020735856768}, {"determining": "Min( ( AMS - MDR ) ,( Min( DDR ,FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( ( MLU * ( DS / Max( Max( MUC,DS ),( RRSe / DS ) ) ) ) - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + MLU ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.5977572223522433}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( RCSe * ( RRSe + Max( ( MUC - ( MUC * MUM ) ),RRSe ) ) ) + MUC ) ) ,( RMSe + ( DS / MUC ) ) )", "obj1": 0.5777777777777777, "obj2": 0.3462977285467861}, {"determining": "Min( Max( MRS,( MDR - BR ) ) ,( ACS * MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RCSe,Max( ( MLU - MUR ),MLU ) ) ) * RCSe ) + MUC ) ) ,( MUC / ( RMSe + MUR ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6434158292053921}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,Min( Max( FirstVNF_RAM_Server,ACS ) ,( Const * ARS ) ) ) / Min( MRS ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC - ( MUC * ( ( ( ( ( RMSe + RRSe ) / MUR ) - MLU ) / RRSe ) - RCSe ) ) ) * ( ( Min( ( Min( MUM ,MUM ) + ( CS + RMSe ) ) ,( ( MUC - MUM ) - ( RMSe * RCSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9722222222222222, "obj2": 0.020217140979418353}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( CS + MUC ) ,( ( MUR - ( ( CS + MUM ) * RRSe ) ) - MUM ) )", "obj1": 0.7462962962962963, "obj2": 0.11157439385508362}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - RMSe ) ) )", "obj1": 0.7444444444444445, "obj2": 0.12361618149298739}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.7592592592592593, "obj2": 0.10750292405128344}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( RRS + Max( FirstVNF_Mem,( Max( DDR,FirstVNF_RAM ) / Const ) ) ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + ( ( MUR - CS ) - ( RCSe + CS ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "( ( ( FirstVNF_CPU_Server * FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( ( ( ARS + ( MDR / ( MRS * FirstVNF_Mem ) ) ) / CRS ) / RRS ) / ( FirstVNF_Mem - Max( FirstVNF_RAM,( Max( ( ACS + Const ),ARS ) - CRS ) ) ) ) )", "choosing": "Min( ( CS + ( Min( CS ,Min( RRSe ,( RCSe + Min( ( MUR / CS ) ,Max( MLU,CS ) ) ) ) ) - ( DS + ( MUC / ( MUC / MUC ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5092592592592593, "obj2": 0.40754829907698614}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( Min( MUR ,RCSe ),MLU ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( ( MUR + MUC ) - Max( CS,MUR ) ) ) / ( RMSe + MUR ) ) )", "obj1": 0.9537037037037037, "obj2": 0.030524603352081854}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.45555555555555555, "obj2": 0.43979017643095025}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( RMSe / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.7275729420659572}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( Min( ( Min( FirstVNF_RAM ,Const ) + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) - ( ( FirstVNF_Mem_Server * FirstVNF_CPU_Server ) + ( ( MRS * ( ( CRS - RRS ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( DS - ( RCSe / MUM ) ) * Max( ( MLU + MUC ),Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.5475025265396172}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "( ( ( Min( RRS ,FirstVNF_Mem ) / Max( AMS,ACS ) ) + Min( ( Const - ( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ACS / Min( BR ,ACS ) ) ) ) ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / Max( BR,MDR ) ) ) )", "choosing": "( ( ( ( MLU + RMSe ) * Min( Min( MUR ,DS ) ,( ( MLU - MUR ) * CS ) ) ) / RMSe ) + ( ( Min( RMSe ,MUM ) / RCSe ) / MUM ) )", "obj1": 0.6462962962962963, "obj2": 0.3044077831691167}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUC ) ) ,MUC )", "obj1": 0.9, "obj2": 0.07654750863799326}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * ARS ) ) ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "( Min( ( MUR * DS ) ,( MUR - Min( MUR ,RMSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.6296296296296297, "obj2": 0.32491592599287566}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.6055555555555555, "obj2": 0.33152327102895507}, {"determining": "Min( ( PN - ( MDR * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + AMS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Min( DS ,DS ) - RMSe ) ) - ( ( Min( ( ( MLU * DS ) - ( RMSe - RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + RRSe ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.725925925925926, "obj2": 0.12412849965780477}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC - ( MUM - ( Max( Max( RCSe,DS ),RMSe ) * RMSe ) ) ) - MUM ) ,( RRSe * RRSe ) )", "obj1": 0.9018518518518519, "obj2": 0.06693742938775289}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "Min( ( PN - ( ( ( RRS / ( AMS - FirstVNF_Mem_Server ) ) / MRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * ( Max( ( RMSe * RMSe ),CS ) + DS ) ) ) ,( MUR / CS ) )", "obj1": 0.25925925925925924, "obj2": 0.6320183757922324}, {"determining": "Min( ( ( ( MRS + PN ) * ( MRS - AMS ) ) - PN ) ,Max( AMS,Max( Max( Max( DDR,Max( BR,RRS ) ),Const ),FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Min( RRSe ,DS ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( RCSe / MUM ) )", "obj1": 0.1814814814814815, "obj2": 0.7200579844878136}, {"determining": "Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUR / Max( RRSe,( DS / RRSe ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6698520182775202}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( Max( BR,MRS ) * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Max( ( MUR - MUM ),( Max( Max( RCSe,DS ),RMSe ) - MUM ) )", "obj1": 0.912962962962963, "obj2": 0.05780841076070142}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.9092592592592592, "obj2": 0.0634147330416205}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM - Min( RRSe ,RMSe ) ) + ( RMSe * RRSe ) )", "obj1": 0.9462962962962963, "obj2": 0.039388860269308296}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM_Server + ( Min( ( Max( BR,ACS ) + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( FirstVNF_RAM + Min( RRS ,MDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC - DS ) + ( MUC - Min( MUM ,Max( MUR,RRSe ) ) ) ) - CS ) ,( RCSe - RCSe ) )", "obj1": 0.3037037037037037, "obj2": 0.5872621995191858}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * Min( MDR ,AMS ) )", "choosing": "Min( ( ( ( CS + MUM ) * ( MLU * MLU ) ) - MUR ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.5648148148148148, "obj2": 0.3570503615176081}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( BR * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.3148148148148148, "obj2": 0.5780678473522322}, {"determining": "Min( ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUM * ( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.6518518518518519, "obj2": 0.30313849995755665}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7348733355027899}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.741894801533086}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + AMS ) )", "choosing": "Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.1574074074074074, "obj2": 0.745473920586785}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.23333333333333334, "obj2": 0.6594401842454871}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( MUC ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.9537037037037037, "obj2": 0.030524603352081854}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( MDR - Min( ( Max( ( Min( ( BR + CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ) / MRS ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( ( PN * CRS ) / FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUC,( RMSe + ( ( Max( RMSe,MUC ) + MUC ) * ( ( ( Max( MLU,MUC ) + MUM ) * MUM ) / ( RCSe / MUR ) ) ) ) ) * ( DS - ( MUC * MUM ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6501642433422873}, {"determining": "( ( ( ( ACS * MDR ) / Max( AMS,ACS ) ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) )", "choosing": "( ( RMSe / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,RMSe ) / RCSe ) / MUM ) )", "obj1": 0.1259259259259259, "obj2": 0.8283735767678471}, {"determining": "Min( ( PN - Min( Max( ( MRS * MDR ),PN ) ,( FirstVNF_Mem / Max( FirstVNF_CPU,Min( Max( MRS,( MRS * FirstVNF_RAM_Server ) ) ,AMS ) ) ) ) ) ,( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MLU / ( ( MUM / MUR ) - ( MUM + CS ) ) ) + ( MUC / Max( RRSe,( DS / RRSe ) ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.1814814814814815, "obj2": 0.7200579844878136}, {"determining": "Min( ( ( ( Min( RRS ,FirstVNF_Mem ) / Max( AMS,ACS ) ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( Min( RMSe ,MUM ),( RMSe + MUR ) ) )", "obj1": 0.24074074074074073, "obj2": 0.6549944239006559}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( ( FirstVNF_CPU_Server * ACS ) / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( MUM,RMSe ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.353456402508214}, {"determining": "Max( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) ) ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "Min( ( RRSe - MUM ) ,( MUM - ( MUM / DS ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04066129550475484}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) ) )", "choosing": "Min( ( CS + ( Min( CS ,Min( RRSe ,( RMSe + ( ( CS / CS ) * MUR ) ) ) ) - ( DS + ( MUC / ( ( MUR / CS ) - DS ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.6111111111111112, "obj2": 0.3314250819975621}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + Max( FirstVNF_Mem,BR ) ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) )", "obj1": 0.1537037037037037, "obj2": 0.7540553773295221}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Min( ( Min( ARS ,FirstVNF_CPU_Server ) * ( AMS / FirstVNF_Mem ) ) ,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( Min( RRSe ,RCSe ) + ( MUR - RCSe ) ) ) - ( RCSe * CS ) )", "obj1": 0.9907407407407407, "obj2": 0.002219369453937033}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUC ) ) ,MUC )", "obj1": 0.3611111111111111, "obj2": 0.5359445929337785}, {"determining": "Min( ( ( FirstVNF_Mem - MDR ) / ( Min( ( Min( ( AMS * ( FirstVNF_Mem / FirstVNF_RAM ) ) ,( Max( DDR,MRS ) + ACS ) ) + BR ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( MLU + RMSe ) ,( RCSe - MUM ) )", "obj1": 0.3388888888888889, "obj2": 0.5555689502891942}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( MRS / FirstVNF_CPU_Server ) / ( FirstVNF_Mem - Max( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),MDR ),( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - MRS ) ) ) ) )", "choosing": "( ( ( RRSe * MLU ) - ( RCSe / RMSe ) ) - ( CS / MLU ) )", "obj1": 0.9203703703703704, "obj2": 0.054273524816143524}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ),( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.6277777777777778, "obj2": 0.32580528279843424}, {"determining": "Min( ( CRS / ( ARS * DDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( MUR - ( ( ( MUM * MUR ) + ( MUC / MUM ) ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.22962962962962963, "obj2": 0.6617787552260371}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( MRS * ( ( RRS - ARS ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ) ) - ( CRS + MDR ) ) ) )", "choosing": "Max( ( Min( DS ,( ( DS - Max( ( MUM - DS ),CS ) ) * MUR ) ) * ( MUM * ( DS - RMSe ) ) ),( ( MUC + RRSe ) - ( MUM + MUC ) ) )", "obj1": 0.3333333333333333, "obj2": 0.559756675181088}, {"determining": "Min( ( FirstVNF_Mem / MDR ) ,Min( PN ,( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MLU + MUC ) - ( MUM + ( ( Min( ( ( MUR / RCSe ) * Min( RCSe ,( MUR / RRSe ) ) ) ,MLU ) - ( ( RMSe + Min( RRSe ,( RMSe / RMSe ) ) ) / MUR ) ) / ( Min( RCSe ,( RRSe * ( RRSe + MUC ) ) ) + ( MUR - DS ) ) ) ) )", "obj1": 0.3574074074074074, "obj2": 0.5455119541025331}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ACS * MDR ) )", "choosing": "( ( MLU + MUC ) - ( MUM + MUC ) )", "obj1": 0.3592592592592593, "obj2": 0.5447565396703511}, {"determining": "Min( ( ( FirstVNF_RAM_Server + FirstVNF_Mem ) / ( FirstVNF_Mem - FirstVNF_Mem ) ) ,PN )", "choosing": "Min( ( ( ( RRSe - ( ( ( ( DS * MUR ) * ( RCSe + RCSe ) ) / MUM ) / CS ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.31666666666666665, "obj2": 0.5709264997200265}, {"determining": "( Min( FirstVNF_CPU ,( CRS - MDR ) ) - Min( FirstVNF_CPU ,Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Min( ( CS + MUC ) ,( ( RMSe - RRSe ) - ( ( CS + ( MUM / DS ) ) * RRSe ) ) )", "obj1": 0.4537037037037037, "obj2": 0.4470327736945696}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3111111111111111, "obj2": 0.583883988675509}, {"determining": "Min( ( CRS / ( ARS * DDR ) ) ,( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) ) ) ) )", "choosing": "Min( ( MUR - ( ( ( ( MUM / DS ) * MUR ) + ( MUC / MUM ) ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.9333333333333333, "obj2": 0.0431208308366129}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.1685185185185185, "obj2": 0.7383615976754833}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / Min( RRS ,Min( AMS ,AMS ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( MUM - ( MUM / Max( MUM,MUR ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.3279978297825986}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( Max( FirstVNF_RAM,( CRS - Max( MRS,ARS ) ) ) - FirstVNF_Mem ) / ( Max( BR,( CRS * MDR ) ) / RRS ) ) )", "choosing": "Min( ( MUR - Min( ( RRSe - MUM ) ,RMSe ) ) ,( MUM - RCSe ) )", "obj1": 0.5685185185185185, "obj2": 0.3537681753129512}, {"determining": "Min( Max( Min( Min( Min( ( CRS + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem * ACS ) ) ,BR ),BR ) ,( ACS * MDR ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUC - ( Max( ( CS + MUR ),( ( ( Min( MLU ,RCSe ) / RRSe ) / MLU ) - ( CS / RRSe ) ) ) + MUR ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7671089425060797}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.3425925925925926, "obj2": 0.554774826516753}, {"determining": "( Min( ( ( FirstVNF_CPU + ( FirstVNF_RAM_Server - DDR ) ) * ( Const * ARS ) ) ,( Max( MRS,AMS ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( CRS * ( FirstVNF_Mem_Server - FirstVNF_Mem ) ) ) )", "choosing": "Max( Max( ( MUC * RRSe ),MUM ),( DS * RMSe ) )", "obj1": 0.9851851851851852, "obj2": 0.01071059026830124}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( ( ( ( FirstVNF_Mem_Server + PN ) - Const ) + ARS ) / Min( MRS ,ARS ) ) ) ) )", "choosing": "( ( ( MUM * MUR ) + ( ( RMSe / ( ( MLU + RMSe ) * DS ) ) / MUM ) ) / Min( MUR ,RCSe ) )", "obj1": 0.7240740740740741, "obj2": 0.12636173919551266}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5602798579096261}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( ( MRS * ( Max( FirstVNF_RAM,FirstVNF_CPU ) / MRS ) ) * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "Max( ( DS * RMSe ),( ( RCSe - RMSe ) / ( RCSe / DS ) ) )", "obj1": 0.9888888888888889, "obj2": 0.00878472946590473}, {"determining": "Min( PN ,( Max( MRS,MRS ) - MDR ) )", "choosing": "Min( ( MUR - ( ( ( MUM * MUR ) + ( MUC / MUM ) ) * RRSe ) ) ,( RMSe / ( Max( ( Max( ( Min( RRSe ,MUM ) - MLU ),( MUR - ( CS - MLU ) ) ) * ( RRSe + ( Max( MUC,RRSe ) * RRSe ) ) ),( ( Max( ( RRSe / MUR ),( MLU - DS ) ) - RMSe ) / ( MUC * Max( MUR,( MUM * MUM ) ) ) ) ) / MUC ) ) )", "obj1": 0.32592592592592595, "obj2": 0.5631932386499616}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( MRS ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9814814814814815, "obj2": 0.012463315518195019}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( ( ( CS + MUM ) * RRSe ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.15, "obj2": 0.7542673545478796}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - Max( Max( BR,MRS ),( CRS - MDR ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( MUM - ( CS / DS ) ) ,( Min( Min( MLU ,DS ) ,MLU ) - ( ( MUM - ( Min( ( ( MUM * MLU ) - MUR ) ,( ( MUR / CS ) / RMSe ) ) - ( Max( CS,MUC ) * Min( ( CS * CS ) ,MUR ) ) ) ) - ( Max( MLU,( DS * CS ) ) + MUC ) ) ) )", "obj1": 0.6185185185185185, "obj2": 0.3279978297825986}], "7": [{"determining": "( ( ( FirstVNF_CPU_Server * ACS ) * ( DDR - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem - Max( Max( BR,MRS ),( CRS - MDR ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( ( Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) ) + MUC ) - ( CS / DS ) ) ,( Min( Min( MLU ,DS ) ,MLU ) - ( ( MUM - ( Min( ( ( MUM * MLU ) - MUR ) ,( ( MUR / CS ) / RMSe ) ) - ( Max( CS,MUC ) * Min( ( CS * CS ) ,MUR ) ) ) ) - ( Max( MLU,( DS * CS ) ) + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM - Min( RRSe ,RCSe ) ) + ( RMSe * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( Max( ARS,ARS ) / ( ACS * FirstVNF_RAM ) ) * ( ( FirstVNF_Mem + FirstVNF_CPU ) / ( ( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * Min( MRS ,FirstVNF_CPU ) ) * MDR ) ) ) / ( Max( Min( Min( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - Min( FirstVNF_Mem ,MDR ) ) ) ,CRS ),BR ) + Min( ( ( AMS / Const ) - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( Max( ( DS * DS ),( MLU + RMSe ) ) / ( ( RMSe + MLU ) * DS ) ) + ( ( Min( RMSe ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUM * MUR ) ) ) * MUM ) ) / MUM ) ) )", "obj1": 0.11851851851851852, "obj2": 0.84437543992647}, {"determining": "( ACS - ( ( ( ACS / Const ) + FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16122431568020215}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( RRSe,( DS / RRSe ) ) ) + Max( ( ( ( MLU - MLU ) + MUC ) + MUM ),DS ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.662962962962963, "obj2": 0.26408076906716466}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) * RRSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.812962962962963, "obj2": 0.07983812244603004}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MUR + Max( RCSe,Max( ( MLU - RRSe ),CS ) ) ) * DS ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.4166666666666667, "obj2": 0.4895715722315096}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( ( ( ( FirstVNF_Mem_Server + PN ) - Const ) + ARS ) / Min( MRS ,ARS ) ) ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223818039777231}, {"determining": "( Max( FirstVNF_RAM,PN ) - Max( ( ACS - DDR ),RRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe + ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) )", "obj1": 0.44814814814814813, "obj2": 0.44934678392061667}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC - ( MUM - ( Max( Max( RCSe,DS ),RMSe ) * RMSe ) ) ) - MUM ) ,( RRSe * RRSe ) )", "obj1": 0.8981481481481481, "obj2": 0.0710523724998237}, {"determining": "( ( Max( ( ( MRS * ( Max( FirstVNF_Mem_Server,( FirstVNF_Mem_Server * ARS ) ) / MRS ) ) * ( CRS * FirstVNF_RAM_Server ) ),MDR ) + DDR ) - ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( ( ( Min( DS ,MUR ) / CS ) / MUM ) * RRSe ) - MUR ) ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12951102437362483}, {"determining": "( Max( FirstVNF_RAM,( AMS * ( RRS / ARS ) ) ) - ( Max( FirstVNF_RAM_Server,Min( Const ,MDR ) ) - ARS ) )", "choosing": "Min( ( Max( ( MUR - MUC ),( ( Min( DS ,( MUR * Min( MUM ,DS ) ) ) - RMSe ) - MUM ) ) - CS ) ,( RRSe / Max( MUR,Min( ( RMSe * DS ) ,RRSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.39294464159361087}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.48703703703703705, "obj2": 0.4082469941781716}, {"determining": "( ( ( Max( ARS,ARS ) / ( ACS * FirstVNF_RAM ) ) * ( ( ARS + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( ( DS - RMSe ) + RMSe ) * DS ) ) + ( ( Min( ( RMSe / ( ( DS * ( CS / RMSe ) ) / DS ) ) ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUC - CS ) ) ) * RCSe ) ) / MUM ) ) )", "obj1": 0.12962962962962962, "obj2": 0.8121215108419074}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( ( FirstVNF_CPU_Server - MDR ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( RCSe * ( RRSe + Max( ( ( RRSe + MUC ) - ( MUC * MUM ) ),RRSe ) ) ) + MUC ) ) ,( RMSe + ( DS / MUC ) ) )", "obj1": 0.6518518518518519, "obj2": 0.2982529542995043}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + Max( FirstVNF_Mem,( FirstVNF_Mem - MDR ) ) ) ) / ( ( AMS + ( RRS / DDR ) ) + ACS ) ) )", "choosing": "( ( RRSe - ( MUC * MUM ) ) * Max( ( MUC + Min( ( MUR - ( ( ( CS + RRSe ) / ( DS * MLU ) ) - RMSe ) ) ,( RCSe - MUM ) ) ),RMSe ) )", "obj1": 0.13333333333333333, "obj2": 0.7709226266806772}, {"determining": "( ( ( FirstVNF_Mem * MRS ) - ( ( ACS - CRS ) - Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( FirstVNF_RAM,( Max( FirstVNF_CPU,( MDR + FirstVNF_RAM_Server ) ) + Const ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,RMSe ) / MUC ) / DS ) / RCSe ) - CS ) / RRSe ) - MUM )", "obj1": 0.27037037037037037, "obj2": 0.6069621365481602}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server / ACS ) ) * Max( Min( ARS ,( ARS * Min( PN ,( BR / MDR ) ) ) ),( ( FirstVNF_Mem_Server - DDR ) + RRS ) ) )", "choosing": "Min( ( ( CS + MUR ) + ( ( DS + ( CS * ( ( ( RMSe * MUC ) * MLU ) - RRSe ) ) ) - ( ( DS * DS ) - Min( MUR ,MLU ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5537037037037037, "obj2": 0.3633843540290229}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( RRSe,( DS / RRSe ) ) ) + Min( Max( MUC,Min( RCSe ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.6592592592592592, "obj2": 0.26779203818816105}, {"determining": "( Max( ( ( MRS + FirstVNF_Mem ) / Max( BR,MDR ) ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + Max( FirstVNF_Mem,BR ) ) ) / ( ( FirstVNF_RAM - DDR ) - ( ARS + Min( ( Min( MDR ,ACS ) - FirstVNF_RAM_Server ) ,RRS ) ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + ( Min( DS ,DS ) - RMSe ) ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MLU * DS ) - ( RMSe - RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + RRSe ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.42672423812404986}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) - RRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( Max( ( ( ( MLU - MLU ) + MUC ) + MUM ),DS ) ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5351851851851852, "obj2": 0.3878729378490105}, {"determining": "( ( Min( CRS ,RRS ) + ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) * Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) )", "choosing": "Min( ( ( RRSe + MLU ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),( RRSe * MLU ) ) ) ) * RCSe ) + MUC ) ) ,( Min( ( MUM / DS ) ,MUM ) * ( MLU * ( RCSe - MUC ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3821698741591372}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( MUR - ( RCSe * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.673433892907692}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( Max( PN,FirstVNF_Mem_Server ) + DDR ) ) ) - AMS ) ) * MDR ) )", "choosing": "Min( ( Min( ( MUR + DS ) ,Max( DS,MUR ) ) / ( MUM - Min( RMSe ,Min( RRSe ,( ( RCSe / RMSe ) - RCSe ) ) ) ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4387207157421171}, {"determining": "Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( RRSe * RRSe ) )", "obj1": 0.20555555555555555, "obj2": 0.6908531476310177}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,Max( Const,FirstVNF_Mem ) ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( MDR ,FirstVNF_RAM_Server ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( Max( ( MUR / MUC ),DS ),Max( DS,( MUR * RRSe ) ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( MUR + MUC ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.9537037037037037, "obj2": 0.030524603352081847}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( RRSe,( DS / RRSe ) ) ) + Max( ( ( ( MLU - MLU ) + MUC ) + MUM ),DS ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.36666666666666664, "obj2": 0.535526334742873}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server - Min( FirstVNF_Mem ,MDR ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( RMSe ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUR - CS ) ) ) * RCSe ) ) / MUM ) ) )", "obj1": 0.12222222222222222, "obj2": 0.8148100235541746}, {"determining": "Min( ( Min( AMS ,RRS ) - FirstVNF_CPU ) ,Min( MRS ,CRS ) )", "choosing": "( ( MUC + ( MUM * MUC ) ) * Max( Max( RRSe,MLU ),RCSe ) )", "obj1": 0.387037037037037, "obj2": 0.5105359840124993}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( ( Max( FirstVNF_CPU_Server,ARS ) / ( FirstVNF_CPU / MRS ) ) ,( ( MRS * ( Max( FirstVNF_RAM,FirstVNF_CPU ) / MRS ) ) * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUC - DS ) + ( MUC - Min( MUM ,Max( MUR,RRSe ) ) ) ) - CS ) ,( RCSe - RCSe ) )", "obj1": 0.9722222222222222, "obj2": 0.020095625354177464}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( Min( RMSe ,MUM ),( RMSe + MUR ) ) )", "obj1": 0.26296296296296295, "obj2": 0.6310517326426658}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - Max( Min( BR ,FirstVNF_CPU ),( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.2, "obj2": 0.7001475526007079}, {"determining": "Min( ( ( MDR / ACS ) / FirstVNF_RAM ) ,( Min( Min( ( RRS / ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) ,( BR * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Max( Max( ( MUR * RRSe ),( MUR * RRSe ) ),( Max( RMSe,MLU ) / RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.30185185185185187, "obj2": 0.5846143406395945}, {"determining": "( ( AMS + FirstVNF_RAM ) - Min( ( ARS / FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,( CRS / Max( BR,Max( RRS,( FirstVNF_RAM_Server * AMS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( RMSe + RRSe ) ,( ( RRSe * CS ) / ( MLU * MLU ) ) ) ,DS ) / RMSe ) + ( MUR / Min( Max( ( CS / ( MUR / MUR ) ),RRSe ) ,MUR ) ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.4, "obj2": 0.49935639865506215}, {"determining": "Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUR / Max( RRSe,( DS / RRSe ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6698520182775202}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "Min( ( MUC - RCSe ) ,( RCSe / RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5408209677413123}, {"determining": "Min( ( AMS - MDR ) ,( Min( DDR ,FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( ( MLU * ( DS / Max( Max( MUC,DS ),( RRSe / DS ) ) ) ) - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + MLU ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.5977572223522433}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5907407407407408, "obj2": 0.33425590974565134}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( RMSe / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.7275729420659572}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUC ) ) ,MUC )", "obj1": 0.3611111111111111, "obj2": 0.5359445929337785}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( MUR - ( ( ( ( MUM / DS ) * MUR ) + ( MUC / MUM ) ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.6111111111111112, "obj2": 0.32697555178708765}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.30668642235754867}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.18333333333333332, "obj2": 0.7180967485470452}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( RRSe,( DS / RRSe ) ) ) + Max( ( ( ( MLU - MLU ) + MUC ) + MUM ),DS ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.662962962962963, "obj2": 0.26408076906716466}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.45555555555555555, "obj2": 0.43979017643095025}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( ( ( ( RMSe * RCSe ) * ( MUR + RRSe ) ) * MUR ) * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Min( ( Min( ARS ,FirstVNF_CPU_Server ) * ( AMS / FirstVNF_Mem ) ) ,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( Min( RRSe ,RCSe ) + ( MUR - RCSe ) ) ) - ( RCSe * CS ) )", "obj1": 0.9907407407407407, "obj2": 0.002219369453937033}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.7592592592592593, "obj2": 0.10750292405128344}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( MUC ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.4074074074074074, "obj2": 0.49256593423885836}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,Max( ( MDR * CRS ),BR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( ( RRSe - Max( MLU,Max( ( MUR * CS ),CS ) ) ) - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.7407407407407407, "obj2": 0.11490420328505878}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.9092592592592592, "obj2": 0.0634147330416205}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * ( FirstVNF_Mem_Server * ARS ) ) ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "( Min( ( MUR * DS ) ,( MUR - Min( MUR ,RMSe ) ) ) - ( MUM + MUC ) )", "obj1": 0.6296296296296297, "obj2": 0.32491592599287566}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.6055555555555555, "obj2": 0.33152327102895507}, {"determining": "Max( ( ( Max( FirstVNF_RAM_Server,DDR ) / ( AMS * FirstVNF_Mem ) ) - ( ( ACS * Const ) + ( FirstVNF_CPU_Server * AMS ) ) ),( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.6277777777777778, "obj2": 0.3258052827984342}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( Max( BR,MRS ) * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( MUM * MUR ) ) - ( RCSe * CS ) )", "obj1": 0.912962962962963, "obj2": 0.05728691393520541}, {"determining": "Min( ( PN - ( MDR * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + AMS ) )", "choosing": "Min( ( Max( CS,MUC ) * Min( ( CS * CS ) ,MUR ) ) ,( RCSe - RMSe ) )", "obj1": 0.7296296296296296, "obj2": 0.1205387461933806}, {"determining": "Min( ( PN - Min( ( ( FirstVNF_RAM * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUR + DS ) - Max( CS,MUR ) ) ,( MLU - MUM ) )", "obj1": 0.9833333333333333, "obj2": 0.006976124999898033}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( MUR - Min( MUC ,RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.3111111111111111, "obj2": 0.583883988675509}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM - Min( RRSe ,RMSe ) ) + ( RMSe * RRSe ) )", "obj1": 0.9462962962962963, "obj2": 0.039388860269308296}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.741894801533086}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( MDR - Min( ( Max( ( Min( ( BR + CRS ) ,Min( FirstVNF_CPU_Server ,ACS ) ) / MRS ),FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ,Max( FirstVNF_RAM_Server,( Max( FirstVNF_RAM,FirstVNF_CPU_Server ) * ( ( PN * CRS ) / FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( Max( MUC,( RMSe + ( ( Max( RMSe,MUC ) + MUC ) * ( ( ( Max( MLU,MUC ) + MUM ) * MUM ) / ( RCSe / MUR ) ) ) ) ) * ( DS - ( MUC * MUM ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6501642433422873}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.1685185185185185, "obj2": 0.7383615976754833}, {"determining": "( ( ( ( FirstVNF_RAM - MRS ) * ( ( ( ( FirstVNF_CPU_Server + BR ) - ( BR / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) * ( Max( ( BR + FirstVNF_Mem_Server ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + ARS ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) ) - Const ) - Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( MLU / ( DS * RCSe ) ) - CS ) * CS ) )", "obj1": 0.75, "obj2": 0.11008955661634642}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.5740740740740741, "obj2": 0.3474170615735386}, {"determining": "Min( ( ( FirstVNF_CPU / MRS ) - MDR ) ,PN )", "choosing": "Min( ( ( RCSe - RMSe ) / ( RCSe / DS ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7602375071716113}, {"determining": "Min( ( ( ( Min( RRS ,FirstVNF_Mem ) / Max( AMS,ACS ) ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( Min( RMSe ,MUM ),( RMSe + MUM ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6327998962146747}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( Max( FirstVNF_RAM,( CRS - Max( MRS,ARS ) ) ) - FirstVNF_Mem ) / ( Max( BR,( CRS * MDR ) ) / RRS ) ) )", "choosing": "Min( ( MUR - Min( ( RRSe - MUM ) ,RMSe ) ) ,( MUM - RCSe ) )", "obj1": 0.5685185185185185, "obj2": 0.3537681753129512}, {"determining": "( ( Min( RRS ,AMS ) * ( CRS - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( RRS,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + ( ( ARS * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "Min( ( MLU - DS ) ,Min( RMSe ,Max( MUR,Max( Max( Min( MUR ,MLU ),RRSe ),RMSe ) ) ) )", "obj1": 0.95, "obj2": 0.03685426129155546}, {"determining": "Min( Max( BR,Max( ( ( BR * Max( FirstVNF_Mem,BR ) ) - DDR ),BR ) ) ,( ACS * MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) + MUC ) ) ,( MUC / ( RMSe + MUR ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7533227224786562}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( RCSe * ( RRSe + Max( ( MUC - ( MUC * MUM ) ),RRSe ) ) ) + MUC ) ) ,( RMSe + ( DS / MUC ) ) )", "obj1": 0.5777777777777777, "obj2": 0.3462977285467861}, {"determining": "Min( ( CRS / ( ARS * DDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( MUR - ( ( ( MUM * MUR ) + ( MUC / MUM ) ) * RRSe ) ) ,( RCSe - MUM ) )", "obj1": 0.22962962962962963, "obj2": 0.6617787552260371}, {"determining": "Min( Max( Min( Min( Min( ( CRS + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem * ACS ) ) ,BR ),BR ) ,( ACS * MDR ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUC - ( Max( ( CS + MUR ),( ( ( Min( MLU ,RCSe ) / RRSe ) / MLU ) - ( CS / RRSe ) ) ) + MUR ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7671089425060797}, {"determining": "Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.2388888888888889, "obj2": 0.6545614496165123}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( MUC - ( MUM - ( Max( Max( RCSe,DS ),RMSe ) * RMSe ) ) ) - MUM ) ,( RRSe * RRSe ) )", "obj1": 0.9018518518518519, "obj2": 0.06693742938775289}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( ( MDR * Max( BR,FirstVNF_CPU ) ),( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - MRS ) / ( MRS / AMS ) ) - CRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe + MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( MUM ,( RMSe / RCSe ) ),( RMSe + MUC ) ) ) ) )", "obj1": 0.5907407407407408, "obj2": 0.33425590974565134}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - Min( RRS ,Min( AMS ,AMS ) ) ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( RRSe * MUM ) * RRSe ) )", "obj1": 0.32037037037037036, "obj2": 0.566741829493463}, {"determining": "Min( ( PN - ( ( MRS / PN ) * ( ( FirstVNF_RAM * FirstVNF_RAM ) * Max( Max( Const,FirstVNF_Mem ),ARS ) ) ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( ( ( RRSe - MUM ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe + ( RMSe - ( Min( Max( RCSe,CS ) ,( ( ( MUR - CS ) * ( MUC - RMSe ) ) + RMSe ) ) + ( ( MLU / RMSe ) + ( ( MUR - MUC ) - DS ) ) ) ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6427575415930656}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( ( MUR / Max( RRSe,( DS / RRSe ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.40370370370370373, "obj2": 0.4984882890689957}, {"determining": "Min( ( ( ( Min( RRS ,FirstVNF_Mem ) / Max( AMS,ACS ) ) + Min( ( AMS - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * ( ( CS + MUM ) * ( Max( ( RMSe * RMSe ),CS ) + DS ) ) )", "obj1": 0.25, "obj2": 0.6475211945655784}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( MRS / FirstVNF_CPU_Server ) / ( FirstVNF_Mem - Max( Max( Max( FirstVNF_RAM_Server,FirstVNF_CPU_Server ),MDR ),( ( ( FirstVNF_Mem + MRS ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - MRS ) ) ) ) )", "choosing": "( ( ( RRSe * MLU ) - ( RCSe / RMSe ) ) - ( CS / MLU ) )", "obj1": 0.9203703703703704, "obj2": 0.054273524816143524}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RCSe,Max( ( MLU - MUR ),MLU ) ) ) * RCSe ) + MUC ) ) ,( MUC / ( RMSe + MUR ) ) )", "obj1": 0.5777777777777777, "obj2": 0.3462977285467861}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.3425925925925926, "obj2": 0.554774826516753}, {"determining": "Max( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04066129550475484}, {"determining": "( Min( FirstVNF_CPU ,( CRS - MDR ) ) - Min( FirstVNF_CPU ,Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Min( ( CS + MUC ) ,( ( RMSe - RRSe ) - ( ( CS + ( MUM / DS ) ) * RRSe ) ) )", "obj1": 0.4537037037037037, "obj2": 0.4470327736945696}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( RRS + Max( FirstVNF_Mem,( Max( DDR,FirstVNF_RAM ) / Const ) ) ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + ( ( MUR - CS ) - ( RCSe + CS ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "( ( ( FirstVNF_CPU_Server / FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * Min( MDR ,AMS ) )", "choosing": "Min( ( ( ( CS + MUM ) * ( MLU * MLU ) ) - MUR ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.5648148148148148, "obj2": 0.3570503615176081}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,RRS ) ) + ( AMS - ( ( ( Min( Min( CRS ,FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( Min( ( ( RMSe - ( ( Max( ( CS + CS ),MUR ) / ( RRSe + RRSe ) ) - ( MLU * DS ) ) ) - DS ) ,( ( MUM / MLU ) - Min( ( ( CS + MUM ) * RRSe ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - Min( MUC ,MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7561007082065614}, {"determining": "Min( ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( CS + MUR ) + ( Min( CS ,Min( RRSe ,( RCSe + ( ( CS / CS ) * MUR ) ) ) ) - ( DS + ( MUC / ( ( MUR / CS ) - DS ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.6370370370370371, "obj2": 0.3062254829298487}, {"determining": "( Max( MRS,Min( FirstVNF_Mem ,ARS ) ) / ( ACS * ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) ) )", "choosing": "Min( ( RRSe - MUM ) ,( MUM - ( Max( ( ( RRSe / MUR ) / ( Max( Min( DS ,RMSe ),MUM ) + MLU ) ),( RMSe + DS ) ) / DS ) ) )", "obj1": 0.9296296296296296, "obj2": 0.04790959932951279}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.31666666666666665, "obj2": 0.5709264997200265}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( BR * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.3148148148148148, "obj2": 0.5780678473522322}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( MRS ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9814814814814815, "obj2": 0.012463315518195019}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( ( ( CS + MUM ) * RRSe ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.23148148148148148, "obj2": 0.6597130497010425}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.3333333333333333, "obj2": 0.559689011546192}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.23333333333333334, "obj2": 0.6547862407684732}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - ( ( BR - MRS ) / Max( MRS,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( DS * RMSe ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.6074074074074074, "obj2": 0.3302574380897197}], "8": [{"determining": "( ( ( CRS * ACS ) - MDR ) - ( ( ARS + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MUR / Max( RRSe,CS ) ) + ( ( ( ( RRSe + CS ) * RCSe ) * MUR ) * ( CS - Min( ( RRSe - MUC ) ,CS ) ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) * ( DDR - FirstVNF_CPU_Server ) ) * ( ( FirstVNF_Mem - Max( Max( BR,MRS ),( CRS - MDR ) ) ) / ( MRS / RRS ) ) )", "choosing": "Min( ( ( Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) ) + MUC ) - ( CS / DS ) ) ,( Min( Min( MLU ,DS ) ,MLU ) - ( ( MUM - ( Min( ( ( MUM * MLU ) - MUR ) ,( ( MUR / CS ) / RMSe ) ) - ( Max( CS,MUC ) * Min( ( CS * CS ) ,MUR ) ) ) ) - ( Max( MLU,( DS * CS ) ) + MUC ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( MRS ,( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( ( RMSe / ( ( DS * ( CS / CS ) ) / DS ) ) ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUR - CS ) ) ) * RCSe ) ) / MUM ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8196526582955194}, {"determining": "( ACS - ( ( ( ACS / Const ) + FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16122431568020215}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( RRSe,( DS / RRSe ) ) ) + Max( ( ( ( MLU - MLU ) + MUC ) + MUM ),DS ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.662962962962963, "obj2": 0.26408076906716466}, {"determining": "Min( ( Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( DS - MUM ) )", "obj1": 0.8722222222222222, "obj2": 0.06432910115053518}, {"determining": "( ( FirstVNF_RAM_Server / ( ( MDR * FirstVNF_RAM ) / ( CRS + PN ) ) ) - ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + ( ( Max( PN,FirstVNF_RAM_Server ) / ( MDR - PN ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( CS ,RCSe ) / MLU ) + ( MUC / MUM ) ) / ( MUM * ( ( MUR - ( ( CS / MUM ) * Max( Min( ( MUM - MUR ) ,Min( MUC ,MUM ) ),RMSe ) ) ) - DS ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12950576820044085}, {"determining": "( Max( FirstVNF_RAM,PN ) - Max( ( ACS - DDR ),RRS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe + ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) )", "obj1": 0.44814814814814813, "obj2": 0.44934678392061667}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.6, "obj2": 0.3234113589823941}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6444444444444445, "obj2": 0.27642750122601245}, {"determining": "( ( ( Max( ARS,ARS ) / ( ACS * FirstVNF_RAM ) ) * ( ( ARS + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( ( Min( FirstVNF_RAM ,AMS ) * FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem_Server,FirstVNF_Mem_Server ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( ( DS - RMSe ) + RMSe ) * DS ) ) + ( ( Min( ( RMSe / ( ( DS * ( CS / RMSe ) ) / DS ) ) ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUC - CS ) ) ) * RCSe ) ) / MUM ) ) )", "obj1": 0.12962962962962962, "obj2": 0.8121215108419074}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + Max( FirstVNF_Mem,( FirstVNF_Mem - MDR ) ) ) ) / ( ( AMS + ( RRS / DDR ) ) + ACS ) ) )", "choosing": "( ( RRSe - ( MUC * MUM ) ) * Max( ( MUC + Min( ( MUR - ( ( ( CS + RRSe ) / ( DS * MLU ) ) - RMSe ) ) ,( RCSe - MUM ) ) ),RMSe ) )", "obj1": 0.13333333333333333, "obj2": 0.7709226266806772}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( ( MUR + Max( RCSe,Max( ( MLU - RRSe ),CS ) ) ) * DS ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.4166666666666667, "obj2": 0.4895715722315096}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.812962962962963, "obj2": 0.07983812244603004}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( FirstVNF_RAM_Server - BR ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + ACS ) ) ) ) ) * MDR ) )", "choosing": "Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Max( ( MLU + Min( Min( Min( Min( ( CS + RRSe ) ,( MLU - MUR ) ) ,( MUM - Max( DS,MUR ) ) ) ,MUC ) ,Min( CS ,Max( ( MUR * MUC ),( CS / RMSe ) ) ) ) ),RMSe ) )", "obj1": 0.48333333333333334, "obj2": 0.41209630905592626}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( Max( PN,FirstVNF_Mem_Server ) + DDR ) ) ) - AMS ) ) * MDR ) )", "choosing": "Min( ( Min( ( MUR + DS ) ,Max( DS,MUR ) ) / ( MUM - Min( RMSe ,Min( RRSe ,( ( RCSe / RMSe ) - RCSe ) ) ) ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.4722222222222222, "obj2": 0.4387207157421171}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUM * ( DS - RMSe ) ) / Min( MUM ,Max( MUR,RRSe ) ) )", "obj1": 0.9092592592592592, "obj2": 0.0634147330416205}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) * ( ( RCSe * ( RRSe + Max( ( MUC - ( MUC * MUM ) ),RRSe ) ) ) + MUC ) ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "( Max( FirstVNF_RAM,( AMS * ( RRS / ARS ) ) ) - ( Max( FirstVNF_RAM_Server,Min( Const ,MDR ) ) - ARS ) )", "choosing": "Min( ( Max( ( MUR - MUC ),( ( Min( DS ,( MUR * Min( MUM ,DS ) ) ) - RMSe ) - MUM ) ) - CS ) ,( RRSe / Max( MUR,Min( ( RMSe * DS ) ,RRSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.39294464159361087}, {"determining": "( ( ( FirstVNF_Mem * MRS ) - ( ( ACS - CRS ) - Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( FirstVNF_RAM,( Max( FirstVNF_CPU,( MDR + FirstVNF_RAM_Server ) ) + Const ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,RMSe ) / MUC ) / DS ) / RCSe ) - CS ) / RRSe ) - MUM )", "obj1": 0.27037037037037037, "obj2": 0.6069621365481602}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( ( ( ( FirstVNF_Mem_Server + PN ) - Const ) + ARS ) / Min( MRS ,ARS ) ) ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689538}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7888888888888889, "obj2": 0.09153291653738856}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( ACS * MDR ) ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( Max( ( MUM + RMSe ),CS ) ,RCSe ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) ) - Max( ( MUR * MLU ),RMSe ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3761595842769802}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * MDR ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( MUR - Min( MUR ,RMSe ) ),RMSe ) ) ) )", "obj1": 0.5018518518518519, "obj2": 0.405600835419492}, {"determining": "Min( ( AMS - MDR ) ,( Min( DDR ,FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( ( MLU * ( DS / Max( Max( MUC,DS ),( RRSe / DS ) ) ) ) - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + MLU ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.5977572223522433}, {"determining": "Min( ( ( MDR / ACS ) / FirstVNF_RAM ) ,( Min( Min( ( RRS / ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) ,( BR * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Max( Max( ( MUR * RRSe ),( MUR * RRSe ) ),( Max( RMSe,MLU ) / RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.30185185185185187, "obj2": 0.5846143406395945}, {"determining": "Min( ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( CS + MUR ) + ( Min( CS ,Min( RRSe ,( RCSe + ( ( CS / CS ) * MUR ) ) ) ) - ( DS + ( MUC / ( ( MUR / CS ) - DS ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.6370370370370371, "obj2": 0.3062254829298487}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ) ,( Min( Min( ( ( AMS - FirstVNF_Mem ) - MDR ) ,PN ) ,FirstVNF_CPU ) + MDR ) )", "choosing": "( Min( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( CS * MUR ) + Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) ) / Min( Min( MUM ,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + ( RMSe / CS ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7925925925925926, "obj2": 0.09132666532573269}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( ( ( Min( DS ,MUR ) / CS ) / MUM ) * RRSe ) - Min( ( RMSe / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.01920877684120574}, {"determining": "Min( ( FirstVNF_Mem - DDR ) ,Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RCSe ,RRSe ) + ( ( MUR / Max( RRSe,( DS + RRSe ) ) ) - ( Min( DS ,DS ) - RMSe ) ) ) ,( DS * MLU ) )", "obj1": 0.37222222222222223, "obj2": 0.5235866818486378}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server / ACS ) ) * Max( Min( ARS ,( ARS * Min( PN ,( BR / MDR ) ) ) ),( ( FirstVNF_Mem_Server - DDR ) + RRS ) ) )", "choosing": "Min( ( ( CS + MUR ) + ( ( DS + ( CS * ( ( ( RMSe * MUC ) * MLU ) - RRSe ) ) ) - ( ( DS * DS ) - Min( MUR ,MLU ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5537037037037037, "obj2": 0.3633843540290229}, {"determining": "( ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) - ( Max( ( ( BR - MRS ) / Min( DDR ,FirstVNF_CPU ) ),( BR / FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "Min( ( CS - ( ( DS * ( CS + MUC ) ) + ( MUM / MUM ) ) ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.4166666666666667, "obj2": 0.4895715722315096}, {"determining": "Max( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ),( Min( ( FirstVNF_RAM_Server + FirstVNF_CPU ) ,( FirstVNF_Mem + MDR ) ) + Max( Max( AMS,FirstVNF_RAM_Server ),Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) ) ) )", "choosing": "( ( RCSe - RMSe ) / ( RCSe / DS ) )", "obj1": 0.1685185185185185, "obj2": 0.7383615976754833}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.26666666666666666, "obj2": 0.6266857484302866}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( Max( CS,MUC ) * Min( ( CS * CS ) ,MUR ) ) ,( RCSe - RMSe ) )", "obj1": 0.21296296296296297, "obj2": 0.6733671234419363}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.741894801533086}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.30668642235754867}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( RRSe,( DS / RRSe ) ) ) + Min( Max( MUC,Min( RCSe ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.6592592592592592, "obj2": 0.26779203818816105}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.18333333333333332, "obj2": 0.7180967485470452}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) ) )", "choosing": "Min( ( MUR - ( ( RRSe - Max( MLU,Max( ( MUR * CS ),CS ) ) ) - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.5777777777777777, "obj2": 0.34624201472482513}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - Max( Min( BR ,FirstVNF_CPU ),( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.2, "obj2": 0.7001475526007079}, {"determining": "Min( Min( ( RRS + ACS ) ,Max( Min( ACS ,Const ),ACS ) ) ,Max( FirstVNF_Mem,MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( Min( ( ( CS - MUC ) - ( RMSe * RCSe ) ) ,( ( RCSe / ( RCSe * RMSe ) ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) * ( ( Max( Max( Max( ( CS - RCSe ),( RRSe * RRSe ) ),( Max( MUC,CS ) - ( MLU / MUR ) ) ),MUM ) * Min( RMSe ,Max( MUR,MLU ) ) ) * MUM ) ) )", "obj1": 0.3111111111111111, "obj2": 0.575919600667808}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ARS / ARS ) ,FirstVNF_CPU ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11432382588499772}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.3881364863077865}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( RMSe / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3425925925925926, "obj2": 0.5509843720476356}, {"determining": "( Min( ( Max( MRS,AMS ) / Min( MDR ,FirstVNF_Mem_Server ) ) ,( ( FirstVNF_CPU + DDR ) * ( Const * ARS ) ) ) / Min( FirstVNF_RAM_Server ,( CRS * ( PN - FirstVNF_Mem ) ) ) )", "choosing": "( ( ( CS / RMSe ) - ( MUC * MUM ) ) * ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,MUR ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.017992822262601738}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.45555555555555555, "obj2": 0.43979017643095025}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) )", "choosing": "Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3611111111111111, "obj2": 0.5316678266029239}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( AMS - ( ( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) + Max( FirstVNF_RAM,( CRS - Max( ( RRS / FirstVNF_Mem ),ARS ) ) ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( ( ( CS + MUM ) * RRSe ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( ( RCSe - MUM ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.7530306461988416}, {"determining": "( ( ( ( FirstVNF_RAM - MRS ) * ( ( ( ( FirstVNF_CPU_Server + BR ) - ( BR / ( FirstVNF_RAM + FirstVNF_RAM ) ) ) * ( Max( ( BR + FirstVNF_Mem_Server ),FirstVNF_RAM ) * ( FirstVNF_RAM_Server + ARS ) ) ) / Max( ACS,FirstVNF_RAM_Server ) ) ) - Const ) - Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( MLU / ( DS * RCSe ) ) - CS ) * CS ) )", "obj1": 0.75, "obj2": 0.11008955661634642}, {"determining": "Max( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04066129550475484}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) )", "obj1": 0.48703703703703705, "obj2": 0.4082469941781716}, {"determining": "Min( ( FirstVNF_RAM_Server - FirstVNF_Mem ) ,( FirstVNF_RAM + FirstVNF_CPU ) )", "choosing": "Min( ( MUC - RCSe ) ,( RCSe / RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5408209677413123}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3907407407407407, "obj2": 0.5095066240471247}, {"determining": "( ( AMS + FirstVNF_RAM ) - Min( ( ARS / FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,( CRS / Max( BR,Max( RRS,( FirstVNF_RAM_Server * AMS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( RMSe + RRSe ) ,( ( RRSe * CS ) / ( MLU * MLU ) ) ) ,DS ) / RMSe ) + ( MUR / Min( Max( ( CS / ( MUR / MUR ) ),RRSe ) ,MUR ) ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.4, "obj2": 0.49935639865506215}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5907407407407408, "obj2": 0.33425590974565134}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( RRSe,( DS / RRSe ) ) ) + Max( ( ( ( MLU - MLU ) + MUC ) + MUM ),DS ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.662962962962963, "obj2": 0.26408076906716466}, {"determining": "Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( RRSe * RRSe ) )", "obj1": 0.20555555555555555, "obj2": 0.6908531476310177}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.30668642235754867}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) - RRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( Max( ( ( ( MLU - MLU ) + MUC ) + MUM ),DS ) ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.3861330377513833}, {"determining": "Min( PN ,( Max( ( ACS - ( FirstVNF_Mem - ACS ) ),RRS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( Min( ( RMSe / ( RRSe - RCSe ) ) ,Max( ( MUC * ( MUC - MUR ) ),( Max( MUM,MLU ) / Min( MUR ,MUM ) ) ) ),MUR ),MUM ) - CS ) ,( RCSe + RMSe ) )", "obj1": 0.3314814814814815, "obj2": 0.5532497380617339}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( RRS + Max( FirstVNF_Mem,( Max( DDR,FirstVNF_RAM ) / Const ) ) ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + ( ( MUR - CS ) - ( RCSe + CS ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( ( MDR * Max( BR,FirstVNF_CPU ) ),( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - MRS ) / ( MRS / AMS ) ) - CRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe + MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( MUM ,( RMSe / RCSe ) ),( RMSe + MUC ) ) ) ) )", "obj1": 0.5907407407407408, "obj2": 0.33425590974565134}, {"determining": "Min( ( PN - ( MDR * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + AMS ) )", "choosing": "Min( ( Max( CS,MUC ) * Min( ( CS * CS ) ,MUR ) ) ,( RCSe - RMSe ) )", "obj1": 0.7296296296296296, "obj2": 0.1205387461933806}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.23703703703703705, "obj2": 0.6500431205545251}, {"determining": "Min( ( ( ( Min( RRS ,FirstVNF_Mem ) / Max( AMS,ACS ) ) + Min( ( AMS - FirstVNF_Mem_Server ) ,( FirstVNF_Mem_Server + PN ) ) ) / ( ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - MUM ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.24814814814814815, "obj2": 0.6486600265613687}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( Max( BR,MRS ) * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( MUM * MUR ) ) - ( RCSe * CS ) )", "obj1": 0.912962962962963, "obj2": 0.05728691393520541}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "Min( ( PN - Min( ( ( FirstVNF_RAM * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUR + DS ) - Max( CS,MUR ) ) ,( MLU - MUM ) )", "obj1": 0.9833333333333333, "obj2": 0.006976124999898033}, {"determining": "Min( Max( Min( Min( Min( ( CRS + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem * ACS ) ) ,BR ),BR ) ,( ACS * MDR ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUC - ( Max( ( CS + MUR ),( ( ( Min( MLU ,RCSe ) / RRSe ) / MLU ) - ( CS / RRSe ) ) ) + MUR ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7671089425060797}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.31666666666666665, "obj2": 0.5709264997200265}, {"determining": "Min( ( MDR / Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) ) ,Min( BR ,RRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( RRSe * ( ( ( ( ( MUR - RMSe ) + RRSe ) * RRSe ) / RCSe ) - ( RCSe - Max( ( RRSe + RMSe ),Min( Min( MLU ,Max( MUC,RCSe ) ) ,( RRSe / MLU ) ) ) ) ) ) )", "obj1": 0.825925925925926, "obj2": 0.07762525991835141}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.35, "obj2": 0.534412229603984}, {"determining": "Min( ( PN - Min( ( ( MRS * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( MUR / Max( RRSe,( DS / RRSe ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.22592592592592592, "obj2": 0.6698520182775202}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,( AMS * ( RRS / ARS ) ) ) - ( Max( FirstVNF_RAM_Server,Min( Const ,MDR ) ) - ARS ) ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM - RMSe ),Min( MUM ,DS ) ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.5574074074074075, "obj2": 0.35736003442161585}, {"determining": "( Min( FirstVNF_CPU ,( CRS - MDR ) ) - Min( FirstVNF_CPU ,Min( PN ,FirstVNF_Mem ) ) )", "choosing": "Min( ( CS + MUC ) ,( ( RMSe - RRSe ) - ( ( CS + ( MUM / DS ) ) * RRSe ) ) )", "obj1": 0.4537037037037037, "obj2": 0.4470327736945696}, {"determining": "Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( RRSe * RRSe ) )", "obj1": 0.20555555555555555, "obj2": 0.6908531476310177}, {"determining": "( ( Min( RRS ,AMS ) * ( CRS - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( RRS,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + ( ( ARS * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "Min( ( MLU - DS ) ,Min( RMSe ,Max( MUR,Max( Max( Min( MUR ,MLU ),RRSe ),RMSe ) ) ) )", "obj1": 0.95, "obj2": 0.03685426129155546}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_Mem_Server - Max( CRS,FirstVNF_RAM_Server ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ,( DDR - ( DDR * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - MUC ) + ( CS - Min( ( RMSe / ( RRSe + ( CS / RCSe ) ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( ( CS - ( MUR * MUC ) ) - RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.726075196308536}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( BR * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) ) + MUC ),RMSe ) )", "obj1": 0.21666666666666667, "obj2": 0.6703166525125149}, {"determining": "Min( ( PN - ( ( MRS / PN ) * Max( CRS,FirstVNF_RAM_Server ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( PN - MDR ) ) ,( ARS * CRS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( ( RCSe - ( MUR * RCSe ) ) / RCSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7241251386593915}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.23333333333333334, "obj2": 0.6547862407684732}, {"determining": "( ( FirstVNF_RAM - MDR ) / ( ( ( ( PN * ARS ) + ( ( ( FirstVNF_Mem * ( MRS + AMS ) ) * DDR ) + PN ) ) - DDR ) * ACS ) )", "choosing": "Min( ( RRSe - MUM ) ,( MUM - ( Max( ( ( ( ( RCSe + MUM ) * MUC ) + ( Max( RMSe,DS ) * Max( MLU,RRSe ) ) ) / ( RRSe / MUR ) ),( RMSe + DS ) ) / DS ) ) )", "obj1": 0.9296296296296296, "obj2": 0.047820563452062814}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,Max( Const,FirstVNF_Mem ) ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( MDR ,FirstVNF_RAM_Server ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( Max( ( MUR / MUC ),DS ),Max( DS,( MUR * RRSe ) ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( MUR + MUC ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.9537037037037037, "obj2": 0.030524603352081847}, {"determining": "Min( Min( PN ,FirstVNF_CPU_Server ) ,( ( ( ( FirstVNF_RAM - DDR ) - ( FirstVNF_CPU / CRS ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( ARS / DDR ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( CS - Max( ( MUM - RMSe ),MLU ) ) ,Max( CS,( ( CS - Max( MUR,RRSe ) ) * ( ( DS * MLU ) + RMSe ) ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6396348342703507}, {"determining": "Min( ( ( ( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_RAM - DDR ) ) + ( FirstVNF_RAM_Server * MDR ) ) + Max( ARS,CRS ) ) ,( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,Max( ( ( ( ( MUM * ( RCSe * CS ) ) - RMSe ) / DS ) * RRSe ),RRSe ) )", "obj1": 0.25, "obj2": 0.6422677101327221}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,RRS ) ) + ( AMS - ( ( ( Min( Min( CRS ,FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( Min( ( ( RMSe - ( ( Max( ( CS + CS ),MUR ) / ( RRSe + RRSe ) ) - ( MLU * DS ) ) ) - DS ) ,( ( MUM / MLU ) - Min( ( ( CS + MUM ) * RRSe ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - Min( MUC ,MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7561007082065614}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( Max( FirstVNF_RAM,( CRS - Max( MRS,ARS ) ) ) - FirstVNF_Mem ) / ( Max( BR,( CRS * MDR ) ) / RRS ) ) )", "choosing": "Min( ( MUR - Min( ( RRSe - MUM ) ,RMSe ) ) ,( MUM - RCSe ) )", "obj1": 0.5685185185185185, "obj2": 0.3537681753129512}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server + RRS ) ) ,( ( Const + FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) * ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS + Max( Max( ( RRSe + ( MLU / RRSe ) ),MLU ),DS ) ) ,MUC ),( RMSe + MUM ) ) * ( MUC - Max( DS,( CS * RRSe ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6327998962146747}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( ( MUR / Max( RRSe,( DS / RRSe ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.40370370370370373, "obj2": 0.4984882890689957}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) * RRSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) )", "choosing": "Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.35555555555555557, "obj2": 0.5326419342041819}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( MUC ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.4074074074074074, "obj2": 0.49256593423885836}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM - Min( RRSe ,RMSe ) ) + ( RMSe * RRSe ) )", "obj1": 0.9462962962962963, "obj2": 0.039388860269308296}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( ( ( ( RMSe * RCSe ) * ( MUR + RRSe ) ) * MUR ) * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3851851851851852, "obj2": 0.5137205519719664}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "Min( ( Min( Max( MUC,Min( RCSe ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.13518518518518519, "obj2": 0.7697563174189205}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.7592592592592593, "obj2": 0.10750292405128344}], "9": [{"determining": "Min( ( PN - Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( Min( ( MUC - RMSe ) ,( MUC / RCSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( CRS * ACS ) - MDR ) - ( ( ARS + FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( MUR / Max( RRSe,CS ) ) + ( ( ( ( RRSe + CS ) * RCSe ) * MUR ) * ( CS - Min( ( RRSe - MUC ) ,CS ) ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( MRS ,( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( ( RMSe / ( ( DS * ( CS / CS ) ) / DS ) ) ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUR - CS ) ) ) * RCSe ) ) / MUM ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8196526582955194}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.43148148148148147, "obj2": 0.3854869364865654}, {"determining": "( ACS - ( ( ( ACS / Const ) + FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16122431568020215}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( ( MUR / Max( RRSe,( DS / RRSe ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.4166666666666667, "obj2": 0.488487455670829}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM - RMSe ),CS ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.5407407407407407, "obj2": 0.37651249041246637}, {"determining": "( Max( FirstVNF_RAM,Min( PN ,( RRS - FirstVNF_CPU ) ) ) - ( AMS - ( ( Max( FirstVNF_RAM_Server,ARS ) + ( RRS / FirstVNF_Mem ) ) - Min( Min( PN ,DDR ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( ( RCSe + ( CS / ( ( ( MLU - MUR ) - ( RMSe / MUR ) ) * MLU ) ) ) / Min( ( RCSe + RRSe ) ,Max( MUM,( ( MUC - ( MUC / MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.6759259259259259, "obj2": 0.2578703153260306}, {"determining": "Min( ( Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) ) + MUC ) ,( RCSe - MUM ) )", "obj1": 0.8666666666666667, "obj2": 0.06273944607119028}, {"determining": "( ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) - Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) - ( ACS - Max( ARS,ARS ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( CS * Max( ( ( RMSe * RMSe ) * MLU ),( RCSe * Min( CS ,RRSe ) ) ) ) * ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.14145488407215065}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.12222222222222222, "obj2": 0.8087573921027216}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "Min( ( Min( Max( MUC,Min( RCSe ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12962962962962962, "obj2": 0.77328780041106}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( Max( BR,MRS ) * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( MUM * MUR ) ) - ( RCSe * CS ) )", "obj1": 0.912962962962963, "obj2": 0.05728691393520541}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.6037037037037037, "obj2": 0.31436067106181675}, {"determining": "Min( ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - MRS ) ) ) / ( MRS / RRS ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( CS + MUR ) + ( Min( CS ,Min( RRSe ,( RCSe + ( ( CS / CS ) * MUR ) ) ) ) - ( DS + ( MUC / ( ( MUR / CS ) - DS ) ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.6370370370370371, "obj2": 0.3062254829298487}, {"determining": "( Max( FirstVNF_CPU,PN ) - ( AMS - ( ( Max( ( ( DDR - ( RRS / RRS ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Max( FirstVNF_Mem,ARS ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( Min( MUM ,DS ) - MUR ) ,( MUC / RCSe ) )", "obj1": 0.6444444444444445, "obj2": 0.27642750122601245}, {"determining": "( ( FirstVNF_RAM_Server / ( ( MDR * FirstVNF_RAM ) / ( CRS + PN ) ) ) - ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + ( ( Max( PN,FirstVNF_RAM_Server ) / ( MDR - PN ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( CS ,RCSe ) / MLU ) + ( MUC / MUM ) ) / ( MUM * ( ( MUR - ( ( CS / MUM ) * Max( Min( ( MUM - MUR ) ,Min( MUC ,MUM ) ),RMSe ) ) ) - DS ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12950576820044085}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( PN - FirstVNF_Mem ) ) ) ) / ( MRS / RRS ) ) ) )", "choosing": "Min( ( MUR - ( ( RRSe - Max( MLU,Max( ( MUR * CS ),CS ) ) ) - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.5777777777777777, "obj2": 0.34624201472482513}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "Min( ( AMS - MDR ) ,( Min( DDR ,FirstVNF_Mem_Server ) * MDR ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( ( MLU * ( DS / Max( Max( MUC,DS ),( RRSe / DS ) ) ) ) - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + MLU ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.5977572223522433}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - AMS ) ) * MDR ) )", "choosing": "Min( ( DS - ( ( CS + MUM ) * RRSe ) ) ,Min( RRSe ,DS ) )", "obj1": 0.3851851851851852, "obj2": 0.5020592330791918}, {"determining": "Min( ( ( MDR / ACS ) / FirstVNF_RAM ) ,( Min( Min( ( RRS / ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) ,( BR * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Max( Max( ( MUR * RRSe ),( MUR * RRSe ) ),( Max( RMSe,MLU ) / RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.30185185185185187, "obj2": 0.5846143406395945}, {"determining": "Min( ( FirstVNF_Mem - DDR ) ,Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RCSe ,RRSe ) + ( ( MUR / Max( RRSe,( DS + RRSe ) ) ) - ( Min( DS ,DS ) - RMSe ) ) ) ,( DS * MLU ) )", "obj1": 0.37222222222222223, "obj2": 0.5235866818486378}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server / ACS ) ) * Max( Min( ARS ,( ARS * Min( PN ,( BR / MDR ) ) ) ),( ( FirstVNF_Mem_Server - DDR ) + RRS ) ) )", "choosing": "Min( ( ( CS + MUR ) + ( ( DS + ( CS * ( ( ( RMSe * MUC ) * MLU ) - RRSe ) ) ) - ( ( DS * DS ) - Min( MUR ,MLU ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5537037037037037, "obj2": 0.3633843540290229}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.6, "obj2": 0.3234113589823941}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1648148148148148, "obj2": 0.7334244812052835}, {"determining": "Min( ( Max( AMS,PN ) - MDR ) ,PN )", "choosing": "Min( Max( ( ( RMSe * MUM ) - MUR ),( MUR * RMSe ) ) ,( CS + MUC ) )", "obj1": 0.22592592592592592, "obj2": 0.6641024019853212}, {"determining": "Min( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) ) ) ) - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * MUM ) )", "obj1": 0.5648148148148148, "obj2": 0.34661481854040893}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ARS / ARS ) ,FirstVNF_CPU ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11432382588499772}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.18333333333333332, "obj2": 0.7180967485470452}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - Max( Min( BR ,FirstVNF_CPU ),( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.2, "obj2": 0.7001475526007079}, {"determining": "( ( FirstVNF_RAM - MDR ) / ( ( ( ( PN * ARS ) + ( ( ( FirstVNF_Mem * ( MRS + AMS ) ) * DDR ) + PN ) ) - DDR ) * ACS ) )", "choosing": "Min( ( RRSe - MUM ) ,( MUM - ( Max( ( ( ( ( RCSe + MUM ) * MUC ) + ( Max( RMSe,DS ) * Max( MLU,RRSe ) ) ) / ( RRSe / MUR ) ),( RMSe + DS ) ) / DS ) ) )", "obj1": 0.9296296296296296, "obj2": 0.047820563452062814}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) - Max( ( ( Min( ACS ,Min( RRS ,ARS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ),Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7685185185185185, "obj2": 0.10016920279479033}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.30668642235754867}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( MUM ,( MLU - MUM ) )", "obj1": 0.9703703703703703, "obj2": 0.012520769298021388}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( ACS * MDR ) ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( Max( ( MUM + RMSe ),CS ) ,RCSe ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) ) - Max( ( MUR * MLU ),RMSe ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3761595842769802}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( ( MDR * Max( BR,FirstVNF_CPU ) ),( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - MRS ) / ( MRS / AMS ) ) - CRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe + MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( MUM ,( RMSe / RCSe ) ),( RMSe + MUC ) ) ) ) )", "obj1": 0.9203703703703704, "obj2": 0.054273524816143524}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - AMS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / PN ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - ( ( CS + CS ) * RRSe ) ) * ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7851851851851852, "obj2": 0.0938798056386573}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( ( ( ( RMSe * RCSe ) * ( MUR + RRSe ) ) * MUR ) * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "Max( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04066129550475484}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( Min( ARS ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.5400884862699515}, {"determining": "Min( Max( Min( Min( Min( ( CRS + FirstVNF_CPU_Server ) ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem * ACS ) ) ,BR ),BR ) ,( ACS * MDR ) )", "choosing": "Min( ( MUC / RMSe ) ,( MUC - ( Max( ( CS + MUR ),( ( ( Min( MLU ,RCSe ) / RRSe ) / MLU ) - ( CS / RRSe ) ) ) + MUR ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7671089425060797}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.26851851851851855, "obj2": 0.6079361356050252}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,RRS ) ) + ( AMS - ( ( ( Min( Min( CRS ,FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( Min( ( ( RMSe - ( ( Max( ( CS + CS ),MUR ) / ( RRSe + RRSe ) ) - ( MLU * DS ) ) ) - DS ) ,( ( MUM / MLU ) - Min( ( ( CS + MUM ) * RRSe ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - Min( MUC ,MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7561007082065614}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( CRS - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe * MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5907407407407408, "obj2": 0.33425590974565134}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( ( ( Min( DS ,MUR ) / CS ) / MUM ) * RRSe ) - Min( ( RMSe / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.01920877684120574}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( ACS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( ( FirstVNF_RAM_Server + ( BR * Max( FirstVNF_Mem,BR ) ) ),( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( RRSe,( DS / RRSe ) ) ) + Max( Min( ( RCSe - MUM ) ,( ( Max( CS,CS ) * RMSe ) * RRSe ) ),DS ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.6574074074074074, "obj2": 0.26812816396445843}, {"determining": "( ( AMS + FirstVNF_RAM ) - Min( ( ARS / FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,( CRS / Max( BR,Max( RRS,( FirstVNF_RAM_Server * AMS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( RMSe + RRSe ) ,( ( RRSe * CS ) / ( MLU * MLU ) ) ) ,DS ) / RMSe ) + ( MUR / Min( Max( ( CS / ( MUR / MUR ) ),RRSe ) ,MUR ) ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.4, "obj2": 0.49935639865506215}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.26666666666666666, "obj2": 0.6266857484302866}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.741894801533086}, {"determining": "Min( Min( FirstVNF_Mem ,MDR ) ,( ( FirstVNF_CPU_Server + AMS ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MLU ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( ( RCSe + RRSe ) ,Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + ( MUR * RMSe ) ),RMSe ) ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6779156083776935}, {"determining": "Min( ( PN - Min( ( ( FirstVNF_RAM * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( AMS + FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( MUR + DS ) - Max( CS,MUR ) ) ,( MLU - MUM ) )", "obj1": 0.9833333333333333, "obj2": 0.006976124999898033}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( BR * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) ) + MUC ),RMSe ) )", "obj1": 0.21666666666666667, "obj2": 0.6703166525125149}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( ( MDR + FirstVNF_CPU ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe + ( Min( Max( Min( MLU ,MLU ),MUC ) ,( Min( MUR ,MUC ) - ( DS / DS ) ) ) - ( ( MUM - CS ) + Min( ( CS / MUC ) ,MUM ) ) ) ) - MLU ) - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) * ( ( FirstVNF_Mem - Max( ( MDR * Max( BR,FirstVNF_CPU ) ),( ( ( ( FirstVNF_CPU * FirstVNF_CPU_Server ) - MRS ) / ( MRS / AMS ) ) - CRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( RRSe + MLU ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( Min( MUM ,( RMSe / RCSe ) ),( RMSe + MUC ) ) ) ) )", "obj1": 0.5907407407407408, "obj2": 0.33425590974565134}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( MUC ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.4074074074074074, "obj2": 0.49256593423885836}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,Max( Const,FirstVNF_Mem ) ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( MDR ,FirstVNF_RAM_Server ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( Max( ( MUR / MUC ),DS ),Max( DS,( MUR * RRSe ) ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( MUR + MUC ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.9537037037037037, "obj2": 0.030524603352081847}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( PN - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( RMSe * RRSe ) )", "obj1": 0.9907407407407407, "obj2": 0.002219369453937033}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "Min( PN ,( Max( ( ACS - ( FirstVNF_Mem - ACS ) ),RRS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( Min( ( RMSe / ( RRSe - RCSe ) ) ,Max( ( MUC * ( MUC - MUR ) ),( Max( MUM,MLU ) / Min( MUR ,MUM ) ) ) ),MUR ),MUM ) - CS ) ,( RCSe + RMSe ) )", "obj1": 0.3314814814814815, "obj2": 0.5532497380617339}, {"determining": "( ( ( FirstVNF_Mem * MRS ) - ( ( ACS - CRS ) - Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( FirstVNF_RAM,( Max( FirstVNF_CPU,( MDR + FirstVNF_RAM_Server ) ) + Const ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,RMSe ) / MUC ) / DS ) / RCSe ) - CS ) / RRSe ) - MUM )", "obj1": 0.27037037037037037, "obj2": 0.6069621365481602}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ) ,( Min( Min( ( ( AMS - FirstVNF_Mem ) - MDR ) ,PN ) ,FirstVNF_CPU ) + MDR ) )", "choosing": "( Min( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( CS * MUR ) + Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) ) / Min( Min( MUM ,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + ( RMSe / CS ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7925925925925926, "obj2": 0.09132666532573269}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server + RRS ) ) ,( ( Const + FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) * ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS + Max( Max( ( RRSe + ( MLU / RRSe ) ),MLU ),DS ) ) ,MUC ),( RMSe + MUM ) ) * ( MUC - Max( DS,( CS * RRSe ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6327998962146747}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( RMSe / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1574074074074074, "obj2": 0.748314622910982}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.9740740740740741, "obj2": 0.008465144131065166}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + Const ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUM - Min( RRSe ,RMSe ) ) + ( RMSe * RRSe ) )", "obj1": 0.9462962962962963, "obj2": 0.039388860269308296}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.7592592592592593, "obj2": 0.10750292405128344}, {"determining": "Min( ( PN * ( MRS / ARS ) ) ,Min( MRS ,PN ) )", "choosing": "Min( ( RRSe / ( Max( ( ( Max( ( CS + MUC ),CS ) - ( MUR / ( RCSe / RRSe ) ) ) * ( MUM + ( ( CS + MUR ) - Max( MLU,MUR ) ) ) ),Min( CS ,DS ) ) + RRSe ) ) ,( ( RMSe - MUR ) - DS ) )", "obj1": 0.26296296296296295, "obj2": 0.6303112583711797}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) * ( ( RCSe * ( RRSe + Max( ( MUC - ( MUC * MUM ) ),RRSe ) ) ) + MUC ) ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) + ( AMS - ( ( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) + Max( FirstVNF_RAM,( CRS - Max( ( RRS / FirstVNF_Mem ),ARS ) ) ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( Min( Min( ( MUR - ( MUM - DS ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( ( ( CS + MUM ) * RRSe ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( ( RCSe - MUM ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.15185185185185185, "obj2": 0.752632946719017}, {"determining": "Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC * MUM ) - MUC ) ,( ( Max( MLU,MUM ) + RCSe ) * MLU ) )", "obj1": 0.2074074074074074, "obj2": 0.6899683710474882}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.35, "obj2": 0.534412229603984}, {"determining": "( ( Min( RRS ,AMS ) * ( CRS - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( RRS,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + ( ( ARS * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "Min( ( MLU - DS ) ,Min( RMSe ,Max( MUR,Max( Max( Min( MUR ,MLU ),RRSe ),RMSe ) ) ) )", "obj1": 0.95, "obj2": 0.03685426129155546}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( ( Min( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8092592592592592, "obj2": 0.08139561237176345}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,PN )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.23703703703703705, "obj2": 0.6500431205545251}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6444444444444445, "obj2": 0.27642750122601245}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) + Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( Min( MDR ,FirstVNF_CPU_Server ) - ACS ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( MUC / ( RMSe - MUM ) ) - MUC ) ) + Max( ( Min( ( MLU - MLU ) ,MUC ) + MUM ),DS ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.662962962962963, "obj2": 0.2617804797395104}, {"determining": "Min( Min( ( RRS + ACS ) ,Max( Min( ACS ,Const ),ACS ) ) ,Max( FirstVNF_Mem,MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,( ( Min( ( ( CS - MUC ) - ( RMSe * RCSe ) ) ,( ( RCSe / ( RCSe * RMSe ) ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) * ( ( Max( Max( Max( ( CS - RCSe ),( RRSe * RRSe ) ),( Max( MUC,CS ) - ( MLU / MUR ) ) ),MUM ) * Min( RMSe ,Max( MUR,MLU ) ) ) * MUM ) ) )", "obj1": 0.3111111111111111, "obj2": 0.575919600667808}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9555555555555556, "obj2": 0.021595708791984893}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( Max( CS,MUC ) * Min( ( CS * CS ) ,MUR ) ) ,( RCSe - RMSe ) )", "obj1": 0.21296296296296297, "obj2": 0.6733671234419363}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8185185185185185, "obj2": 0.07844559448447826}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,( AMS * ( RRS / ARS ) ) ) - ( Max( FirstVNF_RAM_Server,Min( Const ,MDR ) ) - ARS ) ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM - RMSe ),Min( MUM ,DS ) ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.5574074074074075, "obj2": 0.35736003442161585}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "Min( Max( FirstVNF_RAM,( CRS - Max( MRS,ARS ) ) ) ,( Min( ( ( AMS - FirstVNF_CPU_Server ) * ( ( ( ACS / FirstVNF_RAM_Server ) + RRS ) / Max( RRS,ARS ) ) ) ,( MRS * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "Min( ( ( MUC - ( Min( ( ( RCSe / MLU ) * DS ) ,DS ) - ( MUM + ( DS + Min( DS ,MUC ) ) ) ) ) - MUM ) ,Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) )", "obj1": 0.3111111111111111, "obj2": 0.575919600667808}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( FirstVNF_CPU ,( ( ARS * Max( RRS,( ARS + BR ) ) ) * ( FirstVNF_Mem_Server * AMS ) ) ) * MDR ) )", "choosing": "Min( ( Min( DS ,Min( Min( Max( ( ( MUC + RRSe ) * Min( RMSe ,DS ) ),( MUC / ( DS / MUM ) ) ) ,MLU ) ,MUR ) ) - CS ) ,( RCSe - ( ( CS - ( RRSe * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.49699880026182114}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.24444444444444444, "obj2": 0.6468405151230683}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( BR * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) ) + MUC ),RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5603088367731613}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) )", "choosing": "Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3611111111111111, "obj2": 0.5316678266029239}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) )", "choosing": "Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.35555555555555557, "obj2": 0.5326419342041819}, {"determining": "Min( ( MDR / Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) ) ,Min( BR ,RRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( RRSe * ( ( ( ( ( MUR - RMSe ) + RRSe ) * RRSe ) / RCSe ) - ( RCSe - Max( ( RRSe + RMSe ),Min( Min( MLU ,Max( MUC,RCSe ) ) ,( RRSe / MLU ) ) ) ) ) ) )", "obj1": 0.825925925925926, "obj2": 0.07762525991835141}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( Max( FirstVNF_RAM,( AMS * ( RRS / ARS ) ) ) - ( Max( FirstVNF_RAM_Server,Min( Const ,MDR ) ) - ARS ) ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM - RMSe ),Min( MUM ,DS ) ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.5574074074074075, "obj2": 0.35736003442161585}, {"determining": "Min( ( PN - ( MDR * FirstVNF_CPU_Server ) ) ,( ( ( ( CRS / FirstVNF_CPU_Server ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS - FirstVNF_CPU_Server ) ) ) + AMS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * ( DS + Max( ( ( Min( ( DS / MUR ) ,Max( RMSe,DS ) ) * MUR ) - MUM ),MUC ) ) ) )", "obj1": 0.75, "obj2": 0.11008955661634642}, {"determining": "( ( Min( ACS ,Max( MRS,( Min( FirstVNF_CPU ,( ( FirstVNF_CPU + RRS ) * FirstVNF_CPU ) ) / AMS ) ) ) * Max( FirstVNF_Mem_Server,( ACS + ( FirstVNF_RAM_Server + RRS ) ) ) ) * ( Min( FirstVNF_Mem ,Max( FirstVNF_RAM,Min( FirstVNF_RAM ,FirstVNF_RAM_Server ) ) ) / ( MRS / RRS ) ) )", "choosing": "( Min( RMSe ,Max( CS,Max( ( RMSe / ( Min( MUM ,( RRSe / CS ) ) / DS ) ),MUR ) ) ) - ( ( RCSe * ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) ) - Min( RCSe ,RMSe ) ) )", "obj1": 0.6314814814814815, "obj2": 0.30668642235754867}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( RMSe / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3425925925925926, "obj2": 0.5509843720476356}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_RAM_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( RMSe / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) - RMSe ) )", "obj1": 0.34074074074074073, "obj2": 0.5515764564004114}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( ( ( FirstVNF_CPU_Server / Const ) * ( MRS + Max( FirstVNF_Mem,( FirstVNF_Mem - MDR ) ) ) ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "Min( ( ( CS + MUR ) + ( Min( RMSe ,Min( RRSe ,( MUM + ( ( CS / CS ) * MUR ) ) ) ) - ( ( DS * DS ) - Min( MUR ,MLU ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13518518518518519, "obj2": 0.7673226067125698}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( PN - FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( Max( BR,MRS ) * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( ( MLU * RCSe ) / ( MUR / MUR ) ) * ( MUM * MUR ) ) - ( RCSe * CS ) )", "obj1": 0.912962962962963, "obj2": 0.05728691393520541}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_Mem_Server - Max( CRS,FirstVNF_RAM_Server ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ,( DDR - ( DDR * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - MUC ) + ( CS - Min( ( RMSe / ( RRSe + ( CS / RCSe ) ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( ( CS - ( MUR * MUC ) ) - RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.726075196308536}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( Max( PN,FirstVNF_Mem_Server ) + DDR ) ) ) ) ) ,( FirstVNF_RAM_Server + AMS ) ) )", "choosing": "Min( ( ( MUM + ( Min( Min( ( CS + MUC ) ,( RCSe - MUM ) ) ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.32222222222222224, "obj2": 0.5648214378502597}], "10": [{"determining": "( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM - CS ),Min( MUM ,DS ) ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( Min( ( MUC - RMSe ) ,( MUC / RCSe ) ) - DS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( MRS ,( ( FirstVNF_Mem_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( ( Min( ( RMSe / ( ( DS * ( CS / CS ) ) / DS ) ) ,MUM ) / RCSe ) / ( Min( RMSe ,( ( ( RCSe + RRSe ) / Max( RMSe,( MUR - CS ) ) ) * RCSe ) ) / MUM ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8196526582955194}, {"determining": "( ACS - ( ( ( ACS / Const ) + FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16122431568020215}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - Max( Min( BR ,FirstVNF_CPU ),( CRS - MRS ) ) ) / ( MRS / RRS ) ) ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,( Max( ( PN / FirstVNF_RAM_Server ),( MRS * Const ) ) - ( ( BR - MRS ) / Min( MRS ,AMS ) ) ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.674074074074074, "obj2": 0.2574467136715431}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( ( MUC + RCSe ) * RRSe ) )", "obj1": 0.42592592592592593, "obj2": 0.3898428215183048}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM - RMSe ),CS ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.5388888888888889, "obj2": 0.3778121032653713}, {"determining": "Min( ( MDR / Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( FirstVNF_Mem_Server + MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( RRSe * ( ( ( ( ( MUR - RMSe ) + RRSe ) * RRSe ) / RCSe ) - ( RCSe - Max( ( RRSe + RMSe ),Min( Min( RCSe ,Max( MUC,RCSe ) ) ,( RRSe / MLU ) ) ) ) ) ) )", "obj1": 0.4222222222222222, "obj2": 0.4882302972312028}, {"determining": "Min( ( DDR * MDR ) ,PN )", "choosing": "Min( MUR ,Min( CS ,MLU ) )", "obj1": 0.43148148148148147, "obj2": 0.3854869364865654}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6166666666666667, "obj2": 0.291754905689944}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8740740740740741, "obj2": 0.052212236958366666}, {"determining": "( ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) - Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) - ( ACS - Max( ARS,ARS ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( CS * Max( ( ( RMSe * RMSe ) * MLU ),( RCSe * Min( CS ,RRSe ) ) ) ) * ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.14145488407215065}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) - Max( ( ( Min( ACS ,Min( RRS ,ARS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ),Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9222222222222223, "obj2": 0.049582974127865116}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * RMSe ) * RRSe ) )", "obj1": 0.6425925925925926, "obj2": 0.27531947511290267}, {"determining": "Min( ( Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) ) + MUC ) ,( RCSe - MUM ) )", "obj1": 0.8666666666666667, "obj2": 0.06273944607119028}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "Min( ( Min( Max( MUC,Min( RCSe ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12962962962962962, "obj2": 0.77328780041106}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.12222222222222222, "obj2": 0.8087573921027216}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "Min( ( FirstVNF_Mem - ARS ) ,( Min( ( ( CRS + FirstVNF_Mem_Server ) * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,( CRS * ARS ) ) * MDR ) )", "choosing": "Min( ( RMSe - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( ( Min( RMSe ,MUR ) * Max( CS,CS ) ) - DS ) ) )", "obj1": 0.2962962962962963, "obj2": 0.5940370419543175}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - AMS ) ) * MDR ) )", "choosing": "Min( ( DS - ( ( CS + MUM ) * RRSe ) ) ,Min( RRSe ,DS ) )", "obj1": 0.3851851851851852, "obj2": 0.5020592330791918}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.18333333333333332, "obj2": 0.7180967485470452}, {"determining": "( ( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server / ACS ) ) * Max( Min( ARS ,( ARS * Min( PN ,( BR / MDR ) ) ) ),( ( FirstVNF_Mem_Server - DDR ) + RRS ) ) )", "choosing": "Min( ( ( CS + MUR ) + ( ( DS + ( CS * ( ( ( RMSe * MUC ) * MLU ) - RRSe ) ) ) - ( ( DS * DS ) - Min( MUR ,MLU ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5537037037037037, "obj2": 0.3633843540290229}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_Mem_Server - Max( CRS,FirstVNF_RAM_Server ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ,( DDR - ( DDR * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - MUC ) + ( CS - Min( ( RMSe / ( RRSe + ( CS / RCSe ) ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( ( CS - ( MUR * MUC ) ) - RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.726075196308536}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( Min( PN ,MDR ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( CS - RMSe ) )", "obj1": 0.35185185185185186, "obj2": 0.5310983948639003}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1648148148148148, "obj2": 0.7334244812052835}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - Max( Min( BR ,FirstVNF_CPU ),( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.2, "obj2": 0.7001475526007079}, {"determining": "Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) )", "choosing": "Min( ( ( MUC * MUM ) - MUC ) ,( ( Max( MLU,MUM ) + RCSe ) * MLU ) )", "obj1": 0.2074074074074074, "obj2": 0.6899683710474882}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.3388888888888889, "obj2": 0.5455008362027086}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.7592592592592593, "obj2": 0.10750292405128344}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Max( FirstVNF_RAM_Server,ARS ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,Min( ( ( MUC - ( MUM - DS ) ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.3552353703276665}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.6037037037037037, "obj2": 0.31436067106181675}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( ACS * MDR ) ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( Max( ( MUM + RMSe ),CS ) ,RCSe ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) ) - Max( ( MUR * MLU ),RMSe ) ) )", "obj1": 0.5425925925925926, "obj2": 0.3761595842769802}, {"determining": "Min( ( Max( AMS,PN ) - MDR ) ,PN )", "choosing": "Min( Max( ( ( RMSe * MUM ) - MUR ),( MUR * RMSe ) ) ,( CS + MUC ) )", "obj1": 0.22592592592592592, "obj2": 0.6641024019853212}, {"determining": "Min( ( FirstVNF_Mem - DDR ) ,Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RCSe ,RRSe ) + ( ( MUR / Max( RRSe,( DS + RRSe ) ) ) - ( Min( DS ,DS ) - RMSe ) ) ) ,( DS * MLU ) )", "obj1": 0.37222222222222223, "obj2": 0.5235866818486378}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server + RRS ) ) ,( ( Const + FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) * ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS + Max( Max( ( RRSe + ( MLU / RRSe ) ),MLU ),DS ) ) ,MUC ),( RMSe + MUM ) ) * ( MUC - Max( DS,( CS * RRSe ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6327998962146747}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( ACS * MDR ) ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( DS,( MUR * RRSe ) ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( MUR + MUC ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6462346028783781}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( ( ( ( RMSe * RCSe ) * ( MUR + RRSe ) ) * MUR ) * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "( ( FirstVNF_RAM_Server / ( ( MDR * FirstVNF_RAM ) / ( CRS + PN ) ) ) - ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + ( ( Max( PN,FirstVNF_RAM_Server ) / ( MDR - PN ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( CS ,RCSe ) / MLU ) + ( MUC / MUM ) ) / ( MUM * ( ( MUR - ( ( CS / MUM ) * Max( Min( ( MUM - MUR ) ,Min( MUC ,MUM ) ),RMSe ) ) ) - DS ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12950576820044085}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) + Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( Min( MDR ,FirstVNF_CPU_Server ) - ACS ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( MUC / ( RMSe - MUM ) ) - MUC ) ) + Max( ( Min( ( MLU - MLU ) ,MUC ) + MUM ),DS ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.662962962962963, "obj2": 0.2617804797395104}, {"determining": "Min( PN ,( Max( ( ACS - ( FirstVNF_Mem - ACS ) ),RRS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( Min( ( RMSe / ( RRSe - RCSe ) ) ,Max( ( MUC * ( MUC - MUR ) ),( Max( MUM,MLU ) / Min( MUR ,MUM ) ) ) ),MUR ),MUM ) - CS ) ,( RCSe + RMSe ) )", "obj1": 0.3314814814814815, "obj2": 0.5532497380617339}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,PN ) ) + ( Min( ( FirstVNF_Mem - MDR ) ,PN ) / ( ( FirstVNF_RAM / CRS ) - ( ARS + ARS ) ) ) )", "choosing": "Min( ( ( CS + MUR ) + ( Min( RMSe ,Min( RRSe ,( MUM + ( ( CS / CS ) * MUR ) ) ) ) - ( ( ( ( MUR - RMSe ) + RRSe ) * DS ) - Min( MUR ,MLU ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.14074074074074075, "obj2": 0.7648173450258378}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7685185185185185, "obj2": 0.10016920279479033}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( ( ( Min( DS ,MUR ) / CS ) / MUM ) * RRSe ) - Min( ( RMSe / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.01920877684120574}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,RRS ) ) + ( AMS - ( ( ( Min( Min( CRS ,FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( Min( ( ( RMSe - ( ( Max( ( CS + CS ),MUR ) / ( RRSe + RRSe ) ) - ( MLU * DS ) ) ) - DS ) ,( ( MUM / MLU ) - Min( ( ( CS + MUM ) * RRSe ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - Min( MUC ,MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7561007082065614}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * RMSe ) * RRSe ) )", "obj1": 0.7129629629629629, "obj2": 0.13970712647108194}, {"determining": "( ( AMS + FirstVNF_RAM ) - Min( ( ARS / FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,( CRS / Max( BR,Max( RRS,( FirstVNF_RAM_Server * AMS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( RMSe + RRSe ) ,( ( RRSe * CS ) / ( MLU * MLU ) ) ) ,DS ) / RMSe ) + ( MUR / Min( Max( ( CS / ( MUR / MUR ) ),RRSe ) ,MUR ) ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.4, "obj2": 0.49935639865506215}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.26851851851851855, "obj2": 0.6079361356050252}, {"determining": "( Max( FirstVNF_RAM,Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) ) - ( AMS - ( ( Max( FirstVNF_RAM_Server,ARS ) + ( RRS / FirstVNF_Mem ) ) - Min( ( PN + DDR ) ,( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) )", "obj1": 0.587037037037037, "obj2": 0.330514570725142}, {"determining": "Min( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + Min( ( RRS - MRS ) ,( ACS * MDR ) ) ) ) - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Max( ( RMSe / ( Min( MUM ,( RRSe / CS ) ) / DS ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.575925925925926, "obj2": 0.3345828796263145}, {"determining": "Min( Min( FirstVNF_Mem ,MDR ) ,( ( FirstVNF_CPU_Server + AMS ) + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MLU ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( ( RCSe + RRSe ) ,Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + ( MUR * RMSe ) ),RMSe ) ) ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6779156083776935}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12134408016947361}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( MUM ,( MLU - MUM ) )", "obj1": 0.9703703703703703, "obj2": 0.012520769298021388}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "Min( ( ( FirstVNF_CPU - FirstVNF_CPU ) - Min( Min( ( ARS + FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,Min( BR ,RRS ) )", "choosing": "Min( ( ( MLU * MUR ) - MUM ) ,( RRSe * ( ( ( ( ( MUR - RMSe ) + RRSe ) * ( RMSe - MLU ) ) / RCSe ) - ( RCSe - Max( ( RRSe + RMSe ),Min( Min( MLU ,( MUC / RCSe ) ) ,( RRSe / MLU ) ) ) ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5710939407271012}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( CS,Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.6037037037037037, "obj2": 0.31436067106181675}, {"determining": "Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( DDR * MDR ) )", "choosing": "( Min( Min( ( RCSe - MUM ) ,( ( CS + RRSe ) / MUM ) ) ,( ( MUM / MUC ) + Min( RMSe ,RMSe ) ) ) + ( Min( ( MUM - ( Min( Min( Min( MUR ,MUC ) ,( RMSe / RRSe ) ) ,RRSe ) * RRSe ) ) ,DS ) / Min( Max( MUM,( RRSe * ( ( MLU + MUC ) + RMSe ) ) ) ,Min( RCSe ,RRSe ) ) ) )", "obj1": 0.7925925925925926, "obj2": 0.0905071765415725}, {"determining": "Min( ( PN * ( MRS / ARS ) ) ,Min( MRS ,PN ) )", "choosing": "Min( ( RRSe / ( Max( ( ( Max( ( CS + MUC ),CS ) - ( MUR / ( RCSe / RRSe ) ) ) * ( MUM + ( ( CS + MUR ) - Max( MLU,MUR ) ) ) ),Min( CS ,DS ) ) + RRSe ) ) ,( ( RMSe - MUR ) - DS ) )", "obj1": 0.26666666666666666, "obj2": 0.6254711496288161}, {"determining": "( ( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,Max( Const,FirstVNF_Mem ) ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( MDR ,FirstVNF_RAM_Server ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( Max( ( MUR / MUC ),DS ),Max( DS,( MUR * RRSe ) ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( MUR + MUC ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.9537037037037037, "obj2": 0.030524603352081847}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( MUC ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.4074074074074074, "obj2": 0.49256593423885836}, {"determining": "Min( ( Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) ) + MUC ) ,( RCSe - MUM ) )", "obj1": 0.8666666666666667, "obj2": 0.06273944607119028}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.741894801533086}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,Min( ( PN - Max( ( FirstVNF_RAM / AMS ),BR ) ) ,( Min( Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,ACS ) ) ,BR ) ) ,Min( CRS ,AMS ) ) + AMS ) ) )", "choosing": "( Max( Max( MUM,RRSe ),RMSe ) * ( MLU + Max( ( CS * ( ( RRSe * MUC ) / CS ) ),CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5615803647588821}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.5925925925925926, "obj2": 0.32822773527656934}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.7388888888888889, "obj2": 0.11807629015920318}, {"determining": "Min( ( PN - Min( ( ( FirstVNF_RAM * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( AMS + ( FirstVNF_CPU + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUR + DS ) - Max( CS,( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ,( MLU - MUM ) )", "obj1": 0.9833333333333333, "obj2": 0.006875829048437561}, {"determining": "( ( ( FirstVNF_Mem * MRS ) - ( ( ACS - CRS ) - Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( FirstVNF_RAM,( Max( FirstVNF_CPU,( MDR + FirstVNF_RAM_Server ) ) + Const ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,RMSe ) / MUC ) / DS ) / RCSe ) - CS ) / RRSe ) - MUM )", "obj1": 0.27037037037037037, "obj2": 0.6069621365481602}, {"determining": "Max( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04066129550475484}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.12222222222222222, "obj2": 0.8087573921027216}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( MUC ,( MUR - Min( MUR ,RMSe ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7445626692727239}, {"determining": "Min( ( FirstVNF_Mem - Max( PN,( MDR + ( ( ( ACS * FirstVNF_RAM ) + FirstVNF_RAM_Server ) * AMS ) ) ) ) ,( Max( FirstVNF_CPU,FirstVNF_RAM_Server ) / ( MRS * RRS ) ) )", "choosing": "Min( ( CS + ( Max( RRSe,MUR ) + ( ( RRSe - MUC ) - RMSe ) ) ) ,( RCSe / MUM ) )", "obj1": 0.22962962962962963, "obj2": 0.6576607381025118}, {"determining": "Min( ( ( ( Min( FirstVNF_CPU ,CRS ) - ( FirstVNF_RAM - DDR ) ) + ( FirstVNF_RAM_Server * ( FirstVNF_RAM_Server + AMS ) ) ) + Max( ARS,CRS ) ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( BR * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - MUM ) ,Max( ( ( ( CS + MUC ) * RRSe ) * RRSe ),RRSe ) )", "obj1": 0.3074074074074074, "obj2": 0.581992489034296}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - AMS ) ,( ( FirstVNF_RAM_Server - FirstVNF_CPU_Server ) / PN ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - ( ( CS + CS ) * RRSe ) ) * ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7851851851851852, "obj2": 0.0938798056386573}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "( Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.65, "obj2": 0.27396466018289667}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.37222222222222223, "obj2": 0.5235866818486378}, {"determining": "Min( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) ) ) ) - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * MUM ) )", "obj1": 0.5740740740740741, "obj2": 0.34030988356305875}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - DDR ) - Min( FirstVNF_CPU ,MDR ) ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.6, "obj2": 0.3234113589823941}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) )", "choosing": "Min( ( ( ( MUR / Max( RRSe,( DS / RRSe ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.34629629629629627, "obj2": 0.5386157981313708}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( ACS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( ( FirstVNF_RAM_Server + ( BR * Max( FirstVNF_Mem,BR ) ) ),( PN + DDR ) ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( RRSe,( DS / RRSe ) ) ) + Max( Min( ( RCSe - MUM ) ,( ( Max( CS,CS ) * RMSe ) * RRSe ) ),DS ) ) - CS ) ,( MLU - MUM ) )", "obj1": 0.6574074074074074, "obj2": 0.26812816396445843}, {"determining": "( ( Min( RRS ,AMS ) * ( CRS - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( RRS,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + ( ( ARS * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "Min( ( MLU - DS ) ,Min( RMSe ,Max( MUR,Max( Max( Min( MUR ,MLU ),RRSe ),RMSe ) ) ) )", "obj1": 0.95, "obj2": 0.03685426129155546}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ARS / ARS ) ,( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS + RMSe ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12604390022447157}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) - Max( ( ( Min( ACS ,Min( RRS ,ARS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ),Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7685185185185185, "obj2": 0.10016920279479033}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( ( RRS / RRS ) - DDR ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( Max( ARS,FirstVNF_CPU ) * ( DDR - FirstVNF_Mem ) ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,MUM ) / ( MUR / MUR ) ) * ( MUM * MUR ) ) - ( RCSe * ( MUR / DS ) ) )", "obj1": 0.9296296296296296, "obj2": 0.04487705597643182}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( ( ( Min( DS ,MUR ) / CS ) / MUM ) * RRSe ) - Min( ( RMSe / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) ) )", "obj1": 0.9555555555555556, "obj2": 0.021379034719720583}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( RRS + ( Max( BR,ACS ) - MDR ) ) ,FirstVNF_Mem_Server ) ,( BR * Max( FirstVNF_Mem,BR ) ) ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * RMSe ) * RRSe ) )", "obj1": 0.30185185185185187, "obj2": 0.5846143406395945}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + RRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - ( ( ( DS / DS ) * Min( RCSe ,( MUM * RCSe ) ) ) - CS ) ) ) - CS ) ,( MUC - RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.6536153881827769}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * CS ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8185185185185185, "obj2": 0.07808890916536278}, {"determining": "Min( ( ( Max( DDR,FirstVNF_Mem_Server ) - Const ) / MDR ) ,( Min( Min( ( FirstVNF_Mem - Min( MRS ,FirstVNF_RAM_Server ) ) ,PN ) ,FirstVNF_RAM_Server ) * MDR ) )", "choosing": "Min( ( MUC / RRSe ) ,( MUC - ( Max( ( CS + MUR ),( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) ) + RRSe ) ) )", "obj1": 0.3296296296296296, "obj2": 0.5602798579096261}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( FirstVNF_CPU ,( ( ARS * Max( RRS,( ARS + BR ) ) ) * ( FirstVNF_Mem_Server * AMS ) ) ) * MDR ) )", "choosing": "Min( ( Min( DS ,Min( Min( Max( ( ( MUC + RRSe ) * Min( RMSe ,DS ) ),( MUC / ( DS / MUM ) ) ) ,MLU ) ,MUR ) ) - CS ) ,( RCSe - ( ( CS - ( RRSe * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.49699880026182114}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( ( Min( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8092592592592592, "obj2": 0.08139561237176345}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) + Min( ( DDR * ( RRS * MDR ) ) ,FirstVNF_CPU_Server ) ) ,PN ) ,MRS ) * MDR ) )", "choosing": "( Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( MUC - RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MUC * RCSe ) * MUM ) ) * ( ( MLU + MUC ) * RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5758419068590378}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "Min( ( Min( Max( MUC,Min( RCSe ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12962962962962962, "obj2": 0.77328780041106}, {"determining": "Min( ( PN - ( MDR * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + AMS ) )", "choosing": "Min( ( CS + ( ( MUR / Max( RRSe,( DS / RRSe ) ) ) + ( Min( DS ,DS ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.75, "obj2": 0.11008955661634642}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.43148148148148147, "obj2": 0.3854869364865654}, {"determining": "( Min( ( ACS + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( ( FirstVNF_Mem - FirstVNF_Mem_Server ) - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( ( RCSe - MUR ) * MUC ) * Max( ( MLU + MUC ),RMSe ) ) ) ,Max( RCSe,RRSe ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11432382588499772}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( ( MDR + FirstVNF_CPU ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe + ( Min( Max( Min( MLU ,MLU ),MUC ) ,( Min( MUR ,MUC ) - ( DS / DS ) ) ) - ( ( MUM - CS ) + Min( ( CS / MUC ) ,MUM ) ) ) ) - MLU ) - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "Min( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + Min( ( FirstVNF_Mem - MRS ) ,( ACS * MDR ) ) ) ) - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * MUM ) )", "obj1": 0.5648148148148148, "obj2": 0.34661481854040893}], "11": [{"determining": "( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( Const - ARS ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM / CS ),Min( MUC ,DS ) ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM - CS ),Min( MUM ,DS ) ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( MRS ,( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.815029032477694}, {"determining": "Min( ( ( DDR - ( ( PN - ARS ) + ( Max( PN,DDR ) + PN ) ) ) - Min( ACS ,BR ) ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( ( RMSe - CS ) ,( Max( ( RRSe * MUR ),RMSe ) * Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34171287553956675}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.19765027497594717}, {"determining": "( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( ( ( RRS / RRS ) - ( FirstVNF_CPU_Server + PN ) ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( PN + DDR ) ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * RMSe ) * RRSe ) )", "obj1": 0.6425925925925926, "obj2": 0.27531947511290267}, {"determining": "( ACS - ( ( ( ACS / Const ) + FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16122431568020215}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "Min( ( ( Max( ( ( Min( MLU ,( MLU + DS ) ) + MUM ) - MUM ),RCSe ) + ( ( DS / DS ) - RMSe ) ) + CS ) ,( RCSe - MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.470418194237868}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6166666666666667, "obj2": 0.291754905689944}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ARS * ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( ( MUC + Min( DS ,DS ) ) * RRSe ) )", "obj1": 0.42407407407407405, "obj2": 0.39024890655126193}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.43148148148148147, "obj2": 0.3854869364865654}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( Max( ( ( BR - ( PN + BR ) ) / Min( MRS ,Const ) ),( BR + FirstVNF_Mem ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( Min( ( DS / RRSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8888888888888888, "obj2": 0.04696096712064489}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( ( RRS / RRS ) - DDR ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( Max( ARS,FirstVNF_CPU ) * ( DDR - FirstVNF_Mem ) ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,MUM ) / ( MUR / MUR ) ) * ( MUM * MUR ) ) - ( RCSe * ( MUR / DS ) ) )", "obj1": 0.9296296296296296, "obj2": 0.04487705597643182}, {"determining": "( ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) - Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) - ( ACS - Max( ARS,ARS ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( CS * Max( ( ( RMSe * RMSe ) * MLU ),( RCSe * Min( CS ,RRSe ) ) ) ) * ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.14145488407215065}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( DS,( MUR * RRSe ) ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( MUR + MUC ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.8537037037037037, "obj2": 0.06312780598731774}, {"determining": "Min( ( DDR * MDR ) ,PN )", "choosing": "Min( MUR ,Min( CS ,MLU ) )", "obj1": 0.43148148148148147, "obj2": 0.3854869364865654}, {"determining": "Min( ( ( ( CRS / ( Max( DDR,( ( FirstVNF_Mem + ARS ) - BR ) ) * RRS ) ) * FirstVNF_CPU_Server ) - DDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Const - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - CS ) + ( MUR / ( RMSe - ( MUM - ( DS / Max( DS,DS ) ) ) ) ) ) - CS ) ,( ( RMSe / RMSe ) - RMSe ) )", "obj1": 0.1259259259259259, "obj2": 0.8053647969630869}, {"determining": "Min( ( FirstVNF_Mem - ARS ) ,( Min( ( ( CRS + FirstVNF_Mem_Server ) * Min( CRS ,( FirstVNF_Mem + FirstVNF_RAM ) ) ) ,( CRS * ARS ) ) * MDR ) )", "choosing": "Min( ( RMSe - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( ( Min( RMSe ,MUR ) * Max( CS,CS ) ) - DS ) ) )", "obj1": 0.2962962962962963, "obj2": 0.5940370419543175}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) / AMS ) )", "choosing": "Min( ( Min( ( Min( RCSe ,MUR ) + MUC ) ,Min( RCSe ,MLU ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12962962962962962, "obj2": 0.77328780041106}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6166666666666667, "obj2": 0.291754905689944}, {"determining": "Min( ( MDR / Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) ) ,( ( ( FirstVNF_Mem + RRS ) + ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( ( FirstVNF_RAM_Server * ACS ) + FirstVNF_Mem_Server ) ) / ( ( FirstVNF_RAM / FirstVNF_RAM_Server ) + ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / AMS ) ) ) ) ) ) * MDR ) )", "choosing": "Min( Max( Min( Max( ( MLU - ( ( ( MLU * MUC ) - Min( RCSe ,RRSe ) ) / MUR ) ),( CS * ( ( RMSe - ( DS * DS ) ) + CS ) ) ) ,( ( RMSe / MUC ) - Max( Max( MLU,Min( ( MUR + MUM ) ,Max( MUR,MUR ) ) ),RRSe ) ) ),RMSe ) ,Max( MLU,RRSe ) )", "obj1": 0.4166666666666667, "obj2": 0.49253991726924773}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_Mem_Server - Max( CRS,FirstVNF_RAM_Server ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ,( DDR - ( DDR * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - MUC ) + ( CS - Min( ( RMSe / ( RRSe + ( CS / RCSe ) ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( ( CS - ( MUR * MUC ) ) - RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.726075196308536}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( Min( PN ,MDR ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( CS - RMSe ) )", "obj1": 0.35185185185185186, "obj2": 0.5310983948639003}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1648148148148148, "obj2": 0.7334244812052835}, {"determining": "Min( ( FirstVNF_Mem - ACS ) ,( ( ( FirstVNF_CPU + RRS ) - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( FirstVNF_RAM_Server ,MDR ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( Max( RMSe,( RCSe * MUC ) ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.6785880527353637}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.3388888888888889, "obj2": 0.5455008362027086}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) / ( ACS * MDR ) ) ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( DS,( MUR * RRSe ) ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( MUR + MUC ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6462346028783781}, {"determining": "( Max( ( DDR - FirstVNF_CPU_Server ),Max( MRS,RRS ) ) + ( AMS - ( ( ( Min( Min( CRS ,FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) )", "choosing": "( Min( ( ( RMSe - ( ( Max( ( CS + CS ),MUR ) / ( RRSe + RRSe ) ) - ( MLU * DS ) ) ) - DS ) ,( ( MUM / MLU ) - Min( ( ( CS + MUM ) * RRSe ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - Min( MUC ,MUM ) ) * Max( ( MLU + MUR ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7561007082065614}, {"determining": "Min( ( PN * ( MRS / ARS ) ) ,Min( MRS ,PN ) )", "choosing": "Min( ( RRSe / ( Max( ( ( Max( ( CS + MUC ),CS ) - ( MUR / ( RCSe / RRSe ) ) ) * ( MUM + ( ( CS + MUR ) - Max( MLU,MUR ) ) ) ),Min( CS ,DS ) ) + RRSe ) ) ,( ( RMSe - MUR ) - DS ) )", "obj1": 0.26666666666666666, "obj2": 0.6254711496288161}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + Min( MUC ,( MUR - Min( MUR ,RMSe ) ) ) ) ) )", "obj1": 0.24444444444444444, "obj2": 0.6501311251944105}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe + ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6735674158465725}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server + RRS ) ) ,( ( Const + FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) * ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS + Max( Max( ( RRSe + ( MLU / RRSe ) ),MLU ),DS ) ) ,MUC ),( RMSe + MUM ) ) * ( MUC - Max( DS,( CS * RRSe ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6327998962146747}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - Max( Min( BR ,FirstVNF_CPU ),( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.2, "obj2": 0.7001475526007079}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) - Max( ( ( Min( ACS ,Min( ( ( FirstVNF_RAM * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) / ( MDR - PN ) ) * FirstVNF_CPU ),Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * MUC ) ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.975925925925926, "obj2": 0.005883673858901141}, {"determining": "Min( ( FirstVNF_Mem - DDR ) ,Max( ARS,FirstVNF_RAM_Server ) )", "choosing": "Min( ( Min( RCSe ,RRSe ) + ( ( MUR / Max( RRSe,( DS + RRSe ) ) ) - ( Min( DS ,DS ) - RMSe ) ) ) ,( DS * MLU ) )", "obj1": 0.37222222222222223, "obj2": 0.5235866818486378}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( MUC ,( MUR - Min( MUR ,RMSe ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7445626692727239}, {"determining": "( ( FirstVNF_RAM_Server / ( ( MDR * FirstVNF_RAM ) / ( CRS + PN ) ) ) - ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + ( ( Max( PN,FirstVNF_RAM_Server ) / ( MDR - PN ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( CS ,RCSe ) / MLU ) + ( MUC / MUM ) ) / ( MUM * ( ( MUR - ( ( CS / MUM ) * Max( Min( ( MUM - MUR ) ,Min( MUC ,MUM ) ),RMSe ) ) ) - DS ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12950576820044085}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "Min( PN ,( Max( ( ACS - ( FirstVNF_Mem - ACS ) ),RRS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( Min( ( RMSe / ( RRSe - RCSe ) ) ,Max( ( MUC * ( MUC - MUR ) ),( Max( MUM,MLU ) / Min( MUR ,MUM ) ) ) ),MUR ),MUM ) - CS ) ,( RCSe + RMSe ) )", "obj1": 0.3314814814814815, "obj2": 0.5532497380617339}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( ( ( ( RMSe * RCSe ) * ( MUR + RRSe ) ) * MUR ) * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Max( ( RMSe / ( Min( MUM ,( RRSe / CS ) ) / DS ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9574074074074074, "obj2": 0.01918446178045994}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS + RMSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5828995272950852}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * RMSe ) * RRSe ) )", "obj1": 0.7129629629629629, "obj2": 0.13970712647108194}, {"determining": "Max( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04066129550475484}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.26851851851851855, "obj2": 0.6079361356050252}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8740740740740741, "obj2": 0.052212236958366666}, {"determining": "Min( ( ( FirstVNF_CPU - FirstVNF_CPU ) - Min( Min( ( ARS + FirstVNF_RAM ) ,( FirstVNF_Mem - FirstVNF_CPU_Server ) ) ,FirstVNF_CPU ) ) ,Min( BR ,RRS ) )", "choosing": "Min( ( ( MLU * MUR ) - MUM ) ,( RRSe * ( ( ( ( ( MUR - RMSe ) + RRSe ) * ( RMSe - MLU ) ) / RCSe ) - ( RCSe - Max( ( RRSe + RMSe ),Min( Min( MLU ,( MUC / RCSe ) ) ,( RRSe / MLU ) ) ) ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5710939407271012}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + RRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - ( ( ( DS / DS ) * Min( RCSe ,( MUM * RCSe ) ) ) - CS ) ) ) - CS ) ,( MUC - RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.6536153881827769}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( Min( ( RRS - BR ) ,( ACS * MDR ) ) * FirstVNF_CPU ) + Min( Min( RRS ,RRS ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe - MUM ) * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( ( ( RMSe / Min( DS ,MUR ) ) / MUM ) * RRSe ) - Min( ( RMSe / ( MUC + MUC ) ) ,( RCSe + MUM ) ) ) ) ) )", "obj1": 0.9537037037037037, "obj2": 0.023093106569443293}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.741894801533086}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.18333333333333332, "obj2": 0.7180967485470452}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,Min( ( PN - Max( ( FirstVNF_RAM / AMS ),BR ) ) ,( Min( Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,ACS ) ) ,BR ) ) ,Min( CRS ,AMS ) ) + AMS ) ) )", "choosing": "( Max( Max( MUM,RRSe ),RMSe ) * ( MLU + Max( ( CS * ( ( RRSe * MUC ) / CS ) ),CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5615803647588821}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - AMS ) ) * MDR ) )", "choosing": "Min( ( DS - ( ( CS + MUM ) * RRSe ) ) ,Min( RRSe ,DS ) )", "obj1": 0.3851851851851852, "obj2": 0.5020592330791918}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * MDR ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5032160247689045}, {"determining": "( ( AMS + FirstVNF_RAM ) - Min( ( ARS / FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,( CRS / Max( BR,Max( RRS,( FirstVNF_RAM_Server * AMS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( RMSe + RRSe ) ,( ( RRSe * CS ) / ( MLU * MLU ) ) ) ,DS ) / RMSe ) + ( MUR / Min( Max( ( CS / ( MUR / MUR ) ),RRSe ) ,MUR ) ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.4, "obj2": 0.49935639865506215}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( MUM ,( MLU - MUM ) )", "obj1": 0.9703703703703703, "obj2": 0.012520769298021388}, {"determining": "( ( ( FirstVNF_Mem * MRS ) - ( ( ACS - CRS ) - Max( CRS,FirstVNF_CPU_Server ) ) ) / Max( FirstVNF_RAM,( Max( FirstVNF_CPU,( MDR + FirstVNF_RAM_Server ) ) + Const ) ) )", "choosing": "( ( ( ( ( ( Min( MUC ,RMSe ) / MUC ) / DS ) / RCSe ) - CS ) / RRSe ) - MUM )", "obj1": 0.27037037037037037, "obj2": 0.6069621365481602}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( ( MDR + FirstVNF_CPU ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe + ( Min( Max( Min( MLU ,MLU ),MUC ) ,( Min( MUR ,MUC ) - ( DS / DS ) ) ) - ( ( MUM - CS ) + Min( ( CS / MUC ) ,MUM ) ) ) ) - MLU ) - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - MUM ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "Min( ( PN - ( ( Min( MRS ,AMS ) / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * Min( Max( ( MUM + RMSe ),CS ) ,RCSe ) ) ) ,( RCSe - DS ) )", "obj1": 0.26296296296296295, "obj2": 0.6292511854027324}, {"determining": "( ( Min( PN ,( RRS + ( Max( BR,ACS ) - MDR ) ) ) * ( CRS - MRS ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( RRS,( ( MDR * DDR ) / MDR ) ) ) ) / ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "Min( MUC ,Min( ( MLU - RMSe ) ,Max( MUC,RMSe ) ) )", "obj1": 0.9462962962962963, "obj2": 0.03818998536344049}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) + Min( ( PN + DDR ) ,FirstVNF_CPU_Server ) ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.22962962962962963, "obj2": 0.6572321658631395}, {"determining": "( ( Min( RRS ,AMS ) * ( CRS - FirstVNF_Mem ) ) * ( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( RRS,( Max( FirstVNF_CPU,Min( MDR ,FirstVNF_RAM_Server ) ) + ( ( ARS * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ) ) ) / ( FirstVNF_CPU_Server / RRS ) ) )", "choosing": "Min( ( MLU - DS ) ,Min( RMSe ,Max( MUR,Max( Max( Min( MUR ,MLU ),RRSe ),RMSe ) ) ) )", "obj1": 0.95, "obj2": 0.03685426129155546}, {"determining": "Min( ( PN - ( MDR * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + AMS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.737037037037037, "obj2": 0.11625917254975697}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.37222222222222223, "obj2": 0.5235866818486378}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "Min( ( PN - Min( ( ( FirstVNF_RAM * DDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( ( ( MRS + PN ) / ACS ) * ( MRS * ARS ) ) )", "choosing": "Min( ( ( MUR + Min( MUR ,( CS + MUR ) ) ) - Max( CS,( Max( Max( ( MLU * MLU ),MLU ),RCSe ) * ( MUC - DS ) ) ) ) ,( MLU - ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.0046685366747279316}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.14444444444444443, "obj2": 0.760742704220793}, {"determining": "Min( ( Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) - MDR ) ,PN )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe + ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) )", "obj1": 0.8666666666666667, "obj2": 0.06239454098013223}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.1256214242439029}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.18333333333333332, "obj2": 0.7180967485470452}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) + Min( ( DDR * ( RRS * MDR ) ) ,FirstVNF_CPU_Server ) ) ,PN ) ,MRS ) * MDR ) )", "choosing": "( Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( MUC - RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MUC * RCSe ) * MUM ) ) * ( ( MLU + MUC ) * RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5758419068590378}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC * MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7833333333333333, "obj2": 0.09430784110526343}, {"determining": "Min( ( PN - ( ( CRS * FirstVNF_RAM_Server ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( MUC ,( MUR - Min( MUR ,( MUC - ( MUC * MUM ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.13333333333333333, "obj2": 0.7701740935373463}, {"determining": "Min( ( ( Max( DDR,FirstVNF_Mem_Server ) - Const ) / MDR ) ,( Min( Min( ( FirstVNF_Mem - Min( MRS ,FirstVNF_RAM_Server ) ) ,PN ) ,FirstVNF_RAM_Server ) * MDR ) )", "choosing": "Min( ( MUC / RRSe ) ,( MUC - ( Max( ( CS + MUR ),( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) ) + RRSe ) ) )", "obj1": 0.3296296296296296, "obj2": 0.5602798579096261}, {"determining": "Min( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUM - CS ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - RMSe ) ) * RRSe ) * RRSe ),RRSe ) )", "obj1": 0.8185185185185185, "obj2": 0.07808248726448583}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.1962962962962963, "obj2": 0.7047679119846215}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( ( MUC + RCSe ) * RRSe ) )", "obj1": 0.7296296296296296, "obj2": 0.12036787278260185}, {"determining": "Min( ( Max( AMS,PN ) - MDR ) ,PN )", "choosing": "Min( Max( ( ( RMSe * MUM ) - MUR ),( MUR * RMSe ) ) ,( CS + MUC ) )", "obj1": 0.22592592592592592, "obj2": 0.6641024019853212}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7685185185185185, "obj2": 0.10016920279479032}, {"determining": "Min( ( MDR / Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) ) ,Min( BR ,RRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * MUM ) )", "obj1": 0.31296296296296294, "obj2": 0.5785558837874767}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( MUC ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.4074074074074074, "obj2": 0.49256593423885836}, {"determining": "Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( DDR - ( AMS + ( MDR / MDR ) ) ) / CRS ) - ( Min( CRS ,( FirstVNF_Mem_Server / Max( RRS,ACS ) ) ) - CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( ( FirstVNF_Mem * Max( ( PN + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Min( RMSe ,RCSe ) ,MLU ) - MUC ) ,( RCSe - RMSe ) )", "obj1": 0.22407407407407406, "obj2": 0.6655465767210784}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( FirstVNF_Mem ,( FirstVNF_CPU_Server - ( DDR + ARS ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + ( Max( CS,DS ) + ( MUM / RCSe ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6779156083776935}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( Min( PN ,MDR ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( Max( ( MUM + RMSe ),CS ) ,RCSe ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) ) - Max( ( MUR * MLU ),RMSe ) ) )", "obj1": 0.35, "obj2": 0.534412229603984}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( CS + MUC ) ,( RCSe - MUM ) )", "obj1": 0.825925925925926, "obj2": 0.07762525991835141}, {"determining": "Min( PN ,( Max( ( ACS - ( ( FirstVNF_RAM_Server * DDR ) / FirstVNF_Mem ) ),RRS ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "Min( ( Max( ( Min( ( RMSe / ( RRSe - RCSe ) ) ,Max( ( MUC * ( MLU / MUR ) ),RCSe ) ) / MUR ),MUM ) - ( MLU * MLU ) ) ,( RCSe + RMSe ) )", "obj1": 0.9944444444444445, "obj2": 0.0022517116079811476}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / FirstVNF_RAM ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7661670561443984}, {"determining": "Min( ( Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) ) + MUC ) ,( RCSe - MUM ) )", "obj1": 0.8703703703703703, "obj2": 0.06032646941077135}, {"determining": "Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( DDR * MDR ) )", "choosing": "( Min( Min( ( RCSe - MUM ) ,( ( CS + RRSe ) / MUM ) ) ,( ( MUM / MUC ) + Min( RMSe ,RMSe ) ) ) + ( Min( ( MUM - ( Min( Min( Min( MUR ,MUC ) ,( RMSe / RRSe ) ) ,RRSe ) * RRSe ) ) ,DS ) / Min( Max( MUM,( RRSe * ( ( MLU + MUC ) + RMSe ) ) ) ,Min( RCSe ,RRSe ) ) ) )", "obj1": 0.7759259259259259, "obj2": 0.09937120210862739}, {"determining": "Min( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) * MDR ) ,( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MUM - CS ) - MUM ) ,Max( ( ( ( CS + ( MUC - RMSe ) ) * RRSe ) * RRSe ),RRSe ) )", "obj1": 0.812962962962963, "obj2": 0.07947501522603763}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( MUM ,( MLU - MUM ) )", "obj1": 0.9703703703703703, "obj2": 0.012520769298021388}, {"determining": "Min( ( ( Max( FirstVNF_RAM,AMS ) - ( AMS - ( ( Max( BR,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.8722222222222222, "obj2": 0.05282687248738305}, {"determining": "( ( ( FirstVNF_CPU_Server * ACS ) * ( FirstVNF_CPU_Server / FirstVNF_RAM ) ) * ( ( FirstVNF_Mem - Max( Min( BR ,FirstVNF_CPU ),( CRS - MRS ) ) ) / ( MRS / RRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.2, "obj2": 0.7001475526007079}, {"determining": "( Min( ( FirstVNF_RAM + ( Min( FirstVNF_RAM_Server ,MDR ) * FirstVNF_Mem ) ) ,FirstVNF_CPU ) - ( Min( ( ARS / ( MDR - PN ) ) ,FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( RCSe - ( RRSe - CS ) ) ) ,( RCSe - MUM ) )", "obj1": 0.7574074074074074, "obj2": 0.10875039231951565}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( FirstVNF_CPU ,( ( ARS * Max( RRS,( ARS + BR ) ) ) * ( FirstVNF_Mem_Server * AMS ) ) ) * MDR ) )", "choosing": "Min( ( Min( DS ,Min( Min( Max( ( ( MUC + RRSe ) * Min( RMSe ,DS ) ),( MUC / ( DS / MUM ) ) ) ,MLU ) ,MUR ) ) - CS ) ,( RCSe - ( ( CS - ( RRSe * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) ) ) )", "obj1": 0.40370370370370373, "obj2": 0.49699880026182114}, {"determining": "Min( ( PN - ( MDR * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU_Server / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + AMS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * RMSe ) * RRSe ) )", "obj1": 0.75, "obj2": 0.11008955661634642}], "12": [{"determining": "Min( ( Min( Min( ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( Max( ( ( BR - ( PN + BR ) ) / Min( MRS ,Const ) ),( BR + FirstVNF_Mem ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( Min( ( ( RMSe / ( Min( MUM ,( RRSe / CS ) ) / DS ) ) / RRSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( Const - ARS ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM / CS ),Min( MUC ,DS ) ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( MRS ,( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.815029032477694}, {"determining": "Min( ( ( DDR - ( ( PN - ARS ) + ( Max( PN,DDR ) + PN ) ) ) - Min( ACS ,BR ) ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( ( RMSe - CS ) ,( Max( ( RRSe * MUR ),RMSe ) * Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34171287553956675}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( ( ( ( RRSe - DS ) + Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2714012490065121}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.6425925925925926, "obj2": 0.20185088606227541}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4444444444444444, "obj2": 0.3701190112953077}, {"determining": "( ACS - ( ( ( ACS / Const ) + FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16122431568020215}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ARS * ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( ( MUC + Min( DS ,DS ) ) * RRSe ) )", "obj1": 0.42407407407407405, "obj2": 0.39024890655126193}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "Min( ( ( Max( ( ( Min( MLU ,( MLU + DS ) ) + MUM ) - MUM ),RCSe ) + ( ( DS / DS ) - RMSe ) ) + CS ) ,( RCSe - MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.470418194237868}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * MUM ) )", "obj1": 0.6092592592592593, "obj2": 0.30006892056667744}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ARS * ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( ( ( ( RMSe * RCSe ) * ( MUR + RRSe ) ) * MUR ) * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.5222222222222223, "obj2": 0.30883150575413315}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "Min( ( ( ( CRS / ( Max( DDR,( ( FirstVNF_Mem + ARS ) - BR ) ) * RRS ) ) * FirstVNF_CPU_Server ) - DDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Const - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - CS ) + ( MUR / ( RMSe - ( MUM - ( DS / Max( DS,DS ) ) ) ) ) ) - CS ) ,( ( RMSe / RMSe ) - RMSe ) )", "obj1": 0.1259259259259259, "obj2": 0.8053647969630869}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( ( RRS / RRS ) - DDR ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( Max( ARS,FirstVNF_CPU ) * ( DDR - FirstVNF_Mem ) ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,MUM ) / ( MUR / MUR ) ) * ( MUM * MUR ) ) - ( RCSe * ( MUR / DS ) ) )", "obj1": 0.9296296296296296, "obj2": 0.04487705597643182}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.7055555555555556, "obj2": 0.14472205781531475}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( Max( ( ( BR - ( PN + BR ) ) / Min( MRS ,Const ) ),( BR + FirstVNF_Mem ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( ( MUM - CS ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - RMSe ) ) * RRSe ) * RRSe ),RRSe ) )", "obj1": 0.8888888888888888, "obj2": 0.04695454521976794}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) / AMS ) )", "choosing": "Min( ( Min( ( Min( RCSe ,MUR ) + MUC ) ,Min( RCSe ,MLU ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12962962962962962, "obj2": 0.77328780041106}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "Min( ( MDR - ( ( ( ( DDR * Min( PN ,FirstVNF_CPU_Server ) ) + Max( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM + PN ) ),ACS ) ) + ( Max( PN,( FirstVNF_RAM_Server - MDR ) ) + PN ) ) - DDR ) ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) )", "obj1": 0.28703703703703703, "obj2": 0.5838940901940275}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS + RMSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5828995272950852}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,MDR ) )", "choosing": "Min( Max( RCSe,MUM ) ,Min( MLU ,DS ) )", "obj1": 0.40925925925925927, "obj2": 0.4813903877007969}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * DDR ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6129629629629629, "obj2": 0.29398353194563187}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( ( ( ( RMSe * RCSe ) * ( MUR + RRSe ) ) * MUR ) * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( Min( ( RRS - MRS ) ,( ACS * MDR ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,ACS ) ) ,BR ) ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe - MUM ) * MUR ) + ( MUC / MUM ) ) / ( MUC - ( ( MLU * ( CS / ( RRSe / Max( MUR,Max( MUC,RMSe ) ) ) ) ) * MUM ) ) )", "obj1": 0.9462962962962963, "obj2": 0.0321912891286684}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_Mem_Server - Max( CRS,FirstVNF_RAM_Server ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ,( DDR - ( DDR * FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - MUC ) + ( CS - Min( ( RMSe / ( RRSe + ( CS / RCSe ) ) ) ,( RCSe + MUM ) ) ) ) - CS ) ,( ( CS - ( MUR * MUC ) ) - RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.726075196308536}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,Min( ( PN - Max( ( FirstVNF_RAM / AMS ),BR ) ) ,( Min( Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,ACS ) ) ,BR ) ) ,Min( CRS ,AMS ) ) + AMS ) ) )", "choosing": "( Max( Max( MUM,RRSe ),RMSe ) * ( MLU + Max( ( CS * ( ( RRSe * MUC ) / CS ) ),CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5615803647588821}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.2037037037037037, "obj2": 0.6928339035234813}, {"determining": "Max( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04066129550475484}, {"determining": "Min( ( ( Max( FirstVNF_Mem,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( Max( RRS,FirstVNF_Mem ) + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU - ( MLU * MUM ) ) + ( ( Min( ( ( MUC - ( ( CS + MUM ) * RRSe ) ) - Max( RMSe,MLU ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RRSe * ( ( MLU + MUC ) + RMSe ) ) ) ,( RCSe * RRSe ) ) ) )", "obj1": 0.8444444444444444, "obj2": 0.06657661828286453}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.14814814814814814, "obj2": 0.7508008921107155}, {"determining": "( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM - CS ),Min( MUM ,DS ) ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( ( CS + ( MUC - RMSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.3685185185185185, "obj2": 0.5289652145429409}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( MDR ,FirstVNF_RAM_Server ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS + RMSe ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6714892867255818}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( ( ( FirstVNF_CPU / CRS ) + ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.14444444444444443, "obj2": 0.760742704220793}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( ( MDR + FirstVNF_CPU ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe + ( Min( Max( Min( MLU ,MLU ),MUC ) ,( Min( MUR ,MUC ) - ( DS / DS ) ) ) - ( ( MUM - CS ) + Min( ( CS / MUC ) ,MUM ) ) ) ) - MLU ) - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( Min( PN ,MDR ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( Max( ( MUM + RMSe ),CS ) ,RCSe ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) ) - Max( ( MUR * MLU ),RMSe ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6361592540043706}, {"determining": "( ( AMS + FirstVNF_RAM ) - Min( ( ARS / FirstVNF_RAM_Server ) ,Max( FirstVNF_RAM,( CRS / Max( BR,Max( RRS,( FirstVNF_RAM_Server * AMS ) ) ) ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( RMSe + RRSe ) ,( ( RRSe * CS ) / ( MLU * MLU ) ) ) ,DS ) / RMSe ) + ( MUR / Min( Max( ( CS / ( MUR / MUR ) ),RRSe ) ,MUR ) ) ) - CS ) ,( RCSe - MUM ) )", "obj1": 0.4, "obj2": 0.49935639865506215}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( Min( PN ,MDR ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( CS - RMSe ) )", "obj1": 0.35185185185185186, "obj2": 0.5310983948639003}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server + RRS ) ) ,( ( Const + FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) * ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS + Max( Max( ( RRSe + ( MLU / RRSe ) ),MLU ),DS ) ) ,MUC ),( RMSe + MUM ) ) * ( MUC - Max( DS,( CS * RRSe ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6327998962146747}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.43148148148148147, "obj2": 0.3854869364865654}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( ( CRS + PN ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( Max( ( MUM + RMSe ),CS ) ,RCSe ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,Min( DS ,DS ) ) ) ,( RCSe - MUM ) ) - Max( ( MUR * MLU ),RMSe ) ) )", "obj1": 0.34814814814814815, "obj2": 0.5373964836255068}, {"determining": "Min( ( PN * ( MRS / ARS ) ) ,Min( MRS ,PN ) )", "choosing": "Min( ( RRSe / ( Max( ( ( Max( ( CS + MUC ),CS ) - ( MUR / ( RCSe / RRSe ) ) ) * ( MUM + ( ( CS + MUR ) - Max( MLU,MUR ) ) ) ),Min( CS ,DS ) ) + RRSe ) ) ,( ( RMSe - MUR ) - DS ) )", "obj1": 0.26666666666666666, "obj2": 0.6254711496288161}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( MDR * Min( FirstVNF_RAM_Server ,Max( ARS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( RCSe - MUM ) ,CS ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( RCSe / ( ( ( ( ( ( MUM * RCSe ) * RRSe ) / MLU ) * RCSe ) + RRSe ) / RMSe ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6458908251218416}, {"determining": "Min( ( FirstVNF_Mem - ACS ) ,( ( ( FirstVNF_CPU + RRS ) - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( FirstVNF_RAM_Server ,MDR ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( Max( RMSe,( RCSe * MUC ) ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.6785880527353637}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.741894801533086}, {"determining": "Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( DDR * MDR ) )", "choosing": "( Min( Min( ( RCSe - MUM ) ,( ( CS + RRSe ) / MUM ) ) ,( ( MUM / MUC ) + Min( RMSe ,RMSe ) ) ) + ( Min( ( MUM - ( Min( Min( Min( MUR ,MUC ) ,( RMSe / RRSe ) ) ,RRSe ) * RRSe ) ) ,DS ) / Min( Max( MUM,( RRSe * ( ( MLU + MUC ) + RMSe ) ) ) ,Min( RCSe ,RRSe ) ) ) )", "obj1": 0.7759259259259259, "obj2": 0.09937120210862739}, {"determining": "Min( PN ,( Max( ( ACS - ( FirstVNF_Mem - ACS ) ),RRS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( Min( ( RMSe / ( RRSe - RCSe ) ) ,Max( ( MUC * ( MUC - MUR ) ),( Max( MUM,MLU ) / Min( MUR ,MUM ) ) ) ),MUR ),MUM ) - CS ) ,( RCSe + RMSe ) )", "obj1": 0.3314814814814815, "obj2": 0.5532497380617339}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - AMS ) ) * MDR ) )", "choosing": "Min( ( DS - ( ( CS + MUM ) * RRSe ) ) ,Min( RRSe ,DS ) )", "obj1": 0.3851851851851852, "obj2": 0.5020592330791918}, {"determining": "( ( ( ( RRS + FirstVNF_Mem ) - ( FirstVNF_Mem_Server + Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) / FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( DS * ( RRSe + MUR ) ) - ( CS - MUM ) ) - ( RMSe + MUM ) )", "obj1": 0.26851851851851855, "obj2": 0.6079361356050252}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( MUC ,( MUR - Min( MUR ,RMSe ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.15555555555555556, "obj2": 0.7445626692727239}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( Max( ( ( BR - ( PN + BR ) ) / Min( MRS ,Const ) ),( BR + FirstVNF_Mem ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Max( ( RMSe / ( Min( MUM ,( RRSe / CS ) ) / DS ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.8870370370370371, "obj2": 0.04795053523471319}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.7611111111111111, "obj2": 0.10398593799884104}, {"determining": "Min( ( PN - ( ( MRS / BR ) * FirstVNF_CPU_Server ) ) ,( ( ( ( BR * CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - Min( ( Min( RCSe ,MUM ) + ( MUM - MUR ) ) ,( ( RRSe * MUM ) / ( MUC - MUM ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1648148148148148, "obj2": 0.7334244812052835}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8740740740740741, "obj2": 0.052212236958366666}, {"determining": "Min( ( Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) - MDR ) ,PN )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe + ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) )", "obj1": 0.8666666666666667, "obj2": 0.06239454098013223}, {"determining": "Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,( Min( Min( ( ( FirstVNF_RAM_Server - MRS ) + FirstVNF_RAM ) ,Max( MRS,PN ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( ( ( MUM / CS ) / MUR ),MUR ) ) / ( CS - DS ) ) )", "obj1": 0.7944444444444444, "obj2": 0.08881899704069415}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) ) ,( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS - Min( ( ( ( MUC - CS ) - DS ) / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12562142424390288}, {"determining": "Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( DDR - ( AMS + ( MDR / MDR ) ) ) / CRS ) - ( Min( CRS ,( FirstVNF_Mem_Server / Max( RRS,ACS ) ) ) - CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( ( FirstVNF_Mem * Max( ( PN + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Min( RMSe ,RCSe ) ,MLU ) - MUC ) ,( RCSe - RMSe ) )", "obj1": 0.22407407407407406, "obj2": 0.6655465767210784}, {"determining": "Min( ( PN - ( ( Min( MRS ,AMS ) / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * Min( Max( ( MUM + RMSe ),CS ) ,RCSe ) ) ) ,( RCSe - DS ) )", "obj1": 0.26296296296296295, "obj2": 0.6292511854027324}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) + Min( ( PN + DDR ) ,FirstVNF_CPU_Server ) ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.22962962962962963, "obj2": 0.6572321658631395}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.13531913453899863}, {"determining": "Min( ( ( Max( DDR,FirstVNF_Mem_Server ) - Const ) / MDR ) ,( Min( Min( ( FirstVNF_Mem - Min( MRS ,FirstVNF_RAM_Server ) ) ,PN ) ,FirstVNF_RAM_Server ) * MDR ) )", "choosing": "Min( ( MUC / RRSe ) ,( MUC - ( Max( ( CS + MUR ),( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) ) + RRSe ) ) )", "obj1": 0.3296296296296296, "obj2": 0.5602798579096261}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.43148148148148147, "obj2": 0.3854869364865654}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,AMS ) + ( RRS / FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MUC - Min( ( CS - ( ( MUC * MUR ) - MUC ) ) ,CS ) ) * ( MUC - ( RMSe + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5032160247689045}, {"determining": "Min( ( MDR / Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_Mem ) ) ,Min( BR ,Max( MDR,FirstVNF_CPU_Server ) ) )", "choosing": "( ( MUC - ( MUM * MUC ) ) * ( MUC * DS ) )", "obj1": 0.2388888888888889, "obj2": 0.6498837653127417}, {"determining": "Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,Min( BR ,RRS ) )", "choosing": "Min( ( Min( CS ,( RCSe - MUM ) ) - MUM ) ,( ( RRSe * MUR ) * MUM ) )", "obj1": 0.8111111111111111, "obj2": 0.08030516795171871}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( Min( ( RRS - MRS ) ,( ACS * MDR ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( MUC ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.9518518518518518, "obj2": 0.02544315431885285}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + RRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - ( ( ( DS / DS ) * Min( RCSe ,( MUM * RCSe ) ) ) - CS ) ) ) - CS ) ,( MUC - RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.6536153881827769}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - MUM ) - ( RMSe + MUM ) )", "obj1": 0.2722222222222222, "obj2": 0.6059816919528529}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.19765027497594717}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + Max( RRSe,Max( DS,( MUR * RRSe ) ) ) ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( MUR + MUC ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.8537037037037037, "obj2": 0.06312780598731774}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC * MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7833333333333333, "obj2": 0.09430784110526343}, {"determining": "Min( PN ,( Max( ( ACS - ( FirstVNF_CPU + FirstVNF_Mem ) ),RRS ) - ( MDR / FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( RRSe * ( ( CS + MUM ) * RRSe ) ) )", "obj1": 0.9944444444444445, "obj2": 0.002222732744445798}, {"determining": "Min( ( Min( PN ,MDR ) - FirstVNF_CPU ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem_Server * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( ( MUC / MUR ) ,MLU ) ) / Min( RCSe ,Max( RCSe,( RRSe * MLU ) ) ) ) ) + MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,MUC ) - RCSe ) ) ,( Min( MUM ,MUM ) + ( RCSe / ( MUM * ( DS / RCSe ) ) ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MUC + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.017025938801812794}, {"determining": "( ( FirstVNF_RAM_Server / ( ( MDR * FirstVNF_RAM ) / ( CRS + PN ) ) ) - ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + ( ( Max( PN,FirstVNF_RAM_Server ) / ( MDR - PN ) ) * FirstVNF_CPU ) ) )", "choosing": "( ( ( Min( CS ,RCSe ) / MLU ) + ( MUC / MUM ) ) / ( MUM * ( ( MUR - ( ( CS / MUM ) * Max( Min( ( MUM - MUR ) ,Min( MUC ,MUM ) ),RMSe ) ) ) - DS ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12950576820044085}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) + Min( ( FirstVNF_Mem_Server - ( MDR - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( AMS,CRS ) ) )", "choosing": "Min( Max( RMSe,( MLU - MUM ) ) ,( RCSe - RMSe ) )", "obj1": 0.1814814814814815, "obj2": 0.7196049381549954}, {"determining": "Min( ( Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( ( MUM + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) ) + MUC ) ,( RCSe - MUM ) )", "obj1": 0.8703703703703703, "obj2": 0.06032646941077135}, {"determining": "( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) )", "choosing": "Min( MUC ,( MUR - Min( MUR ,RMSe ) ) )", "obj1": 0.4074074074074074, "obj2": 0.49256593423885836}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( Min( PN ,MDR ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( CS - RMSe ) )", "obj1": 0.337037037037037, "obj2": 0.5478577286019409}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.18333333333333332, "obj2": 0.7180967485470452}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * MDR ) )", "choosing": "Min( ( CS + ( Max( RRSe,MUR ) + ( Min( DS ,DS ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.470418194237868}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.37222222222222223, "obj2": 0.5235866818486378}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( MLU - ( Min( ( MUM * DS ) ,RCSe ) + ( MUM - MUC ) ) ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.40370370370370373, "obj2": 0.4944529381768403}, {"determining": "( Min( ARS ,MRS ) - ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) + Min( ( ACS + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - ( RCSe - ( MUR / MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.7407407407407407, "obj2": 0.11490420328505878}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) - Max( ( ( Min( ACS ,Min( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) ,FirstVNF_CPU_Server ) ) / ( MDR - PN ) ) * FirstVNF_CPU ),Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( RCSe * MUC ) ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( ( PN - Min( ( ( FirstVNF_RAM * DDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( ( ( MRS + PN ) / ACS ) * ( MRS * ARS ) ) )", "choosing": "Min( ( ( MUR + Min( MUR ,( CS + MUR ) ) ) - Max( CS,( Max( Max( ( MLU * MLU ),MLU ),RCSe ) * ( MUC - DS ) ) ) ) ,( MLU - ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.0046685366747279316}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( ( MUC + RCSe ) * RRSe ) )", "obj1": 0.7296296296296296, "obj2": 0.12036787278260185}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC * MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7888888888888889, "obj2": 0.09119855602964841}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1648148148148148, "obj2": 0.7334244812052835}, {"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + MLU ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( MUR + MUC ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.85, "obj2": 0.06655038709155654}, {"determining": "( ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) - Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) - ( ACS - Max( ARS,ARS ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( CS * Max( ( ( RMSe * RMSe ) * MLU ),( RCSe * Min( CS ,RRSe ) ) ) ) * ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.14145488407215065}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) - Max( ( ( Min( ACS ,Min( ( ( FirstVNF_RAM * MDR ) / PN ) ,FirstVNF_CPU_Server ) ) / ( MDR - PN ) ) * FirstVNF_CPU ),Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.9740740740740741, "obj2": 0.008263969353914623}, {"determining": "( Min( ( FirstVNF_RAM + ( Min( FirstVNF_RAM_Server ,MDR ) * FirstVNF_Mem ) ) ,FirstVNF_CPU ) - ( Min( ( ARS / ( MDR - PN ) ) ,FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( RCSe - ( RRSe - CS ) ) ) ,( RCSe - MUM ) )", "obj1": 0.7574074074074074, "obj2": 0.10875039231951565}, {"determining": "Min( ( ( Max( FirstVNF_RAM,AMS ) - ( AMS - ( ( Max( BR,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + ( PN / FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.8722222222222222, "obj2": 0.05282687248738305}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.3388888888888889, "obj2": 0.5455008362027086}], "13": [{"determining": "( ( FirstVNF_RAM_Server / ( ( CRS + PN ) / ( ARS * ACS ) ) ) - ( ( ( MDR * CRS ) * ACS ) + Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - ( MUC * ( ( MUC * ( MUC * MUM ) ) * ( RCSe / CS ) ) ) ) ,( ( MUC + RCSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( Max( ( ( BR - ( PN + BR ) ) / Min( MRS ,Const ) ),( BR + FirstVNF_Mem ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( Min( ( ( RMSe / ( Min( MUM ,( RRSe / CS ) ) / DS ) ) / RRSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( DDR - ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_Mem_Server - Max( CRS,FirstVNF_RAM_Server ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8210641017265676}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5592592592592592, "obj2": 0.28984548161074186}, {"determining": "( ACS - ( ( ( ACS / Const ) + FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16122431568020215}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( ( ( ( RRSe - DS ) + Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2714012490065121}, {"determining": "Min( ( ( Const - BR ) + Min( FirstVNF_CPU_Server ,Const ) ) ,( ( MDR * ACS ) / ( CRS + FirstVNF_Mem ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( MUM / ( ( CS + RCSe ) + Max( Min( ( MUR / MUC ) ,MUC ),( RCSe * MUC ) ) ) ) ) ,( Min( MLU ,DS ) + RMSe ) )", "obj1": 0.6370370370370371, "obj2": 0.2624963728260802}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ARS * ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( MUC - ( MUC * MUM ) ) ,( ( MUC + Min( DS ,DS ) ) * RRSe ) )", "obj1": 0.42407407407407405, "obj2": 0.39024890655126193}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "Min( ( ( Max( ( ( Min( MLU ,( MLU + DS ) ) + MUM ) - MUM ),RCSe ) + ( ( DS / DS ) - RMSe ) ) + CS ) ,( RCSe - MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.470418194237868}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3351851851851852, "obj2": 0.5266977544531442}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( RCSe ,Max( ( MUM - CS ),Min( MUM ,DS ) ) ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( ( CS + ( MUC - RMSe ) ) ,( RCSe - MUM ) ) - MUM ) )", "obj1": 0.6425925925925926, "obj2": 0.20185088606227541}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( CS - RMSe ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( ( ( ( CRS / ( Max( DDR,( ( FirstVNF_Mem + ARS ) - BR ) ) * RRS ) ) * FirstVNF_CPU_Server ) - DDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Const - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - CS ) + ( MUR / ( RMSe - ( MUM - ( DS / Max( DS,DS ) ) ) ) ) ) - CS ) ,( ( RMSe / RMSe ) - RMSe ) )", "obj1": 0.1259259259259259, "obj2": 0.8053647969630869}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( ( RRS / RRS ) - DDR ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( Max( ARS,FirstVNF_CPU ) * ( DDR - FirstVNF_Mem ) ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,MUM ) / ( MUR / MUR ) ) * ( MUM * MUR ) ) - ( RCSe * ( MUR / DS ) ) )", "obj1": 0.9296296296296296, "obj2": 0.04487705597643182}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( ( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ) * FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - ( ( ARS - FirstVNF_RAM_Server ) * Max( MDR,BR ) ) ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "Min( ( Min( Max( MUC,Min( RCSe ,Min( ( RCSe * MUC ) ,CS ) ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( RCSe / MUC ) )", "obj1": 0.12962962962962962, "obj2": 0.77328780041106}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS + RMSe ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.48487802952216263}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,MDR ) )", "choosing": "Min( Max( RCSe,MUM ) ,Min( MLU ,DS ) )", "obj1": 0.40925925925925927, "obj2": 0.4813903877007969}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( BR + FirstVNF_Mem ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.37222222222222223, "obj2": 0.5235866818486378}, {"determining": "Min( ( FirstVNF_CPU_Server * PN ) ,( AMS / ( ( ( Max( ( PN + ( Const * ARS ) ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( ( ( MUR - ( RCSe - MUM ) ) + ( RMSe / Max( MLU,MLU ) ) ) + MUR ) ) - DS ) * ( MUR * Min( ( ( ( RRSe * MUM ) / RCSe ) - ( CS / MUC ) ) ,RCSe ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7601924724437071}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( Max( ( ( BR - ( PN + BR ) ) / Min( MRS ,Const ) ),( BR + FirstVNF_Mem ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( ( MUM - CS ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - RMSe ) ) * RRSe ) * RRSe ),RRSe ) )", "obj1": 0.8888888888888888, "obj2": 0.04695454521976794}, {"determining": "Min( PN ,( Max( ( ACS - ( FirstVNF_Mem - ACS ) ),RRS ) - Max( FirstVNF_Mem_Server,FirstVNF_Mem ) ) )", "choosing": "Min( ( Max( Max( Min( ( RMSe / ( RRSe - RCSe ) ) ,Max( ( MUC * ( MUC - MUR ) ),( Max( MUM,MLU ) / Min( MUR ,MUM ) ) ) ),MUR ),MUM ) - CS ) ,( RCSe + RMSe ) )", "obj1": 0.3314814814814815, "obj2": 0.5532497380617339}, {"determining": "Min( ( ( DDR - ( FirstVNF_RAM / AMS ) ) - ACS ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( MUR - MUC ) / RCSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.45, "obj2": 0.3683013072884483}, {"determining": "Min( ( ( DDR - ( ( PN - ARS ) + ( Max( PN,DDR ) + PN ) ) ) - Min( ACS ,BR ) ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( ( RMSe - CS ) ,( Max( ( RRSe * MUR ),RMSe ) * Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34171287553956675}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.48703703703703705, "obj2": 0.3491845707643782}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34171287553956675}, {"determining": "Min( ( FirstVNF_Mem - ACS ) ,( ( ( FirstVNF_CPU + RRS ) - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( FirstVNF_RAM_Server ,MDR ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( Max( RMSe,( RCSe * MUC ) ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.6785880527353637}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.29259259259259257, "obj2": 0.5674763039767253}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( ( ( ( RMSe * RCSe ) * ( MUR + RRSe ) ) * MUR ) * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "Min( Min( FirstVNF_RAM_Server ,RRS ) ,( ( ( ( FirstVNF_RAM - DDR ) - ( FirstVNF_CPU / CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,Max( CRS,ARS ) ) ) + Max( ARS,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( RRSe + MUM ) / ( Min( RRSe ,RRSe ) + RCSe ) ) ,RCSe ) ) ,( RCSe - RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7253928314945187}, {"determining": "Min( ( FirstVNF_Mem + MDR ) ,Min( ( PN - Max( ( FirstVNF_RAM / AMS ),BR ) ) ,( Min( Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,ACS ) ) ,BR ) ) ,Min( CRS ,AMS ) ) + AMS ) ) )", "choosing": "( Max( Max( MUM,RRSe ),RMSe ) * ( MLU + Max( ( CS * ( ( RRSe * MUC ) / CS ) ),CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5615803647588821}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( MDR ,FirstVNF_RAM_Server ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS + RMSe ) ) ) )", "obj1": 0.21481481481481482, "obj2": 0.6714892867255818}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4444444444444444, "obj2": 0.3700065608243431}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ARS * ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( Min( CS ,( RCSe - MUM ) ) - MUM ) ,( ( RRSe * MUR ) * MUM ) )", "obj1": 0.43703703703703706, "obj2": 0.38466276230215246}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.2037037037037037, "obj2": 0.6928339035234813}, {"determining": "Min( ( MDR - ( ( ( ( DDR * Min( PN ,FirstVNF_CPU_Server ) ) + Max( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM + PN ) ),ACS ) ) + ( Max( PN,( FirstVNF_RAM_Server - MDR ) ) + PN ) ) - DDR ) ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) )", "obj1": 0.28703703703703703, "obj2": 0.5838940901940275}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - AMS ) ) * MDR ) )", "choosing": "Min( ( DS - ( ( CS + MUM ) * RRSe ) ) ,Min( RRSe ,DS ) )", "obj1": 0.3851851851851852, "obj2": 0.5020592330791918}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( Min( Max( BR,Min( Min( Min( PN ,MDR ) ,( FirstVNF_Mem - ACS ) ) ,BR ) ) ,( ACS * MDR ) ) + AMS ) ) )", "choosing": "Min( ( ( ( DS * ( MUR + Min( Max( ( MUM + RMSe ),CS ) ,RCSe ) ) ) + ( MUR / MUM ) ) - CS ) ,( Min( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) ,( RCSe - MUM ) ) - Max( ( MUR * MLU ),RMSe ) ) )", "obj1": 0.2462962962962963, "obj2": 0.6361592540043706}, {"determining": "Min( ( PN / ( CRS / FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe - ( MUC * Max( Min( RRSe ,RMSe ),( Max( RRSe,RCSe ) / RMSe ) ) ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "( ( ( Min( ( RRS - MRS ) ,( ACS * MDR ) ) * FirstVNF_CPU ) + ( PN / BR ) ) - ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( ( RCSe - MUM ) * MUR ) + ( MUC / MUR ) ) / ( MUC - ( ( MLU * ( CS / ( RRSe / Max( MUR,Max( RRSe,RMSe ) ) ) ) ) * MUM ) ) )", "obj1": 0.9425925925925925, "obj2": 0.03355398529360748}, {"determining": "( ( ( ( ACS * FirstVNF_RAM ) / Max( ARS,ARS ) ) * ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) ) / ( Max( Min( Min( MRS ,( ( ( FirstVNF_RAM - DDR ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) ) ,CRS ),BR ) + Min( ( Const - PN ) ,( FirstVNF_Mem_Server + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.815029032477694}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.7055555555555556, "obj2": 0.14472205781531475}, {"determining": "Max( ( Min( FirstVNF_Mem ,FirstVNF_RAM_Server ) - ( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) - FirstVNF_CPU ) ),( ( ( FirstVNF_CPU * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( PN * ARS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( RCSe - MUC ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.9351851851851852, "obj2": 0.04066129550475484}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.18333333333333332, "obj2": 0.7180967485470452}, {"determining": "Min( ( FirstVNF_Mem_Server / ( FirstVNF_Mem_Server + RRS ) ) ,( ( Const + FirstVNF_CPU_Server ) / ( ( ( FirstVNF_CPU + FirstVNF_CPU ) / ( BR * MDR ) ) * ( ( FirstVNF_RAM * FirstVNF_RAM ) / Max( ARS,Const ) ) ) ) )", "choosing": "( Max( Min( ( CS + Max( Max( ( RRSe + ( MLU / RRSe ) ),MLU ),DS ) ) ,MUC ),( RMSe + MUM ) ) * ( MUC - Max( DS,( CS * RRSe ) ) ) )", "obj1": 0.25555555555555554, "obj2": 0.6327998962146747}, {"determining": "Min( ( ( AMS + ( ( ARS / Min( PN ,FirstVNF_RAM ) ) * Const ) ) - MDR ) ,RRS )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - ( ( ( RMSe * ( RRSe - RMSe ) ) / ( ( MLU - ( MUR * DS ) ) + MLU ) ) + DS ) ) * ( ( ( MUC * ( ( MUC * MLU ) - MLU ) ) / RMSe ) * ( ( ( ( RCSe / RMSe ) / ( CS * RCSe ) ) - ( MLU / MLU ) ) + ( ( DS * Min( ( ( MUC * RCSe ) * ( CS + RCSe ) ) ,Min( Min( MUM ,RMSe ) ,RMSe ) ) ) - ( Min( MLU ,RMSe ) * MUM ) ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5822109998905716}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / Min( ( BR + FirstVNF_CPU_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC * MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7833333333333333, "obj2": 0.09430784110526343}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( MDR * Min( FirstVNF_RAM_Server ,Max( ARS,FirstVNF_RAM ) ) ) )", "choosing": "( Min( Min( ( RCSe - MUM ) ,CS ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( RCSe / ( ( ( ( ( ( MUM * RCSe ) * RRSe ) / MLU ) * RCSe ) + RRSe ) / RMSe ) ) )", "obj1": 0.24259259259259258, "obj2": 0.6458908251218416}, {"determining": "Min( ( PN * ( MRS / ARS ) ) ,Min( MRS ,PN ) )", "choosing": "Min( ( RRSe / ( Max( ( ( Max( ( CS + MUC ),CS ) - ( MUR / ( RCSe / RRSe ) ) ) * ( MUM + ( ( CS + MUR ) - Max( MLU,MUR ) ) ) ),Min( CS ,DS ) ) + RRSe ) ) ,( ( RMSe - MUR ) - DS ) )", "obj1": 0.26666666666666666, "obj2": 0.6254711496288161}, {"determining": "( ( ( ( ARS / ( MDR - PN ) ) * BR ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) - ( ACS - Min( DDR ,ACS ) ) )", "choosing": "Min( ( ( MUM + CS ) - MLU ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( CS + MUR ) - ( MUR + DS ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.7055555555555556, "obj2": 0.14472205781531475}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.741894801533086}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUR + DS ) - Max( CS,( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ,( MLU - ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.09880083869185657}, {"determining": "Min( ( PN / ( CRS * FirstVNF_RAM_Server ) ) ,( ( MDR + FirstVNF_CPU ) / FirstVNF_Mem_Server ) )", "choosing": "( ( ( ( RMSe + ( Min( Max( Min( MLU ,MLU ),MUC ) ,( Min( MUR ,MUC ) - ( DS / DS ) ) ) - ( ( MUM - CS ) + Min( ( CS / MUC ) ,MUM ) ) ) ) - MLU ) - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) + Min( ( FirstVNF_Mem_Server - ( MDR - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( AMS,CRS ) ) )", "choosing": "Min( Max( RMSe,( MLU - MUM ) ) ,( RCSe - RMSe ) )", "obj1": 0.1814814814814815, "obj2": 0.7196049381549954}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.26851851851851855, "obj2": 0.6079361356050252}, {"determining": "( ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) - Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) - ( ACS - Max( ARS,ARS ) ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( CS * Max( ( ( RMSe * RMSe ) * MLU ),( RCSe * Min( CS ,RRSe ) ) ) ) * ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.14145488407215065}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,AMS ) + ( RRS / FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MUC - Min( ( CS - ( ( MUC * MUR ) - MUC ) ) ,CS ) ) * ( MUC - ( RMSe + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5032160247689045}, {"determining": "Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( DDR - ( AMS + ( MDR / MDR ) ) ) / CRS ) - ( Min( CRS ,( FirstVNF_Mem_Server / Max( RRS,ACS ) ) ) - CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( ( FirstVNF_Mem * Max( ( PN + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Min( RMSe ,RCSe ) ,MLU ) - MUC ) ,( RCSe - RMSe ) )", "obj1": 0.22407407407407406, "obj2": 0.6655465767210784}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( PN * ARS ) + PN ) ) ) - Max( ( ( Min( ACS ,Min( ( ( MDR - FirstVNF_CPU ) / Max( BR,MDR ) ) ,FirstVNF_CPU_Server ) ) / ( MDR - PN ) ) * FirstVNF_CPU ),Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( RCSe * MUC ) ) ) ) + ( DS - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9629629629629629, "obj2": 0.019200539537081326}, {"determining": "Min( ( ( ACS / Min( ( Const * DDR ) ,FirstVNF_CPU_Server ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( RCSe - MUM ) ,CS ) ,( ( MUM / MLU ) + Min( RMSe ,DS ) ) ) + ( ( Min( ( ( MUC - ( ( CS + MUM ) * RRSe ) ) - Max( ( MUM / Min( RRSe ,MLU ) ),MLU ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RRSe * ( ( MLU + MUC ) + RMSe ) ) ) ,( RCSe + ( DS - ( ( CS + MUM ) * RRSe ) ) ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06219699997885214}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM * ACS ) / ( CRS + PN ) ) ) - ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( MLU - ( Min( ( MUM * DS ) ,RCSe ) + ( MUM - MUC ) ) ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.7462962962962963, "obj2": 0.112607193321581}, {"determining": "Min( ( ( Max( DDR,FirstVNF_Mem_Server ) - Const ) / MDR ) ,( Min( Min( ( FirstVNF_Mem - Min( MRS ,FirstVNF_RAM_Server ) ) ,PN ) ,FirstVNF_RAM_Server ) * MDR ) )", "choosing": "Min( ( MUC / RRSe ) ,( MUC - ( Max( ( CS + MUR ),( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) ) + RRSe ) ) )", "obj1": 0.3296296296296296, "obj2": 0.5602798579096261}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) + Min( ( PN + DDR ) ,FirstVNF_CPU_Server ) ) ,PN ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.22962962962962963, "obj2": 0.6572321658631395}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU ) ) - ( ( Min( ( RRS - MRS ) ,( PN - AMS ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,ACS ) ) ,( Min( PN ,PN ) * FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( ( MLU * ( MUM * ( ( ( RRSe / MUM ) / ( MUC + MUR ) ) + Min( DS ,Max( MLU,RMSe ) ) ) ) ) * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.9462962962962963, "obj2": 0.02624579916625223}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( CS + ( Max( RRSe,MUR ) + ( Min( DS ,( MUR * RRSe ) ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.8240740740740741, "obj2": 0.07845541264403251}, {"determining": "( ( ( ( MRS / PN ) * FirstVNF_CPU_Server ) - PN ) - ( ( Min( ( Max( Const,RRS ) - MRS ) ,( ACS * MDR ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( MUM - MUM ) ) ,( RCSe + ( ( RCSe - RCSe ) / ( MUM - RCSe ) ) ) )", "obj1": 0.9537037037037037, "obj2": 0.023093106569443293}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) / AMS ) )", "choosing": "Min( ( Min( ( Min( RCSe ,MUR ) + MUC ) ,Min( RCSe ,MLU ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12962962962962962, "obj2": 0.77328780041106}, {"determining": "( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.2351851851851852, "obj2": 0.6469788910689459}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.8814814814814815, "obj2": 0.0502567483464984}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.14814814814814814, "obj2": 0.7508008921107155}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - MUM ) - ( RMSe + MUM ) )", "obj1": 0.2722222222222222, "obj2": 0.6059816919528529}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.2037037037037037, "obj2": 0.6928339035234813}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( CS + ( ( MUR / Max( RRSe,( DS / CS ) ) ) + ( Min( DS ,DS ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.9703703703703703, "obj2": 0.012637891314968223}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.19765027497594717}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Max( FirstVNF_CPU_Server,FirstVNF_CPU_Server ) + RRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - ( ( ( DS / DS ) * Min( RCSe ,( MUM * RCSe ) ) ) - CS ) ) ) - CS ) ,( MUC - RMSe ) )", "obj1": 0.23333333333333334, "obj2": 0.6536153881827769}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.7611111111111111, "obj2": 0.10398593799884104}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7166666666666667, "obj2": 0.13582243506590375}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + ( FirstVNF_Mem - MDR ) ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( CS + MUM ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( MUR + MUC ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.8629629629629629, "obj2": 0.06056893004305368}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * MDR ) )", "choosing": "Min( ( CS + ( Max( RRSe,MUR ) + ( Min( DS ,DS ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.470418194237868}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( RCSe - MUM ) ,CS ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - ( ( CS + MUM ) * RRSe ) ) - Max( RMSe,MLU ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RRSe * ( ( MLU + MUC ) + RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8444444444444444, "obj2": 0.06657661828286453}, {"determining": "Min( ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) ) ,( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.7537037037037037, "obj2": 0.10991698019857749}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( Min( MUM ,( RRSe / CS ) ) - MUM ) )", "obj1": 0.812962962962963, "obj2": 0.07947501522603763}, {"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) / ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( Const - PN ) + FirstVNF_RAM_Server ) / PN ) + MRS ) )", "choosing": "Min( ( ( RRSe + ( Max( RRSe,MUR ) * ( CS * ( MUR / ( RMSe * MUR ) ) ) ) ) - ( ( ( RRSe + MLU ) * RCSe ) + MUC ) ) ,( ( ( MUM - DS ) / ( Max( RCSe,MUR ) + ( MUC + MUR ) ) ) + ( RMSe + MUR ) ) )", "obj1": 0.8703703703703703, "obj2": 0.05708333727888395}, {"determining": "Min( ( ( Max( FirstVNF_Mem,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( Max( RRS,FirstVNF_Mem ) + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU - ( MLU * MUM ) ) + ( ( Min( ( ( MUC - ( ( CS + MUM ) * RRSe ) ) - Max( RMSe,MLU ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RRSe * ( ( MLU + MUC ) + RMSe ) ) ) ,( RCSe * RRSe ) ) ) )", "obj1": 0.8444444444444444, "obj2": 0.06657661828286453}, {"determining": "( Min( ARS ,MRS ) - ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) + Min( ( ACS + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - ( RCSe - ( MUR / MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.7407407407407407, "obj2": 0.11490420328505878}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1648148148148148, "obj2": 0.7334244812052835}, {"determining": "Min( ( PN - ( ( MRS / BR ) * FirstVNF_CPU_Server ) ) ,( ( ( ( BR * CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - Min( ( Min( RCSe ,MUM ) + ( MUM - MUR ) ) ,( ( RRSe * MUM ) / ( MUC - MUM ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1648148148148148, "obj2": 0.7334244812052835}, {"determining": "Min( Max( Max( FirstVNF_RAM_Server,( ( ARS * Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) ) + CRS ) ),( FirstVNF_RAM_Server * AMS ) ) ,( ( Min( ( Min( ( Min( Const ,FirstVNF_RAM ) - MDR ) ,PN ) - MDR ) ,( FirstVNF_RAM / PN ) ) - FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( ( CS + Max( Max( ( DS * MUM ),DS ),DS ) ) * RRSe ) ) ,( ( ( RCSe + DS ) - Max( CS,MUR ) ) / ( Max( RRSe,( RRSe + ( Max( Min( MUM ,MLU ),( CS * RCSe ) ) / MLU ) ) ) - DS ) ) )", "obj1": 0.7944444444444444, "obj2": 0.08881899704069413}, {"determining": "Min( ( PN - Min( ( ( FirstVNF_RAM * DDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( ( ( MRS + PN ) / ACS ) * ( MRS * ARS ) ) )", "choosing": "Min( ( ( MUR + Min( MUR ,( CS + MUR ) ) ) - Max( CS,( Max( Max( ( MLU * MLU ),MLU ),RCSe ) * ( MUC - DS ) ) ) ) ,( MLU - ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.0046685366747279316}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( ( ( BR - MRS ) / Min( MRS ,AMS ) ),( FirstVNF_Mem + BR ) ) + ( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( Const + DDR ) ) ) )", "choosing": "Min( ( Min( Min( RMSe ,( ( ( RCSe * ( MLU * RRSe ) ) * Max( RMSe,MUR ) ) + RRSe ) ) ,MUR ) - MUM ) ,( ( RRSe * MUR ) * RRSe ) )", "obj1": 0.37222222222222223, "obj2": 0.5235866818486378}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Min( FirstVNF_CPU ,FirstVNF_Mem ) + ( FirstVNF_CPU_Server / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) * MDR ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( MLU - ( Min( ( MUM * DS ) ,RCSe ) + ( MUM - MUC ) ) ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6653237341629855}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.14814814814814814, "obj2": 0.7508008921107155}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8740740740740741, "obj2": 0.052212236958366666}], "14": [{"determining": "Min( ( PN - FirstVNF_CPU_Server ) ,( AMS + ( FirstVNF_CPU + ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) ) ) )", "choosing": "Min( ( CS - ( ( ( DS / DS ) * Min( RCSe ,( MUM * RCSe ) ) ) - CS ) ) ,( MLU - ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( FirstVNF_RAM_Server / ( ( CRS + PN ) / ( ARS * ACS ) ) ) - ( ( ( MDR * CRS ) * ACS ) + Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - ( MUC * ( ( MUC * ( MUC * MUM ) ) * ( RCSe / CS ) ) ) ) ,( ( MUC + RCSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( PN + FirstVNF_RAM ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * Min( ( MUM / RMSe ) ,MUM ) ) ) - ( RMSe + ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) / RMSe ) ) ) * RRSe ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8101284070720192}, {"determining": "( ACS - ( ( ( ACS / Const ) + FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16122431568020215}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( ( MUC + RRSe ) * ( MLU * CS ) ) )", "obj1": 0.6351851851851852, "obj2": 0.2317728054428926}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - ( FirstVNF_CPU_Server / FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "Min( ( ( Max( ( ( Min( MLU ,( MLU + DS ) ) + MUM ) - MUM ),RCSe ) + ( ( DS / DS ) - RMSe ) ) + CS ) ,( RCSe - MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.470418194237868}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.42407407407407405, "obj2": 0.39024890655126193}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5592592592592592, "obj2": 0.28984548161074186}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( ( ( ( RRSe - DS ) + Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2714012490065121}, {"determining": "Min( ( FirstVNF_RAM - MDR ) ,( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( ( ( ( RMSe * RCSe ) * ( MUR + RRSe ) ) * MUR ) * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.3814814814814815, "obj2": 0.517821761477984}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.6055555555555555, "obj2": 0.27268983665403185}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) - MDR ) ,RRS )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( MUC - ( MUM - CS ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - ( RMSe - Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.33359642823777635}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "( Max( FirstVNF_RAM,( CRS * ( ( RRS / RRS ) - DDR ) ) ) - ( FirstVNF_Mem_Server - Min( ( PN - Min( ( ( Max( ARS,FirstVNF_CPU ) * ( DDR - FirstVNF_Mem ) ) / PN ) ,FirstVNF_CPU_Server ) ) ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( Max( MUM,MUM ) / ( MUR / MUR ) ) * ( MUM * MUR ) ) - ( RCSe * ( MUR / DS ) ) )", "obj1": 0.9296296296296296, "obj2": 0.04487705597643182}, {"determining": "Min( ( ( ( CRS / ( Max( DDR,( ( FirstVNF_Mem + ARS ) - BR ) ) * RRS ) ) * FirstVNF_CPU_Server ) - DDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Const - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - CS ) + ( MUR / ( RMSe - ( MUM - ( DS / Max( DS,DS ) ) ) ) ) ) - CS ) ,( ( RMSe / RMSe ) - RMSe ) )", "obj1": 0.1259259259259259, "obj2": 0.8053647969630869}, {"determining": "( Min( ARS ,MRS ) - ( ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) + Min( ( ACS + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUM - ( RCSe - ( MUR / MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.7407407407407407, "obj2": 0.11490420328505878}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.13536069475346457}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS + RMSe ) ) ) )", "obj1": 0.3907407407407407, "obj2": 0.48487802952216263}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,Min( ( FirstVNF_CPU_Server + FirstVNF_Mem ) ,MDR ) )", "choosing": "Min( Max( RCSe,MUM ) ,Min( MLU ,DS ) )", "obj1": 0.40925925925925927, "obj2": 0.4813903877007969}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) - MDR ) ,( ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( PN + BR ) ) / Min( FirstVNF_CPU_Server ,Const ) ),( BR + FirstVNF_Mem ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( ( MUM - CS ) - MUM ) ,Max( ( ( ( CS + ( ( ( MUM / MUM ) + ( MLU + RMSe ) ) - RMSe ) ) * RRSe ) + RRSe ),RRSe ) )", "obj1": 0.8888888888888888, "obj2": 0.04695454521976794}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) / AMS ) )", "choosing": "Min( ( Min( ( Min( RCSe ,MUR ) + MUC ) ,Min( RCSe ,MLU ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12962962962962962, "obj2": 0.77328780041106}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5518518518518518, "obj2": 0.29464487971784187}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / PN )", "choosing": "( ( ( Max( RRSe,Max( ( RCSe * DS ),MLU ) ) - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.25, "obj2": 0.6173655497489184}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6229359437925268}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.26851851851851855, "obj2": 0.6079361356050252}, {"determining": "Min( ( FirstVNF_Mem - ACS ) ,( ( ( FirstVNF_CPU + RRS ) - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( FirstVNF_RAM_Server ,MDR ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( Max( RMSe,( RCSe * MUC ) ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.6785880527353637}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.29259259259259257, "obj2": 0.5674763039767253}, {"determining": "( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.24074074074074073, "obj2": 0.6443989096502346}, {"determining": "Min( Min( FirstVNF_RAM_Server ,RRS ) ,( ( ( ( FirstVNF_RAM - DDR ) - ( FirstVNF_CPU / CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,Max( CRS,ARS ) ) ) + Max( ARS,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( RRSe + MUM ) / ( Min( RRSe ,RRSe ) + RCSe ) ) ,RCSe ) ) ,( RCSe - RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7253928314945187}, {"determining": "( ( ACS - DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.22777777777777777, "obj2": 0.652459208581055}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.48703703703703705, "obj2": 0.3491845707643782}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.2037037037037037, "obj2": 0.6928339035234813}, {"determining": "Min( ( MDR - ( ( ( ( DDR * Min( PN ,FirstVNF_CPU_Server ) ) + Max( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM + PN ) ),ACS ) ) + ( Max( PN,( FirstVNF_RAM_Server - MDR ) ) + PN ) ) - DDR ) ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) )", "obj1": 0.28703703703703703, "obj2": 0.5838940901940275}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - AMS ) ) * MDR ) )", "choosing": "Min( ( DS - ( ( CS + MUM ) * RRSe ) ) ,Min( RRSe ,DS ) )", "obj1": 0.3851851851851852, "obj2": 0.5020592330791918}, {"determining": "Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( ( FirstVNF_Mem * Max( ( ACS + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe / MUC ) - DS ) / MUC ) ,( RRSe - RMSe ) )", "obj1": 0.1388888888888889, "obj2": 0.7696575353190298}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( ( ( MRS / PN ) * FirstVNF_CPU_Server ),DDR ) + FirstVNF_RAM ) ) - ( ( CRS - AMS ) / FirstVNF_RAM ) ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - ( ( Max( MLU,RCSe ) / RRSe ) - Min( ( ( MLU - Max( RCSe,( RCSe / RMSe ) ) ) + MLU ) ,Max( Min( ( MUM - Max( ( RMSe + MLU ),MUM ) ) ,( RCSe / ( ( MUM / RRSe ) + ( MLU * MUC ) ) ) ),MUM ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ARS * ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( Min( CS ,( RCSe - MUM ) ) - MUM ) ,( ( RRSe * MUR ) * MUM ) )", "obj1": 0.43703703703703706, "obj2": 0.38466276230215246}, {"determining": "Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( DDR - ( AMS + ( MDR / MDR ) ) ) / CRS ) - ( Min( CRS ,( FirstVNF_Mem_Server / Max( RRS,ACS ) ) ) - CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( ( FirstVNF_Mem * Max( ( PN + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Min( RMSe ,RCSe ) ,MLU ) - MUC ) ,( RCSe - RMSe ) )", "obj1": 0.22407407407407406, "obj2": 0.6655465767210784}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.7055555555555556, "obj2": 0.14472205781531475}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( ( PN + BR ),FirstVNF_CPU_Server ) + Min( RRS ,FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,ACS ) ) ) - ( ( ( ( ( ( MDR - MDR ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / RRS ) * FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( ACS / FirstVNF_RAM ) ) )", "choosing": "Min( ( DS - RMSe ) ,( Min( RMSe ,( Max( RRSe,RMSe ) * RRSe ) ) * MUM ) )", "obj1": 0.8314814814814815, "obj2": 0.07257532788816325}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.45, "obj2": 0.3683013072884483}, {"determining": "Min( ( ( AMS + ( ( ARS / Min( PN ,FirstVNF_RAM ) ) * Const ) ) - MDR ) ,RRS )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - ( ( ( RMSe * ( RRSe - RMSe ) ) / ( ( MLU - ( MUR * DS ) ) + MLU ) ) + DS ) ) * ( ( ( MUC * ( ( MUC * MLU ) - MLU ) ) / RMSe ) * ( ( ( ( RCSe / RMSe ) / ( CS * RCSe ) ) - ( MLU / MLU ) ) + ( ( DS * Min( ( ( MUC * RCSe ) * ( CS + RCSe ) ) ,Min( Min( MUM ,RMSe ) ,RMSe ) ) ) - ( Min( MLU ,RMSe ) * MUM ) ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5822109998905716}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4388888888888889, "obj2": 0.3744279068491883}, {"determining": "Min( Max( Max( FirstVNF_RAM_Server,( ( ARS * Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) ) + CRS ) ),( FirstVNF_RAM_Server * AMS ) ) ,( ( Min( ( Min( ( Min( Const ,FirstVNF_RAM ) - MDR ) ,PN ) - MDR ) ,( FirstVNF_RAM / PN ) ) - FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( ( CS + Max( Max( ( DS * MUM ),DS ),DS ) ) * RRSe ) ) ,( ( ( RCSe + DS ) - Max( CS,MUR ) ) / ( Max( RRSe,( RRSe + ( Max( Min( MUM ,MLU ),( CS * RCSe ) ) / MLU ) ) ) - DS ) ) )", "obj1": 0.7944444444444444, "obj2": 0.08881899704069413}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( CS - RMSe ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUR + DS ) - Max( CS,( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ,( MLU - ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) ) )", "obj1": 0.774074074074074, "obj2": 0.09880083869185657}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * ( ( FirstVNF_Mem + Const ) + MDR ) ) + Min( ( FirstVNF_RAM + Const ) ,( Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - PN ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,Max( ( RMSe * Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( Max( CS,DS ) - DS ) ) ) ),RRSe ) )", "obj1": 0.7055555555555556, "obj2": 0.14472205781531475}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( ( CRS * FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( Max( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ),Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( CRS,ARS ) ) )", "choosing": "Min( ( ( MUM - CS ) - MUM ) ,Max( ( ( ( ( ( ( MUM / MUM ) + ( RMSe + CS ) ) - RMSe ) + CS ) * MUR ) * Min( ( MUC / RMSe ) ,MUM ) ),RRSe ) )", "obj1": 0.8574074074074074, "obj2": 0.059907784924303494}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( MDR ,FirstVNF_RAM_Server ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + RMSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS + RMSe ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7090010359859776}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_RAM_Server - FirstVNF_RAM ) + Min( ( FirstVNF_Mem_Server - ( MDR - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( AMS,CRS ) ) )", "choosing": "Min( Max( RMSe,( MLU - MUM ) ) ,( RCSe - RMSe ) )", "obj1": 0.1814814814814815, "obj2": 0.7196049381549954}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,AMS ) + ( RRS / FirstVNF_Mem ) ) - ( FirstVNF_Mem_Server / FirstVNF_CPU_Server ) ) ) ) * MDR ) )", "choosing": "( ( MUC - Min( ( CS - ( ( MUC * MUR ) - MUC ) ) ,CS ) ) * ( MUC - ( RMSe + MUR ) ) )", "obj1": 0.38333333333333336, "obj2": 0.5032160247689045}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7428887131510038}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( CS + ( Max( RRSe,MUR ) + ( Min( DS ,( MUR * RRSe ) ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.8240740740740741, "obj2": 0.07845541264403251}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - MUM ) - ( RMSe + MUM ) )", "obj1": 0.2722222222222222, "obj2": 0.6059816919528529}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.14814814814814814, "obj2": 0.7508008921107155}, {"determining": "Min( ( PN / ( CRS / FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( ( ( FirstVNF_RAM_Server - MDR ) - FirstVNF_CPU_Server ) / FirstVNF_RAM ) ) )", "choosing": "( ( RMSe - ( MUC * Max( Min( RRSe ,RMSe ),( Max( RRSe,RCSe ) / RMSe ) ) ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,MLU ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS + RMSe ) ) ) )", "obj1": 0.42777777777777776, "obj2": 0.3880923043618427}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( MUR + DS ) - Max( CS,( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ,( MLU - ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) ) )", "obj1": 0.7685185185185185, "obj2": 0.10082374798102284}, {"determining": "( ( FirstVNF_RAM_Server / ( ( FirstVNF_RAM * ACS ) / ( CRS + PN ) ) ) - ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( FirstVNF_Mem + FirstVNF_Mem_Server ) ) + ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( MUM + MUM ) ) ,( ( ( ( MLU - ( Min( ( MUM * DS ) ,RCSe ) + ( MUM - MUC ) ) ) / DS ) * Max( RCSe,RMSe ) ) + ( MLU - MUM ) ) )", "obj1": 0.7462962962962963, "obj2": 0.112607193321581}, {"determining": "Min( ( ( DDR - ( FirstVNF_RAM / AMS ) ) - ACS ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( MUR - MUC ) / RCSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.45, "obj2": 0.3683013072884483}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( Min( ( RRS - MRS ) ,( ACS * MDR ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,ACS ) ) ,BR ) ) ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.9388888888888889, "obj2": 0.031089632015422548}, {"determining": "( Min( ( CRS + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - ( AMS - ( Min( FirstVNF_CPU ,RRS ) - DDR ) ) ) ) * FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe * CS ) * MUC ) - RMSe ) ) ,( ( MUM - ( CS / RRSe ) ) - MUM ) )", "obj1": 0.812962962962963, "obj2": 0.07947501522603763}, {"determining": "Min( ( FirstVNF_Mem - Min( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( MDR - FirstVNF_Mem ) ,PN ) ) ) ,FirstVNF_CPU ) ,MDR ) ) ,( Const / MRS ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( Min( MLU ,MUM ) + MUR ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) / MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.2037037037037037, "obj2": 0.6928339035234813}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( ( MDR - PN ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( ( CS + MUM ) - RMSe ) )", "obj1": 0.5222222222222223, "obj2": 0.3075723205859743}, {"determining": "Min( ( PN / ( Max( ACS,MRS ) * FirstVNF_RAM_Server ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ACS ) ) )", "choosing": "( ( ( MUR / ( ( MLU / ( MUR - ( MUC / ( RCSe / RMSe ) ) ) ) / MUR ) ) - ( MUC * MUM ) ) * Max( ( RMSe + MUR ),MUC ) )", "obj1": 0.19074074074074074, "obj2": 0.705395521240012}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.19765027497594717}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8740740740740741, "obj2": 0.052212236958366666}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RMSe - MUM ) ,( ( Max( ( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9314814814814815, "obj2": 0.0340581500876908}, {"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.8685185185185185, "obj2": 0.05762554474672721}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RCSe - MUM ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7601924724437071}, {"determining": "( Min( ( ( BR + FirstVNF_Mem ) - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( MUM ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.667620793754767}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + ( CRS * ARS ) ) ,( RRS + DDR ) ) ) ) ) * MDR ) )", "choosing": "Min( ( CS + ( Max( ( MLU + MLU ),MUR ) + ( Min( DS ,DS ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.470418194237868}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.18333333333333332, "obj2": 0.7180967485470452}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( RCSe - MUM ) ,CS ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - ( ( CS + MUM ) * RRSe ) ) - Max( RMSe,MLU ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RRSe * ( ( MLU + MUC ) + RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8444444444444444, "obj2": 0.06657661828286453}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.16111111111111112, "obj2": 0.7369992520655693}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( CS * Max( ( ( RMSe * RMSe ) * MLU ),( RCSe * Min( CS ,RRSe ) ) ) ) * ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.015910751592848913}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) / Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ARS - CRS ) * BR ) + ( CRS - Const ) ) )", "choosing": "( Min( Min( ( RCSe - MUM ) ,CS ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - ( ( CS + MUM ) * RRSe ) ) - Max( RMSe,MLU ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RRSe * Min( ( MLU + MUC ) ,RMSe ) ) ) ,( RCSe + ( DS - ( ( CS + ( MUM + MLU ) ) * RRSe ) ) ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06213262035090447}, {"determining": "Min( ( PN - Min( ( ( FirstVNF_RAM * DDR ) / PN ) ,FirstVNF_CPU_Server ) ) ,( ( ( MRS + PN ) / ACS ) * ( MRS * ARS ) ) )", "choosing": "Min( ( ( MUR + Min( MUR ,( CS + MUR ) ) ) - Max( CS,( Max( Max( ( MLU * MLU ),MLU ),RCSe ) * ( MUC - DS ) ) ) ) ,( MLU - ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.0046685366747279316}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.14814814814814814, "obj2": 0.7508008921107155}, {"determining": "Min( ( FirstVNF_CPU_Server * PN ) ,( AMS / ( ( ( Max( ( PN + ( Const * ARS ) ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( ( ( MUR - ( RCSe - MUM ) ) + ( RMSe / Max( MLU,MLU ) ) ) + MUR ) ) - DS ) * ( MUR * Min( ( ( ( RRSe * MUM ) / RCSe ) - ( CS / MUC ) ) ,RCSe ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7601924724437071}, {"determining": "( Min( PN ,FirstVNF_Mem ) - ( ( ( ( FirstVNF_Mem - ( CRS + PN ) ) - FirstVNF_Mem_Server ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / AMS ) ,( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * CS ) ) + ( RRSe * ( ( Max( ( MUR + ( MLU + MLU ) ),RCSe ) + ( ( ( MUC + RRSe ) * ( MLU * ( DS * MLU ) ) ) + RRSe ) ) / ( CS - MUR ) ) ) )", "obj1": 0.7574074074074074, "obj2": 0.10728694175523726}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "Min( ( FirstVNF_Mem - ( ( ( Max( FirstVNF_CPU,Max( MRS,( ARS - FirstVNF_Mem_Server ) ) ) * ARS ) + ( FirstVNF_RAM / MDR ) ) - DDR ) ) ,Max( CRS,Max( MRS,( FirstVNF_Mem * ( ( MRS + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( ( DS - MUC ) * Max( CS,RMSe ) ),DS ) ) ) * RRSe ) - ( MUR - RCSe ) ) - Min( RMSe ,Max( Max( ( RMSe / ( MUR / MLU ) ),RMSe ),Max( ( MUR * RRSe ),RMSe ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.34481769194569234}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC * MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + MUR ),( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) ) )", "obj1": 0.7870370370370371, "obj2": 0.0925278661731897}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( Min( ( RRS - MRS ) ,( ACS * MDR ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,ACS ) ) ,MDR ) ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe - MUM ) * MUR ) + ( MUC / MUM ) ) / ( MUC - ( ( MLU * Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) * MUM ) ) )", "obj1": 0.9555555555555556, "obj2": 0.022319192339926307}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.8814814814814815, "obj2": 0.0502567483464984}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,( MDR - FirstVNF_CPU ) ) * MDR ) )", "choosing": "Min( ( CS + ( ( MUR / Max( RRSe,( ( MUM + MUM ) / CS ) ) ) + ( Min( DS ,DS ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.9925925925925926, "obj2": 0.0017986129945090242}, {"determining": "Min( ( ( DDR - ( ( PN - ARS ) + ( Max( PN,DDR ) + PN ) ) ) - Min( ACS ,BR ) ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( ( RMSe - CS ) ,( Max( ( RRSe * MUR ),RMSe ) * Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34171287553956675}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1648148148148148, "obj2": 0.7334244812052835}, {"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( MDR - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( RRSe + MUC ) - ( ( ( RRSe + MLU ) * RCSe ) + MUC ) ) ,( ( Max( RMSe,DS ) * MUR ) * MUM ) )", "obj1": 0.8481481481481481, "obj2": 0.06473255785583723}], "15": [{"determining": "Min( ( MDR - ( ( ( ( DDR * Min( PN ,FirstVNF_CPU_Server ) ) + Max( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM + PN ) ),ACS ) ) + ( Max( PN,( Min( ARS ,FirstVNF_Mem ) - MDR ) ) + ACS ) ) - DDR ) ) ,PN )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( DS + Min( MLU ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - FirstVNF_CPU_Server ) ,( AMS + ( FirstVNF_CPU + ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) ) ) )", "choosing": "Min( ( CS - ( ( ( DS / DS ) * Min( RCSe ,( MUM * RCSe ) ) ) - CS ) ) ,( MLU - ( MUM / ( ( CS + RRSe ) + Max( Min( ( MUR / MUC ) ,MUR ),( MLU * ( CS - RRSe ) ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( PN + FirstVNF_RAM ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * Min( ( MUM / RMSe ) ,MUM ) ) ) - ( RMSe + ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) / RMSe ) ) ) * RRSe ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8101284070720192}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.4166666666666667, "obj2": 0.4752086328062737}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) * ( ACS - Max( FirstVNF_CPU_Server,BR ) ) ) - MDR ) ,PN )", "choosing": "( ( MUR / Max( ( ( MLU * Max( MUR,DS ) ) + RMSe ),DS ) ) - ( RMSe + MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.40132797501256107}, {"determining": "( ACS - ( ( ( ACS / Const ) + FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16122431568020215}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Max( RRSe,Max( ( RCSe * DS ),MLU ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.34444444444444444, "obj2": 0.5163192514195237}, {"determining": "( ( FirstVNF_RAM + PN ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.5740740740740741, "obj2": 0.2871813675325089}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) - MDR ) ,RRS )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( MUC - ( MUM - CS ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - ( RMSe - Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.33359642823777635}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.6055555555555555, "obj2": 0.27268983665403185}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( ( ( ( RRSe - DS ) + Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2714012490065121}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RMSe - MUM ) ,( ( Max( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9148148148148149, "obj2": 0.038138960038867055}, {"determining": "Min( ( ( ( CRS / ( Max( DDR,( ( FirstVNF_Mem + ARS ) - BR ) ) * RRS ) ) * FirstVNF_CPU_Server ) - DDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Const - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - CS ) + ( MUR / ( RMSe - ( MUM - ( DS / Max( DS,DS ) ) ) ) ) ) - CS ) ,( ( RMSe / RMSe ) - RMSe ) )", "obj1": 0.1259259259259259, "obj2": 0.8053647969630869}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / Min( Min( FirstVNF_RAM ,FirstVNF_RAM ) ,FirstVNF_CPU ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * ( ( MUC + RCSe ) * RRSe ) ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.26666666666666666, "obj2": 0.6021285394194439}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / RRS ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ( FirstVNF_Mem - FirstVNF_RAM_Server ) ) ) ) / AMS ) )", "choosing": "Min( ( Min( ( Min( RCSe ,MUR ) + MUC ) ,Min( RCSe ,MLU ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12962962962962962, "obj2": 0.77328780041106}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / PN )", "choosing": "( ( ( Max( RRSe,Max( ( RCSe * DS ),MLU ) ) - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.25, "obj2": 0.6173655497489184}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( ( MUC + RRSe ) * ( MLU * CS ) ) )", "obj1": 0.6351851851851852, "obj2": 0.2317728054428926}, {"determining": "( ( ( Max( ACS,CRS ) - ( AMS * ( PN - MDR ) ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - Min( MUC ,MUM ) ) - ( DS * RMSe ) ) - Max( RRSe,MUC ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5518518518518518, "obj2": 0.29464487971784187}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.13536069475346457}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) )", "choosing": "Min( ( MUR - ( RCSe - RMSe ) ) ,( RCSe - ( ( ( MLU / Min( Max( MUC,( RMSe / RCSe ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) ) * RRSe ) - ( RRSe * ( Max( ( ( MLU * MLU ) / MLU ),RCSe ) * ( MUC - DS ) ) ) ) ) )", "obj1": 0.2814814814814815, "obj2": 0.6014088098528715}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ARS ) ,( FirstVNF_Mem - Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( MUC + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.15413788535104633}, {"determining": "( ( ACS - DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.22777777777777777, "obj2": 0.652459208581055}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6229359437925268}, {"determining": "( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.24074074074074073, "obj2": 0.6443989096502346}, {"determining": "( ( FirstVNF_Mem_Server - FirstVNF_CPU ) - ( Max( AMS,FirstVNF_RAM_Server ) - DDR ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( ( MUM + DS ) - ( ( CS + MUM ) - ( MUR - ( ( ( ( RMSe / MUR ) + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.7296296296296296, "obj2": 0.12066925011498685}, {"determining": "Min( ( FirstVNF_Mem - ACS ) ,( ( ( FirstVNF_CPU + RRS ) - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( FirstVNF_RAM_Server ,MDR ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( Max( RMSe,( RCSe * MUC ) ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.6785880527353637}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( Min( FirstVNF_RAM_Server ,RRS ) ,( ( ( ( FirstVNF_RAM - DDR ) - ( FirstVNF_CPU / CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,Max( CRS,ARS ) ) ) + Max( ARS,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( RRSe + MUM ) / ( Min( RRSe ,RRSe ) + RCSe ) ) ,RCSe ) ) ,( RCSe - RMSe ) )", "obj1": 0.17037037037037037, "obj2": 0.7253928314945187}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.29259259259259257, "obj2": 0.5674763039767253}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ACS ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( MUC / ( RCSe / RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7142740052073452}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( ( MUC + RRSe ) * ( MLU * CS ) ) )", "obj1": 0.6351851851851852, "obj2": 0.2317728054428926}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - ( RMSe * RMSe ) ) )", "obj1": 0.18703703703703703, "obj2": 0.6990311172480065}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( PN + BR ) ) / Min( MRS ,Const ) ),( BR + FirstVNF_Mem ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( ( MUM - CS ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( MLU + RMSe ) ) - RMSe ) ) * RRSe ) * RRSe ),RRSe ) )", "obj1": 0.8888888888888888, "obj2": 0.04695454521976794}, {"determining": "Min( ( ( DDR - ( FirstVNF_RAM / AMS ) ) - ACS ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( MUR - MUC ) / RCSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.45, "obj2": 0.3683013072884483}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( Min( ( RRS - MRS ) ,( ACS * MDR ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + Max( BR,Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,Max( FirstVNF_Mem,ACS ) ) ,MDR ) ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( RCSe - MUM ) * MUR ) + ( MUC / MUM ) ) / ( MUC - ( ( MLU * Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + MUR ) ) ,( RCSe + MUM ) ) ) * MUM ) ) )", "obj1": 0.9555555555555556, "obj2": 0.022319192339926307}, {"determining": "Min( ( MDR - ( ( ( ( DDR * Min( PN ,FirstVNF_CPU_Server ) ) + Max( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM + PN ) ),ACS ) ) + ( Max( PN,( FirstVNF_RAM_Server - MDR ) ) + PN ) ) - DDR ) ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) )", "obj1": 0.28703703703703703, "obj2": 0.5838940901940275}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( PN ,FirstVNF_Mem ) ) ,PN )", "choosing": "Min( ( ( MUM - ( MUM + RMSe ) ) - MUM ) ,Max( ( ( ( MUR + ( ( ( RMSe / MLU ) + ( DS / MUM ) ) - RMSe ) ) * MUR ) * Min( MUM ,( MUC / RMSe ) ) ),( RCSe / ( DS - ( RRSe + CS ) ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) + RMSe ) ) ) * RRSe ) ) )", "obj1": 0.6407407407407407, "obj2": 0.21450059062671128}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - Max( RRS,FirstVNF_CPU_Server ) ) - MDR ) ,PN )", "choosing": "( ( ( ( ( DS * Min( MUC ,DS ) ) - RMSe ) * RCSe ) - ( ( MUR + MUM ) * RCSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.033303292972798305}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ARS * ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( Min( CS ,( RCSe - MUM ) ) - MUM ) ,( ( RRSe * MUR ) * MUM ) )", "obj1": 0.43703703703703706, "obj2": 0.38466276230215246}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( MDR + FirstVNF_CPU ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_Mem - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( MDR ,FirstVNF_RAM_Server ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "( Min( Min( ( MUR * ( ( RRSe * ( MUR * MUR ) ) + MLU ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + RMSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( CS + RMSe ) ) ) )", "obj1": 0.18518518518518517, "obj2": 0.7090010359859776}, {"determining": "Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( DDR - ( AMS + ( MDR / MDR ) ) ) / CRS ) - ( Min( CRS ,( FirstVNF_Mem_Server / Max( RRS,ACS ) ) ) - CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( ( FirstVNF_Mem * Max( ( PN + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Min( RMSe ,RCSe ) ,MLU ) - MUC ) ,( RCSe - RMSe ) )", "obj1": 0.22407407407407406, "obj2": 0.6655465767210784}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( Max( ARS,AMS ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + Max( BR,Min( ( Min( PN ,FirstVNF_RAM_Server ) / Max( FirstVNF_Mem,ACS ) ) ,BR ) ) ) ) ) )", "choosing": "Min( ( MUM / RRSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( MUC * ( RMSe + MUR ) ) ) ) ) )", "obj1": 0.9462962962962963, "obj2": 0.02629470562944231}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.6370370370370371, "obj2": 0.2224699266342914}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.34927167904215994}, {"determining": "Min( ( ( AMS + ( ( ARS / Min( PN ,FirstVNF_RAM ) ) * Const ) ) - MDR ) ,RRS )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - ( ( ( RMSe * ( RRSe - RMSe ) ) / ( ( MLU - ( MUR * DS ) ) + MLU ) ) + DS ) ) * ( ( ( MUC * ( ( MUC * MLU ) - MLU ) ) / RMSe ) * ( ( ( ( RCSe / RMSe ) / ( CS * RCSe ) ) - ( MLU / MLU ) ) + ( ( DS * Min( ( ( MUC * RCSe ) * ( CS + RCSe ) ) ,Min( Min( MUM ,RMSe ) ,RMSe ) ) ) - ( Min( MLU ,RMSe ) * MUM ) ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5822109998905716}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.19814814814814816, "obj2": 0.6934830533322712}, {"determining": "Min( ( ( DDR - ( ( PN - ARS ) + ( Max( PN,DDR ) + PN ) ) ) - Min( ACS ,BR ) ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( ( RMSe - CS ) ,( Max( ( RRSe * MUR ),RMSe ) * Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34171287553956675}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.45, "obj2": 0.3683013072884483}, {"determining": "Min( Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Max( ( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) ,( RCSe - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6701206557470367}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "Min( ( ( ( ( Max( PN,DDR ) + PN ) + ( ACS - ( MDR - FirstVNF_CPU_Server ) ) ) + DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( MUC / ( ( ( MUM + RRSe ) - CS ) * ( RCSe + ( DS / MUC ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4388888888888889, "obj2": 0.3744279068491883}, {"determining": "Min( Max( Max( FirstVNF_RAM_Server,( ( ARS * Max( FirstVNF_RAM_Server,( FirstVNF_RAM_Server * PN ) ) ) + CRS ) ),( FirstVNF_RAM_Server * AMS ) ) ,( ( Min( ( Min( ( Min( Const ,FirstVNF_RAM ) - MDR ) ,PN ) - MDR ) ,( FirstVNF_RAM / PN ) ) - FirstVNF_CPU ) * MDR ) )", "choosing": "Min( ( MUR - ( ( CS + Max( Max( ( DS * MUM ),DS ),DS ) ) * RRSe ) ) ,( ( ( RCSe + DS ) - Max( CS,MUR ) ) / ( Max( RRSe,( RRSe + ( Max( Min( MUM ,MLU ),( CS * RCSe ) ) / MLU ) ) ) - DS ) ) )", "obj1": 0.7944444444444444, "obj2": 0.08881899704069413}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( Min( Const ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( ( ( ( RRSe - DS ) + Min( ( CS + ( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - ( MUR - RRSe ) ) ,( RCSe - RMSe ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2714012490065121}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.2037037037037037, "obj2": 0.6928339035234813}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( ( PN + BR ),FirstVNF_CPU_Server ) + Min( RRS ,FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,ACS ) ) ) - ( ( ( ( ( ( MDR - MDR ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / RRS ) * FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( ACS / FirstVNF_RAM ) ) )", "choosing": "Min( ( DS - RMSe ) ,( Min( RMSe ,( Max( RRSe,RMSe ) * RRSe ) ) * MUM ) )", "obj1": 0.8314814814814815, "obj2": 0.07257532788816325}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.141162086993768}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.8814814814814815, "obj2": 0.0502567483464984}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC * MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + MUR ),( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) ) )", "obj1": 0.7833333333333333, "obj2": 0.09414000437886762}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( ( ( MRS / PN ) * FirstVNF_CPU_Server ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5592592592592592, "obj2": 0.28984548161074186}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.9648148148148148, "obj2": 0.01687949028037036}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - PN ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( RRSe / MUC ) - DS ) / MUC ) ,( RCSe - RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7601683932339754}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( PN,DDR ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( MUM - Max( ( MUR * RRSe ),RMSe ) ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - RMSe ) ) * MUR ) * Min( ( MUC / RMSe ) ,MUM ) ),RRSe ) )", "obj1": 0.8425925925925926, "obj2": 0.06829973193383557}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.42777777777777776, "obj2": 0.38806298150039187}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.7611111111111111, "obj2": 0.10635598438790686}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( ( MDR - PN ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( ( MUC / RMSe ) ,( MUC / ( MUM + MUR ) ) ) - CS ) ,( ( CS + MUM ) - RMSe ) )", "obj1": 0.5222222222222223, "obj2": 0.3075723205859743}, {"determining": "Min( ( ( ACS * FirstVNF_CPU ) - MDR ) ,( ( Max( ( ( ( MRS / FirstVNF_CPU ) - ( PN + BR ) ) / Min( FirstVNF_CPU_Server ,Const ) ),( BR + FirstVNF_Mem ) ) - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "Min( ( ( MUM - CS ) - MUM ) ,Max( ( ( ( CS + ( ( ( MUM / MUM ) + ( MLU + RMSe ) ) - RMSe ) ) * RRSe ) + RRSe ),RRSe ) )", "obj1": 0.8888888888888888, "obj2": 0.04695454521976794}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,( PN * ARS ) ) + PN ) ) - ( Max( FirstVNF_RAM,ARS ) * ( ( FirstVNF_RAM / ACS ) * FirstVNF_RAM_Server ) ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + ( RRSe + Max( ( RRSe * DS ),( MUM / DS ) ) ) ) ,( RCSe - ( ( Max( RMSe,RCSe ) / RCSe ) / Min( Max( MLU,RCSe ) ,( CS + MUC ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7870370370370371, "obj2": 0.09201950639007955}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.19765027497594717}, {"determining": "( Min( ( CRS + FirstVNF_RAM ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - ( AMS - ( Min( FirstVNF_CPU ,RRS ) - DDR ) ) ) ) * FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "Min( ( MUR - ( ( ( RCSe * CS ) * MUC ) - RMSe ) ) ,( ( MUM - ( CS / RRSe ) ) - MUM ) )", "obj1": 0.812962962962963, "obj2": 0.07947501522603763}, {"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.8685185185185185, "obj2": 0.05762554474672721}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ARS * ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( Min( CS ,( RCSe - MUM ) ) - MUM ) ,( ( RRSe * MUR ) * MUM ) )", "obj1": 0.42407407407407405, "obj2": 0.39024890655126193}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( AMS / ( ( ( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) / FirstVNF_RAM_Server ) / PN ) + Min( ( FirstVNF_Mem_Server - MDR ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RCSe - MUM ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( ( ( RRSe / MUC ) - DS ) / MUC ) ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7698146191439068}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8740740740740741, "obj2": 0.052212236958366666}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( ( ( MUM * MUR ) + ( MUC / MUM ) ) / ( MUM * ( DS - ( ( CS * Max( ( ( RMSe * RMSe ) * MLU ),( RCSe * Min( CS ,RRSe ) ) ) ) * ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.015910751592848913}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR * ( MLU + Min( Max( CS,Min( ( RCSe - RMSe ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7461317556731089}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * CS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.9388888888888889, "obj2": 0.02970513246381248}, {"determining": "( Min( ( ( BR + FirstVNF_Mem ) - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( MUM ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.667620793754767}, {"determining": "Min( ( DDR - ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_Mem_Server - Max( CRS,FirstVNF_RAM_Server ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( RRSe + MUM ) / ( Min( RRSe ,RRSe ) + RCSe ) ) ,RCSe ) ) ,( RCSe - RMSe ) )", "obj1": 0.13703703703703704, "obj2": 0.7657869969752436}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( CS + ( Max( RRSe,MUR ) + ( Min( DS ,( MUR * RRSe ) ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.8240740740740741, "obj2": 0.07845541264403251}, {"determining": "( Min( PN ,FirstVNF_Mem ) - ( ( ( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * CS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7537037037037037, "obj2": 0.1073369562786734}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) / Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ARS - CRS ) * BR ) + ( CRS - Const ) ) )", "choosing": "( Min( Min( ( RCSe - MUM ) ,CS ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - ( ( CS + MUM ) * RRSe ) ) - Max( RMSe,MLU ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RRSe * Min( ( MLU + MUC ) ,RMSe ) ) ) ,( RCSe + ( DS - ( ( CS + ( MUM + MLU ) ) * RRSe ) ) ) ) ) )", "obj1": 0.8518518518518519, "obj2": 0.06213262035090447}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.14814814814814814, "obj2": 0.7508008921107155}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_CPU_Server - FirstVNF_RAM ) * ( FirstVNF_CPU_Server * ACS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( ( MUR * RRSe ),RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07571933419909636}, {"determining": "Min( ( FirstVNF_Mem - ( ( ( Max( FirstVNF_CPU,Max( MRS,( ARS - FirstVNF_Mem_Server ) ) ) * ARS ) + ( FirstVNF_RAM / MDR ) ) - DDR ) ) ,Max( CRS,Max( MRS,( FirstVNF_Mem * ( ( MRS + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( ( DS - MUC ) * Max( CS,RMSe ) ),DS ) ) ) * RRSe ) - ( MUR - RCSe ) ) - Min( RMSe ,Max( Max( ( RMSe / ( MUR / MLU ) ),RMSe ),Max( ( MUR * RRSe ),RMSe ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.34481769194569234}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,( MDR - FirstVNF_CPU ) ) * MDR ) )", "choosing": "Min( ( CS + ( ( MUR / Max( RRSe,( ( MUM + MUM ) / CS ) ) ) + ( Min( DS ,DS ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.9925925925925926, "obj2": 0.0017986129945090242}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( FirstVNF_RAM_Server - MDR ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( MUM - CS ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - RMSe ) ) * MUR ) * Min( ( MUC / ( MUC - ( MUC * MUM ) ) ) ,MUM ) ),RRSe ) )", "obj1": 0.8592592592592593, "obj2": 0.058829483829593916}, {"determining": "Min( ( ( ( ( PN * ( ( ( MDR - PN ) / ARS ) * FirstVNF_CPU ) ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUM * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.8092592592592592, "obj2": 0.08320862959023084}], "16": [{"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( PN,DDR ) ) ) )", "choosing": "( ( MUC - RMSe ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - ( ( ( ( DDR * Min( PN ,FirstVNF_CPU_Server ) ) + Max( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM + PN ) ),ACS ) ) + ( Max( PN,( Min( ARS ,FirstVNF_Mem ) - MDR ) ) + ACS ) ) - DDR ) ) ,PN )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( DS + Min( MLU ,MUM ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( PN + FirstVNF_RAM ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * Min( ( MUM / RMSe ) ,MUM ) ) ) - ( RMSe + ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) / RMSe ) ) ) * RRSe ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8101284070720192}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / ( BR + ( BR + CRS ) ) ) / AMS ) - MDR ) ,RRS )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( ( Max( ( RMSe * ( RRSe / RMSe ) ),CS ) * ( RCSe * ( ( DS / MUR ) * Min( DS ,MLU ) ) ) ) - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.412962962962963, "obj2": 0.41025452246020927}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.213122452092917}, {"determining": "( ACS - ( ( ( ACS / Const ) + FirstVNF_CPU ) + Min( FirstVNF_CPU ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) )", "choosing": "( ( ( MUC / ( RMSe + ( ( CS / CS ) * MUR ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,( MLU + MLU ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ) / ( MUM * ( DS - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16122431568020215}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Max( RRSe,Max( ( RCSe * DS ),MLU ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.34444444444444444, "obj2": 0.5163192514195237}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.26296296296296295, "obj2": 0.5997578719586907}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( ( ( ( RRSe - DS ) + Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2714012490065121}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) - MDR ) ,RRS )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( MUC - ( MUM - CS ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - ( RMSe - Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.33359642823777635}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( PN * FirstVNF_CPU_Server ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) ) ,FirstVNF_CPU ) * Min( FirstVNF_Mem ,ARS ) ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( RMSe / RCSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) + Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7193174472281615}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.7411483645320344}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Max( ( ( ( ( MUC / ( MUM + MUR ) ) - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) ,( RCSe - RMSe ) )", "obj1": 0.24444444444444444, "obj2": 0.6156977737308913}, {"determining": "Min( ( MDR - ( ( ( ( DDR * Min( PN ,FirstVNF_CPU_Server ) ) + Max( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM + PN ) ),ACS ) ) + ( Max( PN,( FirstVNF_RAM_Server - MDR ) ) + PN ) ) - DDR ) ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) )", "obj1": 0.28703703703703703, "obj2": 0.5838940901940275}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "( ( FirstVNF_RAM + PN ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( BR ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( ( MUC - ( MUM - MLU ) ) * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.5833333333333334, "obj2": 0.2805067762859934}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5518518518518518, "obj2": 0.29464487971784187}, {"determining": "Min( ( ( ( CRS / ( Max( DDR,( ( FirstVNF_Mem + ARS ) - BR ) ) * RRS ) ) * FirstVNF_CPU_Server ) - DDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Const - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - CS ) + ( MUR / ( RMSe - ( MUM - ( DS / Max( DS,DS ) ) ) ) ) ) - CS ) ,( ( RMSe / RMSe ) - RMSe ) )", "obj1": 0.1259259259259259, "obj2": 0.8053647969630869}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "( ( ACS - DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.22777777777777777, "obj2": 0.652459208581055}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / FirstVNF_CPU_Server ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12777777777777777, "obj2": 0.7745181586276827}, {"determining": "( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.24074074074074073, "obj2": 0.6443989096502346}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( ( ( MUC + RRSe ) * RMSe ) ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.04545429665186162}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "( ( ( Max( ACS,CRS ) - ( AMS * ( PN - MDR ) ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - Min( MUC ,MUM ) ) - ( DS * RMSe ) ) - Max( RRSe,MUC ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.29259259259259257, "obj2": 0.5674763039767253}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RMSe - MUM ) ,( ( Max( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9148148148148149, "obj2": 0.038138960038867055}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( ( FirstVNF_Mem - ACS ) ,( ( ( FirstVNF_CPU + RRS ) - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( FirstVNF_RAM_Server ,MDR ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( Max( RMSe,( RCSe * MUC ) ) ,( RCSe - MUM ) )", "obj1": 0.2074074074074074, "obj2": 0.6785880527353637}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ARS ) ,( FirstVNF_Mem - Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( MUC + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.15413788535104633}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - ( RMSe * RMSe ) ) )", "obj1": 0.18703703703703703, "obj2": 0.6990311172480065}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( FirstVNF_CPU - ( MRS + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * MUC ) ) ,( RCSe - DS ) )", "obj1": 0.7592592592592593, "obj2": 0.10502286452921537}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( MUM - CS ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - RMSe ) ) * MUR ) * Min( ( MUC / RMSe ) ,MUM ) ),RRSe ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( PN ,( Max( PN,CRS ) - MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( CS - CS ) - MLU ) )", "obj1": 0.7444444444444445, "obj2": 0.11247142068786137}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.45, "obj2": 0.3683013072884483}, {"determining": "Min( Max( ( DDR / FirstVNF_RAM ),Min( BR ,FirstVNF_Mem ) ) ,( ( ARS / ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC + MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + MUR ),( CS + MUC ) ) )", "obj1": 0.4351851851851852, "obj2": 0.3815455563579261}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU * ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server + Min( MDR ,PN ) ) ) ) ) ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( RRSe - MUC ) * RMSe ) * RRSe ) )", "obj1": 0.18333333333333332, "obj2": 0.7074243329087218}, {"determining": "Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( DDR - ( AMS + ( MDR / MDR ) ) ) / CRS ) - ( Min( CRS ,( FirstVNF_Mem_Server / Max( RRS,ACS ) ) ) - CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( ( FirstVNF_Mem * Max( ( PN + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Min( RMSe ,RCSe ) ,MLU ) - MUC ) ,( RCSe - RMSe ) )", "obj1": 0.22407407407407406, "obj2": 0.6655465767210784}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6229359437925268}, {"determining": "Min( ( ( ( ( Max( PN,DDR ) + PN ) + ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - FirstVNF_Mem_Server ) ) - DDR ) - MDR ) ,( PN - ACS ) )", "choosing": "Min( ( Min( CS ,( RCSe - ( MUC / MUR ) ) ) - MUM ) ,( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09904384444720503}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.6055555555555555, "obj2": 0.27268983665403185}, {"determining": "Min( ( ( AMS + ( ( ARS / Min( PN ,FirstVNF_RAM ) ) * Const ) ) - MDR ) ,RRS )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - ( ( ( RMSe * ( RRSe - RMSe ) ) / ( ( MLU - ( MUR * DS ) ) + MLU ) ) + DS ) ) * ( ( ( MUC * ( ( MUC * MLU ) - MLU ) ) / RMSe ) * ( ( ( ( RCSe / RMSe ) / ( CS * RCSe ) ) - ( MLU / MLU ) ) + ( ( DS * Min( ( ( MUC * RCSe ) * ( CS + RCSe ) ) ,Min( Min( MUM ,RMSe ) ,RMSe ) ) ) - ( Min( MLU ,RMSe ) * MUM ) ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5822109998905716}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.19814814814814816, "obj2": 0.6934830533322712}, {"determining": "Min( ( ( DDR - ( ( PN - ARS ) + ( Max( PN,DDR ) + PN ) ) ) - Min( ACS ,BR ) ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( ( RMSe - CS ) ,( Max( ( RRSe * MUR ),RMSe ) * Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34171287553956675}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( CS + ( Max( RRSe,MUR ) + ( Min( DS ,( MUR * RRSe ) ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.8240740740740741, "obj2": 0.07845541264403251}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.141162086993768}, {"determining": "Min( Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Max( ( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) ,( RCSe - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.6701206557470367}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( PN ,FirstVNF_Mem ) ) ,PN )", "choosing": "Min( ( ( MUM - ( MUM + RMSe ) ) - MUM ) ,Max( ( ( ( MUR + ( ( ( RMSe / MLU ) + ( DS / MUM ) ) - RMSe ) ) * MUR ) * Min( MUM ,( MUC / RMSe ) ) ),( RCSe / ( DS - ( RRSe + CS ) ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.14814814814814814, "obj2": 0.7508008921107155}, {"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.8685185185185185, "obj2": 0.05762554474672721}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUR * ( MLU + Min( Max( CS,Min( ( RCSe - RMSe ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.42407407407407405, "obj2": 0.3902489065512619}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( ( ( ( RRSe - DS ) + Min( Min( CS ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2714012490065121}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR * ( MLU + Min( Max( CS,Min( ( RCSe - RMSe ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.15185185185185185, "obj2": 0.7461317556731089}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "( ( FirstVNF_RAM + PN ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.5740740740740741, "obj2": 0.2871813675325089}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - Max( RRS,FirstVNF_CPU_Server ) ) - MDR ) ,PN )", "choosing": "( ( ( ( ( DS * Min( MUC ,DS ) ) - RMSe ) * RCSe ) - ( ( MUR + MUM ) * RCSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.033303292972798305}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.42777777777777776, "obj2": 0.38806298150039187}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.8814814814814815, "obj2": 0.0502567483464984}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( ( ( FirstVNF_CPU_Server / BR ) * FirstVNF_CPU_Server ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( MUM - ( ( MLU / MUC ) * RMSe ) ) )", "obj1": 0.5592592592592592, "obj2": 0.28984548161074186}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.9648148148148148, "obj2": 0.01687949028037036}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( MUR * ( MLU + Min( Max( CS,Min( ( RCSe - RMSe ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.7055555555555556, "obj2": 0.14475138067676566}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) * ( ACS - Max( FirstVNF_CPU_Server,BR ) ) ) - MDR ) ,PN )", "choosing": "( ( MUR / Max( ( ( MLU * Max( MUR,DS ) ) + RMSe ),DS ) ) - ( RMSe + MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.40132797501256107}, {"determining": "Min( ( FirstVNF_Mem - ( ( ( Max( FirstVNF_CPU,Max( MRS,( ARS - FirstVNF_Mem_Server ) ) ) * ARS ) + ( FirstVNF_RAM / MDR ) ) - DDR ) ) ,Max( CRS,Max( MRS,( FirstVNF_Mem * ( ( MRS + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( ( DS - MUC ) * Max( CS,RMSe ) ),DS ) ) ) * RRSe ) - ( MUR - RCSe ) ) - Min( RMSe ,Max( Max( ( RMSe / ( MUR / MLU ) ),RMSe ),Max( ( MUR * RRSe ),RMSe ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.34481769194569234}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) ) * MDR ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ACS ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( MUC / ( RCSe / RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MUC - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.20555555555555555, "obj2": 0.6897484925685496}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( ( PN + BR ),FirstVNF_CPU_Server ) + Min( RRS ,FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - Min( FirstVNF_Mem ,ACS ) ) ) - ( ( ( ( ( ( MDR - MDR ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_Mem + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / RRS ) * FirstVNF_CPU_Server ) ) ,Min( Max( FirstVNF_Mem_Server,MRS ) ,( ACS / FirstVNF_RAM ) ) )", "choosing": "Min( ( DS - RMSe ) ,( Min( RMSe ,( Max( RRSe,RMSe ) * RRSe ) ) * MUM ) )", "obj1": 0.8314814814814815, "obj2": 0.07257532788816325}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + ( MUM + Max( ( RRSe * DS ),( MUM / DS ) ) ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4444444444444444, "obj2": 0.3725326850552427}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( RCSe - DS ) )", "obj1": 0.6055555555555555, "obj2": 0.27268983665403185}, {"determining": "Min( ( ( DDR - ( FirstVNF_RAM / AMS ) ) - ACS ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( MUR - MUC ) / RCSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.45, "obj2": 0.3683013072884483}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,CRS ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Max( ( ( ( ( CS + RCSe ) - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9351851851851852, "obj2": 0.032092267772604585}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ARS / ( MDR - PN ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUR ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7222222222222222, "obj2": 0.12906360181317308}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.19765027497594717}, {"determining": "( ( FirstVNF_RAM + PN ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.575925925925926, "obj2": 0.2857454648928024}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RMSe - MUM ) ,( ( Max( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9185185185185185, "obj2": 0.0360508264689188}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.34927167904215994}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,( MDR - FirstVNF_CPU ) ) * MDR ) )", "choosing": "Min( ( CS + ( ( MUR / Max( RRSe,( ( MUM + MUM ) / CS ) ) ) + ( Min( DS ,DS ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.9925925925925926, "obj2": 0.0017986129945090242}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( FirstVNF_RAM_Server - MDR ) - Min( ( ( BR + FirstVNF_Mem ) - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( MUC - RMSe ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - RMSe ) ) * MUR ) * Min( ( MUC / ( MUC - ( MUC * MUM ) ) ) ,MUM ) ),RRSe ) )", "obj1": 0.8462962962962963, "obj2": 0.06649592419672737}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( MDR * Min( MRS ,Max( ACS,Min( Const ,FirstVNF_Mem ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( RRSe / MUC ) - DS ) + Max( ( MUR * MUR ),( RMSe - MUC ) ) ) * RRSe ) )", "obj1": 0.14444444444444443, "obj2": 0.7597752099427776}, {"determining": "Min( ( ( ( ( Max( Max( MRS,( ARS - FirstVNF_Mem_Server ) ),FirstVNF_CPU ) * ARS ) + ( Max( FirstVNF_RAM,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.13518518518518519, "obj2": 0.7670982867829771}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ( ( Max( FirstVNF_CPU_Server,FirstVNF_Mem_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( Min( Const ,FirstVNF_RAM_Server ) / FirstVNF_Mem_Server ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) / ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( ( ( ( RRSe - DS ) + Min( ( CS + ( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - ( MUR - RRSe ) ) ,( RCSe - RMSe ) ) )", "obj1": 0.737037037037037, "obj2": 0.11977197898830134}, {"determining": "Min( ( DDR - ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_Mem_Server - Max( CRS,FirstVNF_RAM_Server ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( RRSe + MUM ) / ( Min( RRSe ,RRSe ) + RCSe ) ) ,RCSe ) ) ,( RCSe - RMSe ) )", "obj1": 0.13703703703703704, "obj2": 0.7657869969752436}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ACS ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( MUC / ( RCSe / RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7142740052073452}, {"determining": "( Min( PN ,FirstVNF_Mem ) - ( ( ( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * CS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10840126299266373}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,( CRS * ARS ) ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,Max( MUC,Min( RCSe ,MUR ) ) )", "obj1": 0.7759259259259259, "obj2": 0.097712102964524}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + ( MUM + DS ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7944444444444444, "obj2": 0.0887587884363254}, {"determining": "( Min( ( ( BR + FirstVNF_Mem ) - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( MUM ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.21851851851851853, "obj2": 0.667620793754767}, {"determining": "Min( ( ( Min( Min( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ,( MRS / PN ) ) ,FirstVNF_CPU ) * MDR ) / Min( ( BR + FirstVNF_Mem_Server ) ,( FirstVNF_RAM / FirstVNF_CPU ) ) ) ,Min( MRS ,CRS ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC * MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + MUR ),( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) ) )", "obj1": 0.7833333333333333, "obj2": 0.09414000437886762}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.34927167904215994}, {"determining": "( ( ( FirstVNF_Mem - FirstVNF_CPU ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + ( FirstVNF_CPU_Server - Min( RRS ,MRS ) ) ) ) - ( ( ARS / FirstVNF_RAM_Server ) * FirstVNF_Mem ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( CS + ( ( ( RMSe + CS ) + MUR ) - ( ( Min( RRSe ,RMSe ) + RMSe ) + RMSe ) ) ) * RCSe ) ) )", "obj1": 0.725925925925926, "obj2": 0.1241446810774438}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,( BR - ( PN + PN ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( RCSe ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8296296296296296, "obj2": 0.0734211104473637}, {"determining": "( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) - ( ( Max( FirstVNF_CPU,Max( ( Min( DDR ,PN ) / ( Min( AMS ,FirstVNF_Mem_Server ) - FirstVNF_RAM ) ),PN ) ) * ( ARS / FirstVNF_CPU ) ) + Min( ( FirstVNF_RAM + Max( Max( ACS,FirstVNF_Mem_Server ),Min( Min( Min( PN ,FirstVNF_RAM_Server ) ,Max( CRS,ACS ) ) ,MDR ) ) ) ,FirstVNF_CPU ) ) )", "choosing": "( ( ( ( MUM - MUM ) * MUR ) + ( MUC / MUM ) ) / ( CS - ( ( MLU * Min( ( ( ( MUC - CS ) - MUM ) / ( MUR + RRSe ) ) ,( Min( ( DS / RMSe ) ,( MUM * RCSe ) ) + MUM ) ) ) * MUM ) ) )", "obj1": 0.9537037037037037, "obj2": 0.024337593853675427}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - ( ( FirstVNF_Mem * FirstVNF_CPU_Server ) - BR ) ) ,PN )", "choosing": "( ( MUR / ( ( ( RCSe / RCSe ) + MLU ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.40132797501256107}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4388888888888889, "obj2": 0.3744279068491883}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8740740740740741, "obj2": 0.052212236958366666}], "17": [{"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - Max( RRS,FirstVNF_CPU_Server ) ) - MDR ) ,PN )", "choosing": "( ( ( ( ( DS * Min( MUC ,DS ) ) - RMSe ) * RCSe ) - ( ( MUR + MUM ) * RCSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( PN,DDR ) ) ) )", "choosing": "( ( MUC - RMSe ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( CS + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) + RMSe ) ) ) * RRSe ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8146513172903252}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) ,FirstVNF_CPU ) / ( ( ( ACS * CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( ( RMSe - ( ( RMSe / Min( MUC ,RCSe ) ) / Min( CS ,RRSe ) ) ) * RMSe ) + Max( Min( DS ,MUC ),MUC ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.40925925925925927, "obj2": 0.47840022960864476}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.23832751934734756}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.412962962962963, "obj2": 0.41025452246020927}, {"determining": "Min( ( ( ( ( ( PN * ARS ) + ( Max( PN,( CRS * ARS ) ) + PN ) ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + ( MUM + DS ) ) ,( RCSe - ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5888888888888889, "obj2": 0.2650545154436965}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( FirstVNF_Mem,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.49884384497589024}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( ( ( FirstVNF_Mem_Server - ( AMS / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( ( MUC - MUM ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.6759259259259259, "obj2": 0.16899560151146803}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Max( RRSe,Max( ( RCSe * DS ),MLU ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.34444444444444444, "obj2": 0.5163192514195237}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.6351851851851852, "obj2": 0.21008381829294623}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Min( Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + BR ) ,Min( ARS ,FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * Max( Max( ( DS - ( ( CS + MUR ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.26296296296296295, "obj2": 0.595713089161901}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / FirstVNF_CPU_Server ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12777777777777777, "obj2": 0.7745181586276827}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Max( ( ( ( ( MUC / ( MUM + MUR ) ) - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) ,( RCSe - RMSe ) )", "obj1": 0.24444444444444444, "obj2": 0.6156977737308913}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( MUR ,( RCSe - MUM ) )", "obj1": 0.24074074074074073, "obj2": 0.6443989096502346}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RMSe - MUM ) ,( ( Max( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.5111111111111111, "obj2": 0.33338350152233587}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) )", "obj1": 0.95, "obj2": 0.021329368697971293}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( ( ( MUC + RRSe ) * RMSe ) ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.04545429665186162}, {"determining": "Min( ( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( ( RMSe + MUM ) + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.9629629629629629, "obj2": 0.014834524409199953}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "( ( ACS - ( PN * ARS ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16094981601794064}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( ( ( ( CRS / ( Max( DDR,( ( FirstVNF_Mem + ARS ) - BR ) ) * RRS ) ) * FirstVNF_CPU_Server ) - DDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Const - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - CS ) + ( MUR / ( RMSe - ( MUM - ( DS / Max( DS,DS ) ) ) ) ) ) - CS ) ,( ( RMSe / RMSe ) - RMSe ) )", "obj1": 0.1259259259259259, "obj2": 0.8053647969630869}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,CRS ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Max( ( ( ( ( CS + RCSe ) - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9351851851851852, "obj2": 0.032092267772604585}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) / ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( Min( ( RRSe + DS ) ,MUC ) + Min( ( CS - MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2740740740740741, "obj2": 0.5951868921667988}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( PN * FirstVNF_CPU_Server ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) ) ,FirstVNF_CPU ) * Min( FirstVNF_Mem ,ARS ) ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( RMSe / RCSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) + Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7193174472281615}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6229359437925268}, {"determining": "( ( ACS - DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.22777777777777777, "obj2": 0.652459208581055}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / ( RRSe * DS ) ) ),RMSe ) ) ) )", "obj1": 0.4666666666666667, "obj2": 0.3669019061124717}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.29259259259259257, "obj2": 0.5674763039767253}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ARS ) ,( FirstVNF_Mem - Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( MUC + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.15413788535104633}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RMSe - MUM ) ,( ( Max( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9148148148148149, "obj2": 0.038138960038867055}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.8814814814814815, "obj2": 0.0502567483464984}, {"determining": "Min( ( MDR - ( ( ( ( DDR * Min( PN ,FirstVNF_CPU_Server ) ) + Max( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM + PN ) ),ACS ) ) + ( Max( PN,( FirstVNF_RAM_Server - MDR ) ) + PN ) ) - DDR ) ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) )", "obj1": 0.28703703703703703, "obj2": 0.5838940901940275}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( PN ,FirstVNF_Mem ) ) ,PN )", "choosing": "Min( ( ( MUM - ( MUM + RMSe ) ) - MUM ) ,Max( ( ( ( MUR + ( ( ( RMSe / MLU ) + ( DS / MUM ) ) - RMSe ) ) * MUR ) * Min( MUM ,( MUC / RMSe ) ) ),( RCSe / ( DS - ( RRSe + CS ) ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( CS + ( Max( RRSe,MUR ) + ( Min( DS ,( MUR * RRSe ) ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.8240740740740741, "obj2": 0.07845541264403251}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) - MDR ) ,RRS )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( MUC - ( MUM - CS ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - ( RMSe - Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.33359642823777635}, {"determining": "( ( FirstVNF_RAM + PN ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( BR ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( ( MUC - ( MUM - MLU ) ) * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.5833333333333334, "obj2": 0.2805067762859934}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( PN * ARS ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( Min( DS ,DS ) - ( MLU / CS ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.13280034335769167}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( DS + Min( MLU ,MUM ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7130572109609624}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) ) * MDR ) ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ACS ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( MUC / ( RCSe / RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MUC - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.20555555555555555, "obj2": 0.6897484925685496}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,( ( DDR * Min( PN ,FirstVNF_CPU_Server ) ) + Max( ( Min( BR ,FirstVNF_CPU ) - ( FirstVNF_RAM + PN ) ),ACS ) ) ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + Min( MLU ,MUM ) ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6783960405755786}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * Min( FirstVNF_CPU_Server ,( FirstVNF_CPU * ( FirstVNF_RAM_Server - ( FirstVNF_RAM_Server + Min( MDR ,PN ) ) ) ) ) ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( RRSe - MUC ) * RMSe ) * RRSe ) )", "obj1": 0.18333333333333332, "obj2": 0.7074243329087218}, {"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( PN + FirstVNF_RAM ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * Min( ( MUM / RMSe ) ,MUM ) ) ) - ( RMSe + ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) / RMSe ) ) ) * RRSe ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7381174951674571}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5518518518518518, "obj2": 0.29464487971784187}, {"determining": "Min( ( ( AMS + ( ( ARS / Min( PN ,FirstVNF_RAM ) ) * Const ) ) - MDR ) ,RRS )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - ( ( ( RMSe * ( RRSe - RMSe ) ) / ( ( MLU - ( MUR * DS ) ) + MLU ) ) + DS ) ) * ( ( ( MUC * ( ( MUC * MLU ) - MLU ) ) / RMSe ) * ( ( ( ( RCSe / RMSe ) / ( CS * RCSe ) ) - ( MLU / MLU ) ) + ( ( DS * Min( ( ( MUC * RCSe ) * ( CS + RCSe ) ) ,Min( Min( MUM ,RMSe ) ,RMSe ) ) ) - ( Min( MLU ,RMSe ) * MUM ) ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5822109998905716}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34169617908806654}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,( MDR - FirstVNF_CPU ) ) * MDR ) )", "choosing": "Min( ( CS + ( ( MUR / Max( RRSe,( ( MUM + MUM ) / CS ) ) ) + ( Min( DS ,DS ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.9925925925925926, "obj2": 0.0017986129945090242}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.141162086993768}, {"determining": "Min( Max( ( DDR / FirstVNF_RAM ),Min( BR ,FirstVNF_Mem ) ) ,( ( ARS / ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC + MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + MUR ),( CS + MUC ) ) )", "obj1": 0.4351851851851852, "obj2": 0.3815455563579261}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( FirstVNF_RAM / ( MDR - PN ) ) * FirstVNF_CPU ) + ( CRS - CRS ) ) )", "choosing": "( Max( RMSe,CS ) - ( MUR / ( ( MLU + RMSe ) - DS ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689535}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( CS,MUR ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.45, "obj2": 0.3683013072884483}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8740740740740741, "obj2": 0.052212236958366666}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR * ( MLU + Min( Max( CS,Min( RRSe ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - ( RMSe * RMSe ) ) )", "obj1": 0.18703703703703703, "obj2": 0.6990311172480065}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) * ( ACS - Max( FirstVNF_CPU_Server,BR ) ) ) - MDR ) ,PN )", "choosing": "( ( MUR / Max( ( ( MLU * Max( MUR,DS ) ) + RMSe ),DS ) ) - ( RMSe + MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.40132797501256107}, {"determining": "Min( ( FirstVNF_Mem - ( ( ( Max( FirstVNF_CPU,Max( MRS,( ARS - FirstVNF_Mem_Server ) ) ) * ARS ) + ( FirstVNF_RAM / MDR ) ) - DDR ) ) ,Max( CRS,Max( MRS,( FirstVNF_Mem * ( ( MRS + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( ( DS - MUC ) * Max( CS,RMSe ) ),DS ) ) ) * RRSe ) - ( MUR - RCSe ) ) - Min( RMSe ,Max( Max( ( RMSe / ( MUR / MLU ) ),RMSe ),Max( ( MUR * RRSe ),RMSe ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.34481769194569234}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.8685185185185185, "obj2": 0.05762554474672721}, {"determining": "Min( Min( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) ,MDR ) ,( CRS - MDR ) )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( RMSe / MUC ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5592592592592592, "obj2": 0.28984548161074186}, {"determining": "Min( ( ( ( ( Max( Max( MRS,( ARS - FirstVNF_Mem_Server ) ),FirstVNF_CPU ) * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7581495873308535}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( ( ( FirstVNF_CPU + RRS ) - Max( FirstVNF_RAM,Max( FirstVNF_RAM,Min( Max( ( BR + AMS ),Min( FirstVNF_RAM_Server ,MDR ) ) ,Const ) ) ) ) / Min( MRS ,RRS ) ) )", "choosing": "Min( ( ( MUM - ( MUM + RMSe ) ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - RMSe ) ) * MUR ) * Min( MUM ,( MUC / RMSe ) ) ),RRSe ) )", "obj1": 0.22592592592592592, "obj2": 0.6628047461048481}, {"determining": "Min( ( ( Min( PN ,( ( FirstVNF_CPU + FirstVNF_Mem ) + MRS ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.8537037037037037, "obj2": 0.06483202931648215}, {"determining": "( Min( PN ,FirstVNF_Mem ) - ( ( ( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * CS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( Min( MUR ,Min( ( CS + MUC ) ,( RCSe - MUM ) ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10840126299266373}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7388888888888889, "obj2": 0.11445259409011473}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - MUC ) + ( MUR / ( MUR - ( RRSe * Max( DS,DS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5222222222222223, "obj2": 0.309020450043284}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - ACS ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - RMSe ) - MUM ) / ( RRSe + Max( DS,RMSe ) ) ) ,( RRSe + RRSe ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8314814814814815, "obj2": 0.07197734823354172}, {"determining": "( Min( ( ( BR + FirstVNF_Mem ) - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( MUM ,( ( CS + MUM ) * RRSe ) ) / DS ) ) ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6734247672498841}, {"determining": "( ( FirstVNF_RAM + PN ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.5740740740740741, "obj2": 0.2871813675325089}, {"determining": "( ( DDR - ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * Min( AMS ,AMS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( CRS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( MUM * ( ( MUM + ( DS + ( RCSe + ( ( DS * MUC ) / ( MLU * CS ) ) ) ) ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6388888888888888, "obj2": 0.2076013341869534}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.34927167904215994}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( Max( PN,DDR ) - Const ) + Max( ARS,( BR - ( PN + PN ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( RCSe ,MUR ) ) ,( ( MUM + CS ) + ( MUR / ( ( MLU + RMSe ) * DS ) ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8407407407407408, "obj2": 0.06798710946622277}, {"determining": "Min( ( ( ( ( Max( PN,DDR ) + PN ) + ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - FirstVNF_Mem_Server ) ) - DDR ) - MDR ) ,( PN - ACS ) )", "choosing": "Min( ( Min( CS ,( RCSe - ( MUC / MUR ) ) ) - MUM ) ,( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09904384444720503}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( FirstVNF_RAM_Server - MDR ) - ACS ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( MUC - RMSe ) - MUM ) ,Max( MUM,RRSe ) )", "obj1": 0.8592592592592593, "obj2": 0.06251573798486118}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( RRSe / MUC ) - DS ) / ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( Max( MUM,MUC ) - ( CS * MLU ) ) ) * ( MUC - RCSe ) ) ) ) * RRSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7622646485183256}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.19814814814814816, "obj2": 0.6934830533322712}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,( BR - ( PN + PN ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( RCSe ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8296296296296296, "obj2": 0.0734211104473637}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) + RMSe ) ) ) * RRSe ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8089118502616603}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * DS ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.48148148148148145, "obj2": 0.34927167904215994}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( FirstVNF_RAM_Server - MDR ) - Min( ( ( BR + FirstVNF_Mem ) - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( MUC - RMSe ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - RMSe ) ) * MUR ) * Min( ( MUC / ( MUC - ( MUC * MUM ) ) ) ,MUM ) ),RRSe ) )", "obj1": 0.8462962962962963, "obj2": 0.06649592419672737}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3902489065512619}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5518518518518518, "obj2": 0.29464487971784187}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( PN ,( FirstVNF_Mem - MDR ) ) ) ) ,FirstVNF_CPU ) * Max( CRS,MRS ) ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( MUM - RCSe ) ,( ( Min( ( MUR - ( ( CS + ( CS + RRSe ) ) * RRSe ) ) ,( ( ( MUR * DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.19814814814814816, "obj2": 0.6934830533322712}, {"determining": "Min( ( ( ( Min( FirstVNF_RAM_Server ,FirstVNF_Mem_Server ) / ( BR + ( BR + CRS ) ) ) / AMS ) - MDR ) ,RRS )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( ( Max( ( RMSe * ( RRSe / RMSe ) ),CS ) * ( RCSe * ( ( DS / MUR ) * Min( DS ,MLU ) ) ) ) - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.412962962962963, "obj2": 0.41025452246020927}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( ( ( MRS / PN ) * FirstVNF_CPU_Server ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.40132797501256107}, {"determining": "Min( PN ,( Max( PN,CRS ) - MDR ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( CS - CS ) - MLU ) )", "obj1": 0.7444444444444445, "obj2": 0.11247142068786137}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( CS + ( Max( RRSe,MUR ) + ( Min( DS ,( MUR * RRSe ) ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.8240740740740741, "obj2": 0.07845541264403251}, {"determining": "Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( Min( MDR ,( Min( ARS ,( FirstVNF_CPU * DDR ) ) + ACS ) ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( FirstVNF_CPU_Server - Min( RRS ,MRS ) ) ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( MLU * ( MLU + ( RCSe * Min( RMSe ,MLU ) ) ) ) )", "obj1": 0.15555555555555556, "obj2": 0.7442173779669463}, {"determining": "Min( ( DDR - ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_Mem_Server - Max( CRS,FirstVNF_RAM_Server ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( MUM ,Min( ( ( RRSe + MUM ) / ( Min( RRSe ,RRSe ) + RCSe ) ) ,RCSe ) ) ,( RCSe - RMSe ) )", "obj1": 0.13703703703703704, "obj2": 0.7657869969752436}, {"determining": "Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( DDR - ( AMS + ( MDR / MDR ) ) ) / CRS ) - ( Min( CRS ,( FirstVNF_Mem_Server / Max( RRS,ACS ) ) ) - CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( ( FirstVNF_Mem * Max( ( PN + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Min( RMSe ,RCSe ) ,MLU ) - MUC ) ,( RCSe - RMSe ) )", "obj1": 0.22407407407407406, "obj2": 0.6655465767210784}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.5574074074074075, "obj2": 0.29288860720504023}], "18": [{"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( CS + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) + RMSe ) ) ) * RRSe ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8146513172903252}, {"determining": "Min( ( MDR - ( ( ( PN * ( ACS / MDR ) ) + ( PN + Max( ( FirstVNF_CPU - ( MRS + FirstVNF_RAM_Server ) ),MDR ) ) ) + DDR ) ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,DS ) + RMSe ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - Max( RRS,FirstVNF_CPU_Server ) ) - MDR ) ,PN )", "choosing": "( ( ( ( ( DS * Min( MUC ,DS ) ) - RMSe ) * RCSe ) - ( ( MUR + MUM ) * RCSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( CS + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) + RMSe ) ) ) * RRSe ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8146513172903252}, {"determining": "( Min( Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) ,FirstVNF_CPU ) / ( ( ( ACS * CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( ( RMSe - ( ( RMSe / Min( MUC ,RCSe ) ) / Min( CS ,RRSe ) ) ) * RMSe ) + Max( Min( DS ,MUC ),MUC ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.40925925925925927, "obj2": 0.47840022960864476}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( Max( ( RCSe * DS ),MLU ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5814814814814815, "obj2": 0.26104861744003505}, {"determining": "Min( ( ( ( ( ARS * ( Max( MRS,PN ) - RRS ) ) + Min( Max( PN,DDR ) ,PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC / RRSe ) * ( MLU * Max( MUR,MUM ) ) ) + RRSe ) ) ) ) )", "obj1": 0.412962962962963, "obj2": 0.41025452246020927}, {"determining": "( ( FirstVNF_RAM + PN ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( BR ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( ( MUC - ( MUM - MLU ) ) * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( DS + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.6129629629629629, "obj2": 0.24619997081204562}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Min( Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + BR ) ,Min( ARS ,FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( ( Max( FirstVNF_RAM,PN ) - ( CRS * FirstVNF_RAM ) ) ,PN )", "choosing": "Min( ( ( MUM + ( Min( DS ,DS ) * ( MLU / CS ) ) ) - CS ) ,( DS / MUM ) )", "obj1": 0.5703703703703704, "obj2": 0.28488609724053987}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( CS - CS ) - MLU ) )", "obj1": 0.5111111111111111, "obj2": 0.3179053846955164}, {"determining": "Min( ( ( ( CRS / ( Max( DDR,( ( FirstVNF_Mem + ARS ) - BR ) ) * RRS ) ) * FirstVNF_CPU_Server ) - DDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Const - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - CS ) + ( MUR / ( RMSe - ( MUM - ( DS / Max( DS,DS ) ) ) ) ) ) - CS ) ,( ( RMSe / RMSe ) - RMSe ) )", "obj1": 0.1259259259259259, "obj2": 0.8053647969630869}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) - MDR ) ,RRS )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( MUC - ( MUM - CS ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - ( RMSe - Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.33359642823777635}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) - DDR ) - MDR ) ,PN )", "choosing": "( ( MLU * ( DS - ( DS + ( ( ( ( MUM / MUC ) - ( RMSe - MUM ) ) / RRSe ) + CS ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( MUC / ( RCSe / RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MUC - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3592592592592593, "obj2": 0.511874149173776}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / FirstVNF_CPU_Server ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12777777777777777, "obj2": 0.7745181586276827}, {"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( PN + FirstVNF_RAM ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * Min( ( MUM / RMSe ) ,MUM ) ) ) - ( RMSe + ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) / RMSe ) ) ) * RRSe ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7381174951674571}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( ( ( FirstVNF_Mem_Server - ( AMS / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( ( MUR / ( ( Max( RRSe,Max( ( RCSe * DS ),MLU ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.6592592592592592, "obj2": 0.19348537916275757}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( PN * FirstVNF_CPU_Server ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) ) ,FirstVNF_CPU ) * Min( FirstVNF_Mem ,ARS ) ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( RMSe / RCSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) + Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7193174472281615}, {"determining": "Min( ( ( ( ( Max( PN,DDR ) + PN ) + ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - FirstVNF_Mem_Server ) ) - DDR ) - MDR ) ,( PN - ACS ) )", "choosing": "Min( ( Min( CS ,( RCSe - ( MUC / MUR ) ) ) - MUM ) ,( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09904384444720503}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Max( RRSe,Max( ( RCSe * DS ),MLU ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.34444444444444444, "obj2": 0.5163192514195237}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( MLU + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4537037037037037, "obj2": 0.3664251767926919}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.29259259259259257, "obj2": 0.5674763039767253}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "( ( ACS - ( PN * ARS ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16094981601794064}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( ( ( FirstVNF_Mem_Server - ( AMS / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( ( MUC - MUM ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.6666666666666666, "obj2": 0.1735265120886812}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.24259259259259258, "obj2": 0.6229359437925268}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.19814814814814816, "obj2": 0.6831413050724131}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - ( Max( PN,DDR ) + PN ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUR * RRSe ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.6296296296296297, "obj2": 0.21602136273222947}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( FirstVNF_Mem,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( ( ( RRSe - DS ) + Min( Min( ( MUC * MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.2537037037037037, "obj2": 0.6013039803331504}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ARS ) ,( FirstVNF_Mem - Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( MUC + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.15413788535104633}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.8814814814814815, "obj2": 0.0502567483464984}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU + RRS ) + ( PN + Max( BR,DDR ) ) ) ,DDR ) - MDR ) ,( ( Min( FirstVNF_RAM_Server ,Const ) / AMS ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( DS - RRSe ) / Min( ( CS + MUC ) ,( MUM - RCSe ) ) ) - CS ) ,( ( RMSe + RRSe ) + ( RCSe + CS ) ) )", "obj1": 0.4388888888888889, "obj2": 0.37461444303584335}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( MDR + AMS ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Min( ( Max( MUR,MUC ) + MUR ) ,( ( MUM * RCSe ) * MUC ) ) ) ) + ( Min( DS ,Max( RCSe,DS ) ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5005478729420142}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( CRS - ( Max( ARS,PN ) * RRS ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( MUR * ( ( CS - MUR ) / Max( Max( RCSe,( DS - ( ( DS + MUM ) * RRSe ) ) ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.6981481481481482, "obj2": 0.15830582779017596}, {"determining": "( ( FirstVNF_RAM + PN ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( Max( PN,DDR ) + PN ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + ( MUC - CS ) ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.6222222222222222, "obj2": 0.22558041836370338}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( FirstVNF_Mem,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.49884384497589024}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) ) * FirstVNF_CPU_Server ) ) ,( ( Max( PN,DDR ) - Const ) + Max( ARS,( BR - ( PN + PN ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( RCSe ,MUR ) ) ,( ( Min( ( Max( CS,MUR ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) + CS ) + ( MUR / ( ( MLU + RMSe ) * DS ) ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.7925925925925926, "obj2": 0.09502208622896069}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( PN * ARS ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( Min( DS ,DS ) - ( MLU / CS ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7185185185185186, "obj2": 0.13280034335769167}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( ( ( ( ( Max( Max( MRS,( ARS - FirstVNF_Mem_Server ) ),FirstVNF_CPU ) * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ) ,( RCSe - MUM ) )", "obj1": 0.1537037037037037, "obj2": 0.753208989778133}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ) ,( RCSe - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.22962962962962963, "obj2": 0.6429197047183874}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( DDR ,ARS ) / FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - RRSe ) ,( ( Max( ( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * ( MUM * ( ( Max( RRSe,RRSe ) + RCSe ) + MUR ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6781083039482654}, {"determining": "( ( ACS - DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.22777777777777777, "obj2": 0.652459208581055}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - PN ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2833333333333333, "obj2": 0.5876994338121476}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3902489065512619}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( DS / RCSe ) + ( RMSe + CS ) ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6150190402559664}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5518518518518518, "obj2": 0.29464487971784187}, {"determining": "Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( DDR - ( AMS + ( MDR / MDR ) ) ) / CRS ) - ( Min( CRS ,( FirstVNF_Mem_Server / Max( RRS,ACS ) ) ) - CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( ( FirstVNF_Mem * Max( ( PN + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Min( RMSe ,RCSe ) ,MLU ) - MUC ) ,( RCSe - RMSe ) )", "obj1": 0.22407407407407406, "obj2": 0.6655465767210784}, {"determining": "Min( ( MDR - Min( ( ( ( FirstVNF_CPU_Server / FirstVNF_Mem_Server ) * ARS ) + PN ) ,DDR ) ) ,PN )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / ( CS + DS ) ) ) ) ) - DS ) * ( MUR * ( MLU + Max( Min( MUM ,( RRSe / CS ) ),DS ) ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.04545429665186162}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( ( ( RMSe - DS ) + ( MLU * RCSe ) ),CS ) )", "obj1": 0.45, "obj2": 0.3682991841655235}, {"determining": "Min( ( ( AMS + ( ( ARS / Min( PN ,FirstVNF_RAM ) ) * Const ) ) - MDR ) ,RRS )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - ( ( ( RMSe * ( RRSe - RMSe ) ) / ( ( MLU - ( MUR * DS ) ) + MLU ) ) + DS ) ) * ( ( ( MUC * ( ( MUC * MLU ) - MLU ) ) / RMSe ) * ( ( ( ( RCSe / RMSe ) / ( CS * RCSe ) ) - ( MLU / MLU ) ) + ( ( DS * Min( ( ( MUC * RCSe ) * ( CS + RCSe ) ) ,Min( Min( MUM ,RMSe ) ,RMSe ) ) ) - ( Min( MLU ,RMSe ) * MUM ) ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5822109998905716}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34169617908806654}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( CS + ( Max( RRSe,MUR ) + ( Min( DS ,( MUR * RRSe ) ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.8240740740740741, "obj2": 0.07845541264403251}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( ( ( MUC + RRSe ) * RMSe ) ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.8962962962962963, "obj2": 0.04545429665186162}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.141162086993768}, {"determining": "Min( Max( ( DDR / FirstVNF_RAM ),Min( BR ,FirstVNF_Mem ) ) ,( ( ARS / ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC + MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + MUR ),( CS + MUC ) ) )", "obj1": 0.4351851851851852, "obj2": 0.3815455563579261}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,( RRS + FirstVNF_RAM_Server ) ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) / ( MUM * ( Min( Min( Max( RMSe,MUR ) ,Max( ( MUM - RMSe ),MUC ) ) ,Min( ( MUM - Max( MUC,( RRSe / RMSe ) ) ) ,MUM ) ) - ( RCSe - MUR ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.23525720162111838}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( PN,DDR ) + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12752344348704747}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RMSe - MUM ) ,( ( Max( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9148148148148149, "obj2": 0.038138960038867055}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( ( ( FirstVNF_RAM - ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) / FirstVNF_Mem_Server ) - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) + RMSe ) ) ) * RRSe ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8089118502616603}, {"determining": "Min( ( ( ( ( Max( Max( MRS,( ARS - FirstVNF_Mem_Server ) ),FirstVNF_CPU ) * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ) ,( RCSe - MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7581495873308535}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( PN ,FirstVNF_Mem ) ) ,PN )", "choosing": "Min( ( ( MUM - ( MUM + RMSe ) ) - MUM ) ,Max( ( ( ( MUR + ( ( ( RMSe / MLU ) + ( DS / MUM ) ) - RMSe ) ) * MUR ) * Min( MUM ,( MUC / RMSe ) ) ),( RCSe / ( DS - ( RRSe + CS ) ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,CS )", "obj1": 0.42592592592592593, "obj2": 0.38331307693821}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,( FirstVNF_Mem_Server + ARS ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "( ( MUC - ( MUC * MUM ) ) * Max( MUC,( RMSe + MUR ) ) )", "obj1": 0.9407407407407408, "obj2": 0.028764788979328392}, {"determining": "Min( ( ( ( ( PN * ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.9703703703703703, "obj2": 0.012283885529964301}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RMSe - MUM ) ,( ( Max( ( ( MUR - RCSe ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9592592592592593, "obj2": 0.018724733261201512}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( Min( ( FirstVNF_Mem - ( MRS * AMS ) ) ,PN ) ,FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( DS + Min( MLU ,MUM ) ) ) + ( Max( RRSe,MUR ) + ( Min( DS ,( MUR * RRSe ) ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.7944444444444444, "obj2": 0.09314226034042791}, {"determining": "( ( ACS - DDR ) - ( PN * ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7424868538701842}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) * ( ACS - Max( FirstVNF_CPU_Server,BR ) ) ) - MDR ) ,PN )", "choosing": "( ( MUR / Max( ( ( MLU * Max( MUR,DS ) ) + RMSe ),DS ) ) - ( RMSe + MUM ) )", "obj1": 0.4203703703703704, "obj2": 0.40132797501256107}, {"determining": "Min( ( FirstVNF_Mem - ( ( ( Max( FirstVNF_CPU,Max( MRS,( ARS - FirstVNF_Mem_Server ) ) ) * ARS ) + ( FirstVNF_RAM / MDR ) ) - DDR ) ) ,Max( CRS,Max( MRS,( FirstVNF_Mem * ( ( MRS + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( ( DS - MUC ) * Max( CS,RMSe ) ),DS ) ) ) * RRSe ) - ( MUR - RCSe ) ) - Min( RMSe ,Max( Max( ( RMSe / ( MUR / MLU ) ),RMSe ),Max( ( MUR * RRSe ),RMSe ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.34481769194569234}, {"determining": "Min( ( ( ( ( Max( Max( MRS,( ARS - PN ) ),FirstVNF_CPU ) * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( MLU - ( ( MUR * RRSe ) - MUM ) ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ) ,( RCSe - MUM ) )", "obj1": 0.13148148148148148, "obj2": 0.7712868503439215}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( FirstVNF_CPU * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * ( Max( CS,MUR ) + ( CS - MUM ) ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7111111111111111, "obj2": 0.1402220875071995}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( FirstVNF_RAM / ( MDR - PN ) ) * FirstVNF_CPU ) + ( CRS - CRS ) ) )", "choosing": "( Max( RMSe,CS ) - ( MUR / ( ( MLU + RMSe ) - DS ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689535}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9277777777777778, "obj2": 0.02991920488682612}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4759259259259259, "obj2": 0.34951369192228643}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * ARS ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) / ( Max( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) )", "obj1": 0.6203703703703703, "obj2": 0.232942454025349}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) / ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( Min( ( RRSe + DS ) ,MUC ) + Min( ( CS - MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2740740740740741, "obj2": 0.5951868921667988}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) )", "obj1": 0.95, "obj2": 0.021329368697971293}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - ACS ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - RMSe ) - MUM ) / ( RRSe + Max( DS,RMSe ) ) ) ,( RRSe + RRSe ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8314814814814815, "obj2": 0.07197734823354172}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( ( ( FirstVNF_Mem_Server - ( AMS / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( ( MUC - MUM ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.6759259259259259, "obj2": 0.16899560151146803}, {"determining": "Min( ( FirstVNF_Mem - MDR ) ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,( MDR - FirstVNF_CPU ) ) * MDR ) )", "choosing": "Min( ( CS + ( ( MUR / Max( RRSe,( ( MUM + MUM ) / CS ) ) ) + ( Min( DS ,DS ) - RMSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.9925925925925926, "obj2": 0.0017986129945090242}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( ( ( MUC + RRSe ) * RMSe ) ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.6908790083153624}, {"determining": "( Max( ( FirstVNF_RAM - MDR ),FirstVNF_Mem ) - ( PN / PN ) )", "choosing": "Min( ( CS + ( ( ( MUR / Min( ( RRSe / MUC ) ,RRSe ) ) * MUM ) + ( Min( DS ,DS ) - MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.21296296296296297, "obj2": 0.6734247672498841}, {"determining": "( ( Min( Max( FirstVNF_CPU,PN ) ,ARS ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( AMS / FirstVNF_Mem ) ) ,( FirstVNF_RAM_Server * ARS ) ) * MDR ) ) ) - ( ACS - DDR ) )", "choosing": "( Max( RRSe,MUC ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( Max( ( MLU - MUC ),CS ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16822571173311748}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8740740740740741, "obj2": 0.052212236958366666}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / ( CRS + ( MDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( Min( ( MUC * ( DS + RCSe ) ) ,RRSe ) ,MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.2098952179770346}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( ( ( PN / FirstVNF_Mem_Server ) + PN ),( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( RRSe / MUC ) - DS ) / ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( Max( MUM,MUC ) - ( CS * MLU ) ) ) * ( MUC - RCSe ) ) ) ) * RRSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7622646485183256}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( FirstVNF_Mem,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.5978453031275197}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,( FirstVNF_Mem_Server + ARS ) ) ),( RRS + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Max( ( ( ( MUM - DS ) / ( Max( CS,CS ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9388888888888889, "obj2": 0.0298133061514961}, {"determining": "( Min( ( ( BR + FirstVNF_Mem ) - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( MUM ,( ( CS + MUM ) * RRSe ) ) / DS ) ) ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6734247672498841}], "19": [{"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( CS + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) + RMSe ) ) ) * RRSe ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8146513172903252}, {"determining": "Min( ( MDR - ( ( ( PN * ( Max( PN,ARS ) + ( Max( PN,DDR ) + PN ) ) ) + PN ) - ( ( ACS - RRS ) + PN ) ) ) ,PN )", "choosing": "Min( ( MUC - Max( DS,DS ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + ( CS + ( ( ( Max( MUC,MUM ) * ( RMSe + MUM ) ) - MUM ) / Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - ( ( ( PN * ( ACS / MDR ) ) + ( PN + Max( ( FirstVNF_CPU - ( MRS + FirstVNF_RAM_Server ) ),MDR ) ) ) + DDR ) ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,DS ) + RMSe ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( CS + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) + RMSe ) ) ) * RRSe ) ) )", "obj1": 0.11481481481481481, "obj2": 0.8146513172903252}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Min( Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + BR ) ,Min( ARS ,FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MUR * ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * ( RMSe / MLU ) ) ) + RRSe ) ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.4123862856838466}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( ( Max( FirstVNF_Mem_Server,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( FirstVNF_Mem_Server - ACS ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - RMSe ) - MUM ) / ( RRSe + Max( DS,RMSe ) ) ) ,( RRSe + RRSe ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8314814814814815, "obj2": 0.07197734823354172}, {"determining": "Min( ( Max( FirstVNF_RAM,PN ) - ( CRS * FirstVNF_RAM ) ) ,PN )", "choosing": "Min( ( ( MUM + ( Min( DS ,DS ) * ( MLU / CS ) ) ) - CS ) ,( DS / MUM ) )", "obj1": 0.5703703703703704, "obj2": 0.28488609724053987}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( FirstVNF_RAM / ( MDR - PN ) ) * FirstVNF_CPU ) + ( CRS - CRS ) ) )", "choosing": "( Max( RMSe,CS ) - ( MUR / ( ( MLU + RMSe ) - DS ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689535}, {"determining": "( ( Min( DDR ,FirstVNF_Mem ) * FirstVNF_CPU ) - ( ( ( ( MDR - PN ) + ARS ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( ( CS - RRSe ) ,Min( MLU ,Min( Max( CS,Min( Max( ( RCSe * DS ),MLU ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5814814814814815, "obj2": 0.26104861744003505}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + ( MUC - CS ) ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.1814814814814815, "obj2": 0.703167699386946}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( PN * FirstVNF_CPU_Server ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) ) ,FirstVNF_CPU ) * Min( FirstVNF_Mem ,ARS ) ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( RMSe / RCSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) + Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7193174472281615}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "Min( ( MDR - ( ( ( PN * FirstVNF_CPU ) + ( Max( PN,DDR ) + PN ) ) - ( ACS + CRS ) ) ) ,PN )", "choosing": "Min( Min( ( CS - MUC ) ,( MUC / RCSe ) ) ,( ( CS - CS ) - MLU ) )", "obj1": 0.5111111111111111, "obj2": 0.3133949651225028}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * ARS ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( Max( Max( FirstVNF_Mem_Server,Const ),( MDR / ( RRS + AMS ) ) ) / PN ) + Min( ( ( FirstVNF_Mem - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( ( ( CS + MUC ) + ( MUR * MLU ) ) - CS ) )", "obj1": 0.7388888888888889, "obj2": 0.11528027600550482}, {"determining": "( ( FirstVNF_RAM + PN ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( BR ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6074074074074074, "obj2": 0.2485531925103248}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,RCSe )", "obj1": 0.7888888888888889, "obj2": 0.09143531863620764}, {"determining": "Min( ( Max( ( Max( FirstVNF_RAM,Max( MRS,FirstVNF_Mem ) ) + ( MRS - FirstVNF_Mem_Server ) ),FirstVNF_RAM_Server ) - MDR ) ,RRS )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( MUC - ( MUM - CS ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - ( RMSe - Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.5, "obj2": 0.33359642823777635}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "Min( ( ( ( CRS / ( Max( DDR,( ( FirstVNF_Mem + ARS ) - BR ) ) * RRS ) ) * FirstVNF_CPU_Server ) - DDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Const - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - CS ) + ( MUR / ( RMSe - ( MUM - ( DS / Max( DS,DS ) ) ) ) ) ) - CS ) ,( ( RMSe / RMSe ) - RMSe ) )", "obj1": 0.1259259259259259, "obj2": 0.8053647969630869}, {"determining": "( ( ( ( ACS - CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / Max( ( PN + FirstVNF_RAM ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / FirstVNF_RAM ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * Min( ( MUM / RMSe ) ,MUM ) ) ) - ( RMSe + ( ( CS + ( ( ( DS / MUM ) + ( RMSe + CS ) ) - ( ( Min( DS ,RMSe ) + RMSe ) / RMSe ) ) ) * RRSe ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7381174951674571}, {"determining": "Min( ( Min( ( FirstVNF_Mem * FirstVNF_CPU_Server ) ,( FirstVNF_Mem + FirstVNF_Mem ) ) - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( DDR - ( AMS + ( MDR / MDR ) ) ) / CRS ) - ( Min( CRS ,( FirstVNF_Mem_Server / Max( RRS,ACS ) ) ) - CRS ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_RAM_Server * MDR ) ) ,( ( FirstVNF_Mem * Max( ( PN + FirstVNF_Mem_Server ),FirstVNF_Mem_Server ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Min( RMSe ,RCSe ) ,MLU ) - MUC ) ,( RCSe - RMSe ) )", "obj1": 0.22407407407407406, "obj2": 0.6655465767210784}, {"determining": "Min( ( ( ( ( Max( PN,DDR ) + PN ) + ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - FirstVNF_Mem_Server ) ) - DDR ) - MDR ) ,( PN - ACS ) )", "choosing": "Min( ( Min( CS ,( RCSe - ( MUC / MUR ) ) ) - MUM ) ,( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09904384444720503}, {"determining": "Min( ( FirstVNF_CPU_Server * FirstVNF_Mem_Server ) ,( ( Max( ( ( ( RRS / FirstVNF_CPU_Server ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) / AMS ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12777777777777777, "obj2": 0.7745181586276827}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Max( RRSe,Max( ( RCSe * DS ),MLU ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.34444444444444444, "obj2": 0.5163192514195237}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.29259259259259257, "obj2": 0.5674763039767253}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,CS ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( ( ( MUC + RRSe ) * RMSe ) ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3975588870925081}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( ( ( ( RRS / FirstVNF_CPU_Server ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.1820395534336575}, {"determining": "Min( ( ( Max( FirstVNF_RAM,( DDR - Const ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) * ( CS - Min( Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( MUC - RCSe ) )", "obj1": 0.8222222222222222, "obj2": 0.07653161007543682}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.27037037037037037, "obj2": 0.5927649253660422}, {"determining": "( ( ACS - DDR ) - ( PN * ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7424868538701842}, {"determining": "( ( ACS - ( PN * ARS ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16094981601794064}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - PN ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.24259259259259258, "obj2": 0.6168541129653226}, {"determining": "Min( ( ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) - DDR ) - MDR ) ,PN )", "choosing": "( ( MLU * ( DS - ( DS + ( ( ( ( MUM / MUC ) - ( RMSe - MUM ) ) / RRSe ) + CS ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( MUC / ( RCSe / RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MUC - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3592592592592593, "obj2": 0.511874149173776}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RMSe - MUM ) ,( ( Max( ( ( MUR - RCSe ) + ( RMSe + MUM ) ),MUR ) * MUR ) * MUM ) )", "obj1": 0.9592592592592593, "obj2": 0.018724733261201512}, {"determining": "( ( ACS - DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.22777777777777777, "obj2": 0.652459208581055}, {"determining": "Min( ( ( ( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ARS * ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( Min( CS ,( RCSe - MUM ) ) - MUM ) ,( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) )", "obj1": 0.8037037037037037, "obj2": 0.08399172865299392}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5592592592592592, "obj2": 0.28984548161074186}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5518518518518518, "obj2": 0.29464487971784187}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( ( ( MUC + RRSe ) * RMSe ) ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.6908790083153624}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( FirstVNF_Mem,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2574074074074074, "obj2": 0.5978453031275197}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( ( ( MLU - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ) ,( RCSe - ( MUR - ( ( CS + MUM ) * RRSe ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.22962962962962963, "obj2": 0.6429197047183874}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9277777777777778, "obj2": 0.02991920488682612}, {"determining": "Min( ( ( AMS + ( ( ARS / Min( PN ,FirstVNF_RAM ) ) * Const ) ) - MDR ) ,RRS )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - ( ( ( RMSe * ( RRSe - RMSe ) ) / ( ( MLU - ( MUR * DS ) ) + MLU ) ) + DS ) ) * ( ( ( MUC * ( ( MUC * MLU ) - MLU ) ) / RMSe ) * ( ( ( ( RCSe / RMSe ) / ( CS * RCSe ) ) - ( MLU / MLU ) ) + ( ( DS * Min( ( ( MUC * RCSe ) * ( CS + RCSe ) ) ,Min( Min( MUM ,RMSe ) ,RMSe ) ) ) - ( Min( MLU ,RMSe ) * MUM ) ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5822109998905716}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( DDR ,ARS ) / FirstVNF_Mem ) ) )", "choosing": "Min( ( RCSe - RRSe ) ,( ( Max( ( ( ( MUM - DS ) / ( Max( CS,MUR ) + ( CS - MUM ) ) ) + ( RMSe + MUM ) ),MUR ) * MUR ) * ( MUM * ( ( Max( RRSe,RRSe ) + RCSe ) + MUR ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6781083039482654}, {"determining": "Min( ( FirstVNF_Mem - ( ( ( Max( FirstVNF_CPU,Max( MRS,( ARS - FirstVNF_Mem_Server ) ) ) * ARS ) + ( FirstVNF_RAM / MDR ) ) - DDR ) ) ,Max( CRS,Max( MRS,( FirstVNF_Mem * ( ( MRS + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( ( DS - MUC ) * Max( CS,RMSe ) ),DS ) ) ) * RRSe ) - ( MUR - RCSe ) ) - Min( RMSe ,Max( Max( ( RMSe / ( MUR / MLU ) ),RMSe ),Max( ( MUR * RRSe ),RMSe ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.34481769194569234}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( Max( ( RCSe * DS ),MLU ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5814814814814815, "obj2": 0.26104861744003505}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU + RRS ) + ( PN + Max( BR,DDR ) ) ) ,DDR ) - MDR ) ,( ( Min( FirstVNF_RAM_Server ,Const ) / AMS ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( DS - RRSe ) / Min( ( CS + MUC ) ,( MUM - RCSe ) ) ) - CS ) ,( ( RMSe + RRSe ) + ( RCSe + CS ) ) )", "obj1": 0.4388888888888889, "obj2": 0.37461444303584335}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( ( ( RMSe - DS ) + ( MLU * RCSe ) ),CS ) )", "obj1": 0.45, "obj2": 0.3682991841655235}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( PN / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC * MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + MUR ),( CS - CS ) ) ) ) )", "obj1": 0.362962962962963, "obj2": 0.5052030348927671}, {"determining": "Min( ( ( ( ( Max( Max( MRS,( ARS - FirstVNF_Mem_Server ) ),FirstVNF_CPU ) * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( CS + ( ( ( MUR / Min( ( RRSe / MUC ) ,RRSe ) ) * MUM ) + ( Min( DS ,DS ) - MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.13518518518518519, "obj2": 0.7670982867829771}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.8814814814814815, "obj2": 0.0502567483464984}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.141162086993768}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.4648148148148148, "obj2": 0.36305442528951115}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( FirstVNF_Mem,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( MUM ,( ( CS + MUM ) * RRSe ) ) / DS ) ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6023197328806241}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6518518518518519, "obj2": 0.19499104096262124}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( DS / RCSe ) + ( RMSe + CS ) ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6150190402559664}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.9203703703703704, "obj2": 0.036374123461009586}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( PN ,FirstVNF_Mem ) ) ,PN )", "choosing": "Min( ( ( MUM - ( MUM + RMSe ) ) - MUM ) ,Max( ( ( ( MUR + ( ( ( RMSe / MLU ) + ( DS / MUM ) ) - RMSe ) ) * MUR ) * Min( MUM ,( MUC / RMSe ) ) ),( RCSe / ( DS - ( RRSe + CS ) ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( FirstVNF_RAM_Server / PN ) / Min( FirstVNF_RAM ,Min( Max( Max( Min( FirstVNF_CPU ,CRS ),( Const * ACS ) ),Max( Const,Max( BR,PN ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,Max( Min( MUC ,MLU ),Max( DS,RRSe ) ) ) + DS ) * RRSe ) / ( MUM * ( ( MUR - Max( ( ( CS + MUM ) + MUM ),RRSe ) ) - ( CS + MUM ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.19179995433038569}, {"determining": "Min( PN ,( ( ( PN * Max( RRS,( ( BR - FirstVNF_CPU_Server ) + RRS ) ) ) / RRS ) - MDR ) )", "choosing": "( ( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( MUM - MLU ) ) ) + RRSe ) ) / MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( RMSe * ( ( RRSe / RCSe ) / Min( ( DS * MUR ) ,DS ) ) ) ) ) )", "obj1": 0.4759259259259259, "obj2": 0.34951369192228643}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,CS )", "obj1": 0.4222222222222222, "obj2": 0.39351789995311925}, {"determining": "Min( Max( ( DDR / FirstVNF_RAM ),Min( BR ,FirstVNF_Mem ) ) ,( ( ARS / ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC + MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + MUR ),( CS + MUC ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7531820210949285}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( Max( ARS,CRS ) + ( ( ( FirstVNF_CPU / ( Const - ( ( MRS * PN ) + ( CRS * CRS ) ) ) ) - ( PN - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( ( MRS + FirstVNF_CPU_Server ) / ARS ) ) ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( ( ( MUM / ( Min( CS ,RRSe ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUM ) * MUC ) ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37222222222222223, "obj2": 0.49767166078443714}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - ( ARS * ( Max( MRS,PN ) - RRS ) ) ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( ( CS + MUM ) ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7601683932339754}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( CRS - ( Max( ARS,PN ) * RRS ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( MUR * ( ( CS - MUR ) / Max( Max( RCSe,( DS - ( ( DS + MUM ) * RRSe ) ) ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.6981481481481482, "obj2": 0.15830582779017596}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( ( MLU + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9111111111111111, "obj2": 0.03972422503209149}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( ( ( FirstVNF_Mem_Server - ( ( FirstVNF_Mem_Server * Const ) / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( ( MUC - MUM ) ,Max( MUR,RCSe ) ) ) ,( MUC - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.6666666666666666, "obj2": 0.1735265120886812}, {"determining": "Min( ( ( ( ( PN * ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.9907407407407407, "obj2": 0.003672570133517435}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "( ( FirstVNF_RAM + PN ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( BR ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / ( ( MUC - ( MUM - MLU ) ) * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( DS + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.6129629629629629, "obj2": 0.24619997081204562}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,CS )", "obj1": 0.42592592592592593, "obj2": 0.38331307693821}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,FirstVNF_CPU ) ) ) ,( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( MUR / ( MUR - ( RCSe - MUM ) ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.23525720162111838}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( MDR + AMS ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Min( ( Max( MUR,MUC ) + MUR ) ,( ( MUM * RCSe ) * MUC ) ) ) ) + ( Min( DS ,Max( RCSe,DS ) ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5005478729420142}, {"determining": "Min( ( ACS * FirstVNF_RAM_Server ) ,PN )", "choosing": "Min( ( CS + RMSe ) ,( RCSe - ( MUC * MUM ) ) )", "obj1": 0.95, "obj2": 0.021329368697971293}, {"determining": "Min( ( ( ( FirstVNF_Mem - RRS ) / ( ACS * Min( FirstVNF_RAM_Server ,FirstVNF_CPU ) ) ) - MDR ) ,PN )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( MUC,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - ( RCSe + RRSe ) ) * ( MUR * ( MLU + ( Min( MUM ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.8925925925925926, "obj2": 0.04812821834008186}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( RRS / FirstVNF_Mem ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( ( ( MUC + RRSe ) * RMSe ) ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.5259259259259259, "obj2": 0.30717612032769726}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( ( ( FirstVNF_Mem_Server - ( AMS / Min( FirstVNF_Mem_Server ,MDR ) ) ) - ( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( ( MUC - MUM ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.6759259259259259, "obj2": 0.16899560151146803}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,Min( Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( Min( CS ,RRSe ) * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4981481481481482, "obj2": 0.34024703736551554}, {"determining": "( Min( ( ( BR + FirstVNF_Mem ) - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( MUM ,( ( CS + MUM ) * RRSe ) ) / DS ) ) ) ) )", "obj1": 0.21296296296296297, "obj2": 0.6734247672498841}, {"determining": "( ( Min( Max( FirstVNF_CPU,PN ) ,ARS ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( AMS / FirstVNF_Mem ) ) ,( FirstVNF_RAM_Server * ARS ) ) * MDR ) ) ) - ( ACS - DDR ) )", "choosing": "( Max( RRSe,MUC ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( Max( ( MLU - MUC ),CS ) + MUM ) * RRSe ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16822571173311748}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( AMS + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU_Server ) ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( ( RRSe * ( Min( Min( RCSe ,CS ) ,Min( MUM ,( ( DS / MLU ) - DS ) ) ) / RMSe ) ) * ( ( MUR - ( ( ( CS + MUM ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) - ( CS + MUM ) ) ) )", "obj1": 0.6370370370370371, "obj2": 0.20817860353245246}, {"determining": "( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_Mem ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ARS ) ,( FirstVNF_Mem - Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( MUC + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.15413788535104633}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / ( CRS + ( MDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( Min( ( MUC * ( DS + RCSe ) ) ,RRSe ) ,MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.2098952179770346}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( ( ( MUC + RRSe ) * RMSe ) ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.1925925925925926, "obj2": 0.6884293586347072}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5518518518518518, "obj2": 0.29464487971784187}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - FirstVNF_CPU_Server ) ,FirstVNF_RAM )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * ( ( RMSe - ( ( RMSe / Min( MUC ,RCSe ) ) / Min( CS ,RRSe ) ) ) * RMSe ) ) * RRSe ) )", "obj1": 0.9018518518518519, "obj2": 0.043301613946520025}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( PN,DDR ) + PN ) ) ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( MLU + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.13918039090186396}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( ( MUR + DS ) - Max( CS,MUR ) ) / ( MUM - DS ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.19814814814814816, "obj2": 0.6831413050724131}], "20": [{"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( PN * ARS ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) / Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( MDR - ( ( ( PN * ( Max( PN,ARS ) + ( Max( PN,DDR ) + PN ) ) ) + PN ) - ( ( ACS - RRS ) + PN ) ) ) ,PN )", "choosing": "Min( ( MUC - Max( DS,DS ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + ( CS + ( ( ( Max( MUC,MUM ) * ( RMSe + MUM ) ) - MUM ) / Min( RRSe ,RCSe ) ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Min( Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + BR ) ,Min( ARS ,FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.4123862856838466}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.6018518518518519, "obj2": 0.24813233474441557}, {"determining": "( Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( Min( ( MUC * ( DS + RCSe ) ) ,RRSe ) ,MUR ) ) ,( RCSe - MUM ) )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MUR * ( ( MLU + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * ( RMSe / MLU ) ) ) + RRSe ) ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.4123862856838466}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4981481481481482, "obj2": 0.32459473534193056}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( PN * FirstVNF_CPU_Server ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) ) ,FirstVNF_CPU ) * Min( FirstVNF_Mem ,ARS ) ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( RMSe / RCSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) + Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7193174472281615}, {"determining": "Min( ( Max( FirstVNF_RAM,PN ) - ( CRS * FirstVNF_RAM ) ) ,PN )", "choosing": "Min( ( ( MUM + ( Min( DS ,DS ) * ( MLU / CS ) ) ) - CS ) ,( DS / MUM ) )", "obj1": 0.5703703703703704, "obj2": 0.28488609724053987}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( CS + ( MUM + ( Min( DS ,DS ) - MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.35555555555555557, "obj2": 0.5035655851610832}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.15339633632511832}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( Max( ( RCSe * DS ),MLU ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( RCSe - MUM ) )", "obj1": 0.5814814814814815, "obj2": 0.261048617440035}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5104993372773909}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "Min( ( MDR - ( ( ( PN * FirstVNF_CPU ) + ( Max( PN,DDR ) + PN ) ) - ( ACS + CRS ) ) ) ,PN )", "choosing": "Min( Min( ( CS - MUC ) ,( MUC / RCSe ) ) ,( ( CS - CS ) - MLU ) )", "obj1": 0.5111111111111111, "obj2": 0.3133949651225028}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( ( ( RMSe - DS ) + ( MLU * RCSe ) ),CS ) )", "obj1": 0.45, "obj2": 0.3682991841655235}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( RMSe - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8555555555555555, "obj2": 0.06406034845419416}, {"determining": "Min( ( ( AMS + ( ( ARS / Min( PN ,FirstVNF_RAM ) ) * Const ) ) - MDR ) ,RRS )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - ( ( ( RMSe * ( RRSe - RMSe ) ) / ( ( MLU - ( MUR * DS ) ) + MLU ) ) + DS ) ) * ( ( ( MUC * ( ( MUC * MLU ) - MLU ) ) / RMSe ) * ( ( ( ( RCSe / RMSe ) / ( CS * RCSe ) ) - ( MLU / MLU ) ) + ( ( DS * Min( ( ( MUC * RCSe ) * ( CS + RCSe ) ) ,Min( Min( MUM ,RMSe ) ,RMSe ) ) ) - ( Min( MLU ,RMSe ) * MUM ) ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5822109998905716}, {"determining": "Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_RAM - DDR ) ) + Min( ( MDR - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( MUM ,( Min( Max( ( MUR + MUM ),DS ) ,RRSe ) + RCSe ) ) ) - CS ) ,CS )", "obj1": 0.7425925925925926, "obj2": 0.1134518176895868}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Min( Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + BR ) ,Min( ARS ,FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.12407407407407407, "obj2": 0.7777032063020052}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - FirstVNF_RAM ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( PN,DDR ) + PN ) ) ) )", "choosing": "( ( MUR / ( ( MLU + RMSe ) * DS ) ) - ( CS + MUC ) )", "obj1": 0.7240740740740741, "obj2": 0.12635135078086732}, {"determining": "( ( ( ( PN * ARS ) + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) + PN ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( AMS / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + ( ( MUR - RCSe ) + ( RMSe + MUM ) ) ) * RRSe ) ) ) ) )", "obj1": 0.762962962962963, "obj2": 0.10442310970275796}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.4648148148148148, "obj2": 0.36305442528951115}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.29259259259259257, "obj2": 0.5674763039767253}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( ( ( ( RRS / FirstVNF_CPU_Server ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.1820395534336575}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( Max( MRS,PN ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Max( RRSe,Max( Min( ( RCSe / DS ) ,RCSe ),MLU ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.22407407407407406, "obj2": 0.6541688158686728}, {"determining": "Min( Max( FirstVNF_RAM_Server,Max( FirstVNF_Mem,( ( FirstVNF_CPU + PN ) - ( RRS * ( ARS + FirstVNF_Mem ) ) ) ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( ( RRSe + Max( MUR,Max( ( Max( MUC,MUR ) / Max( CS,MUR ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),MUC ) ) ) )", "obj1": 0.8425925925925926, "obj2": 0.06801604072233}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "Min( ( ( ( ( Min( Const ,PN ) * Const ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( MLU ,( ( ( Min( RMSe ,CS ) + MUM ) / RCSe ) * ( MLU * CS ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.02516036083404073}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4925925925925926, "obj2": 0.34169617908806654}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( PN,DDR ) + PN ) ) ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( MLU + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.13918039090186396}, {"determining": "Min( PN ,( ( ( PN * Max( RRS,( ( BR - FirstVNF_CPU_Server ) + RRS ) ) ) / RRS ) - MDR ) )", "choosing": "( ( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( MUM - MLU ) ) ) + RRSe ) ) / MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( RMSe * ( ( RRSe / RCSe ) / Min( ( DS * MUR ) ,DS ) ) ) ) ) )", "obj1": 0.4759259259259259, "obj2": 0.34951369192228643}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( RRS ,Max( ( ARS / Const ),MDR ) ) ) + PN ) - DDR ) - FirstVNF_CPU_Server ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,RMSe ) / Min( MUR ,MLU ) ) - RMSe ) )", "obj1": 0.9574074074074074, "obj2": 0.016873555128069432}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( FirstVNF_Mem,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * ARS ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server / Min( Const ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( MDR - FirstVNF_Mem ) ,Max( RRS,FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ( MRS + ( CRS / FirstVNF_Mem ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( RMSe + Min( MUM ,( MUR + MUC ) ) ) ,MUR ) ) ,( ( MUM * CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7032293887563152}, {"determining": "( ( ACS - ( PN * ARS ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) - DDR ) - MDR ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RCSe / RMSe ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7074074074074074, "obj2": 0.14214325922371132}, {"determining": "Min( Max( ( DDR / FirstVNF_RAM ),Min( BR ,FirstVNF_Mem ) ) ,( ( ARS / ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC + MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + MUR ),( CS + MUC ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7531820210949285}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.8814814814814815, "obj2": 0.0502567483464984}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,CS )", "obj1": 0.4111111111111111, "obj2": 0.39743731907004215}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( Max( ARS,CRS ) + ( ( ( FirstVNF_CPU / ( Const - ( ( MRS * PN ) + ( CRS * CRS ) ) ) ) - ( PN - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( ( MRS + FirstVNF_CPU_Server ) / ARS ) ) ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( ( ( MUM / ( Min( CS ,RRSe ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUM ) * MUC ) ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37222222222222223, "obj2": 0.49767166078443714}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9277777777777778, "obj2": 0.02991920488682612}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - MDR ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / ( CRS + ( MDR / FirstVNF_Mem ) ) ) ) ) ) ) )", "choosing": "( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( Min( ( MUC * ( DS + RCSe ) ) ,RRSe ) ,MUR ) )", "obj1": 0.6351851851851852, "obj2": 0.2098952179770346}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU + RRS ) + ( PN + Max( BR,DDR ) ) ) ,DDR ) - MDR ) ,( ( Min( FirstVNF_RAM_Server ,Const ) / AMS ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( DS - RRSe ) / Min( ( CS + MUC ) ,( MUM - RCSe ) ) ) - CS ) ,( ( RMSe + RRSe ) + ( RCSe + CS ) ) )", "obj1": 0.4388888888888889, "obj2": 0.37461444303584335}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3573299354701079}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( DS / RCSe ) + ( RMSe + CS ) ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6150190402559664}, {"determining": "Min( ( ( ( ( PN * ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.9907407407407407, "obj2": 0.003672570133517435}, {"determining": "Min( ( FirstVNF_Mem - ( ( ( Max( FirstVNF_CPU,Max( MRS,( ARS - FirstVNF_Mem_Server ) ) ) * ARS ) + ( FirstVNF_RAM / MDR ) ) - DDR ) ) ,Max( CRS,Max( MRS,( FirstVNF_Mem * ( ( MRS + MDR ) * FirstVNF_Mem_Server ) ) ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( ( DS - MUC ) * Max( CS,RMSe ) ),DS ) ) ) * RRSe ) - ( MUR - RCSe ) ) - Min( RMSe ,Max( Max( ( RMSe / ( MUR / MLU ) ),RMSe ),Max( ( MUR * RRSe ),RMSe ) ) ) )", "obj1": 0.4888888888888889, "obj2": 0.34481769194569234}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.6240740740740741, "obj2": 0.22086526690033062}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5518518518518518, "obj2": 0.29464487971784187}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - FirstVNF_CPU ) ,PN )", "choosing": "Min( ( Min( ( CS + MUC ) ,( MUM - RCSe ) ) - ( RMSe * RCSe ) ) ,RCSe )", "obj1": 0.9481481481481482, "obj2": 0.019497928683464914}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,CS )", "obj1": 0.42592592592592593, "obj2": 0.38331307693821}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( MDR + AMS ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Min( ( Max( MUR,MUC ) + MUR ) ,( ( MUM * RCSe ) * MUC ) ) ) ) + ( Min( DS ,Max( RCSe,DS ) ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37037037037037035, "obj2": 0.5005478729420142}, {"determining": "Min( ( FirstVNF_RAM * FirstVNF_CPU_Server ) ,Max( FirstVNF_Mem,( ( Const + FirstVNF_Mem_Server ) * FirstVNF_RAM ) ) )", "choosing": "( Min( Min( CS ,( MUC - MUM ) ) ,( Max( MUC,( ( MUM + Min( MLU ,( MUC / MUR ) ) ) / DS ) ) / MLU ) ) + ( ( Min( ( ( RMSe + RCSe ) - ( Max( MUR,DS ) - RCSe ) ) ,( ( ( Max( RCSe,MLU ) * MUC ) / ( MUM * ( DS / RCSe ) ) ) + Min( MUM ,MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( MUC * Max( RCSe,MLU ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08524626887715957}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.5796296296296296, "obj2": 0.26575856652573493}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "( ( ACS - DDR ) - ( PN * ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) - MDR ) ) )", "choosing": "Min( ( RCSe - RCSe ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.12777777777777777, "obj2": 0.7729708027608791}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.4351851851851852, "obj2": 0.3789142378951716}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,Min( Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.5592592592592592, "obj2": 0.2889679678204076}, {"determining": "Min( ( DDR * ( Min( RRS ,RRS ) * FirstVNF_RAM ) ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUR / ( MUM / MLU ) ) * MUR ) / DS ) / MUR ) / ( DS - CS ) ) - ( MLU - ( DS - DS ) ) ) ,( ( Min( DS ,MUR ) / ( MUR + RCSe ) ) - Min( MUM ,MUM ) ) )", "obj1": 0.8314814814814815, "obj2": 0.07181632011128924}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7374046123631559}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,RCSe )", "obj1": 0.7888888888888889, "obj2": 0.09143531863620764}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( FirstVNF_RAM_Server / PN ) / Min( FirstVNF_RAM ,Min( Max( Max( Min( FirstVNF_CPU ,CRS ),( Const * ACS ) ),Max( Const,Max( BR,PN ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,Max( Min( MUC ,MLU ),Max( DS,RRSe ) ) ) + DS ) * RRSe ) / ( MUM * ( ( MUR - Max( ( ( CS + MUM ) + MUM ),RRSe ) ) - ( CS + MUM ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.19179995433038569}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - ( ARS * ( Max( MRS,PN ) - RRS ) ) ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( ( CS + MUM ) ,( RRSe / CS ) ) / DS ) ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7601683932339754}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,RCSe )", "obj1": 0.7888888888888889, "obj2": 0.09143531863620764}, {"determining": "( ( PN * ARS ) - Min( ACS ,( Max( ARS,FirstVNF_CPU ) / ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,Max( ( Min( ( DS * ( Min( RCSe ,RMSe ) / Max( ( CS + CS ),RRSe ) ) ) ,( ( MLU + MUM ) * RRSe ) ) * ( MUR / CS ) ),RRSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7424868538701842}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( CRS - PN ) / BR ) * DDR ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( CS - Min( Max( ( RCSe * CS ),Max( MUR,RMSe ) ) ,( RRSe + MUM ) ) ) + ( RCSe - DS ) ) - CS ) ,( ( MLU * ( ( Min( DS ,CS ) * MLU ) * ( MUR * ( RRSe / ( MUC * MUR ) ) ) ) ) - CS ) )", "obj1": 0.8203703703703704, "obj2": 0.07763833556571355}, {"determining": "Min( ( ( ( ( PN * ( ( MRS * ( DDR * PN ) ) / FirstVNF_Mem ) ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - Max( DS,DS ) ) ,Min( ( ( ( RRSe * MUR ) - MUM ) / ( ( CS * MUC ) * Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.9703703703703703, "obj2": 0.012283885529964301}, {"determining": "Min( ( ( ( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - MDR ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ARS * ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( Min( DS ,DS ) - RMSe ) ) - CS ) ,( RCSe - Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC * MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + MUR ),( CS - CS ) ) ) ) )", "obj1": 0.8074074074074075, "obj2": 0.08193481559474163}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.27037037037037037, "obj2": 0.5927649253660422}, {"determining": "( ( ACS - ( DDR * PN ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( BR / Const ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,( Max( RCSe,DS ) / DS ) ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( Min( MUC ,CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6851851851851852, "obj2": 0.1604295637189334}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,Min( RMSe ,RMSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7593897485294261}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8703703703703703, "obj2": 0.05433669113606946}, {"determining": "Min( ( ( MDR - FirstVNF_RAM ) - MDR ) ,( ( ARS * ACS ) / ( FirstVNF_Mem + PN ) ) )", "choosing": "Min( ( Min( CS ,( RCSe - MUM ) ) - MUM ) ,( ( ( MUC - RRSe ) + Max( ( ( ( RCSe - Min( RCSe ,MUR ) ) + MUM ) * MUR ),Max( MUR,RMSe ) ) ) - ( CS + RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09904384444720503}, {"determining": "( ( ACS - DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.22777777777777777, "obj2": 0.652459208581055}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.6240740740740741, "obj2": 0.22086526690033062}, {"determining": "Min( ( ( ( ( Max( PN,DDR ) + PN ) + ( Min( ( FirstVNF_Mem - MDR ) ,PN ) - FirstVNF_Mem_Server ) ) - DDR ) - MDR ) ,( PN - ACS ) )", "choosing": "Min( ( Min( CS ,( RCSe - ( MUC / MUR ) ) ) - MUM ) ,( ( ( MUC - RRSe ) + Max( ( RCSe * MUR ),Max( MUR,RMSe ) ) ) - ( CS / RRSe ) ) )", "obj1": 0.774074074074074, "obj2": 0.09904384444720503}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3902093091391878}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,( BR / FirstVNF_CPU_Server ) ) / Const ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( MUM ,( ( CS + MUM ) * RRSe ) ) / DS ) ) ) ) )", "obj1": 0.8907407407407407, "obj2": 0.047690263282978824}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6462962962962963, "obj2": 0.1981871220820506}, {"determining": "( ( ( ( ACS + CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / ( ( PN * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) )", "choosing": "( Max( MUR,( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( ( MUM * CS ) + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( MLU - DS ) ) ) ) * RRSe ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7388082133099486}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( AMS + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU_Server ) ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( ( RRSe * ( Min( Min( RCSe ,CS ) ,Min( MUM ,( ( DS / MLU ) - DS ) ) ) / RMSe ) ) * ( ( MUR - ( ( ( CS + MUM ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) - ( CS + MUM ) ) ) )", "obj1": 0.6370370370370371, "obj2": 0.20817860353245246}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + PN ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / ( MUR / DS ) ),RMSe ) ) ) )", "obj1": 0.9203703703703704, "obj2": 0.036374123461009586}, {"determining": "Min( ( FirstVNF_CPU_Server - Min( PN ,FirstVNF_Mem ) ) ,PN )", "choosing": "Min( ( ( MUM - ( MUM + RMSe ) ) - MUM ) ,Max( ( ( ( MUR + ( ( ( RMSe / MLU ) + ( DS / MUM ) ) - RMSe ) ) * MUR ) * Min( MUM ,( MUC / RMSe ) ) ),( RCSe / ( DS - ( RRSe + CS ) ) ) ) )", "obj1": 0.5203703703703704, "obj2": 0.3094265350762411}, {"determining": "Min( ( AMS - ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,( Const + FirstVNF_Mem_Server ) ) ,RRS ) ) + PN ) - DDR ) ) ,FirstVNF_RAM )", "choosing": "Min( ( RCSe - MLU ) ,( ( CS / CS ) * RRSe ) )", "obj1": 0.1925925925925926, "obj2": 0.6883770325938706}], "21": [{"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( PN * ARS ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) / Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( MUM ,( ( CS + MUM ) * RRSe ) ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( PN * ARS ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) / Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.4102517082952626}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Min( Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + BR ) ,Min( ARS ,FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( FirstVNF_RAM_Server / Min( Const ,FirstVNF_CPU_Server ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( Min( ( MDR - FirstVNF_Mem ) ,Max( RRS,FirstVNF_RAM ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ( MRS + ( CRS / FirstVNF_Mem ) ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( RMSe + Min( MUM ,( MUR + MUC ) ) ) ,MUR ) ) ,( ( MUM * CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.17962962962962964, "obj2": 0.7032293887563152}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ( PN * FirstVNF_CPU_Server ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) ) ,FirstVNF_CPU ) * Min( FirstVNF_Mem ,ARS ) ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( RMSe / RCSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) + Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7193174472281615}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "( ( ( FirstVNF_Mem - Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( ( ( ( RRS / FirstVNF_CPU_Server ) - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) / ( MUM * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( ( MLU + RMSe ) * DS ) ) ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.1820395534336575}, {"determining": "Min( ( Max( FirstVNF_RAM,PN ) - ( CRS * FirstVNF_RAM ) ) ,PN )", "choosing": "Min( ( ( MUM + ( Min( DS ,DS ) * ( MLU / CS ) ) ) - CS ) ,( DS / MUM ) )", "obj1": 0.5703703703703704, "obj2": 0.28488609724053987}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - FirstVNF_Mem ) - MDR ) ,( ( FirstVNF_Mem_Server * PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUC + MUC ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.19444444444444445, "obj2": 0.685833162215034}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.337037037037037, "obj2": 0.5104993372773909}, {"determining": "Min( ( MDR - ( ( ( PN * FirstVNF_CPU ) + ( Max( PN,DDR ) + PN ) ) - ( ACS + CRS ) ) ) ,PN )", "choosing": "Min( Min( ( CS - MUC ) ,( MUC / RCSe ) ) ,( ( CS - CS ) - MLU ) )", "obj1": 0.5111111111111111, "obj2": 0.3133949651225028}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.5796296296296296, "obj2": 0.26575856652573493}, {"determining": "( Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( Min( ( MUC * ( DS + RCSe ) ) ,RRSe ) ,MUR ) ) ,( RCSe - MUM ) )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "( ( ACS - ( PN * ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( ( FirstVNF_Mem * PN ) + PN ) * ARS ) ) / MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,Max( RRSe,MUC ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( CS - MUC ) - ( RMSe * RCSe ) ) ,( ( MUC * MUC ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / ( MUR / CS ) ) )", "obj1": 0.674074074074074, "obj2": 0.1679229016888037}, {"determining": "Min( ( ( AMS + ( ( ARS / Min( PN ,FirstVNF_RAM ) ) * Const ) ) - MDR ) ,RRS )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - ( ( ( RMSe * ( RRSe - RMSe ) ) / ( ( MLU - ( MUR * DS ) ) + MLU ) ) + DS ) ) * ( ( ( MUC * ( ( MUC * MLU ) - MLU ) ) / RMSe ) * ( ( ( ( RCSe / RMSe ) / ( CS * RCSe ) ) - ( MLU / MLU ) ) + ( ( DS * Min( ( ( MUC * RCSe ) * ( CS + RCSe ) ) ,Min( Min( MUM ,RMSe ) ,RMSe ) ) ) - ( Min( MLU ,RMSe ) * MUM ) ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5822109998905716}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Min( Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + BR ) ,Min( ARS ,FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.12407407407407407, "obj2": 0.7777032063020052}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.29259259259259257, "obj2": 0.5674763039767253}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( ( ( RMSe - DS ) + ( MLU * RCSe ) ),CS ) )", "obj1": 0.45, "obj2": 0.3682991841655235}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( DDR * ( Min( RRS ,RRS ) * FirstVNF_RAM ) ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUR / ( MUM / MLU ) ) * MUR ) / DS ) / MUR ) / ( DS - CS ) ) - ( MLU - ( DS - DS ) ) ) ,( ( Min( DS ,MUR ) / ( MUR + RCSe ) ) - Min( MUM ,MUM ) ) )", "obj1": 0.8314814814814815, "obj2": 0.07181632011128924}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + RMSe ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.6092592592592593, "obj2": 0.24324630160291563}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( Max( ( RCSe * DS ),MLU ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( ( ( MUR * RRSe ) - MUM ) - MUM ) )", "obj1": 0.5851851851851851, "obj2": 0.25932050644063603}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.15339633632511832}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - FirstVNF_RAM ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( PN,DDR ) + PN ) ) ) )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.1083082215701049}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( RMSe - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8555555555555555, "obj2": 0.06406034845419416}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.19074074074074074, "obj2": 0.6907141495621012}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( CS + ( MUM + ( Min( DS ,DS ) - MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.35555555555555557, "obj2": 0.5035655851610832}, {"determining": "Min( ( ( ( ( Min( Const ,PN ) * Const ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( MLU ,( ( ( Min( RMSe ,CS ) + MUM ) / RCSe ) * ( MLU * CS ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.02516036083404073}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4981481481481482, "obj2": 0.32459473534193056}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.8814814814814815, "obj2": 0.0502567483464984}, {"determining": "Min( ( Min( ( ( FirstVNF_CPU + RRS ) + ( PN + Max( BR,DDR ) ) ) ,DDR ) - MDR ) ,( ( Min( FirstVNF_RAM_Server ,Const ) / AMS ) - FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( DS - RRSe ) / Min( ( CS + MUC ) ,( MUM - RCSe ) ) ) - CS ) ,( ( RMSe + RRSe ) + ( RCSe + CS ) ) )", "obj1": 0.4388888888888889, "obj2": 0.37461444303584335}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.27037037037037037, "obj2": 0.5927649253660422}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( CRS - PN ) / BR ) * DDR ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( CS - Min( Max( ( RCSe * CS ),Max( MUR,RMSe ) ) ,( RRSe + MUM ) ) ) + ( RCSe - DS ) ) - CS ) ,( ( MLU * ( ( Min( DS ,CS ) * MLU ) * ( MUR * ( RRSe / ( MUC * MUR ) ) ) ) ) - CS ) )", "obj1": 0.8203703703703704, "obj2": 0.07763833556571355}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( ( FirstVNF_Mem - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) + ( AMS - Max( ACS,( RRS * ( ( Min( CRS ,PN ) / AMS ) / MRS ) ) ) ) ) )", "choosing": "Min( ( MUC - ( Max( RCSe,( MUM - MUM ) ) - MLU ) ) ,Min( ( ( ( MUR - RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.46111111111111114, "obj2": 0.3643659016238218}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( PN ,( ( ( PN * Max( RRS,( ( BR - FirstVNF_CPU_Server ) + RRS ) ) ) / RRS ) - MDR ) )", "choosing": "( ( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( MUM - MLU ) ) ) + RRSe ) ) / MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( RMSe * ( ( RRSe / RCSe ) / Min( ( DS * MUR ) ,DS ) ) ) ) ) )", "obj1": 0.4759259259259259, "obj2": 0.34951369192228643}, {"determining": "( ( ACS - DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.22962962962962963, "obj2": 0.6511821398258407}, {"determining": "( Min( ( ( FirstVNF_CPU_Server + FirstVNF_Mem ) - MDR ) ,( FirstVNF_RAM + Min( MDR ,( RRS / FirstVNF_CPU ) ) ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Min( MUR ,DS ) + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4981481481481482, "obj2": 0.32459473534193056}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( RRS ,Min( BR ,MRS ) ) ) + PN ) - DDR ) - ( ARS * ( Max( MRS,ARS ) - RRS ) ) ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( ( ( MUC * RRSe ) / RRSe ) - MLU ) ) ) ) )", "obj1": 0.9018518518518519, "obj2": 0.043301613946520025}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe * DS ) + ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( DS * ( MUC * DS ) ) - RMSe ) )", "obj1": 0.5518518518518518, "obj2": 0.29464487971784187}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - FirstVNF_RAM ) - ( ( ( Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( PN,DDR ) + PN ) ) ) )", "choosing": "( ( MUR / Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ) - ( CS + MUC ) )", "obj1": 0.7166666666666667, "obj2": 0.13446922037177558}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) - Min( CRS ,RRS ) ) ,( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( RMSe - Min( DS ,( ( RCSe * RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.46296296296296297, "obj2": 0.35514863963386595}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "Min( ( ( ( Max( RRS,Const ) / ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( CS + ( MUM + ( Min( DS ,Min( RMSe ,Max( RCSe,( RCSe / CS ) ) ) ) - RRSe ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3648148148148148, "obj2": 0.4972162559105183}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,Min( FirstVNF_RAM ,FirstVNF_CPU ) ),RRS ) ) * ( FirstVNF_Mem * ACS ) ) )", "choosing": "Min( ( MUM - RCSe ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( ( MUC + MLU ) / ( MLU + MUR ) ) ) ) + MUM ) )", "obj1": 0.6222222222222222, "obj2": 0.22168899772513476}, {"determining": "Min( Min( ( ( FirstVNF_CPU + RRS ) + ( PN + Max( BR,DDR ) ) ) ,DDR ) ,( ( ARS / ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC + MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + ( ( RMSe + RRSe ) + ( RCSe + CS ) ) ),( CS + MUC ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7515946062635364}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.4148148148148148, "obj2": 0.39220142134597286}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( ( ( ( PN * ( FirstVNF_Mem_Server * Const ) ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - Max( DS,DS ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,( ( CS - MUM ) - ( DS * RMSe ) ) ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.9074074074074074, "obj2": 0.039629322384238226}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) ) - DDR ) - FirstVNF_CPU ) ,PN )", "choosing": "Min( ( Min( ( RMSe + MUC ) ,( MUM - RCSe ) ) - ( RMSe * RCSe ) ) ,RCSe )", "obj1": 0.9888888888888889, "obj2": 0.0028402004950912442}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.6018518518518519, "obj2": 0.24813233474441557}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * ARS ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.4938593633443503}, {"determining": "( ( ( Max( CRS,AMS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Min( RRSe ,Max( ( RCSe * DS ),MLU ) ) + RMSe ) * DS ) ) - ( RMSe + ( DS + MUR ) ) )", "obj1": 0.22407407407407406, "obj2": 0.6541688158686728}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7374046123631559}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( DS / RCSe ) + ( RMSe + CS ) ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6150190402559664}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8703703703703703, "obj2": 0.05433669113606946}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,CS )", "obj1": 0.42407407407407405, "obj2": 0.38581886729376413}, {"determining": "( Max( PN,DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) * RRSe ) )", "obj1": 0.14814814814814814, "obj2": 0.7557113520774129}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,Min( Max( ( ( Min( FirstVNF_Mem_Server ,FirstVNF_CPU_Server ) / FirstVNF_Mem_Server ) + PN ),FirstVNF_RAM ) ,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.5592592592592592, "obj2": 0.2889679678204076}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS + ARS ) ) ) + Min( Max( ( ( FirstVNF_Mem_Server + FirstVNF_Mem_Server ) - DDR ),Const ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( CS - RRSe ) - CS ) ,( ( Min( DS ,MUM ) / CS ) - RMSe ) )", "obj1": 0.7981481481481482, "obj2": 0.0868262245439033}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.6018518518518519, "obj2": 0.24813233474441557}, {"determining": "( ( DDR - ( ( FirstVNF_Mem_Server - Const ) + ( RRS * DDR ) ) ) - ( PN * ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + ( MUC * Max( MUC,RMSe ) ) ) - RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7424868538701842}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),Max( ( RMSe / Min( ( DS * MUR ) ,DS ) ),RMSe ) ) ) )", "obj1": 0.4722222222222222, "obj2": 0.3516494955657131}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( PN / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - RMSe ) ) ) - CS ) ,CS )", "obj1": 0.43333333333333335, "obj2": 0.3782911552127162}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( MDR - MDR ) ) ) + PN ) ) - MDR ) ,PN )", "choosing": "Min( ( ( RCSe - MUM ) - ( RMSe * RCSe ) ) ,RCSe )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( ( RRSe - DS ) ,Min( ( CS + MUC ) ,( Min( Max( Min( MUC ,MLU ),RCSe ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,CS )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( Min( Max( ( DDR / DDR ),FirstVNF_CPU_Server ) ,( MRS * ( CRS - FirstVNF_RAM ) ) ) ,PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - MUC ) + Min( RCSe ,MUR ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9277777777777778, "obj2": 0.02991920488682612}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( FirstVNF_RAM_Server / PN ) / Min( FirstVNF_RAM ,Min( Max( Max( Min( FirstVNF_CPU ,CRS ),( Const * ACS ) ),Max( Const,Max( BR,PN ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,Max( Min( MUC ,MLU ),Max( DS,RRSe ) ) ) + DS ) * RRSe ) / ( MUM * ( ( MUR - Max( ( ( CS + MUM ) + MUM ),RRSe ) ) - ( CS + MUM ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.19179995433038569}, {"determining": "( ( ACS - ( PN * ARS ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) - DDR ) - MDR ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RCSe / RMSe ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7074074074074074, "obj2": 0.14214325922371132}, {"determining": "Min( ( MDR - ( ( ( PN * ( Max( PN,ARS ) + ( Max( PN,DDR ) + PN ) ) ) + PN ) - ( ( ACS - RRS ) + PN ) ) ) ,PN )", "choosing": "Min( ( ( MUM - ( MUM + RMSe ) ) - MUM ) ,Max( ( ( ( CS + ( ( ( DS / MUM ) + ( RMSe / MLU ) ) - RMSe ) ) * MUR ) * Min( MUM ,( MUC / RMSe ) ) ),RRSe ) )", "obj1": 0.13703703703703704, "obj2": 0.767816530222813}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( FirstVNF_RAM + Min( Min( DDR ,FirstVNF_Mem ) ,RRS ) ) ) - DDR ) - ( AMS - FirstVNF_RAM_Server ) ) ,FirstVNF_Mem )", "choosing": "Min( Min( ( ( MUR * MUM ) + RRSe ) ,MUR ) ,( RMSe / RRSe ) )", "obj1": 0.812962962962963, "obj2": 0.079892411568308}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( PN,DDR ) + PN ) ) ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( MLU + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7129629629629629, "obj2": 0.13918039090186396}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( Min( MRS ,Min( ( MDR - PN ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server - MDR ) ) ,( ( FirstVNF_CPU / FirstVNF_CPU ) * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( MUM - ( ( ( MUR + MUC ) - RMSe ) * ( MUC / MLU ) ) ) ,( ( CS - CS ) - MLU ) ) ) - CS ) ,CS )", "obj1": 0.7407407407407407, "obj2": 0.1141803237367333}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUC * ( Max( RCSe,( MLU * DS ) ) - ( MUM + Max( ( RRSe * DS ),( DS / DS ) ) ) ) ) + RRSe ) / ( MUR / CS ) ) ,( ( MUM + Min( Min( DS ,DS ) ,( MLU / CS ) ) ) - CS ) )", "obj1": 0.8481481481481481, "obj2": 0.06675422040782387}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,RCSe )", "obj1": 0.5222222222222223, "obj2": 0.30883150575413315}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,CS )", "obj1": 0.7777777777777778, "obj2": 0.0967442774030899}, {"determining": "Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( Min( FirstVNF_CPU ,MDR ) - ( FirstVNF_RAM - DDR ) ) + Min( ( MDR - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUM / ( ( CS + RRSe ) + Min( ( Max( MUR,MUC ) + MUR ) ,( ( MUM * RCSe ) * MUC ) ) ) ) + ( Min( DS ,Max( RCSe,DS ) ) - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7685185185185185, "obj2": 0.1008410748586271}, {"determining": "( ( ACS - ( PN * ARS ) ) - ( ( ( ARS / Max( MDR,PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( ( Max( CRS,DDR ) + PN ) * ARS ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + ( PN / FirstVNF_Mem ) ) ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( RMSe ,( CS + MUR ) ) ) ,( RCSe - MUM ) ) ,( RRSe * MLU ) ) + ( ( Min( ( ( CS - MUC ) - ( RMSe * MUM ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( Max( MLU,MUM ) + MUC ),RMSe ) ) ) ,( RCSe + MUR ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.1558710586086071}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - FirstVNF_CPU ) ,PN )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RCSe / RMSe ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9537037037037037, "obj2": 0.016841346666812345}, {"determining": "( ( ( ( ACS + CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / ( ( PN * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) )", "choosing": "( Max( MUR,( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( ( MUM * CS ) + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( MLU - DS ) ) ) ) * RRSe ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7388082133099486}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( Min( Min( ( FirstVNF_Mem - MDR ) ,PN ) ,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem_Server - AMS ) ) ) - MDR ) ,( ( FirstVNF_RAM - Max( ( ( BR - ( PN + BR ) ) / Min( MRS ,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ),( BR + FirstVNF_Mem ) ) ) * ( PN * ACS ) ) )", "choosing": "( ( ( ( RRSe + Max( RRSe,Max( ( RCSe * ( CS - MUM ) ),MLU ) ) ) * RCSe ) - Min( RCSe ,RMSe ) ) - Min( RMSe ,( RRSe + ( CS + RCSe ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.03726723356983344}, {"determining": "( ( ACS - ( PN * ARS ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( ( Max( ( FirstVNF_CPU_Server - ACS ),AMS ) - DDR ) - MDR ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( RCSe / RMSe ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7074074074074074, "obj2": 0.14214325922371132}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( CS + ( MUM + ( Min( DS ,DS ) - MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3574074074074074, "obj2": 0.5024653997820642}], "22": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Min( ( ( DDR + CRS ) - MDR ) ,( ( ( PN * ( Max( PN,ARS ) + ( Max( PN,DDR ) + PN ) ) ) + PN ) - ( ( ACS - RRS ) + PN ) ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( MUM + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUC ) ) - MUM ) ) ) - ( RRSe / DS ) ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( PN * ARS ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) / Min( FirstVNF_CPU ,MDR ) ) ) )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( Min( MUM ,( ( CS + MUM ) * RRSe ) ) / DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( ( ( CRS + ( Max( ( ( Const - MRS ) + ( FirstVNF_CPU_Server - ARS ) ),DDR ) + PN ) ) - AMS ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUC + ( Min( MUC ,MLU ) + ( MUR - RCSe ) ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.4, "obj2": 0.47046404007458775}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.55, "obj2": 0.28071411051189515}, {"determining": "Min( ( Max( PN,PN ) - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS + MUR ) / Max( Max( ( DS - ( CS - RCSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.41102461796275086}, {"determining": "( Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( Max( PN,DDR ) + PN ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( ( ( MUM * ( RRSe * RMSe ) ) + ( MUC / MUM ) ) / Min( Min( ( MUC * ( DS + RCSe ) ) ,RRSe ) ,MUR ) ) ,Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,RCSe ) )", "obj1": 0.6222222222222222, "obj2": 0.21979228071049203}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "( ( ( ( CRS * ACS ) - Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) ) - ( Max( PN,( Const * AMS ) ) * ( ( ( Max( Max( FirstVNF_RAM,MRS ),Min( DDR ,FirstVNF_RAM_Server ) ) * FirstVNF_Mem_Server ) + ( FirstVNF_Mem / BR ) ) - FirstVNF_Mem_Server ) ) ) / ( PN * ARS ) )", "choosing": "( Max( DS,( CS + ( MUR + ( Min( MLU ,RMSe ) * MLU ) ) ) ) - ( MUM + MUC ) )", "obj1": 0.3037037037037037, "obj2": 0.5648132217438525}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "( ( ACS - ( PN * ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( ( FirstVNF_Mem * PN ) + PN ) * ARS ) ) / MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,Max( RRSe,MUC ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( CS - MUC ) - ( RMSe * RCSe ) ) ,( ( MUC * MUC ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / ( MUR / CS ) ) )", "obj1": 0.674074074074074, "obj2": 0.1679229016888037}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( ( FirstVNF_Mem - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) + ( AMS - Max( ACS,( RRS * ( ( Min( CRS ,PN ) / AMS ) / MRS ) ) ) ) ) )", "choosing": "Min( ( ( ( CS - Min( Max( ( RCSe * CS ),Max( MUR,RMSe ) ) ,( RRSe + MUM ) ) ) + ( RCSe - DS ) ) - CS ) ,( ( MLU * ( ( Min( DS ,CS ) * MLU ) * ( MUR * ( RRSe / ( MUC * MUR ) ) ) ) ) - CS ) )", "obj1": 0.5370370370370371, "obj2": 0.2983968990315011}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "( Min( ACS ,Const ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Max( ( FirstVNF_RAM + FirstVNF_RAM ),( Max( ( ( FirstVNF_Mem_Server - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server / ARS ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RRSe + Max( DS,DS ) ) / ( MUM * ( ( MUR - ( ( Min( ( MUM / MLU ) ,MUC ) + MUM ) * ( ( CS + RMSe ) * ( RCSe + RRSe ) ) ) ) - ( CS + MUM ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.18196692428011607}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Min( Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + BR ) ,Min( ARS ,FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.12407407407407407, "obj2": 0.7777032063020052}, {"determining": "Min( ( MDR - ( ( ( PN * FirstVNF_CPU ) + ( Max( PN,DDR ) + PN ) ) - ( ACS + CRS ) ) ) ,PN )", "choosing": "Min( Min( ( CS - MUC ) ,( MUC / RCSe ) ) ,( ( CS - CS ) - MLU ) )", "obj1": 0.5111111111111111, "obj2": 0.3133949651225028}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Max( RCSe,( MUM / RRSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Max( RRSe,Max( ( RCSe * DS ),MLU ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.2851851851851852, "obj2": 0.5708819849184222}, {"determining": "( ( ( Max( CRS,AMS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Min( RRSe ,Max( ( RCSe * DS ),MLU ) ) + RMSe ) * DS ) ) - ( RMSe + ( DS + MUR ) ) )", "obj1": 0.22407407407407406, "obj2": 0.6541688158686728}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.5796296296296296, "obj2": 0.26575856652573493}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( RRS ,Min( BR ,MRS ) ) ) + PN ) - DDR ) - ( ARS * ( ( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) ) - RRS ) ) ) ,FirstVNF_RAM )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / ( CS + MUM ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( ( ( MUC * RRSe ) / RRSe ) - MLU ) ) ) ) )", "obj1": 0.39444444444444443, "obj2": 0.4807080942865093}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( ( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - FirstVNF_Mem ) - MDR ) ,( ( FirstVNF_Mem_Server * PN ) / FirstVNF_CPU_Server ) )", "choosing": "Min( ( ( MUC + MUC ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.19444444444444445, "obj2": 0.685833162215034}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6944444444444444, "obj2": 0.15339633632511832}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( Max( ( RCSe * DS ),MLU ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( ( ( MUR * RRSe ) - MUM ) - MUM ) )", "obj1": 0.5851851851851851, "obj2": 0.25932050644063603}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( FirstVNF_RAM + ( BR - FirstVNF_CPU_Server ) ) ) ) ) ),FirstVNF_RAM ) )", "choosing": "( Max( Max( CS,CS ),MUR ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6492246871441514}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( RMSe - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8555555555555555, "obj2": 0.06406034845419416}, {"determining": "( ( ACS - ( PN * ARS ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( ( FirstVNF_Mem * MRS ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),DS ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16094981601794064}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( ( ( RMSe - DS ) + ( MLU * RCSe ) ),CS ) )", "obj1": 0.45, "obj2": 0.3682991841655235}, {"determining": "( Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) - Min( ( FirstVNF_CPU - ( ( DDR - AMS ) * ( MRS * FirstVNF_RAM_Server ) ) ) ,PN ) ) ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_Mem ) + ( FirstVNF_Mem / Min( ( FirstVNF_Mem / MRS ) ,( PN - Max( PN,DDR ) ) ) ) ) )", "choosing": "Min( ( RRSe + Max( DS,DS ) ) ,( RCSe - ( Max( ( MUC * ( ( ( RCSe + MUC ) - MUC ) / CS ) ),MLU ) - MUM ) ) )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4981481481481482, "obj2": 0.32459473534193056}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * ARS ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.4938593633443503}, {"determining": "Min( ( ( ( ( ( ( PN * ARS ) + PN ) - DDR ) + ( Max( PN,PN ) + PN ) ) - DDR ) - FirstVNF_CPU ) ,PN )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) ) / RMSe ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.011794520403613819}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_CPU_Server ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( ( FirstVNF_Mem - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) + ( AMS - Max( ACS,( RRS * ( ( Min( CRS ,PN ) / AMS ) / MRS ) ) ) ) ) )", "choosing": "Min( ( MUC - ( Max( RCSe,( MUM - MUM ) ) - MLU ) ) ,Min( ( ( ( MUR - RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.46111111111111114, "obj2": 0.3643659016238218}, {"determining": "( ( DDR - ( ( FirstVNF_Mem_Server - Const ) + ( RRS * DDR ) ) ) - ( PN * ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + ( MUC * Max( MUC,RMSe ) ) ) - RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7424868538701842}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( ( ( FirstVNF_CPU * MRS ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),( CS + MUM ) ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( ( MUM - ( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.715078263717545}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( CS + ( MUM + ( Min( DS ,DS ) - MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.35185185185185186, "obj2": 0.5085373633342327}, {"determining": "Min( PN ,( ( ( PN * Max( RRS,( ( BR - FirstVNF_CPU_Server ) + RRS ) ) ) / RRS ) - MDR ) )", "choosing": "( ( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( MUM - MLU ) ) ) + RRSe ) ) / MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( RMSe * ( ( RRSe / RCSe ) / Min( ( DS * MUR ) ,DS ) ) ) ) ) )", "obj1": 0.4759259259259259, "obj2": 0.34951369192228643}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( MDR - MDR ) ) ) + PN ) ) - MDR ) ,PN )", "choosing": "Min( ( ( RCSe - MUM ) - ( RMSe * RCSe ) ) ,RCSe )", "obj1": 0.7314814814814815, "obj2": 0.11919256610525669}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + RMSe ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.6092592592592593, "obj2": 0.24324630160291563}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - RMSe ) ,( ( Max( RCSe,( MUR + ( ( RMSe / Max( MLU,MLU ) ) + ( MUR - ( RRSe / MUC ) ) ) ) ) - DS ) * ( MUR * ( MLU + ( ( ( MUC * RRSe ) / RRSe ) - MLU ) ) ) ) )", "obj1": 0.7925925925925926, "obj2": 0.09174101383580957}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4981481481481482, "obj2": 0.32459473534193056}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "( ( Min( BR ,RRS ) - Max( ( PN - FirstVNF_RAM_Server ),( FirstVNF_RAM + MDR ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) )", "choosing": "( Max( ( ( RRSe - ( ( ( Max( MUC,MUC ) + CS ) - ( ( CS + MUM ) + Min( RRSe ,MUC ) ) ) * ( MUC - RCSe ) ) ) * ( MUR / RRSe ) ),RMSe ) - ( RMSe + MUM ) )", "obj1": 0.29259259259259257, "obj2": 0.5674763039767253}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7374046123631559}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.18888888888888888, "obj2": 0.6968479941077702}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "Min( ( ( ( CRS + ( Max( ( PN * ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) ,( MUR + ( ( MUR - ( RRSe / RMSe ) ) + ( RMSe / Max( MLU,MLU ) ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12991405917421694}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( DS / RCSe ) + ( RRSe + MUM ) ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6139671397556714}, {"determining": "( Max( PN,DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) * RRSe ) )", "obj1": 0.14814814814814814, "obj2": 0.7557113520774129}, {"determining": "Min( Min( ( ( FirstVNF_CPU + RRS ) + ( PN + Max( BR,DDR ) ) ) ,DDR ) ,( ( ARS / ACS ) / ( CRS + PN ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC + MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) - CS ) ,Max( ( CS + ( ( RMSe + RRSe ) + ( RCSe + CS ) ) ),( CS + MUC ) ) )", "obj1": 0.1537037037037037, "obj2": 0.7515946062635364}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7193174472281615}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - FirstVNF_RAM ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Max( PN,DDR ) + PN ) ) ) )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.1083082215701049}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( ( RRSe - DS ) ,Min( ( CS + MUC ) ,( Min( Max( Min( MUC ,MLU ),RCSe ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,CS )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * BR ) ) - ( FirstVNF_Mem * ( RRS - Max( Const,( BR / FirstVNF_Mem ) ) ) ) ) / ( ( AMS * FirstVNF_Mem ) - MDR ) )", "choosing": "( ( ( MLU - ( MUC - MUM ) ) - ( DS * Min( ( ( RMSe * RRSe ) * Min( RRSe ,MUM ) ) ,MUC ) ) ) - ( ( RCSe - MUM ) + ( MUM * MLU ) ) )", "obj1": 0.337037037037037, "obj2": 0.5104993372773909}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( FirstVNF_RAM + Min( Min( DDR ,FirstVNF_Mem ) ,RRS ) ) ) - DDR ) - ( AMS - FirstVNF_RAM_Server ) ) ,FirstVNF_Mem )", "choosing": "Min( Min( ( ( MUR * MUM ) + RRSe ) ,MUR ) ,( RMSe / RRSe ) )", "obj1": 0.812962962962963, "obj2": 0.079892411568308}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( CS ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7635805101712697}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.6462962962962963, "obj2": 0.19818712208205058}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( MUR - ( ( CS + MUM ) * RRSe ) ) )", "obj1": 0.8962962962962963, "obj2": 0.04442344202293329}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.6018518518518519, "obj2": 0.24813233474441557}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( ( MUC - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8703703703703703, "obj2": 0.05433669113606946}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * RMSe ) * RRSe ) )", "obj1": 0.8851851851851852, "obj2": 0.04999126735579444}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,CS )", "obj1": 0.42407407407407405, "obj2": 0.38581886729376413}, {"determining": "Min( ( DDR * ( Min( RRS ,RRS ) * FirstVNF_RAM ) ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUR / ( MUM / MLU ) ) * MUR ) / DS ) / MUR ) / ( DS - CS ) ) - ( MLU - ( DS - DS ) ) ) ,( ( Min( DS ,MUR ) / ( MUR + RCSe ) ) - Min( MUM ,MUM ) ) )", "obj1": 0.8314814814814815, "obj2": 0.07181632011128924}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.5796296296296296, "obj2": 0.26575856652573493}, {"determining": "Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + ( Max( PN,DDR ) + PN ) ) )", "choosing": "Min( ( ( MLU - ( DS - DS ) ) - CS ) ,( ( Min( DS ,MUR ) / RMSe ) - RMSe ) )", "obj1": 0.8055555555555556, "obj2": 0.08515631429744769}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3648148148148148, "obj2": 0.49701930853934834}, {"determining": "Min( ( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - RRS ) ),RRS ) ) * ( PN * ACS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( RMSe / ( MLU + RCSe ) ) ) ) + MUM ) )", "obj1": 0.8814814814814815, "obj2": 0.0502567483464984}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( FirstVNF_RAM_Server / PN ) / Min( FirstVNF_RAM ,Min( Max( Max( Min( FirstVNF_CPU ,CRS ),( Const * ACS ) ),Max( Const,Max( BR,PN ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,Max( Min( MUC ,MLU ),Max( DS,RRSe ) ) ) + DS ) * RRSe ) / ( MUM * ( ( MUR - Max( ( ( CS + MUM ) + MUM ),RRSe ) ) - ( CS + MUM ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.19179995433038569}, {"determining": "( ( ACS - ( PN * ARS ) ) - ( ( ( ARS / Max( MDR,PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( ( Max( CRS,DDR ) + PN ) * ARS ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server + ( PN / FirstVNF_Mem ) ) ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( RMSe ,( CS + MUR ) ) ) ,( RCSe - MUM ) ) ,( RRSe * MLU ) ) + ( ( Min( ( ( CS - MUC ) - ( RMSe * MUM ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( Max( MLU,MUM ) + MUC ),RMSe ) ) ) ,( RCSe + MUR ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.1558710586086071}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.42962962962962964, "obj2": 0.3829138362536281}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUC ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.40925925925925927, "obj2": 0.4084074597699603}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - MUC ) * ( ( ( MUC * MUR ) / RMSe ) * ( RMSe + MUR ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01583766193010447}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.376804898092621}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.44074074074074077, "obj2": 0.3730045554309876}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) - Min( CRS ,RRS ) ) ,( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( RMSe - Min( DS ,( ( RCSe * RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.46296296296296297, "obj2": 0.35514863963386595}, {"determining": "Min( PN ,( ( FirstVNF_Mem_Server - ARS ) * FirstVNF_RAM ) )", "choosing": "Min( CS ,( RRSe + ( RCSe + Max( CS,DS ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09516825086219068}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUR ) ) - MUM ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.19074074074074074, "obj2": 0.6906757554452789}, {"determining": "Min( FirstVNF_RAM ,( ( Min( PN ,( ( ACS * BR ) - ( FirstVNF_Mem_Server * Const ) ) ) + CRS ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - Min( DS ,( ( MUR * Max( RCSe,CS ) ) / Min( MUM ,Max( MLU,( MUC * ( CS + RCSe ) ) ) ) ) ) ) )", "obj1": 0.7425925925925926, "obj2": 0.1127738770757707}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server + ( MDR - MDR ) ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( RCSe - MUM ) + MUM ) - ( ( MLU - ( ( Min( ( ( RMSe * RCSe ) / MUR ) ,MUM ) / Min( RCSe ,MLU ) ) * MUM ) ) - ( DS * RMSe ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( FirstVNF_Mem ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( Max( ( RCSe * CS ),Max( MUR,RMSe ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8240740740740741, "obj2": 0.07616397281511}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUC * ( Max( RCSe,( MLU * DS ) ) - ( MUM + Max( ( RRSe * DS ),( DS / DS ) ) ) ) ) + RRSe ) / ( MUR / CS ) ) ,( ( MUM + Min( Min( DS ,DS ) ,( MLU / CS ) ) ) - CS ) )", "obj1": 0.8481481481481481, "obj2": 0.06675422040782387}, {"determining": "Min( ( ( ( ( Min( Const ,PN ) * Const ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( MLU ,( ( ( Min( RMSe ,CS ) + MUM ) / RCSe ) * ( MLU * CS ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.02516036083404073}, {"determining": "( ( ( ( ACS + CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / ( ( PN * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) )", "choosing": "( Max( MUR,( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( ( MUM * CS ) + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( MLU - DS ) ) ) ) * RRSe ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7388082133099486}, {"determining": "( ( ACS - DDR ) - ( ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) * ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + Min( DS ,MUR ) ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.7592592592592593, "obj2": 0.10674184762390466}, {"determining": "( ( ACS - DDR ) - ( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( MUM - MLU ) ) * RMSe ) * RRSe ) )", "obj1": 0.12777777777777777, "obj2": 0.7743197932203764}], "23": [{"determining": "Min( ( ( DDR - ( Max( FirstVNF_CPU,FirstVNF_RAM ) * ARS ) ) - MDR ) ,( FirstVNF_CPU_Server + ( MDR / DDR ) ) )", "choosing": "( ( ( MLU - ( MUC * ( Min( Max( ( MUC * RMSe ),MUM ) ,MUM ) + RRSe ) ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Min( ( ( DDR + CRS ) - MDR ) ,( ( ( PN * ( Max( PN,ARS ) + ( Max( PN,DDR ) + PN ) ) ) + PN ) - ( ( ACS - RRS ) + PN ) ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( MUM + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUC ) ) - MUM ) ) ) - ( RRSe / DS ) ) ,CS )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( ( ( CRS + ( Max( ( ( Const - MRS ) + ( FirstVNF_CPU_Server - ARS ) ),DDR ) + PN ) ) - AMS ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUC + ( Min( MUC ,MLU ) + ( MUR - RCSe ) ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.4, "obj2": 0.47046404007458775}, {"determining": "Min( ( Max( PN,PN ) - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS + MUR ) / Max( Max( ( DS - ( CS - RCSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.41102461796275086}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUM ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.13491729751269127}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.5722222222222222, "obj2": 0.2761291689904511}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( Min( ( ( MUM - DS ) + MUC ) ,( MUC / RCSe ) ) ,( MUM - ( CS - CS ) ) )", "obj1": 0.9333333333333333, "obj2": 0.028172580759126445}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5333333333333333, "obj2": 0.2970152424625791}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Max( DS,DS ) + RRSe ) ,( RCSe - MUM ) )", "obj1": 0.9111111111111111, "obj2": 0.0383920726835586}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUC + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.55, "obj2": 0.28071411051189515}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( PN,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) * ( PN * ACS ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( MUM * Min( ( DS + ( ( ( MUM + MUM ) / DS ) / DS ) ) ,( MUR - Max( RMSe,( CS + Min( MUC ,RMSe ) ) ) ) ) ) + MUM ) )", "obj1": 0.6277777777777778, "obj2": 0.21870993040346645}, {"determining": "Min( PN ,( ( ( PN * Max( RRS,( ( BR - FirstVNF_CPU_Server ) + RRS ) ) ) / RRS ) - MDR ) )", "choosing": "( ( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( MUM - MLU ) ) ) + RRSe ) ) / MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( RMSe * ( ( RRSe / RCSe ) / Min( ( DS * MUR ) ,DS ) ) ) ) ) )", "obj1": 0.4759259259259259, "obj2": 0.34951369192228643}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "( Min( ( FirstVNF_RAM + ( ( ( PN * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) - Min( ( FirstVNF_CPU - ( ( DDR - AMS ) * ( MRS * FirstVNF_RAM_Server ) ) ) ,PN ) ) ) ,FirstVNF_CPU ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_Mem ) + ( FirstVNF_Mem / Min( ( FirstVNF_Mem / MRS ) ,( PN - Max( PN,DDR ) ) ) ) ) )", "choosing": "Min( ( RRSe + Max( DS,DS ) ) ,( RCSe - ( Max( ( MUC * ( ( ( RCSe + MUC ) - MUC ) / CS ) ),MLU ) - MUM ) ) )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * ARS ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( RCSe - MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "( ( ( ( ACS - ( DDR / CRS ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server + ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( CRS + PN ) / ( BR * ACS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * ( Max( Max( CS,DS ),Min( MUR ,( ( MLU - RRSe ) + RRSe ) ) ) + MUC ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( DS * CS ) * ( MUC + RRSe ) ) + RRSe ) ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6525395000660325}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Min( Min( ( ( FirstVNF_CPU + FirstVNF_Mem_Server ) + BR ) ,Min( ARS ,FirstVNF_Mem_Server ) ) ,RRS ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.12407407407407407, "obj2": 0.7777032063020052}, {"determining": "Min( ( ( ( CRS + ( PN + ( ( FirstVNF_RAM / ( ACS - CRS ) ) * DDR ) ) ) - DDR ) - MDR ) ,( ( DDR * ACS ) / DDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MLU ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3851851851851852, "obj2": 0.47116845019016224}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3648148148148148, "obj2": 0.49701930853934834}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + RMSe ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.6092592592592593, "obj2": 0.24228955761127474}, {"determining": "Min( ( ( ( ( Min( Const ,PN ) * Const ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( MLU ,( ( ( Min( RMSe ,CS ) + MUM ) / RCSe ) * ( MLU * CS ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.02516036083404073}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) - Min( CRS ,RRS ) ) ,( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( RMSe - Min( DS ,( ( RCSe * RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.46296296296296297, "obj2": 0.35514863963386595}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / ARS ) ,( FirstVNF_Mem - MDR ) ) ) + PN ) - MDR ) ,( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - FirstVNF_Mem ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( DS / RCSe ) + ( RRSe + MUM ) ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2462962962962963, "obj2": 0.6139671397556714}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( FirstVNF_RAM + ( BR - FirstVNF_CPU_Server ) ) ) ) ) ),FirstVNF_RAM ) )", "choosing": "( Max( Max( CS,CS ),MUR ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6492246871441514}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Max( RCSe,( MUM / RRSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * BR ) ) - ( FirstVNF_Mem * ( RRS - Max( Const,( BR / FirstVNF_Mem ) ) ) ) ) / ( ( AMS * FirstVNF_Mem ) - MDR ) )", "choosing": "( ( ( MLU - ( MUC - MUM ) ) - ( DS * Min( ( ( RMSe * RRSe ) * Min( RRSe ,MUM ) ) ,MUC ) ) ) - ( ( RCSe - MUM ) + ( MUM * MLU ) ) )", "obj1": 0.337037037037037, "obj2": 0.5104993372773909}, {"determining": "Min( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( MUC * MUR ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.5185185185185185, "obj2": 0.31231887557352805}, {"determining": "( ( ACS - ( ( Max( PN,DDR ) + PN ) * ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,Max( RRSe,MUC ) ) ,( CS + RMSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.17942028518589562}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - Min( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) ,Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( Max( MRS,FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - ( ( ( ( RMSe - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) - ( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( Max( MUM,( ( ( CS * RRSe ) - CS ) - ( MUC / Min( RRSe ,RCSe ) ) ) ) ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8555555555555555, "obj2": 0.06391639146556904}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),( BR * PN ) ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / RRSe ) ,( RRSe + MUM ) ) )", "obj1": 0.5981481481481481, "obj2": 0.2564606499619812}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( ( RCSe + RRSe ) * MUM ) - MUC ) * ( ( ( MUC * MUR ) / RMSe ) * ( RMSe + MUR ) ) )", "obj1": 0.9555555555555556, "obj2": 0.018884093695363997}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( ( ( RMSe - DS ) + ( MLU * RCSe ) ),CS ) )", "obj1": 0.45, "obj2": 0.3682991841655235}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( Min( BR ,PN ) - Max( PN,( ARS - BR ) ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe + Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - Min( DS ,( MUC + DS ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.45740740740740743, "obj2": 0.36219326968532956}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( ( ( FirstVNF_CPU * MRS ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),( CS + MUM ) ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( ( MUM - ( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.715078263717545}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + MUM ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.6018518518518519, "obj2": 0.24813233474441557}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - DS ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7684863753924192}, {"determining": "( Min( ACS ,Const ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Max( ( FirstVNF_RAM + FirstVNF_RAM ),( Max( ( ( FirstVNF_Mem_Server - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server / ARS ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RRSe + Max( DS,DS ) ) / ( MUM * ( ( MUR - ( ( Min( ( MUM / MLU ) ,MUC ) + MUM ) * ( ( CS + RMSe ) * ( RCSe + RRSe ) ) ) ) - ( CS + MUM ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.18196692428011607}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( Min( DDR ,( Const - MRS ) ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe + Min( DS ,( ( MUM * MUC ) / CS ) ) ) ) - CS ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( ( ( Max( ( FirstVNF_RAM_Server / ARS ),DDR ) + PN ) - CRS ) - ( Const / ( BR + FirstVNF_CPU ) ) ) - MDR ) ,PN )", "choosing": "Min( ( CS + ( MUM / ( Min( DS ,( CS - RMSe ) ) - MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.3537037037037037, "obj2": 0.5084041718170502}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.44074074074074077, "obj2": 0.3730045554309876}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( ( MDR - ( ( ( PN * FirstVNF_CPU ) + ( Max( PN,DDR ) + PN ) ) - ( ACS + CRS ) ) ) ,PN )", "choosing": "Min( Min( ( CS - MUC ) ,( MUC / RCSe ) ) ,( ( CS - CS ) - MLU ) )", "obj1": 0.5111111111111111, "obj2": 0.3133949651225028}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( DDR * ( Min( RRS ,RRS ) * FirstVNF_RAM ) ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUR / ( MUM / MLU ) ) * MUR ) / DS ) / MUR ) / ( DS - CS ) ) - ( MLU - ( DS - DS ) ) ) ,( ( Min( DS ,MUR ) / ( MUR + RCSe ) ) - Min( MUM ,MUM ) ) )", "obj1": 0.8314814814814815, "obj2": 0.07181632011128924}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.31854859480599723}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7374046123631559}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ACS ) ) - ( FirstVNF_Mem * MRS ) ) / Max( Min( PN ,FirstVNF_Mem ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - DS ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( ( ( MUR / CS ) * MUC ) * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5669595330948748}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "Min( ( ( ( ( ARS * ARS ) + ( ( Const + FirstVNF_Mem_Server ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09043405534475017}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "( ( CS + Max( MLU,( MUC - MLU ) ) ) * ( RCSe - MUM ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( PN ,( ( FirstVNF_Mem_Server - ARS ) * FirstVNF_RAM ) )", "choosing": "Min( CS ,( RRSe + ( RCSe + Max( CS,DS ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09516825086219068}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7193174472281615}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( FirstVNF_RAM + Min( Min( DDR ,FirstVNF_Mem ) ,RRS ) ) ) - DDR ) - ( AMS - FirstVNF_RAM_Server ) ) ,FirstVNF_Mem )", "choosing": "Min( Min( ( ( MUR * MUM ) + RRSe ) ,MUR ) ,( RMSe / RRSe ) )", "obj1": 0.812962962962963, "obj2": 0.079892411568308}, {"determining": "( ( ACS - DDR ) - ( Min( ( ( ( Max( DDR,MDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) ,FirstVNF_CPU_Server ) * ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + Min( DS ,MUR ) ) * CS ) ) ,( Max( MUC,RMSe ) * RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.7592592592592593, "obj2": 0.10674184762390466}, {"determining": "Min( PN ,Min( Min( FirstVNF_CPU ,Max( Max( FirstVNF_CPU_Server,Const ),AMS ) ) ,PN ) )", "choosing": "( Min( Min( ( MLU - Min( ( ( MUR * Max( MUC,CS ) ) + MUR ) ,RMSe ) ) ,( RCSe - Min( RCSe ,DS ) ) ) ,Max( ( MUM / MLU ),Min( RMSe ,RMSe ) ) ) + ( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( Min( ( ( MUM - MLU ) - MUC ) ,( ( MUC * MUM ) - RCSe ) ) / RMSe ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9888888888888889, "obj2": 0.004831096836169331}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( Min( CS ,RCSe ) * RMSe ) * ( Max( RCSe,( MLU * DS ) ) - ( MUM + Max( ( RRSe * DS ),( DS / DS ) ) ) ) ) + RRSe ) / ( MUR / CS ) ) ,( ( MUM + Min( Min( DS ,DS ) ,( MLU / CS ) ) ) - CS ) )", "obj1": 0.8407407407407408, "obj2": 0.06769083816655128}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "( ( RRS - MDR ) - ( ( ( ARS / ( PN + Max( MDR,( CRS - RRS ) ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * MDR ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUC - Min( ( CS + Min( DS ,MUM ) ) ,RMSe ) ) ,Min( RRSe ,MUC ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( CS * RRSe ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.674074074074074, "obj2": 0.1679229016888037}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * ARS ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.4938593633443503}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.55, "obj2": 0.28071411051189515}, {"determining": "( ( DDR - ( ( FirstVNF_Mem_Server - Const ) + ( RRS * DDR ) ) ) - ( PN * ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + ( MUC * Max( MUC,RMSe ) ) ) - RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7424868538701842}, {"determining": "Min( ( ( ( CRS + ( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( CRS + PN ) ) ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Max( RCSe,( ( ( RCSe / MUC ) * MUM ) / RRSe ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.9055555555555556, "obj2": 0.04105228276973791}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "( ( ACS - DDR ) - ( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( MUM - MLU ) ) * RMSe ) * RRSe ) )", "obj1": 0.12777777777777777, "obj2": 0.7743197932203764}, {"determining": "Min( ( ( ( ( ( ( PN * ARS ) + PN ) - DDR ) + ( Max( PN,PN ) + PN ) ) - DDR ) - FirstVNF_CPU ) ,PN )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) ) / RMSe ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.011794520403613819}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8, "obj2": 0.0853898177864827}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( ( RRSe - DS ) ,Min( ( CS + MUC ) ,( Min( Max( Min( MUC ,MLU ),RCSe ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,CS )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( FirstVNF_RAM_Server / PN ) / Min( FirstVNF_RAM ,Min( Max( Max( Min( FirstVNF_CPU ,CRS ),( Const * ACS ) ),Max( Const,Max( BR,PN ) ) ) ,FirstVNF_CPU_Server ) ) ) )", "choosing": "( ( ( Min( RCSe ,Max( Min( MUC ,MLU ),Max( DS,RRSe ) ) ) + DS ) * RRSe ) / ( MUM * ( ( MUR - Max( ( ( CS + MUM ) + MUM ),RRSe ) ) - ( CS + MUM ) ) ) )", "obj1": 0.6537037037037037, "obj2": 0.19179995433038569}, {"determining": "( ( ACS - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,( ( PN * ARS ) + ( Max( PN,DDR ) + PN ) ) ) ) ) )", "choosing": "Min( Min( MUR ,( MLU + Min( Max( CS,Min( Max( ( RCSe * DS ),MLU ) ,Max( MUR,RCSe ) ) ) ,( RCSe - RMSe ) ) ) ) ,( ( ( MUR * RRSe ) - MUM ) - MUM ) )", "obj1": 0.5851851851851851, "obj2": 0.25932050644063603}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( CS ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7635805101712697}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( Max( PN,DDR ) * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Min( ( CS + MUC ) ,( RCSe - MUC ) ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.4185185185185185, "obj2": 0.3933660303044323}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( CS + ( MUM + ( Min( DS ,DS ) - MUC ) ) ) ,( RCSe - MUM ) )", "obj1": 0.35185185185185186, "obj2": 0.5085373633342327}, {"determining": "Min( Min( ( ( FirstVNF_CPU + RRS ) + ( PN + Max( BR,DDR ) ) ) ,DDR ) ,( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( Min( ( MUC + MUM ) ,( RCSe - MUM ) ) ,( ( MUM / MUM ) + Min( RMSe ,RMSe ) ) ) ) - ( ( CS + MUM ) * RRSe ) ) ,Max( ( CS + ( ( RMSe + RRSe ) + ( RCSe + CS ) ) ),( CS + MUC ) ) )", "obj1": 0.6462962962962963, "obj2": 0.19812916435497988}, {"determining": "Min( ( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.19444444444444445, "obj2": 0.685833162215034}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + CRS ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) )", "obj1": 0.737037037037037, "obj2": 0.11538563706119404}, {"determining": "( Max( PN,DDR ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) * Min( ( MDR - RRS ) ,FirstVNF_RAM_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + MUM ) * RRSe ) ) * ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) * RRSe ) )", "obj1": 0.14814814814814814, "obj2": 0.7557113520774129}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + CRS ) - MDR ) ,( PN - CRS ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( ( MUR + ( RMSe - RCSe ) ) - Min( RMSe ,Min( ( MUM / MUM ) ,( RRSe - RCSe ) ) ) ) ) ) )", "obj1": 0.725925925925926, "obj2": 0.12154016145523566}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.19074074074074074, "obj2": 0.6905632620298283}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( MUR - ( ( CS + MUM ) * RRSe ) ) )", "obj1": 0.8962962962962963, "obj2": 0.04442344202293329}, {"determining": "( ( ( ( ACS + CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / ( ( PN * ARS ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) )", "choosing": "( Max( MUR,( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( ( MUM * CS ) + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( MLU - DS ) ) ) ) * RRSe ) ) )", "obj1": 0.16666666666666666, "obj2": 0.7388082133099486}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( ( ( ( CRS + ( Max( ( PN * ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + RMSe ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.725925925925926, "obj2": 0.12154016145523566}, {"determining": "( Min( ( ( DDR + CRS ) - MDR ) ,( ( ( PN * ( Max( PN,ARS ) + ( Max( PN,DDR ) + PN ) ) ) + PN ) - ( ( ACS - RRS ) + PN ) ) ) - ( MRS / ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( MUM + MUC ) ,( Min( RRSe ,( RCSe - MUC ) ) - MUM ) ) ) - ( RRSe / DS ) ) ,CS )", "obj1": 0.9962962962962963, "obj2": 0.0016190185011558263}], "24": [{"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( ( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( ( DDR - ( Max( FirstVNF_CPU,FirstVNF_RAM ) * ARS ) ) - MDR ) ,( FirstVNF_CPU_Server + ( MDR / DDR ) ) )", "choosing": "( ( ( MLU - ( MUC * ( Min( Max( ( MUC * RMSe ),MUM ) ,MUM ) + RRSe ) ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,DS ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5796296296296296, "obj2": 0.24703198666444215}, {"determining": "Min( ( ( ( CRS + ( Min( FirstVNF_Mem ,( AMS + FirstVNF_RAM ) ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,Max( RCSe,( ( RCSe + MUC ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.40555555555555556, "obj2": 0.4552819532252133}, {"determining": "Min( ( Max( PN,PN ) - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS + MUR ) / Max( Max( ( DS - ( CS - RCSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.41102461796275086}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + MUM ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.5703703703703704, "obj2": 0.27548905242828203}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + RMSe ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.6092592592592593, "obj2": 0.24228955761127474}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( Max( ( Const / RRS ),RRS ) - PN ) ,Max( ( PN + Max( PN,DDR ) ),PN ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUR - Min( RMSe ,( CS + MUR ) ) ) ,( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( ( Max( ( RRSe + MUC ),MLU ) / MUC ),MUM ) ) ,( MUM + RRSe ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16313080710413097}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * Const ) ) * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( ( MUR * RRSe ) - MUM ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.30820272351843386}, {"determining": "Min( PN ,( ( ( PN * Max( RRS,( ( BR - FirstVNF_CPU_Server ) + RRS ) ) ) / RRS ) - MDR ) )", "choosing": "( ( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( MUM - MLU ) ) ) + RRSe ) ) / MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( RMSe * ( ( RRSe / RCSe ) / Min( ( DS * MUR ) ,DS ) ) ) ) ) )", "obj1": 0.4759259259259259, "obj2": 0.34951369192228643}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * ARS ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( RCSe - MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( ( ( CRS + ( PN + ( ( FirstVNF_RAM / ( ACS - CRS ) ) * DDR ) ) ) - DDR ) - MDR ) ,( ( DDR * ACS ) / DDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MLU ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3851851851851852, "obj2": 0.47116845019016224}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.55, "obj2": 0.28071411051189515}, {"determining": "Min( ( Min( DDR ,( Const - MRS ) ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe + Min( DS ,( ( MUM * MUC ) / CS ) ) ) ) - CS ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( ( CRS + ( Max( ( Max( ARS,PN ) / ( ACS - CRS ) ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.39444444444444443, "obj2": 0.4624157843173393}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( Max( RCSe,( MUM / RRSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,PN )", "choosing": "Min( ( ( Min( Min( MUM ,CS ) ,( DS / ( RCSe - MUR ) ) ) + MUC ) - MLU ) ,( ( MUM + ( Min( DS ,DS ) - ( MLU / CS ) ) ) - CS ) )", "obj1": 0.5296296296296297, "obj2": 0.3022143058947066}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ACS ) ) - ( FirstVNF_Mem * MRS ) ) / Max( Min( PN ,FirstVNF_Mem ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - DS ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( ( ( MUR / CS ) * MUC ) * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5669595330948748}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3648148148148148, "obj2": 0.49701930853934834}, {"determining": "( ( Max( FirstVNF_CPU,Min( RRS ,FirstVNF_RAM ) ) + RRS ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( CRS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "( ( MLU + ( ( ( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) / MUR ) * ( DS - MUC ) ) - ( ( MUM + MLU ) + ( ( ( DS - RMSe ) * MLU ) * RMSe ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.12407407407407407, "obj2": 0.7777032063020052}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( ( FirstVNF_RAM - Max( ( ( MDR - AMS ) - ( ( CRS * ( CRS * MDR ) ) + RRS ) ),( Const + ( ( MDR + MDR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( PN * ACS ) ) ,( ( FirstVNF_CPU / Min( PN ,( FirstVNF_Mem - MDR ) ) ) - MDR ) )", "choosing": "Min( Max( Min( RCSe ,( CS + ( MLU + ( MUR / Min( MLU ,( RMSe * MUM ) ) ) ) ) ),( RMSe + CS ) ) ,( MUM - MLU ) )", "obj1": 0.6388888888888888, "obj2": 0.2099861666096408}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) - Min( CRS ,RRS ) ) ,( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( RMSe - Min( DS ,( ( RCSe * RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.46296296296296297, "obj2": 0.35514863963386595}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5192929080104579}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( FirstVNF_RAM + ( BR - FirstVNF_CPU_Server ) ) ) ) ) ),FirstVNF_RAM ) )", "choosing": "( Max( Max( CS,CS ),MUR ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6492246871441514}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * BR ) ) - ( FirstVNF_Mem * ( RRS - Max( Const,( BR / FirstVNF_Mem ) ) ) ) ) / ( ( AMS * FirstVNF_Mem ) - MDR ) )", "choosing": "( ( ( MLU - ( MUC - MUM ) ) - ( DS * Min( ( ( RMSe * RRSe ) * Min( RRSe ,MUM ) ) ,MUC ) ) ) - ( ( RCSe - MUM ) + ( MUM * MLU ) ) )", "obj1": 0.337037037037037, "obj2": 0.5104993372773909}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * ( PN - Const ) ) - ( ( ( ARS / ( DDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,Max( FirstVNF_Mem,Min( DDR ,( FirstVNF_RAM / MRS ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,( ( Min( ( MLU - MUM ) ,( DS + MLU ) ) * MUR ) - RCSe ) ) / Min( RCSe ,( ( ( ( MUM - CS ) / DS ) / RCSe ) + MUM ) ) ) - MUC ) ,CS )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) ) + CRS ) - MDR ) ,( PN - CRS ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( ( MUR + ( MUM * ( DS / RCSe ) ) ) - Min( RMSe ,Min( ( MUM / MUM ) ,( RRSe - RCSe ) ) ) ) ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10232017457869946}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "( ( ( ( ACS - ( DDR / CRS ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server + ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( CRS + PN ) / ( BR * ACS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * ( Max( Max( CS,DS ),Min( MUR ,( ( MLU - RRSe ) + RRSe ) ) ) + MUC ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( DS * CS ) * ( MUC + RRSe ) ) + RRSe ) ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6525395000660325}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * ARS ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.4938593633443503}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + CRS ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( CS - ( MUR - ( ( ( CS + ( RMSe + MUM ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.7203703703703703, "obj2": 0.12796529595513026}, {"determining": "Min( PN ,( ( FirstVNF_Mem_Server - ARS ) * FirstVNF_RAM ) )", "choosing": "Min( CS ,( RRSe + ( RCSe + Max( CS,DS ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09516825086219068}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( ( ( RMSe - DS ) + ( MLU * RCSe ) ),CS ) )", "obj1": 0.45, "obj2": 0.3682991841655235}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUM ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.13491729751269127}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( Min( BR ,PN ) - Max( PN,( ARS - BR ) ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe + Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - Min( DS ,( MUC + DS ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.45740740740740743, "obj2": 0.36219326968532956}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( PN + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6673429211643264}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.42777777777777776, "obj2": 0.38250467538837707}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.3181723551283164}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.44074074074074077, "obj2": 0.3730045554309876}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUC ) ) - MUM ) ) ) - ( RRSe / DS ) ) ,CS )", "obj1": 0.8796296296296297, "obj2": 0.05276955928632517}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( ( ( ( ( ARS * ARS ) + ( ( Const + FirstVNF_Mem_Server ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09043405534475017}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7374046123631559}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( PN + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( Min( CS ,RCSe ) * RMSe ) * ( Max( RCSe,( ( DS / RCSe ) * DS ) ) - ( MUM + Max( ( RRSe * DS ),( DS / DS ) ) ) ) ) + RRSe ) / ( MUR / CS ) ) ,( ( MUM + Min( Min( DS ,DS ) ,( MLU / CS ) ) ) - CS ) )", "obj1": 0.825925925925926, "obj2": 0.075480013929055}, {"determining": "( Min( ACS ,Const ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Max( ( FirstVNF_RAM + FirstVNF_RAM ),( Max( ( ( FirstVNF_Mem_Server - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server / ARS ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "( ( RRSe + Max( DS,DS ) ) / ( MUM * ( ( MUR - ( ( Min( ( MUM / MLU ) ,MUC ) + MUM ) * ( ( CS + RMSe ) * ( RCSe + RRSe ) ) ) ) - ( CS + MUM ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.18196692428011607}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - Max( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ),Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( ( MRS * AMS ) - FirstVNF_Mem ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( Min( MLU ,RCSe ) + MUM ) * RRSe ) ) ,( MUM - MLU ) ) * RMSe ) * RRSe ) )", "obj1": 0.6537037037037037, "obj2": 0.18977868257876224}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "( ( ( ( ACS - CRS ) - ( ( DDR - ARS ) * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) + MRS ) ) ) )", "choosing": "( ( ( MLU - ( MUC + MUM ) ) - ( RMSe + Min( DS ,MUC ) ) ) - Min( Max( ( RMSe - MUM ),MLU ) ,MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( ( FirstVNF_Mem + ( Min( PN ,( FirstVNF_Mem / FirstVNF_RAM ) ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( RMSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( ( ( MLU * RCSe ) * DS ) + Min( MUM ,( MUM - RCSe ) ) ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7193174472281615}, {"determining": "Min( ( DDR * ( Min( RRS ,RRS ) * FirstVNF_RAM ) ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUR / ( MUM / MLU ) ) * MUR ) / DS ) / MUR ) / ( DS - CS ) ) - ( MLU - ( DS - DS ) ) ) ,( ( Min( DS ,MUR ) / ( MUR + RCSe ) ) - Min( MUM ,MUM ) ) )", "obj1": 0.8314814814814815, "obj2": 0.07181632011128924}, {"determining": "( ( RRS - MDR ) - ( ( ( ARS / ( PN + Max( MDR,( CRS - RRS ) ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * MDR ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUC - Min( ( CS + Min( DS ,MUM ) ) ,RMSe ) ) ,Min( RRSe ,MUC ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( CS * RRSe ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.674074074074074, "obj2": 0.1679229016888037}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( Min( ( ( MUM - DS ) + MUC ) ,( MUC / RCSe ) ) ,( MUM - ( CS - CS ) ) )", "obj1": 0.9333333333333333, "obj2": 0.028172580759126445}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUC + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.55, "obj2": 0.28071411051189515}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( Min( CS ,RCSe ) * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( ( ( RRSe / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.5333333333333333, "obj2": 0.2970152424625791}, {"determining": "( ( DDR - ( ( FirstVNF_Mem_Server - Const ) + ( RRS * DDR ) ) ) - ( PN * ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,( ( CS + ( MUC * Max( MUC,RMSe ) ) ) - RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.1574074074074074, "obj2": 0.7424868538701842}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5333333333333333, "obj2": 0.2970152424625791}, {"determining": "( ( ACS - ( ( Max( PN,DDR ) + PN ) * ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / ( ACS / FirstVNF_CPU_Server ) ) ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,Max( RRSe,MUC ) ) ,( CS + RMSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.17942028518589562}, {"determining": "( Min( ACS ,Const ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Max( ( FirstVNF_RAM + FirstVNF_RAM ),( Max( ( ( FirstVNF_Mem_Server - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server / ARS ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / RCSe ) + ( RRSe + MUM ) ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.75, "obj2": 0.11008955661634642}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,CS )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUR - Min( RMSe ,( CS + MUR ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( ( MRS / DDR ) ,Min( Max( ARS,CRS ) ,( CRS - Const ) ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( CS - Min( ( ( ( RMSe - CS ) - MUM ) / ( RRSe + Max( DS,RRSe ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8555555555555555, "obj2": 0.06389469676160281}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( Max( ( FirstVNF_RAM / ARS ),DDR ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( Min( ( MUR / MUC ) ,MUR ) ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5037037037037037, "obj2": 0.3168008372049284}, {"determining": "Min( ( ( ( ( Min( Const ,PN ) * Const ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( MLU ,( ( ( Min( RMSe ,CS ) + MUM ) / RCSe ) * ( MLU * CS ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.02516036083404073}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8, "obj2": 0.0853898177864827}, {"determining": "( ( FirstVNF_RAM + FirstVNF_RAM ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( PN * ARS ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ),MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + RMSe ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.6685185185185185, "obj2": 0.17077851835220323}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) )", "obj1": 0.9518518518518518, "obj2": 0.02041577841040416}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( RRSe - DS ) + ( CS - Min( ( ( ( RMSe - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) )", "obj1": 0.8574074074074074, "obj2": 0.059642829342029136}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "( ( ( ( ACS + CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( Max( ( ( ( MUC * MUR ) / RMSe ) * ( RMSe + MUR ) ),( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( ( MUM * CS ) + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( MLU - DS ) ) ) ) * RRSe ) ) )", "obj1": 0.9222222222222223, "obj2": 0.032418215446876966}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8037037037037037, "obj2": 0.08396442915184114}, {"determining": "Min( ( ( ( ( ( ( PN * ARS ) + PN ) - DDR ) + ( Max( PN,PN ) + PN ) ) - DDR ) - FirstVNF_CPU ) ,PN )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) ) / RMSe ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.011794520403613819}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUM ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.7111111111111111, "obj2": 0.13421073398616887}, {"determining": "Min( ( ( ( ( ( ( PN * ARS ) + PN ) - DDR ) + ( Max( PN,PN ) + PN ) ) - DDR ) - FirstVNF_CPU ) ,PN )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) ) / RMSe ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.011794520403613819}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "( ( ACS - DDR ) - ( Min( ( ( ( Max( DDR,MDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) ,FirstVNF_CPU_Server ) * ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + Min( DS ,MUR ) ) * CS ) ) ,( Max( MUC,RMSe ) * RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.7592592592592593, "obj2": 0.10674184762390466}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( MUM - MUC ) - ( RMSe + ( ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) ) ) * RRSe ) ) )", "obj1": 0.9203703703703704, "obj2": 0.03377493498183167}, {"determining": "Min( ( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.19444444444444445, "obj2": 0.685833162215034}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8944444444444445, "obj2": 0.0462938579323194}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( ( ( FirstVNF_CPU * MRS ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),( CS + MUM ) ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( ( MUM - ( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.715078263717545}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( FirstVNF_RAM + Min( Min( DDR ,FirstVNF_Mem ) ,RRS ) ) ) - DDR ) - ( AMS - FirstVNF_RAM_Server ) ) ,FirstVNF_Mem )", "choosing": "Min( Min( ( ( MUR * MUM ) + RRSe ) ,MUR ) ,( RMSe / RRSe ) )", "obj1": 0.812962962962963, "obj2": 0.079892411568308}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( Max( ( FirstVNF_RAM / ( BR / CRS ) ),DDR ) + PN ) - AMS ) ) - ( ( ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) + ( ( AMS - FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) - PN ) * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem + RRS ) - ( Min( DDR ,Max( Min( FirstVNF_Mem_Server ,( MRS / MRS ) ),MRS ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( ( CS / ( MUR / MUC ) ) * RMSe ) * ( ( Max( MUC,MUR ) - ( DS - MLU ) ) - ( MUM + ( MUC / DS ) ) ) ) + RRSe ) / ( MUR / CS ) ) ,( Min( RMSe ,( MUR - CS ) ) - CS ) )", "obj1": 0.8444444444444444, "obj2": 0.06627608052648513}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.19074074074074074, "obj2": 0.6905632620298283}, {"determining": "Min( ( ( FirstVNF_RAM + FirstVNF_RAM ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( CS ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7635805101712697}], "25": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( ( RRS - MDR ) - ( ( ( ARS / ( PN + Max( MDR,( CRS - RRS ) ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * MDR ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUC - Min( ( CS + Min( DS ,MUM ) ) ,RMSe ) ) ,Min( RRSe ,MUC ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( CS * RRSe ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( ( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * ( PN - Const ) ) - ( ( ( ARS / ( DDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,Max( FirstVNF_Mem,Min( DDR ,( FirstVNF_RAM / MRS ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,( ( Min( ( MLU - MUM ) ,( DS + MLU ) ) * MUR ) - RCSe ) ) / Min( RCSe ,( ( ( ( MUM - CS ) / DS ) / RCSe ) + MUM ) ) ) - MUC ) ,CS )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "Min( ( ( ( CRS + ( Min( FirstVNF_Mem ,( AMS + FirstVNF_RAM ) ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,Max( RCSe,( ( RCSe + MUC ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.40555555555555556, "obj2": 0.4552819532252133}, {"determining": "Min( ( Max( PN,PN ) - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS + MUR ) / Max( Max( ( DS - ( CS - RCSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.41102461796275086}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,DS ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5796296296296296, "obj2": 0.24703198666444215}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + MUM ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.5703703703703704, "obj2": 0.27548905242828203}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * BR ) ) - ( FirstVNF_Mem * ( RRS - Max( Const,( BR / FirstVNF_Mem ) ) ) ) ) / ( ( AMS * FirstVNF_Mem ) - MDR ) )", "choosing": "( ( ( MLU - ( MUC - MUM ) ) - ( DS * Min( ( ( RMSe * RRSe ) * Min( RRSe ,MUM ) ) ,MUC ) ) ) - ( ( RCSe - MUM ) + ( MUM * MLU ) ) )", "obj1": 0.337037037037037, "obj2": 0.5104993372773909}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3648148148148148, "obj2": 0.49701930853934834}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( Min( CS ,RCSe ) * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( ( ( MUC / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.27990027139421814}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( ( Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( Min( ( ( ( CS - CS ) - DS ) + MUC ) ,( MUC / RCSe ) ) ,( MUM - ( CS - CS ) ) )", "obj1": 0.9166666666666666, "obj2": 0.03689166402314731}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - PN ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( Max( MUR,RMSe ) / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4722222222222222, "obj2": 0.34868673910689857}, {"determining": "Min( PN ,( ( FirstVNF_Mem_Server - ARS ) * FirstVNF_RAM ) )", "choosing": "Min( CS ,( RRSe + ( RCSe + Max( CS,DS ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09516825086219068}, {"determining": "( ( FirstVNF_RAM_Server / ( ( ARS * ACS ) / ( ( FirstVNF_CPU_Server - CRS ) * ( FirstVNF_Mem_Server + AMS ) ) ) ) - Max( MDR,FirstVNF_CPU ) )", "choosing": "Min( ( ( ( Min( MUR ,( Min( MUR ,RMSe ) - MUM ) ) + ( MUM - ( RRSe * ( MUM + Min( RRSe ,RCSe ) ) ) ) ) + ( RMSe - Min( MLU ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( ( ( ( CRS + ( PN + ( ( FirstVNF_RAM / ( ACS - CRS ) ) * DDR ) ) ) - DDR ) - MDR ) ,( ( DDR * ACS ) / DDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MLU ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3851851851851852, "obj2": 0.47116845019016224}, {"determining": "( ( ( ( ACS - CRS ) - ( ( DDR - ARS ) * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) + MRS ) ) ) )", "choosing": "( ( ( MLU - ( MUC + MUM ) ) - ( RMSe + Min( DS ,MUC ) ) ) - Min( Max( ( RMSe - MUM ),MLU ) ,MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( ( ( ( CRS + ( Max( ( Max( ARS,PN ) / ( ACS - CRS ) ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.39444444444444443, "obj2": 0.4624157843173393}, {"determining": "( ( ( PN * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + PN ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + AMS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.12407407407407407, "obj2": 0.7777032063020052}, {"determining": "Min( ( ( FirstVNF_RAM - Max( ( ( MDR - AMS ) - ( ( CRS * ( CRS * MDR ) ) + RRS ) ),( Const + ( ( MDR + MDR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( PN * ACS ) ) ,( ( FirstVNF_CPU / Min( PN ,( FirstVNF_Mem - MDR ) ) ) - MDR ) )", "choosing": "Min( Max( Min( RCSe ,( CS + ( MLU + ( MUR / Min( MLU ,( RMSe * MUM ) ) ) ) ) ),( RMSe + CS ) ) ,( MUM - MLU ) )", "obj1": 0.6388888888888888, "obj2": 0.2099861666096408}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( Max( ( Const / RRS ),RRS ) - PN ) ,Max( ( PN + Max( PN,DDR ) ),PN ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUR - Min( RMSe ,( CS + MUR ) ) ) ,( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( ( Max( ( RRSe + MUC ),MLU ) / MUC ),MUM ) ) ,( MUM + RRSe ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16313080710413097}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ACS ) ) - ( FirstVNF_Mem * MRS ) ) / Max( Min( PN ,FirstVNF_Mem ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - DS ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( ( ( MUR / CS ) * MUC ) * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5669595330948748}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5192929080104579}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ARS - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUC + Max( DS,DS ) ) ) ,( ( MUR - ( ( Min( ( MUM / MLU ) ,MUC ) + MUM ) * ( ( CS + RMSe ) * ( RCSe + RRSe ) ) ) ) - ( CS + MUM ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.24077163233053725}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( Min( CS ,RCSe ) * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( ( ( RRSe / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.4166666666666667, "obj2": 0.3952290543148294}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + ( PN * ARS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / RCSe ) + ( Max( RCSe,( MUM / RRSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.16111111111111112, "obj2": 0.7381419785985874}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) + FirstVNF_RAM ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( CS ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,CS ) * RMSe ) * RRSe ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) - Min( CRS ,RRS ) ) ,( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( RMSe - Min( DS ,( ( RCSe * RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.46296296296296297, "obj2": 0.35514863963386595}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - ( CRS + FirstVNF_Mem ) ) - MDR ) ,Const )", "choosing": "Min( Min( Min( ( MUR - MUM ) ,RRSe ) ,Max( MUM,( RMSe / ( ( RCSe * MUM ) - MLU ) ) ) ) ,( MUC / DS ) )", "obj1": 0.8944444444444445, "obj2": 0.0462938579323194}, {"determining": "Min( ( ( ( ( ARS * ARS ) + ( ( Const + FirstVNF_Mem_Server ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09043405534475017}, {"determining": "( ( ( ( CRS - ACS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( ( FirstVNF_CPU_Server * ARS ) - ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( Min( RRS ,MDR ) - ( ACS * FirstVNF_Mem ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( MUR / ( ( Min( RMSe ,CS ) * MUR ) * DS ) ) - CS ) - ( RCSe * MUM ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5222222222222223, "obj2": 0.30462630798712076}, {"determining": "( ( ( ( ACS - ( DDR / CRS ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server + ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( CRS + PN ) / ( BR * ACS ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * ( Max( Max( CS,DS ),Min( MUR ,( ( MLU - RRSe ) + RRSe ) ) ) + MUC ) ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( DS * CS ) * ( MUC + RRSe ) ) + RRSe ) ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6525395000660325}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * ARS ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.4938593633443503}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + CRS ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( CS - ( MUR - ( ( ( CS + ( RMSe + MUM ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.7203703703703703, "obj2": 0.127595831575109}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( ( ( RMSe - DS ) + ( MLU * RCSe ) ),CS ) )", "obj1": 0.45, "obj2": 0.3682991841655235}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( Max( ( FirstVNF_RAM / ( ACS / CRS ) ),DDR ) + ( ACS - CRS ) ) ) ) - ( ( ( ( ( AMS - FirstVNF_RAM_Server ) + MDR ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem + RRS ) - ( Min( DDR ,DDR ) / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( Min( CS ,( MUR / MUC ) ) * RMSe ) * ( ( RCSe - ( MLU * DS ) ) - ( MUM + ( DS / MUC ) ) ) ) + RRSe ) / ( MUR / CS ) ) ,( ( MUM + Min( Min( Min( CS ,DS ) ,DS ) ,( MLU / CS ) ) ) - ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0011900586442162525}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.1349108756118143}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * Const ) ) * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( ( MUR * RRSe ) - MUM ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.30820272351843386}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( PN + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6673429211643264}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( ( ( FirstVNF_CPU * MRS ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),( CS + MUM ) ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( ( MUM - ( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.715078263717545}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,CS )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( ( Min( Min( PN ,CRS ) ,FirstVNF_CPU ) - ( Min( ( ( ( ( RRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) + PN ) ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe / RMSe ) ,( CS / Min( RRSe ,( MUM * RMSe ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.2913617622135136}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.44074074074074077, "obj2": 0.3730045554309876}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8944444444444445, "obj2": 0.0462938579323194}, {"determining": "Min( ( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( CS ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( Max( ( FirstVNF_RAM / ( BR / CRS ) ),DDR ) + PN ) - AMS ) ) - ( ( ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) + ( ( AMS - FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) - PN ) * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem + RRS ) - ( Min( DDR ,Max( Min( FirstVNF_Mem_Server ,( MRS / MRS ) ),MRS ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( ( CS / ( MUR / MUC ) ) * RMSe ) * ( ( Max( MUC,MUR ) - ( DS - MLU ) ) - ( MUM + ( MUC / DS ) ) ) ) + RRSe ) / ( MUR / CS ) ) ,( Min( RMSe ,( MUR - CS ) ) - CS ) )", "obj1": 0.8444444444444444, "obj2": 0.06627608052648513}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "( ( ( FirstVNF_Mem - MDR ) - DDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem - FirstVNF_Mem ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( Max( RCSe,( ( MLU * MUM ) / RRSe ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.6462962962962963, "obj2": 0.1981871220820506}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "( ( ACS - Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,Max( RRSe,MUC ) ) ,( ( MUM / MLU ) + Min( RMSe ,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7462962962962963, "obj2": 0.11479348821378625}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( FirstVNF_RAM + Min( Min( DDR ,FirstVNF_Mem ) ,RRS ) ) ) - DDR ) - ( AMS - FirstVNF_RAM_Server ) ) ,FirstVNF_Mem )", "choosing": "Min( Min( ( ( MUR * MUM ) + RRSe ) ,MUR ) ,( RMSe / RRSe ) )", "obj1": 0.812962962962963, "obj2": 0.079892411568308}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( PN,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6388888888888888, "obj2": 0.2099861666096408}, {"determining": "Min( ( ( ( ( Min( Const ,PN ) * Const ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( MUC - ( MUM - MLU ) ) ,Min( MLU ,( ( ( Min( RMSe ,CS ) + MUM ) / RCSe ) * ( MLU * CS ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.02460055162830554}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5259259259259259, "obj2": 0.2968217679057646}, {"determining": "( Min( ACS ,Const ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Max( ( FirstVNF_RAM + FirstVNF_RAM ),( Max( ( ( FirstVNF_Mem_Server - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server / ARS ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / RCSe ) + ( RRSe + MUM ) ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.75, "obj2": 0.11008955661634642}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( Min( CS ,RCSe ) * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( ( ( RRSe / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.24077163233053725}, {"determining": "( ( ( ( ACS + CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( Max( MLU,RRSe ) * Max( DS,MUR ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9333333333333333, "obj2": 0.027086724290170863}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( AMS,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - ( Max( Min( AMS ,FirstVNF_Mem_Server ),FirstVNF_RAM ) + RRS ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( FirstVNF_RAM_Server / MRS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MUC + Max( MUC,MUC ) ) - Min( ( ( MUR - ( MLU / MLU ) ) / ( ( MLU - CS ) + MUR ) ) ,( RMSe * MUR ) ) )", "obj1": 0.4981481481481482, "obj2": 0.3188673468532078}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( ( MRS / DDR ) ,Min( Max( ARS,CRS ) ,( CRS - Const ) ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( CS - Min( ( ( ( RMSe - CS ) - MUM ) / ( RRSe + Max( DS,RRSe ) ) ) ,( RRSe + MUM ) ) ) ) - CS ) ,( ( Min( DS ,MUR ) / CS ) - RMSe ) )", "obj1": 0.8555555555555555, "obj2": 0.06389469676160281}, {"determining": "Min( ( ( PN + FirstVNF_RAM ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( CS ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,Min( ( ( ( MLU / RMSe ) + ( DS * MUC ) ) + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) * RMSe ) * RRSe ) )", "obj1": 0.14074074074074075, "obj2": 0.7607124888906999}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUC ) ) - MUM ) ) ) - ( RRSe / DS ) ) ,CS )", "obj1": 0.8796296296296297, "obj2": 0.05276955928632517}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8, "obj2": 0.0853898177864827}, {"determining": "( ( ( DDR + CRS ) - MDR ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,Max( RRSe,MUC ) ) ,( CS + RMSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * ( RRSe / DS ) ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7351851851851852, "obj2": 0.11716784844496309}, {"determining": "( ( ACS - DDR ) - ( Min( ( ( ( Max( DDR,MDR ) / ( FirstVNF_CPU - FirstVNF_CPU ) ) + Min( DDR ,FirstVNF_CPU ) ) / PN ) ,FirstVNF_CPU_Server ) * ARS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( Min( ( MUR - ( ( CS + Min( DS ,MUR ) ) * CS ) ) ,( Max( MUC,RMSe ) * RRSe ) ) * ( MUR / CS ) ) * RRSe ) )", "obj1": 0.7592592592592593, "obj2": 0.10674184762390466}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / FirstVNF_Mem ) * FirstVNF_CPU_Server ) ) )", "choosing": "Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( RRSe - DS ) + ( CS - Min( ( ( ( RMSe - CS ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) ) )", "obj1": 0.8574074074074074, "obj2": 0.059642829342029136}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( PN + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( Min( ( Max( ( Const / RRS ),RRS ) - PN ) ,Max( ( PN + Max( PN,DDR ) ),PN ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( Min( CS ,RCSe ) * RMSe ) * ( Max( RCSe,( ( DS / RCSe ) * DS ) ) - ( MUM + Max( ( RRSe * DS ),( MUM + RRSe ) ) ) ) ) + RRSe ) / ( MUR / CS ) ) ,( ( MUM + Min( Min( DS ,DS ) ,( MLU / CS ) ) ) - CS ) )", "obj1": 0.837037037037037, "obj2": 0.06972532280971334}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8037037037037037, "obj2": 0.08396442915184114}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "( Max( ( ( ( MUC * MUR ) / RMSe ) * ( RMSe + MUR ) ),( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( ( MUM * CS ) + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( MLU - DS ) ) ) ) * RRSe ) ) )", "obj1": 0.5314814814814814, "obj2": 0.29315585571360286}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUC ) ) - MUM ) ) ) - ( RRSe / DS ) ) ,CS )", "obj1": 0.8796296296296297, "obj2": 0.05276955928632517}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) ) + CRS ) - MDR ) ,( PN - CRS ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( ( MUR + ( MUM * ( DS / RCSe ) ) ) - Min( RMSe ,Min( ( MUM / MUM ) ,( RRSe - RCSe ) ) ) ) ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10232017457869946}, {"determining": "Min( ( ( ( ( ( ( PN * ARS ) + PN ) - DDR ) + ( Max( PN,PN ) + PN ) ) - DDR ) - FirstVNF_CPU ) ,PN )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) ) / RMSe ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9685185185185186, "obj2": 0.011228267778635484}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( Max( ( Const / RRS ),RRS ) - PN ) ,Max( ( PN + Max( PN,DDR ) ),PN ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUR - Min( RMSe ,( CS + MUR ) ) ) ,( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( ( Max( ( RRSe + MUC ),MLU ) / MUC ),MUM ) ) ,( MUM + RRSe ) ) ) )", "obj1": 0.6981481481481482, "obj2": 0.15394247778027098}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( FirstVNF_RAM + ( BR - FirstVNF_CPU_Server ) ) ) ) ) ),FirstVNF_RAM ) )", "choosing": "( Max( Max( CS,CS ),MUR ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6492246871441514}, {"determining": "Min( ( ( ( ( Min( FirstVNF_CPU ,Max( ( ARS - RRS ),FirstVNF_RAM_Server ) ) + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + CS ) + ( DS * RCSe ) ) ,Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,RRSe ) ) ) - RMSe ) ,Min( MUM ,( MLU / ( ( MUR / ( Min( RRSe ,MUC ) - CS ) ) - ( Min( ( ( MUR / MUC ) + ( MUM / DS ) ) ,MUM ) - Max( MUM,CS ) ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.6905632620298283}, {"determining": "Min( ( DDR * ( Min( RRS ,RRS ) * FirstVNF_RAM ) ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUR / ( MUM / MLU ) ) * MUR ) / DS ) / MUR ) / ( DS - CS ) ) - ( MLU - ( DS - DS ) ) ) ,( ( Min( DS ,MUR ) / ( MUR + RCSe ) ) - Min( MUM ,MUM ) ) )", "obj1": 0.8314814814814815, "obj2": 0.07181632011128924}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "Min( ( DDR - MDR ) ,PN )", "choosing": "Min( ( Max( RCSe,( ( MLU * ( RCSe - RMSe ) ) / RRSe ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.13703703703703704, "obj2": 0.762623233763862}], "26": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( CS ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,CS ) * RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( RRS - MDR ) - ( ( ( ARS / ( PN + Max( MDR,( CRS - RRS ) ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * MDR ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUC - Min( ( CS + Min( DS ,MUM ) ) ,RMSe ) ) ,Min( RRSe ,MUC ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( ( CS * RRSe ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( ( ( CRS + ( Min( FirstVNF_Mem ,( AMS + FirstVNF_RAM ) ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,Max( RCSe,( ( RCSe + MUC ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.40555555555555556, "obj2": 0.4552819532252133}, {"determining": "Min( ( Max( PN,PN ) - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS + MUR ) / Max( Max( ( DS - ( CS - RCSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.41102461796275086}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * ( PN - Const ) ) - ( ( ( ARS / ( DDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,Max( FirstVNF_Mem,Min( DDR ,( FirstVNF_RAM / MRS ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,( ( Min( ( MLU - MUM ) ,( DS + MLU ) ) * MUR ) - RCSe ) ) / Min( RCSe ,( ( ( ( MUM - CS ) / DS ) / RCSe ) + MUM ) ) ) - MUC ) ,CS )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( RMSe + MUM ) ,Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) )", "obj1": 0.5703703703703704, "obj2": 0.27548905242828203}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + ( MDR - FirstVNF_CPU_Server ) ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,( MUM * CS ) ) ,( ( MUM + CS ) + ( DS * RRSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3574074074074074, "obj2": 0.5030580780997911}, {"determining": "( ( ( PN * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + PN ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + AMS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,DS ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( CRS,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - RRSe ) / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6796296296296296, "obj2": 0.18197556388459188}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "( ( ( ( Max( RRS,Const ) - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_CPU - MDR ) )", "choosing": "( ( ( RCSe - MUM ) + MUM ) - ( ( MLU / ( RCSe * ( RRSe + Min( ( DS + ( MUM * RCSe ) ) ,MUM ) ) ) ) - ( DS * RMSe ) ) )", "obj1": 0.3611111111111111, "obj2": 0.48133203362244237}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * BR ) ) - ( FirstVNF_Mem * ( RRS - Max( Const,( BR / FirstVNF_Mem ) ) ) ) ) / ( ( AMS * FirstVNF_Mem ) - MDR ) )", "choosing": "( ( ( MLU - ( MUC - MUM ) ) - ( DS * Min( ( ( RMSe * RRSe ) * Min( RRSe ,MUM ) ) ,MUC ) ) ) - ( ( RCSe - MUM ) + ( MUM * MLU ) ) )", "obj1": 0.337037037037037, "obj2": 0.5104993372773909}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + ( PN * ARS ) ) + PN ) - DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / RCSe ) + ( Max( RCSe,( MUM / RRSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.16111111111111112, "obj2": 0.7381419785985874}, {"determining": "Min( PN ,( ( FirstVNF_Mem_Server - ARS ) * FirstVNF_RAM ) )", "choosing": "Min( CS ,( RRSe + ( RCSe + Max( CS,DS ) ) ) )", "obj1": 0.7814814814814814, "obj2": 0.09516825086219068}, {"determining": "Min( ( ( Min( ( FirstVNF_Mem - MDR ) ,PN ) + FirstVNF_RAM ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( CS ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,CS ) * RMSe ) * RRSe ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( ( ( ( CRS + ( Max( ( Max( ARS,PN ) / ( ACS - CRS ) ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.39444444444444443, "obj2": 0.4624157843173393}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( ( CS + Max( MLU,( MUC - MLU ) ) ) * ( RCSe - MUM ) )", "obj1": 0.6833333333333333, "obj2": 0.16125329454373752}, {"determining": "Min( ( ( FirstVNF_RAM - Max( ( ( MDR - AMS ) - ( ( CRS * ( CRS * MDR ) ) + RRS ) ),( Const + ( ( MDR + MDR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( PN * ACS ) ) ,( ( FirstVNF_CPU / Min( PN ,( FirstVNF_Mem - MDR ) ) ) - MDR ) )", "choosing": "Min( Max( Min( RCSe ,( CS + ( MLU + ( MUR / Min( MLU ,( RMSe * MUM ) ) ) ) ) ),( RMSe + CS ) ) ,( MUM - MLU ) )", "obj1": 0.6388888888888888, "obj2": 0.2099861666096408}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.575925925925926, "obj2": 0.252879408004116}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "( CRS / ( ( ( Min( Const ,( AMS + Max( Const,FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) - MDR ) )", "choosing": "( ( MUM - RCSe ) - ( CS - Min( ( ( MUR / MUC ) / ( RRSe + ( ( Max( MLU,RRSe ) * Max( MUC,MUR ) ) + ( ( CS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9481481481481482, "obj2": 0.021004530016811605}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ACS ) ) - ( FirstVNF_Mem * MRS ) ) / Max( Min( PN ,FirstVNF_Mem ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( MRS / PN ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + AMS ) ) ) ) ) )", "choosing": "( ( ( CS - DS ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( ( ( MUR / CS ) * MUC ) * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5669595330948748}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( Min( CS ,RCSe ) * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( ( ( MUC / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.27990027139421814}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( PN,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( Max( MLU,RRSe ) * Max( DS,MUR ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.19217831723467332}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * Const ) ) * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( ( MUR * RRSe ) - MUM ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.30820272351843386}, {"determining": "Min( ( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( CS ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) - Min( CRS ,RRS ) ) ,( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( RMSe - Min( DS ,( ( RCSe * RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.46296296296296297, "obj2": 0.35514863963386595}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + CRS ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( CS - ( MUR - ( ( ( CS + ( RMSe + MUM ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.7203703703703703, "obj2": 0.127595831575109}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - Max( CS,DS ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5191839941727211}, {"determining": "Min( ( Min( ( FirstVNF_CPU - Min( BR ,PN ) ) ,FirstVNF_CPU ) - ( ( ( ( ( ( PN - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + ( ARS + CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUR ) ,( Min( ( CS + MUC ) ,Max( DS,( MUM / RMSe ) ) ) - MUM ) ) ) - ( MUC / DS ) ) ,CS )", "obj1": 0.9666666666666667, "obj2": 0.013534314407467218}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( PN ,( ( ( ( ( ( PN + ( MDR - FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( ( Max( MUC,( MUM - MLU ) ) / ( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( RCSe / MUC ) )", "obj1": 0.8962962962962963, "obj2": 0.04545429665186162}, {"determining": "Min( ( PN - ( Min( FirstVNF_RAM ,( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,PN ) ) ) ) * MDR ) ) ,PN )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / RCSe ) )", "obj1": 0.6055555555555555, "obj2": 0.23889955328266183}, {"determining": "( ( ( ( ACS + CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / ( ( ( Min( ( ( Min( Const ,FirstVNF_CPU ) * BR ) - MDR ) ,PN ) + ( PN * ARS ) ) - DDR ) - MDR ) )", "choosing": "( ( MUR / ( ( RMSe + Min( Max( RRSe,( CS / ( MUC - CS ) ) ) ,( ( MUM * CS ) * MUC ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.9148148148148149, "obj2": 0.03725095257246434}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5222222222222223, "obj2": 0.30462630798712076}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.1349108756118143}, {"determining": "( ( ( ( ACS - CRS ) + ( CRS + ( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),DDR ) + PN ) ) ) - ( MRS * FirstVNF_Mem ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "( ( MUM - MUC ) - ( RMSe + ( ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( ( MUR / MUC ) ,MUR ) ) ) * RRSe ) ) )", "obj1": 0.13333333333333333, "obj2": 0.7710615217982679}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( PN + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6673429211643264}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_Mem * FirstVNF_Mem ) - ( MRS * AMS ) ) / Min( ( FirstVNF_Mem_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * Max( Min( ( FirstVNF_CPU_Server - ( ARS + ARS ) ) ,Const ),PN ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - ( DS - DS ) ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) - ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.6574074074074074, "obj2": 0.19348164752049654}, {"determining": "Min( ( DDR * ( Min( RRS ,RRS ) * FirstVNF_RAM ) ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUR / ( MUM / MLU ) ) * MUR ) / DS ) / MUR ) / ( DS - CS ) ) - ( MLU - ( DS - DS ) ) ) ,( ( Min( DS ,MUR ) / ( MUR + RCSe ) ) - Min( MUM ,MUM ) ) )", "obj1": 0.8314814814814815, "obj2": 0.07181632011128924}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "( ( ( ( ACS - CRS ) - ( ( DDR - ARS ) * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) + MRS ) ) ) )", "choosing": "( ( ( MLU - ( MUC + MUM ) ) - ( RMSe + Min( DS ,MUC ) ) ) - Min( Max( ( RMSe - MUM ),MLU ) ,MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( ( ( DDR - ( Min( ARS ,MDR ) + BR ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "( ( ( CS - MUM ) - ( DS * ( RRSe + ( RRSe + ( CS * CS ) ) ) ) ) - ( CS - Min( ( ( ( MUR * RRSe ) * MUM ) / ( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.18888888888888888, "obj2": 0.6953985476123746}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.42407407407407405, "obj2": 0.39139217726137643}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + MDR ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( DS * RCSe ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.47962962962962963, "obj2": 0.34358481983082423}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( ( FirstVNF_Mem * MDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUR - Min( RMSe ,( CS + MUR ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + MUM ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.158433559859992}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( ( Min( ( MUC - ( MUM - MLU ) ) ,( ( MUC * MUM ) - RCSe ) ) + ( MUM * ( DS / RCSe ) ) ) - Min( RMSe ,Min( ( MUM / MUM ) ,( RRSe - RCSe ) ) ) ) ) ) )", "obj1": 0.812962962962963, "obj2": 0.07972717072339727}, {"determining": "( ( ACS - Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( FirstVNF_RAM,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,Max( RRSe,MUC ) ) ,( ( MUM / ( ( MUM * RMSe ) * MUC ) ) + Min( RMSe ,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7444444444444445, "obj2": 0.11331950036126978}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( PN,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6388888888888888, "obj2": 0.2099861666096408}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.8870370370370371, "obj2": 0.04882356089702309}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( PN - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,MUR ) ) ,( ( MUM + CS ) + ( DS * ( RCSe - MUM ) ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5259259259259259, "obj2": 0.29682176790576453}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6525395000660325}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "( ( ( ( ACS + CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / ( ( ( ( PN * ( MRS / Max( FirstVNF_RAM_Server,FirstVNF_Mem ) ) ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / Min( RRSe ,MUC ) ) ) - DS ) ) - CS ) ,( MUC - RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.0308217305712058}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( AMS,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - ( Max( Min( AMS ,FirstVNF_Mem_Server ),FirstVNF_RAM ) + RRS ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( FirstVNF_RAM_Server / MRS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MUC + Max( MUC,MUC ) ) - Min( ( ( MUR - ( MLU / MLU ) ) / ( ( MLU - CS ) + MUR ) ) ,( RMSe * MUR ) ) )", "obj1": 0.4981481481481482, "obj2": 0.3188673468532078}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( DDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( DS ,( RCSe - MUC ) ) - MUM ) ) ) - ( RRSe / DS ) ) ,CS )", "obj1": 0.9907407407407407, "obj2": 0.002219369453937033}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( Min( CS ,RCSe ) * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( ( ( CS / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.5018518518518519, "obj2": 0.3170752657736387}, {"determining": "( ( ( DDR + CRS ) - MDR ) - ( ( ( ( MDR - PN ) / ARS ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( ( MRS * RRS ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "Min( CS ,( RRSe * ( Min( ( Max( ( RRSe * ( DS / MLU ) ),DS ) - ( ( CS + MUM ) * RRSe ) ) ,CS ) * RMSe ) ) )", "obj1": 0.7277777777777777, "obj2": 0.1214327179924605}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8537037037037037, "obj2": 0.0616122461915089}, {"determining": "Min( ( ( ( ( Min( FirstVNF_CPU ,Max( ( ARS - RRS ),FirstVNF_RAM_Server ) ) + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + CS ) + ( DS * RCSe ) ) ,Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,RRSe ) ) ) - RMSe ) ,Min( MUM ,( MLU / ( ( MUR / ( Min( RRSe ,MUC ) - CS ) ) - ( Min( ( ( MUR / MUC ) + ( MUM / DS ) ) ,MUM ) - Max( MUM,CS ) ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.6905632620298283}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( Max( ( FirstVNF_RAM / ( BR / CRS ) ),DDR ) + PN ) - AMS ) ) - ( ( ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) + ( ( AMS - FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) - PN ) * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem + RRS ) - ( Min( DDR ,Max( Min( FirstVNF_Mem_Server ,( MRS / MRS ) ),MRS ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( ( CS / ( MUR / MUC ) ) * RMSe ) * ( ( Max( MUC,MUR ) - ( DS - MLU ) ) - ( MUM + ( MUC / DS ) ) ) ) + RRSe ) / ( MUR / CS ) ) ,( Min( RMSe ,( MUR - CS ) ) - CS ) )", "obj1": 0.8444444444444444, "obj2": 0.06627608052648513}, {"determining": "( Min( ACS ,Const ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Max( ( FirstVNF_RAM + FirstVNF_RAM ),( Max( ( ( FirstVNF_Mem_Server - DDR ) - FirstVNF_Mem ),FirstVNF_CPU_Server ) - ( ( FirstVNF_RAM_Server / ARS ) * ( AMS / FirstVNF_Mem ) ) ) ) ) )", "choosing": "Min( ( ( ( ( DS / RCSe ) + ( RRSe + MUM ) ) + Min( ( CS + MUC ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.75, "obj2": 0.11008955661634642}, {"determining": "Min( ( ( ( ( ARS * ARS ) + ( ( Const + FirstVNF_Mem_Server ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09043405534475017}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3851851851851852, "obj2": 0.47116845019016224}, {"determining": "Min( ( Min( Min( PN ,CRS ) ,FirstVNF_CPU ) - ( Min( ( ( ( ( RRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) + PN ) ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe / RMSe ) ,( CS / Min( RRSe ,( MUM * RMSe ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.2913617622135136}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( RMSe + MUM ) )", "obj1": 0.3314814814814815, "obj2": 0.5181777127313977}, {"determining": "Min( ( ( ( CRS + ( PN + Max( DDR,( ( CRS - CRS ) - ( MRS / FirstVNF_CPU ) ) ) ) ) - DDR ) - MDR ) ,Min( ( DDR * ACS ) ,DDR ) )", "choosing": "Min( ( RMSe - Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MUR ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( Max( Min( ( MUR - RCSe ) ,MLU ),CS ) * RCSe ) ) ) ) ,( MUC / RCSe ) )", "obj1": 0.7351851851851852, "obj2": 0.11696235085219756}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,CS ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5925925925925926, "obj2": 0.24426307905595337}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) ) + CRS ) - MDR ) ,( PN - CRS ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( CS + MUM ) - ( ( MUR + ( MUM * ( DS / RCSe ) ) ) - Min( RMSe ,Min( ( MUM / MUM ) ,( RRSe - RCSe ) ) ) ) ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10232017457869946}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "( Max( ( ( ( MUC * MUR ) / RMSe ) * ( RMSe + MUR ) ),( ( MLU + RMSe ) * DS ) ) - ( RMSe + ( ( ( MUM * CS ) + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( MLU - DS ) ) ) ) * RRSe ) ) )", "obj1": 0.5314814814814814, "obj2": 0.29315585571360286}, {"determining": "Min( ( ( ( CRS + ( PN + ( ( FirstVNF_RAM / ( ACS - CRS ) ) * DDR ) ) ) - DDR ) - MDR ) ,( ( DDR * ACS ) / DDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MLU ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3851851851851852, "obj2": 0.47116845019016224}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,CS )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( ( ( FirstVNF_CPU * MRS ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),( CS + MUM ) ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( ( MUM - ( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.715078263717545}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( FirstVNF_RAM + ( BR - FirstVNF_CPU_Server ) ) ) ) ) ),FirstVNF_RAM ) )", "choosing": "( Max( Max( CS,CS ),MUR ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.22777777777777777, "obj2": 0.6492246871441514}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUC ) ) - MUM ) ) ) - ( RRSe / DS ) ) ,CS )", "obj1": 0.8796296296296297, "obj2": 0.05276955928632517}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8037037037037037, "obj2": 0.0838660967037309}, {"determining": "Min( Min( MRS ,Max( ARS,DDR ) ) ,( ( ( Max( FirstVNF_CPU,CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) ) - DDR ) - MDR ),CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ) - CS ) ,CS )", "obj1": 0.4648148148148148, "obj2": 0.35170403228771735}], "27": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - Max( Const,BR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - DDR ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( ARS,CRS ) ) ,( PN - Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( CS + Max( MLU,MUM ) ) * ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( DDR - ( ( ACS + ARS ) + ( Min( PN ,DDR ) + PN ) ) ) - MDR ) ,( FirstVNF_CPU_Server + Max( MDR,DDR ) ) )", "choosing": "Min( CS ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,CS ) * RMSe ) * RRSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5666666666666667, "obj2": 0.26000713973976686}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( MUM * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( ( ( CS / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.40185185185185185, "obj2": 0.41416587316141995}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.39814814814814814, "obj2": 0.4594734027159231}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( RMSe ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.35185185185185186, "obj2": 0.4888134608776986}, {"determining": "( CRS / ( ( ( Min( Const ,( AMS + Max( Const,FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) - MDR ) )", "choosing": "( ( MUM - RCSe ) - ( CS - Min( ( ( MUR / MUC ) / ( RRSe + ( ( Max( MLU,RRSe ) * Max( MUC,MUR ) ) + ( ( CS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9481481481481482, "obj2": 0.021004530016811605}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,( FirstVNF_RAM - PN ) ) ) )", "choosing": "( Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - Max( CS,DS ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.5090802084316056}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( DDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( DS ,( RCSe - MUC ) ) - MUM ) ) ) - ( RRSe / DS ) ) ,CS )", "obj1": 0.9907407407407407, "obj2": 0.002219369453937033}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( Min( CS ,RCSe ) * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( ( ( MUC / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.27990027139421814}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "( ( ( PN * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + PN ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + AMS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,DS ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( PN,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - Max( CS,DS ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6240740740740741, "obj2": 0.22086526690033065}, {"determining": "Min( ( Min( ( FirstVNF_CPU - Min( BR ,PN ) ) ,FirstVNF_CPU ) - ( ( ( ( ( ( PN - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + ( ARS + CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUR ) ,( Min( ( CS + MUC ) ,Max( DS,( MUM / RMSe ) ) ) - MUM ) ) ) - ( MUC / DS ) ) ,CS )", "obj1": 0.9666666666666667, "obj2": 0.013534314407467218}, {"determining": "Min( ( Max( ( Min( RRS ,Const ) + PN ),DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RCSe / MUC ) + ( Max( MUM,( RCSe + MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.16111111111111112, "obj2": 0.7377544366820761}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "( ( ( ( ACS + CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / ( ( ( Min( ( ( Min( Const ,FirstVNF_CPU ) * BR ) - MDR ) ,PN ) + ( PN * ARS ) ) - DDR ) - MDR ) )", "choosing": "( ( MUR / ( ( RMSe + Min( Max( RRSe,( CS / ( MUC - CS ) ) ) ,( ( MUM * CS ) * MUC ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.9148148148148149, "obj2": 0.03725095257246434}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "Min( ( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MLU ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.29259259259259257, "obj2": 0.5651485750077231}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.662962962962963, "obj2": 0.19021183992266943}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * Const ) ) * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( ( MUR * RRSe ) - MUM ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.30820272351843386}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "Min( ( ( Max( PN,( FirstVNF_Mem * MRS ) ) + PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "( ( ( ( ACS + CRS ) - PN ) - ( MRS * FirstVNF_Mem ) ) / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.9277777777777778, "obj2": 0.03080675231996714}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "( ( ( ( Max( RRS,Const ) - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_CPU - MDR ) )", "choosing": "( ( ( RCSe - MUM ) + MUM ) - ( ( MLU / ( RCSe * ( RRSe + Min( ( DS + ( MUM * RCSe ) ) ,MUM ) ) ) ) - ( DS * RMSe ) ) )", "obj1": 0.3611111111111111, "obj2": 0.48133203362244237}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5357211633264747}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( CRS,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - RRSe ) / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6796296296296296, "obj2": 0.18197556388459188}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( DDR * ( Min( RRS ,RRS ) * FirstVNF_RAM ) ) ,Min( FirstVNF_CPU ,FirstVNF_RAM_Server ) )", "choosing": "Min( ( ( ( ( ( ( MUR / ( MUM / MLU ) ) * MUR ) / DS ) / MUR ) / ( DS - CS ) ) - ( MLU - ( DS - DS ) ) ) ,( ( Min( DS ,MUR ) / ( MUR + RCSe ) ) - Min( MUM ,MUM ) ) )", "obj1": 0.8314814814814815, "obj2": 0.07181632011128924}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,( ACS - FirstVNF_CPU ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( RRS - DDR ) ) + Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - ( RRS - MRS ) ) ) ) + Max( ARS,CRS ) ) ) ) - ( ACS - ARS ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( RCSe / ( MUM / RRSe ) ) - ( MUR - Max( ( ( ( RMSe + MUC ) + CS ) + MUC ),( MUM * ( ( MUR - RRSe ) / RCSe ) ) ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.1349108756118143}, {"determining": "Min( ( ( FirstVNF_Mem_Server * Const ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( MUC + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.14629629629629629, "obj2": 0.759329520582996}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5152044564534438}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( Max( PN,PN ) - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS + MUR ) / Max( Max( ( DS - ( CS - RCSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.41102461796275086}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,Max( Min( Const ,( FirstVNF_RAM - ( Max( PN,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - Max( CS,DS ) ) * Max( ( MLU + RRSe ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5191839941727211}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.42407407407407405, "obj2": 0.39139217726137643}, {"determining": "Min( ( ( ( CRS + ( PN + ( ( FirstVNF_RAM / ( ACS - CRS ) ) * DDR ) ) ) - DDR ) - MDR ) ,( ( DDR * ACS ) / DDR ) )", "choosing": "Min( CS ,( Max( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( ( ( MLU / RMSe ) + ( DS * MUC ) ) + MUC ) ,Max( MLU,DS ) ) ),RMSe ) * RRSe ) )", "obj1": 0.9648148148148148, "obj2": 0.015466820214900447}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( ( ( MUM - CS ) * MUM ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - Max( RMSe,MUM ) )", "obj1": 0.5925925925925926, "obj2": 0.2406012343418032}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.17952528921706093}, {"determining": "Min( Min( MRS ,Max( ARS,DDR ) ) ,( ( ( Max( FirstVNF_CPU,CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) ) - DDR ) - MDR ),CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ) - CS ) ,CS )", "obj1": 0.4648148148148148, "obj2": 0.35170403228771735}, {"determining": "Min( ( PN - ( Min( FirstVNF_RAM ,( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - FirstVNF_RAM_Server ) ,PN ) ) ) ) * MDR ) ) ,PN )", "choosing": "Min( Max( RMSe,RRSe ) ,( RMSe / RCSe ) )", "obj1": 0.6055555555555555, "obj2": 0.23889955328266183}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "( ( ( ( ACS - CRS ) + ( CRS + ( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),DDR ) + PN ) ) ) - ( MRS * FirstVNF_Mem ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + FirstVNF_Mem ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "( ( MUM - MUC ) - ( RMSe + ( ( MLU + ( ( ( CS + MUC ) + ( RMSe + CS ) ) - Min( ( MUR / MUC ) ,MUR ) ) ) * RRSe ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7695328193179589}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6833333333333333, "obj2": 0.16125329454373752}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( CS + Max( ( ( Min( MLU ,( MUR - ( DS - RMSe ) ) ) / MUR ) + ( Max( MUM,CS ) - MUC ) ),Max( MUC,MLU ) ) ) ,( RCSe - MUM ) )", "obj1": 0.45185185185185184, "obj2": 0.3626338508713222}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) - Min( CRS ,RRS ) ) ,( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( RMSe - Min( DS ,( ( RCSe * RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.46296296296296297, "obj2": 0.35514863963386595}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.8870370370370371, "obj2": 0.04882356089702309}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.5851851851851851, "obj2": 0.2445850559385171}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_CPU_Server * Const ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),Max( RRSe,RCSe ) ) - MUR ) * MLU ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( MUM + RMSe ) )", "obj1": 0.6555555555555556, "obj2": 0.19426075850250646}, {"determining": "Min( ( ( ( ( ARS * ARS ) + ( ( Const + FirstVNF_Mem_Server ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09043405534475017}, {"determining": "Min( ( ( FirstVNF_RAM - Max( ( ( MDR - AMS ) - ( ( CRS * ( CRS * MDR ) ) + RRS ) ),( Const + ( ( MDR + MDR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( PN * ACS ) ) ,( ( FirstVNF_CPU / Min( PN ,( FirstVNF_Mem - MDR ) ) ) - MDR ) )", "choosing": "Min( Max( Min( RCSe ,( CS + ( MLU + ( MUR / Min( MLU ,( RMSe * MUM ) ) ) ) ) ),( RMSe + CS ) ) ,( MUM - MLU ) )", "obj1": 0.6388888888888888, "obj2": 0.2099861666096408}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * ( PN - Const ) ) - ( ( ( ARS / ( DDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,Max( FirstVNF_Mem,Min( DDR ,( FirstVNF_RAM / MRS ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,( ( Min( ( MLU - MUM ) ,( DS + MLU ) ) * MUR ) - RCSe ) ) / Min( RCSe ,( ( ( ( MUM - CS ) / DS ) / RCSe ) + MUM ) ) ) - MUC ) ,CS )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,CS )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( Max( ( FirstVNF_RAM / ( BR / CRS ) ),DDR ) + PN ) - AMS ) ) - ( ( ( Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) + ( ( AMS - FirstVNF_RAM_Server ) + FirstVNF_CPU ) ) - PN ) * FirstVNF_CPU_Server ) ) ,( ( ( FirstVNF_Mem + RRS ) - ( Min( DDR ,Max( Min( FirstVNF_Mem_Server ,( MRS / MRS ) ),MRS ) ) / Min( FirstVNF_RAM_Server ,FirstVNF_CPU_Server ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( ( CS / ( MUR / MUC ) ) * RMSe ) * ( ( Max( MUC,MUR ) - ( DS - MLU ) ) - ( MUM + ( MUC / DS ) ) ) ) + RRSe ) / ( MUR / CS ) ) ,( Min( RMSe ,( MUR - CS ) ) - CS ) )", "obj1": 0.8444444444444444, "obj2": 0.06627608052648513}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MLU ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8962962962962963, "obj2": 0.04545429665186162}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5222222222222223, "obj2": 0.30462630798712076}, {"determining": "( ( ( ( ACS - CRS ) - ( ( DDR - ARS ) * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) + MRS ) ) ) )", "choosing": "( ( ( MLU - ( MUC + MUM ) ) - ( RMSe + Min( DS ,MUC ) ) ) - Min( Max( ( RMSe - MUM ),MLU ) ,MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( AMS,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - ( Max( Min( AMS ,FirstVNF_Mem_Server ),FirstVNF_RAM ) + RRS ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( FirstVNF_RAM_Server / MRS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MUC + Max( MUC,MUC ) ) - Min( ( ( MUR - ( MLU / MLU ) ) / ( ( MLU - CS ) + MUR ) ) ,( RMSe * MUR ) ) )", "obj1": 0.4981481481481482, "obj2": 0.3188673468532078}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08721688180613581}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8537037037037037, "obj2": 0.0616122461915089}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( ( ( ( ( Min( FirstVNF_CPU ,Max( ( ARS - RRS ),FirstVNF_RAM_Server ) ) + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + CS ) + ( DS * RCSe ) ) ,Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,RRSe ) ) ) - RMSe ) ,Min( MUM ,( MLU / ( ( MUR / ( Min( RRSe ,MUC ) - CS ) ) - ( Min( ( ( MUR / MUC ) + ( MUM / DS ) ) ,MUM ) - Max( MUM,CS ) ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.6905632620298283}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( PN + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6673429211643264}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( ( Max( RRSe,RRSe ) * Max( DS,MUR ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3814814814814815, "obj2": 0.4800555902155014}, {"determining": "Min( ( Min( Min( PN ,CRS ) ,FirstVNF_CPU ) - ( Min( ( ( ( ( RRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) + PN ) ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe / RMSe ) ,( CS / Min( RRSe ,( MUM * RMSe ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.2913617622135136}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / Min( RRSe ,MUC ) ) ) - DS ) ) - CS ) ,( MUC - RMSe ) )", "obj1": 0.6148148148148148, "obj2": 0.22586878133802973}, {"determining": "Min( ( BR / CRS ) ,FirstVNF_RAM )", "choosing": "( ( ( RCSe - ( MUR + Min( ( MUM - MUM ) ,DS ) ) ) + MUM ) - Min( ( MLU - ( MUC * MUM ) ) ,( DS * RMSe ) ) )", "obj1": 0.4148148148148148, "obj2": 0.39679733451328236}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,Max( RRSe,DS ) ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8037037037037037, "obj2": 0.0838660967037309}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / Min( RRSe ,MUC ) ) ) - DS ) ) - CS ) ,( MUC - RMSe ) )", "obj1": 0.8388888888888889, "obj2": 0.06866146191457424}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,Min( PN ,( FirstVNF_Mem - MDR ) ) ) ) )", "choosing": "( ( ( Min( ( RMSe - ( RMSe - MUM ) ) ,DS ) - MUM ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( DS,DS ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8574074074074074, "obj2": 0.059717805945100344}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),DDR ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3925925925925926, "obj2": 0.4642718410469231}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ACS - RRS ) / DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7147448180637436}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( PN - ( Min( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,DS ) ) ,( ( MUM + CS ) + ( Max( ( MLU - MUM ),( CS / RCSe ) ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5777777777777777, "obj2": 0.24946963631210708}, {"determining": "Min( ( ( ( ( PN / ( ( ARS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / AMS ) ) + ( PN + Max( DDR,( ( CRS - CRS ) - ( MRS / FirstVNF_CPU ) ) ) ) ) - DDR ) - MDR ) ,Min( ( DDR * ACS ) ,DDR ) )", "choosing": "Min( ( MUM - MUM ) ,( Max( ( ( Min( MLU ,Max( MUC,MUM ) ) / MUR ) + ( Max( RRSe,CS ) - MUC ) ),Max( MLU,( CS / Min( DS ,RMSe ) ) ) ) + CS ) )", "obj1": 0.774074074074074, "obj2": 0.09983914581977119}, {"determining": "Min( PN ,( ( ( ( ( ( PN + ( MDR - FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( ( Max( MUC,( MUM - MLU ) ) / ( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( RCSe / MUC ) )", "obj1": 0.8962962962962963, "obj2": 0.04545429665186162}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MLU + MUC ) + RMSe ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.9203703703703704, "obj2": 0.033680430918638066}, {"determining": "( ( ( ( ACS - CRS ) - ( Const * FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + ( ( ( ( MLU - RRSe ) / Max( RCSe,MLU ) ) / Max( CS,RMSe ) ) / ( DS / CS ) ) ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6525395000660325}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( ( ( FirstVNF_CPU * MRS ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),( CS + MUM ) ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( ( MUM - ( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.715078263717545}, {"determining": "Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ) ) + CRS ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUR - Min( RMSe ,( CS + MUR ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + MUM ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7574074074074074, "obj2": 0.10696555755715098}], "28": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( PN ,( ( ( ( ( ( PN + ( MDR - FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( ( Max( MUC,( MUM - MLU ) ) / ( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( RCSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - Max( Const,BR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - DDR ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( ARS,CRS ) ) ,( PN - Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) )", "choosing": "( ( CS + Max( MLU,MUM ) ) * ( MUR * MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( FirstVNF_Mem - ( ( ARS - RRS ) * MDR ) ) ,( ( ( Min( MDR ,BR ) - FirstVNF_CPU ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7462962962962963, "obj2": 0.11158612603677538}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,( ACS - FirstVNF_CPU ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( RRS - DDR ) ) + Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - ( RRS - MRS ) ) ) ) + Max( ARS,CRS ) ) ) ) - ( ACS - ARS ) )", "choosing": "( Max( RRSe,MUC ) / ( CS * ( ( RCSe / ( MUM / RRSe ) ) - ( MUR - Max( ( ( ( RMSe + MUC ) + CS ) + MUC ),( MUM * ( ( MUR - RRSe ) / RCSe ) ) ) ) ) ) )", "obj1": 0.7092592592592593, "obj2": 0.1349108756118143}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_Mem - MDR ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.39444444444444443, "obj2": 0.4551337200914799}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS - CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( FirstVNF_CPU_Server * MRS ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( MUM * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( ( ( MUM * MUC ) * MUC ),( ( ( CS / RCSe ) / Min( ( DS * MUR ) ,Min( ( CS / RCSe ) ,MUC ) ) ) * RMSe ) ) ) )", "obj1": 0.3962962962962963, "obj2": 0.4160165200603354}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( RMSe ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.337037037037037, "obj2": 0.4931522680682983}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5152044564534438}, {"determining": "( ( ( PN * Min( FirstVNF_CPU_Server ,FirstVNF_Mem ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + PN ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + AMS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,DS ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( PN - ( Min( ( ( ( Const - FirstVNF_CPU_Server ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( CRS + MDR ) ) ,( CRS * ARS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) * AMS ) / ( ( ( FirstVNF_CPU_Server / ( DDR - CRS ) ) - ( ( PN / Const ) * FirstVNF_Mem ) ) - ( CRS * ACS ) ) ) )", "choosing": "Min( ( Min( Max( MUC,( ( ( MUR / ( RMSe * DS ) ) * Max( MUM,RMSe ) ) * MUM ) ) ,( ( MUM + CS ) + ( Max( ( ( DS - RRSe ) - MUM ),( CS / ( CS * MLU ) ) ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5592592592592592, "obj2": 0.26398405776135153}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Max( MUC,Min( RCSe ,MUR ) ) + ( CS - MUM ) ) ,( RCSe - MUM ) ) ) - CS ) ,( RCSe - ( ( MUR * RRSe ) - MUM ) ) )", "obj1": 0.8870370370370371, "obj2": 0.04882356089702309}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( AMS,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - ( Max( Min( AMS ,FirstVNF_Mem_Server ),FirstVNF_RAM ) + RRS ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( FirstVNF_RAM_Server / MRS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MUC + Max( MUC,MUC ) ) - Min( ( ( MUR - ( MLU / MLU ) ) / ( ( MLU - CS ) + MUR ) ) ,( RMSe * MUR ) ) )", "obj1": 0.4981481481481482, "obj2": 0.3188673468532078}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem - Max( MDR,Const ) ) - ( ( MRS + CRS ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( BR - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( DS * ( MUC + MUM ) ) + ( ( Min( ( ( MUC - CS ) - ( ( MUR * RRSe ) - MUM ) ) ,( ( MUC * ( CS * ( MUR * MUM ) ) ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( RMSe,( MLU + MUC ) ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3077845704378352}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16125329454373752}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "( ( ( ( ACS - CRS ) - ( Const * FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + ( ( ( ( MLU - RRSe ) / Max( RCSe,MLU ) ) / Max( CS,RMSe ) ) / ( DS / CS ) ) ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6525395000660325}, {"determining": "Min( Min( MRS ,Min( ( ( PN + Max( PN,( ( ACS - CRS ) - Min( BR ,FirstVNF_CPU_Server ) ) ) ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) / DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - MUC ) - ( RMSe + ( ( ( MUC * ( MUC + MUM ) ) + ( ( ( CS + MUC ) / ( RMSe + CS ) ) - Min( ( MUR / MUC ) ,MUR ) ) ) * RRSe ) ) )", "obj1": 0.34814814814814815, "obj2": 0.4855535561582123}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "Min( ( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.29259259259259257, "obj2": 0.5650270069852571}, {"determining": "Min( ( Min( Min( PN ,CRS ) ,FirstVNF_CPU ) - ( Min( ( ( ( ( RRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) + PN ) ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe / RMSe ) ,( CS / Min( RRSe ,( MUM * RMSe ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.2913617622135136}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( Min( CS ,RCSe ) * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ),RMSe ),( ( ( MUC / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.5444444444444444, "obj2": 0.27781077502963275}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "( ( ( ( Max( RRS,Const ) - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_CPU - MDR ) )", "choosing": "( ( ( RCSe - MUM ) + MUM ) - ( ( MLU / ( RCSe * ( RRSe + Min( ( DS + ( MUM * RCSe ) ) ,MUM ) ) ) ) - ( DS * RMSe ) ) )", "obj1": 0.3611111111111111, "obj2": 0.48133203362244237}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( ( RCSe - MUM ) + MUM ) )", "obj1": 0.31851851851851853, "obj2": 0.5234159855789884}, {"determining": "Min( ( ( ( ( ARS * ARS ) + ( ( Const + FirstVNF_Mem_Server ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09043405534475017}, {"determining": "( ( ( ( ACS - CRS ) + ( CRS + ( Max( ( FirstVNF_RAM / ( ACS - CRS ) ),DDR ) + PN ) ) ) - ( MRS * FirstVNF_Mem ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + FirstVNF_Mem ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( RMSe ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.13703703703703704, "obj2": 0.7684931688256352}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( MUR / MUC ) / ( RRSe + ( ( Max( MLU,RRSe ) * Max( MUC,MUR ) ) + ( ( MLU - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6203703703703703, "obj2": 0.2187744102446934}, {"determining": "Min( ( ( ( ( Min( FirstVNF_CPU ,Max( ( ARS - RRS ),FirstVNF_RAM_Server ) ) + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),Min( FirstVNF_Mem_Server ,( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + CS ) + ( DS * RCSe ) ) ,Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,RRSe ) ) ) - RMSe ) ,Min( MUM ,( MLU / ( ( MUR / ( Min( RRSe ,MUC ) - CS ) ) - ( Min( ( ( MUR / MUC ) + ( MUM / DS ) ) ,MUM ) - Max( MUM,CS ) ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.6905632620298283}, {"determining": "Min( ( Max( ( Min( RRS ,Const ) + PN ),DDR ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RCSe / MUC ) + ( Max( MUM,( RCSe + MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.16111111111111112, "obj2": 0.7377544366820761}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5222222222222223, "obj2": 0.30462630798712076}, {"determining": "( ( ( ( ACS - CRS ) - Max( Const,DDR ) ) - ( ( DDR + AMS ) * MRS ) ) / ( MDR - FirstVNF_Mem ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( MUM + ( Max( Min( MUC ,( RMSe / ( ( MUR - RRSe ) + Min( DS ,CS ) ) ) ),DS ) - CS ) ) )", "obj1": 0.3907407407407407, "obj2": 0.4698245798808626}, {"determining": "Min( ( PN - ( Min( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,DS ) ) ,( ( MUM + CS ) + ( Max( ( MLU - MUM ),( CS / RCSe ) ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6314814814814815, "obj2": 0.21347576494086254}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) ) - DDR ) - MDR ),CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( CS - CS ) - DS ) ) ) ) - CS ) ,CS )", "obj1": 0.45185185185185184, "obj2": 0.3625373738915983}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( ( ( PN + ( PN * ARS ) ) / ( MDR / AMS ) ) - MDR ) ,PN )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),Max( RRSe,RCSe ) ) - MUR ) * MLU ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU - RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( ( ( RMSe + ( Max( ( RMSe - ( DS - RMSe ) ),( CS * CS ) ) - RMSe ) ) / RCSe ) + RMSe ) )", "obj1": 0.9074074074074074, "obj2": 0.04020453145082231}, {"determining": "Min( ( ( ( ( PN / ( ( ARS + ( FirstVNF_Mem_Server / FirstVNF_RAM ) ) / AMS ) ) + ( PN + Max( DDR,( ( CRS - CRS ) - ( MRS / FirstVNF_CPU ) ) ) ) ) - DDR ) - MDR ) ,Min( ( DDR * ACS ) ,DDR ) )", "choosing": "Min( ( MUM - MUM ) ,( Max( ( ( Min( MLU ,Max( MUC,MUM ) ) / MUR ) + ( Max( RRSe,CS ) - MUC ) ),Max( MLU,( CS / Min( DS ,RMSe ) ) ) ) + CS ) )", "obj1": 0.774074074074074, "obj2": 0.09983914581977119}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.0975354027217301}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( ( Max( RRSe,RRSe ) * Max( DS,MUR ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3814814814814815, "obj2": 0.4800555902155014}, {"determining": "Min( ( Min( ( FirstVNF_CPU - Min( BR ,PN ) ) ,FirstVNF_CPU ) - ( ( ( ( ( ( PN - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + ( ARS + CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUR ) ,( Min( ( CS + MUC ) ,Max( DS,( MUM / RMSe ) ) ) - MUM ) ) ) - ( MUC / DS ) ) ,CS )", "obj1": 0.9666666666666667, "obj2": 0.013534314407467218}, {"determining": "Min( Min( MRS ,Max( ARS,DDR ) ) ,( ( ( Max( FirstVNF_CPU,CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) ) - DDR ) - MDR ),CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ) - CS ) ,CS )", "obj1": 0.4648148148148148, "obj2": 0.35170403228771735}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.7055555555555556, "obj2": 0.1437541272091081}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( PN + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.18333333333333332, "obj2": 0.6988299914358554}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) - Min( CRS ,RRS ) ) ,( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( RMSe - Min( DS ,( ( RCSe * RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.46296296296296297, "obj2": 0.35514863963386595}, {"determining": "Min( ( PN - ( ( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( ( ( MUM * MUC ) * MUC ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.7592592592592593, "obj2": 0.10571801701587658}, {"determining": "( CRS / ( ( ( Min( Const ,( AMS + Max( Const,FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) - MDR ) )", "choosing": "( ( MUM - RCSe ) - ( CS - Min( ( ( MUR / MUC ) / ( RRSe + ( ( Max( MLU,RRSe ) * Max( MUC,MUR ) ) + ( ( CS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9481481481481482, "obj2": 0.021004530016811605}, {"determining": "Min( ( ( FirstVNF_RAM - Max( ( ( MDR - AMS ) - ( ( CRS * ( CRS * MDR ) ) + RRS ) ),( Const + ( ( MDR + MDR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( PN * ACS ) ) ,( ( FirstVNF_CPU / Min( PN ,( FirstVNF_Mem - MDR ) ) ) - MDR ) )", "choosing": "Min( Max( Min( RCSe ,( CS + ( MLU + ( MUR / Min( MLU ,( RMSe * MUM ) ) ) ) ) ),( RMSe + CS ) ) ,( MUM - MLU ) )", "obj1": 0.6388888888888888, "obj2": 0.2099861666096408}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( ( Max( PN,PN ) - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS + MUR ) / Max( Max( ( DS - ( CS - RCSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.41102461796275086}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( Max( Min( FirstVNF_CPU_Server ,ARS ),( ACS / BR ) ) / BR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - DDR ) ) ,( CRS * FirstVNF_Mem_Server ) ) ) + Max( DDR,CRS ) ) ,Max( Const,FirstVNF_CPU ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.018485671029165245}, {"determining": "( Min( ( ( ACS + CRS ) - PN ) ,( MRS * ( MRS + AMS ) ) ) / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( RMSe / MLU ) + Min( RMSe ,RMSe ) ) ) + ( Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) / ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUR / MUC ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02746675416750483}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5740740740740741, "obj2": 0.25021895992021603}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * ( PN - Const ) ) - ( ( ( ARS / ( DDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,Max( FirstVNF_Mem,Min( DDR ,( FirstVNF_RAM / MRS ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,( ( Min( ( MLU - MUM ) ,( DS + MLU ) ) * MUR ) - RCSe ) ) / Min( RCSe ,( ( ( ( MUM - CS ) / DS ) / RCSe ) + MUM ) ) ) - MUC ) ,CS )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08299208254034236}, {"determining": "Min( Min( MRS ,Min( ( ( Max( ( ( CRS - CRS ) - ( FirstVNF_Mem_Server * Const ) ),DDR ) + PN ) - MDR ) ,PN ) ) ,( Max( RRS,Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( RCSe + ( Max( RRSe,RRSe ) * RCSe ) ),MLU ) ) ,( RCSe - RMSe ) )", "obj1": 0.12777777777777777, "obj2": 0.774654923591313}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.17952528921706093}, {"determining": "( ( ( ( ACS - CRS ) - ( ( DDR - ARS ) * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) + MRS ) ) ) )", "choosing": "( ( ( MLU - ( MUC + MUM ) ) - ( RMSe + Min( DS ,MUC ) ) ) - Min( Max( ( RMSe - MUM ),MLU ) ,MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5259259259259259, "obj2": 0.2968217679057645}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.6537037037037037, "obj2": 0.1943150611115035}, {"determining": "Min( ( PN - Min( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_Mem_Server * RRS ) * FirstVNF_CPU_Server ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ,MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * DS ) - ( ( MUC + ( ( MUC * MLU ) * MUM ) ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.6037037037037037, "obj2": 0.236224913620746}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( CRS,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - RRSe ) / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6722222222222223, "obj2": 0.186117460671903}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( ( ( FirstVNF_CPU * MRS ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM - FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),( CS + MUM ) ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( ( MUM - ( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17407407407407408, "obj2": 0.715078263717545}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( Min( CS ,RCSe ) * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( MUR * RRSe ),RMSe ),( ( ( MUC / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.27990027139421814}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,Max( Min( Const ,( FirstVNF_RAM - ( Max( PN,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) ) )", "choosing": "( Min( Min( ( RCSe - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + MUC ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - Max( CS,DS ) ) * Max( ( MLU + RRSe ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.32037037037037036, "obj2": 0.5191839941727211}, {"determining": "( CRS / ( ( ( Max( FirstVNF_RAM_Server,ACS ) + Min( PN ,( FirstVNF_Mem - MDR ) ) ) - DDR ) - MDR ) )", "choosing": "( ( CS + Max( MLU,( MUM / ( RMSe + Min( MUC ,( MUM / MUC ) ) ) ) ) ) * ( RMSe * MUM ) )", "obj1": 0.9462962962962963, "obj2": 0.027019804531499166}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( PN + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6673429211643264}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( RRS - RRS ) / Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + RMSe ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7600082430964114}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( ( ( MUM - CS ) * MUM ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - Max( RMSe,MUM ) )", "obj1": 0.9796296296296296, "obj2": 0.004582522519326482}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( PN * CRS ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( ARS + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - ( Max( MUR,MUR ) * CS ) ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU * MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8240740740740741, "obj2": 0.0759397318437754}, {"determining": "Min( ( FirstVNF_Mem - ( Min( ( FirstVNF_RAM + ( ( ACS - RRS ) / DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.17592592592592593, "obj2": 0.7125337013487989}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / Min( RRSe ,MUC ) ) ) - DS ) ) - CS ) ,( MUC - RMSe ) )", "obj1": 0.6148148148148148, "obj2": 0.22586878133802973}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5666666666666667, "obj2": 0.26000713973976686}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.42407407407407405, "obj2": 0.39139217726137643}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM / ARS ),DDR ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MLU ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.742748463202056}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( RRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}], "29": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server * ( FirstVNF_Mem / Min( ( FirstVNF_Mem - MDR ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( CS - ( Max( RCSe,RRSe ) + Min( CS ,Max( ( ( RRSe - RRSe ) - ( MUM - RMSe ) ),( Max( RMSe,DS ) / ( CS - MLU ) ) ) ) ) ) - ( ( CS * ( MUR / MLU ) ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,( ( ( ( ( ( PN + ( MDR - FirstVNF_CPU_Server ) ) - FirstVNF_Mem_Server ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( ( Max( MUC,( MUM - MLU ) ) / ( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( RCSe / MUC ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( ( PN * CRS ),FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( ARS + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - ( Max( MUR,MUR ) * CS ) ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU * MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8240740740740741, "obj2": 0.0759397318437754}, {"determining": "( Max( ( ( MDR / Const ) - FirstVNF_Mem ),Const ) / ( ( ( ACS + CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( ( Min( ( MUM / MUR ) ,( MUC * MUM ) ) / Min( ( MUR - RCSe ) ,( RCSe - CS ) ) ),MUC ) / RMSe ) - RCSe ) ) - ( ( RCSe / DS ) - ( DS * RMSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.45102232965911915}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( RMSe ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4160165200603354}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.6537037037037037, "obj2": 0.1943150611115035}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ( RRS - Min( RRS ,AMS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5151046816000743}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.6833333333333333, "obj2": 0.16125329454373752}, {"determining": "( ( ( ( ACS - CRS ) - ( Const * FirstVNF_Mem_Server ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( FirstVNF_RAM_Server ,( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + ( ( ( ( MLU - RRSe ) / Max( RCSe,MLU ) ) / Max( CS,RMSe ) ) / ( DS / CS ) ) ) * DS ) ) + ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6525395000660325}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem - Max( MDR,Const ) ) - ( ( MRS + CRS ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( BR - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( DS * ( MUC + MUM ) ) + ( ( Min( ( ( MUC - CS ) - ( ( MUR * RRSe ) - MUM ) ) ,( ( MUC * ( CS * ( MUR * MUM ) ) ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( RMSe,( MLU + MUC ) ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3077845704378352}, {"determining": "Min( ( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.29259259259259257, "obj2": 0.5650270069852571}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( ( MUR / MUC ) - ( RMSe + MUM ) )", "obj1": 0.7111111111111111, "obj2": 0.13478643031989535}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "( ( ( ( Max( RRS,Const ) - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_CPU - MDR ) )", "choosing": "( ( ( RCSe - MUM ) + MUM ) - ( ( MLU / ( RCSe * ( RRSe + Min( ( DS + ( MUM * RCSe ) ) ,MUM ) ) ) ) - ( DS * RMSe ) ) )", "obj1": 0.3611111111111111, "obj2": 0.48133203362244237}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "Min( ( Min( Min( PN ,CRS ) ,FirstVNF_CPU ) - ( Min( ( ( ( ( RRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) + PN ) ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe / RMSe ) ,( CS / Min( RRSe ,( MUM * RMSe ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.2913617622135136}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "( ( ( ( ACS - CRS ) - Max( Const,DDR ) ) - ( ( DDR + AMS ) * MRS ) ) / ( MDR - FirstVNF_Mem ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( MUM + ( Max( Min( MUC ,( RMSe / ( ( MUR - RRSe ) + Min( DS ,CS ) ) ) ),DS ) - CS ) ) )", "obj1": 0.3907407407407407, "obj2": 0.4698245798808626}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,Min( ( Max( RCSe,( CS + ( MUC - RMSe ) ) ) - DS ) ,( RCSe - MUM ) ) )", "obj1": 0.5851851851851851, "obj2": 0.24181834258012758}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN + Max( ( FirstVNF_CPU + BR ),PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,Max( Min( MUM ,MUM ),( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + ( RCSe - MLU ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.31851851851851853, "obj2": 0.5212923396758887}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * Min( RRS ,Const ) ) )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( Min( CS ,CS ) * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( Max( ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ),RMSe ),( ( ( MUC / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.55, "obj2": 0.2747435517851016}, {"determining": "Min( ( PN - ( DDR * ACS ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( ( Max( MUM,CS ) - MUC ) + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8981481481481481, "obj2": 0.044546100331250685}, {"determining": "Min( Min( MRS ,Min( ( ( Max( ARS,( ( CRS - ACS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( BR + MDR ) + ( ( ( FirstVNF_CPU_Server / CRS ) - ( ( BR * Max( FirstVNF_RAM,PN ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) ) )", "choosing": "( ( DS - MUM ) - Min( RMSe ,Max( ( MUC * ( DS * MUC ) ),( ( Min( ( DS * ( MUC - RRSe ) ) ,DS ) / ( CS / RCSe ) ) * RRSe ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.4931522680682983}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM / ARS ),DDR ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( ( MUM - MUC ) - ( RMSe + ( ( ( MUC * ( MUC + MUM ) ) + ( ( ( CS + MUC ) / ( RMSe + CS ) ) - Min( ( MUR / MUC ) ,MUR ) ) ) * RRSe ) ) )", "obj1": 0.16111111111111112, "obj2": 0.7374583244614688}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5222222222222223, "obj2": 0.30462630798712076}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( CRS,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - RRSe ) / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.18887880478691493}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.17952528921706093}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( PN + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6673429211643264}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09746776289153765}, {"determining": "Min( ( Max( PN,PN ) - FirstVNF_CPU ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( CRS * ARS ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( CS + MUR ) / Max( Max( ( DS - ( CS - RCSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.4074074074074074, "obj2": 0.41102461796275086}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - Min( ( FirstVNF_RAM + ( ( ACS - RRS ) / DDR ) ) ,FirstVNF_CPU ) ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9537037037037037, "obj2": 0.015805457184754786}, {"determining": "Min( ( ( ( ( ARS * ARS ) + ( ( Const + FirstVNF_Mem_Server ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.7907407407407407, "obj2": 0.09043405534475017}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004582522519326482}, {"determining": "Min( Min( MRS ,Max( ARS,DDR ) ) ,( ( ( Max( FirstVNF_CPU,CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) ) - DDR ) - MDR ),CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ) - CS ) ,CS )", "obj1": 0.4648148148148148, "obj2": 0.35170403228771735}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08299208254034236}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( ( PN * BR ) - MDR ) ,Max( AMS,( Max( ( ( ( PN * CRS ) * Min( ARS ,PN ) ) + FirstVNF_Mem_Server ),AMS ) / DDR ) ) )", "choosing": "Min( ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( MUM + MUM ) * RRSe ) ),Max( Min( RRSe ,RRSe ),( ( RCSe * MUM ) + Max( MLU,RMSe ) ) ) ),( RRSe + ( ( MUC + RRSe ) * ( MLU / CS ) ) ) ) ) ) ,( ( MUC - ( RCSe + ( CS / MLU ) ) ) / ( MUM * RCSe ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "( ( Min( Max( CS,MUC ) ,RRSe ) / ( ( ( Min( ( MUR / MUC ) ,MUR ) / ( ( MUM * Min( MLU ,MUM ) ) * MUC ) ) + RMSe ) * DS ) ) - ( MUM + RMSe ) )", "obj1": 0.8777777777777778, "obj2": 0.05566663522049245}, {"determining": "Min( ( ( ( PN + ( PN * ARS ) ) / ( MDR / AMS ) ) - MDR ) ,PN )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),Max( RRSe,RCSe ) ) - MUR ) * MLU ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU - RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( ( ( RMSe + ( Max( ( RMSe - ( DS - RMSe ) ),( CS * CS ) ) - RMSe ) ) / RCSe ) + RMSe ) )", "obj1": 0.9074074074074074, "obj2": 0.04020453145082231}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem_Server * Const ) ) * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( CS ,( ( Min( ( MUR - ( ( CS + MUM ) * RRSe ) ) ,CS ) * RMSe ) * RRSe ) )", "obj1": 0.6018518518518519, "obj2": 0.23781208774285167}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( ( ( FirstVNF_RAM - Max( ( ( MDR - AMS ) - ( ( CRS * ( CRS * MDR ) ) + RRS ) ),( Const + ( ( MDR + MDR ) / ( FirstVNF_CPU_Server - RRS ) ) ) ) ) * ( PN * ACS ) ) ,( ( FirstVNF_CPU / Min( PN ,( FirstVNF_Mem - MDR ) ) ) - MDR ) )", "choosing": "Min( Max( Min( RCSe ,( CS + ( MLU + ( MUR / Min( MLU ,( RMSe * MUM ) ) ) ) ) ),( RMSe + CS ) ) ,( MUM - MLU ) )", "obj1": 0.6388888888888888, "obj2": 0.2099861666096408}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( ( Max( Max( PN,( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) ),PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RRSe + ( ( Max( MLU,RRSe ) * Max( MUC,MUR ) ) + ( ( MLU - RRSe ) - MUC ) ) ) ) + ( RMSe - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7351851851851852, "obj2": 0.11773680795948321}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem - ( PN + ( MDR - FirstVNF_CPU_Server ) ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * Const ) ) * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ,( ( MUR - Min( ( CS + MUR ) ,RMSe ) ) + ( RCSe - MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( ( MUR * RRSe ) - MUM ) ) ,( Max( MUC,( MUM - MLU ) ) / ( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5, "obj2": 0.31808049008979183}, {"determining": "Min( ( Min( ( FirstVNF_CPU - Min( BR ,PN ) ) ,FirstVNF_CPU ) - ( ( ( ( ( ( PN - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + ( ARS + CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUR ) ,( Min( ( CS + MUC ) ,Max( DS,( MUM / RMSe ) ) ) - MUM ) ) ) - ( MUC / DS ) ) ,CS )", "obj1": 0.9666666666666667, "obj2": 0.013534314407467218}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * ( PN - Const ) ) - ( ( ( ARS / ( DDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,Max( FirstVNF_Mem,Min( DDR ,( FirstVNF_RAM / MRS ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,( ( Min( ( MLU - MUM ) ,( DS + MLU ) ) * MUR ) - RCSe ) ) / Min( RCSe ,( ( ( ( MUM - CS ) / DS ) / RCSe ) + MUM ) ) ) - MUC ) ,CS )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5740740740740741, "obj2": 0.25021895992021603}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( RRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "( ( ( ( ACS - CRS ) - ( ( DDR - ARS ) * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) + MRS ) ) ) )", "choosing": "( ( ( MLU - ( MUC + MUM ) ) - ( RMSe + Min( DS ,MUC ) ) ) - Min( Max( ( RMSe - MUM ),MLU ) ,MUM ) )", "obj1": 0.37592592592592594, "obj2": 0.4807479092156894}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5259259259259259, "obj2": 0.2968217679057645}, {"determining": "Min( ( PN - Min( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_Mem_Server * RRS ) * FirstVNF_CPU_Server ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ,MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * DS ) - ( ( MUC + ( ( MUC * MLU ) * MUM ) ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.6037037037037037, "obj2": 0.236224913620746}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "Min( ( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3888888888888889, "obj2": 0.4773268958995676}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - RMSe ) ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.5796296296296296, "obj2": 0.2470319866644422}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) - Min( CRS ,RRS ) ) ,( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( RMSe - Min( DS ,( ( RCSe * RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.46296296296296297, "obj2": 0.35514863963386595}, {"determining": "( ( Max( ( ACS + CRS ),PN ) - ( MRS * FirstVNF_Mem ) ) / ( Max( BR,FirstVNF_CPU_Server ) - MDR ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RMSe * Max( CS,DS ) ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.9148148148148149, "obj2": 0.03725095257246434}, {"determining": "( CRS / ( ( ( Max( FirstVNF_RAM_Server,ACS ) + Min( PN ,( FirstVNF_Mem - MDR ) ) ) - DDR ) - MDR ) )", "choosing": "( ( CS + Max( MLU,( MUM / ( RMSe + Min( MUC ,( MUM / MUC ) ) ) ) ) ) * ( RMSe * MUM ) )", "obj1": 0.9462962962962963, "obj2": 0.027019804531499166}, {"determining": "Min( ( PN - ( ( ARS - RRS ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7462962962962963, "obj2": 0.11158612603677538}, {"determining": "( CRS / ( ( ( Min( Const ,( AMS + Max( Const,FirstVNF_CPU ) ) ) - FirstVNF_Mem_Server ) + FirstVNF_Mem ) - MDR ) )", "choosing": "( ( MUM - RCSe ) - ( CS - Min( ( ( MUR / MUC ) / ( RRSe + ( ( Max( MLU,RRSe ) * Max( MUC,MUR ) ) + ( ( CS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9481481481481482, "obj2": 0.021004530016811605}, {"determining": "Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - RCSe ) * ( Max( ( DS / CS ),MUM ) - MLU ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( ( Max( RRSe,RRSe ) * Max( MUR,DS ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + ( RRSe + MLU ) ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12034960673179557}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3425925925925926, "obj2": 0.4868092535551668}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_Mem - MDR ) ,Min( PN ,FirstVNF_CPU_Server ) ) ) - DDR ) - MDR ),CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( CS - CS ) - DS ) ) ) ) - CS ) ,CS )", "obj1": 0.45555555555555555, "obj2": 0.3617965695132828}, {"determining": "Min( ( PN - ( Min( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( CRS - MDR ) ) ,( CRS * ARS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,Min( MUC ,DS ) ) ,( ( MUM + CS ) + ( Max( ( ( DS - RRSe ) - MUM ),( CS / RCSe ) ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5592592592592592, "obj2": 0.26398405776135153}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / Min( RRSe ,MUC ) ) ) - DS ) ) - CS ) ,( MUC - RMSe ) )", "obj1": 0.6148148148148148, "obj2": 0.22586878133802973}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.5685185185185185, "obj2": 0.2571034568427658}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem - Max( MDR,Const ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * Const ) ) * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( Max( MUC,( MUM - MLU ) ) / ( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) ,( RCSe / MUC ) )", "obj1": 0.4962962962962963, "obj2": 0.31998742595371343}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( ( Max( RRSe,RRSe ) * Max( DS,MUR ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12034960673179557}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM / ARS ),DDR ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MLU ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.742748463202056}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( CRS,DDR ) + ( MDR + Const ) ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - RRSe ) / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6722222222222223, "obj2": 0.186117460671903}, {"determining": "Min( ( FirstVNF_Mem - ( ( ARS - RRS ) * MDR ) ) ,( ( ( Min( MDR ,BR ) - FirstVNF_CPU ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7462962962962963, "obj2": 0.11158612603677538}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( MUR / MUC ) / ( RRSe + ( MUR + ( ( MLU - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6277777777777778, "obj2": 0.21634992286567586}, {"determining": "Min( ( PN - ( ( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( ( ( MUM * MUC ) * MUC ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.7592592592592593, "obj2": 0.10571801701587658}, {"determining": "Min( ( ( ( ( CRS * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8851851851851852, "obj2": 0.04999126735579444}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Max( ( RRSe / ( Min( DS ,Max( ( CS + MUR ),( MUM * MLU ) ) ) + RRSe ) ),MUC ) - Min( RMSe ,Max( ( ( MUM * MUC ) * MUC ),( ( ( CS / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.40185185185185185, "obj2": 0.41350790073404686}], "30": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Max( ( ACS * FirstVNF_Mem ),Const ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( MUC,MUR ) / RMSe ) - RCSe ) ) - ( ( Min( RCSe ,Min( Max( RMSe,RCSe ) ,MUC ) ) / DS ) - ( DS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server * ( FirstVNF_Mem / Min( ( FirstVNF_Mem - MDR ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_CPU,FirstVNF_Mem_Server ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( CS - ( Max( RCSe,RRSe ) + Min( CS ,Max( ( ( RRSe - RRSe ) - ( MUM - RMSe ) ),( Max( RMSe,DS ) / ( CS - MLU ) ) ) ) ) ) - ( ( CS * ( MUR / MLU ) ) + CS ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Max( ( ( MDR / Const ) - FirstVNF_Mem ),Const ) / ( ( ( ACS + CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( ( Min( ( MUM / MUR ) ,( MUC * MUM ) ) / Min( ( MUR - RCSe ) ,( RCSe - CS ) ) ),MUC ) / RMSe ) - RCSe ) ) - ( ( RCSe / DS ) - ( DS * RMSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.45102232965911915}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ) - CS ) ,CS )", "obj1": 0.3962962962962963, "obj2": 0.4159661038715367}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ( RRS - Min( RRS ,AMS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5151046816000743}, {"determining": "( ( ( ( Max( RRS,Const ) - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_CPU - MDR ) )", "choosing": "( ( ( RCSe - MUM ) + MUM ) - ( ( MLU / ( RCSe * ( RRSe + Min( ( DS + ( MUM * RCSe ) ) ,MUM ) ) ) ) - ( DS * RMSe ) ) )", "obj1": 0.3611111111111111, "obj2": 0.48133203362244237}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( Min( MRS ,Min( ( ( Max( ARS,( ( CRS - ACS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( BR + MDR ) + ( ( ( FirstVNF_CPU_Server / CRS ) - ( ( BR * Max( FirstVNF_RAM,PN ) ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) ) )", "choosing": "( ( DS - MUM ) - Min( RMSe ,Max( ( MUC * ( DS * MUC ) ),( ( Min( ( DS * ( MUC - RRSe ) ) ,DS ) / ( CS / RCSe ) ) * RRSe ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.4931522680682983}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "( ( ( ( ACS - CRS ) - Max( Const,DDR ) ) - ( ( DDR + AMS ) * MRS ) ) / ( MDR - FirstVNF_Mem ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( MUM + ( Max( Min( MUC ,( RMSe / ( ( MUR - RRSe ) + Min( DS ,CS ) ) ) ),DS ) - CS ) ) )", "obj1": 0.3907407407407407, "obj2": 0.4698245798808626}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( ( MUR / MUC ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.37222222222222223, "obj2": 0.4718282962051216}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.9333333333333333, "obj2": 0.02730188091420419}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM_Server ,Min( ( ( FirstVNF_RAM_Server - MDR ) - BR ) ,( ( PN * MDR ) / Min( BR ,PN ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) / PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - RCSe ) * ( Max( ( DS / CS ),MUM ) - MLU ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUM + Max( ( MUM * ( RRSe * DS ) ),( ( RRSe - DS ) - MUC ) ) ) ) ,( RRSe + ( RRSe + MLU ) ) ) ) )", "obj1": 0.5981481481481481, "obj2": 0.2324579593115351}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6148148148148148, "obj2": 0.21351236378627164}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6833333333333333, "obj2": 0.16125329454373752}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( FirstVNF_RAM_Server / ( Max( ARS,CRS ) / ( CRS + PN ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( ( RRSe + MUM ) + RMSe ) * DS ) ) + ( RRSe * ( ( ( RRSe - DS ) - MUR ) / Max( Max( ( DS - ( ( CS + MUM ) * RRSe ) ),RCSe ),( ( ( MUC + RRSe ) * ( MLU * CS ) ) + RRSe ) ) ) ) )", "obj1": 0.2222222222222222, "obj2": 0.6507989220339967}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * ( PN - Const ) ) - ( ( ( ARS / ( DDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,Max( FirstVNF_Mem,Min( DDR ,( FirstVNF_RAM / MRS ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,( ( Min( ( MLU - MUM ) ,( DS + MLU ) ) * MUR ) - RCSe ) ) / Min( RCSe ,( ( ( ( MUM - CS ) / DS ) / RCSe ) + MUM ) ) ) - MUC ) ,CS )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( ( MUR / MUC ) - ( RMSe + MUM ) )", "obj1": 0.7111111111111111, "obj2": 0.13478643031989535}, {"determining": "Min( Max( PN,MRS ) ,MRS )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUC ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( RMSe * RCSe ) - ( CS - CS ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( CS - MUR ) / ( Min( Min( RRSe ,RCSe ) ,RMSe ) / RCSe ) ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( ( CS / RRSe ) + MLU ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7179576592327912}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "Min( ( Min( Min( PN ,CRS ) ,FirstVNF_CPU ) - ( Min( ( ( ( ( RRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) + PN ) ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe / RMSe ) ,( CS / Min( RRSe ,( MUM * RMSe ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.2913617622135136}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - Min( ( FirstVNF_RAM + ( ( ACS - RRS ) / DDR ) ) ,FirstVNF_CPU ) ) ,( PN - CRS ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.9462962962962963, "obj2": 0.020192920408356147}, {"determining": "Min( ( PN - ( DDR * ACS ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( ( Max( MUM,CS ) - MUC ) + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8981481481481481, "obj2": 0.044546100331250685}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08299208254034236}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( MUR / MUC ) / ( RRSe + ( MUR + ( ( MLU - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.21171964109709232}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( ( FirstVNF_Mem_Server / FirstVNF_RAM_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) / PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( MUM + ( ( MUM + ( ( MUR / MLU ) - Min( RRSe ,RMSe ) ) ) - RRSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( RMSe + Max( Min( RMSe ,RCSe ),RCSe ) ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8333333333333334, "obj2": 0.07218298351741377}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7888888888888889, "obj2": 0.08916137738839743}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),Max( RRSe,RCSe ) ) - MUR ) * MLU ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU - RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( ( ( RMSe + ( Max( ( RMSe - ( DS - RMSe ) ),( CS * CS ) ) - RMSe ) ) / RCSe ) + RMSe ) )", "obj1": 0.8518518518518519, "obj2": 0.06385584646181927}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.6537037037037037, "obj2": 0.1943150611115035}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( Max( RRS,Max( FirstVNF_CPU_Server,( ( ( FirstVNF_Mem_Server + ARS ) * FirstVNF_RAM_Server ) / FirstVNF_CPU ) ) ) ,PN )", "choosing": "( ( Min( ( RMSe * RMSe ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) * ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9203703703703704, "obj2": 0.033665332512078}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ARS * ACS ) / ( PN + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6673429211643264}, {"determining": "Min( ( ( Max( PN,( RRS - ( BR * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ( FirstVNF_CPU_Server * CRS ) ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( MUM - RCSe ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUR / RRSe ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RCSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7981481481481482, "obj2": 0.08834083596991343}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( RRS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( ( ( MUM + CS ) + ( DS * RCSe ) ) - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( ( Max( RRSe,RRSe ) * Max( DS,MUR ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7759259259259259, "obj2": 0.09721672159535394}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5222222222222223, "obj2": 0.30462630798712076}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( Min( MRS ,Min( ( ( Max( ( ( CRS - CRS ) - ( FirstVNF_Mem_Server * Const ) ),DDR ) + PN ) - MDR ) ,PN ) ) ,( Max( RRS,Const ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( ( Max( RRSe,RRSe ) * Max( DS,MUR ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.13333333333333333, "obj2": 0.7664596367930948}, {"determining": "Min( ( MDR / ( Min( ( Min( FirstVNF_RAM ,PN ) - MDR ) ,PN ) + FirstVNF_RAM ) ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / RMSe ) - MLU ) * MUM ) ,( ( RMSe * Min( ( MUR - ( ( CS + RMSe ) * RRSe ) ) ,CS ) ) * RRSe ) )", "obj1": 0.14074074074074075, "obj2": 0.7607124888906999}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.45555555555555555, "obj2": 0.35941267557743267}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.31666666666666665, "obj2": 0.525599690364469}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + RMSe )", "obj1": 0.8462962962962963, "obj2": 0.0665238920388835}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "( ( ( FirstVNF_Mem - CRS ) / RRS ) - ( Min( FirstVNF_Mem_Server ,MRS ) + ( ( ARS + ( ( ( ( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) - AMS ) / FirstVNF_Mem_Server ) - PN ) ) * Max( ( BR * ( BR / FirstVNF_RAM ) ),FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( DS - ( MUR + Min( Max( ( RCSe + MLU ),MUR ) ,Max( ( MLU - MUM ),( MLU / RRSe ) ) ) ) ) + ( MUR / ( RCSe - ( RCSe + MUM ) ) ) ) - CS ) ,( MUM - Min( ( CS + ( MUC + RMSe ) ) ,( RCSe * MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.2018508860622754}, {"determining": "Min( ( ( Max( ( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ),PN ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - Min( ( FirstVNF_RAM + Min( ARS ,( MRS - PN ) ) ) ,FirstVNF_CPU ) ) ,( PN - CRS ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) - ( ( MUM / MLU ) + Min( MUM ,RMSe ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.012715741549917172}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( Min( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) ,Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( FirstVNF_CPU_Server * DDR ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( MLU ,MUR ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.4166666666666667, "obj2": 0.39476312164650695}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.17952528921706093}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3425925925925926, "obj2": 0.4868092535551668}, {"determining": "Min( ( ( ( ( PN * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "( ( Min( Max( CS,MUC ) ,RRSe ) / ( ( ( Min( ( MUR / MUC ) ,MUR ) / ( ( MUM * Min( MLU ,MUM ) ) * MUC ) ) + RMSe ) * DS ) ) - ( MUM + RMSe ) )", "obj1": 0.8777777777777778, "obj2": 0.05566663522049245}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( ( MUR / MUC ) - ( RMSe + MUM ) )", "obj1": 0.7111111111111111, "obj2": 0.13478643031989535}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5407407407407407, "obj2": 0.28023080771766035}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem - Max( MDR,Const ) ) - ( ( MRS + CRS ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( BR - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( DS * ( MUC + MUM ) ) + ( ( Min( ( ( MUC - CS ) - ( ( MUR * RRSe ) - MUM ) ) ,( ( MUC * ( CS * ( MUR * MUM ) ) ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( RMSe,( MLU + MUC ) ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3077845704378352}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004582522519326482}, {"determining": "Min( ( CRS - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( CS / MUM ) - Min( MUC ,CS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.587037037037037, "obj2": 0.24144593718719567}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM / ARS ),DDR ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7350630650096088}, {"determining": "Min( ( ( FirstVNF_RAM / Max( ( FirstVNF_RAM_Server - PN ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - ( RMSe * DS ) ) / MUM ) ) - DS ) ) - CS ) ,( RCSe - ( MUC * Min( ( Min( ( Max( RCSe,MUM ) - CS ) ,MUM ) + RRSe ) ,MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.19175748716776764}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( BR - FirstVNF_CPU_Server ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5259259259259259, "obj2": 0.2968217679057645}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( ( Max( RRSe,RRSe ) * Max( DS,MUR ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12034960673179557}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( RRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.5685185185185185, "obj2": 0.2571034568427658}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( PN ,( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) + Min( ( FirstVNF_Mem_Server - ( MRS - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( Max( ( MUC * Min( ( Min( ( MLU + MUM ) ,MUR ) / MLU ) ,CS ) ),MLU ) - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM - RRSe ) ) ) ) ) )", "obj1": 0.4685185185185185, "obj2": 0.35160176812236243}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem - Max( MDR,Const ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * Const ) ) * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - RMSe ) ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.5074074074074074, "obj2": 0.3126921246524986}, {"determining": "Min( Max( FirstVNF_RAM_Server,( FirstVNF_CPU_Server * BR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server + ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - RCSe ) * ( Max( ( DS / CS ),MUM ) - MLU ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( ( Max( RRSe,RRSe ) * Max( MUR,DS ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + ( RRSe + MLU ) ) ) ) )", "obj1": 0.7277777777777777, "obj2": 0.12034960673179557}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - RRSe ) / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6388888888888888, "obj2": 0.2056937258056554}, {"determining": "Min( ( ( ( PN + ( PN * ARS ) ) / ( MDR / AMS ) ) - MDR ) ,PN )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),Max( RRSe,RCSe ) ) - MUR ) * MLU ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU - RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( ( ( RMSe + ( Max( ( RMSe - ( DS - RMSe ) ),( CS * CS ) ) - RMSe ) ) / RCSe ) + RMSe ) )", "obj1": 0.9074074074074074, "obj2": 0.04020453145082231}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10938030013023263}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( Max( Max( MUC,MUM ),RCSe ) ,Max( CS,MUC ) ) - MUM ) ) ) - ( RRSe / ( RRSe * ( RCSe * MUM ) ) ) ) ,CS )", "obj1": 0.21481481481481482, "obj2": 0.6705702281495054}, {"determining": "Min( ( ( ( ( CRS * ARS ) + ( Max( PN,PN ) + PN ) ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8851851851851852, "obj2": 0.04999126735579444}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_RAM_Server + RRS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - MDR ) ) ,PN )", "choosing": "Min( ( ( DS + MUC ) / ( ( ( Min( RRSe ,( RMSe * ( MUR + DS ) ) ) + Min( RCSe ,Min( Min( RMSe ,DS ) ,( MLU - RCSe ) ) ) ) - MUR ) * CS ) ) ,Min( ( DS - ( Max( ( ( ( RRSe * MUR ) / RMSe ) - ( ( RCSe / MUC ) * DS ) ),Min( MUM ,CS ) ) * ( MUC - MLU ) ) ) ,( RCSe - MUM ) ) )", "obj1": 0.55, "obj2": 0.2735186767677442}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( PN,DDR ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.29259259259259257, "obj2": 0.5650270069852571}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( ( ARS - FirstVNF_Mem_Server ) - Min( CRS ,RRS ) ) ,( ( FirstVNF_Mem_Server * ( FirstVNF_Mem * ( FirstVNF_RAM_Server + CRS ) ) ) - BR ) )", "choosing": "Min( ( ( ( DS - RRSe ) + ( RMSe - Min( DS ,( ( RCSe * RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RMSe - RCSe ) )", "obj1": 0.46296296296296297, "obj2": 0.35514863963386595}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM / ARS ),DDR ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MLU ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.742748463202056}, {"determining": "Min( ( ( PN * BR ) - MDR ) ,Max( AMS,( Max( ( ( ( PN * CRS ) * Min( ARS ,PN ) ) + FirstVNF_Mem_Server ),AMS ) / DDR ) ) )", "choosing": "Min( ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( MUM + MUM ) * RRSe ) ),Max( Min( RRSe ,RRSe ),( ( RCSe * MUM ) + Max( MLU,RMSe ) ) ) ),( RRSe + ( ( MUC + RRSe ) * ( MLU / CS ) ) ) ) ) ) ,( ( MUC - ( RCSe + ( CS / MLU ) ) ) / ( MUM * RCSe ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "Min( ( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) ,PN )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.29259259259259257, "obj2": 0.5650270069852571}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,RRS ) + PN ) - ( FirstVNF_RAM - ( BR + FirstVNF_RAM ) ) ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( CRS * PN ) ,( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( Max( Min( MUR ,CS ),CS ) * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( ( RMSe + MUM ) / Max( ( Max( RRSe,RRSe ) * Max( DS,MUR ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7333333333333333, "obj2": 0.11707709696122227}], "31": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ACS * FirstVNF_Mem ),Const ) / ( ( ( Max( FirstVNF_RAM,FirstVNF_CPU ) - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( MUC,MUR ) / RMSe ) - RCSe ) ) - ( ( Min( RCSe ,Min( Max( RMSe,RCSe ) ,MUC ) ) / DS ) - ( DS - RMSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Max( ( ( MDR / Const ) - FirstVNF_Mem ),Const ) / ( ( ( ACS + CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( ( Min( ( MUM / MUR ) ,( MUC * MUM ) ) / Min( ( MUR - RCSe ) ,( RCSe - CS ) ) ),MUC ) / RMSe ) - RCSe ) ) - ( ( RCSe / DS ) - ( DS * RMSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.45102232965911915}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ( RRS - Min( RRS ,AMS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5151046816000743}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6833333333333333, "obj2": 0.16125329454373752}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "( ( ( ( Max( RRS,Const ) - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / ( FirstVNF_CPU - MDR ) )", "choosing": "( ( ( RCSe - MUM ) + MUM ) - ( ( MLU / ( RCSe * ( RRSe + Min( ( DS + ( MUM * RCSe ) ) ,MUM ) ) ) ) - ( DS * RMSe ) ) )", "obj1": 0.3611111111111111, "obj2": 0.48133203362244237}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ) - CS ) ,CS )", "obj1": 0.3962962962962963, "obj2": 0.4159661038715367}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.4930445913926594}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( ( MUR / MUC ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.37222222222222223, "obj2": 0.4718282962051216}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "( ( ( ( ACS - CRS ) - Max( Const,DDR ) ) - ( ( DDR + AMS ) * MRS ) ) / ( MDR - FirstVNF_Mem ) )", "choosing": "( ( ( MLU - ( MUC * MUM ) ) - ( DS * RMSe ) ) - ( MUM + ( Max( Min( MUC ,( RMSe / ( ( MUR - RRSe ) + Min( DS ,CS ) ) ) ),DS ) - CS ) ) )", "obj1": 0.3907407407407407, "obj2": 0.4698245798808626}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( Max( BR,Const ) / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,Min( DS ,( Max( RMSe,MLU ) * MLU ) ) )", "obj1": 0.5592592592592592, "obj2": 0.26217859405266125}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8777777777777778, "obj2": 0.04805616102371889}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "( ( Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) * ( PN - Const ) ) - ( ( ( ARS / ( DDR - PN ) ) * FirstVNF_CPU ) + ( FirstVNF_Mem / Min( ( PN - Max( PN,DDR ) ) ,Max( FirstVNF_Mem,Min( DDR ,( FirstVNF_RAM / MRS ) ) ) ) ) ) )", "choosing": "Min( ( ( Min( RMSe ,( ( Min( ( MLU - MUM ) ,( DS + MLU ) ) * MUR ) - RCSe ) ) / Min( RCSe ,( ( ( ( MUM - CS ) / DS ) / RCSe ) + MUM ) ) ) - MUC ) ,CS )", "obj1": 0.6111111111111112, "obj2": 0.2268687753181251}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.17952528921706093}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * FirstVNF_Mem_Server ) ) * MDR ) ) ) )", "choosing": "( Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) - ( RMSe + MUM ) )", "obj1": 0.7148148148148148, "obj2": 0.13243954121862664}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( Max( FirstVNF_Mem,DDR ) + MRS ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / MUM ) ) - DS ) ) - CS ) ,( ( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MUC + MLU ),RMSe ) ) - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.1885904551985781}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( Min( Min( PN ,CRS ) ,FirstVNF_CPU ) - ( Min( ( ( ( ( RRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / ( ( FirstVNF_Mem - AMS ) + PN ) ) + FirstVNF_RAM_Server ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( RCSe / RMSe ) ,( CS / Min( RRSe ,( MUM * RMSe ) ) ) )", "obj1": 0.5388888888888889, "obj2": 0.2913617622135136}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem - Max( MDR,Const ) ) - ( ( ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * Const ) ) * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5037037037037037, "obj2": 0.31622095542407935}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( ( ( ( PN + ( PN * ARS ) ) / ( MDR / AMS ) ) - MDR ) ,PN )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),Max( RRSe,RCSe ) ) - MUR ) * MLU ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU - RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( ( ( RMSe + ( Max( ( RMSe - ( DS - RMSe ) ),( CS * CS ) ) - RMSe ) ) / RCSe ) + RMSe ) )", "obj1": 0.9074074074074074, "obj2": 0.04020453145082231}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.5685185185185185, "obj2": 0.2571034568427658}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM_Server ,Min( ( ( FirstVNF_RAM_Server - MDR ) - BR ) ,( ( PN * MDR ) / Min( BR ,PN ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) / PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - RCSe ) * ( Max( ( DS / CS ),MUM ) - MLU ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUM + Max( ( MUM * ( RRSe * DS ) ),( ( RRSe - DS ) - MUC ) ) ) ) ,( RRSe + ( RRSe + MLU ) ) ) ) )", "obj1": 0.5981481481481481, "obj2": 0.2324579593115351}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( PN ,( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) + Min( ( FirstVNF_Mem_Server - ( MRS - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( Max( ( MUC * Min( ( Min( ( MLU + MUM ) ,MUR ) / MLU ) ,CS ) ),MLU ) - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM - RRSe ) ) ) ) ) )", "obj1": 0.4685185185185185, "obj2": 0.35160176812236243}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3425925925925926, "obj2": 0.4868092535551668}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU / RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.45555555555555555, "obj2": 0.35941267557743267}, {"determining": "Min( ( CRS - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( CS / MUM ) - Min( MUC ,CS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.587037037037037, "obj2": 0.24144593718719567}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( Max( ( ( ( Max( RRS,Const ) - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ),( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( MLU / ( RCSe * ( RRSe + Min( ( DS + ( MUM * RCSe ) ) ,MUM ) ) ) ) - ( DS * RMSe ) ) )", "obj1": 0.8925925925925926, "obj2": 0.047482614585413654}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08299208254034236}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004582522519326482}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8611111111111112, "obj2": 0.0632848815393453}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( ( DS - MUM ) - Min( RMSe ,Max( ( MUC * ( DS * MUC ) ),( ( ( CS / RCSe ) / Min( ( DS * MUR ) ,DS ) ) * RMSe ) ) ) )", "obj1": 0.9740740740740741, "obj2": 0.010839382325592674}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ACS ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - ( MUC * MUM ) ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.4185185185185185, "obj2": 0.39406812992161566}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_CPU ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,Max( RMSe,CS ) ) ,( ( ( MUR - MLU ) * CS ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.575925925925926, "obj2": 0.25291376879085303}, {"determining": "( ( BR / ( MRS * FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_Mem_Server,DDR ) ) ,( RRS + ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) * DS ) / MUR ) - ( RMSe + MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6554381189185627}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM / ARS ),DDR ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7350630650096088}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_RAM_Server + RRS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - MDR ) ) ,PN )", "choosing": "Min( ( ( DS + MUC ) / ( ( ( Min( RRSe ,( RMSe * ( MUR + DS ) ) ) + Min( RCSe ,Min( Min( RMSe ,DS ) ,( MLU - RCSe ) ) ) ) - MUR ) * CS ) ) ,Min( ( DS - ( Max( ( ( ( RRSe * MUR ) / RMSe ) - ( ( RCSe / MUC ) * DS ) ),Min( MUM ,CS ) ) * ( MUC - MLU ) ) ) ,( RCSe - MUM ) ) )", "obj1": 0.55, "obj2": 0.2735186767677442}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( DDR - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * ARS ) ) * MDR ) ) ) )", "choosing": "( ( MUR / MUC ) - ( RMSe + ( ( CS + MUM ) * RRSe ) ) )", "obj1": 0.7111111111111111, "obj2": 0.13478643031989535}, {"determining": "Min( Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem - Max( MDR,Const ) ) - ( ( MRS + CRS ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( BR - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( DS * ( MUC + MUM ) ) + ( ( Min( ( ( MUC - CS ) - ( ( MUR * RRSe ) - MUM ) ) ,( ( MUC * ( CS * ( MUR * MUM ) ) ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( RMSe - MUM ) * MUM ) ) * Max( RMSe,( MLU + MUC ) ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3077845704378352}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5407407407407407, "obj2": 0.28023080771766035}, {"determining": "Min( Min( Min( ( ( Max( PN,( ( Const - FirstVNF_CPU ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) * MDR ) ,PN ) ,( ( AMS - DDR ) - MDR ) ) ,( ( FirstVNF_Mem + FirstVNF_CPU_Server ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( MUR * ( Min( MUR ,CS ) * ( MLU / MLU ) ) ) ) ) ,( Max( ( ( Max( MLU,DS ) + RRSe ) * ( Min( MUM ,DS ) - RMSe ) ),MUM ) + ( RCSe - ( MUM / RRSe ) ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( MUR / MUC ) / ( RRSe + ( MUR + ( ( MLU - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.21171964109709232}, {"determining": "Min( Min( MRS ,Min( ( ( Max( ( FirstVNF_RAM_Server + ( AMS - MDR ) ),PN ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( ( MUR / ( ( ( MLU / RRSe ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3148148148148148, "obj2": 0.5265358897616313}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( RRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( RMSe - Min( DS ,( Min( MUM ,( DS * MLU ) ) / ( MUR * Max( RCSe,CS ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5962962962962963, "obj2": 0.2374562530297385}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( FirstVNF_RAM * ACS ) / ( FirstVNF_Mem + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,( CS * RMSe ) ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS - RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6823349170126576}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6148148148148148, "obj2": 0.21351236378627164}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - RMSe ) ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.8037037037037037, "obj2": 0.08498263100191622}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( AMS * ( Const - RRS ) ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( ( RRSe / ( ( RRSe * MUR ) - MLU ) ) - ( MUM + RMSe ) ) - Min( ( MUR + CS ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Max( CS,RMSe ) ) ) + RMSe )", "obj1": 0.8277777777777777, "obj2": 0.07523419855719513}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( CRS / FirstVNF_CPU ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,BR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( Min( CS ,RMSe ) + ( MUM / MLU ) ) ) + Max( CS,( MUM - MUR ) ) )", "obj1": 0.762962962962963, "obj2": 0.10305548932169949}, {"determining": "Min( Min( MRS ,Min( PN ,( ( Max( ARS,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ) ) ,( ( BR + MDR ) + ( ( ( FirstVNF_Mem * BR ) - ( ( BR * MRS ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( ( ( Min( CS ,Max( ( MUR - ( RMSe - MUR ) ),RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + MUR ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7694430099984255}, {"determining": "Min( Max( PN,MRS ) ,MRS )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUC ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( RMSe * RCSe ) - ( CS - CS ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( CS - MUR ) / ( Min( Min( RRSe ,RCSe ) ,RMSe ) / RCSe ) ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( ( CS / RRSe ) + MLU ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7179576592327912}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - Min( ( FirstVNF_RAM + ( ( ACS - RRS ) / DDR ) ) ,FirstVNF_CPU ) ) ,( PN - CRS ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.9518518518518518, "obj2": 0.016590018389576185}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,( FirstVNF_RAM_Server * RRS ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ) - ( MUR / MLU ) ) ,CS )", "obj1": 0.39814814814814814, "obj2": 0.41557619999065887}, {"determining": "Min( ( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) ,( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5586025219862693}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "Min( ( ( Max( PN,Min( FirstVNF_RAM ,PN ) ) + ( CRS - ( ( PN * ( ARS + ARS ) ) + PN ) ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( ( ( MUC / RMSe ) - MLU ) * MLU ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ,( Min( CS ,RCSe ) - Max( DS,MUC ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7962962962962963, "obj2": 0.08817512995288378}, {"determining": "Min( ( ( AMS - DDR ) - MDR ) ,( ( Min( ( ( ARS * AMS ) - MDR ) ,PN ) / FirstVNF_CPU ) - MDR ) )", "choosing": "( ( ( RMSe - MUM ) * ( DS * RMSe ) ) - ( CS - ( ( MUC / DS ) + ( RRSe / MUM ) ) ) )", "obj1": 0.6481481481481481, "obj2": 0.2005413075888743}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.7703703703703704, "obj2": 0.09878739232892758}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - Min( ( MUR - ( DS - RMSe ) ) ,MLU ) ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( ( Max( RRSe,RRSe ) * Max( DS,MUR ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.11376636309801581}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( RRS - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * Max( RCSe,( CS + ( MUC - RMSe ) ) ) ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5277777777777778, "obj2": 0.29641568287280734}, {"determining": "Min( ( ( FirstVNF_RAM / Max( ( FirstVNF_RAM_Server - PN ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - ( RMSe * DS ) ) / MUM ) ) - DS ) ) - CS ) ,( RCSe - ( MUC * Min( ( Min( ( Max( RCSe,MUM ) - CS ) ,MUM ) + RRSe ) ,MUR ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.19175748716776764}, {"determining": "Min( ( ( PN * BR ) - MDR ) ,Max( AMS,( Max( ( ( ( PN * CRS ) * Min( ARS ,PN ) ) + FirstVNF_Mem_Server ),AMS ) / DDR ) ) )", "choosing": "Min( ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( MUM + MUM ) * RRSe ) ),Max( Min( RRSe ,RRSe ),( ( RCSe * MUM ) + Max( MLU,RMSe ) ) ) ),( RRSe + ( ( MUC + RRSe ) * ( MLU / CS ) ) ) ) ) ) ,( ( MUC - ( RCSe + ( CS / MLU ) ) ) / ( MUM * RCSe ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6129629629629629, "obj2": 0.21532146345460237}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,CRS ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( Max( FirstVNF_CPU,DDR ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( ( RMSe + MUM ) + Max( ( Max( RRSe,RRSe ) * Max( DS,MUR ) ),( ( RCSe / DS ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7574074074074074, "obj2": 0.10559963557970545}, {"determining": "Min( ( ( Max( ( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ),PN ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - Min( ( FirstVNF_RAM + Min( ARS ,( MRS - PN ) ) ) ,FirstVNF_CPU ) ) ,( PN - CRS ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) - ( ( MUM / MLU ) + Min( MUM ,RMSe ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.012715741549917172}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9407407407407408, "obj2": 0.023784496916376522}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM / ARS ),DDR ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( Max( MUC,Min( Min( ( MUM - RRSe ) ,MLU ) ,MUR ) ) ,( Min( ( MUR / MUC ) ,MUR ) + ( DS * RCSe ) ) ) - RMSe ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.15925925925925927, "obj2": 0.742748463202056}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7518518518518519, "obj2": 0.10938030013023263}, {"determining": "Min( ( Max( Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7606282335664637}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + RMSe )", "obj1": 0.8462962962962963, "obj2": 0.0665238920388835}], "32": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Min( ( MDR - ( ACS / PN ) ) ,( FirstVNF_RAM_Server + FirstVNF_RAM ) ) - ( MRS / PN ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Max( ( ( MDR / Const ) - FirstVNF_Mem ),Const ) / ( ( ( ACS + CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( ( Min( ( MUM / MUR ) ,( MUC * MUM ) ) / Min( ( MUR - RCSe ) ,( RCSe - CS ) ) ),MUC ) / RMSe ) - RCSe ) ) - ( ( RCSe / DS ) - ( DS * RMSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.45102232965911915}, {"determining": "( ( BR / ( MRS * FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_Mem_Server,DDR ) ) ,( RRS + ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) * DS ) / MUR ) - ( RMSe + MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6554381189185627}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ( RRS - Min( RRS ,AMS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5151046816000743}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.4930445913926594}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( PN * ( RRS * Const ) ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.3888888888888889, "obj2": 0.46347536136473666}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( ( MDR / AMS ) + PN ) * ARS ) ) * MDR ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( RRSe * MUM ) - MUC ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6833333333333333, "obj2": 0.16125329454373752}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8833333333333333, "obj2": 0.04340882297443494}, {"determining": "Min( ( PN - ( Min( ( PN * ARS ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( Max( BR,Const ) / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( CS / RCSe ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7021008020142555}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( RRS - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "Min( ( Min( Max( MUC,( MLU / RMSe ) ) ,( ( MUM + CS ) + ( Max( ( DS + Min( MUM ,MUR ) ),( RRSe / RRSe ) ) * Max( RCSe,( CS + ( MUC - RMSe ) ) ) ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5277777777777778, "obj2": 0.29641568287280734}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,Max( MLU,MUM ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7018518518518518, "obj2": 0.1511930107468688}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) - ( ( MUM / MLU ) + Min( MUM ,RMSe ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.1964634693714259}, {"determining": "Min( Max( PN,MRS ) ,MRS )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUC ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( RMSe * RCSe ) - ( CS - CS ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( CS - MUR ) / ( Min( Min( RRSe ,RCSe ) ,RMSe ) / RCSe ) ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - RRSe ) * MUM ) ) * Max( ( ( CS / RRSe ) + MLU ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7179576592327912}, {"determining": "Min( ( ( ( PN + ( PN * ARS ) ) / ( MDR / AMS ) ) - MDR ) ,PN )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - MUC ) / RMSe ) ,MUR ) * ( DS - MUC ) ) - ( ( ( Max( ( DS - MLU ),Max( RRSe,RCSe ) ) - MUR ) * MLU ) * ( MLU - Min( Max( MLU,CS ) ,( ( MLU - RMSe ) + ( DS * MUC ) ) ) ) ) ) ) - ( ( ( RMSe + ( Max( ( RMSe - ( DS - RMSe ) ),( CS * CS ) ) - RMSe ) ) / RCSe ) + RMSe ) )", "obj1": 0.9074074074074074, "obj2": 0.04020453145082231}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004582522519326482}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( RMSe ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.9277777777777778, "obj2": 0.031340715402100594}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( ( MUR / MUC ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.37222222222222223, "obj2": 0.4718282962051216}, {"determining": "Min( ( PN - ( MDR * Min( ( FirstVNF_Mem + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) ) ,( ( Max( ( ( RRS + ARS ) + FirstVNF_RAM ),RRS ) / FirstVNF_Mem ) - MDR ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + RRSe ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RMSe / RRSe ) / ( MUM / RMSe ) ) * MLU ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.1908637150379094}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,Min( ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM / ARS ),DDR ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( MUR / ( MUM * RCSe ) ) / ( RRSe + ( MUR + ( ( MLU - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.2863274272037712}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9111111111111111, "obj2": 0.03801035817885923}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - MDR ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( MUR / MUC ) / ( RRSe + ( MUR + ( ( MLU - MUC ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6425925925925926, "obj2": 0.20414354419895786}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + ( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6814814814814815, "obj2": 0.17952528921706093}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9407407407407408, "obj2": 0.023784496916376522}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.837037037037037, "obj2": 0.06949049767115689}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MRS - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.36534450334828134}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.31666666666666665, "obj2": 0.5259171631701819}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.14925618081174602}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5407407407407407, "obj2": 0.2801452540213724}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( RRS * ARS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.4111111111111111, "obj2": 0.3973793613429714}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUC ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( DS,RRSe ) ) * CS ) + Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.569814399350271}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08299208254034236}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_RAM_Server + RRS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - MDR ) ) ,PN )", "choosing": "Min( ( ( DS + MUC ) / ( ( ( Min( RRSe ,( RMSe * ( MUR + DS ) ) ) + Min( RCSe ,Min( Min( RMSe ,DS ) ,( MLU - RCSe ) ) ) ) - MUR ) * CS ) ) ,Min( ( DS - ( Max( ( ( ( RRSe * MUR ) / RMSe ) - ( ( RCSe / MUC ) * DS ) ),Min( MUM ,CS ) ) * ( MUC - MLU ) ) ) ,( RCSe - MUM ) ) )", "obj1": 0.55, "obj2": 0.2735186767677442}, {"determining": "Min( ( PN - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,Max( CS,RMSe ) ) ,( ( MUM * MUC ) * MUC ) ) + ( Max( RMSe,MLU ) * MLU ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.7240740740740741, "obj2": 0.12618807227274506}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( ( ( PN * BR ) - MDR ) ,Max( AMS,( Max( ( ( ( PN * CRS ) * Min( ARS ,PN ) ) + FirstVNF_Mem_Server ),AMS ) / DDR ) ) )", "choosing": "Min( ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( MUM + MUM ) * RRSe ) ),Max( Min( RRSe ,RRSe ),( ( RCSe * MUM ) + Max( MLU,RMSe ) ) ) ),( RRSe + ( ( MUC + RRSe ) * ( MLU / CS ) ) ) ) ) ) ,( ( MUC - ( RCSe + ( CS / MLU ) ) ) / ( MUM * RCSe ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.47235674044773607}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( ( MUR / MUC ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6055555555555555, "obj2": 0.22541924559351784}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ARS / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Max( MRS,Max( MRS,MRS ) ) * FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MUM + MUR ) + RMSe ) ,MUR ) ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) - RMSe ) ,( MUC - ( RMSe / Min( Min( MUC ,DS ) ,RCSe ) ) ) )", "obj1": 0.3574074074074074, "obj2": 0.4803493039110348}, {"determining": "Min( ( CRS - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( CS / MUM ) - Min( MUC ,CS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.587037037037037, "obj2": 0.24144593718719567}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( MUR / MUC ) / ( RRSe + ( MUR + ( ( MLU - RRSe ) - MUC ) ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.21171964109709232}, {"determining": "Min( ( Max( Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7606282335664637}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8611111111111112, "obj2": 0.0632848815393453}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) ) ) ) ) )", "obj1": 0.5944444444444444, "obj2": 0.23112098964584268}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( ( MUC - CS ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3537037037037037, "obj2": 0.4819421871444673}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - ( MUM / MLU ) ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.3582462648640832}, {"determining": "Min( ( FirstVNF_Mem - ( Min( Max( ( FirstVNF_RAM / ARS ),DDR ) ,FirstVNF_CPU ) * MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7350630650096088}, {"determining": "Min( ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) ) / PN ) - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.030493528506053004}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( FirstVNF_RAM * ACS ) / ( FirstVNF_Mem + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,( CS * RMSe ) ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS - RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6823349170126576}, {"determining": "Min( Min( MRS ,Min( ( ( Max( ( FirstVNF_RAM_Server + ( AMS - MDR ) ),PN ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( ( MUR / ( ( ( MLU / RRSe ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3148148148148148, "obj2": 0.5265358897616313}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( MUR / MUC ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6296296296296297, "obj2": 0.21342837341547993}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( Min( RMSe ,DS ),RRSe ) * RCSe ) )", "obj1": 0.9703703703703703, "obj2": 0.007775509835305338}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR - MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ACS ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - ( MUC * MUM ) ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.4185185185185185, "obj2": 0.39406812992161566}, {"determining": "Min( Min( MRS ,Min( PN ,( ( Max( ARS,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ) ) ,( ( BR + MDR ) + ( ( ( FirstVNF_Mem * BR ) - ( ( BR * MRS ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( ( ( Min( CS ,Max( ( MUR - ( RMSe - MUR ) ),RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + MUR ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7694430099984255}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * FirstVNF_Mem_Server ) ) * MDR ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.7111111111111111, "obj2": 0.13478643031989535}, {"determining": "Min( ( ( ( PN / ( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - Min( ( FirstVNF_RAM + ( ( ( CRS * ARS ) + ( Max( PN,ACS ) + PN ) ) / DDR ) ) ,FirstVNF_CPU ) ) ,( PN - CRS ) )", "choosing": "Min( ( ( MUM * RMSe ) - CS ) ,( ( Min( MUC ,( MUM * ( MLU - RRSe ) ) ) * Max( ( MUC + MLU ),RMSe ) ) - RMSe ) )", "obj1": 0.95, "obj2": 0.017323068748607}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6148148148148148, "obj2": 0.21351236378627164}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + RMSe )", "obj1": 0.8462962962962963, "obj2": 0.0665238920388835}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( AMS * ( Const - RRS ) ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( ( RRSe / ( ( RRSe * MUR ) - MLU ) ) - ( MUM + RMSe ) ) - Min( ( MUR + CS ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Max( CS,RMSe ) ) ) + RMSe )", "obj1": 0.8277777777777777, "obj2": 0.07523419855719513}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( ( MUR / MUC ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3425925925925926, "obj2": 0.4868092535551668}, {"determining": "Min( ( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) ,( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + MUC ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5586025219862693}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - Min( ( FirstVNF_RAM + ( ( ( CRS * ARS ) + ( Max( PN,PN ) + PN ) ) / DDR ) ) ,FirstVNF_CPU ) ) ,( PN - CRS ) )", "choosing": "( ( ( CS - RCSe ) * ( Max( ( DS / CS ),MUM ) - MLU ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( ( Max( RRSe,RRSe ) * Max( MUR,DS ) ),( ( DS - RRSe ) - MUC ) ) ) ) ,( RRSe + ( RRSe + MLU ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01243868108253024}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( CRS / FirstVNF_CPU ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - Max( FirstVNF_Mem_Server,BR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( Min( CS ,RMSe ) + ( MUM / MLU ) ) ) + Max( CS,( MUM - MUR ) ) )", "obj1": 0.762962962962963, "obj2": 0.10305548932169949}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.7833333333333333, "obj2": 0.09142554512231928}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) + RMSe )", "obj1": 0.7777777777777778, "obj2": 0.09686423620426639}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( PN ,( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_CPU / FirstVNF_Mem ) ) + Min( ( FirstVNF_Mem_Server - ( MRS - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( Max( ( MUC * Min( ( Min( ( MLU + MUM ) ,MUR ) / MLU ) ,CS ) ),MLU ) - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM - RRSe ) ) ) ) ) )", "obj1": 0.4685185185185185, "obj2": 0.35160176812236243}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( DDR + PN ) ) ),RRS ) ) * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( RRSe - ( RRSe - DS ) ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.8, "obj2": 0.08371763725482112}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8777777777777778, "obj2": 0.04805616102371889}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,PN ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11154741914525558}], "33": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( PN - ( Min( ( Const + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),( ( ACS - CRS ) - ( ARS * CRS ) ) ) + PN ) ) - DDR ) - Max( ( CRS + ( Max( DDR,ARS ) + PN ) ),Max( CRS,ARS ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( RCSe - Max( MUC,RMSe ) ) - ( MUR - ( ( ( ( MUR * DS ) + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( MUR / MUC ) - RCSe ) ) ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Max( ( ( MDR / Const ) - FirstVNF_Mem ),Const ) / ( ( ( ACS + CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( ( Min( ( MUM / MUR ) ,( MUC * MUM ) ) / Min( ( MUR - RCSe ) ,( RCSe - CS ) ) ),MUC ) / RMSe ) - RCSe ) ) - ( ( RCSe / DS ) - ( DS * RMSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.45102232965911915}, {"determining": "( ( BR / ( MRS * FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_Mem_Server,DDR ) ) ,( RRS + ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) * DS ) / MUR ) - ( RMSe + MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6554381189185627}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ( RRS - Min( RRS ,AMS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) - RMSe ) )", "obj1": 0.5111111111111111, "obj2": 0.3180649570850669}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( PN - ( MDR * Min( ( FirstVNF_Mem + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) ) ,( ( Max( ( ( RRS + ARS ) + FirstVNF_RAM ),RRS ) / FirstVNF_Mem ) - MDR ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + RRSe ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RMSe / RRSe ) / ( MUM / RMSe ) ) * MLU ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.1908637150379094}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6759259259259259, "obj2": 0.16678128792824834}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( ( MUR / MUC ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6055555555555555, "obj2": 0.22541924559351784}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( ( PN - ( FirstVNF_CPU * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( ( MUR / MUC ) * RCSe ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5666666666666667, "obj2": 0.2564637484392439}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6148148148148148, "obj2": 0.21351236378627164}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( ( PN - ( MDR * Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + ( MUR / RMSe ) ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( CS + ( MUR - MLU ) ) ) ) ) - CS ) )", "obj1": 0.5777777777777777, "obj2": 0.24765556994661345}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - PN ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5592592592592592, "obj2": 0.26488873096113374}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( PN - ( Min( ( PN * ARS ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( Max( BR,Const ) / ARS ),FirstVNF_CPU ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7172820304235139}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( PN - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,Max( CS,RMSe ) ) ,( ( MUM * MUC ) * MUC ) ) + ( Max( RMSe,MLU ) * MLU ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.7240740740740741, "obj2": 0.12618807227274506}, {"determining": "Min( ( PN - ( Min( ( PN * ARS ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( Max( BR,Const ) / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( CS / RCSe ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7021008020142555}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ( RRS - Min( RRS ,AMS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5151046816000743}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8555555555555555, "obj2": 0.06060277664919472}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) ) ) ) ) )", "obj1": 0.5944444444444444, "obj2": 0.23112098964584268}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( ( MUR / MUC ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3351851851851852, "obj2": 0.49587459134569073}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - ( MUM / MLU ) ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.46296296296296297, "obj2": 0.3582462648640832}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * FirstVNF_Mem_Server ) ) * MDR ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( CS - MUC ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.7111111111111111, "obj2": 0.13478643031989535}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8833333333333333, "obj2": 0.04340882297443494}, {"determining": "( AMS / ( ( ( ( ( Const + Min( FirstVNF_RAM ,AMS ) ) - BR ) + ( PN * ARS ) ) - DDR ) - ACS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / MUM ) ) - DS ) + ( MLU - RRSe ) ) - CS ) ,( ( ( MUC + ( ( MLU - RCSe ) * MUM ) ) * Min( ( ( ( RCSe * Min( MLU ,MLU ) ) + MLU ) - DS ) ,MUC ) ) - ( ( RRSe + ( Min( MLU ,( MUR / MUM ) ) * RRSe ) ) * Max( RCSe,( RRSe * RRSe ) ) ) ) )", "obj1": 0.9, "obj2": 0.042490919309632426}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( MDR - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) )", "choosing": "Min( ( ( ( RRSe - Max( MUC,Min( ( Min( RMSe ,DS ) + RMSe ) ,MUR ) ) ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( Min( RMSe ,DS ),RRSe ) * RCSe ) )", "obj1": 0.9703703703703703, "obj2": 0.007730822367398876}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7055555555555556, "obj2": 0.14925618081174602}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08299208254034236}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_RAM_Server + RRS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - MDR ) ) ,PN )", "choosing": "Min( ( ( DS + MUC ) / ( ( ( Min( RRSe ,( RMSe * ( MUR + DS ) ) ) + Min( RCSe ,Min( Min( RMSe ,DS ) ,( MLU - RCSe ) ) ) ) - MUR ) * CS ) ) ,Min( ( DS - ( Max( ( ( ( RRSe * MUR ) / RMSe ) - ( ( RCSe / MUC ) * DS ) ),Min( MUM ,CS ) ) * ( MUC - MLU ) ) ) ,( RCSe - MUM ) ) )", "obj1": 0.55, "obj2": 0.2735186767677442}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( PN * ( RRS * Const ) ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.3851851851851852, "obj2": 0.46599360441085946}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( ( MUR / MUC ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.37222222222222223, "obj2": 0.4718282962051216}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MRS - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) ) ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.36656007071679025}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) - ( ( MUM / MLU ) + Min( MUM ,RMSe ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.1964634693714259}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MRS - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.45, "obj2": 0.36288916488282363}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.9203703703703704, "obj2": 0.03462379901032071}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( RRS - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( CS * ( MUR * MUC ) ) ) + RMSe ) * DS ) ) - ( ( MUC + RCSe ) + MUM ) )", "obj1": 0.5277777777777778, "obj2": 0.2964092609719304}, {"determining": "Min( ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - MDR ) ) ,FirstVNF_CPU ) ) / PN ) - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.030493528506053004}, {"determining": "( ( ACS - ( FirstVNF_RAM + ( ( PN * ( RRS * Const ) ) - DDR ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7407407407407407, "obj2": 0.1232082126192918}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUC ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( DS,RRSe ) ) * CS ) + Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.569814399350271}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "Min( Min( MRS ,Min( ( ( Max( ( FirstVNF_RAM_Server + ( AMS - MDR ) ),PN ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( FirstVNF_RAM,CRS ) ) )", "choosing": "( ( MUR / ( ( ( MLU / RRSe ) + RMSe ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3148148148148148, "obj2": 0.5265358897616313}, {"determining": "Min( Min( MRS ,Min( FirstVNF_Mem_Server ,( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,PN ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11154741914525558}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( FirstVNF_RAM * ACS ) / ( FirstVNF_Mem + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,( CS * RMSe ) ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS - RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6823349170126576}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,Min( ARS ,DDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / RMSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8444444444444444, "obj2": 0.06586647430921458}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( MUR / MUC ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6296296296296297, "obj2": 0.21342837341547993}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) - AMS ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,FirstVNF_CPU ) ) * FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( MDR + FirstVNF_CPU_Server ) + ( Min( FirstVNF_Mem ,PN ) + PN ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( Min( CS ,( MLU * ( MUM / Min( CS ,( RMSe * MUR ) ) ) ) ) / RRSe ) - CS ) ,Min( RCSe ,RMSe ) )", "obj1": 0.7444444444444445, "obj2": 0.11446767475755876}, {"determining": "Min( ( CRS - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( CS / MUM ) - Min( MUC ,CS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.587037037037037, "obj2": 0.24144593718719567}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004582522519326482}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * FirstVNF_Mem_Server ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7333333333333333, "obj2": 0.1246383010810068}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5407407407407407, "obj2": 0.2801452540213724}, {"determining": "Min( ( Const * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * ( ( MUR / MUC ) / RCSe ) ) ) )", "obj1": 0.7962962962962963, "obj2": 0.08533409486931176}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( AMS + CRS ) ) ,( MDR - ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe / RCSe ) ,( Min( ( ( RMSe / MUC ) * CS ) ,MUM ) - ( MUM * RCSe ) ) )", "obj1": 0.7870370370370371, "obj2": 0.08998985741613788}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.0308217305712058}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.1908637150379094}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9111111111111111, "obj2": 0.03801035817885923}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + FirstVNF_Mem ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + CS ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5907407407407408, "obj2": 0.24108557545226192}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6925925925925925, "obj2": 0.15763356817628862}, {"determining": "Min( ( Max( Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 0.1388888888888889, "obj2": 0.7606282335664637}, {"determining": "Min( ( ( PN * BR ) - MDR ) ,Max( AMS,( Max( ( ( ( PN * CRS ) * Min( ARS ,PN ) ) + FirstVNF_Mem_Server ),AMS ) / DDR ) ) )", "choosing": "Min( ( RRSe * ( ( CS - MUR ) / Max( Max( ( DS - ( ( MUM + MUM ) * RRSe ) ),Max( Min( RRSe ,RRSe ),( ( RCSe * MUM ) + Max( MLU,RMSe ) ) ) ),( RRSe + ( ( MUC + RRSe ) * ( MLU / CS ) ) ) ) ) ) ,( ( MUC - ( RCSe + ( CS / MLU ) ) ) / ( MUM * RCSe ) ) )", "obj1": 0.9962962962962963, "obj2": 0.0016872215859054097}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.32407407407407407, "obj2": 0.5158745255361172}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.47235674044773607}, {"determining": "Min( Min( MRS ,Min( ( ( Max( FirstVNF_CPU_Server,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( FirstVNF_RAM_Server + ARS ) * ARS ) - ( ( BR * PN ) - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + CS ) + ( ( MUC - CS ) * ( Max( MUM,DS ) - Max( MUM,( CS * DS ) ) ) ) ) ,Max( ( CS - MUM ),Min( ( ( CS * MUR ) + RMSe ) ,MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3611111111111111, "obj2": 0.47836881108150786}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( MUC + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( ( MUR / MUC ) * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3425925925925926, "obj2": 0.4868092535551668}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) + RMSe )", "obj1": 0.7777777777777778, "obj2": 0.09686423620426639}, {"determining": "Min( ( PN - ( ( ( FirstVNF_RAM + ( ( ( MDR * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) + FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( ( RRSe / MLU ) * RCSe ) ) )", "obj1": 0.6388888888888888, "obj2": 0.20897626665821217}, {"determining": "( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + ( CS + RMSe ) ) ) + ( CS * MUR ) ) / ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) ) )", "obj1": 0.7574074074074074, "obj2": 0.10697136674380481}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.837037037037037, "obj2": 0.06949049767115689}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( DDR + PN ) ) ),RRS ) ) * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( RRSe - ( RRSe - DS ) ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.8, "obj2": 0.08371763725482112}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( Min( Min( ( ( MUM - ( MUM + RMSe ) ) - Min( ( CS + MUR ) ,RMSe ) ) ,( RCSe - MUM ) ) ,( ( MUM / MLU ) + Min( CS ,RMSe ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.4930445913926594}], "34": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( Max( Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) - MDR ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_Mem_Server,DDR ) ) ,( RRS + ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( RCSe / ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) * DS ) ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - ( Min( ( Const + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),( ( ACS - CRS ) - ( ARS * CRS ) ) ) + PN ) ) - DDR ) - Max( ( CRS + ( Max( DDR,ARS ) + PN ) ),Max( CRS,ARS ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( RCSe - Max( MUC,RMSe ) ) - ( MUR - ( ( ( ( MUR * DS ) + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( MUR / MUC ) - RCSe ) ) ) ) ) - CS ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Max( ( ( MDR / Const ) - FirstVNF_Mem ),Const ) / ( ( ( ACS + CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( ( Min( ( MUM / MUR ) ,( MUC * MUM ) ) / Min( ( MUR - RCSe ) ,( RCSe - CS ) ) ),MUC ) / RMSe ) - RCSe ) ) - ( ( RCSe / DS ) - ( DS * RMSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.45102232965911915}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "( ( BR / ( MRS * FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_Mem_Server,DDR ) ) ,( RRS + ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) * DS ) / MUR ) - ( RMSe + MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6554381189185627}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5407407407407407, "obj2": 0.2801452540213724}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) + RMSe )", "obj1": 0.7777777777777778, "obj2": 0.09686423620426639}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - Max( PN,( DDR / FirstVNF_Mem_Server ) ) ) - ( PN * Const ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,MDR ) + ( FirstVNF_RAM_Server / ACS ) ) * CRS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS - ( ( CS * CS ) - RRSe ) ) + Min( Min( ( MUR / RRSe ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( ( ( Min( DS ,MUM ) - MUM ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7574074074074074, "obj2": 0.1058296011408691}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( PN - ( MDR * Min( ( FirstVNF_Mem + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) ) ,( ( Max( ( ( RRS + ARS ) + FirstVNF_RAM ),RRS ) / FirstVNF_Mem ) - MDR ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + RRSe ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RMSe / RRSe ) / ( MUM / RMSe ) ) * MLU ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.1908637150379094}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( DDR + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) )", "obj1": 0.6759259259259259, "obj2": 0.1667522083322297}, {"determining": "Min( Min( PN ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.1963244051031496}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( FirstVNF_RAM ,( MDR - ( Max( Min( MDR ,DDR ),ARS ) + ( BR * RRS ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( Max( ( RRSe / CS ),RMSe ) * DS ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4925925925925926, "obj2": 0.33022640268501546}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( Max( Min( DDR ,( FirstVNF_Mem_Server - FirstVNF_RAM ) ),( ACS / BR ) ) / BR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - DDR ) ) ,( CRS * FirstVNF_Mem_Server ) ) ) + Max( DDR,( PN + ARS ) ) ) ,Max( Const,FirstVNF_CPU ) )", "choosing": "Min( ( CS - Max( DS,( DS - ( RCSe / MUR ) ) ) ) ,Max( RCSe,MUM ) )", "obj1": 0.9666666666666667, "obj2": 0.01824940898150985}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,FirstVNF_CPU ) ) / FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( MUR / MUC ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( PN - ( Min( ( PN * ARS ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( Max( BR,Const ) / ARS ),FirstVNF_CPU ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7172820304235139}, {"determining": "Min( ( PN - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,Max( CS,RMSe ) ) ,( ( MUM * MUC ) * MUC ) ) + ( Max( RMSe,MLU ) * MLU ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.7240740740740741, "obj2": 0.12618807227274506}, {"determining": "Min( ( PN - ( Min( ( PN * ARS ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( Max( BR,Const ) / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( CS / RCSe ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.1925925925925926, "obj2": 0.7021008020142555}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( MUR / MUC ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6296296296296297, "obj2": 0.21342837341547993}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( PN * ( RRS * Const ) ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.3851851851851852, "obj2": 0.46599360441085946}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( AMS + CRS ) ) ,( MDR - ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) ) )", "choosing": "Min( ( RCSe / RCSe ) ,( Min( ( ( RMSe / MUC ) * CS ) ,MUM ) - ( MUM * RCSe ) ) )", "obj1": 0.7870370370370371, "obj2": 0.08998985741613788}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,MRS ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( MUM - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8777777777777778, "obj2": 0.04805616102371889}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9333333333333333, "obj2": 0.02759027782124861}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( RRS - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( CS * ( MUR * MUC ) ) ) + RMSe ) * DS ) ) - ( ( MUC + RCSe ) + MUM ) )", "obj1": 0.5277777777777778, "obj2": 0.2964092609719304}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6148148148148148, "obj2": 0.21351236378627164}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( ( ( CS + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8277777777777777, "obj2": 0.07432998078827063}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Max( ( PN + RRS ),FirstVNF_RAM_Server ) ) + PN ) - MDR ) ,PN ) ) ,( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) + ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUR / ( ( CS + Max( MLU,DS ) ) + RRSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5092294148920917}, {"determining": "Min( ( PN - ( MDR * Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + ( MUR / RMSe ) ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( CS + ( MUR - MLU ) ) ) ) ) - CS ) )", "obj1": 0.5777777777777777, "obj2": 0.24765556994661345}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "( ( FirstVNF_RAM_Server / ( ( DDR * FirstVNF_Mem_Server ) / RRS ) ) / ( Min( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ,DDR ) - MDR ) )", "choosing": "( Max( ( ( MLU + ( RCSe / MLU ) ) * DS ),Min( CS ,( Max( Max( Max( Min( DS ,DS ),RMSe ),RMSe ),RRSe ) + Min( CS ,Max( Max( MUM,( DS / CS ) ),RCSe ) ) ) ) ) - ( MUM + ( RRSe * ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) * CS ) * ( Min( ( RMSe + CS ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.9518518518518518, "obj2": 0.02421146274412497}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08299208254034236}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.37037037037037035, "obj2": 0.4705183449645603}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,Min( ARS ,DDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / RMSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8444444444444444, "obj2": 0.06586647430921458}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUC ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( DS,RRSe ) ) * CS ) + Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.569814399350271}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6925925925925925, "obj2": 0.15763356817628862}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004582522519326482}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( RCSe + ( Max( RRSe,RRSe ) * RCSe ) ),MLU ) ) ,( RCSe - RMSe ) )", "obj1": 0.3148148148148148, "obj2": 0.5247649126627093}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( MLU - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.687037037037037, "obj2": 0.1608633370946032}, {"determining": "Min( Min( Max( MDR,ACS ) ,Min( ( ( Max( FirstVNF_Mem,Min( DDR ,Min( FirstVNF_Mem ,RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ( RRS - Min( RRS ,AMS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( DS - MLU ) ,( RRSe + MUC ) ) ) ) - DS ) ) - CS ) ,( ( MUC - Min( ( ( CS - MUR ) + RMSe ) ,MUR ) ) - RMSe ) )", "obj1": 0.5055555555555555, "obj2": 0.3237140480313474}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ( RRS - Min( RRS ,AMS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( CS - MUC ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4111111111111111, "obj2": 0.39743731907004215}, {"determining": "Min( Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( DDR,PN ) ) ,( FirstVNF_RAM_Server + ( ( MRS / FirstVNF_CPU ) * FirstVNF_CPU_Server ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( Min( Min( ( MUR / MUC ) ,MUR ) ,( CS * ( MUR * MUC ) ) ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.9481481481481482, "obj2": 0.025096012377690734}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8833333333333333, "obj2": 0.04340882297443494}, {"determining": "( AMS / ( ( ( ( ( Const + Min( FirstVNF_RAM ,AMS ) ) - BR ) + ( PN * ARS ) ) - DDR ) - ACS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / MUM ) ) - DS ) + ( MLU - RRSe ) ) - CS ) ,( ( ( MUC + ( ( MLU - RCSe ) * MUM ) ) * Min( ( ( ( RCSe * Min( MLU ,MLU ) ) + MLU ) - DS ) ,MUC ) ) - ( ( RRSe + ( Min( MLU ,( MUR / MUM ) ) * RRSe ) ) * Max( RCSe,( RRSe * RRSe ) ) ) ) )", "obj1": 0.9, "obj2": 0.042490919309632426}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - PN ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5592592592592592, "obj2": 0.26488873096113374}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * FirstVNF_Mem_Server ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) - RMSe ) )", "obj1": 0.7333333333333333, "obj2": 0.12426896871241795}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - FirstVNF_RAM ) ) + Max( PN,( ARS + FirstVNF_RAM ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( RCSe * RCSe ) / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,( MUR - RMSe ) )", "obj1": 0.5074074074074074, "obj2": 0.3223726755911605}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( FirstVNF_RAM * ACS ) / ( FirstVNF_Mem + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,( CS * RMSe ) ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS - RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6823349170126576}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( RRS - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / ( ( ( PN * CRS ) * Min( ARS ,PN ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( ( MUR / ( ( Min( ( RCSe + ( CS / MLU ) ) ,( CS * ( MUR * MUC ) ) ) + RMSe ) * DS ) ) - ( ( MUC + RCSe ) + MUM ) )", "obj1": 0.5277777777777778, "obj2": 0.2964092609719304}, {"determining": "Min( ( CRS - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - ( FirstVNF_RAM_Server + FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( CS / MUM ) - Min( MUC ,CS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.587037037037037, "obj2": 0.24144593718719567}, {"determining": "Min( ( PN - ( Min( MDR ,( FirstVNF_Mem_Server / CRS ) ) * MDR ) ) ,( ( ( CRS + ( Max( DDR,( FirstVNF_RAM / ARS ) ) + PN ) ) - DDR ) - ( ACS * PN ) ) )", "choosing": "Min( ( DS - RMSe ) ,( CS - ( ( RRSe - Min( ( RRSe - RRSe ) ,( DS - RMSe ) ) ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MLU - DS ) ,DS ) ) ) ) )", "obj1": 0.6092592592592593, "obj2": 0.22438400714341944}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) - DDR ) - Max( ( CRS + PN ),Max( CRS,ARS ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( ( MUR * DS ) + ( RMSe + MUC ) ) + MUM ) * CS ) ) ) - CS ) )", "obj1": 0.9907407407407407, "obj2": 0.002219369453937033}, {"determining": "Min( ( Const * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( RCSe / CS ) ,( ( MUC - CS ) - ( MUM * ( ( MUR / MUC ) / RCSe ) ) ) )", "obj1": 0.7962962962962963, "obj2": 0.08533409486931176}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4148148148148148, "obj2": 0.3939946671015721}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MLU + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.662962962962963, "obj2": 0.1908637150379094}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) ) ) ) ) )", "obj1": 0.5944444444444444, "obj2": 0.23112098964584268}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_RAM_Server + RRS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - MDR ) ) ,PN )", "choosing": "Min( ( ( DS + MUC ) / ( ( ( Min( RRSe ,( RMSe * ( MUR + DS ) ) ) + Min( RCSe ,Min( Min( RMSe ,DS ) ,( MLU - RCSe ) ) ) ) - MUR ) * CS ) ) ,Min( ( DS - ( Max( ( ( ( RRSe * MUR ) / RMSe ) - ( ( RCSe / MUC ) * DS ) ),Min( MUM ,CS ) ) * ( MUC - MLU ) ) ) ,( RCSe - MUM ) ) )", "obj1": 0.55, "obj2": 0.2735186767677442}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + FirstVNF_Mem ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + CS ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5907407407407408, "obj2": 0.24108557545226192}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.45555555555555555, "obj2": 0.35864250846649454}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.47235674044773607}, {"determining": "Min( Min( MRS ,Min( ( ( Max( FirstVNF_CPU_Server,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( FirstVNF_RAM_Server + ARS ) * ARS ) - ( ( BR * PN ) - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + CS ) + ( ( MUC - CS ) * ( Max( MUM,DS ) - Max( MUM,( CS * DS ) ) ) ) ) ,Max( ( CS - MUM ),Min( ( ( CS * MUR ) + RMSe ) ,MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3611111111111111, "obj2": 0.47836881108150786}, {"determining": "( ( FirstVNF_Mem * ( ARS * PN ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,FirstVNF_CPU ) + ( PN / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - ( Max( DS,RCSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + ( RMSe + CS ) ) * Max( Min( ( MUR * RRSe ) ,( RRSe / MLU ) ),( ( DS / RRSe ) + ( CS * RCSe ) ) ) ) ) ) - CS ) )", "obj1": 0.6777777777777778, "obj2": 0.165617380630241}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( DDR + PN ) ) ),RRS ) ) * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( RRSe - ( RRSe - DS ) ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.8, "obj2": 0.08371763725482112}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( Max( BR,Const ) - MDR ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( RCSe - RMSe ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5962962962962963, "obj2": 0.22904736022951505}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * FirstVNF_Mem_Server ) ) * MDR ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( CS - MUC ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.7111111111111111, "obj2": 0.13478643031989535}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.0308217305712058}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.9203703703703704, "obj2": 0.03462379901032071}], "35": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( ( MDR + FirstVNF_RAM ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS + CRS ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS * MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( CS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Max( Max( PN,Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) - MDR ) ,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_Mem_Server,DDR ) ) ,( RRS + ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ) ) ) )", "choosing": "Min( ( RCSe / ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) * DS ) ) ,( ( MUC - CS ) - ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Max( ( ( MDR / Const ) - FirstVNF_Mem ),Const ) / ( ( ( ACS + CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( ( Min( ( MUM / MUR ) ,( MUC * MUM ) ) / Min( ( MUR - RCSe ) ,( RCSe - CS ) ) ),MUC ) / RMSe ) - RCSe ) ) - ( ( RCSe / DS ) - ( DS * RMSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.45102232965911915}, {"determining": "( ( BR / ( MRS * FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_Mem_Server,DDR ) ) ,( RRS + ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) * DS ) / MUR ) - ( RMSe + MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6554381189185627}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( RCSe + ( Max( RRSe,RRSe ) * RCSe ) ),MLU ) ) ,( RCSe - RMSe ) )", "obj1": 0.3148148148148148, "obj2": 0.5247649126627093}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( ( ( PN * Min( FirstVNF_Mem ,DDR ) ) + ( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - ( ( Const + FirstVNF_Mem_Server ) * FirstVNF_CPU_Server ) ) ,( ( FirstVNF_RAM + ( PN / FirstVNF_RAM_Server ) ) + ACS ) ) ) ) ) / ( ( ( ACS - CRS ) - ( FirstVNF_CPU_Server * CRS ) ) - ( Min( ACS ,( ( ( PN - ( MDR - FirstVNF_Mem ) ) * Min( Max( FirstVNF_Mem_Server,FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) * ( MRS / ACS ) ) ) )", "choosing": "( ( ( CS - ( RCSe / MLU ) ) * ( DS * MLU ) ) - ( ( MLU - ( Max( RCSe,RRSe ) + RCSe ) ) - ( ( RMSe / ( ( MUC * MUR ) - ( MUC * RRSe ) ) ) + CS ) ) )", "obj1": 0.3111111111111111, "obj2": 0.539866889989465}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( ( ( Min( Max( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ),AMS ) ,CRS ) + ( Min( ARS ,DDR ) + ( FirstVNF_RAM / ARS ) ) ) - DDR ) - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + Min( Min( ( MUR / MUC ) ,MUR ) ,( CS * ( MUR * MUC ) ) ) ) ) - DS ) ,( RCSe - MUM ) )", "obj1": 0.13518518518518519, "obj2": 0.7667276598834992}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( ( MUR / MUC ) ,MUR ) - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.45185185185185184, "obj2": 0.36130804951607864}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,Min( ARS ,DDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / RMSe ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8444444444444444, "obj2": 0.06586647430921458}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "( CRS / ( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.18333333333333332, "obj2": 0.6983808569173356}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( RRS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Max( FirstVNF_CPU,CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) / DS ) ) - CS ) ,( RCSe - ( RMSe - MUC ) ) )", "obj1": 0.4925925925925926, "obj2": 0.32999649276476367}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * FirstVNF_Mem_Server ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( CS / MUM ) - Min( MUC ,CS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7462962962962963, "obj2": 0.11536331950773247}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6925925925925925, "obj2": 0.15763356817628862}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUC ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( DS,RRSe ) ) * CS ) + Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.569814399350271}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - ( ( FirstVNF_Mem_Server / ARS ) - FirstVNF_CPU_Server ) ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * FirstVNF_Mem ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + ( RCSe * RCSe ) ) + MUC ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.337037037037037, "obj2": 0.49669927465590613}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( PN ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.1963244051031496}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.9629629629629629, "obj2": 0.015657240997513144}, {"determining": "Min( ( PN - ( Min( ( PN * ARS ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( Max( BR,Const ) / ARS ),FirstVNF_CPU ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7172820304235139}, {"determining": "Min( ( PN - ( Min( MDR ,( FirstVNF_Mem_Server / CRS ) ) * MDR ) ) ,( ( ( CRS + ( Max( DDR,( FirstVNF_RAM / ARS ) ) + PN ) ) - DDR ) - ( ACS * PN ) ) )", "choosing": "Min( ( DS - RMSe ) ,( CS - ( ( RRSe - Min( ( RRSe - RRSe ) ,( DS - RMSe ) ) ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MLU - DS ) ,DS ) ) ) ) )", "obj1": 0.6092592592592593, "obj2": 0.22438400714341944}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6148148148148148, "obj2": 0.21351236378627164}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( MUR / MUC ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6296296296296297, "obj2": 0.21342837341547993}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Max( ( PN + RRS ),FirstVNF_RAM_Server ) ) + PN ) - MDR ) ,PN ) ) ,( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) + ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUR / ( ( CS + Max( MLU,DS ) ) + RRSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5092294148920917}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "( AMS / ( ( ( ( ( Const + Min( FirstVNF_RAM ,AMS ) ) - BR ) + ( PN * ARS ) ) - DDR ) - ACS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / MUM ) ) - DS ) + ( MLU - RRSe ) ) - CS ) ,( ( ( MUC + ( ( MLU - RCSe ) * MUM ) ) * Min( ( ( ( RCSe * Min( MLU ,MLU ) ) + MLU ) - DS ) ,MUC ) ) - ( ( RRSe + ( Min( MLU ,( MUR / MUM ) ) * RRSe ) ) * Max( RCSe,( RRSe * RRSe ) ) ) ) )", "obj1": 0.9, "obj2": 0.042490919309632426}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_RAM_Server + RRS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - MDR ) ) ,PN )", "choosing": "Min( ( ( DS + MUC ) / ( ( ( Min( RRSe ,( RMSe * ( MUR + DS ) ) ) + Min( RCSe ,Min( Min( RMSe ,DS ) ,( MLU - RCSe ) ) ) ) - MUR ) * CS ) ) ,Min( ( DS - ( Max( ( ( ( RRSe * MUR ) / RMSe ) - ( ( RCSe / MUC ) * DS ) ),Min( MUM ,CS ) ) * ( MUC - MLU ) ) ) ,( RCSe - MUM ) ) )", "obj1": 0.55, "obj2": 0.2735186767677442}, {"determining": "Min( ( MDR * CRS ) ,( CRS - ( MDR * Min( ( FirstVNF_RAM + ( DDR * ( Const - ( MDR * BR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( RRSe / MUR ) / Max( ( ( DS / Max( RMSe,CS ) ) * ( RRSe - MUR ) ),( CS + Max( ( DS / MUC ),MUC ) ) ) ) - RMSe ) ,( ( Max( Min( ( RCSe - CS ) ,( MUC - ( RCSe / MUC ) ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.2504829459843906}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( PN - ( MDR * Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( BR,Const ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( ( DS - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( CS + ( MUR - MLU ) ) ) ) ) - CS ) )", "obj1": 0.562962962962963, "obj2": 0.2610000177620805}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5407407407407407, "obj2": 0.2801452540213724}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( Min( MRS ,Min( ( ( Max( FirstVNF_CPU_Server,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( FirstVNF_RAM_Server + ARS ) * ARS ) - ( ( BR * PN ) - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) ) )", "choosing": "Min( ( Min( ( ( MUM + CS ) + ( ( MUC - CS ) * ( Max( MUM,DS ) - Max( MUM,( CS * DS ) ) ) ) ) ,Max( ( CS - MUM ),Min( ( ( CS * MUR ) + RMSe ) ,MUR ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.3611111111111111, "obj2": 0.47836881108150786}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.4673488157318103}, {"determining": "( ( ACS - Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MRS ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) ) - ( ( ( ( FirstVNF_RAM_Server / ( ( BR * ACS ) / ( CRS + PN ) ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - ( ( Const + FirstVNF_Mem_Server ) / FirstVNF_Mem ) ) ,( CRS * FirstVNF_Mem_Server ) ) * MDR ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( CS - MUC ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.7111111111111111, "obj2": 0.13478643031989535}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08299208254034236}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) - DDR ) - Max( ( CRS + PN ),Max( CRS,ARS ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( ( MUR * DS ) + ( RMSe + MUC ) ) + MUM ) * CS ) ) ) - CS ) )", "obj1": 0.9907407407407407, "obj2": 0.002219369453937033}, {"determining": "Min( Min( ( ( AMS - DDR ) - FirstVNF_Mem_Server ) ,Min( ( ( Max( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ),( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU * ( MRS + FirstVNF_RAM_Server ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,( MUR - ( RMSe - ( RCSe - RRSe ) ) ) ) ) ,( ( MUM + CS ) + CS ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.7296296296296296, "obj2": 0.11981898155453836}, {"determining": "Min( ( MDR - Max( BR,Const ) ) ,Max( Const,MRS ) )", "choosing": "Min( ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( ( MUM * DS ) * ( CS - MUC ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17978275301840438}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( DDR + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) )", "obj1": 0.6759259259259259, "obj2": 0.1667522083322297}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_RAM - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( CS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.34444444444444444, "obj2": 0.48700743882751135}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( RCSe - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.46111111111111114, "obj2": 0.3544274404331745}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( ( ( CS + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8277777777777777, "obj2": 0.07432998078827063}, {"determining": "Min( Min( Max( MDR,ACS ) ,Min( ( ( Max( FirstVNF_Mem,Min( DDR ,Min( FirstVNF_Mem ,RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ( RRS - Min( RRS ,AMS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( DS - MLU ) ,( RRSe + MUC ) ) ) ) - DS ) ) - CS ) ,( ( MUC - Min( ( ( CS - MUR ) + RMSe ) ,MUR ) ) - RMSe ) )", "obj1": 0.5055555555555555, "obj2": 0.3237140480313474}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( ( PN - ( ( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) + FirstVNF_CPU ) * MDR ) ) ,( MDR - ( ( ( FirstVNF_Mem * BR ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),MUM ) ) - ( ( MUM / MLU ) + Min( MUM ,RMSe ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUM ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.1909412257877596}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( Min( ( Min( Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8833333333333333, "obj2": 0.04340882297443494}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( Max( Const,AMS ) ,MRS ),( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MLU - MUR ) ) ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7537037037037037, "obj2": 0.10824837771410989}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( ( ( ( ( FirstVNF_RAM_Server + Min( Max( AMS,MDR ) ,RRS ) ) + PN ) - DDR ) - MDR ) ,Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( FirstVNF_RAM * ACS ) / ( FirstVNF_Mem + ACS ) ) - ( ( ARS / FirstVNF_RAM_Server ) * ( AMS / FirstVNF_Mem ) ) ) ,( FirstVNF_RAM_Server + ( FirstVNF_Mem - MDR ) ) ) ) ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( DS ,( CS * RMSe ) ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS - RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6823349170126576}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( RRS - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( CS * ( MUR * MUC ) ) ) + RMSe ) * DS ) ) - ( ( MUC + RCSe ) + MUM ) )", "obj1": 0.5277777777777778, "obj2": 0.29587068085142876}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5092294148920917}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "Min( ( PN - ( MDR * Min( ( FirstVNF_RAM - ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - ( FirstVNF_RAM / ( BR / FirstVNF_Mem ) ) ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + ( MUR / RMSe ) ) - ( MUR - ( ( ( CS + ( MUC + MUC ) ) + MUM ) * ( ( RCSe / MUM ) + ( MUR - MLU ) ) ) ) ) - CS ) )", "obj1": 0.8685185185185185, "obj2": 0.0509681575107609}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( AMS / FirstVNF_RAM_Server ) ) ) - ( ( ( Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) + ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) ) * PN ) * FirstVNF_CPU_Server ) ) ,( PN + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( Min( ( RCSe - MUM ) ,( CS / MUC ) ) - ( ( ( ( CS + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - Max( MUC,Min( ( MUC - CS ) ,MUR ) ) ) )", "obj1": 0.8351851851851851, "obj2": 0.07066200744373284}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( ( ( MUR / MUC ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.9092592592592592, "obj2": 0.03918922878525516}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + BR ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( Min( RMSe ,DS ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( DS * RCSe ) ) ) - RMSe ) ,( MUC / RMSe ) )", "obj1": 0.4, "obj2": 0.4147035734265451}, {"determining": "Min( ( ( Max( FirstVNF_RAM,Min( ( ACS - MDR ) ,PN ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem - FirstVNF_Mem_Server ) ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MUC - CS ) - ( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) * RCSe ) ) + RMSe )", "obj1": 0.7722222222222223, "obj2": 0.10046694204831037}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + FirstVNF_Mem ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + CS ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5907407407407408, "obj2": 0.24108557545226192}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( ( MUR * DS ) + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( MUR / MUC ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5981481481481481, "obj2": 0.22854502965660486}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( MRS / AMS ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3213765063620471}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.47235674044773607}, {"determining": "( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - Max( PN,( DDR / FirstVNF_Mem_Server ) ) ) - ( PN * Const ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,MDR ) + ( FirstVNF_RAM_Server / ACS ) ) * CRS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS - ( ( CS * CS ) - RRSe ) ) + Min( Min( ( MUR / RRSe ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( ( ( Min( DS ,MUM ) - MUM ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7574074074074074, "obj2": 0.1058296011408691}, {"determining": "Min( ( PN - ( MDR * Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.6666666666666666, "obj2": 0.18097372111307564}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( ( FirstVNF_Mem - DDR ) - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( Max( ( ( MLU + ( RCSe / MLU ) ) * DS ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS / RCSe ) ),RCSe ) ) ) ) ) - ( MUM + ( RRSe * ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) * CS ) * ( Min( ( RMSe + CS ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUC ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.9740740740740741, "obj2": 0.012935486747092972}, {"determining": "Min( ( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( DDR + PN ) ) ),RRS ) ) * ( PN * ( ( Min( Min( FirstVNF_CPU_Server ,Max( AMS,ARS ) ) ,RRS ) + PN ) - MDR ) ) ) ,( ( Min( PN ,( FirstVNF_Mem - MDR ) ) / FirstVNF_CPU ) - MDR ) )", "choosing": "Min( ( ( ( RRSe - ( RRSe - DS ) ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - MUM ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.8, "obj2": 0.08371763725482112}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / ( ( ( PN * CRS ) * Min( ARS ,PN ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) - ( ( MUC + RCSe ) + MUM ) )", "obj1": 0.5259259259259259, "obj2": 0.2968217679057646}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4148148148148148, "obj2": 0.3939946671015721}], "36": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server + RRS ) / Max( FirstVNF_CPU_Server,CRS ) ) - FirstVNF_Mem ),Const ) / ( ( ( CRS + ACS ) - ( FirstVNF_Mem_Server / Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / ( MRS * Const ) ) ) )", "choosing": "Min( Max( RMSe,Min( Max( MUC,Min( ( ( CS + MUR ) + Max( DS,( DS / RMSe ) ) ) ,MUR ) ) ,( ( MUM + CS ) + CS ) ) ) ,( MUC / ( ( MUR - Max( ( ( Min( RRSe ,RCSe ) / MUR ) + CS ),DS ) ) * ( ( ( Min( ( MLU * DS ) ,( RRSe * DS ) ) - MUM ) / MLU ) * ( ( DS * DS ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( MDR + FirstVNF_RAM ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS + CRS ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS * MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( CS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( Max( ( ( MDR / Const ) - FirstVNF_Mem ),Const ) / ( ( ( ACS + CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( ( Min( ( MUM / MUR ) ,( MUC * MUM ) ) / Min( ( MUR - RCSe ) ,( RCSe - CS ) ) ),MUC ) / RMSe ) - RCSe ) ) - ( ( RCSe / DS ) - ( DS * RMSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.45102232965911915}, {"determining": "Min( ( MDR * CRS ) ,( CRS - ( MDR * Min( ( FirstVNF_RAM + ( DDR * ( Const - ( MDR * BR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( RRSe / MUR ) / Max( ( ( DS / Max( RMSe,CS ) ) * ( RRSe - MUR ) ),( CS + Max( ( DS / MUC ),MUC ) ) ) ) - RMSe ) ,( ( Max( Min( ( RCSe - CS ) ,( MUC - ( RCSe / MUC ) ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.2504829459843906}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6925925925925925, "obj2": 0.15763356817628862}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( PN - ( Min( ( ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( ( Max( ( CRS + PN ),Max( CRS,ARS ) ) - FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( RMSe + RRSe ) + Max( RMSe,( Min( DS ,( DS + DS ) ) * MUC ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5907407407407408, "obj2": 0.23452687500379654}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUR / Max( CS,( RRSe / RRSe ) ) ) ,DS ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6748157810617974}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( MUR + MUC ),( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3055555555555556, "obj2": 0.5343696794927749}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "( ( BR / ( MRS * FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_Mem_Server,DDR ) ) ,( RRS + ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) * DS ) / MUR ) - ( RMSe + MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6554381189185627}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( ( DDR - ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) ) - MDR ) ,Max( ARS,( Const * MRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( ( RRSe / MUM ) + RCSe ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.03200961690902581}, {"determining": "Min( ( ( Max( ( RRS + CRS ),( Const + Max( CRS,DDR ) ) ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( ( CRS / MDR ) / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Min( RRS ,DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MRS ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * DDR ) ) ,( ( CRS - Const ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + ( CS - Min( ( ( Max( MUC,CS ) - MUM ) / ( RRSe + Min( MUM ,RMSe ) ) ) ,( RMSe + MUM ) ) ) ) - CS ) ,( ( RRSe * RMSe ) / ( ( MLU * ( RRSe * RMSe ) ) / CS ) ) )", "obj1": 0.8666666666666667, "obj2": 0.05622041982997121}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( RRS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Max( FirstVNF_CPU,CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) / DS ) ) - CS ) ,( RCSe - ( RMSe - MUC ) ) )", "obj1": 0.4925925925925926, "obj2": 0.32999649276476367}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( DDR + ( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Max( ( CRS * BR ),RRS ) - PN ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Min( FirstVNF_Mem ,( ( ( ARS / BR ) / FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( MLU + MUM ) - Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU * RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.524665297907655}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUC ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( DS,RRSe ) ) * CS ) + Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5686998540034803}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,MDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( DS ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( Min( PN ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.1963244051031496}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,Min( Min( MRS ,Min( ( PN - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_Mem_Server * Const ) - ( DDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( PN - ( FirstVNF_Mem_Server * FirstVNF_CPU ) ) ) ,( CRS * ARS ) ) ) + Max( ARS,CRS ) ) ) )", "choosing": "( ( MUR / ( ( ( ( ( CS / MUC ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) * Max( ( ( RRSe * RCSe ) - MLU ),( Max( MUR,( MUM / RMSe ) ) - MLU ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.937037037037037, "obj2": 0.029332677123688488}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( ( ( CS + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8462962962962963, "obj2": 0.06561206463703595}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.015334582916666516}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_RAM_Server + RRS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - MDR ) ) ,PN )", "choosing": "Min( ( ( DS + MUC ) / ( ( ( Min( RRSe ,( RMSe * ( MUR + DS ) ) ) + Min( RCSe ,Min( Min( RMSe ,DS ) ,( MLU - RCSe ) ) ) ) - MUR ) * CS ) ) ,Min( ( DS - ( Max( ( ( ( RRSe * MUR ) / RMSe ) - ( ( RCSe / MUC ) * DS ) ),Min( MUM ,CS ) ) * ( MUC - MLU ) ) ) ,( RCSe - MUM ) ) )", "obj1": 0.55, "obj2": 0.2735186767677442}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( AMS * Max( FirstVNF_CPU,Min( BR ,ACS ) ) ) ,( PN - ( Min( ( ARS * PN ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( RCSe - RRSe ) ,( ( ( ( DS * CS ) / Min( Max( ( Max( RCSe,RRSe ) - RRSe ),RRSe ) ,DS ) ) + MUM ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.19444444444444445, "obj2": 0.6956861288923931}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( DDR + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) )", "obj1": 0.6759259259259259, "obj2": 0.1667522083322297}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( FirstVNF_RAM - Max( Min( Const ,( FirstVNF_RAM - ( CRS + PN ) ) ),RRS ) ) * ( PN * ( FirstVNF_RAM + FirstVNF_CPU_Server ) ) ) )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5407407407407407, "obj2": 0.2801452540213724}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_RAM - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( MUR / ( ( ( ( ( MUR / MUC ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3574074074074074, "obj2": 0.47559207936635556}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( DDR + ( ACS / FirstVNF_RAM_Server ) ) * PN ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) + MUC ) / RMSe ) ,MUR ) )", "obj1": 0.6796296296296296, "obj2": 0.1636906560497583}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( Min( Max( MDR,ACS ) ,Min( ( ( Max( FirstVNF_Mem,Min( DDR ,Min( FirstVNF_Mem ,RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + ( RRS - Min( RRS ,AMS ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( DS - MLU ) ,( RRSe + MUC ) ) ) ) - DS ) ) - CS ) ,( ( MUC - Min( ( ( CS - MUR ) + RMSe ) ,MUR ) ) - RMSe ) )", "obj1": 0.5055555555555555, "obj2": 0.3237140480313474}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Max( ( PN + RRS ),FirstVNF_RAM_Server ) ) + PN ) - MDR ) ,PN ) ) ,( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) + ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUR / ( ( CS + Max( MLU,DS ) ) + RRSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5092294148920917}, {"determining": "Min( ( ( Max( PN,( RRS - Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + ( ( MUM + CS ) + ( DS * RCSe ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7888888888888889, "obj2": 0.09225369251723513}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.9481481481481482, "obj2": 0.021004530016811605}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( PN - ( MDR * Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( BR,Const ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( ( DS - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( CS + ( MUR - MLU ) ) ) ) ) - CS ) )", "obj1": 0.562962962962963, "obj2": 0.2610000177620805}, {"determining": "Min( ( MDR - Max( BR,Const ) ) ,Max( Const,MRS ) )", "choosing": "Min( ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( ( MUM * DS ) * ( CS - MUC ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17978275301840438}, {"determining": "( AMS / ( ( ( ( ( Const + Min( FirstVNF_RAM ,AMS ) ) - BR ) + ( PN * ARS ) ) - DDR ) - ACS ) )", "choosing": "Min( ( ( ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / MUM ) ) - DS ) + ( MLU - RRSe ) ) - CS ) ,( ( ( MUC + ( ( MLU - RCSe ) * MUM ) ) * Min( ( ( ( RCSe * Min( MLU ,MLU ) ) + MLU ) - DS ) ,MUC ) ) - ( ( RRSe + ( Min( MLU ,( MUR / MUM ) ) * RRSe ) ) * Max( RCSe,( RRSe * RRSe ) ) ) ) )", "obj1": 0.9, "obj2": 0.042490919309632426}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.36666666666666664, "obj2": 0.47235674044773607}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - ( ( FirstVNF_Mem_Server / ARS ) - FirstVNF_CPU_Server ) ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * FirstVNF_Mem ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + ( RCSe * RCSe ) ) + MUC ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.337037037037037, "obj2": 0.49669927465590613}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.36902439548094107}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( CRS * ARS ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( Min( RMSe ,( RCSe / ( DS * RRSe ) ) ) - ( MUR - ( ( ( ( MUR * DS ) + ( RMSe + MUC ) ) + MUM ) * CS ) ) ) - CS ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335407}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.046477229389075767}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.37777777777777777, "obj2": 0.465842845048812}, {"determining": "Min( ( PN - ( Min( ( PN * ARS ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( Max( BR,Const ) / ARS ),FirstVNF_CPU ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7148901955654536}, {"determining": "Min( ( PN - ( MDR * Min( Max( ( Min( ( ACS - AMS ) ,PN ) - ( AMS - FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( RMSe / ( MUR + RMSe ) ) - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Max( BR,DDR ) ,( ( ( CRS + ( Max( ( Max( BR,Const ) / ARS ),FirstVNF_CPU ) + PN ) ) - DDR ) - ( ( MRS * PN ) - DDR ) ) )", "choosing": "Min( ( MLU - RMSe ) ,( ( RMSe + MUM ) / Min( ( Min( ( Min( RMSe ,DS ) + Min( ( MUC - DS ) ,MUC ) ) ,MUR ) * MUR ) ,DS ) ) )", "obj1": 0.13333333333333333, "obj2": 0.7757060395839255}, {"determining": "Min( ( PN - ( MDR * Min( ( FirstVNF_RAM - ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - ( FirstVNF_RAM / ( BR / FirstVNF_Mem ) ) ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + ( MUR / RMSe ) ) - ( MUR - ( ( ( CS + ( MUC + MUC ) ) + MUM ) * ( ( RCSe / MUM ) + ( MUR - MLU ) ) ) ) ) - CS ) )", "obj1": 0.8685185185185185, "obj2": 0.0509681575107609}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "( CRS / ( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.681717090601278}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( RRS - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / FirstVNF_Mem_Server ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( CS * ( MUR * MUC ) ) ) + RMSe ) * DS ) ) - ( ( MUC + RCSe ) + MUM ) )", "obj1": 0.5277777777777778, "obj2": 0.29587068085142876}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.6611111111111111, "obj2": 0.18404496443014012}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,ARS ) * ( PN / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MLU + Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7981481481481482, "obj2": 0.08834083596991343}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( Min( ( Min( Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8833333333333333, "obj2": 0.04340882297443494}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( RCSe - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.46111111111111114, "obj2": 0.3544274404331745}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( ( ( MUR / MUC ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.9092592592592592, "obj2": 0.03918922878525516}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( RRS / ARS ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3974373190700421}, {"determining": "Min( ( PN - ( Min( MDR ,( FirstVNF_Mem_Server / CRS ) ) * MDR ) ) ,( ( ( CRS + ( Max( DDR,( FirstVNF_RAM / ARS ) ) + PN ) ) - DDR ) - ( ACS * PN ) ) )", "choosing": "Min( ( DS - RMSe ) ,( CS - ( ( RRSe - Min( ( RRSe - RRSe ) ,( DS - RMSe ) ) ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MLU - DS ) ,DS ) ) ) ) )", "obj1": 0.6092592592592593, "obj2": 0.22438400714341944}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( ( FirstVNF_Mem - DDR ) - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / MUM ) ) - DS ) ) - CS ) ,( ( ( MUC - ( ( MLU - RCSe ) * MUM ) ) * Min( ( ( ( RCSe * Min( MLU ,MLU ) ) + MLU ) - DS ) ,MUC ) ) - RMSe ) )", "obj1": 0.9518518518518518, "obj2": 0.020344500488115678}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( ( PN - ( ( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) + FirstVNF_CPU ) * MDR ) ) ,( MDR - ( ( ( FirstVNF_Mem * BR ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),MUM ) ) - ( ( MUM / MLU ) + Min( MUM ,RMSe ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUM ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.1909412257877596}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( CS - MUM ) - ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / DS ) ,( RRSe + Max( RCSe,( MUM / RRSe ) ) ) ) ) )", "obj1": 0.37222222222222223, "obj2": 0.4673488157318103}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08299208254034236}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "Min( ( MUR - Max( ( RCSe + ( MLU * Max( ( ( RMSe - RCSe ) / MLU ),RRSe ) ) ),MLU ) ) ,( RCSe - RMSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "Min( ( PN - ( Max( MDR,( ACS * MRS ) ) * MDR ) ) ,( Max( ( CRS + ( PN + Max( ( FirstVNF_RAM / ARS ),DDR ) ) ),DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( MUC * ( Max( ( Min( CS ,( CS + CS ) ) - ( MUC * ( MUM / ( CS / MLU ) ) ) ),RMSe ) / MUC ) ) )", "obj1": 0.6148148148148148, "obj2": 0.21351236378627164}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( CRS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - ( ( MRS - AMS ) + ( Const / ( MDR - DDR ) ) ) ) / ( ( ( PN * CRS ) * Min( ARS ,PN ) ) + FirstVNF_Mem_Server ) ) )", "choosing": "( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) - ( ( MUC + RCSe ) + MUM ) )", "obj1": 0.5259259259259259, "obj2": 0.2968217679057646}, {"determining": "( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - Max( PN,( DDR / FirstVNF_Mem_Server ) ) ) - ( PN * Const ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,MDR ) + ( FirstVNF_RAM_Server / ACS ) ) * CRS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS - ( ( CS * CS ) - RRSe ) ) + Min( Min( ( MUR / RRSe ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( ( ( Min( DS ,MUM ) - MUM ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7574074074074074, "obj2": 0.1058296011408691}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( Min( ( ( Max( FirstVNF_Mem,Min( DDR ,Min( FirstVNF_Mem ,RRS ) ) ) + PN ) - MDR ) ,PN ) - MDR ) )", "choosing": "( ( ( CS - MUC ) - ( DS * RMSe ) ) - ( CS - Min( ( MUR / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( DS,RRSe ) ) * CS ) + Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12550545041337138}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( MRS / AMS ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) - DS ) ) - CS ) ,Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) )", "obj1": 0.5092592592592593, "obj2": 0.3213765063620471}], "37": [{"determining": "( ( ( ( ACS - CRS ) - ( ( CRS - ( ARS * Const ) ) * AMS ) ) - Min( MRS ,Min( FirstVNF_RAM_Server ,Min( Min( Const ,DDR ) ,FirstVNF_RAM_Server ) ) ) ) / Max( ( FirstVNF_Mem_Server / ( Min( ( ( ( ARS * ACS ) / ( CRS + ACS ) ) - ( ( AMS / FirstVNF_Mem ) * ( ARS / FirstVNF_RAM_Server ) ) ) ,Max( FirstVNF_RAM_Server,( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem_Server ) ),( FirstVNF_RAM + PN ) ) )", "choosing": "( ( ( RMSe / MUC ) / ( DS * ( RMSe * ( MUR * MUC ) ) ) ) - ( RMSe + ( ( RRSe - RCSe ) * RRSe ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( Max( ( ( ( FirstVNF_CPU_Server + RRS ) / Max( FirstVNF_CPU_Server,CRS ) ) - FirstVNF_Mem ),Const ) / ( ( ( CRS + ACS ) - ( FirstVNF_Mem_Server / Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / ( MRS * Const ) ) ) )", "choosing": "Min( Max( RMSe,Min( Max( MUC,Min( ( ( CS + MUR ) + Max( DS,( DS / RMSe ) ) ) ,MUR ) ) ,( ( MUM + CS ) + CS ) ) ) ,( MUC / ( ( MUR - Max( ( ( Min( RRSe ,RCSe ) / MUR ) + CS ),DS ) ) * ( ( ( Min( ( MLU * DS ) ,( RRSe * DS ) ) - MUM ) / MLU ) * ( ( DS * DS ) + DS ) ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( ( ( Max( PN,( RRS - Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - AMS ) ) ,MDR ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( MRS - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - ( CS + Min( DS ,( RCSe + CS ) ) ) ) ) - ( ( MUM / MLU ) + ( ( MUM + CS ) + ( DS * RCSe ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( ( DS - RMSe ) * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RRSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7870370370370371, "obj2": 0.09200142449909124}, {"determining": "( Max( ( ( MDR / Const ) - FirstVNF_Mem ),Const ) / ( ( ( ACS + CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( ( Min( ( MUM / MUR ) ,( MUC * MUM ) ) / Min( ( MUR - RCSe ) ,( RCSe - CS ) ) ),MUC ) / RMSe ) - RCSe ) ) - ( ( RCSe / DS ) - ( DS * RMSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.45102232965911915}, {"determining": "( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - Max( PN,( DDR / FirstVNF_Mem_Server ) ) ) - ( PN * Const ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,MDR ) + ( FirstVNF_RAM_Server / ACS ) ) * CRS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS - ( ( CS * CS ) - RRSe ) ) + Min( Min( ( MUR / RRSe ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( ( ( Min( DS ,MUM ) - MUM ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7574074074074074, "obj2": 0.1058296011408691}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,FirstVNF_RAM ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( MUC / CS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6744499721926877}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( RCSe - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.46111111111111114, "obj2": 0.3544274404331745}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( MUR + MUC ),( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3055555555555556, "obj2": 0.5343696794927749}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "( ( BR / ( MRS * FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_Mem_Server,DDR ) ) ,( RRS + ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) * DS ) / MUR ) - ( RMSe + MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6554381189185627}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Max( ( PN + RRS ),FirstVNF_RAM_Server ) ) + PN ) - MDR ) ,PN ) ) ,( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) + ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUR / ( ( CS + Max( MLU,DS ) ) + RRSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5092294148920917}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( DDR + ( FirstVNF_Mem * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Max( ( CRS * BR ),RRS ) - PN ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Min( FirstVNF_Mem ,( ( ( ARS / BR ) / FirstVNF_CPU ) * ARS ) ) ) )", "choosing": "( ( MLU + MUM ) - Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU * RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) )", "obj1": 0.3148148148148148, "obj2": 0.524665297907655}, {"determining": "Min( ( ( Const * BR ) + FirstVNF_RAM_Server ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * FirstVNF_RAM ) + PN ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( ( ( ( MLU / MUR ) * ( Max( RMSe,MUR ) / CS ) ) * Max( ( Max( RCSe,DS ) * ( MUC - MUM ) ),MUC ) ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) )", "obj1": 0.29444444444444445, "obj2": 0.5618277073202097}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( Min( PN ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.1963244051031496}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( PN - ( MDR * Min( Max( ARS,FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( BR,Const ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( ( DS - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( CS + ( MUR - MLU ) ) ) ) ) - CS ) )", "obj1": 0.562962962962963, "obj2": 0.2610000177620805}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( BR / FirstVNF_CPU ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR / PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + ( Const * ( FirstVNF_Mem + AMS ) ) ) ) - DDR ) - MDR ) + ( ARS - CRS ) ) )", "choosing": "( ( ( Max( CS,( RMSe + Max( RCSe,Max( RCSe,MUR ) ) ) ) / Max( ( CS + DS ),Min( MLU ,( Max( RMSe,Max( MLU,RMSe ) ) - Max( MUC,CS ) ) ) ) ) / Min( ( MUR - MLU ) ,Min( MUM ,RMSe ) ) ) - ( MUR / ( ( ( ( ( MUR / MUC ) * RRSe ) - MUM ) - ( MLU + ( RMSe + ( RMSe - Min( MUR ,MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.8333333333333334, "obj2": 0.07410351202476632}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( ( ( MUR / MUC ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.9092592592592592, "obj2": 0.03918922878525516}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( ( Const + DDR ) + RRS ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS - Max( MUM,( CS * MUR ) ) ) ,( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,MLU ) ) ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06164888599478101}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( Min( ( ( Max( FirstVNF_Mem,Min( DDR ,Min( FirstVNF_Mem ,RRS ) ) ) + PN ) - MDR ) ,PN ) - MDR ) )", "choosing": "( ( ( CS - MUC ) - ( DS * RMSe ) ) - ( CS - Min( ( MUR / ( RRSe + Max( DS,DS ) ) ) ,( RRSe + ( ( ( Min( RMSe ,MUM ) / Max( DS,RRSe ) ) * CS ) + Max( RRSe,RCSe ) ) ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12550545041337138}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( DDR - ( CRS + Min( Max( ( FirstVNF_RAM / ARS ),DDR ) ,PN ) ) ) - MDR ) ,( BR * FirstVNF_RAM_Server ) )", "choosing": "Min( Min( ( Min( Min( DS ,( Max( MUC,MLU ) * MLU ) ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,( CS + ( MUM * Min( MUC ,RRSe ) ) ) ) ,( ( MUR / MUC ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8962962962962963, "obj2": 0.039956205589065666}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR * PN ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( MUR,MLU ) ) ) ) ) ) - CS ) ,( RCSe - MUC ) )", "obj1": 0.7018518518518518, "obj2": 0.15330431295936378}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( Min( ARS ,Min( ( Const - FirstVNF_CPU ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( Min( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),Min( ( ( DS * MUC ) * ( MLU - ( MUM / RRSe ) ) ) ,MUR ) ) ,RCSe ) - RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.2504829459843906}, {"determining": "Min( Min( MRS ,( ( ( Max( DDR,( FirstVNF_Mem_Server * FirstVNF_CPU ) ) + PN ) - MDR ) - PN ) ) ,( Max( RRS,Const ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.14074074074074075, "obj2": 0.7641221623220569}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.36902439548094107}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8111111111111111, "obj2": 0.08299208254034236}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( ( PN - ( ( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) + FirstVNF_CPU ) * MDR ) ) ,( MDR - ( ( ( FirstVNF_Mem * BR ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),MUM ) ) - ( ( MUM / MLU ) + Min( MUM ,RMSe ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUM ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.1909412257877596}, {"determining": "Min( ( ( FirstVNF_CPU / FirstVNF_Mem ) + FirstVNF_RAM ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),Max( FirstVNF_RAM,DDR ) ) + PN ) ) - Const ) - MDR ) )", "choosing": "Min( ( MUR - Max( ( RCSe + ( MLU * Max( ( ( RMSe - RCSe ) / MLU ),RRSe ) ) ),MLU ) ) ,( RCSe - RMSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004567851092855699}, {"determining": "Min( ( AMS * Max( FirstVNF_CPU,Min( BR ,ACS ) ) ) ,( PN - ( Min( ( ARS * PN ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( RCSe - RRSe ) ,( ( ( ( DS * CS ) / Min( Max( ( Max( RCSe,RRSe ) - RRSe ),RRSe ) ,DS ) ) + MUM ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.19444444444444445, "obj2": 0.6956861288923931}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( DDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Max( ( CRS * BR ),RRS ) - PN ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( ( CS + ( MUC - ( ( MLU - RCSe ) * MUM ) ) ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) )", "obj1": 0.34074074074074073, "obj2": 0.49571545828840025}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( ( MDR * CRS ) ,( CRS - ( MDR * Min( ( FirstVNF_RAM + ( DDR * ( Const - ( MDR * BR ) ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( RRSe / MUR ) / Max( ( ( DS / Max( RMSe,CS ) ) * ( RRSe - MUR ) ),( CS + Max( ( DS / MUC ),MUC ) ) ) ) - RMSe ) ,( ( Max( Min( ( RCSe - CS ) ,( MUC - ( RCSe / MUC ) ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.2504829459843906}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( RRS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Max( FirstVNF_CPU,CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( MUM / Min( ( CS - MUC ) ,( MUC - MUR ) ) ) ) / DS ) ) - CS ) ,( RCSe - ( RMSe - MUC ) ) )", "obj1": 0.4925925925925926, "obj2": 0.32999649276476367}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( ( ( PN + Max( ( PN * MDR ),Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "( ( ( CS - MUM ) * ( ( CS + ( MUR - MLU ) ) * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7333333333333333, "obj2": 0.11820050068573652}, {"determining": "Min( ( MDR - Max( BR,Const ) ) ,Max( Const,MRS ) )", "choosing": "Min( ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( ( MUM * DS ) * ( CS - MUC ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17978275301840438}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( FirstVNF_Mem - MDR ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9222222222222223, "obj2": 0.03368837427513133}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( PN - ( Min( ( ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( ( Max( ( CRS + PN ),Max( CRS,ARS ) ) - FirstVNF_Mem ) - MDR ) )", "choosing": "Min( ( ( RMSe + RRSe ) + Max( RMSe,( Min( DS ,( DS + DS ) ) * MUC ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5907407407407408, "obj2": 0.23452687500379654}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.6611111111111111, "obj2": 0.1839654761092085}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( MRS * AMS ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,( DDR * DDR ) ) * MDR ) ) ,( ( Max( ( CRS + PN ),Max( CRS,ARS ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RMSe - Max( RCSe,( RRSe / Max( ( RMSe + RRSe ),Min( MUR ,RCSe ) ) ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MLU * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5907407407407408, "obj2": 0.23452687500379654}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.36902439548094107}, {"determining": "Min( ( PN - ( Min( ( ( Max( FirstVNF_CPU,DDR ) * CRS ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ACS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Max( ( RMSe - ( DS + RCSe ) ),( Min( MUM ,RCSe ) + ( Max( MUR,MUM ) + ( DS + RCSe ) ) ) ) - MLU ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.0529782673155617}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.22592592592592592, "obj2": 0.6531862505300444}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( ( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) / ( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( ARS * MDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( Min( ( Min( Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ,( RCSe - MUM ) ) - ( ( MUM - ( RCSe - DS ) ) - DS ) ) ,Max( CS,MUC ) ) ,( ( MUC - CS ) - ( ( Max( DS,DS ) / ( ( MUR * RCSe ) - Max( MUR,( MUM / ( MLU - CS ) ) ) ) ) * RCSe ) ) )", "obj1": 0.8833333333333333, "obj2": 0.043408822974434935}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - ( ( FirstVNF_Mem_Server / ARS ) - FirstVNF_CPU_Server ) ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * FirstVNF_Mem ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + ( RCSe * RCSe ) ) + MUC ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.337037037037037, "obj2": 0.49669927465590613}, {"determining": "( ( ACS - ( PN * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( DDR + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.17068485729612795}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "Min( ( Min( FirstVNF_CPU ,BR ) - DDR ) ,( ( ( DDR - Min( Max( ( PN + Max( PN,DDR ) ),PN ) ,( Max( ( CRS * BR ),RRS ) - PN ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( CS ,( Min( Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) ,RMSe ) * RRSe ) )", "obj1": 0.8203703703703704, "obj2": 0.07866144977918575}, {"determining": "( CRS / ( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + ( Max( RCSe,( CS / MUM ) ) - DS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.681717090601278}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_RAM_Server + RRS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - MDR ) ) ,PN )", "choosing": "Min( ( ( DS + MUC ) / ( ( ( Min( RRSe ,( RMSe * ( MUR + DS ) ) ) + Min( RCSe ,Min( Min( RMSe ,DS ) ,( MLU - RCSe ) ) ) ) - MUR ) * CS ) ) ,Min( ( DS - ( Max( ( ( ( RRSe * MUR ) / RMSe ) - ( ( RCSe / MUC ) * DS ) ),Min( MUM ,CS ) ) * ( MUC - MLU ) ) ) ,( RCSe - MUM ) ) )", "obj1": 0.55, "obj2": 0.2735186767677442}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( ( ( CS + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8462962962962963, "obj2": 0.06561206463703595}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "Min( ( PN - ( MDR * Min( ( FirstVNF_RAM - ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - ( FirstVNF_RAM / ( BR / FirstVNF_Mem ) ) ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + ( MUR / RMSe ) ) - ( MUR - ( ( ( CS + ( MUC + MUC ) ) + MUM ) * ( ( RCSe / MUM ) + ( MUR - MLU ) ) ) ) ) - CS ) )", "obj1": 0.8685185185185185, "obj2": 0.0509681575107609}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( Max( MRS,AMS ) ,Min( MRS ,Min( PN ,( MDR / BR ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Max( MUR,MUM ) + MUM ) + MUM ) / ( MUR - ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.5, "obj2": 0.32904604120869685}, {"determining": "( CRS / ( ( ( ( FirstVNF_CPU_Server - MDR ) + Min( PN ,MDR ) ) - DDR ) - MDR ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.022159185759137206}, {"determining": "( CRS / ( ( ( ( PN * ARS ) + Min( ( ( FirstVNF_Mem - DDR ) - ( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) ,PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MLU - RRSe ) + ( Max( RCSe,( ( DS - ( DS * RMSe ) ) / MUM ) ) - DS ) ) - CS ) ,( MUR - MLU ) )", "obj1": 0.975925925925926, "obj2": 0.010905961083748198}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MDR ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( ( ( ( DS - MLU ) + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.9666666666666667, "obj2": 0.013022546226504696}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,ARS ) * ( PN / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MLU + Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7981481481481482, "obj2": 0.08834083596991343}, {"determining": "Min( ( PN - ( Max( MDR,( ACS * MRS ) ) * MDR ) ) ,( Max( ( CRS + ( PN + Max( ( FirstVNF_RAM / ARS ),DDR ) ) ),DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( MUC * ( Max( ( Min( CS ,( CS + CS ) ) - ( MUC * ( MUM / ( CS / MLU ) ) ) ),RMSe ) / MUC ) ) )", "obj1": 0.6148148148148148, "obj2": 0.21351236378627164}, {"determining": "Min( ( ( Max( PN,( CRS - Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) ) + ( ( Max( FirstVNF_CPU,MDR ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + ( ( MUM + CS ) + ( DS * RCSe ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( RRSe * MUC ) ) ) ) ) + ( CS * MUC ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8, "obj2": 0.08622037663429345}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( RRS / ARS ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3974373190700421}, {"determining": "Min( ( PN - ( Min( MDR ,( FirstVNF_Mem_Server / CRS ) ) * MDR ) ) ,( ( ( CRS + ( Max( DDR,( FirstVNF_RAM / ARS ) ) + PN ) ) - DDR ) - ( ACS * PN ) ) )", "choosing": "Min( ( DS - RMSe ) ,( CS - ( ( RRSe - Min( ( RRSe - RRSe ) ,( DS - RMSe ) ) ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MLU - DS ) ,DS ) ) ) ) )", "obj1": 0.6092592592592593, "obj2": 0.22438400714341944}, {"determining": "Min( ( PN - ( Min( ( PN * ARS ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( Max( BR,Const ) / ARS ),FirstVNF_CPU ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.17407407407407408, "obj2": 0.7148901955654536}, {"determining": "Min( ( PN - ( Min( ( PN * ARS ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( ( DDR / ( FirstVNF_RAM + FirstVNF_Mem_Server ) ) + ( PN / Max( ( Max( MDR,Const ) / ARS ),FirstVNF_CPU ) ) ) - DDR ) - ( ( BR * PN ) - DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Max( RCSe,( CS + ( ( ( MUC + MUR ) - ( MUM / Min( CS ,CS ) ) ) + ( RMSe / MLU ) ) ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7713455245248994}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) / ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02718069223874117}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Min( ( Max( BR,Const ) - MDR ) ,FirstVNF_RAM ) ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( ( ( MUM + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.825925925925926, "obj2": 0.07699193050641687}, {"determining": "Min( ( PN - ( MDR * Min( Max( ( Min( ( ACS - AMS ) ,PN ) - ( AMS - FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( RMSe / ( MUR + RMSe ) ) - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}], "38": [{"determining": "Min( Min( MRS ,Min( ( MDR - Max( CRS,AMS ) ) ,PN ) ) ,( ( Min( ( ( Min( ACS ,MRS ) * CRS ) / CRS ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( Max( Max( ARS,Const ),FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8265317343186652}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "( Max( ( ( MDR / Const ) - FirstVNF_Mem ),Const ) / ( ( ( ACS + CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ) ) )", "choosing": "( ( MUM + ( ( Max( ( Min( ( MUM / MUR ) ,( MUC * MUM ) ) / Min( ( MUR - RCSe ) ,( RCSe - CS ) ) ),MUC ) / RMSe ) - RCSe ) ) - ( ( RCSe / DS ) - ( DS * RMSe ) ) )", "obj1": 0.3925925925925926, "obj2": 0.45102232965911915}, {"determining": "( ( ACS - ( PN * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( DDR + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ) )", "obj1": 0.6722222222222223, "obj2": 0.17068485729612795}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "( ( ACS - ( PN * ( FirstVNF_RAM - FirstVNF_Mem_Server ) ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_Mem_Server ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( RRS / ( ARS / PN ) ) / Min( FirstVNF_CPU_Server ,( MDR / MDR ) ) ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,Max( ( ( MUR * RRSe ) - MUM ),( Max( ( ( RCSe - ( MUR + CS ) ) / RMSe ),MUR ) + RRSe ) ) ) )", "obj1": 0.6962962962962963, "obj2": 0.15485082722433585}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( RCSe - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.46111111111111114, "obj2": 0.3544274404331745}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( MUR + MUC ),( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3055555555555556, "obj2": 0.5343696794927749}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( ( PN - ( Max( MDR,FirstVNF_Mem_Server ) * MDR ) ) ,( Max( ( CRS + ( PN + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) ),DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( MUC * ( Max( Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ),RMSe ) / MUC ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11246203547054728}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( RRS / ARS ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( MUM ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3974373190700421}, {"determining": "Min( Min( PN ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.1963244051031496}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( Const - MRS ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) ,( MUC / RCSe ) )", "obj1": 0.5092592592592593, "obj2": 0.3283853803638106}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( ( Const + DDR ) + RRS ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Min( ( DS - Max( MUM,( CS * MUR ) ) ) ,( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,MLU ) ) ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06164888599478101}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - MDR ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + ( ( MUM + CS ) + ( DS * RCSe ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.018144315282191285}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( ACS - CRS ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( RCSe - RMSe ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5833333333333334, "obj2": 0.24433823022745388}, {"determining": "Min( ( ( Max( PN,( RRS - Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - AMS ) ) ,MDR ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( MRS - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - ( CS + Min( DS ,( RCSe + CS ) ) ) ) ) - ( ( MUM / MLU ) + ( ( MUM + CS ) + ( DS * RCSe ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( ( DS - RMSe ) * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RRSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7870370370370371, "obj2": 0.09200142449909124}, {"determining": "( CRS / ( ( ( ( FirstVNF_CPU_Server - MDR ) + Min( PN ,MDR ) ) - DDR ) - MDR ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.022159185759137206}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( PN - ( MDR * Min( ( FirstVNF_RAM - ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - ( FirstVNF_RAM / ( BR / FirstVNF_Mem ) ) ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( ( ( CS + ( MUR / RMSe ) ) - ( MUR - ( ( ( CS + ( MUC + MUC ) ) + MUM ) * ( ( RCSe / MUM ) + ( MUR - MLU ) ) ) ) ) - CS ) )", "obj1": 0.8685185185185185, "obj2": 0.0509681575107609}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.36902439548094107}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,Max( ( Max( MDR,Const ) / ARS ),FirstVNF_CPU ) ) + ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,( ( MUC * MLU ) / MUC ) ) ) - Min( RCSe ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - ( RMSe + MUM ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6734433701802046}, {"determining": "( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - Max( PN,( DDR / FirstVNF_Mem_Server ) ) ) - ( PN * Const ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,MDR ) + ( FirstVNF_RAM_Server / ACS ) ) * CRS ) ) * FirstVNF_RAM ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS - ( ( CS * CS ) - RRSe ) ) + Min( Min( ( MUR / RRSe ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( ( ( Min( DS ,MUM ) - MUM ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7574074074074074, "obj2": 0.1058296011408691}, {"determining": "Min( ( AMS * Max( FirstVNF_CPU,Min( BR ,ACS ) ) ) ,( PN - ( Min( ( ARS * PN ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( RCSe - RRSe ) ,( ( ( ( DS * CS ) / Min( Max( ( Max( RCSe,RRSe ) - RRSe ),RRSe ) ,DS ) ) + MUM ) / Min( ( DS * MUR ) ,DS ) ) )", "obj1": 0.19444444444444445, "obj2": 0.6956861288923931}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - ( PN * Const ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,MDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( Min( ( Min( ( CS + MUC ) ,( RCSe - MUM ) ) - ( ( ( ( ( DS - MLU ) + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10225583770662705}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - FirstVNF_Mem ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,Max( MRS,FirstVNF_RAM ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( Min( MUM ,MUC ) + ( ( Min( Min( ( MUR - RMSe ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21296296296296297, "obj2": 0.662251318061118}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( ( ( MUR / MUC ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.9092592592592592, "obj2": 0.03918922878525516}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( DDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Max( ( CRS * BR ),RRS ) - PN ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( ( CS + ( MUC - ( ( MLU - RCSe ) * MUM ) ) ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) )", "obj1": 0.34074074074074073, "obj2": 0.49571545828840025}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( MDR - Max( BR,Const ) ) ,Max( Const,MRS ) )", "choosing": "Min( ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( ( MUM * DS ) * ( CS - MUC ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17978275301840438}, {"determining": "Min( ( ( ( Min( Max( Min( FirstVNF_CPU_Server ,( FirstVNF_RAM_Server / RRS ) ),AMS ) ,CRS ) + ( Max( PN,MDR ) + ( FirstVNF_RAM / ARS ) ) ) - DDR ) - ( DDR / RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - RMSe ) ) ) - DS ) ,( RCSe - Max( ( RRSe + ( RMSe - Min( RMSe ,MUM ) ) ),Max( MUM,MLU ) ) ) )", "obj1": 0.9907407407407407, "obj2": 0.002219369453937033}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Max( ( PN + RRS ),FirstVNF_RAM_Server ) ) + PN ) - MDR ) ,PN ) ) ,( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) + ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUR / ( ( CS + Max( MLU,DS ) ) + RRSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5092294148920917}, {"determining": "Min( ( PN - ( ( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) + FirstVNF_CPU ) * MDR ) ) ,( MDR - ( ( ( FirstVNF_Mem * BR ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),MUM ) ) - ( ( MUM / MLU ) + Min( MUM ,RMSe ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUM ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.1909412257877596}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( PN + Max( ( PN * MDR ),Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "( ( ( CS - MUM ) * ( ( CS + ( MUR - MLU ) ) * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7333333333333333, "obj2": 0.11820050068573652}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Max( RCSe,( CS + ( ( ( MUC + MUR ) - ( MUM / Min( CS ,CS ) ) ) + ( RMSe / MLU ) ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6682128251603414}, {"determining": "Min( ( PN - ( Min( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - RMSe ) ) ) - DS ) ,( RCSe - Max( ( RRSe + MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.5425925925925926, "obj2": 0.2842000449613313}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.34814814814814815, "obj2": 0.4832853198528614}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.4462962962962963, "obj2": 0.36902439548094107}, {"determining": "( ( BR / ( MRS * FirstVNF_Mem_Server ) ) / Max( FirstVNF_RAM,( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - Max( FirstVNF_Mem_Server,DDR ) ) ,( RRS + ( ( MRS / AMS ) * FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( ( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) * DS ) / MUR ) - ( RMSe + MUM ) )", "obj1": 0.22037037037037038, "obj2": 0.6554381189185627}, {"determining": "Min( ( PN - ( Min( ( ( Max( FirstVNF_CPU,DDR ) * CRS ) + FirstVNF_RAM ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ACS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Max( ( RMSe - ( DS + RCSe ) ),( Min( MUM ,RCSe ) + ( Max( MUR,MUM ) + ( DS + RCSe ) ) ) ) - MLU ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.0529782673155617}, {"determining": "Min( ( ( CRS * MRS ) - ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7719543754415804}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( BR / FirstVNF_CPU ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR / PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + ( Const * ( FirstVNF_Mem + AMS ) ) ) ) - DDR ) - MDR ) + ( ARS - CRS ) ) )", "choosing": "( ( ( Max( CS,( RMSe + Max( RCSe,Max( RCSe,MUR ) ) ) ) / Max( ( CS + DS ),Min( MLU ,( Max( RMSe,Max( MLU,RMSe ) ) - Max( MUC,CS ) ) ) ) ) / Min( ( MUR - MLU ) ,Min( MUM ,RMSe ) ) ) - ( MUR / ( ( ( ( ( MUR / MUC ) * RRSe ) - MUM ) - ( MLU + ( RMSe + ( RMSe - Min( MUR ,MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.8333333333333334, "obj2": 0.07410351202476632}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + ARS ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( CS - MUM ) - ( ( ( ( CS + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8407407407407408, "obj2": 0.06962735866399057}, {"determining": "Min( ( PN - ( MDR * Min( Max( ( Min( ( ACS - AMS ) ,PN ) - ( AMS - FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( RMSe / ( MUR + RMSe ) ) - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - ( ( FirstVNF_Mem_Server / ARS ) - FirstVNF_CPU_Server ) ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * FirstVNF_Mem ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + ( RCSe * RCSe ) ) + MUC ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.337037037037037, "obj2": 0.49669927465590613}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5648148148148148, "obj2": 0.2539294463295277}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) / ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02718069223874117}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR * PN ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( MUR,MLU ) ) ) ) ) ) - CS ) ,( RCSe - MUC ) )", "obj1": 0.7018518518518518, "obj2": 0.15330431295936378}, {"determining": "Min( ( FirstVNF_RAM + Const ) ,( ( ( DDR + PN ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( ( ( DS / Min( RCSe ,Max( MUR,DS ) ) ) + MUM ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12421216267705973}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,ARS ) * ( PN / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MLU + Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7981481481481482, "obj2": 0.08834083596991343}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * ACS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,FirstVNF_RAM ) - PN ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( MRS - Const ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - Min( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( Min( ( CS - DS ) ,( ( MUM + MUR ) + MUC ) ) + ( MUM * RCSe ) ) ) ,RMSe ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( ( DS / MUR ) - Min( CS ,RCSe ) ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5481481481481482, "obj2": 0.27678430737252335}, {"determining": "( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - ( PN * Const ) ) - ( ( ( ( MDR - MDR ) / BR ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,MDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MUC ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( ( ( Min( DS ,MUM ) - MUM ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - ( MUC - CS ) ) + RMSe ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9166666666666666, "obj2": 0.035006192598444605}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( ( FirstVNF_RAM + DDR ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,( Max( MUC,MLU ) * MLU ) ) )", "obj1": 0.29259259259259257, "obj2": 0.5656306635701118}, {"determining": "Min( ( ( ( FirstVNF_CPU_Server * Const ) - FirstVNF_RAM ) - ( Min( ( FirstVNF_RAM + ( ( ( FirstVNF_RAM_Server + RRS ) - ( FirstVNF_Mem * FirstVNF_RAM_Server ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) - MDR ) ) ,PN )", "choosing": "Min( ( ( DS + MUC ) / ( ( ( Min( RRSe ,( RMSe * ( MUR + DS ) ) ) + Min( RCSe ,Min( Min( RMSe ,DS ) ,( MLU - RCSe ) ) ) ) - MUR ) * CS ) ) ,Min( ( DS - ( Max( ( ( ( RRSe * MUR ) / RMSe ) - ( ( RCSe / MUC ) * DS ) ),Min( MUM ,CS ) ) * ( MUC - MLU ) ) ) ,( RCSe - MUM ) ) )", "obj1": 0.55, "obj2": 0.2735186767677442}, {"determining": "Min( Max( MRS,AMS ) ,Min( MRS ,Min( PN ,( MDR / BR ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Max( MUR,MUM ) + MUM ) + MUM ) / ( MUR - ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.5, "obj2": 0.32904604120869685}, {"determining": "( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - ( PN * Const ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,MDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - RMSe ) ) ) - DS ) ,( RCSe - Max( ( RRSe + MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.7759259259259259, "obj2": 0.09791757377979213}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( MRS * AMS ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,( DDR * DDR ) ) * MDR ) ) ,( ( Max( ( CRS + PN ),Max( CRS,ARS ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RMSe - Max( RCSe,( RRSe / Max( ( RMSe + RRSe ),Min( MUR ,RCSe ) ) ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MLU * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5907407407407408, "obj2": 0.23452687500379654}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.825925925925926, "obj2": 0.0766955362209878}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( ( PN - ( Min( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) ) ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.3313384965660881}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( Max( ( CRS + PN ),Max( CRS,ARS ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( MUC / CS ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.575925925925926, "obj2": 0.2491348083390956}, {"determining": "Min( ( ( Max( PN,( RRS - Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,MDR ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + ( ( MUM + CS ) + ( DS * RCSe ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( ( DS - RMSe ) * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.0975354027217301}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6129629629629629, "obj2": 0.21796681732382275}, {"determining": "Min( ( PN - ( Max( MDR,( ACS * MRS ) ) * MDR ) ) ,( Max( ( CRS + ( PN + Max( ( FirstVNF_RAM / ARS ),DDR ) ) ),DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( MUC * ( Max( ( Min( CS ,( CS + CS ) ) - ( MUC * ( MUM / ( CS / MLU ) ) ) ),RMSe ) / MUC ) ) )", "obj1": 0.6148148148148148, "obj2": 0.21351236378627164}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( ( MRS + BR ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( CS + ( ( MUC / RCSe ) - RMSe ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04282708079881687}], "39": [{"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( ( Const + DDR ) + RRS ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - RMSe ) ) ) - DS ) ,( RCSe - Max( ( RRSe + MUM ),Max( MUM,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( CRS,AMS ) ) ,PN ) ) ,( ( Min( ( ( Min( ACS ,MRS ) * CRS ) / CRS ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( Max( Max( ARS,Const ),FirstVNF_RAM_Server ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - ( RMSe + MUM ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.825925925925926, "obj2": 0.07649152658354987}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "( CRS / ( ( ( ( FirstVNF_CPU_Server - MDR ) + Min( PN ,MDR ) ) - DDR ) - MDR ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.022159185759137206}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ) )", "obj1": 0.6, "obj2": 0.22578220633868892}, {"determining": "Min( ( PN - ( ( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) + FirstVNF_CPU ) * MDR ) ) ,( MDR - ( ( ( FirstVNF_Mem * BR ) + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),MUM ) ) - ( ( MUM / MLU ) + Min( MUM ,RMSe ) ) ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUM ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.1909412257877596}, {"determining": "Min( ( PN - ( Min( ( Max( ( MRS / ARS ),DDR ) + PN ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.39444444444444443, "obj2": 0.446238922983169}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( MRS * AMS ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,( DDR * DDR ) ) * MDR ) ) ,( ( Max( ( CRS + PN ),Max( CRS,ARS ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RMSe - Max( RCSe,( RRSe / Max( ( RMSe + RRSe ),Min( MUR ,RCSe ) ) ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MLU * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5907407407407408, "obj2": 0.23452687500379654}, {"determining": "Min( ( MDR - Max( BR,Const ) ) ,Max( Const,MRS ) )", "choosing": "Min( ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( ( MUM * DS ) * ( CS - MUC ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17978275301840438}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( ( ( MUR / MUC ) * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.9092592592592592, "obj2": 0.03918922878525516}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( FirstVNF_RAM + DDR ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,( Max( MUC,MLU ) * MLU ) ) )", "obj1": 0.29259259259259257, "obj2": 0.5656306635701118}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Max( ( PN + RRS ),FirstVNF_RAM_Server ) ) + PN ) - MDR ) ,PN ) ) ,( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) + ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUR / ( ( CS + Max( MLU,DS ) ) + RRSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5092294148920917}, {"determining": "Min( Min( PN ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.1963244051031496}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + ARS ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( CS - MUM ) - ( ( ( ( CS + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8407407407407408, "obj2": 0.06962735866399057}, {"determining": "Min( ( Const / ( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,( ACS + AMS ) ) + Const ) * CRS ) ) * MDR ) ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,ACS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MLU + ( DS * ( MLU + ( ( ( RMSe + MLU ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( Min( MUC ,MLU ) - ( RRSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7242231248051391}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,ARS ) * ( PN / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MLU + Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.012263487077610382}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5648148148148148, "obj2": 0.2539294463295277}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,RMSe ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5018518518518519, "obj2": 0.3249163401024787}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7981481481481482, "obj2": 0.08834083596991343}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR * FirstVNF_Mem ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,Min( Max( Const,MDR ) ,( ACS - CRS ) ) ) ) - DDR ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - DDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( ( Min( Min( ( MUR / DS ) ,Max( CS,RMSe ) ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * Min( MLU ,RMSe ) ) ) - ( RMSe + ( ( ( Max( ( MUR * ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * RRSe ) ) - ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5248748547507153}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( ( MRS + BR ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( CS + ( ( MUC / RCSe ) - RMSe ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04282708079881687}, {"determining": "Min( ( ( Max( FirstVNF_RAM,( RRS - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_Mem_Server / FirstVNF_CPU ) ,ARS ) * Max( ( Min( ( ( AMS / CRS ) - ( FirstVNF_CPU_Server + ACS ) ) ,( RRS * FirstVNF_Mem ) ) - FirstVNF_RAM ),AMS ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS / MUM ) ) ) ,Max( RCSe,MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( Min( MLU ,RCSe ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( ( ( MUC / MUR ) - MUR ) ,( Min( RCSe ,RRSe ) * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MLU + Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.975925925925926, "obj2": 0.008236057149480353}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6129629629629629, "obj2": 0.21796681732382275}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Max( ( PN + RRS ),FirstVNF_RAM_Server ) ) + PN ) - MDR ) ,PN ) ) ,( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) + ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUR / ( ( CS + Max( MLU,DS ) ) + RRSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.769676649580492}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) / ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02718069223874117}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( MUR + MUC ),( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3055555555555556, "obj2": 0.5343696794927749}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - FirstVNF_Mem ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,Max( MRS,FirstVNF_RAM ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( Min( MUM ,MUC ) + ( ( Min( Min( ( MUR - RMSe ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21296296296296297, "obj2": 0.662251318061118}, {"determining": "Min( ( ( CRS * MRS ) - ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7719543754415804}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - CS ) )", "obj1": 0.8555555555555555, "obj2": 0.0626910387882908}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( ACS - CRS ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( RCSe - RMSe ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5833333333333334, "obj2": 0.24433823022745388}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( ( PN - ( Max( MDR,FirstVNF_Mem_Server ) * MDR ) ) ,( Max( ( CRS + ( PN + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) ),DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( MUC * ( Max( Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ),RMSe ) / MUC ) ) )", "obj1": 0.7481481481481481, "obj2": 0.11246203547054728}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,ARS ) * ( PN / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MLU + Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7981481481481482, "obj2": 0.08834083596991343}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( CRS + Max( MDR,MRS ) ) ) * MDR ) ) ,( ( ( CRS + ( Max( DDR,( FirstVNF_RAM - ARS ) ) + PN ) ) - DDR ) - ( ACS * PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( Min( ( MUC + ( ( Max( Max( RMSe,CS ),RCSe ) / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ,( ( ( CS + MUM ) * RRSe ) - MUR ) ) )", "obj1": 0.18703703703703703, "obj2": 0.6927568300636209}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.22592592592592592, "obj2": 0.6531862505300444}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5425925925925926, "obj2": 0.27978512527262905}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.04708453210092132}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( RCSe * RCSe ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6543360490968266}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( BR / FirstVNF_CPU ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR / PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + ( Const * ( FirstVNF_Mem + AMS ) ) ) ) - DDR ) - MDR ) + ( ARS - CRS ) ) )", "choosing": "( ( ( Max( CS,( RMSe + Max( RCSe,Max( RCSe,MUR ) ) ) ) / Max( ( CS + DS ),Min( MLU ,( Max( RMSe,Max( MLU,RMSe ) ) - Max( MUC,CS ) ) ) ) ) / Min( ( MUR - MLU ) ,Min( MUM ,RMSe ) ) ) - ( MUR / ( ( ( ( ( MUR / MUC ) * RRSe ) - MUM ) - ( MLU + ( RMSe + ( RMSe - Min( MUR ,MLU ) ) ) ) ) * DS ) ) )", "obj1": 0.8333333333333334, "obj2": 0.07410351202476632}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3351851851851852, "obj2": 0.4962725842504957}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6907407407407408, "obj2": 0.15807927146006606}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "Min( ( ( Max( PN,( RRS - Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - AMS ) ) ,MDR ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( MRS - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - CS ) )", "obj1": 0.9888888888888889, "obj2": 0.004400242592525486}, {"determining": "Min( ( FirstVNF_CPU / MRS ) ,( Min( ( MDR / CRS ) ,CRS ) - ( ( PN * BR ) - DDR ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( RCSe - RCSe ) / ( MUC * MUC ) ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUR ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * MUR ) ) ) )", "obj1": 0.46111111111111114, "obj2": 0.3544274404331745}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,Max( ( Max( MDR,Const ) / ARS ),FirstVNF_CPU ) ) + ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,( ( MUC * MLU ) / MUC ) ) ) - Min( RCSe ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - ( RMSe + MUM ) ) )", "obj1": 0.20185185185185187, "obj2": 0.6734433701802046}, {"determining": "Min( ( ( FirstVNF_RAM_Server + Max( PN,Min( Max( BR,MRS ) ,CRS ) ) ) - MDR ) ,( FirstVNF_RAM_Server / RRS ) )", "choosing": "Min( ( ( ( ( MUC + RMSe ) / CS ) + DS ) + CS ) ,( RCSe - RMSe ) )", "obj1": 0.4111111111111111, "obj2": 0.397437319070042}, {"determining": "Min( ( ( ( Max( ( CRS * BR ),RRS ) - PN ) + Min( ( FirstVNF_Mem_Server - ( PN - Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) ,Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( DDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.49266027671924284}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( ( ( FirstVNF_RAM * FirstVNF_RAM_Server ) - Min( FirstVNF_Mem_Server ,FirstVNF_RAM ) ),( ( FirstVNF_CPU * Const ) - ( ACS - CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * CRS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "( ( MUM - ( CS + ( DS + Min( RCSe ,RMSe ) ) ) ) - ( MUM + ( ( MLU + ( ( CS - MUM ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( MUR * ( MLU * RMSe ) ) ) ) ) * DS ) ) )", "obj1": 0.7425925925925926, "obj2": 0.1170883683786495}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR * PN ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( MUR,MLU ) ) ) ) ) ) - CS ) ,( RCSe - MUC ) )", "obj1": 0.7018518518518518, "obj2": 0.15330431295936378}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,CRS ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( Max( MRS,MRS ) / ( ( CRS - Const ) / ( FirstVNF_CPU / MDR ) ) ) ,AMS ) - ( DDR - ( BR * PN ) ) ) - Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + Max( Max( Max( MUM,RRSe ),RRSe ),MUR ) ) / ( RCSe - ( CS + ( ( RMSe / MLU ) + ( ( MUC + MUR ) - ( MUM / Min( CS ,CS ) ) ) ) ) ) ) )", "obj1": 0.4148148148148148, "obj2": 0.3957434025154269}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),( ( ( FirstVNF_CPU_Server - MDR ) + Min( PN ,MDR ) ) - DDR ) ) ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) ) / Max( RCSe,( CS + ( MUC - RMSe ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.03001288507050982}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / Const ) ) ) ) + ( Min( ( MDR / FirstVNF_CPU_Server ) ,AMS ) / Const ) ) - FirstVNF_CPU ) ,( PN - ( BR * PN ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + MUC ) ) ) - Max( MUM,MUM ) ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MUC + Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.011195750887130668}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( RCSe - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + CS ) + ( DS * RCSe ) ) ) )", "obj1": 0.46111111111111114, "obj2": 0.3544274404331745}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Max( RCSe,( CS + ( ( ( MUC + MUR ) - ( MUM / Min( CS ,CS ) ) ) + ( RMSe / MLU ) ) ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6682128251603414}, {"determining": "Min( ( ( Max( PN,( RRS - Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - AMS ) ) ,MDR ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( MRS - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - ( CS + Min( DS ,( RCSe + CS ) ) ) ) ) - ( ( MUM / MLU ) + ( ( MUM + CS ) + ( DS * RCSe ) ) ) ) + ( ( Min( ( ( MUC - CS ) - ( ( DS - RMSe ) * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RRSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.7870370370370371, "obj2": 0.09200142449909124}, {"determining": "Min( Max( MRS,AMS ) ,Min( MRS ,Min( PN ,( MDR / BR ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Max( MUR,MUM ) + MUM ) + MUM ) / ( MUR - ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.5, "obj2": 0.32904604120869685}, {"determining": "Min( ( PN - ( MDR * Min( Max( ( Min( ( ACS - AMS ) ,PN ) - ( AMS - FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( RMSe / ( MUR + RMSe ) ) - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( ( ( PN + Max( PN,Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( MUM / ( CS / CS ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3888888888888889, "obj2": 0.44736473655444636}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.30925925925925923, "obj2": 0.533135164927448}, {"determining": "( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - ( PN * Const ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,MDR ) + ( ACS / FirstVNF_RAM_Server ) ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) / ( MUR - Max( ( RMSe + MUR ),( MUM * ( MUM / ( CS / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.7555555555555555, "obj2": 0.10641708734364039}], "40": [{"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR * FirstVNF_Mem ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( DDR - ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) ) - Min( ( Max( FirstVNF_RAM,ACS ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,MDR ) ) )", "choosing": "( ( CS / MUM ) - ( ( ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) + CS ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( ( Const + DDR ) + RRS ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - FirstVNF_Mem_Server ) )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - RMSe ) ) ) - DS ) ,( RCSe - Max( ( RRSe + MUM ),Max( MUM,MLU ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,( ( ( ( ARS / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5648148148148148, "obj2": 0.2539294463295277}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,RMSe ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6518518518518519, "obj2": 0.1890513436035913}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( ( PN - ( Min( ( Max( ( MRS / ARS ),DDR ) + PN ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.39444444444444443, "obj2": 0.446238922983169}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + ARS ) * MDR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6796296296296296, "obj2": 0.16394747943788382}, {"determining": "Min( ( PN - Max( ( ACS * FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) ,( ( ( CRS + ( ( ( FirstVNF_RAM - ARS ) + DDR ) + PN ) ) - DDR ) - ( ACS * PN ) ) )", "choosing": "( ( ( RMSe - Min( RCSe ,( ( MLU + MUC ) - ( ( ( MUC / MUR ) - Min( MUR ,MUR ) ) + MUR ) ) ) ) - DS ) - ( MUM + MLU ) )", "obj1": 0.725925925925926, "obj2": 0.12271908688979406}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6129629629629629, "obj2": 0.21796681732382275}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "( CRS / ( ( ( ( FirstVNF_CPU_Server - MDR ) + Min( PN ,MDR ) ) - DDR ) - MDR ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.022159185759137206}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Max( ( PN + RRS ),FirstVNF_RAM_Server ) ) + PN ) - MDR ) ,PN ) ) ,( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) + ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUR / ( ( CS + Max( MLU,DS ) ) + RRSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.5092294148920917}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( Const / ( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,( ACS + AMS ) ) + Const ) * CRS ) ) * MDR ) ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,ACS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MLU + ( DS * ( MLU + ( ( ( RMSe + MLU ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( Min( MUC ,MLU ) - ( RRSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7242231248051391}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( ( PN - ( Max( MDR,FirstVNF_Mem_Server ) * MDR ) ) ,( Max( ( CRS + ( PN + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) ),DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUR / ( ( CS + Max( MLU,DS ) ) + RRSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7388888888888889, "obj2": 0.11528843025603655}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,RMSe ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5018518518518519, "obj2": 0.3249163401024787}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.7777777777777778, "obj2": 0.09752898082085315}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Min( PN ,( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - FirstVNF_CPU_Server ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,Max( MUC,Min( ( ( MUC + MUC ) / RMSe ) ,MUR ) ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.6462962962962963, "obj2": 0.1963244051031496}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.8407407407407408, "obj2": 0.06855281984792376}, {"determining": "Min( ( ( ( ( FirstVNF_CPU * MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) ,Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6666666666666666, "obj2": 0.1735265120886812}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( Min( ( FirstVNF_Mem * FirstVNF_Mem ) ,( MRS * AMS ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,( DDR * DDR ) ) * MDR ) ) ,( ( Max( ( CRS + PN ),Max( CRS,ARS ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RMSe - Max( RCSe,( RRSe / Max( ( RMSe + RRSe ),Min( MUR ,RCSe ) ) ) ) ) ,( ( ( CS + MUM ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MLU * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5907407407407408, "obj2": 0.23452687500379654}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,Max( ARS,CRS ) ) ) )", "choosing": "Min( ( MUR - Max( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ),MLU ) ) ,( RCSe - Max( MUC,RCSe ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343300820807008}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( ACS - CRS ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( RCSe - RMSe ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5833333333333334, "obj2": 0.24433823022745388}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3351851851851852, "obj2": 0.4962725842504957}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( ( MRS + BR ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( CS + ( ( MUC / RCSe ) - RMSe ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04282708079881687}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "( Min( ( Min( MLU ,RCSe ) * RCSe ) ,RRSe ) - ( ( MUC + RCSe ) + MUM ) )", "obj1": 0.5537037037037037, "obj2": 0.27217780972331723}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) / ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02718069223874117}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "( ( Min( ( ( Max( Const,Min( DDR ,( MDR * FirstVNF_Mem ) ) ) + PN ) - MDR ) ,PN ) - ( ( Const * PN ) + FirstVNF_CPU_Server ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( MUC + Min( MLU ,RRSe ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - ( CS / MUM ) ) )", "obj1": 0.7648148148148148, "obj2": 0.10405691284719708}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),( ( ( FirstVNF_CPU_Server - MDR ) + Min( PN ,MDR ) ) - DDR ) ) ) - MDR ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9222222222222223, "obj2": 0.037959341253296454}, {"determining": "Min( ( FirstVNF_RAM + DDR ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( ( RRSe - DS ) / Min( RMSe ,MUM ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.29259259259259257, "obj2": 0.5644562316893507}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ) )", "obj1": 0.6, "obj2": 0.22578220633868892}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR * PN ) ) * ( FirstVNF_CPU - FirstVNF_CPU_Server ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * CRS ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( MUR,MLU ) ) ) ) ) ) - CS ) ,( RCSe - MUC ) )", "obj1": 0.7018518518518518, "obj2": 0.15330431295936378}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( MUR + MUC ),( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6666666666666666, "obj2": 0.1735265120886812}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.03952908072855458}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.04708453210092132}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( Min( Min( ( ( ( ( FirstVNF_Mem_Server - MRS ) / FirstVNF_Mem_Server ) + PN ) - MDR ) ,PN ) ,( ( AMS - DDR ) - MDR ) ) ,( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) )", "choosing": "( ( ( MLU + MUC ) * ( Min( ( CS / RCSe ) ,CS ) + ( ( RRSe / RCSe ) * MUM ) ) ) - ( MLU + ( ( Min( ( ( RCSe - RCSe ) / RMSe ) ,MUR ) / DS ) - ( ( ( Max( ( CS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) )", "obj1": 0.45925925925925926, "obj2": 0.35637256527323186}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ),PN ) ) - MDR ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( RMSe / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.9851851851851852, "obj2": 0.0033789388469255837}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_Mem / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,ARS ) * ( PN / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( ( MUC - RCSe ) ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MLU + Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.015186068797969897}, {"determining": "Min( Max( MRS,AMS ) ,Min( MRS ,Min( PN ,( MDR / BR ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Max( MUR,MUM ) + MUM ) + MUM ) / ( MUR - ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.5, "obj2": 0.32904604120869685}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR * FirstVNF_Mem ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,Min( Max( Const,MDR ) ,( ACS - CRS ) ) ) ) - DDR ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - DDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MUC * MUR ) / ( ( Min( Min( ( MUR / DS ) ,Max( CS,RMSe ) ) ,( ( MUM * MUC ) * MUC ) ) + RMSe ) * Min( MLU ,RMSe ) ) ) - ( RMSe + ( ( ( Max( ( MUR * ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * RRSe ) ) - ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.3148148148148148, "obj2": 0.5248748547507153}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - ( RMSe + MUM ) ) )", "obj1": 0.44814814814814813, "obj2": 0.36439202847376817}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( ( PN - ( MDR * Min( Max( ( Min( ( ACS - AMS ) ,PN ) - ( AMS - FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( RMSe / ( MUR + RMSe ) ) - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5425925925925926, "obj2": 0.27978512527262905}, {"determining": "Min( ( ( ( ( FirstVNF_CPU + MDR ) * Const ) + ( ( PN + ( PN * ARS ) ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( MUR - Min( Min( Max( ( RCSe - RRSe ),MLU ) ,CS ) ,( Max( RMSe,RMSe ) + DS ) ) ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( ( ( FirstVNF_CPU_Server * ( Const - MRS ) ) - Max( DDR,RRS ) ) ,PN )", "choosing": "Min( ( Max( RCSe,( CS + ( MUC - MUM ) ) ) - DS ) ,( RCSe - Max( Max( ( Min( MUC ,( Min( MUM ,MUR ) * MUM ) ) - Min( ( Max( RCSe,MUM ) + CS ) ,RMSe ) ),MUM ),Max( MUM,MLU ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7543380279947147}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( ( CS + ( ( RCSe * RMSe ) * MUR ) ) * RRSe ) - MUR ) ,( Max( MUC,MLU ) * MLU ) ) )", "obj1": 0.29814814814814816, "obj2": 0.5585190211585186}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.8777777777777778, "obj2": 0.04708453210092132}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( ( Min( DDR ,MDR ) * ( PN + PN ) ) - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUC - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RMSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8092592592592592, "obj2": 0.08325731534007444}, {"determining": "Min( ( ( FirstVNF_RAM_Server + Max( PN,Min( Max( BR,MRS ) ,CRS ) ) ) - MDR ) ,( FirstVNF_RAM_Server / RRS ) )", "choosing": "Min( ( ( ( ( MUC + RMSe ) / CS ) + DS ) + CS ) ,( RCSe - RMSe ) )", "obj1": 0.4111111111111111, "obj2": 0.397437319070042}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_Mem + ( ACS + Min( Const ,Min( ACS ,PN ) ) ) ) ,( CRS + Max( MDR,MRS ) ) ) * FirstVNF_Mem_Server ) ) ,( ( AMS - ( FirstVNF_Mem * Const ) ) - ( ( CRS + ( Max( DDR,( FirstVNF_RAM - ARS ) ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * MUR ) ) - Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,( RMSe * ( ( DS - ( MUM / MUC ) ) + DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.6927568300636209}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - FirstVNF_Mem ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,Max( MRS,FirstVNF_RAM ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( Min( MUM ,MUC ) + ( ( Min( Min( ( MUR - RMSe ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21296296296296297, "obj2": 0.662251318061118}, {"determining": "Min( ( ( ( Max( ( CRS * BR ),RRS ) - PN ) + Min( ( FirstVNF_Mem_Server - ( PN - Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) ,Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( DDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,Min( ( MUC + ( ( MLU / RMSe ) + ( DS * MUC ) ) ) ,Max( MUC,RCSe ) ) ) )", "obj1": 0.34444444444444444, "obj2": 0.49266027671924284}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + ARS ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( CS - MUM ) - ( ( ( ( CS + MUR ) + RMSe ) - ( RCSe - DS ) ) - DS ) ) ,( CS + MUC ) ) ,( ( MUC - CS ) - ( ( MUR / MUC ) * RCSe ) ) )", "obj1": 0.8203703703703704, "obj2": 0.07938372540593339}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MUR / ( ( Min( Min( ( MUR / DS ) ,Max( CS,RMSe ) ) ,( ( Min( DS ,MLU ) + MUC ) * MUC ) ) + RMSe ) - Min( MLU ,RMSe ) ) ) - ( RMSe + ( ( ( Max( ( MUR * ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * RRSe ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.40185185185185185, "obj2": 0.4139113028915144}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.30925925925925923, "obj2": 0.533135164927448}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( RCSe * RCSe ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6543360490968266}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.825925925925926, "obj2": 0.07649152658354987}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,ARS ) * Max( ( BR + ACS ),AMS ) ) ) )", "choosing": "Min( ( RCSe + CS ) ,( RCSe - RMSe ) )", "obj1": 0.9740740740740741, "obj2": 0.007492287954669937}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( ACS * CRS ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( FirstVNF_RAM,DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,( MUR - RRSe ) ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( Max( RCSe,MLU ),MUR ) ) ) ) ) - CS ) ,Min( ( RRSe * Min( RMSe ,Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) ) )", "obj1": 0.22407407407407406, "obj2": 0.6521276645992252}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( ( ( ( Min( ( BR - BR ) ,FirstVNF_RAM ) + ( Max( DDR,( FirstVNF_RAM / ARS ) ) + DDR ) ) - DDR ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,Max( PN,DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),( ( ( FirstVNF_CPU_Server - MDR ) + Min( PN ,MDR ) ) - DDR ) ) ) - MDR ) )", "choosing": "Min( ( ( CS + RRSe ) - RMSe ) ,( ( RMSe + ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / Max( Min( MUR ,MUC ),RCSe ) ) ) - RMSe ) ) / Max( RCSe,( CS + ( MUC - RMSe ) ) ) ) )", "obj1": 0.9259259259259259, "obj2": 0.03001288507050982}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( ACS - CRS ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( ( RCSe - RMSe ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.5833333333333334, "obj2": 0.24433823022745388}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "( ( ( ( ARS / ( FirstVNF_CPU * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) - ( MDR - ( PN * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RCSe ) ) ) ) ) ) - CS ) ,( RCSe - ( Max( RCSe,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.15807927146006606}], "41": [{"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( ( PN - Max( ( ACS * FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) ,( ( ( CRS + ( ( ( FirstVNF_RAM - ARS ) + DDR ) + PN ) ) - DDR ) - ( ACS * PN ) ) )", "choosing": "( ( ( RMSe - Min( RCSe ,( ( MLU + MUC ) - ( ( ( MUC / MUR ) - Min( MUR ,MUR ) ) + MUR ) ) ) ) - DS ) - ( MUM + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR * FirstVNF_Mem ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( DDR - ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) ) - Min( ( Max( FirstVNF_RAM,ACS ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,MDR ) ) )", "choosing": "( ( CS / MUM ) - ( ( ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) + CS ) - MUR ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( ACS - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( FirstVNF_RAM,ACS ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,MDR ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "Min( ( PN - ( Min( ( Max( ( MRS / ARS ),DDR ) + PN ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.39444444444444443, "obj2": 0.446238922983169}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - ( RMSe + MUM ) ) )", "obj1": 0.44814814814814813, "obj2": 0.36439202847376817}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "( ( ( ( ACS - Min( ( CRS / Max( ( FirstVNF_Mem_Server + RRS ),RRS ) ) ,( ( BR * FirstVNF_Mem_Server ) + FirstVNF_Mem ) ) ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( PN * MDR ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / Min( ( PN - PN ) ,( Const + FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( Min( ( MUC * DS ) ,MUM ) - ( CS - Min( ( ( ( MUM - MUC ) + Max( Min( CS ,MUR ),CS ) ) * MUM ) ,( RRSe + MUM ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.570674713298057}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6129629629629629, "obj2": 0.21796681732382275}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,RMSe ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6518518518518519, "obj2": 0.1890513436035913}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_Mem + ( ACS + Min( Const ,Min( ACS ,PN ) ) ) ) ,( CRS + Max( MDR,MRS ) ) ) * FirstVNF_Mem_Server ) ) ,( ( AMS - ( FirstVNF_Mem * Const ) ) - ( ( CRS + ( Max( DDR,( FirstVNF_RAM - ARS ) ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * MUR ) ) - Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,( RMSe * ( ( DS - ( MUM / MUC ) ) + DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.6927568300636209}, {"determining": "( CRS / ( ( ( ( FirstVNF_CPU_Server - MDR ) + Min( PN ,MDR ) ) - DDR ) - MDR ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.022159185759137206}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973901332060258}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.49734434217384665}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6681650058745787}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "( Max( MDR,FirstVNF_Mem_Server ) / Max( ( ( ( FirstVNF_RAM_Server + Min( ACS ,BR ) ) + FirstVNF_Mem ) / ( FirstVNF_Mem / Min( Min( CRS ,( RRS / ARS ) ) ,Max( DDR,BR ) ) ) ),Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.3037037037037037, "obj2": 0.554980153069668}, {"determining": "Min( Max( MRS,AMS ) ,Min( MRS ,Min( PN ,( MDR / BR ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Max( MUR,MUM ) + MUM ) + MUM ) / ( MUR - ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.5, "obj2": 0.32904604120869685}, {"determining": "Min( ( ( ( ( FirstVNF_CPU * MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) ,Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( CS + MUM ) / ( MUR - Max( ( RMSe + MUR ),( MUM * ( MUM / ( CS / CS ) ) ) ) ) ) - CS ) )", "obj1": 0.7018518518518518, "obj2": 0.15022865105309077}, {"determining": "Min( ( Const / ( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,( ACS + AMS ) ) + Const ) * CRS ) ) * MDR ) ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,ACS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MLU + ( DS * ( MLU + ( ( ( RMSe + MLU ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( Min( MUC ,MLU ) - ( RRSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7242231248051391}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,ARS ) * Max( ( BR + ACS ),AMS ) ) ) )", "choosing": "Min( ( RCSe + CS ) ,( RCSe - RMSe ) )", "obj1": 0.9740740740740741, "obj2": 0.007492287954669937}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( MUR - Max( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ),MLU ) ) ,( RCSe - Max( MUC,RCSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6804607229087458}, {"determining": "( ( ( ( ARS / ( FirstVNF_CPU * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) - ( MDR - ( PN * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RCSe ) ) ) ) ) ) - CS ) ,( RCSe - ( Max( RCSe,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.15807927146006606}, {"determining": "Min( ( PN - ( Max( MDR,FirstVNF_Mem_Server ) * MDR ) ) ,( Max( ( CRS + ( PN + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) ),DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( MUR / ( ( CS + Max( MLU,DS ) ) + RRSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.7388888888888889, "obj2": 0.11528843025603655}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5599307562967919}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( DDR ,( FirstVNF_RAM * PN ) ),PN ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - ( MDR * ( FirstVNF_CPU / MDR ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR / RMSe ) ,Max( ( RRSe / MUM ),( ( DS - MUM ) / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343019182363248}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( ( Min( DDR ,MDR ) * ( PN + PN ) ) - CRS ) )", "choosing": "( ( Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RMSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.8537037037037037, "obj2": 0.06408803113481319}, {"determining": "Min( ( ( Max( PN,( RRS - Max( FirstVNF_Mem_Server,( FirstVNF_Mem / ARS ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( ( BR + FirstVNF_RAM ) / ( BR * ARS ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( MLU + RMSe ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( DS / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) + MLU ) / Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.015186068797969897}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07404198831185997}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Max( RCSe,( CS + ( MUC - RMSe ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04282708079881687}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5648148148148148, "obj2": 0.2539294463295277}, {"determining": "Min( ( PN - ( MDR * Min( Max( ( Min( ( ACS - AMS ) ,PN ) - ( AMS - FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - Min( DDR ,( FirstVNF_RAM * MDR ) ) ) )", "choosing": "Min( ( ( RMSe / ( MUR + RMSe ) ) - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) - ( ( DS / Max( RRSe,( RCSe - RMSe ) ) ) + ( RMSe + CS ) ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.25943337983893294}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.03952908072855458}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( RCSe * RCSe ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6543360490968266}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( ( MRS + BR ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( CS + ( ( MUC / RCSe ) - RMSe ) ) ) ) )", "obj1": 0.8759259259259259, "obj2": 0.04970393677728922}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_Mem / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,ARS ) * ( PN / FirstVNF_Mem ) ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( ( MUC - RCSe ) ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MLU + Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.015186068797969897}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * Min( DDR ,( MDR * FirstVNF_Mem ) ) ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( ( RRSe - ( MLU + RCSe ) ) / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.03562689516543886}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_Mem + FirstVNF_RAM_Server ) ,( CRS + Max( Max( ARS,CRS ),MRS ) ) ) * MDR ) ) ,( ( ( CRS + ( Max( DDR,( FirstVNF_RAM - ARS ) ) + PN ) ) - DDR ) - ( ACS * PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( Min( ( MUC + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ,Max( MUC,RCSe ) ) ,( ( ( CS + MUM ) * RRSe ) - MUR ) ) )", "obj1": 0.7296296296296296, "obj2": 0.12052169736942733}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / ( PN * ARS ) ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( RMSe ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8018518518518518, "obj2": 0.08642246403665646}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( Min( MUM ,MUC ) + ( ( Min( Min( ( MUR - RMSe ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7925925925925926, "obj2": 0.08984557233381467}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( MUR + MUC ),( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6666666666666666, "obj2": 0.1735265120886812}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( Max( ( CRS + PN ),Max( CRS,ARS ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5740740740740741, "obj2": 0.2485664680636048}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.29814814814814816, "obj2": 0.557902981060653}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( Max( ( FirstVNF_Mem_Server + ( FirstVNF_Mem / ( MRS / RRS ) ) ),( MDR * MRS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) * Const ) * MDR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RCSe * ( RCSe / ( Min( RCSe ,CS ) + MUR ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / ( MUR / Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7685185185185185, "obj2": 0.10290494934319444}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - MUM ) ) - CS ) ,( RCSe - ( RMSe + MUM ) ) )", "obj1": 0.45740740740740743, "obj2": 0.35935191886401513}, {"determining": "Min( ( ( ( Max( ( CRS * BR ),RRS ) - PN ) + Min( ( FirstVNF_Mem_Server - ( PN - Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) ,Min( MRS ,Min( ( ( Max( PN,( AMS / FirstVNF_Mem_Server ) ) + PN ) - MDR ) ,PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7534747385597556}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5444444444444444, "obj2": 0.2785721918044306}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) / ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02718069223874117}, {"determining": "Min( Min( Min( ( Max( Max( PN,Min( DDR ,Max( PN,DDR ) ) ),PN ) - MDR ) ,PN ) ,MRS ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,BR ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( MUM + ( DS * RCSe ) ) ,MUC ) ,( RCSe - RMSe ) )", "obj1": 0.14444444444444443, "obj2": 0.7564643400448605}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.8407407407407408, "obj2": 0.06855281984792376}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,RMSe ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5018518518518519, "obj2": 0.3249163401024787}, {"determining": "Min( ( PN - Max( Min( ( Const + ( Const + FirstVNF_RAM_Server ) ) ,( CRS + Max( MDR,MRS ) ) ),FirstVNF_RAM ) ) ,( ( ( CRS + ( Max( DDR,( ( RRS * AMS ) - ARS ) ) + PN ) ) - DDR ) - ( ACS * PN ) ) )", "choosing": "( ( ( DS - RMSe ) * ( CS - CS ) ) - ( ( Max( RCSe,MUM ) / MLU ) + ( CS / MUR ) ) )", "obj1": 0.9925925925925926, "obj2": 0.003009001950938287}, {"determining": "Min( ( CRS + FirstVNF_RAM_Server ) ,( PN - ( MDR * ( Max( ( Max( PN,FirstVNF_RAM ) - MDR ),ARS ) - Max( FirstVNF_Mem,BR ) ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,( CS - RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( Min( DS ,DS ) * ( MUM * ( ( RMSe - RCSe ) / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.7481481481481481, "obj2": 0.1121427860173076}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( CRS - PN ) ,( ( Max( PN,DDR ) + ARS ) * MDR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / RRSe ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6759259259259259, "obj2": 0.1669622710061685}, {"determining": "Min( ( PN - ( Min( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),( MUC / MUC ) ) + RRSe ) ) ) )", "obj1": 0.5851851851851851, "obj2": 0.24389478290402689}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.6444444444444445, "obj2": 0.19669042724136124}, {"determining": "Min( ( PN - ( MDR * Min( Max( ( Min( ( ACS - AMS ) ,PN ) - ( AMS - FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( RMSe / ( MUR + RMSe ) ) - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ARS / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6851851851851852, "obj2": 0.1603885651332261}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( DDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( Const * Max( AMS,MDR ) ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( ( MUR - ( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * ( RCSe / MUM ) ) ) * MLU ) ) ,( ( RCSe - MUC ) - RCSe ) )", "obj1": 0.30925925925925923, "obj2": 0.533014275370535}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3425925925925926, "obj2": 0.4872429989890356}, {"determining": "Min( ( ( ( ( FirstVNF_CPU + MDR ) * Const ) + ( ( PN + ( PN * ARS ) ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( MUR - Min( Min( Max( ( RCSe - RRSe ),MLU ) ,CS ) ,( Max( RMSe,RMSe ) + DS ) ) ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.6703703703703704, "obj2": 0.17227017857990204}, {"determining": "Min( ( ( ( ( FirstVNF_CPU * MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) ,Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6666666666666666, "obj2": 0.1735265120886812}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + Max( Max( ARS,Const ),FirstVNF_RAM_Server ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM - MUC ),MUR ) + RRSe ) ) ) )", "obj1": 0.6, "obj2": 0.22578220633868892}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.8407407407407408, "obj2": 0.06855281984792376}], "42": [{"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( Max( FirstVNF_Mem_Server,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) ) ,PN ) ) ,( ( ( ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) - ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) ) + Min( ( ARS - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( RMSe,MUM ) ) ) - MUR ) ,( Max( Max( ( CS / CS ),( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * ( MUR + MUC ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( PN - Max( ( ACS * FirstVNF_Mem ),( FirstVNF_Mem_Server + FirstVNF_RAM_Server ) ) ) ,( ( ( CRS + ( ( ( FirstVNF_RAM - ARS ) + DDR ) + PN ) ) - DDR ) - ( ACS * PN ) ) )", "choosing": "( ( ( RMSe - Min( RCSe ,( ( MLU + MUC ) - ( ( ( MUC / MUR ) - Min( MUR ,MUR ) ) + MUR ) ) ) ) - DS ) - ( MUM + MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( ACS - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( FirstVNF_RAM,ACS ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,MDR ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3611111111111111, "obj2": 0.4715818142555274}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.49734434217384665}, {"determining": "Min( ( PN - ( Min( ( Max( ( MRS / ARS ),DDR ) + PN ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.39444444444444443, "obj2": 0.446238922983169}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( Min( Min( ( Max( Max( PN,Min( DDR ,Max( PN,DDR ) ) ),PN ) - MDR ) ,PN ) ,MRS ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,BR ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( MUM + ( DS * RCSe ) ) ,MUC ) ,( RCSe - RMSe ) )", "obj1": 0.14444444444444443, "obj2": 0.7564643400448605}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( Min( FirstVNF_CPU ,Max( AMS,Const ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,( CRS * FirstVNF_RAM ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.5657227706440846}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( ( Max( Min( ( CRS * DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),PN ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe + ( ( ( MUR + RMSe ) + ( ( MUC / ( ( MUC + MUC ) + MUR ) ) * ( ( MUM + ( MUR - MUM ) ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8003062645539013}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_Mem + ( ACS + Min( Const ,Min( ACS ,PN ) ) ) ) ,( CRS + Max( MDR,MRS ) ) ) * FirstVNF_Mem_Server ) ) ,( ( AMS - ( FirstVNF_Mem * Const ) ) - ( ( CRS + ( Max( DDR,( FirstVNF_RAM - ARS ) ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * MUR ) ) - Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,( RMSe * ( ( DS - ( MUM / MUC ) ) + DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.6927568300636209}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - MUM ) ) - CS ) ,( RCSe - ( RMSe + MUM ) ) )", "obj1": 0.45740740740740743, "obj2": 0.35935191886401513}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( RCSe * RCSe ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6543360490968266}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( DDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( Const * Max( AMS,MDR ) ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( ( MUR - ( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * ( RCSe / MUM ) ) ) * MLU ) ) ,( ( RCSe - MUC ) - RCSe ) )", "obj1": 0.30925925925925923, "obj2": 0.533014275370535}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "Min( ( PN - ( Min( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),( MUC / MUC ) ) + RRSe ) ) ) )", "obj1": 0.5851851851851851, "obj2": 0.24389478290402689}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6681650058745787}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( ( Const / ( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,( ACS + AMS ) ) + Const ) * CRS ) ) * MDR ) ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,ACS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MLU + ( DS * ( MLU + ( ( ( RMSe + MLU ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( Min( MUC ,MLU ) - ( RRSe * MUC ) ) ) ) ) ) ) )", "obj1": 0.17777777777777778, "obj2": 0.7242231248051391}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( ( MRS + BR ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( CS + ( ( MUC / RCSe ) - RMSe ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04275275564236133}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( Max( MRS,AMS ) ,Min( MRS ,Min( PN ,( MDR / BR ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Max( MUR,MUM ) + MUM ) + MUM ) / ( MUR - ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.5, "obj2": 0.32904604120869685}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,RMSe ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5018518518518519, "obj2": 0.3249163401024787}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3425925925925926, "obj2": 0.4872429989890356}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.8074074074074075, "obj2": 0.0823815519965897}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.8240740740740741, "obj2": 0.0777175376845147}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( ( PN - ( Min( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.5962962962962963, "obj2": 0.2315958424984611}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "( CRS / ( ( ( ( FirstVNF_CPU_Server - MDR ) + Min( PN ,MDR ) ) - DDR ) - MDR ) )", "choosing": "( ( ( MUC + RRSe ) + RMSe ) + ( ( Min( Max( DS,( MUC / CS ) ) ,( RRSe / DS ) ) - RMSe ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / RCSe ) ) ) / ( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) / MLU ) ) ) )", "obj1": 0.9444444444444444, "obj2": 0.022159185759137206}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( MUR - Max( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ),MLU ) ) ,( RCSe - Max( MUC,RCSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6804607229087458}, {"determining": "Min( ( Const - MDR ) ,( FirstVNF_Mem - PN ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( ( ( MUR - MUM ) / RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - ( RMSe + RRSe ) ) ) - CS ) ,( ( RMSe + MUM ) - ( MLU - CS ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * Min( DDR ,( MDR * FirstVNF_Mem ) ) ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( ( RRSe - ( MLU + RCSe ) ) / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.03562689516543886}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( Max( ( FirstVNF_Mem_Server + ( FirstVNF_Mem / ( MRS / RRS ) ) ),( MDR * MRS ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) * Const ) * MDR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RCSe * ( RCSe / ( Min( RCSe ,CS ) + MUR ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / ( MUR / Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7685185185185185, "obj2": 0.10290494934319444}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( DDR ,( FirstVNF_RAM * PN ) ),PN ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - ( MDR * ( FirstVNF_CPU / MDR ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR / RMSe ) ,Max( ( RRSe / MUM ),( ( DS - MUM ) / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343019182363248}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.665399839908664}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) / ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02718069223874117}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) )", "obj1": 0.9314814814814815, "obj2": 0.03425151385563739}, {"determining": "Min( ( CRS + FirstVNF_RAM_Server ) ,( PN - ( MDR * ( Max( ( Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,PN ) - MDR ),ARS ) - Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe + ( MUR / RMSe ) ) - Max( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ),MLU ) ) - ( MUM / RMSe ) ) ,( MLU + MLU ) )", "obj1": 0.7277777777777777, "obj2": 0.12143913989333743}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.6611111111111111, "obj2": 0.18381575084651933}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( PN + ( PN * ARS ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUR - Min( Min( Max( ( RCSe - RRSe ),MLU ) ,CS ) ,( Max( RMSe,RMSe ) + DS ) ) ) + MUM ) - CS ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.7537037037037037, "obj2": 0.10742493596140137}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9074074074074074, "obj2": 0.03952908072855458}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "( Min( ( ( FirstVNF_CPU_Server - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,( FirstVNF_Mem * ( FirstVNF_RAM_Server * ( Min( ( PN / FirstVNF_RAM_Server ) ,( ARS - ARS ) ) * ARS ) ) ) ) / Max( Max( CRS,FirstVNF_Mem_Server ),( FirstVNF_Mem_Server / ( FirstVNF_Mem / ( ( PN - Max( AMS,FirstVNF_CPU ) ) / ( ( FirstVNF_Mem_Server / MDR ) * FirstVNF_RAM_Server ) ) ) ) ) )", "choosing": "( ( RCSe * MUC ) - Max( ( ( Min( RMSe ,CS ) / ( RRSe - DS ) ) + ( ( MUM * Max( ( ( MUM / MLU ) / MUC ),RRSe ) ) * MLU ) ),MUR ) )", "obj1": 0.2611111111111111, "obj2": 0.5970274283349183}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( ( Min( DDR ,MDR ) * ( PN + PN ) ) - CRS ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.7777777777777778, "obj2": 0.09752898082085315}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / ( PN * ARS ) ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( RMSe ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8018518518518518, "obj2": 0.08642246403665646}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.8703703703703703, "obj2": 0.05599996766106995}, {"determining": "Min( ( PN - ( Min( ( Max( ( MRS / ARS ),DDR ) + PN ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,Min( ( ( MUC + MUC ) / RMSe ) ,Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),( MUC / MUC ) ) + RRSe ) ) ) )", "obj1": 0.38333333333333336, "obj2": 0.4515864765913061}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,RMSe ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6518518518518519, "obj2": 0.1890513436035913}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "( ( FirstVNF_CPU_Server * RRS ) / ( ( RRS * ( ( AMS + ( CRS + ( ( ACS - AMS ) / ACS ) ) ) / ( FirstVNF_Mem - Max( Const,( MRS * FirstVNF_RAM ) ) ) ) ) - ( FirstVNF_RAM / PN ) ) )", "choosing": "( Max( ( RCSe - Max( DS,( Max( MUR,CS ) / RRSe ) ) ),Min( CS ,( MUR + Min( CS ,Max( Max( MUM,( DS + RCSe ) ),RCSe ) ) ) ) ) - ( Max( CS,MUM ) + ( RRSe - ( ( ( ( ( DS / MUC ) / RCSe ) + RCSe ) / CS ) * ( Min( ( CS - RMSe ) ,( DS / RCSe ) ) - Min( ( ( MLU + MUR ) / CS ) ,( MUC * ( DS * MUC ) ) ) ) ) ) ) )", "obj1": 0.11851851851851852, "obj2": 0.8066854589652894}, {"determining": "Min( ( PN - ( MDR * Min( Max( ( Min( ( ACS - AMS ) ,PN ) - ( AMS - FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( RMSe / ( MUR + RMSe ) ) - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ) ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( Max( FirstVNF_Mem_Server,( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,Max( ARS,CRS ) ) ) )", "choosing": "Min( ( RCSe - Max( MUC,RCSe ) ) ,( MUR - Max( ( ( MUM * Max( RRSe,RCSe ) ) + ( Max( MUM,( RCSe - RMSe ) ) * RCSe ) ),MLU ) ) )", "obj1": 0.412962962962963, "obj2": 0.3966843696180801}, {"determining": "( ( ( MRS * FirstVNF_Mem ) - ( ( ACS - CRS ) + PN ) ) / Max( ( FirstVNF_RAM + PN ),( FirstVNF_Mem_Server / ( Min( ( ( PN * ( RRS * ACS ) ) - DDR ) ,( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ) / FirstVNF_Mem ) ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.11296296296296296, "obj2": 0.8125313725248117}, {"determining": "( ( ( ( ARS / ( FirstVNF_CPU * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) - ( MDR - ( PN * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RCSe ) ) ) ) ) ) - CS ) ,( RCSe - ( Max( RCSe,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.15807927146006606}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( Min( MUM ,MUC ) + ( ( Min( Min( ( MUR - RMSe ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7925925925925926, "obj2": 0.08984557233381467}, {"determining": "Min( Min( ( RRS / ( FirstVNF_CPU_Server - ( ( MDR - FirstVNF_CPU ) + ( BR - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( Max( Max( RRSe,MUC ),RRSe ) ,( RRSe - MUR ) ),RCSe ) - RCSe ) - RMSe ) )", "obj1": 0.6444444444444445, "obj2": 0.19669042724136118}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973901332060258}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.29814814814814816, "obj2": 0.557902981060653}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( ( PN - ( MDR * Min( Max( ( Min( ( ACS - AMS ) ,PN ) - ( AMS - FirstVNF_RAM_Server ) ),FirstVNF_Mem_Server ) ,FirstVNF_CPU ) ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - Min( DDR ,( FirstVNF_RAM * MDR ) ) ) )", "choosing": "Min( ( ( RMSe / ( MUR + RMSe ) ) - ( ( DS / RRSe ) + ( RMSe + CS ) ) ) ,( DS * ( MLU + ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUC ) ) - ( ( DS / Max( RRSe,( RCSe - RMSe ) ) ) + ( RMSe + CS ) ) ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.25943337983893294}, {"determining": "Min( ( Min( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / ( PN * ARS ) ) ) ) ) ,( Min( Min( Const ,( AMS - Min( DDR ,DDR ) ) ) ,Min( ( Min( Const ,FirstVNF_CPU_Server ) * RRS ) ,( AMS / FirstVNF_RAM ) ) ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * ( DS * ( RRSe - MUC ) ) ) ),RMSe ) - ( CS - CS ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.7870370370370371, "obj2": 0.09279090055398007}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5444444444444444, "obj2": 0.2785721918044306}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) ,( PN - ( Min( Max( FirstVNF_RAM,( ( ( MRS * AMS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( Min( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) ,RMSe ) - ( RCSe + MUC ) ) - CS ) )", "obj1": 0.6185185185185185, "obj2": 0.2167610911606154}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.6648148148148149, "obj2": 0.1775194945940594}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server - ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,( PN - ( Min( ( FirstVNF_CPU / FirstVNF_Mem_Server ) ,ARS ) * Max( ( BR + ACS ),AMS ) ) ) )", "choosing": "Min( ( RCSe + CS ) ,( RCSe - RMSe ) )", "obj1": 0.9740740740740741, "obj2": 0.007492287954669937}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( MRS * FirstVNF_Mem ) ) / Min( PN ,( FirstVNF_CPU_Server - AMS ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,Min( AMS ,AMS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUC * MUM ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,( MUC - MLU ) ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( MUC ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5777777777777777, "obj2": 0.24697765359079993}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_Mem / Const ) ) ) ) + ( DDR - ( ( Min( ( RRS * AMS ) ,( ACS + FirstVNF_CPU ) ) * ARS ) + PN ) ) ) - FirstVNF_CPU ) ,Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( ( ( MUM + MLU ) + ( DS / RCSe ) ) ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MLU + Max( Max( RMSe,MUM ),Min( MLU ,( CS - ( DS + RMSe ) ) ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9518518518518518, "obj2": 0.016575346963105406}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.28888888888888886, "obj2": 0.5599307562967919}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,MUM ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9092592592592592, "obj2": 0.03883408900366336}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( Min( ( ( Max( PN,( RRS - ( ( FirstVNF_RAM + FirstVNF_RAM ) * Min( FirstVNF_CPU ,Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( ACS - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( FirstVNF_RAM,ACS ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,MDR ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,CS ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.774074074074074, "obj2": 0.1020408310849078}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "( ( ( RCSe / RRSe ) - DS ) - ( MUM + RMSe ) )", "obj1": 0.5666666666666667, "obj2": 0.2531764968775658}, {"determining": "Min( ( ( ( Max( ( CRS * BR ),RRS ) - PN ) + Min( ( FirstVNF_Mem_Server - ( PN - Max( ( DDR - FirstVNF_RAM_Server ),FirstVNF_CPU_Server ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) ,Min( MRS ,Min( ( ( Max( PN,( AMS / FirstVNF_Mem_Server ) ) + PN ) - MDR ) ,PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7534747385597556}], "43": [{"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( MRS * AMS ) ) - DDR ) - MDR ) ,( ( ( Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( ( ( CS + MUR ) + RMSe ) ,MUR ) - ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( Max( FirstVNF_Mem_Server,( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) ) ,PN ) ) ,( ( ( ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) - ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) ) + Min( ( ARS - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( RMSe,MUM ) ) ) - MUR ) ,( Max( Max( ( CS / CS ),( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * ( MUR + MUC ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,( ( ( ( ARS / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3333333333333333, "obj2": 0.49734434217384665}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "( ( ( ( ARS / ( FirstVNF_CPU * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) - ( MDR - ( PN * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RCSe ) ) ) ) ) ) - CS ) ,( RCSe - ( Max( RCSe,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.15807927146006606}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.6666666666666666, "obj2": 0.17671123615994855}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( Min( FirstVNF_CPU ,Max( AMS,Const ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,( CRS * FirstVNF_RAM ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.2851851851851852, "obj2": 0.5657227706440846}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5777777777777777, "obj2": 0.2433169902937233}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( CS + MUM ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.8407407407407408, "obj2": 0.06773496673902799}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( RCSe * RCSe ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21851851851851853, "obj2": 0.6543360490968266}, {"determining": "Min( ( PN - ( Min( ( Max( ( MRS / ARS ),DDR ) + PN ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ARS,DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.39444444444444443, "obj2": 0.446238922983169}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( DDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( Const * Max( AMS,MDR ) ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( ( MUR - ( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * ( RCSe / MUM ) ) ) * MLU ) ) ,( ( RCSe - MUC ) - RCSe ) )", "obj1": 0.30925925925925923, "obj2": 0.533014275370535}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ( FirstVNF_CPU / CRS ) ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( Max( RRSe,RCSe ),( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7079296219033452}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( PN - ( Min( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),Max( PN,DDR ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.5944444444444444, "obj2": 0.23283868814749858}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3611111111111111, "obj2": 0.4715818142555274}, {"determining": "Min( Max( MRS,AMS ) ,Min( MRS ,Min( PN ,( MDR / BR ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Max( MUR,MUM ) + MUM ) + MUM ) / ( MUR - ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) ) ) - CS ) )", "obj1": 0.5, "obj2": 0.32904604120869685}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,RMSe ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6944444444444444, "obj2": 0.15630337817451045}, {"determining": "( ( Const + FirstVNF_Mem ) - ( ( FirstVNF_CPU * ( ( ( ( ( ARS / Const ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) )", "choosing": "Min( ( RMSe * DS ) ,Min( ( DS * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.737037037037037, "obj2": 0.11659413956284033}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3425925925925926, "obj2": 0.4872429989890356}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) - MUR ) ) ) )", "obj1": 0.8851851851851852, "obj2": 0.05006900056912919}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5444444444444444, "obj2": 0.2785721918044306}, {"determining": "Min( ( PN / Min( FirstVNF_RAM_Server ,CRS ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * ( MUR - MUM ) ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RRSe + ( DS * ( MLU + ( ( ( ( MUM - RRSe ) / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.524074074074074, "obj2": 0.3002283167783158}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3611111111111111, "obj2": 0.4715818142555274}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( MUR - Max( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ),MLU ) ) ,( RCSe - Max( MUC,RCSe ) ) )", "obj1": 0.19814814814814816, "obj2": 0.6804607229087458}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.13703703703703704, "obj2": 0.7684670815083523}, {"determining": "Min( ( ( Max( Min( ( CRS * DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),PN ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe + ( ( ( MUR + RMSe ) + ( ( MUC / ( ( MUC + MUC ) + MUR ) ) * ( ( MUM + ( MUR - MUM ) ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8003062645539013}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.8314814814814815, "obj2": 0.07291933071740757}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) ,( PN - ( Min( Max( FirstVNF_RAM,( ( ( MRS * AMS ) - ( FirstVNF_CPU * FirstVNF_Mem ) ) / ( ( ACS - MRS ) - ( ARS * Const ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( RRSe - RMSe ) ,( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) )", "obj1": 0.5351851851851852, "obj2": 0.2914758311168222}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,( RCSe * RMSe ) ) ,RMSe ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5074074074074074, "obj2": 0.3243626989188538}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( DDR ,( FirstVNF_RAM * PN ) ),PN ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - ( MDR * ( FirstVNF_CPU / MDR ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR / RMSe ) ,Max( ( RRSe / MUM ),( ( DS - MUM ) / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343019182363248}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.665399839908664}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( ( CRS * FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( ( MRS + BR ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( CS + ( ( MUC / RCSe ) - RMSe ) ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04275275564236133}, {"determining": "Min( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - DDR ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( MRS + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( MLU * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.8685185185185185, "obj2": 0.051719331475456855}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( Min( ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - ( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.2611111111111111, "obj2": 0.5946729872179236}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.8074074074074075, "obj2": 0.0823815519965897}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( ( ( ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) - Max( FirstVNF_RAM,PN ) ) - ( ( ( Max( Const,FirstVNF_Mem ) + Min( ( DDR / FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( DS / RRSe ) + ( RMSe - Min( DS ,( DS / ( Max( MUC,RCSe ) * RCSe ) ) ) ) ) ,CS ) ,DS )", "obj1": 0.9666666666666667, "obj2": 0.013534314407467218}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_Mem + ( ACS + Min( Const ,Min( ACS ,PN ) ) ) ) ,( CRS + Max( MDR,MRS ) ) ) * FirstVNF_Mem_Server ) ) ,( ( AMS - ( FirstVNF_Mem * Const ) ) - ( ( CRS + ( Max( DDR,( FirstVNF_RAM - ARS ) ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * MUR ) ) - Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,( RMSe * ( ( DS - ( MUM / MUC ) ) + DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.6927568300636209}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS - CRS ) ) ) - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) + Max( FirstVNF_CPU,DDR ) ) / ( FirstVNF_RAM / FirstVNF_Mem ) ),FirstVNF_RAM ) ) )", "choosing": "Min( ( Max( ( RRSe * Min( MUC ,Min( ( Min( RCSe ,DS ) - CS ) ,RRSe ) ) ),RRSe ) - CS ) ,( RCSe - ( RMSe + MUR ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( Min( MUM ,MUC ) + ( ( Min( Min( ( MUR - RMSe ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7925925925925926, "obj2": 0.08984557233381467}, {"determining": "Min( ( MDR - ( Max( ( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ),FirstVNF_RAM_Server ) - DDR ) ) ,( Min( RRS ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,MUR ) ) ,( RCSe - RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / Max( ( CS * ( MUC - ( ( MLU - MUM ) * MUM ) ) ),Min( ( ( MUC - CS ) - ( Min( RMSe ,RMSe ) * ( ( RMSe + MUC ) - ( DS / RCSe ) ) ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.004088198805071269}, {"determining": "Min( ( ( Max( PN,( RRS - Max( PN,Min( DDR ,( FirstVNF_Mem * RRS ) ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.8018518518518518, "obj2": 0.08517519196333213}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( ( ( RMSe + MLU ) + ( DS / RCSe ) ) ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( MLU + Max( Max( RMSe,MUM ),( Min( MUC ,( MLU * MLU ) ) / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( MUM / RMSe ) ) / MLU ) ) ) )", "obj1": 0.4685185185185185, "obj2": 0.35383636389468043}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6681650058745787}, {"determining": "Min( Min( ( RRS / ( FirstVNF_CPU_Server - ( ( MDR - FirstVNF_CPU ) + ( BR - FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_RAM_Server ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( Max( Max( RRSe,MUC ),RRSe ) ,( RRSe - MUR ) ),RCSe ) - RCSe ) - RMSe ) )", "obj1": 0.6444444444444445, "obj2": 0.19669042724136118}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.039966589303823886}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.053920138079767074}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( ( MLU * ( ( ( DS - Min( ( CS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( RCSe - MUR ) ) ) ) + Min( MUC ,RMSe ) ) * ( MUR * MLU ) )", "obj1": 0.8222222222222222, "obj2": 0.08186010360520252}, {"determining": "Min( ( MDR + ( ( Min( AMS ,FirstVNF_Mem_Server ) * Max( ( DDR + DDR ),FirstVNF_RAM ) ) + BR ) ) ,Min( FirstVNF_RAM ,CRS ) )", "choosing": "Min( ( ( CS - CS ) - Max( ( ( ( MUM / RCSe ) / ( ( Max( MLU,DS ) - ( RRSe - MLU ) ) - ( Min( MUC ,DS ) + MUC ) ) ) + ( ( MUR / CS ) * RRSe ) ),RMSe ) ) ,( ( MUC / Min( Min( RCSe ,Min( MUM ,MUC ) ) ,RMSe ) ) - ( MUM * RCSe ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7349724446261859}, {"determining": "Min( Min( Min( ( Max( Max( PN,Min( DDR ,Max( PN,DDR ) ) ),PN ) - MDR ) ,PN ) ,MRS ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,BR ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( MUM + ( DS * RCSe ) ) ,MUC ) ,( RCSe - RMSe ) )", "obj1": 0.14444444444444443, "obj2": 0.7564643400448605}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS - CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,( MUC / CS ) ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( ( ( ( ARS / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7685185185185185, "obj2": 0.10263171967513854}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Max( MDR,( ACS - FirstVNF_CPU ) ) ) + PN ) - MDR ) ,AMS ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( ( Min( BR ,RRS ) + ( FirstVNF_CPU_Server + Const ) ) - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( DS / RMSe ) ,MUR ) * CS ) - ( Max( ( MLU - MLU ),( ( Min( RRSe ,RRSe ) + MUR ) / ( DS - MUR ) ) ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( Max( MLU,RMSe ) + ( MUM + RMSe ) ) ) )", "obj1": 0.1425925925925926, "obj2": 0.7679027096532093}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * ( Max( ( Min( ( FirstVNF_Mem / AMS ) ,( DDR * FirstVNF_RAM ) ) - MDR ),ARS ) - Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( MUR - Min( Min( Max( ( RCSe - RRSe ),MLU ) ,CS ) ,( Max( RMSe,RMSe ) + DS ) ) ) + MUM ) - CS ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.7574074074074074, "obj2": 0.10561036436270974}, {"determining": "Min( ( Max( ( CRS + ( Max( ARS,DDR ) + PN ) ),Max( CRS,ARS ) ) - MDR ) ,PN )", "choosing": "Min( ( ( ( Min( ( ( RMSe / ( MLU + MLU ) ) / RMSe ) ,Max( CS,RMSe ) ) / Max( ( RMSe / RMSe ),( ( MUR * DS ) / MUC ) ) ) + ( ( Min( ( MUC + RMSe ) ,( ( RMSe + MUC ) + CS ) ) - MLU ) + MUC ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6837719079072181}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) / ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02718069223874117}, {"determining": "Min( ( Const - MDR ) ,( FirstVNF_Mem - PN ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( ( ( MUR - MUM ) / RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - ( RMSe + RRSe ) ) ) - CS ) ,( ( RMSe + MUM ) - ( MLU - CS ) ) )", "obj1": 0.4462962962962963, "obj2": 0.3653445033482814}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * Min( DDR ,( MDR * FirstVNF_Mem ) ) ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( RMSe ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe + Max( Max( RMSe,MUM ),( DS / DS ) ) ) / ( ( ( RRSe / RMSe ) / ( ( RRSe - ( MLU + RCSe ) ) / RMSe ) ) / MLU ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.03562689516543886}, {"determining": "Min( ( Min( ( FirstVNF_Mem - FirstVNF_RAM ) ,PN ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( MLU / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.9259259259259259, "obj2": 0.03285010773775697}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( Max( ( CRS + PN ),Max( CRS,ARS ) ) - DDR ) - DDR ) )", "choosing": "Min( ( ( ( ( Max( ( MUM / RMSe ),( MUC / MUC ) ) + RRSe ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6166666666666667, "obj2": 0.22197036478632565}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.6919769137866489}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( PN + ( PN * ARS ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUR - Min( Min( Max( ( RCSe - RRSe ),MLU ) ,CS ) ,( Max( RMSe,RMSe ) + DS ) ) ) + MUM ) - CS ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.7537037037037037, "obj2": 0.10742493596140137}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( Max( ARS,DDR ) / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( ( ( RMSe + MLU ) + ( DS / RCSe ) ) ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) ) )", "obj1": 0.9574074074074074, "obj2": 0.013957403632225595}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973901332060258}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( Max( PN,Min( DDR ,( FirstVNF_RAM_Server - BR ) ) ),PN ) ) ,PN ) ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ACS ) + Max( ARS,CRS ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( Min( ( Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,DS ) - RCSe ) ) * RMSe ) ,MUC ) * DS ) ) )", "obj1": 0.6611111111111111, "obj2": 0.1824053845984405}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - MUM ) ) - CS ) ,( RCSe - ( RMSe + MUM ) ) )", "obj1": 0.45740740740740743, "obj2": 0.35935191886401513}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.29814814814814816, "obj2": 0.557902981060653}], "44": [{"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( MRS * MDR ) - ( FirstVNF_CPU_Server + RRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( CS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( ( PN * ARS ) + ( MRS * AMS ) ) - DDR ) - MDR ) ,( ( ( Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( Min( ( ( CS + MUR ) + RMSe ) ,MUR ) - ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,( ( ( ( ARS / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( Min( MRS ,Min( ( ( FirstVNF_Mem * MDR ) - Min( ( ( Min( DDR ,PN ) - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,MDR ) ) ,FirstVNF_CPU ) + MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - Max( ( RMSe - MUR ),( ( RCSe / ( RCSe - MUR ) ) - ( RMSe + ( Max( CS,MUM ) / Min( RRSe ,CS ) ) ) ) ) ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5, "obj2": 0.3243375158550747}, {"determining": "Min( ( ( Max( Min( ( CRS * DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),PN ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe + ( ( ( MUR + RMSe ) + ( ( MUC / ( ( MUC + MUC ) + MUR ) ) * ( ( MUM + ( MUR - MUM ) ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8003062645539013}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( MUR + MUC ),( MUC + ( RRSe * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.387037037037037, "obj2": 0.4270571875642936}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5777777777777777, "obj2": 0.2433169902937233}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( ARS,AMS ) ) ,PN ) ) ,( ( Min( ( CRS / ( Min( ACS ,MRS ) * CRS ) ) ,Min( DDR ,MDR ) ) + Min( ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ,( ARS * ARS ) ) ) + Max( RRS,ARS ) ) )", "choosing": "Min( Min( ( MLU * RRSe ) ,RMSe ) ,Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.2796296296296296, "obj2": 0.5888968596692127}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + MRS ) - ( ( ARS - PN ) / ( FirstVNF_Mem_Server / Max( Const,ACS ) ) ) ) ,PN ) ) ,( FirstVNF_CPU_Server * Min( DDR ,( Min( ( ( ( RRS * ACS ) * Min( ARS ,MRS ) ) * ARS ) ,RRS ) + CRS ) ) ) )", "choosing": "Min( ( ( ( Min( MLU ,DS ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( MUM,MLU ) ) ) ) ) + ( MUC / ( ( CS / ( MLU - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) ) - CS ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.3648148148148148, "obj2": 0.4696235729162489}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU_Server ) ) - Max( ARS,DDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS / ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( RCSe - Max( ( DS / Min( DS ,RMSe ) ),( RRSe - Min( ( MUC - ( ( MUM * DS ) / MUR ) ) ,MUM ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16537933482877512}, {"determining": "Min( Min( Min( ( Max( Max( PN,Min( DDR ,Max( PN,DDR ) ) ),PN ) - MDR ) ,PN ) ,MRS ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,BR ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( MUM + ( DS * RCSe ) ) ,MUC ) ,( RCSe - RMSe ) )", "obj1": 0.14444444444444443, "obj2": 0.7564643400448605}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( FirstVNF_Mem ,( FirstVNF_RAM_Server + ARS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + RRSe ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( ( MUM * MUC ) ,MUC ) ) ) ) + ( RMSe - RMSe ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.48148148148148145, "obj2": 0.33626177860459394}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( DDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( Const * Max( AMS,MDR ) ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( ( MUR - ( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * ( RCSe / MUM ) ) ) * MLU ) ) ,( ( RCSe - MUC ) - RCSe ) )", "obj1": 0.30925925925925923, "obj2": 0.533014275370535}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( ( ( Max( PN,( RRS - Max( PN,Min( DDR ,( FirstVNF_Mem * RRS ) ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8111111111111111, "obj2": 0.0817735241672099}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3425925925925926, "obj2": 0.4872429989890356}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5016797113685082}, {"determining": "Min( ( PN - ( Min( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),Max( PN,DDR ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.5944444444444444, "obj2": 0.23283868814749858}, {"determining": "Min( ( PN - ( Min( ( DDR - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( Max( DDR,CRS ) - FirstVNF_CPU_Server ) - MDR ) )", "choosing": "Min( ( ( Min( MUC ,RCSe ) + Min( ( Min( ( CS + MUC ) ,( DS - MUM ) ) - Min( RMSe ,( RCSe / ( DS * RRSe ) ) ) ) ,( CS + MUC ) ) ) - CS ) ,( Max( RRSe,CS ) * RCSe ) )", "obj1": 0.6129629629629629, "obj2": 0.2288331032509526}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Min( ( BR * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( Max( MDR,CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( Max( MUC,( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( ( MLU - MLU ) ,MUM ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5669238491101176}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * Min( DDR ,( MDR * FirstVNF_Mem ) ) ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( MLU + ( ( Min( ( DS / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.9481481481481482, "obj2": 0.02174199654486123}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( Max( ARS,DDR ) / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01247743171873269}, {"determining": "( ( Const + FirstVNF_Mem ) - ( ( FirstVNF_CPU * ( ( ( ( ( ARS / Const ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) )", "choosing": "Min( ( RMSe * DS ) ,Min( ( DS * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.737037037037037, "obj2": 0.11659413956284033}, {"determining": "Min( ( ( Max( ACS,AMS ) / ( ACS + FirstVNF_RAM_Server ) ) - ( Min( ( ( ARS / FirstVNF_RAM ) - ( ( ( PN - AMS ) / MRS ) - ( FirstVNF_RAM_Server - FirstVNF_RAM ) ) ) ,FirstVNF_CPU ) / MDR ) ) ,( FirstVNF_RAM + FirstVNF_RAM ) )", "choosing": "( Min( Min( ( ( ( CS + MUR ) * RMSe ) - ( MUM - ( MUM + ( ( MLU / MUM ) + RRSe ) ) ) ) ,( RCSe - MUM ) ) ,( Min( Min( Max( CS,( RCSe - Max( DS,DS ) ) ) ,DS ) ,RMSe ) + ( MUM / MLU ) ) ) + RMSe )", "obj1": 0.16111111111111112, "obj2": 0.7372560476099093}, {"determining": "Min( ( PN / Min( FirstVNF_RAM_Server ,CRS ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * ( MUR - MUM ) ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RRSe + ( DS * ( MLU + ( ( ( ( MUM - RRSe ) / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.524074074074074, "obj2": 0.3002283167783158}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + MUR ) ) - ( RMSe + ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.7296296296296296, "obj2": 0.12361253170514688}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( Max( ( CRS + PN ),Max( CRS,ARS ) ) - DDR ) - DDR ) )", "choosing": "Min( ( ( ( ( Max( ( MUM / RMSe ),( MUC / MUC ) ) + RRSe ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6166666666666667, "obj2": 0.22197036478632565}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( Max( PN,Min( DDR ,( FirstVNF_RAM_Server - BR ) ) ),PN ) ) ,PN ) ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ACS ) + Max( ARS,CRS ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( Min( ( Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,DS ) - RCSe ) ) * RMSe ) ,MUC ) * DS ) ) )", "obj1": 0.6611111111111111, "obj2": 0.1824053845984405}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) - MUR ) ) ) )", "obj1": 0.8851851851851852, "obj2": 0.05006900056912919}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,Min( ( Max( FirstVNF_RAM,ACS ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( Min( ( MUR - RRSe ) ,RMSe ) + CS ) - DS ) ,( RCSe - RMSe ) )", "obj1": 0.19814814814814816, "obj2": 0.6793861776581555}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( ( MRS * MDR ) - ( FirstVNF_CPU_Server + RRS ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUR - Min( Min( Max( ( RCSe - RRSe ),MLU ) ,CS ) ,( Max( RMSe,RMSe ) + DS ) ) ) + MUM ) - CS ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( ( MUR - RCSe ) - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.7518518518518519, "obj2": 0.10806146681236493}, {"determining": "( ( ( ( ARS / ( FirstVNF_CPU * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) - ( MDR - ( PN * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RCSe ) ) ) ) ) ) - CS ) ,( RCSe - ( Max( RCSe,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.15807927146006606}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS - CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( MLU / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) / ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02718069223874117}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( DDR ,( FirstVNF_RAM * PN ) ),PN ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - ( MDR * ( FirstVNF_CPU / MDR ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR / RMSe ) ,Max( ( RRSe / MUM ),( ( DS - MUM ) / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343019182363248}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.6560990312802313}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) - MUR ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.041419774999340124}, {"determining": "Min( ( PN - ( Min( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( RRS,DDR ) ),Max( PN,DDR ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( ( ( RRSe - DS ) + MUM ) - CS ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.26395236567590374}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( ( ( Min( MRS ,ACS ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) * MDR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( CS + MUM ) / Max( ( RRSe / Max( ( ( RCSe - DS ) / MUC ),RCSe ) ),Min( Max( ( MUC - ( RMSe / DS ) ),CS ) ,RCSe ) ) ) - CS ) )", "obj1": 0.8407407407407408, "obj2": 0.06770073170230871}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - MUM ) ) - CS ) ,( RCSe - ( RMSe + MUM ) ) )", "obj1": 0.45740740740740743, "obj2": 0.35935191886401513}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.8314814814814815, "obj2": 0.07291933071740757}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.3574074074074074, "obj2": 0.48092464865629175}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,( ARS + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ) ) ,( Min( ( ( FirstVNF_CPU / MDR ) + BR ) ,( Const - MRS ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + Max( MUR,RCSe ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17289920031188766}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.22592592592592592, "obj2": 0.6531862505300444}, {"determining": "Min( ( MDR - ( Max( ( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ),FirstVNF_RAM_Server ) - DDR ) ) ,( Min( RRS ,FirstVNF_RAM ) / FirstVNF_RAM_Server ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,MUR ) ) ,( RCSe - RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / Max( ( CS * ( MUC - ( ( MLU - MUM ) * MUM ) ) ),Min( ( ( MUC - CS ) - ( Min( RMSe ,RMSe ) * ( ( RMSe + MUC ) - ( DS / RCSe ) ) ) ) ,( Min( MUM ,MUM ) + ( CS + RMSe ) ) ) ) ) )", "obj1": 0.9962962962962963, "obj2": 0.004088198805071269}, {"determining": "Min( ( PN - ( Min( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),Max( PN,DDR ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( Min( ( MUM + ( DS * RCSe ) ) ,MUC ) ,( RCSe - RMSe ) )", "obj1": 0.5962962962962963, "obj2": 0.23157411604708983}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6681650058745787}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.053721081125716295}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) ) )", "choosing": "Min( ( MUR - Max( ( MUR + MUC ),( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.13703703703703704, "obj2": 0.7664016717950686}, {"determining": "Min( ( FirstVNF_CPU * ( DDR / ARS ) ) ,( FirstVNF_CPU + ( FirstVNF_RAM / FirstVNF_RAM ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.35, "obj2": 0.4831142011278692}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - ( PN - MRS ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( MLU - RMSe ) ,( RRSe - MUR ) ),( CS + RCSe ) ) - RCSe ) - RMSe ) )", "obj1": 0.5685185185185185, "obj2": 0.252181688728459}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM ,( ( ( AMS * MRS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * ( CRS * MRS ) ) ) ,( ( ( ( Max( Max( ( FirstVNF_RAM / AMS ),DDR ),PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe - RMSe ) ) ) * ( MUM * ( RRSe * ( RRSe - RRSe ) ) ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.29259259259259257, "obj2": 0.5650270069852571}, {"determining": "Min( ( FirstVNF_Mem + ( FirstVNF_CPU_Server - FirstVNF_Mem ) ) ,( ( ( Min( ( MDR / CRS ) ,FirstVNF_CPU_Server ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( ARS * CRS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUC,MUR ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR / MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Max( DS,RCSe ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.6681650058745787}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ),PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,MDR ) * Min( ARS ,ACS ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,RMSe ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.6944444444444444, "obj2": 0.15630337817451045}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7298304775302517}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_Mem + ( ACS + Min( Const ,Min( ACS ,PN ) ) ) ) ,( CRS + Max( MDR,MRS ) ) ) * FirstVNF_Mem_Server ) ) ,( ( AMS - ( FirstVNF_Mem * Const ) ) - ( ( CRS + ( Max( DDR,( FirstVNF_RAM - ARS ) ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * MUR ) ) - Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,( RMSe * ( ( DS - ( MUM / MUC ) ) + DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.6927568300636209}, {"determining": "Min( ( ( Max( PN,( RRS - Max( PN,Min( DDR ,( FirstVNF_Mem * RRS ) ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7833333333333333, "obj2": 0.09459606779970081}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / ( PN - CRS ) ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RRSe + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.19444444444444445, "obj2": 0.6812540992646227}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( Min( FirstVNF_CPU ,Max( AMS,Const ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,Min( DDR ,( Const - MRS ) ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( RCSe - RMSe ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.12962962962962962, "obj2": 0.7749386148777214}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4740740740740741, "obj2": 0.341353651731921}, {"determining": "Min( ( PN - ( Min( Min( ( ( MRS - Min( FirstVNF_RAM ,AMS ) ) - ( ( MRS * AMS ) - Min( MRS ,MDR ) ) ) ,FirstVNF_RAM ) ,MDR ) * MDR ) ) ,( DDR * PN ) )", "choosing": "Min( ( MUR - Max( ( Max( CS,( ( CS - ( CS - MLU ) ) * RMSe ) ) + ( RRSe + RMSe ) ),( MUC + ( Max( ( RCSe - RCSe ),Max( ( DS + MUR ),DS ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7079296219033452}, {"determining": "Min( Min( ( Max( ( FirstVNF_RAM + ( ( ( AMS * MRS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ),FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,Min( ( FirstVNF_Mem - MDR ) ,PN ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * ( FirstVNF_Mem_Server * MRS ) ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( Max( DDR,CRS ) ,( FirstVNF_CPU * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( Max( ( MLU + MUM ),( ( Min( RMSe ,DS ) + RMSe ) - MUR ) ) ,( RRSe + ( ( Min( MUM ,RCSe ) - RMSe ) + RMSe ) ) ) - RMSe ) ,( MUC / Min( ( Min( DS ,Min( MUM ,Min( RCSe ,( MUC * MLU ) ) ) ) - RRSe ) ,RMSe ) ) )", "obj1": 0.42407407407407405, "obj2": 0.3912176639401995}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973901332060258}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.8703703703703703, "obj2": 0.050166996113311865}, {"determining": "Min( Min( MRS ,Min( ( ( Max( ( ( PN - Const ) - MDR ),Min( DDR ,( FirstVNF_Mem * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - RRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( RCSe ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RRSe ,RCSe ) ) )", "obj1": 0.5666666666666667, "obj2": 0.2529206763069104}, {"determining": "Min( ( PN - ( MDR * FirstVNF_CPU_Server ) ) ,( FirstVNF_CPU + BR ) )", "choosing": "Min( ( ( Max( Min( MUM ,CS ),( MUM + MLU ) ) / Max( DS,Min( RCSe ,DS ) ) ) - CS ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( RCSe / DS ) ) ) ) ) - CS ) )", "obj1": 0.7722222222222223, "obj2": 0.0991850046200319}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS - CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( Min( Max( MUC,( MUC / CS ) ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( Max( ARS,DDR ) / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ,AMS ) )", "choosing": "( ( Min( ( MUC - Min( RMSe ,( CS + Min( ( MUR - MLU ) ,RCSe ) ) ) ) ,( RCSe - MUM ) ) - ( ( MUM / MLU ) + Min( ( ( RMSe + MLU ) + Max( ( MUM / RMSe ),MUR ) ) ,MUM ) ) ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( ( MUC * DS ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) + ( CS * MUR ) ) / ( ( RRSe - DS ) + ( ( DS - Min( DS ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) ) )", "obj1": 0.9537037037037037, "obj2": 0.016143460211102093}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5407407407407407, "obj2": 0.28023080771766046}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.039966589303823886}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.65, "obj2": 0.19316399136412404}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5444444444444444, "obj2": 0.2785721918044306}, {"determining": "Min( Min( FirstVNF_CPU ,MDR ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,( CRS * FirstVNF_RAM ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUC ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.13518518518518519, "obj2": 0.7679116719700004}], "45": [{"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( ( MDR - ( Max( ( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ),FirstVNF_RAM_Server ) - DDR ) ) ,Min( ( ( Min( ( BR * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( Max( MDR,CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( Max( MUC,( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( ( MLU - CS ) ,MUM ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( MRS * MDR ) - ( FirstVNF_CPU_Server + RRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( CS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,( ( ( ( ARS / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( Min( ( ( AMS - DDR ) - MDR ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - MUM ) ) - CS ) ,( RCSe - ( RMSe + MUM ) ) )", "obj1": 0.45740740740740743, "obj2": 0.35935191886401513}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + MRS ) - ( ( ARS - PN ) / ( FirstVNF_Mem_Server / Max( Const,ACS ) ) ) ) ,PN ) ) ,( FirstVNF_CPU_Server * Min( DDR ,( Min( ( ( ( RRS * ACS ) * Min( ARS ,MRS ) ) * ARS ) ,RRS ) + CRS ) ) ) )", "choosing": "Min( ( ( ( Min( MLU ,DS ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( MUM,MLU ) ) ) ) ) + ( MUC / ( ( CS / ( MLU - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) ) - CS ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.3648148148148148, "obj2": 0.4696235729162489}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.2740740740740741, "obj2": 0.5725355389547092}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( PN * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( RCSe - RMSe ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2167873707231883}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( ( Max( PN,( RRS - Max( PN,Min( DDR ,( FirstVNF_Mem * RRS ) ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8, "obj2": 0.08609380558340173}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5777777777777777, "obj2": 0.2433169902937233}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR - Max( ( MUR + MUC ),( MUC + ( RRSe * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.387037037037037, "obj2": 0.4270571875642936}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( DDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( Const * Max( AMS,MDR ) ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( ( MUR - ( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * ( RCSe / MUM ) ) ) * MLU ) ) ,( ( RCSe - MUC ) - RCSe ) )", "obj1": 0.30925925925925923, "obj2": 0.533014275370535}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,( CRS * ARS ) ),PN ) - MDR ) ,( ARS + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ) ) ,( Min( ( ( FirstVNF_CPU / MDR ) + BR ) ,( Const - MRS ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + ( RRSe / DS ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.737037037037037, "obj2": 0.11637787497724289}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM ,( ( ( AMS * MRS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * ( CRS * MRS ) ) ) ,( ( ( ( Max( Max( ( FirstVNF_RAM / AMS ),DDR ),PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe - RMSe ) ) ) * ( MUM * ( RRSe * ( RRSe - RRSe ) ) ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.29259259259259257, "obj2": 0.5650270069852571}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( ( MRS * MDR ) - ( FirstVNF_CPU_Server + RRS ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUR - Min( Min( Max( ( RCSe - RRSe ),MLU ) ,CS ) ,( Max( RMSe,RMSe ) + DS ) ) ) + MUM ) - CS ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( ( MUR - RCSe ) - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.7518518518518519, "obj2": 0.10806146681236493}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5981481481481481, "obj2": 0.22821286732446053}, {"determining": "Min( ( ( Max( Min( ( CRS * DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),PN ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe + ( ( ( MUR + RMSe ) + ( ( MUC / ( ( MUC + MUC ) + MUR ) ) * ( ( MUM + ( MUR - MUM ) ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8003062645539013}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( ( FirstVNF_Mem / RRS ) - ( ( RRS + ( FirstVNF_RAM / MDR ) ) - FirstVNF_Mem ) ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - Min( Max( ( ( MLU * ( MUC - RCSe ) ) * ( MUM - MUC ) ),( Max( RRSe,MLU ) * ( Max( CS,MUR ) * Max( MLU,CS ) ) ) ) ,Min( MUC ,( ( ( CS - RRSe ) / Min( ( CS * MUR ) ,RMSe ) ) + CS ) ) ) )", "obj1": 0.9222222222222223, "obj2": 0.03292121742377091}, {"determining": "Min( ( ( Min( MRS ,ACS ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) * MDR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( CS + MUM ) / Max( ( RRSe / Max( ( ( RCSe - DS ) / MUC ),RCSe ) ),Min( Max( ( MUC - ( RMSe / DS ) ),CS ) ,RCSe ) ) ) - CS ) )", "obj1": 0.8407407407407408, "obj2": 0.06770073170230871}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( ( ( ( PN - CRS ) - ( FirstVNF_RAM - FirstVNF_RAM ) ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / MUM ) ) ) ) - CS ) ,( RCSe - ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ) )", "obj1": 0.6944444444444444, "obj2": 0.15245250831346918}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( PN - ( Min( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),Max( PN,DDR ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.5944444444444444, "obj2": 0.23283868814749858}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "( ( ( ( ARS / ( FirstVNF_CPU * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) - ( MDR - ( PN * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RCSe ) ) ) ) ) ) - CS ) ,( RCSe - ( Max( RCSe,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.15807927146006606}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( Max( PN,Min( DDR ,( FirstVNF_RAM_Server - BR ) ) ),PN ) ) ,PN ) ) ,( ( ( FirstVNF_Mem_Server - FirstVNF_RAM_Server ) / ACS ) + Max( ARS,CRS ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( Min( ( Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,DS ) - RCSe ) ) * RMSe ) ,MUC ) * DS ) ) )", "obj1": 0.6611111111111111, "obj2": 0.1824053845984405}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5016797113685082}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( RCSe - ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( CS,RRSe ) ) ) ) * RRSe ) - MUR ) ) )", "obj1": 0.7833333333333333, "obj2": 0.09400003546052649}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Min( ACS ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( RRSe + MUM ) - ( MUM + ( ( MLU + ( CS * Min( MUM ,RRSe ) ) ) * DS ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8014419952595567}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973901332060258}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,DDR ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( CS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.65, "obj2": 0.1928763697478886}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU_Server ) ) - Max( ARS,DDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS / ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( RCSe - Max( ( DS / Min( DS ,RMSe ) ),( RRSe - Min( ( MUC - ( ( MUM * DS ) / MUR ) ) ,MUM ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16537933482877512}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7214855352621427}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,MDR ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( Min( MUC ,MUR ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - RMSe ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.4962962962962963, "obj2": 0.3259961317683046}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.22037037037037038, "obj2": 0.6520857750776345}, {"determining": "Min( ( ( ( Min( ( ( AMS / ACS ) - PN ) ,DDR ) / MDR ) + ( AMS + DDR ) ) + DDR ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( MUM + CS ) ) ,( ( CS * MUR ) - RMSe ) )", "obj1": 0.5444444444444444, "obj2": 0.27848305011659175}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( DDR ,( Const - MRS ) ) - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( MLU ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.2833333333333333, "obj2": 0.5653018026696066}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( Min( Min( ( Max( Max( PN,Min( DDR ,Max( PN,DDR ) ) ),PN ) - MDR ) ,PN ) ,MRS ) ,( ( ( ( FirstVNF_CPU / MDR ) + BR ) + Min( ( FirstVNF_Mem_Server - Max( MRS,( Max( AMS,BR ) * Min( ARS ,FirstVNF_RAM ) ) ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( MUM + ( DS * RCSe ) ) ,MUC ) ,( RCSe - RMSe ) )", "obj1": 0.14444444444444443, "obj2": 0.7564643400448605}, {"determining": "Min( ( PN - ( Min( ( DDR - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( DS - MUM ) ) - Min( RMSe ,( RCSe / ( DS * RRSe ) ) ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.5259259259259259, "obj2": 0.2992310315492984}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( DDR ,( FirstVNF_RAM * PN ) ),PN ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - ( MDR * ( FirstVNF_CPU / MDR ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR / RMSe ) ,Max( ( RRSe / MUM ),( ( DS - MUM ) / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343019182363248}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.3357086928293299}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.053721081125716295}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + ( CRS / Const ) ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - FirstVNF_Mem ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) / MUC ) + ( ( Min( Min( ( MUR - MUC ) ,RCSe ) ,MLU ) * Min( ( MLU * Max( MLU,MLU ) ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8166666666666667, "obj2": 0.0798060614778847}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.21666666666666667, "obj2": 0.6560990312802313}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.039966589303823886}, {"determining": "Min( ( PN - ( Min( Min( ( ( MRS - Min( FirstVNF_RAM ,AMS ) ) - ( ( MRS * AMS ) - Min( MRS ,MDR ) ) ) ,FirstVNF_RAM ) ,MDR ) * MDR ) ) ,( DDR * PN ) )", "choosing": "Min( ( MUR - Max( ( Max( CS,( ( CS - ( CS - MLU ) ) * RMSe ) ) + ( RRSe + RMSe ) ),( MUC + ( Max( ( RCSe - RCSe ),Max( ( DS + MUR ),DS ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7079296219033452}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3425925925925926, "obj2": 0.4872429989890356}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5016797113685082}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( ( PN - ( Min( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( RRS,DDR ) ),Max( PN,DDR ) ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( ( ( RRSe - DS ) + MUM ) - CS ) ) ) )", "obj1": 0.562962962962963, "obj2": 0.26395236567590374}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / ( PN - CRS ) ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.20925925925925926, "obj2": 0.6647465843760118}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.8296296296296296, "obj2": 0.07404198831185997}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( Const * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,Min( DS ,MUC ) ) ) * RMSe ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.20850175287229458}, {"determining": "Min( ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ,FirstVNF_RAM )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.4185185185185185, "obj2": 0.39253856536839027}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( RCSe * ( DS / RCSe ) ) ) - MUR ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04141977499934012}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,Min( ( Max( FirstVNF_RAM,ACS ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) ) + ( FirstVNF_RAM - Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.2037037037037037, "obj2": 0.6709407659695926}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7298304775302517}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( MDR * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3888888888888889, "obj2": 0.4263113769956746}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,DDR ) / Const ) ) ) ) + ( ( PN + ( PN * ARS ) ) - DDR ) ) - FirstVNF_CPU ) ,Min( DDR ,( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( ( ( Max( Min( MLU ,MUM ),RRSe ) - MUM ) / ( Max( MUR,( MUM / RMSe ) ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01247743171873269}, {"determining": "Min( ( AMS - FirstVNF_RAM_Server ) ,( BR - DDR ) )", "choosing": "Min( ( CS - Max( Max( ( ( DS + MUC ) + RRSe ),( DS / ( MUR * MUR ) ) ),( ( Min( ( MUR - ( DS - RMSe ) ) ,MLU ) / ( DS / Min( RCSe ,Max( MUR,DS ) ) ) ) + Min( MUC ,RCSe ) ) ) ) ,( MUM - MUM ) )", "obj1": 0.17962962962962964, "obj2": 0.7032111817558343}, {"determining": "Min( Max( Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ),AMS ) ,MRS )", "choosing": "Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,Min( RCSe ,( MUM / ( Max( RMSe,MUC ) + MLU ) ) ) )", "obj1": 0.1685185185185185, "obj2": 0.7244192040827536}, {"determining": "Min( Min( MRS ,Min( ( ( FirstVNF_Mem * MDR ) - Min( ( ( Min( DDR ,PN ) - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,MDR ) ) ,FirstVNF_CPU ) + MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - Max( ( RMSe - MUR ),( ( RCSe / ( RCSe - MUR ) ) - ( RMSe + ( Max( CS,MUM ) / Min( RRSe ,CS ) ) ) ) ) ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5, "obj2": 0.3243375158550747}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( RCSe - RMSe ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.19074074074074074, "obj2": 0.6830397704795621}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) / ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02718069223874117}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_Mem + ( ACS + Min( Const ,Min( ACS ,PN ) ) ) ) ,( CRS + Max( MDR,MRS ) ) ) * FirstVNF_Mem_Server ) ) ,( ( AMS - ( FirstVNF_Mem * Const ) ) - ( ( CRS + ( Max( DDR,( FirstVNF_RAM - ARS ) ) + PN ) ) - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * MUR ) ) - Min( ( ( ( CS + MUM ) * RRSe ) - MUR ) ,( RMSe * ( ( DS - ( MUM / MUC ) ) + DS ) ) ) )", "obj1": 0.18703703703703703, "obj2": 0.6927568300636209}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.48058488962331924}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,( AMS / FirstVNF_CPU ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) / RRSe ) + RMSe ) - ( MUR - ( ( MUM + ( CS + ( RMSe + MUC ) ) ) * ( MUM * Max( RMSe,Min( RCSe ,MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * MUM ) ) ) ) )", "obj1": 0.8814814814814815, "obj2": 0.04595786324323748}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,Const ),BR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe / MUM ) ,( Max( ( Min( RMSe ,MLU ) + MUM ),( ( RMSe + MUR ) - Max( RMSe,CS ) ) ) - CS ) )", "obj1": 0.9296296296296296, "obj2": 0.031133677132673843}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server + ( ( RRS - CRS ) / Const ) ) ) ) + ( DDR - ( ( PN * Min( DDR ,( ACS * AMS ) ) ) + PN ) ) ) - MDR ) ,( ACS - CRS ) )", "choosing": "( ( MLU + ( ( Min( ( DS / RMSe ) ,MUR ) * DS ) - ( ( ( Max( RCSe,( DS - MLU ) ) - MUR ) * ( DS * MUR ) ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( Min( RMSe ,Max( CS,( Min( MUC ,( CS / RRSe ) ) * MUC ) ) ) + Max( ( Min( RRSe ,RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.02482262551054496}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( FirstVNF_Mem_Server - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RCSe - RMSe ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.18518518518518517, "obj2": 0.6960682756465032}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( MDR * MDR ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Max( ( RRSe / DS ),( RCSe + MUC ) ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.42407407407407405, "obj2": 0.38912665511679373}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,( ( ( ( FirstVNF_CPU / FirstVNF_Mem ) - ( FirstVNF_RAM - DDR ) ) + ( ( FirstVNF_Mem_Server / ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) ,( RRSe + Max( RCSe,Min( DS ,MUC ) ) ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.039966589303823886}, {"determining": "Min( ( ( Max( PN,( ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) - Max( PN,Min( DDR ,( FirstVNF_Mem * RRS ) ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( ( MUC / Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.1425925925925926, "obj2": 0.7610072655818227}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.24845788324693313}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7385150427959564}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( ( ( ( PN - CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( Min( MUC ,MUR ) * DS ) ) )", "obj1": 0.6666666666666666, "obj2": 0.17852294208736663}, {"determining": "Min( ( PN - Max( ( FirstVNF_RAM / ARS ),DDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( DS - MUM ) ) - Min( RMSe ,( RCSe / ( DS * RRSe ) ) ) ) ) ) - CS ) ,( RMSe * RCSe ) )", "obj1": 0.9907407407407407, "obj2": 0.003832732775742412}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.3425925925925926, "obj2": 0.4872429989890356}], "46": [{"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( ( ( BR * PN ) - DDR ) ,( PN - CRS ) )", "choosing": "( ( ( Min( ( MUR - MUM ) ,RCSe ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( ( MDR - ( Max( ( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ),FirstVNF_RAM_Server ) - DDR ) ) ,Min( ( ( Min( ( BR * FirstVNF_CPU_Server ) ,FirstVNF_Mem ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( Max( MDR,CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( Max( MUC,( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( ( MLU - CS ) ,MUM ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( PN ,( ( ( ( ARS / CRS ) - ( FirstVNF_RAM - DDR ) ) + BR ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) + ( FirstVNF_Mem * MRS ) ) / Min( ACS ,( ( ( PN - ( MDR - ( CRS / RRS ) ) ) * Min( ( ( Const - FirstVNF_RAM ) / FirstVNF_CPU ) ,PN ) ) / ( FirstVNF_Mem_Server - MRS ) ) ) )", "choosing": "( ( ( MUC * ( RRSe / MLU ) ) * MUM ) - Min( RMSe ,CS ) )", "obj1": 0.26481481481481484, "obj2": 0.5916711524456141}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( Max( BR,Min( DDR ,Const ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( ACS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS + MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + ( MLU / Max( DS,DS ) ) ) ) )", "obj1": 0.4703703703703704, "obj2": 0.3504034406544762}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( Max( FirstVNF_Mem,DDR ) / Const ) ) ) ) + ( ( PN + ( PN * ARS ) ) - DDR ) ) - FirstVNF_CPU ) ,Min( DDR ,( MDR - FirstVNF_CPU_Server ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( ( ( Max( Min( MLU ,MUM ),RRSe ) - MUM ) / ( Max( MUR,( MUM / RMSe ) ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01247743171873269}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( ( Max( PN,( RRS - Max( PN,Min( DDR ,( FirstVNF_Mem * RRS ) ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) - CRS ) )", "choosing": "( ( ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7777777777777778, "obj2": 0.09743201812920978}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - PN ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( ( MLU * MUR ) / MLU ) )", "obj1": 0.4537037037037037, "obj2": 0.3653993867503875}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU_Server ) ) - Max( ARS,DDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS / ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( RCSe - Max( ( DS / Min( DS ,RMSe ) ),( RRSe - Min( ( MUC - ( ( MUM * DS ) / MUR ) ) ,MUM ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16537933482877512}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.053721081125716295}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( Min( MRS ,Min( ( ( DDR - MDR ) - MDR ) ,MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( PN,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,DS ) - RCSe ) ) ) ) - ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - ( Min( ( RRSe + ( RMSe * CS ) ) ,( MLU - DS ) ) - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.387037037037037, "obj2": 0.4269851508582536}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - ( ACS - CRS ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( Max( RRSe,( RCSe - RMSe ) ) * ( DS / RCSe ) ) ) - MUR ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.03529665263926859}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( FirstVNF_RAM / FirstVNF_CPU_Server ) ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Min( FirstVNF_Mem ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( RMSe,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,RMSe ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5777777777777777, "obj2": 0.24268660240855386}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( ARS - PN ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( ( MRS * MDR ) - ( FirstVNF_CPU_Server + RRS ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUR - Min( Min( Max( ( RCSe - RRSe ),MLU ) ,CS ) ,( Max( RMSe,RMSe ) + DS ) ) ) + MUM ) - CS ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( ( MUR - RCSe ) - ( ( ( CS + ( RMSe + MUC ) ) + Max( RCSe,MLU ) ) * ( MUM * ( DS / RCSe ) ) ) ) ) - CS ) )", "obj1": 0.7537037037037037, "obj2": 0.10797881130925933}, {"determining": "Min( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * MUM ) ) ) ) )", "obj1": 0.8814814814814815, "obj2": 0.04595786324323748}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU - CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - FirstVNF_Mem ) ) ,( CRS * PN ) ) ) + Max( ARS,( MRS + MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MUR * MLU ) / MLU ) ) - ( DS - ( DS + Max( CS,Min( DS ,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5319314107066107}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.2740740740740741, "obj2": 0.5725355389547092}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM ,( ( ( AMS * MRS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * ( CRS * MRS ) ) ) ,( ( ( ( Max( Max( ( FirstVNF_RAM / AMS ),DDR ),PN ) * ARS ) + PN ) - DDR ) - MDR ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe - RMSe ) ) ) * ( MUM * ( RRSe * ( RRSe - RRSe ) ) ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.29259259259259257, "obj2": 0.5650270069852571}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( ( Max( Min( ( CRS * DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),PN ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe + ( ( ( MUR + RMSe ) + ( ( MUC / ( ( MUC + MUC ) + MUR ) ) * ( ( MUM + ( MUR - MUM ) ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8003062645539013}, {"determining": "Min( ( ( Min( MRS ,ACS ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) * MDR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( CS + MUM ) / Max( ( RRSe / Max( ( ( RCSe - DS ) / MUC ),RCSe ) ),Min( Max( ( MUC - ( RMSe / DS ) ),CS ) ,RCSe ) ) ) - CS ) )", "obj1": 0.8407407407407408, "obj2": 0.06770073170230871}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - ACS ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + CS ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9851851851851852, "obj2": 0.006451413476344586}, {"determining": "Min( Min( ( ( AMS - DDR ) - ( Min( AMS ,( FirstVNF_CPU_Server / MDR ) ) / ( Min( ARS ,ACS ) / ( PN / PN ) ) ) ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe / Min( ( Min( ( RCSe / MUM ) ,CS ) + RCSe ) ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.45740740740740743, "obj2": 0.35842688208395207}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.46615566094770877}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( RRS * FirstVNF_Mem ) * ( Max( ARS,DDR ) / Const ) ) ) ) + ( ( ( ARS * PN ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RMSe * Max( MUC,RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( RCSe - Min( ( RMSe - CS ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.95, "obj2": 0.017270338687996635}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( PN * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( RCSe - RMSe ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2167873707231883}, {"determining": "( ( ( ( ARS / ( FirstVNF_CPU * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) - ( MDR - ( PN * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RCSe ) ) ) ) ) ) - CS ) ,( RCSe - ( Max( RCSe,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.15807927146006606}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + MRS ) - ( ( ARS - PN ) / ( FirstVNF_Mem_Server / Max( Const,ACS ) ) ) ) ,PN ) ) ,( FirstVNF_CPU_Server * Min( DDR ,( Min( ( ( ( RRS * ACS ) * Min( ARS ,MRS ) ) * ARS ) ,RRS ) + CRS ) ) ) )", "choosing": "Min( ( ( ( Min( MLU ,DS ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( MUM,MLU ) ) ) ) ) + ( MUC / ( ( CS / ( MLU - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) ) - CS ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.3648148148148148, "obj2": 0.4696235729162489}, {"determining": "Min( Min( MRS ,Min( ( ( ( ( FirstVNF_Mem_Server * AMS ) + FirstVNF_RAM ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5925925925925926, "obj2": 0.2324637140333266}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6037037037037037, "obj2": 0.2233039867999687}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - DDR ) - MDR ) ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( Max( ( RRSe / RMSe ),( MUM - RMSe ) ) ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( CS * MUR ) ) / Min( Max( MUM,( ( MUC - ( ( MLU - MUM ) * MUM ) ) * Max( ( MLU + ( RCSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.4929631464161796}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Min( ACS ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( RRSe + MUM ) - ( MUM + ( ( MLU + ( CS * Min( MUM ,RRSe ) ) ) * DS ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8014419952595567}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973901332060258}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,MDR ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5092592592592593, "obj2": 0.31531539184182983}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( DDR ,( FirstVNF_RAM * PN ) ),PN ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - ( MDR * ( FirstVNF_CPU / MDR ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR / RMSe ) ,Max( ( RRSe / MUM ),( ( DS - MUM ) / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343019182363248}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( FirstVNF_CPU * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( ( MUR - ( ( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * CS ) ) * MLU ) ) ,( Max( RCSe,MUC ) - RCSe ) )", "obj1": 0.7296296296296296, "obj2": 0.12636988235251226}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( Min( ( Min( MDR ,PN ) - FirstVNF_CPU ) ,Min( ( Max( PN,( ( FirstVNF_RAM + FirstVNF_CPU ) - ( ACS * CRS ) ) ) - MDR ) ,PN ) ) ,( ( ( ( DDR / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( Min( Max( DDR,FirstVNF_Mem ) ,RRS ) - DDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.7166666666666667, "obj2": 0.13206313004521222}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,( AMS / FirstVNF_CPU ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) / RRSe ) + RMSe ) - ( MUR - ( ( MUM + ( CS + ( RMSe + MUC ) ) ) * ( MUM * Max( RMSe,Min( RCSe ,MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server + ( ( RRS - CRS ) / Const ) ) ) ) + ( DDR - ( ( PN * Min( DDR ,( ACS * AMS ) ) ) + PN ) ) ) - MDR ) ,( ACS - CRS ) )", "choosing": "( ( MLU + ( ( Min( ( DS / RMSe ) ,MUR ) * DS ) - ( ( ( Max( RCSe,( DS - MLU ) ) - MUR ) * ( DS * MUR ) ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( Min( RMSe ,Max( CS,( Min( MUC ,( CS / RRSe ) ) * MUC ) ) ) + Max( ( Min( RRSe ,RRSe ) - RCSe ),RMSe ) ) ) )", "obj1": 0.9425925925925925, "obj2": 0.02482262551054496}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( ( ( ( PN - CRS ) - ( FirstVNF_RAM - DDR ) ) + Max( MDR,RRS ) ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( Max( MUM,RCSe ) * DS ) ) )", "obj1": 0.6685185185185185, "obj2": 0.17761977503319615}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.48058488962331924}, {"determining": "Min( ( ( Max( PN,( RRS - Max( PN,Min( DDR ,( FirstVNF_Mem * RRS ) ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "( ( ( Max( MUR,MUC ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.8, "obj2": 0.08609380558340173}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( MDR - ( Const + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( MUR / ( ( CS + RMSe ) / MUM ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) - ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( ( DS * RCSe ) ,MUM ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( CS + MUM ) )", "obj1": 0.5277777777777778, "obj2": 0.2928660228935508}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.34629629629629627, "obj2": 0.4846069302196431}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( ( PN - ( Min( Min( ( ( MRS - Min( FirstVNF_RAM ,AMS ) ) - ( ( MRS * AMS ) - Min( MRS ,MDR ) ) ) ,FirstVNF_RAM ) ,MDR ) * MDR ) ) ,( DDR * PN ) )", "choosing": "Min( ( MUR - Max( ( Max( CS,( ( CS - ( CS - MLU ) ) * RMSe ) ) + ( RRSe + RMSe ) ),( MUC + ( Max( ( RCSe - RCSe ),Max( ( DS + MUR ),DS ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7079296219033452}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5016797113685082}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( ( ( ( PN - CRS ) - ( FirstVNF_RAM - FirstVNF_RAM ) ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / MUM ) ) ) ) - CS ) ,( RCSe - ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ) )", "obj1": 0.6981481481481482, "obj2": 0.1511719923441144}, {"determining": "Min( ( FirstVNF_Mem * RRS ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7720891274617935}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.562962962962963, "obj2": 0.2550305230873761}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.17592592592592593, "obj2": 0.7214855352621427}, {"determining": "Min( Min( MRS ,Min( ( ( FirstVNF_Mem * MDR ) - Min( ( ( Min( DDR ,PN ) - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,MDR ) ) ,FirstVNF_CPU ) + MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - Max( ( RMSe - MUR ),( ( RCSe / ( RCSe - MUR ) ) - ( RMSe + ( Max( CS,MUM ) / Min( RRSe ,CS ) ) ) ) ) ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5, "obj2": 0.3243375158550747}, {"determining": "Min( Min( MRS ,( FirstVNF_Mem_Server - ( Min( DDR ,PN ) - MDR ) ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( MUM + CS ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5444444444444444, "obj2": 0.27848305011659175}, {"determining": "Min( ( ( ( ( PN * ARS ) + Min( ( ACS - MDR ) ,PN ) ) - DDR ) - MDR ) ,FirstVNF_Mem_Server )", "choosing": "( ( ( CS - MUM ) * ( DS * RMSe ) ) - ( CS - Min( ( ( ( MUR * RRSe ) - MUM ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) ,( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) )", "obj1": 0.9185185185185185, "obj2": 0.03392789150373503}, {"determining": "Min( Min( PN ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( BR / FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) ,PN ) ) ,( Min( PN ,DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( MUR - ( Min( CS ,( MUC - ( ( MUM - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) ) ,Min( Min( RCSe ,( ( DS + MLU ) + RCSe ) ) ,MLU ) ) )", "obj1": 0.75, "obj2": 0.10918342232975621}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,( CRS * ARS ) ),PN ) - MDR ) ,( ARS + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ) ) ,( Min( ( ( FirstVNF_CPU / MDR ) + BR ) ,( Const - MRS ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + ( RRSe / DS ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.7388888888888889, "obj2": 0.11548366170981088}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( Min( DDR ,( Const * RRS ) ) ,Min( ( Max( FirstVNF_RAM,ACS ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) ) + ( FirstVNF_RAM - Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,Min( DS ,MUC ) ) ) / ( Max( RMSe,MUC ) + MLU ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.1962962962962963, "obj2": 0.6807818484570439}, {"determining": "Min( ( ( ( Min( ( ( AMS / ACS ) - PN ) ,DDR ) / MDR ) + ( AMS + DDR ) ) + DDR ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( MUM + CS ) ) ,( ( CS * MUR ) - RMSe ) )", "obj1": 0.5444444444444444, "obj2": 0.27848305011659175}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( MDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.5222222222222223, "obj2": 0.2965238743920699}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,( CRS * ARS ) ),PN ) - MDR ) ,( ARS + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ) ) ,( Min( ( PN + BR ) ,( Const - MRS ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + ( RRSe / DS ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( ( Min( ( CS + MUC ) ,( DS - MUM ) ) - Min( RMSe ,( RCSe / ( DS * RRSe ) ) ) ) / RCSe ) )", "obj1": 0.8111111111111111, "obj2": 0.08325678061148203}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7298304775302517}, {"determining": "( ( FirstVNF_Mem - FirstVNF_CPU ) / ( Max( PN,DDR ) + ( ACS / FirstVNF_RAM_Server ) ) )", "choosing": "Min( Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ,( ( CS - MUC ) - Max( ( MUR / MUC ),RCSe ) ) )", "obj1": 0.9351851851851852, "obj2": 0.02718069223874117}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( FirstVNF_CPU_Server / Max( RRS,ARS ) ) ) + PN ) / MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server / ARS ) + MRS ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( Min( MLU ,RCSe ) * Min( MUR ,RRSe ) ) ) ) * RRSe ) - RCSe ) ,( ( ( DS + Min( ( CS - RMSe ) ,MUC ) ) + Max( ( ( MUM - RRSe ) + MUR ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR + ( MUR - RCSe ) ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7520791979759943}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_RAM ) ,ACS ) ,( ( ( CRS + ( Max( DDR,( FirstVNF_RAM / ARS ) ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RCSe ) ,( ( RMSe + MUM ) / Max( ( CS - ( DS - ( CS - MLU ) ) ),( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( RCSe * ( DS / RCSe ) ) ) - MUR ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04141977499934012}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( FirstVNF_CPU - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe + RRSe ) ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.40185185185185185, "obj2": 0.4108339071390721}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( FirstVNF_Mem_Server,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - Min( CS ,RCSe ) ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.13703703703703704, "obj2": 0.767816530222813}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( Const * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,Min( DS ,MUC ) ) ) * RMSe ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.20850175287229458}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( DDR ,( FirstVNF_Mem * CRS ) ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,MUR ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.825925925925926, "obj2": 0.07645647430972859}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,Const ),BR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe / MUM ) ,( Max( ( Min( RMSe ,MLU ) + MUM ),( ( RMSe + MUR ) - Max( RMSe,CS ) ) ) - CS ) )", "obj1": 0.9296296296296296, "obj2": 0.031133677132673843}, {"determining": "Min( ( PN - ( ARS * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RMSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.7203703703703703, "obj2": 0.13160967094965248}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( MDR * MDR ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Max( ( RRSe / DS ),( RCSe + MUC ) ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.42407407407407405, "obj2": 0.38912665511679373}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.8351851851851851, "obj2": 0.07175418832065084}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( Const * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - DDR ) ) + Min( ( FirstVNF_Mem_Server / ( MDR - Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( ( RMSe / ( CS + RCSe ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),Min( ( MUR - RCSe ) ,( CS / MLU ) ) ) ) / ( MUR / ( RCSe - MUR ) ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.3357086928293299}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ) + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( ( ( Min( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) ,RRSe ) + RMSe ) - ( MUR - ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( MUM * ( DS / RCSe ) ) ) ) ) - RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.2484221384846053}, {"determining": "Min( Min( MRS ,( ( MRS * FirstVNF_RAM_Server ) * MRS ) ) ,( PN - ( MDR * Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( ( Max( Min( MUC ,DS ),Max( MLU,CS ) ) - ( MUR - ( ( ( ( DS / RMSe ) + ( RMSe + MUC ) ) + MUM ) * ( MUM - ( DS / RCSe ) ) ) ) ),CS ) )", "obj1": 0.6574074074074074, "obj2": 0.19224659136080263}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,DDR ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( CS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.65, "obj2": 0.1928763697478886}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5016797113685082}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.1574074074074074, "obj2": 0.7385150427959564}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.659720020103574}], "47": [{"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( ( MLU * MUR ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( BR * PN ) - DDR ) ,( PN - CRS ) )", "choosing": "( ( ( Min( ( MUR - MUM ) ,RCSe ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( FirstVNF_Mem_Server / MRS ) ,( ( Max( ( ARS / CRS ),( FirstVNF_RAM + DDR ) ) + BR ) + Max( ( FirstVNF_CPU_Server * Const ),CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RRSe ) / ( MUM * ( ( Min( DS ,RCSe ) - MUC ) * MUC ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.10925925925925926, "obj2": 0.829164747658701}, {"determining": "Min( ( PN - ( Min( Min( ( ( MRS - Min( FirstVNF_RAM ,AMS ) ) - ( ( MRS * AMS ) - Min( MRS ,MDR ) ) ) ,FirstVNF_RAM ) ,MDR ) * MDR ) ) ,( DDR * PN ) )", "choosing": "Min( ( MUR - Max( ( Max( CS,( ( CS - ( CS - MLU ) ) * RMSe ) ) + ( RRSe + RMSe ) ),( MUC + ( Max( ( RCSe - RCSe ),Max( ( DS + MUR ),DS ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7079296219033452}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / DDR ) ,AMS ) - ( DDR - ( BR * PN ) ) ) + Min( ( ( FirstVNF_RAM - Const ) - ( Min( ( BR + AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( RCSe * RCSe ),( RRSe - DS ) ) - Min( Max( MLU,MLU ) ,( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5881899763254618}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( ( DDR - PN ) ,( PN * FirstVNF_Mem ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( ( FirstVNF_Mem * CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUR - MUM ) * MUR ) ) / ( Min( CS ,( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( RRSe * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.4648148148148148, "obj2": 0.3486108655217373}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN / ( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RRSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( Min( Min( ( MUM + MUC ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.19074074074074074, "obj2": 0.6832341219855018}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( Const * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - DDR ) ) + Min( ( FirstVNF_Mem_Server / ( MDR - Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( ( RMSe / ( CS + RCSe ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),Min( ( MUR - RCSe ) ,( CS / MLU ) ) ) ) / ( MUR / ( RCSe - MUR ) ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.3357086928293299}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( Min( MRS ,Min( ( ( DDR - MDR ) - MDR ) ,MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( PN,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,DS ) - RCSe ) ) ) ) - ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - ( Min( ( RRSe + ( RMSe * CS ) ) ,( MLU - DS ) ) - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.387037037037037, "obj2": 0.4269851508582536}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5318440777208641}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973901332060258}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU_Server ) ) - Max( ARS,DDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS / ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( RCSe - Max( ( DS / Min( DS ,RMSe ) ),( RRSe - Min( ( MUC - ( ( MUM * DS ) / MUR ) ) ,MUM ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16537933482877512}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * ( CRS * MRS ) ) ) ,( ( ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) - ( Max( FirstVNF_Mem_Server,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) ) - MDR ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe - MUC ) ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.9796296296296296, "obj2": 0.004626536798738829}, {"determining": "Min( ( ( Max( Min( ( CRS * DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),PN ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe + ( ( ( MUR + RMSe ) + ( ( MUC / ( ( MUC + MUC ) + MUR ) ) * ( ( MUM + ( MUR - MUM ) ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8003062645539013}, {"determining": "Min( ( ( Min( MRS ,ACS ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) * MDR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( CS + MUM ) / Max( ( RRSe / Max( ( ( RCSe - DS ) / MUC ),RCSe ) ),Min( Max( ( MUC - ( RMSe / DS ) ),CS ) ,RCSe ) ) ) - CS ) )", "obj1": 0.8407407407407408, "obj2": 0.06770073170230871}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ) / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2111111111111111, "obj2": 0.664918599187853}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.46615566094770877}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_RAM * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RCSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.2222222222222222, "obj2": 0.6462045448681152}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem * MRS ) ) / Max( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + FirstVNF_RAM ) ) - DDR ),( MDR / ( FirstVNF_Mem / Min( ( ( ( ACS - CRS ) * ( FirstVNF_Mem_Server * FirstVNF_RAM ) ) - Max( ( FirstVNF_RAM_Server + ACS ),PN ) ) ,( FirstVNF_RAM_Server + ( ( Const / FirstVNF_CPU ) + FirstVNF_CPU_Server ) ) ) ) ) ) )", "choosing": "( Min( ( Min( MLU ,RMSe ) * RCSe ) ,( RMSe * MUR ) ) - ( ( RCSe + MUC ) + MUM ) )", "obj1": 0.2462962962962963, "obj2": 0.6189432015955515}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.2, "obj2": 0.676311208294192}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3592592592592593, "obj2": 0.48058488962331924}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( MDR * MDR ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Max( ( RRSe / DS ),( RCSe + MUC ) ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - ( RCSe + RRSe ) ) ,( RCSe - RMSe ) )", "obj1": 0.4222222222222222, "obj2": 0.38903933338744673}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + CS ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2851851851851852, "obj2": 0.5656616206196666}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,Max( FirstVNF_Mem,CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + ( CRS * Max( ( CRS / RRS ),FirstVNF_Mem_Server ) ) ) ,( ( MRS * MDR ) - ( FirstVNF_CPU_Server + RRS ) ) ) * MDR ) ) )", "choosing": "Min( ( CS - ( ( Min( Min( ( MUR / ( MUM * RRSe ) ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * CS ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) ) ,( MUR + Max( ( ( MUR + MUM ) + ( RMSe + MLU ) ),( MUR / DS ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.36969081533699505}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + MRS ) - ( ( ARS - PN ) / ( FirstVNF_Mem_Server / Max( Const,ACS ) ) ) ) ,PN ) ) ,( FirstVNF_CPU_Server * Min( DDR ,( Min( ( ( ( RRS * ACS ) * Min( ARS ,MRS ) ) * ARS ) ,RRS ) + CRS ) ) ) )", "choosing": "Min( ( ( ( Min( MLU ,DS ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( MUM,MLU ) ) ) ) ) + ( MUC / ( ( CS / ( MLU - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) ) - CS ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.3648148148148148, "obj2": 0.4696235729162489}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( DDR * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( Min( DDR ,( Const * RRS ) ) ,Min( ( Max( FirstVNF_RAM,ACS ) - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) ) + ( FirstVNF_RAM - Min( FirstVNF_CPU ,Max( FirstVNF_RAM,FirstVNF_RAM ) ) ) ) )", "choosing": "Min( Min( RCSe ,( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,Min( DS ,MUC ) ) ) / ( Max( RMSe,MUC ) + ( MUR - MUM ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.17222222222222222, "obj2": 0.7179864779132347}, {"determining": "Min( Min( MRS ,Min( ( ( ( CRS * PN ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( MDR - ( Const + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( MUR / ( ( CS + RMSe ) / MUM ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( RCSe * MUC ) ) ) ) - ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( ( DS * RCSe ) ,MUM ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( CS + MUM ) )", "obj1": 0.7759259259259259, "obj2": 0.09691844694271522}, {"determining": "Min( ( ( Max( ( ( ( FirstVNF_Mem + DDR ) / RRS ) * MDR ),PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,FirstVNF_CPU_Server ) + ( RRS / FirstVNF_Mem ) ) - Max( DDR,PN ) ) ) ) - ( Min( ( ( ( Max( RRS,FirstVNF_CPU ) / BR ) + FirstVNF_CPU ) + Min( ( FirstVNF_RAM + ( FirstVNF_Mem_Server - FirstVNF_Mem_Server ) ) ,( ACS + RRS ) ) ) ,FirstVNF_Mem_Server ) * PN ) ) ,( ( Min( ( ( MDR + FirstVNF_CPU_Server ) + ( Max( PN,DDR ) + PN ) ) ,DDR ) - MDR ) + Max( FirstVNF_Mem_Server,CRS ) ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( ( Max( MUR,( ( RRSe - DS ) - MUR ) ) + RMSe ) + RRSe ) / Max( ( RRSe / DS ),( RCSe + MUC ) ) ) - CS ) )", "obj1": 0.7037037037037037, "obj2": 0.13998591914268887}, {"determining": "Min( Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,DDR ) + PN ) ) * DDR ) ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( MUM + CS ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUR ) - RCSe ) - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17594748871324542}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Min( ACS ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( RRSe + MUM ) - ( MUM + ( ( MLU + ( CS * Min( MUM ,RRSe ) ) ) * DS ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8014419952595567}, {"determining": "Min( Min( MRS ,Min( ( ( PN + Max( FirstVNF_CPU_Server,Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( MLU / CS ) ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUR ) ) ) ) + ( ( MUR * ( Min( ( RRSe + RRSe ) ,( RRSe + CS ) ) * Min( MUC ,RCSe ) ) ) - Min( DS ,( Min( MUM ,( DS + RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.24720427900458763}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( BR + Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,Min( Const ,FirstVNF_Mem ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( ( ( PN + RRS ) + MRS ) + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + RRS ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( MLU * MUC ) ,( RMSe - RCSe ) )", "obj1": 0.2740740740740741, "obj2": 0.5725355389547092}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.562962962962963, "obj2": 0.2550305230873761}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( DDR ,( FirstVNF_RAM * PN ) ),PN ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - ( MDR * ( FirstVNF_CPU / MDR ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR / RMSe ) ,Max( ( RRSe / MUM ),( ( DS - MUM ) / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343019182363248}, {"determining": "Min( Min( MRS ,Min( ( ( FirstVNF_Mem * MDR ) - Min( ( ( Min( DDR ,PN ) - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,MDR ) ) ,FirstVNF_CPU ) + MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - Max( ( RMSe - MUR ),( ( RCSe / ( RCSe - MUR ) ) - ( RMSe + ( Max( CS,MUM ) / Min( RRSe ,CS ) ) ) ) ) ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5, "obj2": 0.3243375158550747}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( RRS * FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,DDR ) / Const ) ) ) ) + ( ( ( ARS * PN ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RMSe * Max( MUC,RRSe ) ) - Min( Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,MUR ) ) ) ,CS ) ,( RCSe - RMSe ) ) ,( ( ( RCSe - Min( ( RMSe - CS ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.011195750887130668}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5888888888888889, "obj2": 0.23526578492478067}, {"determining": "Min( Min( ( ( AMS - DDR ) - ( Min( AMS ,( FirstVNF_CPU_Server / MDR ) ) / ( Min( ARS ,ACS ) / ( PN / PN ) ) ) ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe / Min( ( Min( ( RCSe / MUM ) ,CS ) + RCSe ) ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.45740740740740743, "obj2": 0.35842688208395207}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,( AMS / FirstVNF_CPU ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) / RRSe ) + RMSe ) - ( MUR - ( ( MUM + ( CS + ( RMSe + MUC ) ) ) * ( MUM * Max( RMSe,Min( RCSe ,MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( Min( MRS ,Min( ( Max( Max( PN,( CRS * ARS ) ),PN ) - MDR ) ,( ARS + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ) ) ,( Min( ( ( FirstVNF_CPU / MDR ) + BR ) ,( Const - MRS ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.7203703703703703, "obj2": 0.13068252863502391}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,( Max( Min( RCSe ,CS ),( MUM + MLU ) ) / ( MLU - ( MUC * MUM ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.6444444444444445, "obj2": 0.19644576913024936}, {"determining": "Min( ( Max( AMS,( RRS - ( FirstVNF_Mem_Server * ( ( ( PN * ARS ) + PN ) / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( ( FirstVNF_RAM + MRS ) + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( Max( MUR,RRSe ) - Min( MUR ,MUM ) ) )", "obj1": 0.8759259259259259, "obj2": 0.05360596577872071}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( Max( RRSe,RCSe ),( RCSe - RMSe ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.7851851851851852, "obj2": 0.09347981437590991}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) ) ) ,( ( ( Min( ( MDR - CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,( CRS - RRS ) ) - MDR ) ) ,( ARS * CRS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( CS ,( MUR - MUM ) ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / ( MUR - Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( ( RCSe * ( MUM / DS ) ) / Max( RCSe,MUC ) ) )", "obj1": 0.29259259259259257, "obj2": 0.5608856345847723}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,Min( ( PN - ( ARS * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RCSe + ( MUC - MUR ) ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.7296296296296296, "obj2": 0.12051511311707287}, {"determining": "Min( Min( MRS ,( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RCSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.32407407407407407, "obj2": 0.5128150799430139}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7298304775302517}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( RRS * FirstVNF_Mem ) * ( Max( ARS,DDR ) / Const ) ) ) ) + ( ( ( ARS * PN ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,AMS ) )", "choosing": "( ( RMSe * Max( MUC,RRSe ) ) - Min( ( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) - MUR ) ,( ( ( RCSe - Min( ( RMSe - CS ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01243868108253024}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + ( RRSe / DS ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.7925925925925926, "obj2": 0.09003034690093266}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( PN - ( ARS * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.7648148148148148, "obj2": 0.10223175849689536}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( PN * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( RCSe - RMSe ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2167873707231883}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,Const ),BR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe / MUM ) ,( Max( ( Min( RMSe ,MLU ) + MUM ),( ( RMSe + MUR ) - Max( RMSe,CS ) ) ) - CS ) )", "obj1": 0.9296296296296296, "obj2": 0.031133677132673843}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( FirstVNF_CPU * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7111111111111111, "obj2": 0.1356494160756546}, {"determining": "( ( ( ( ARS / ( FirstVNF_CPU * ( FirstVNF_CPU + FirstVNF_Mem_Server ) ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( ( FirstVNF_Mem_Server - PN ) ,( ( Max( PN,DDR ) + Const ) * MDR ) ) * MDR ) ) ) - ( MDR - ( PN * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * MUC ) * MUC ) ) ) ) + ( ( RRSe * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RCSe ) ) ) ) ) ) - CS ) ,( RCSe - ( Max( RCSe,MUC ) * ( MUM + DS ) ) ) )", "obj1": 0.6907407407407408, "obj2": 0.15807927146006606}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( FirstVNF_CPU_Server / Max( RRS,ARS ) ) ) + PN ) / MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server / ARS ) + MRS ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( Min( MLU ,RCSe ) * Min( MUR ,RRSe ) ) ) ) * RRSe ) - RCSe ) ,( ( ( DS + Min( ( CS - RMSe ) ,MUC ) ) + Max( ( ( MUM - RRSe ) + MUR ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR + ( MUR - RCSe ) ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7520791979759943}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( ( ( ( PN - CRS ) - ( FirstVNF_RAM - DDR ) ) + Max( MDR,RRS ) ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,PN ) * MDR ) ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( Max( MUM,RCSe ) * Min( ( MLU * MUR ) ,MLU ) ) ) )", "obj1": 0.6888888888888889, "obj2": 0.16232500712760542}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - PN ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MLU ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.2962962962962963, "obj2": 0.5537832284856458}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - ACS ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + CS ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.9925925925925926, "obj2": 0.003312935055771038}, {"determining": "Min( Min( PN ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( BR / FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) ,PN ) ) ,( Min( PN ,DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( MUR - ( Min( CS ,( MUC - ( ( MUM - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) ) ,Min( Min( RCSe ,( ( DS + MLU ) + RCSe ) ) ,MLU ) ) )", "obj1": 0.75, "obj2": 0.10918342232975621}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.17037037037037037, "obj2": 0.728910475235727}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,DDR ) + PN ) ) * DDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( CS * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.6592592592592592, "obj2": 0.18172611025641333}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( RCSe * ( DS / RCSe ) ) ) - MUR ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04141977499934012}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ) - DDR ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) )", "obj1": 0.5611111111111111, "obj2": 0.2627395416666461}, {"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - ( ACS - CRS ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( Max( RRSe,( RCSe - RMSe ) ) * ( DS / RCSe ) ) ) - MUR ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.03529665263926859}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( FirstVNF_CPU - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ARS / FirstVNF_RAM ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe + RRSe ) ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.40185185185185185, "obj2": 0.4108339071390721}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( ( ( ( PN - CRS ) - ( FirstVNF_RAM - FirstVNF_RAM ) ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,( Min( MLU ,( DS * RCSe ) ) / MUM ) ) ) ) - CS ) ,( RCSe - ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ) )", "obj1": 0.6981481481481482, "obj2": 0.1511719923441144}, {"determining": "Min( ( ( ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) - Max( FirstVNF_RAM,Const ) ) - ( ( ( ( ( Min( MDR ,PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( Max( ARS,CRS ) + ( ( ( ( Max( PN,DDR ) + ( DDR + ( FirstVNF_Mem_Server / MRS ) ) ) + ( ACS + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - Min( Min( PN ,AMS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( ( CS - DS ) - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( ( MLU * MUR ) ,MLU ) * Min( Min( ( MUC / MUM ) ,RCSe ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - Max( ( MUR / Min( MUC ,( Max( RMSe,MUR ) / ( MUC + ( MLU / DS ) ) ) ) ),( DS / MUC ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.8148148148148148, "obj2": 0.08035189891626647}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( Const * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,Min( DS ,MUC ) ) ) * RMSe ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.6314814814814815, "obj2": 0.20850175287229458}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( Max( ARS,DDR ) / Const ) ) ) ) + ( ( ( PN - ( Max( ARS,BR ) / RRS ) ) + PN ) - DDR ) ) - Max( Max( ( Const * RRS ),Max( FirstVNF_Mem_Server,MRS ) ),BR ) ) ,( FirstVNF_RAM / AMS ) )", "choosing": "( ( RMSe - ( DS - RMSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( MUC,DS ) / Max( RMSe,DS ) ),( ( MUR - RCSe ) - ( MUC / MLU ) ) ) ) / Max( RMSe,( Min( RRSe ,DS ) / MUR ) ) ) ) )", "obj1": 0.95, "obj2": 0.017270338687996635}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,RRSe ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.33126716060195494}, {"determining": "Min( Min( MRS ,( ( MRS * FirstVNF_RAM_Server ) * MRS ) ) ,( PN - ( MDR * Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( RCSe - RMSe ) ,Max( ( Max( Min( MUC ,DS ),Max( MLU,CS ) ) - ( MUR - ( ( ( ( DS / RMSe ) + ( RMSe + MUC ) ) + MUM ) * ( MUM - ( DS / RCSe ) ) ) ) ),CS ) )", "obj1": 0.6574074074074074, "obj2": 0.19224659136080263}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.053721081125716295}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - BR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - FirstVNF_Mem ) ) ,( CRS * PN ) ) ) + Max( PN,ACS ) ) ,( ACS * ( ( ARS * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "Min( ( ( ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) + ( MUC / ( ( ( RMSe + MLU ) - Min( Max( MUC,CS ) ,( MLU + RCSe ) ) ) * Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,RRSe ) - RCSe ) ) ) ) ) - RRSe ) ,( RCSe - RMSe ) )", "obj1": 0.39444444444444443, "obj2": 0.42213005232410056}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.2740740740740741, "obj2": 0.5725355389547092}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.659720020103574}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.220864632452599}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( Max( PN,( CRS * ARS ) ),PN ) ) ,( ARS + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ) ) ,( Min( ( ( RRS / MDR ) + BR ) ,( MRS - ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) + Max( ( Max( FirstVNF_CPU_Server,CRS ) / ACS ),( ( ( PN / Min( DDR ,( ACS * AMS ) ) ) + PN ) - DDR ) ) ) )", "choosing": "Min( ( Max( MUM,Min( MLU ,( ( DS + ( RRSe + Max( RCSe,DS ) ) ) * Min( Min( MLU ,MUR ) ,MLU ) ) ) ) - RMSe ) ,( MLU * RCSe ) )", "obj1": 0.7407407407407407, "obj2": 0.11471377193146025}, {"determining": "Min( ( FirstVNF_CPU_Server * ( ( Max( AMS,AMS ) - BR ) + FirstVNF_CPU_Server ) ) ,Max( ( ( ( ACS + FirstVNF_CPU ) + ( FirstVNF_Mem_Server / DDR ) ) - Const ),FirstVNF_RAM_Server ) )", "choosing": "( ( MUR / ( DS * ( ( Min( ( RMSe + CS ) ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( CS ,RRSe ) ) + RMSe ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( Min( MRS ,Min( ( ( ( ( FirstVNF_Mem_Server * AMS ) + FirstVNF_RAM ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5925925925925926, "obj2": 0.2324637140333266}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( MDR - ( Const + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( MUR / ( ( CS + RMSe ) / MUM ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) - ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( ( DS * RCSe ) ,MUM ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( CS + MUM ) )", "obj1": 0.5277777777777778, "obj2": 0.2928660228935508}], "48": [{"determining": "Min( ( FirstVNF_Mem_Server / MRS ) ,( ( Max( ( ARS / CRS ),( FirstVNF_RAM + DDR ) ) + BR ) + Max( ( FirstVNF_CPU_Server * Const ),CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RRSe ) / ( MUM * ( ( Min( DS ,RCSe ) - MUC ) * MUC ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.10925925925925926, "obj2": 0.829164747658701}, {"determining": "Min( ( ( ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) - Max( FirstVNF_RAM,PN ) ) - ( ( ( ( ( Min( MDR ,PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( Max( ARS,CRS ) + ( ( ( ( Max( PN,DDR ) + ( DDR + ( FirstVNF_Mem_Server / MRS ) ) ) + ( ACS + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( ( CS - DS ) - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUC - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( CS,MLU ) ) ) ) ) ) - Max( ( MUR / Min( MUC ,( Max( RMSe,MUR ) / ( MUC + ( MLU / DS ) ) ) ) ),( DS / MUC ) ) ) ,( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( ( MLU * MUR ) / MLU ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * FirstVNF_CPU ) * ARS ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RCSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * ( ( MUC / MLU ) + ( MLU / ( MUC * ( ( RCSe / DS ) + MUR ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.10925925925925926, "obj2": 0.829164747658701}, {"determining": "Min( ( ( Min( MRS ,ACS ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) * MDR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( CS + MUM ) / Max( ( RRSe / Max( ( ( RCSe - DS ) / MUC ),RCSe ) ),Min( Max( ( MUC - ( RMSe / DS ) ),CS ) ,RCSe ) ) ) - CS ) )", "obj1": 0.8407407407407408, "obj2": 0.06770073170230871}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,Const ),BR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe / MUM ) ,( Max( ( Min( RMSe ,MLU ) + MUM ),( ( RMSe + MUR ) - Max( RMSe,CS ) ) ) - CS ) )", "obj1": 0.9296296296296296, "obj2": 0.031133677132673843}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( ( FirstVNF_Mem * CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4648148148148148, "obj2": 0.34845347838341145}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( MDR - ( Const + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( MUR / ( ( CS + RMSe ) / MUM ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) - ( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) - CS ) ,( CS + MUM ) )", "obj1": 0.34444444444444444, "obj2": 0.4908042208156297}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( Min( MRS ,Min( ( ( DDR - MDR ) - MDR ) ,MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( PN,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,DS ) - RCSe ) ) ) ) - ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - ( Min( ( RRSe + ( RMSe * CS ) ) ,( MLU - DS ) ) - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.387037037037037, "obj2": 0.4269851508582536}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - Min( ( Min( ARS ,Min( Min( FirstVNF_CPU ,FirstVNF_Mem_Server ) ,FirstVNF_RAM_Server ) ) * AMS ) ,Const ) ) - MDR ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( RCSe * ( DS / RCSe ) ) ) - MUR ) ) ) )", "obj1": 0.8888888888888888, "obj2": 0.04141977499934012}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe - MUC ) ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5016797113685082}, {"determining": "Min( Min( MRS ,Min( ( ( FirstVNF_Mem * MDR ) - Min( ( ( Min( DDR ,PN ) - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,MDR ) ) ,FirstVNF_CPU ) + MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - Max( ( RMSe - MUR ),( ( RCSe / ( RCSe - MUR ) ) - ( RMSe + ( Max( CS,MUM ) / Min( RRSe ,CS ) ) ) ) ) ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5, "obj2": 0.3243375158550747}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.220864632452599}, {"determining": "Min( Min( MRS ,Min( ( ( ( ( FirstVNF_Mem_Server * AMS ) + FirstVNF_RAM ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5925925925925926, "obj2": 0.2324637140333266}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - ARS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * FirstVNF_Mem_Server ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) * ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RRSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.19074074074074074, "obj2": 0.6832341219855018}, {"determining": "Min( ( ( Max( PN,Max( RRS,( ( ( MDR * AMS ) * FirstVNF_Mem ) * ( Max( ARS,DDR ) / Const ) ) ) ) + ( ( ( ARS * PN ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,AMS ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe - MUC ) ) ) * ( CS - ( MLU - ( MLU / MUR ) ) ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.9481481481481482, "obj2": 0.019541942962877264}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU_Server ) ) - Max( ARS,DDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS / ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( RCSe - Max( ( DS / Min( DS ,RMSe ) ),( RRSe - Min( ( MUC - ( ( MUM * DS ) / MUR ) ) ,MUM ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16537933482877512}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( MDR - ( Const + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( MUR / ( ( CS + RMSe ) / MUM ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) - ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( ( DS * RCSe ) ,MUM ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( CS + MUM ) )", "obj1": 0.5277777777777778, "obj2": 0.2928660228935508}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / DDR ) ,AMS ) - ( DDR - ( BR * PN ) ) ) + Min( ( ( FirstVNF_RAM - Const ) - ( Min( ( BR + AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( RCSe * RCSe ),( RRSe - DS ) ) - Min( Max( MLU,MLU ) ,( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5881899763254618}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + ( RRSe / DS ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8, "obj2": 0.0864919198263434}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_RAM * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RCSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.2222222222222222, "obj2": 0.6462045448681152}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8148148148148148, "obj2": 0.08035189891626647}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( ( ( Max( Min( ( CRS * DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),PN ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe + ( ( ( MUR + RMSe ) + ( ( MUC / ( ( MUC + MUC ) + MUR ) ) * ( ( MUM + ( MUR - MUM ) ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8003062645539013}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.2, "obj2": 0.676311208294192}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.659720020103574}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( MDR * MDR ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Max( ( RRSe / DS ),( RCSe + MUC ) ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - ( RCSe + RRSe ) ) ,( RCSe - RMSe ) )", "obj1": 0.4222222222222222, "obj2": 0.38903933338744673}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( FirstVNF_CPU * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) + ( ( FirstVNF_CPU / CRS ) - ( ACS - DDR ) ) ) / Max( ARS,Max( AMS,FirstVNF_CPU ) ) ) )", "choosing": "Min( ( ( ( MUC / Max( MUC,MLU ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( CS,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6962962962962963, "obj2": 0.14411734497878817}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) ) - ( ACS - CRS ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( Max( RRSe,( RCSe - RMSe ) ) * ( DS / ( MUC - MUR ) ) ) ) - MUR ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.03493668831854245}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + MRS ) - ( ( ARS - PN ) / ( FirstVNF_Mem_Server / Max( Const,ACS ) ) ) ) ,PN ) ) ,( FirstVNF_CPU_Server * Min( DDR ,( Min( ( ( ( RRS * ACS ) * Min( ARS ,MRS ) ) * ARS ) ,RRS ) + CRS ) ) ) )", "choosing": "Min( ( ( ( Min( MLU ,DS ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( MUM,MLU ) ) ) ) ) + ( MUC / ( ( CS / ( MLU - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) ) - CS ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.3648148148148148, "obj2": 0.4696235729162489}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,Min( DS ,MUC ) ) ) * RMSe ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.8740740740740741, "obj2": 0.04885074585577574}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( FirstVNF_CPU_Server / Max( RRS,ARS ) ) ) + PN ) / MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - ( ( FirstVNF_RAM_Server / ARS ) + MRS ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( Min( MLU ,RCSe ) * Min( MUR ,RRSe ) ) ) ) * RRSe ) - RCSe ) ,( ( ( DS + Min( ( CS - RMSe ) ,MUC ) ) + Max( ( ( MUM - RRSe ) + MUR ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR + ( MUR - RCSe ) ) ) ) )", "obj1": 0.14814814814814814, "obj2": 0.7520791979759943}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( PN ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( BR / FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) ,PN ) ) ,( Min( PN ,DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( MUR - ( Min( CS ,( MUC - ( ( MUM - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) ) ,Min( Min( RCSe ,( ( DS + MLU ) + RCSe ) ) ,MLU ) ) )", "obj1": 0.75, "obj2": 0.10918342232975621}, {"determining": "Min( Min( MRS ,Min( ( ( PN + Max( PN,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( DS - MUM ) ) - Min( RMSe ,( RCSe / ( DS * RRSe ) ) ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.5425925925925926, "obj2": 0.2796379679208936}, {"determining": "Min( ( ( ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) - Max( FirstVNF_RAM,Const ) ) - ( ( ( ( ( Min( MDR ,PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( Max( ARS,CRS ) + ( ( ( ( Max( PN,DDR ) + ( DDR + ( FirstVNF_Mem_Server / MRS ) ) ) + ( ACS + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - Min( Min( PN ,AMS ) ,FirstVNF_Mem ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( ( CS - DS ) - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( ( MLU * MUR ) ,MLU ) * Min( Min( ( MUC / MUM ) ,RCSe ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - Max( ( MUR / Min( MUC ,( Max( RMSe,MUR ) / ( MUC + ( MLU / DS ) ) ) ) ),( DS / MUC ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.8148148148148148, "obj2": 0.08035189891626647}, {"determining": "Min( ( PN - ( Min( Min( ( ( MRS - Min( FirstVNF_RAM ,AMS ) ) - ( ( MRS * AMS ) - Min( MRS ,MDR ) ) ) ,FirstVNF_RAM ) ,MDR ) * MDR ) ) ,( DDR * PN ) )", "choosing": "Min( ( MUR - Max( ( Max( CS,( ( CS - ( CS - MLU ) ) * RMSe ) ) + ( RRSe + RMSe ) ),( MUC + ( Max( ( RCSe - RCSe ),Max( ( DS + MUR ),DS ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.17777777777777778, "obj2": 0.7079296219033452}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( DDR ,( FirstVNF_RAM * PN ) ),PN ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - ( MDR * ( FirstVNF_CPU / MDR ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR / RMSe ) ,Max( ( RRSe / MUM ),( ( DS - MUM ) / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343019182363248}, {"determining": "Min( Min( MRS ,Min( ( ( ( ( FirstVNF_Mem_Server * AMS ) + FirstVNF_RAM ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( MUR,MUC ) ,MUR ) ) ) )", "obj1": 0.55, "obj2": 0.27341578017530843}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,Max( FirstVNF_Mem,CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + ( CRS * Max( ( CRS / RRS ),FirstVNF_Mem_Server ) ) ) ,( ( MRS * MDR ) - ( FirstVNF_CPU_Server + RRS ) ) ) * MDR ) ) )", "choosing": "Min( ( CS - ( ( Min( Min( ( MUR / ( MUM * RRSe ) ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * CS ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) ) ,( MUR + Max( ( ( MUR + MUM ) + ( RMSe + MLU ) ),( MUR / DS ) ) ) )", "obj1": 0.4444444444444444, "obj2": 0.36969081533699505}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( FirstVNF_CPU * ( ( ( ( MRS - FirstVNF_CPU ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RMSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6907407407407408, "obj2": 0.1554930395312061}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Max( FirstVNF_Mem_Server,DDR ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + Max( RMSe,Min( RCSe ,MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.575925925925926, "obj2": 0.24652218393170175}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( Max( PN,( CRS * ARS ) ),PN ) ) ,( ARS + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ) ) ,( Min( ( ( RRS / MDR ) + BR ) ,( MRS - ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) + Max( ( Max( FirstVNF_CPU_Server,CRS ) / ACS ),( ( ( PN / Min( DDR ,( ACS * AMS ) ) ) + PN ) - DDR ) ) ) )", "choosing": "Min( ( Max( MUM,Min( MLU ,( ( DS + ( RRSe + Max( RCSe,DS ) ) ) * Min( Min( MLU ,MUR ) ,MLU ) ) ) ) - RMSe ) ,( MLU * RCSe ) )", "obj1": 0.7407407407407407, "obj2": 0.11471377193146025}, {"determining": "Min( Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,DDR ) + PN ) ) * DDR ) ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( MUM + CS ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUR ) - RCSe ) - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17594748871324542}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( FirstVNF_CPU * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7111111111111111, "obj2": 0.1356494160756546}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( FirstVNF_CPU,DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( MUC - DS ) ,DS ) )", "obj1": 0.3574074074074074, "obj2": 0.4816209045078162}, {"determining": "Min( Min( ( ( AMS - DDR ) - ( Min( AMS ,( FirstVNF_CPU_Server / MDR ) ) / ( Min( ARS ,ACS ) / ( PN / PN ) ) ) ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe / Min( ( Min( ( RCSe / MUM ) ,CS ) + RCSe ) ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.45740740740740743, "obj2": 0.35842688208395207}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Min( ACS ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( RRSe + MUM ) - ( MUM + ( ( MLU + ( CS * Min( MUM ,RRSe ) ) ) * DS ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8014419952595567}, {"determining": "Min( ( FirstVNF_CPU_Server * ( ( Max( ARS,DDR ) - BR ) + FirstVNF_CPU_Server ) ) ,( Const / PN ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * CS ) ) - ( RMSe + MUM ) )", "obj1": 0.14444444444444443, "obj2": 0.7652527917926435}, {"determining": "Min( ( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * ( CRS * MRS ) ) ) ,( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe - MUC ) ) ) * Max( MUR,MUC ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.13518518518518519, "obj2": 0.768812480026551}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.587037037037037, "obj2": 0.23602232305192655}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( Const * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - DDR ) ) + Min( ( FirstVNF_Mem_Server / ( MDR - Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( ( RMSe / ( CS + RCSe ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),Min( ( MUR - RCSe ) ,( CS / MLU ) ) ) ) / ( MUR / ( RCSe - MUR ) ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.3357086928293299}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973901332060258}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( RRS * FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,DDR ) / Const ) ) ) ) + ( ( ( ARS * PN ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RMSe * Max( MUC,RRSe ) ) - Min( Min( Min( ( ( RRSe / DS ) + ( RMSe - Min( DS ,MUR ) ) ) ,CS ) ,( RCSe - RMSe ) ) ,( ( ( RCSe - Min( ( RMSe - CS ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.9666666666666667, "obj2": 0.011195750887130668}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( FirstVNF_CPU * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "( ( ( Min( ( MUR - MUM ) ,RCSe ) / RMSe ) - RCSe ) + ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( Max( RMSe,MUR ) * MUR ) ) / Min( Max( MUM,( ( ( ( MLU - MUM ) * MUM ) - MUC ) * Max( ( MLU + ( RMSe - RMSe ) ),RMSe ) ) ) ,( RCSe + RRSe ) ) ) )", "obj1": 0.7037037037037037, "obj2": 0.13925866115696736}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.053721081125716295}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7157897773984095}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( MRS * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( PN ,( MRS - AMS ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( RRS,DDR ) ) )", "choosing": "Min( ( ( ( MUC / Min( ( ( ( RRSe * DS ) + Min( RMSe ,RRSe ) ) / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ) - Min( DS ,Min( Min( MUM ,( DS * RCSe ) ) ,Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.25, "obj2": 0.6171085123220212}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MLU ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6694123138304515}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( RRS * FirstVNF_Mem ) * ( Max( ARS,DDR ) / Const ) ) ) ) + ( ( ( ARS * PN ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,AMS ) )", "choosing": "( ( RMSe * Max( MUC,RRSe ) ) - Min( ( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) - MUR ) ,( ( ( RCSe - Min( ( RMSe - CS ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.9611111111111111, "obj2": 0.01243868108253024}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.17037037037037037, "obj2": 0.728910475235727}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( DDR * FirstVNF_RAM ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( Max( MUM,Min( MLU ,( ( DS + ( RRSe + Max( RCSe,DS ) ) ) * Min( Min( MLU ,MUR ) ,MLU ) ) ) ) - RMSe ) ,( MLU * RCSe ) )", "obj1": 0.7592592592592593, "obj2": 0.10514231343036806}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,( Min( RRS ,FirstVNF_Mem_Server ) + MRS ) ) ) ,( Min( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( ( Max( CS,MUM ) / RMSe ) / ( RCSe - RMSe ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.2814814814814815, "obj2": 0.5636384743607169}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( PN * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( RCSe - RMSe ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.6148148148148148, "obj2": 0.2167873707231883}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( Const * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( RRSe ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,Min( DS ,MUC ) ) ) * RMSe ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.6574074074074074, "obj2": 0.19164274292596892}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.46615566094770877}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.26851851851851855, "obj2": 0.5772947191260301}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - BR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - FirstVNF_Mem ) ) ,( CRS * PN ) ) ) + Max( PN,ACS ) ) ,( ACS * ( ( ARS * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "Min( ( ( ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) + ( MUC / ( ( ( RMSe + MLU ) - Min( Max( MUC,CS ) ,( MLU + RCSe ) ) ) * Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,RRSe ) - RCSe ) ) ) ) ) - RRSe ) ,( RCSe - RMSe ) )", "obj1": 0.39444444444444443, "obj2": 0.42213005232410056}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN / ( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - FirstVNF_CPU_Server ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RRSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( Min( Min( ( MUM + MUC ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.19074074074074074, "obj2": 0.6832341219855018}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5318440777208641}, {"determining": "Min( Min( PN ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( BR / FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) ,PN ) ) ,( Min( PN ,DDR ) - MDR ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.7240740740740741, "obj2": 0.12493262545254648}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7298304775302517}, {"determining": "Min( Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,DDR ) + PN ) ) * DDR ) ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * ( ( Max( PN,( ( ACS - CRS ) - ( BR / FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( MUM + CS ) ) ,CS )", "obj1": 0.9777777777777777, "obj2": 0.005203353560480693}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,( AMS / FirstVNF_CPU ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) / RRSe ) + RMSe ) - ( MUR - ( ( MUM + ( CS + ( RMSe + MUC ) ) ) * ( MUM * Max( RMSe,Min( RCSe ,MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,( Max( FirstVNF_RAM_Server,MDR ) - ( PN * ACS ) ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - ( ( Max( RMSe,Max( Min( MLU ,Max( CS,RRSe ) ),Min( ( Min( RRSe ,MUC ) + DS ) ,( DS / ( CS - DS ) ) ) ) ) / MUR ) + ( Max( RCSe,MUM ) / Max( Min( ( RRSe + RRSe ) ,( DS - MUM ) ),MUM ) ) ) )", "obj1": 0.5555555555555556, "obj2": 0.2663991174335408}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,RRSe ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.49074074074074076, "obj2": 0.33126716060195494}, {"determining": "Min( Min( MRS ,Min( ( ( PN + Max( FirstVNF_CPU_Server,Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( MLU / CS ) ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUR ) ) ) ) + ( ( MUR * ( Min( ( RRSe + RRSe ) ,( RRSe + CS ) ) * Min( MUC ,RCSe ) ) ) - Min( DS ,( Min( MUM ,( DS + RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.24720427900458763}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) ) ) ,( ( ( Min( ( MDR - CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,( CRS - RRS ) ) - MDR ) ) ,( ARS * CRS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( CS ,( MUR - MUM ) ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / ( MUR - Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( ( RCSe * ( MUM / DS ) ) / Max( RCSe,MUC ) ) )", "obj1": 0.29259259259259257, "obj2": 0.5608856345847723}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( ( ( ( PN - CRS ) - ( FirstVNF_RAM - DDR ) ) + Max( MDR,RRS ) ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,PN ) * MDR ) ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( Max( MUM,RCSe ) * Min( ( MLU * MUR ) ,MLU ) ) ) )", "obj1": 0.6888888888888889, "obj2": 0.16232500712760542}, {"determining": "Min( ( MRS + Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - Min( ( Min( DDR ,ARS ) * ARS ) ,FirstVNF_Mem_Server ) ) )", "choosing": "Min( ( ( ( Min( ( RCSe / MUM ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( RMSe + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,( CS + DS ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.45, "obj2": 0.3667860527113275}, {"determining": "Min( ( FirstVNF_CPU_Server * ( ( Max( AMS,( DDR / AMS ) ) - BR ) + FirstVNF_CPU_Server ) ) ,( Const / PN ) )", "choosing": "( ( ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) / Max( MUM,CS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.3357086928293299}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( Max( PN,Min( DDR ,( MDR * MDR ) ) ) + PN ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( MUR,Max( RCSe,MLU ) ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.5853497454389194}], "49": [{"determining": "Min( ( FirstVNF_Mem_Server / MRS ) ,( ( Max( ( ARS / CRS ),( FirstVNF_RAM + DDR ) ) + BR ) + Max( ( FirstVNF_CPU_Server * Const ),CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RRSe ) / ( MUM * ( ( Min( DS ,RCSe ) - MUC ) * MUC ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.10925925925925926, "obj2": 0.829164747658701}, {"determining": "Min( ( Min( Min( ( ( MRS - Min( FirstVNF_RAM ,AMS ) ) - ( ( MRS * AMS ) - Min( MRS ,MDR ) ) ) ,FirstVNF_RAM ) ,MDR ) * MDR ) ,( ACS * PN ) )", "choosing": "Min( ( ( ( CS - ( CS - MLU ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - RRSe ) ,( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / FirstVNF_Mem ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) - Max( FirstVNF_RAM,PN ) ) - ( ( ( ( ( Min( MDR ,PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( Max( ARS,CRS ) + ( ( ( ( Max( PN,DDR ) + ( DDR + ( FirstVNF_Mem_Server / MRS ) ) ) + ( ACS + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( ( CS - DS ) - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUC - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( CS,MLU ) ) ) ) ) ) - Max( ( MUR / Min( MUC ,( Max( RMSe,MUR ) / ( MUC + ( MLU / DS ) ) ) ) ),( DS / MUC ) ) ) ,( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( ( MDR * FirstVNF_CPU ) * ARS ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_RAM_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RCSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * ( ( MUC / MLU ) + ( MLU / ( MUC * ( ( RCSe / DS ) + MUR ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.10925925925925926, "obj2": 0.829164747658701}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,Const ),BR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe / MUM ) ,( Max( ( Min( RMSe ,MLU ) + MUM ),( ( RMSe + MUR ) - Max( RMSe,CS ) ) ) - CS ) )", "obj1": 0.9296296296296296, "obj2": 0.031133677132673843}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( Min( MRS ,Min( ( ( DDR - MDR ) - MDR ) ,MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( PN,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,DS ) - RCSe ) ) ) ) - ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - ( Min( ( RRSe + ( RMSe * CS ) ) ,( MLU - DS ) ) - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.387037037037037, "obj2": 0.4269851508582536}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,( Min( RRS ,FirstVNF_Mem_Server ) + MRS ) ) ) ,( Min( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( ( Max( CS,MUM ) / RMSe ) / ( RCSe - RMSe ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.2814814814814815, "obj2": 0.5636384743607169}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( FirstVNF_CPU,DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( MUC - DS ) ,DS ) )", "obj1": 0.3574074074074074, "obj2": 0.4816209045078162}, {"determining": "Min( Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,DDR ) + PN ) ) * DDR ) ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( MUM + CS ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUR ) - RCSe ) - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17594748871324542}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7298304775302517}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Min( MRS ,Min( ( ( ( ( FirstVNF_Mem_Server * AMS ) + FirstVNF_RAM ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5925925925925926, "obj2": 0.2324637140333266}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.659720020103574}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / Min( ARS ,RRS ) ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + PN ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8314814814814815, "obj2": 0.07487145121726947}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.18333333333333332, "obj2": 0.7069201221092308}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( DS - MUM ) ) - Min( RMSe ,( RCSe / ( DS * RRSe ) ) ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5318098426841448}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,( AMS / FirstVNF_CPU ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) / RRSe ) + RMSe ) - ( MUR - ( ( MUM + ( CS + ( RMSe + MUC ) ) ) * ( MUM * Max( RMSe,Min( RCSe ,MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( MDR - ( Const + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( MUR / ( ( CS + RMSe ) / MUM ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) - ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( ( DS * RCSe ) ,MUM ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( CS + MUM ) )", "obj1": 0.5277777777777778, "obj2": 0.2928660228935508}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "Min( Min( ( MRS + RRS ) ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( CS - CS ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( MUR,MUC ) ,MUR ) ) ) )", "obj1": 0.29259259259259257, "obj2": 0.5580092348001578}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Min( ( AMS / FirstVNF_CPU_Server ) ,( DDR * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( MUM / RMSe ) )", "obj1": 0.19074074074074074, "obj2": 0.6832341219855018}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + ( RMSe + CS ) ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.6111111111111112, "obj2": 0.220864632452599}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,RRSe ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,RRSe ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.3378364780885022}, {"determining": "Min( ( ( Max( Min( ( CRS * DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),PN ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe + ( ( ( MUR + RMSe ) + ( ( MUC / ( ( MUC + MUC ) + MUR ) ) * ( ( MUM + ( MUR - MUM ) ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8003062645539013}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( MRS / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - ( ( FirstVNF_Mem_Server * ACS ) + Min( ARS ,( ( BR / ARS ) / FirstVNF_CPU_Server ) ) ) ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( RMSe - RMSe ) ,( Max( RMSe,MUM ) / Max( ( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( Max( RRSe,( RCSe - RMSe ) ) * ( ( RCSe - RCSe ) / ( MUC - MUR ) ) ) ) - MUR ),RRSe ) ) )", "obj1": 0.8148148148148148, "obj2": 0.07903217899850605}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + MRS ) - ( ( ARS - PN ) / ( FirstVNF_Mem_Server / Max( Const,ACS ) ) ) ) ,PN ) ) ,( FirstVNF_CPU_Server * Min( DDR ,( Min( ( ( ( RRS * ACS ) * Min( ARS ,MRS ) ) * ARS ) ,RRS ) + CRS ) ) ) )", "choosing": "Min( ( ( ( Min( MLU ,DS ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( MUM,MLU ) ) ) ) ) + ( MUC / ( ( CS / ( MLU - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) ) - CS ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.3648148148148148, "obj2": 0.4696235729162489}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / DDR ) ,AMS ) - ( DDR - ( BR * PN ) ) ) + Min( ( ( FirstVNF_RAM - Const ) - ( Min( ( BR + AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( RCSe * RCSe ),( RRSe - DS ) ) - Min( Max( MLU,MLU ) ,( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5881899763254618}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_RAM * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( RCSe - RCSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.2222222222222222, "obj2": 0.6462045448681152}, {"determining": "Min( ( ( Min( MRS ,ACS ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) * MDR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( CS + MUM ) / Max( ( RRSe / Max( ( ( RCSe - DS ) / MUC ),RCSe ) ),Min( Max( ( MUC - ( RMSe / DS ) ),CS ) ,RCSe ) ) ) - CS ) )", "obj1": 0.8407407407407408, "obj2": 0.06770073170230871}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( RRS * FirstVNF_Mem ) * ( Const / Max( ARS,DDR ) ) ) ) ) + ( ( ( ARS * PN ) + PN ) - ( ( ( AMS * DDR ) + Const ) + CRS ) ) ) - FirstVNF_CPU ) ,Min( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( Max( Min( MRS ,FirstVNF_CPU ),CRS ) + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,AMS ) )", "choosing": "Min( ( MUR - Max( MLU,( ( Max( RRSe,( ( MLU + MUR ) - ( RCSe - MUC ) ) ) * ( MUM * RCSe ) ) + Min( Max( MUR,MUC ) ,MUR ) ) ) ) ,Min( RCSe ,RMSe ) )", "obj1": 0.9462962962962963, "obj2": 0.020192920408356147}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe - MUC ) ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5016797113685082}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU_Server ) ) - Max( ARS,DDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS / ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( RCSe - Max( ( DS / Min( DS ,RMSe ) ),( RRSe - Min( ( MUC - ( ( MUM * DS ) / MUR ) ) ,MUM ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16537933482877512}, {"determining": "Min( Min( ( ( AMS - DDR ) - ( Min( AMS ,( FirstVNF_CPU_Server / MDR ) ) / ( Min( ARS ,ACS ) / ( PN / PN ) ) ) ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe / Min( ( Min( ( RCSe / MUM ) ,CS ) + RCSe ) ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.45740740740740743, "obj2": 0.35842688208395207}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( ( FirstVNF_Mem * CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.4648148148148148, "obj2": 0.34845347838341145}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Min( ACS ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( RRSe + MUM ) - ( MUM + ( ( MLU + ( CS * Min( MUM ,RRSe ) ) ) * DS ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8014419952595567}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( Const * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( ( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ) - ( FirstVNF_Mem - MDR ) ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( RRSe ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,Min( DS ,MUC ) ) ) * RMSe ) ) ) - CS ) ,Min( ( RRSe * MUR ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.6611111111111111, "obj2": 0.1895527685070236}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( FirstVNF_CPU * ( ( ( ( MRS - FirstVNF_CPU ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RMSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6907407407407408, "obj2": 0.1554930395312061}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( DDR ,( FirstVNF_RAM * PN ) ),PN ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - ( MDR * ( FirstVNF_CPU / MDR ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR / RMSe ) ,Max( ( RRSe / MUM ),( ( DS - MUM ) / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343019182363248}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - Max( RCSe,MLU ) )", "obj1": 0.5074074074074074, "obj2": 0.3207351174450088}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( MRS * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( PN ,( MRS - AMS ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( RRS,DDR ) ) )", "choosing": "Min( ( ( ( MUC / Min( ( ( ( RRSe * DS ) + Min( RMSe ,RRSe ) ) / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ) - Min( DS ,Min( Min( MUM ,( DS * RCSe ) ) ,Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.25, "obj2": 0.6171085123220212}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) ) - ( ACS - CRS ) ) ,( ( ( FirstVNF_RAM + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * ( MRS - ARS ) ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + MUC ) ) + MUM ) * ( Max( RRSe,( RCSe - RMSe ) ) * ( DS / Max( RCSe,MUR ) ) ) ) - MUR ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.03493668831854245}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( FirstVNF_CPU * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( ( ( ( Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUR ) ) ) ) + ( Min( MUR ,( MUC - MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7203703703703703, "obj2": 0.13017059750912216}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( RRS * FirstVNF_Mem ) * ( Max( FirstVNF_CPU_Server,DDR ) / Const ) ) ) ) + ( ( ( ( Min( DDR ,PN ) - MDR ) * PN ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( FirstVNF_RAM ,AMS ) )", "choosing": "( ( RMSe * Max( MUC,RRSe ) ) - Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) )", "obj1": 0.9888888888888889, "obj2": 0.0028402004950912442}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( DS * ( Max( CS,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.8648148148148148, "obj2": 0.053721081125716295}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.17222222222222222, "obj2": 0.7157897773984095}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MLU ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.2074074074074074, "obj2": 0.6694123138304515}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( ( ( ( CRS - CRS ) - ( FirstVNF_RAM - FirstVNF_RAM ) ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( ( MUR - MLU ),Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6833333333333333, "obj2": 0.16053832504323123}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( ( PN - ( Min( Min( ( ( ( FirstVNF_CPU * Const ) - Min( FirstVNF_RAM ,AMS ) ) - ( ( MRS * AMS ) - Min( MRS ,MDR ) ) ) ,FirstVNF_RAM ) ,MDR ) * MDR ) ) ,( DDR * PN ) )", "choosing": "Min( ( MUR - Max( ( Max( CS,( ( CS - ( CS - RCSe ) ) * RMSe ) ) + ( RRSe + RMSe ) ),( MUC + ( Max( ( RCSe - RCSe ),Max( ( DS + MUR ),DS ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.14074074074074075, "obj2": 0.7596774974026637}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( ( ( MRS * PN ) - DDR ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( ( MUC / Min( ( ( ( RRSe * DS ) + Min( RMSe ,RRSe ) ) / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ) - Min( DS ,Min( Min( MUM ,( DS * RCSe ) ) ,Max( MUR,CS ) ) ) ) ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.8537037037037037, "obj2": 0.06527174682541087}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + Max( RMSe,Min( RCSe ,MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8074074074074075, "obj2": 0.08404516694817916}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.762962962962963, "obj2": 0.10361523053216748}, {"determining": "Min( Min( MRS ,Min( ( ( PN + Max( PN,Min( DDR ,Min( MDR ,FirstVNF_Mem_Server ) ) ) ) - MDR ) ,PN ) ) ,( PN - ( Min( ( ( FirstVNF_CPU / CRS ) + Min( DDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( DS - MUM ) ) - Min( RMSe ,( RCSe / ( DS * RRSe ) ) ) ) ) ) - CS ) ,( ( RRSe - MUR ) * RCSe ) )", "obj1": 0.5611111111111111, "obj2": 0.2636972532120866}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7244841008863109}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - FirstVNF_Mem_Server ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( CRS + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( ( DS * RMSe ) * ( Max( MUR,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.5008586517152402}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( PN * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5833333333333334, "obj2": 0.24137811070140833}, {"determining": "Min( Min( PN ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( BR / FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) ,PN ) ) ,( Min( PN ,DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( MUR - ( Min( CS ,( MUC - ( ( MUM - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) ) ,Min( Min( RCSe ,( ( DS + MLU ) + RCSe ) ) ,MLU ) ) )", "obj1": 0.75, "obj2": 0.10918342232975621}, {"determining": "Min( Min( MRS ,Min( ( ( ( PN - Min( DDR ,( FirstVNF_CPU * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) / Min( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,AMS ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * ( RCSe - RMSe ) ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7092592592592593, "obj2": 0.13506658375502886}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.26851851851851855, "obj2": 0.5772947191260301}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.37407407407407406, "obj2": 0.46615566094770877}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - BR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - FirstVNF_Mem ) ) ,( CRS * PN ) ) ) + Max( PN,ACS ) ) ,( ACS * ( ( ARS * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "Min( ( ( ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) + ( MUC / ( ( ( RMSe + MLU ) - Min( Max( MUC,CS ) ,( MLU + RCSe ) ) ) * Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,RRSe ) - RCSe ) ) ) ) ) - RRSe ) ,( RCSe - RMSe ) )", "obj1": 0.39444444444444443, "obj2": 0.42213005232410056}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) ) - ( ACS - CRS ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8944444444444445, "obj2": 0.040843412944372166}, {"determining": "Min( Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,DDR ) + PN ) ) * DDR ) ) ) ,( PN - ( Min( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * ( ( Max( PN,( ( ACS - CRS ) - ( BR / FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) ) ) )", "choosing": "Min( ( ( Max( Min( ( RCSe - RCSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - ( MUM + CS ) ) ,CS )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + ( RRSe / DS ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8, "obj2": 0.0864919198263434}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( PN,ACS ) ) ,( ACS * PN ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,RRSe ) - RCSe ) ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - RRSe ) ,( RCSe - RMSe ) )", "obj1": 0.13148148148148148, "obj2": 0.7716533659750957}, {"determining": "( ( ACS - Min( ( FirstVNF_CPU_Server * ( ( Max( AMS,AMS ) - BR ) + FirstVNF_CPU_Server ) ) ,( Const / PN ) ) ) - ( ( ( ( ( ( ( PN - CRS ) - ( FirstVNF_RAM - FirstVNF_RAM ) ) + BR ) + Max( CRS,ARS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( Min( FirstVNF_Mem_Server ,MDR ) ,( Min( Const ,Const ) / ACS ) ) ) )", "choosing": "Min( Min( ( ( DS - ( Min( MUM ,MUC ) * RCSe ) ) + ( ( Min( Min( RCSe ,( MUR - MUM ) ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.7314814814814815, "obj2": 0.11946438644556454}, {"determining": "Min( Min( MRS ,Min( ( ( PN + Max( FirstVNF_CPU_Server,Min( DDR ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) ) ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( MLU / CS ) ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUR ) ) ) ) + ( ( MUR * ( Min( ( RRSe + RRSe ) ,( RRSe + CS ) ) * Min( MUC ,RCSe ) ) ) - Min( DS ,( Min( MUM ,( DS + RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5722222222222222, "obj2": 0.24720427900458763}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.587037037037037, "obj2": 0.23602232305192655}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( ( FirstVNF_Mem * CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4648148148148148, "obj2": 0.34845347838341145}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4425925925925926, "obj2": 0.3702900321346334}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe / Min( ( Min( ( RCSe / MUM ) ,CS ) + RCSe ) ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.3425925925925926, "obj2": 0.4928804137775566}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973901332060258}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Max( FirstVNF_Mem_Server,DDR ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + ( RRSe / DS ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5648148148148148, "obj2": 0.2539294463295277}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.65, "obj2": 0.19316399136412404}, {"determining": "Min( Min( Min( MDR ,FirstVNF_Mem_Server ) ,Min( ( ( ( PN - Min( DDR ,( FirstVNF_CPU * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * CS ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6944444444444444, "obj2": 0.1451130168273393}, {"determining": "Min( ( FirstVNF_CPU_Server * ( ( Max( AMS,AMS ) - BR ) + FirstVNF_CPU_Server ) ) ,( Const / PN ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( Max( PN,( CRS * ARS ) ),PN ) ) ,( ARS + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ) ) ,( Min( ( ( RRS / MDR ) + BR ) ,( MRS - ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) + Max( ( Max( FirstVNF_CPU_Server,CRS ) / ACS ),( ( ( PN / Min( DDR ,( ACS * AMS ) ) ) + PN ) - DDR ) ) ) )", "choosing": "Min( ( Max( MUM,Min( MLU ,( ( DS + ( RRSe + Max( RCSe,DS ) ) ) * Min( Min( MLU ,MUR ) ,MLU ) ) ) ) - RMSe ) ,( MLU * RCSe ) )", "obj1": 0.7407407407407407, "obj2": 0.11471377193146025}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) ) - ( ACS - CRS ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( ( RCSe - MLU ) - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( Max( RRSe,( RCSe - RMSe ) ) * ( DS / ( MUC - MUR ) ) ) ) - MUR ) ) ) )", "obj1": 0.9037037037037037, "obj2": 0.03651674037955921}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Max( FirstVNF_Mem_Server,DDR ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + Max( RMSe,Min( RCSe ,MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.575925925925926, "obj2": 0.24652218393170175}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( Max( PN,Min( DDR ,( MDR * MDR ) ) ) + PN ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( MUR,Max( RCSe,MLU ) ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.5853497454389194}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( RRS * FirstVNF_Mem ) * ( Max( ARS,DDR ) / Const ) ) ) ) + ( ( ( ARS * PN ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,AMS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.95, "obj2": 0.017285010114467418}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( MDR * MDR ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Max( ( RRSe / DS ),( RCSe + MUC ) ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - ( RCSe + RRSe ) ) ,( RCSe - RMSe ) )", "obj1": 0.4222222222222222, "obj2": 0.38903933338744673}, {"determining": "Min( Min( MRS ,Min( ( ( FirstVNF_Mem * MDR ) - Min( ( ( Min( DDR ,PN ) - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,MDR ) ) ,FirstVNF_CPU ) + MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - Max( ( RMSe - MUR ),( ( RCSe / ( RCSe - MUR ) ) - ( RMSe + ( Max( CS,MUM ) / Min( RRSe ,CS ) ) ) ) ) ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5, "obj2": 0.3243375158550747}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.26851851851851855, "obj2": 0.5772947191260301}], "50": [{"determining": "Min( ( FirstVNF_Mem_Server / MRS ) ,( ( Max( ( ARS / CRS ),( FirstVNF_RAM + DDR ) ) + BR ) + Max( ( FirstVNF_CPU_Server * Const ),CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RRSe ) / ( MUM * ( ( Min( DS ,RCSe ) - MUC ) * MUC ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.10925925925925926, "obj2": 0.829164747658701}, {"determining": "( ( ACS - Min( ( FirstVNF_CPU_Server * ( ( Max( AMS,AMS ) - BR ) + FirstVNF_CPU_Server ) ) ,( Const / PN ) ) ) - Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( RMSe + RRSe ) ) + MUM ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( ( Min( Min( ( ( MRS - Min( FirstVNF_RAM ,AMS ) ) - ( ( MRS * AMS ) - Min( MRS ,MDR ) ) ) ,FirstVNF_RAM ) ,MDR ) * MDR ) ,( ACS * PN ) )", "choosing": "Min( ( ( ( CS - ( CS - MLU ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - RRSe ) ,( RCSe - RMSe ) )", "obj1": 1.0, "obj2": 0.0}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - FirstVNF_RAM ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RCSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.10925925925925926, "obj2": 0.829164747658701}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.3814814814814815, "obj2": 0.4547809513153637}, {"determining": "Min( ( ( Min( BR ,( AMS / FirstVNF_Mem_Server ) ) + Min( ( FirstVNF_Mem_Server - Max( ( MRS + RRS ),Const ) ) ,Min( Min( DDR ,FirstVNF_CPU ) ,FirstVNF_RAM_Server ) ) ) + Max( CRS,ARS ) ) ,( PN - ( Min( FirstVNF_CPU ,Min( ( ( FirstVNF_Mem / FirstVNF_RAM ) - MRS ) ,( ( ( MRS * RRS ) - ( FirstVNF_CPU_Server + MRS ) ) / Min( ( FirstVNF_Mem - MDR ) ,( DDR * RRS ) ) ) ) ) * MDR ) ) )", "choosing": "( ( ( MLU * ( ( MUR / ( RCSe - MUR ) ) / ( ( MUC - Min( ( DS - RCSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) ) ) + Min( MUC ,RMSe ) ) * Min( RCSe ,( ( ( DS * CS ) + ( MUM * RRSe ) ) + ( Max( ( DS + MUR ),Max( RCSe,( CS - RCSe ) ) ) * RMSe ) ) ) )", "obj1": 0.15, "obj2": 0.7433586830245191}, {"determining": "Min( Max( Min( FirstVNF_RAM_Server ,Const ),BR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe / MUM ) ,( Max( ( Min( RMSe ,MLU ) + MUM ),( ( RMSe + MUR ) - Max( RMSe,CS ) ) ) - CS ) )", "obj1": 0.9296296296296296, "obj2": 0.031133677132673843}, {"determining": "Min( Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,DDR ) + PN ) ) * DDR ) ) ) ,( PN - ( Min( ( ( FirstVNF_RAM + FirstVNF_Mem_Server ) + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * ( ( Max( PN,( ( ACS - CRS ) - ( BR / FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) ) ) )", "choosing": "Min( ( ( Max( Min( ( RCSe - RCSe ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - ( MUM + CS ) ) ,CS )", "obj1": 0.9777777777777777, "obj2": 0.00518868213400991}, {"determining": "Min( ( FirstVNF_RAM_Server + CRS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - ( ( MUM + RCSe ) / RMSe ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.6333333333333333, "obj2": 0.20086845518090632}, {"determining": "Min( Min( MRS ,Min( ( ( DDR - MDR ) - MDR ) ,MDR ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( PN,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,DS ) - RCSe ) ) ) ) - ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - ( Min( ( RRSe + ( RMSe * CS ) ) ,( MLU - DS ) ) - MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.387037037037037, "obj2": 0.4269851508582536}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( RRS * FirstVNF_Mem ) * ( Max( ARS,DDR ) / Const ) ) ) ) + ( ( ( ARS * PN ) + PN ) - DDR ) ) - FirstVNF_CPU ) ,Min( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,AMS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.95, "obj2": 0.017285010114467418}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( ( FirstVNF_Mem * ( AMS / FirstVNF_CPU_Server ) ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,RCSe ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.55, "obj2": 0.26941060174855797}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( Min( MUC ,( RCSe - Min( MUR ,( ( DS / MLU ) + ( ( Max( MLU,RMSe ) + DS ) / RRSe ) ) ) ) ) - ( RMSe / ( DS * Min( MLU ,( ( MUC - MUC ) - Min( Min( ( MUR / RRSe ) ,MUR ) ,( RCSe + ( MUC - MUR ) ) ) ) ) ) ) )", "obj1": 0.5370370370370371, "obj2": 0.28787309430524677}, {"determining": "Min( ( PN - ( Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) * MDR ) ) ,( DDR * PN ) )", "choosing": "Min( ( MUR - Max( ( Max( CS,( ( CS - ( CS - RCSe ) ) * RMSe ) ) + ( RRSe + RMSe ) ),Min( Max( MUR,MUC ) ,MUR ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.6481481481481481, "obj2": 0.18667944185017646}, {"determining": "Min( Min( ( ( AMS - DDR ) - ( Min( AMS ,( FirstVNF_CPU_Server / MDR ) ) / ( Min( ARS ,ACS ) / ( PN / PN ) ) ) ) ,Min( ( ( Max( PN,( ( PN - CRS ) - ( FirstVNF_Mem_Server * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * Min( FirstVNF_CPU ,Const ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - MDR ) ) ,( CRS * ARS ) ) ) + Max( ( ( ( Max( MDR,PN ) + FirstVNF_CPU ) * Max( FirstVNF_CPU,DDR ) ) / FirstVNF_Mem ),FirstVNF_RAM ) ) )", "choosing": "Min( Min( ( ( RRSe / DS ) + ( RMSe / Min( ( Min( ( RCSe / MUM ) ,CS ) + RCSe ) ,( ( MLU - ( MUC * MUM ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) ,CS ) ,( RCSe - RMSe ) )", "obj1": 0.45740740740740743, "obj2": 0.35842688208395207}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( FirstVNF_CPU,DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( MUC - DS ) ,DS ) )", "obj1": 0.3574074074074074, "obj2": 0.4816209045078162}, {"determining": "Min( ( BR / Min( RRS ,FirstVNF_RAM ) ) ,Max( MDR,Min( ( Max( FirstVNF_CPU_Server,DDR ) * FirstVNF_RAM_Server ) ,FirstVNF_CPU ) ) )", "choosing": "( ( Min( ( MUR - Min( ( CS + DS ) ,RRSe ) ) ,( RCSe + RMSe ) ) + ( Min( MUC ,RMSe ) + Min( RMSe ,RMSe ) ) ) + ( ( RCSe + RRSe ) / ( ( MUR * RMSe ) * ( ( RRSe / RMSe ) - CS ) ) ) )", "obj1": 0.2518518518518518, "obj2": 0.6021288575794467}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( AMS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Min( ( AMS / FirstVNF_CPU_Server ) ,( DDR * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( Min( Min( ( CS - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( MUM / RMSe ) )", "obj1": 0.1814814814814815, "obj2": 0.6977818766411255}, {"determining": "( ( FirstVNF_Mem / RRS ) / ( ( ( FirstVNF_Mem_Server * Const ) - ( ACS - CRS ) ) - Min( FirstVNF_Mem_Server ,MDR ) ) )", "choosing": "Min( ( MUC / ( ( RCSe - MUC ) / Max( Min( CS ,DS ),DS ) ) ) ,( Min( ( MUC - MUM ) ,( CS - ( ( MUR + ( ( RMSe * MLU ) / RCSe ) ) * ( Min( RMSe ,Min( CS ,RCSe ) ) / MLU ) ) ) ) * RMSe ) )", "obj1": 0.12407407407407407, "obj2": 0.7766403616751553}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( RRS + DDR ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( ( ( MUM * MUC ) * MUC ),MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.34074074074074073, "obj2": 0.48726406313070275}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ( ( BR * PN ) - DDR ) ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( ( MUR - MLU ) + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / RMSe ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.1648148148148148, "obj2": 0.7293760459136517}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "( ( CS / MUM ) - ( DS - ( Min( Min( ( Max( DS,MUR ) + MUC ) ,Max( MLU,RRSe ) ) ,Min( DS ,( RRSe - Min( MLU ,CS ) ) ) ) + CS ) ) )", "obj1": 0.32222222222222224, "obj2": 0.5164730809358866}, {"determining": "Min( ( PN - ( Min( Min( ( ( ( FirstVNF_CPU * Const ) - Min( FirstVNF_RAM ,AMS ) ) - ( ( MRS * AMS ) - Min( MRS ,MDR ) ) ) ,FirstVNF_RAM ) ,MDR ) * MDR ) ) ,( DDR * PN ) )", "choosing": "Min( ( MUR - Max( ( Max( CS,( ( CS - ( CS - RCSe ) ) * RMSe ) ) + ( RRSe + RMSe ) ),( MUC + ( Max( ( RCSe - RCSe ),Max( ( DS + MUR ),DS ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.14074074074074075, "obj2": 0.7596774974026637}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,( AMS / FirstVNF_CPU ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( RCSe - RMSe ) ,( ( ( ( Min( ( ( MLU / MUM ) / MUC ) ,Max( CS,RMSe ) ) / RRSe ) + RMSe ) - ( MUR - ( ( MUM + ( CS + ( RMSe + MUC ) ) ) * ( MUM * Max( RMSe,Min( RCSe ,MUM ) ) ) ) ) ) - CS ) )", "obj1": 0.6203703703703703, "obj2": 0.20932669598591191}, {"determining": "Min( ( ( Max( FirstVNF_RAM,PN ) - ( AMS - ( ( Max( FirstVNF_Mem_Server,PN ) + ( RRS / Min( ARS ,RRS ) ) ) - Min( ( FirstVNF_RAM_Server + PN ) ,( RRS + DDR ) ) ) ) ) - ( ( ( ( ( ( MDR - PN ) / BR ) * FirstVNF_CPU ) + Min( ( DDR + FirstVNF_RAM ) ,FirstVNF_CPU ) ) / PN ) * FirstVNF_CPU_Server ) ) ,( ( ( ( ( Max( PN,DDR ) + ( ( ACS - MRS ) - ( ARS * Const ) ) ) + ( MDR + FirstVNF_CPU_Server ) ) - Min( AMS ,ARS ) ) - MDR ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( MUC / ( MUM * MUC ) ) + ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8314814814814815, "obj2": 0.07479999187469408}, {"determining": "Min( Min( MRS ,Min( ( ( FirstVNF_Mem * MDR ) - Min( ( ( Min( DDR ,PN ) - MDR ) - FirstVNF_Mem_Server ) ,( CRS * ARS ) ) ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,MDR ) ) ,FirstVNF_CPU ) + MDR ) ) )", "choosing": "Min( ( Min( RCSe ,MUR ) - ( Min( Max( MUC,Min( ( ( CS + MUR ) + RMSe ) ,MUR ) ) ,( ( MUM + CS ) + ( MUM * RCSe ) ) ) - Max( ( RMSe - MUR ),( ( RCSe / ( RCSe - MUR ) ) - ( RMSe + ( Max( CS,MUM ) / Min( RRSe ,CS ) ) ) ) ) ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.5, "obj2": 0.3243375158550747}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.21481481481481482, "obj2": 0.659720020103574}, {"determining": "Min( ( MRS * ( ( ( MDR + MDR ) - Max( MDR,RRS ) ) - ( FirstVNF_Mem_Server + ( ACS - MRS ) ) ) ) ,( Max( CRS,ARS ) + Max( ( ( CRS / FirstVNF_CPU ) * ( FirstVNF_RAM - PN ) ),Min( ( RRS + CRS ) ,( ARS * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( Min( ( MLU - Max( DS,RCSe ) ) ,( ( ( Min( ( RRSe - RCSe ) ,Max( MUM,DS ) ) + MUR ) * MUC ) - DS ) ) - ( DS - MLU ) ) ,( ( MUR - MUM ) + MUR ) )", "obj1": 0.2388888888888889, "obj2": 0.6197167539366197}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( MDR - ( Const + FirstVNF_RAM_Server ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( MUR / ( ( CS + RMSe ) / MUM ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) - ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( ( DS * RCSe ) ,MUM ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( CS + MUM ) )", "obj1": 0.5277777777777778, "obj2": 0.2928660228935508}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS + RRS ) / FirstVNF_Mem ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) / CRS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( Min( ( ( Max( CS,( ( RRSe - RRSe ) * ( MUC / MUC ) ) ) - MLU ) + DS ) ,RMSe ) * DS ) ,( MUC / RCSe ) )", "obj1": 0.40925925925925927, "obj2": 0.4098985029928672}, {"determining": "( ( ( ( ACS - CRS ) - ( FirstVNF_Mem_Server * Const ) ) - ( FirstVNF_Mem / MRS ) ) / Max( ( FirstVNF_RAM - FirstVNF_Mem_Server ),( ( FirstVNF_Mem / Min( ( PN - ( ( MRS / RRS ) * FirstVNF_CPU_Server ) ) ,( FirstVNF_RAM_Server + BR ) ) ) - Min( MDR ,FirstVNF_CPU ) ) ) )", "choosing": "( ( ( DS + ( MUR - RRSe ) ) - ( DS * RMSe ) ) - ( CS - Min( Max( ( ( MUR * RRSe ) - MUM ),( Max( ( MUM / RMSe ),MUR ) + RRSe ) ) ,( RRSe + MUM ) ) ) )", "obj1": 0.23333333333333334, "obj2": 0.6337153429546177}, {"determining": "Min( Min( ( ( FirstVNF_RAM_Server * FirstVNF_RAM_Server ) * FirstVNF_RAM ) ,Min( ( MDR - ( ( FirstVNF_Mem_Server - Min( AMS ,MRS ) ) + PN ) ) ,PN ) ) ,( Max( ARS,FirstVNF_RAM ) + ( ( ( ( ( ( Const / FirstVNF_Mem ) - ACS ) * PN ) - DDR ) - ( FirstVNF_Mem - Max( MDR,( FirstVNF_CPU - ACS ) ) ) ) + ( AMS + FirstVNF_CPU ) ) ) )", "choosing": "Min( ( Max( RCSe,( CS + Max( DS,MUM ) ) ) - MUR ) ,( Max( ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,( MLU / RMSe ) ) ) * RMSe ) ),DS ) - MUM ) )", "obj1": 0.5185185185185185, "obj2": 0.30319761220446506}, {"determining": "Min( ( ( Max( Min( ( CRS * DDR ) ,Max( FirstVNF_CPU_Server,FirstVNF_RAM ) ),PN ) - FirstVNF_Mem ) * FirstVNF_RAM_Server ) ,( FirstVNF_RAM_Server / PN ) )", "choosing": "( ( RMSe + RMSe ) - ( RRSe + ( ( ( MUR + RMSe ) + ( ( MUC / ( ( MUC + MUC ) + MUR ) ) * ( ( MUM + ( MUR - MUM ) ) / RCSe ) ) ) * RCSe ) ) )", "obj1": 0.12037037037037036, "obj2": 0.8003062645539013}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / DDR ) ,AMS ) - ( DDR - ( BR * PN ) ) ) + Min( ( ( FirstVNF_RAM - Const ) - ( Min( ( BR + AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "( Max( ( RCSe * RCSe ),( RRSe - DS ) ) - Min( Max( MLU,MLU ) ,( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.26296296296296295, "obj2": 0.5881899763254618}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_RAM * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( ( MRS * AMS ),Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( Min( ( ( RCSe * RMSe ) * MUR ) ,( RRSe - MUR ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.2222222222222222, "obj2": 0.6460778367114953}, {"determining": "Min( ( ( Min( MRS ,ACS ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) * MDR ) ,( PN - CRS ) )", "choosing": "Min( ( RCSe - MUM ) ,( ( ( CS + MUM ) / Max( ( RRSe / Max( ( ( RCSe - DS ) / MUC ),RCSe ) ),Min( Max( ( MUC - ( RMSe / DS ) ),CS ) ,RCSe ) ) ) - CS ) )", "obj1": 0.8407407407407408, "obj2": 0.06770073170230871}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( MUR,Max( RCSe,MLU ) ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.6592592592592592, "obj2": 0.1815752767868542}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( MRS * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( PN ,( MRS - AMS ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( RRS,DDR ) ) )", "choosing": "Min( ( ( ( MUC / Min( ( ( ( RRSe * DS ) + Min( RMSe ,RRSe ) ) / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ) - Min( DS ,Min( Min( MUM ,( DS * RCSe ) ) ,Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.25, "obj2": 0.6160841224405885}, {"determining": "Min( ( ( ( ( Max( FirstVNF_RAM,( Max( CRS,FirstVNF_RAM ) - FirstVNF_Mem_Server ) ) / FirstVNF_CPU_Server ) / DDR ) - ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) ) - ( ACS - CRS ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( FirstVNF_Mem * FirstVNF_Mem ) ),Max( FirstVNF_CPU,Min( Max( FirstVNF_Mem_Server,DDR ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( Max( RRSe,( RCSe - RMSe ) ) * ( DS / ( MUC - MUR ) ) ) ) - MUR ) ) ) )", "obj1": 0.9055555555555556, "obj2": 0.03493668831854244}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( RRSe ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( CS / CS ) / ( ( ( ( CS + MUC ) - Max( RCSe,MUC ) ) * Max( RCSe,Min( DS ,MUC ) ) ) * RMSe ) ) ) - CS ) ,Min( ( RRSe * MUR ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.48518518518518516, "obj2": 0.3351334361392624}, {"determining": "Min( ( PN - ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) / Min( ( FirstVNF_CPU_Server - AMS ) ,( AMS / FirstVNF_CPU ) ) ) ) ,FirstVNF_CPU ) * MDR ) ) ,( ( ( CRS + ( Max( ( FirstVNF_RAM / Max( FirstVNF_Mem_Server,DDR ) ),DDR ) + PN ) ) - DDR ) - MDR ) )", "choosing": "Min( ( MUR - Max( MLU,( ( Max( RRSe,( ( MLU + MUR ) - ( RCSe - MUC ) ) ) * ( MUM * RCSe ) ) + Min( Max( MUR,MUC ) ,MUR ) ) ) ) ,Min( RCSe ,RMSe ) )", "obj1": 0.6037037037037037, "obj2": 0.22425117657786822}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( RRSe + RRSe ) - ( MUM + ( ( MLU + ( ( ( RMSe + ( RCSe * MUC ) ) + ( DS / RCSe ) ) * Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) ) ) * DS ) ) )", "obj1": 0.5111111111111111, "obj2": 0.30933490639990896}, {"determining": "Min( ( ( CRS * MRS ) - BR ) ,FirstVNF_RAM )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.43333333333333335, "obj2": 0.3764205148161713}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RCSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * ( ( MUC / MLU ) + ( MLU / ( MUC * ( ( RCSe / DS ) + MUR ) ) ) ) ) ) - ( RMSe + MUM ) )", "obj1": 0.32037037037037036, "obj2": 0.5305155235516638}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,CS ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,Min( ( RRSe * ( RMSe * Min( ( MUC + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + ( Max( RRSe,( RCSe - RMSe ) ) * RCSe ) ) ) )", "obj1": 0.30185185185185187, "obj2": 0.5502720236174145}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.17592592592592593, "obj2": 0.7086788975103864}, {"determining": "Min( ( FirstVNF_Mem_Server / PN ) ,Min( ACS ,Max( FirstVNF_CPU_Server,MDR ) ) )", "choosing": "( ( RRSe + MUM ) - ( MUM + ( ( MLU + ( CS * Min( MUM ,RRSe ) ) ) * DS ) ) )", "obj1": 0.11666666666666667, "obj2": 0.8014419952595567}, {"determining": "Min( Min( ( Min( ( FirstVNF_RAM + ( ( ( MRS * AMS ) - ( FirstVNF_Mem * FirstVNF_Mem ) ) / Min( ( FirstVNF_Mem - AMS ) ,PN ) ) ) ,FirstVNF_CPU ) * MDR ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_RAM + FirstVNF_CPU ) ) ) + FirstVNF_CPU ) - MDR ) ,PN ) ) ,( ( Min( ( CRS + MDR ) ,( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Max( RRS,( CRS * MDR ) ) - MDR ) ) ,( CRS * ARS ) ) ) + Max( ARS,FirstVNF_RAM ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( MLU + ( MLU * MUR ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.3962962962962963, "obj2": 0.4159585623332648}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Min( ( AMS / FirstVNF_CPU_Server ) ,( DDR * FirstVNF_RAM ) ) ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( MUM / RMSe ) )", "obj1": 0.19074074074074074, "obj2": 0.6832341219855018}, {"determining": "Min( Min( MRS ,Min( ( ( Max( Min( DDR ,( FirstVNF_RAM * PN ) ),PN ) + PN ) - ( ARS - FirstVNF_Mem_Server ) ) ,( DDR - RRS ) ) ) ,( ( ( ( FirstVNF_CPU / Const ) - ( DDR - ( MDR * ( FirstVNF_CPU / MDR ) ) ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( MUR / RMSe ) ,Max( ( RRSe / MUM ),( ( DS - MUM ) / MUM ) ) )", "obj1": 0.3055555555555556, "obj2": 0.5343019182363248}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.29074074074074074, "obj2": 0.5555613525258458}, {"determining": "Min( Min( ( FirstVNF_CPU * FirstVNF_RAM ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + MRS ) - ( ( ARS - PN ) / ( FirstVNF_Mem_Server / Max( Const,ACS ) ) ) ) ,PN ) ) ,( FirstVNF_CPU_Server * Min( DDR ,( Min( ( ( ( RRS * ACS ) * Min( ARS ,MRS ) ) * ARS ) ,RRS ) + CRS ) ) ) )", "choosing": "Min( ( ( ( Min( MLU ,DS ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( MUM,MLU ) ) ) ) ) + ( MUC / ( ( CS / ( MLU - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( MUC * ( MUM * MUC ) ) ) ) ) ) - CS ) ,( RRSe + Max( RRSe,MUC ) ) )", "obj1": 0.3648148148148148, "obj2": 0.4696235729162489}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2074074074074074, "obj2": 0.665690013253583}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( MUR - Max( MLU,( MUC + ( Max( RRSe,( RCSe - ( RCSe - MUC ) ) ) * ( MUM * RCSe ) ) ) ) ) ,( RCSe - RMSe ) )", "obj1": 0.3296296296296296, "obj2": 0.5016797113685082}, {"determining": "Min( Min( MRS ,Min( ( ( ( ( FirstVNF_Mem_Server * AMS ) + FirstVNF_RAM ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.5925925925925926, "obj2": 0.2324637140333266}, {"determining": "Min( Min( Min( MDR ,FirstVNF_Mem_Server ) ,Min( ( ( ( PN - Min( DDR ,( FirstVNF_CPU * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( MDR * PN ) ) ) / Max( ARS,Max( Min( MRS ,FirstVNF_CPU ),CRS ) ) ) )", "choosing": "Min( Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ,( RCSe - RMSe ) )", "obj1": 0.7018518518518518, "obj2": 0.14037123826298673}, {"determining": "( ( FirstVNF_CPU_Server - ( AMS + FirstVNF_CPU_Server ) ) - Max( ARS,DDR ) )", "choosing": "Min( ( ( ( MUC / ( ( CS / ( MUR - MLU ) ) + Min( Min( ( MUR / MUC ) ,MUR ) ,Min( RMSe ,RRSe ) ) ) ) + ( ( ( RMSe + MUR ) - ( MUM * ( MUM / ( MUR / RRSe ) ) ) ) - Min( DS ,Max( DS,DS ) ) ) ) - CS ) ,( RCSe - Max( ( DS / Min( DS ,RMSe ) ),( RRSe - Min( ( MUC - ( ( MUM * DS ) / MUR ) ) ,MUM ) ) ) ) )", "obj1": 0.6777777777777778, "obj2": 0.16537933482877512}, {"determining": "Min( Min( MRS ,( ( CRS + MRS ) - ( ( Max( ( FirstVNF_Mem_Server * ARS ),FirstVNF_Mem ) + Min( FirstVNF_CPU ,DDR ) ) - MDR ) ) ) ,( ARS * RRS ) )", "choosing": "Min( ( ( ( MUM * RRSe ) + MLU ) * Max( ( RCSe + ( MLU * Max( ( ( CS - MLU ) / MLU ),RRSe ) ) ),MLU ) ) ,( MUM * RCSe ) )", "obj1": 0.42592592592592593, "obj2": 0.38220972726767194}, {"determining": "Min( ( ( Max( PN,( RRS - Max( FirstVNF_Mem_Server,DDR ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + ( MUR / DS ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.7944444444444444, "obj2": 0.08898115073367902}, {"determining": "( ( ( Max( ( PN * Const ),( Min( FirstVNF_RAM_Server ,BR ) + MDR ) ) / MRS ) + RRS ) / ( ACS + Min( ARS ,RRS ) ) )", "choosing": "( Max( RRSe,Min( RMSe ,DS ) ) - ( Min( DS ,MLU ) + ( ( ( Max( ( MUR - ( MLU - RRSe ) ),CS ) * ( Max( DS,MUR ) * MLU ) ) + ( DS + MLU ) ) / RRSe ) ) )", "obj1": 0.22962962962962963, "obj2": 0.643190679587766}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,RRSe ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,RRSe ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.4759259259259259, "obj2": 0.34261600862571484}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( FirstVNF_CPU * ( ( ( ( MRS - FirstVNF_CPU ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( MUM * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,RMSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6907407407407408, "obj2": 0.1554930395312061}, {"determining": "Min( Min( PN ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( BR / FirstVNF_Mem_Server ) ) ) + PN ) - MDR ) ,PN ) ) ,( Min( PN ,DDR ) - MDR ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( MUR - ( Min( CS ,( MUC - ( ( MUM - MLU ) * Max( RRSe,CS ) ) ) ) * RRSe ) ) ,Min( Min( RCSe ,( ( DS + MLU ) + RCSe ) ) ,MLU ) ) )", "obj1": 0.75, "obj2": 0.10918342232975621}, {"determining": "( ( ACS - ( PN * MDR ) ) - ( ( ( ( ( ( ( CRS - CRS ) - ( FirstVNF_RAM - FirstVNF_RAM ) ) + BR ) + Max( ARS,CRS ) ) / ( MDR - PN ) ) * FirstVNF_CPU ) + Min( ( FirstVNF_RAM + FirstVNF_RAM ) ,( Min( PN ,( MDR / BR ) ) * MDR ) ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( ( MUR - MLU ),Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6833333333333333, "obj2": 0.16053832504323123}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( Max( PN,Min( DDR ,( MDR * MDR ) ) ) + PN ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + ( RRSe / DS ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.2777777777777778, "obj2": 0.5769376955115183}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( DS - RMSe ) ,( ( ( RRSe - DS ) + MUM ) - CS ) )", "obj1": 0.8574074074074074, "obj2": 0.06153836866117586}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( ( ( MRS * PN ) - DDR ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( ( MUC / Min( ( ( ( RRSe * DS ) + Min( RMSe ,RRSe ) ) / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ) - Min( DS ,Min( Min( MUM ,( DS * RCSe ) ) ,Max( MUR,CS ) ) ) ) ) ,Min( ( RRSe * ( RMSe * Min( ( ( ( MUC / RCSe ) / MUM ) + Max( RMSe,MUC ) ) ,CS ) ) ) ,( RCSe + Min( Max( RRSe,( RCSe - RMSe ) ) ,RCSe ) ) ) )", "obj1": 0.8537037037037037, "obj2": 0.06527174682541086}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + Max( RMSe,Min( RCSe ,MUM ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.8074074074074075, "obj2": 0.08404516694817916}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - Max( RCSe,MLU ) )", "obj1": 0.8814814814814815, "obj2": 0.04420872879422124}, {"determining": "Min( Min( MRS ,( ( ( FirstVNF_Mem_Server + AMS ) - MDR ) + PN ) ) ,( ( ( DDR - ( ( PN * ARS ) + Min( ( Max( FirstVNF_Mem_Server,ARS ) - MDR ) ,( PN + Min( DDR ,AMS ) ) ) ) ) - Min( ( Max( ACS,FirstVNF_RAM ) - ( FirstVNF_Mem / MDR ) ) ,( CRS * ( FirstVNF_RAM - Max( CRS,ARS ) ) ) ) ) + ( ARS - MDR ) ) )", "choosing": "Min( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( MUM / RMSe ) )", "obj1": 0.13703703703703704, "obj2": 0.7677830768777367}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( RMSe - RMSe ) ,( ( RMSe + MUM ) / Max( RRSe,( ( ( ( CS + ( RMSe + RRSe ) ) + MUM ) * ( Max( RRSe,( RCSe - RMSe ) ) * ( DS / ( MUC - MUR ) ) ) ) - MUR ) ) ) )", "obj1": 0.8148148148148148, "obj2": 0.07903217899850605}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,( Min( RRS ,FirstVNF_Mem_Server ) + MRS ) ) ) ,( Min( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) ,Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ) ) )", "choosing": "Min( ( ( MLU + CS ) - RMSe ) ,( ( Max( ( ( Max( CS,MUM ) / RMSe ) / ( RCSe - RMSe ) ),MUC ) - RCSe ) - RMSe ) )", "obj1": 0.2814814814814815, "obj2": 0.5636384743607169}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4425925925925926, "obj2": 0.3702900321346334}, {"determining": "Min( ( Const / PN ) ,( PN - ( Min( Min( FirstVNF_RAM ,( ( ( MRS * AMS ) - Min( FirstVNF_CPU_Server ,RRS ) ) - ( MRS - Min( FirstVNF_RAM ,AMS ) ) ) ) ,MDR ) * MDR ) ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( RMSe,MLU ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.17037037037037037, "obj2": 0.7244841008863109}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( MDR * MDR ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Max( ( RRSe / DS ),( RCSe + MUC ) ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - ( RCSe + RRSe ) ) ,( RCSe - RMSe ) )", "obj1": 0.4222222222222222, "obj2": 0.38903933338744673}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + RCSe ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.5814814814814815, "obj2": 0.23961449254886516}, {"determining": "Min( Min( MRS ,Min( ( ( PN + Max( PN,Min( DDR ,Min( MDR ,CRS ) ) ) ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Max( ( Max( RMSe,DS ) / Max( MUC,DS ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( DS,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUR ) ) ) ) + ( Min( MUR ,( MUC - MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6129629629629629, "obj2": 0.21838930626068834}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - MRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.4425925925925926, "obj2": 0.3702900321346334}, {"determining": "Min( ( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - BR ) ) + Min( ( FirstVNF_Mem_Server - ( MDR - FirstVNF_Mem ) ) ,( CRS * PN ) ) ) + Max( PN,ACS ) ) ,( ACS * ( ( ARS * FirstVNF_Mem_Server ) / MDR ) ) )", "choosing": "Min( ( ( ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( MUM ,( DS * RCSe ) ) ) ) ) + ( MUC / ( ( ( RMSe + MLU ) - Min( Max( MUC,CS ) ,( MLU + RCSe ) ) ) * Max( ( RMSe / Max( MLU,RMSe ) ),( Min( RRSe ,RRSe ) - RCSe ) ) ) ) ) - RRSe ) ,( RCSe - RMSe ) )", "obj1": 0.39444444444444443, "obj2": 0.42213005232410056}, {"determining": "Min( Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,DDR ) + PN ) ) * DDR ) ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( MLU + CS ) - ( MUM + CS ) ) ,( ( Max( Min( ( RCSe - RMSe ) ,( RRSe - MUR ) ),MUR ) - RCSe ) - RMSe ) )", "obj1": 0.6685185185185185, "obj2": 0.17594748871324542}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - ( ( PN + Max( PN,Min( DDR ,CRS ) ) ) - MDR ) ) ) )", "choosing": "Min( ( ( ( MUC / Min( ( MUR / ( DS / RCSe ) ) ,( CS + MUC ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2, "obj2": 0.6706069704874966}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + ( ( Min( ( MDR / CRS ) ,AMS ) - ( ( BR * PN ) - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( FirstVNF_Mem - AMS ) ,PN ) - MDR ) ) ,( CRS * ARS ) ) ) ) )", "choosing": "( ( MLU + ( ( Min( ( ( ( RRSe * MUM ) - RCSe ) / ( ( DS / RCSe ) + ( RMSe + CS ) ) ) ,MUR ) * DS ) - ( ( ( Max( ( DS - MLU ),RCSe ) - MUR ) * MUR ) * ( ( RCSe - ( ( DS / RCSe ) + DS ) ) - Max( MUM,MUM ) ) ) ) ) - ( RMSe + ( ( MUM + RMSe ) + Max( MLU,RMSe ) ) ) )", "obj1": 0.4111111111111111, "obj2": 0.3973901332060258}, {"determining": "Min( ( PN - ( Max( ( Max( DDR,( FirstVNF_RAM / ARS ) ) + RRS ),FirstVNF_CPU ) * MDR ) ) ,( Min( FirstVNF_CPU_Server ,Const ) - ( ( ( ( Max( FirstVNF_RAM_Server,FirstVNF_RAM ) * PN ) - Min( MRS ,FirstVNF_CPU ) ) + ( Max( RRS,RRS ) + PN ) ) * DDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( ( MUR - MLU ),Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.6703703703703704, "obj2": 0.17227962866996102}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( ( ( MUC / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( MUM * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.7833333333333333, "obj2": 0.09373488536738755}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,( ( ACS - FirstVNF_Mem_Server ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( MDR - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( Min( ( CRS + FirstVNF_Mem ) ,Min( FirstVNF_Mem_Server ,FirstVNF_Mem_Server ) ) - MDR ) ) ,( CRS * ARS ) ) ) + ( FirstVNF_RAM - DDR ) ) )", "choosing": "( ( MUM - ( RCSe + RRSe ) ) - ( RMSe + ( ( DS * RMSe ) * ( Max( MUR,RMSe ) * ( Min( RMSe ,DS ) * ( CS + RMSe ) ) ) ) ) )", "obj1": 0.337037037037037, "obj2": 0.5008586517152402}, {"determining": "Min( ( ( Max( PN,( RRS - ( ( RRS * FirstVNF_Mem ) * ( Const / Max( ARS,DDR ) ) ) ) ) + ( ( ( ARS * PN ) + PN ) - ( ( ( AMS * DDR ) + Const ) + CRS ) ) ) - FirstVNF_CPU ) ,Min( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( Max( Min( MRS ,FirstVNF_CPU ),CRS ) + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ) ,AMS ) )", "choosing": "Min( ( MUR - Max( MLU,( ( Max( RRSe,( ( MLU + MUR ) - ( RCSe - MUC ) ) ) * ( MUM * RCSe ) ) + Min( Max( MUR,MUC ) ,MUR ) ) ) ) ,Min( RCSe ,RMSe ) )", "obj1": 0.9462962962962963, "obj2": 0.020192920408356147}, {"determining": "Min( ( FirstVNF_CPU_Server + FirstVNF_Mem_Server ) ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) )", "choosing": "( ( ( DS - DS ) * ( CS - CS ) ) - Max( RCSe,MLU ) )", "obj1": 0.5074074074074074, "obj2": 0.3207351174450088}, {"determining": "Min( PN ,( ( FirstVNF_RAM + ( ( ARS - FirstVNF_RAM ) - AMS ) ) * Const ) )", "choosing": "( Max( ( RMSe * ( RCSe / MUC ) ),( RRSe * DS ) ) - Max( RMSe,( RCSe * MLU ) ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( FirstVNF_RAM ,AMS ) ,( PN - ( MDR * Max( Max( ( Min( ( AMS / FirstVNF_CPU_Server ) ,( AMS + FirstVNF_CPU ) ) - MDR ),ARS ),Max( BR,BR ) ) ) ) )", "choosing": "Min( ( ( ( RMSe - Max( Min( ( RCSe - RMSe ) ,( MUC - MUR ) ),MUC ) ) - ( MUR - ( RRSe / Max( CS,( CS - ( CS * RMSe ) ) ) ) ) ) - ( MUM / RMSe ) ) ,Min( MUC ,MUR ) )", "obj1": 0.7555555555555555, "obj2": 0.10634657858216139}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_RAM * MDR ) ) ) + PN ) - MDR ) ,PN ) ) ,( ( ( ( FirstVNF_CPU / CRS ) - ( FirstVNF_RAM - DDR ) ) + Min( ( FirstVNF_Mem_Server - ( FirstVNF_Mem - MDR ) ) ,( CRS * PN ) ) ) + Max( ARS,CRS ) ) )", "choosing": "Min( ( ( ( RRSe - DS ) + Min( ( CS + MUC ) ,( Min( ( CS + MUC ) ,( DS - MUM ) ) - Min( RMSe ,( RCSe / ( DS * RRSe ) ) ) ) ) ) - CS ) ,( Max( RRSe,RRSe ) * RCSe ) )", "obj1": 0.30925925925925923, "obj2": 0.5318098426841448}, {"determining": "Min( ( ( Max( PN,( RRS - ( FirstVNF_Mem_Server * ( FirstVNF_CPU / Const ) ) ) ) + ( ( ( PN * ARS ) + PN ) - DDR ) ) - MDR ) ,( PN - CRS ) )", "choosing": "Min( ( Min( ( ( ( ( Max( RRSe,RCSe ) * ( RMSe * MUR ) ) + ( RRSe / DS ) ) - ( Min( ( RCSe - MLU ) ,RMSe ) + MUR ) ) + RMSe ) ,MUR ) - RMSe ) ,( MUC / RCSe ) )", "obj1": 0.8, "obj2": 0.0864919198263434}, {"determining": "Min( FirstVNF_CPU ,( ( ( CRS + ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) ) - Max( Max( Min( ( FirstVNF_RAM_Server + FirstVNF_RAM_Server ) ,( RRS + DDR ) ),Max( FirstVNF_CPU,Min( ( FirstVNF_RAM + FirstVNF_Mem_Server ) ,FirstVNF_RAM ) ) ),PN ) ) - MDR ) )", "choosing": "Min( ( ( Min( ( ( MUC - CS ) - ( RMSe * RCSe ) ) ,( Min( RRSe ,MUM ) + ( Max( Min( RMSe ,RCSe ),RCSe ) + RMSe ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * Min( ( MLU * MUR ) ,MLU ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,CS ) ) ) ) ) - CS ) ,( MUM / RMSe ) )", "obj1": 0.8722222222222222, "obj2": 0.04905710531828785}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.2796296296296296, "obj2": 0.5657246612558939}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) )", "choosing": "Min( ( ( ( MUC / ( RMSe * ( ( CS + Min( RMSe ,MUM ) ) * CS ) ) ) + ( ( RRSe * ( ( MLU * MUR ) / MLU ) ) - Min( DS ,( Max( MUR,Max( RCSe,MLU ) ) / Min( RRSe ,( DS * RCSe ) ) ) ) ) ) - RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.26851851851851855, "obj2": 0.5772947191260301}, {"determining": "Min( Min( MRS ,Min( ( MDR - Max( Max( PN,( CRS * ARS ) ),PN ) ) ,( ARS + ( PN * ( ( FirstVNF_CPU_Server + FirstVNF_RAM_Server ) - FirstVNF_Mem_Server ) ) ) ) ) ,( Min( ( ( RRS / MDR ) + BR ) ,( MRS - ( FirstVNF_CPU_Server / ( FirstVNF_RAM_Server / ( FirstVNF_RAM_Server * FirstVNF_Mem ) ) ) ) ) + Max( ( Max( FirstVNF_CPU_Server,CRS ) / ACS ),( ( ( PN / Min( DDR ,( ACS * AMS ) ) ) + PN ) - DDR ) ) ) )", "choosing": "Min( ( Max( MUM,Min( MLU ,( ( DS + ( RRSe + Max( RCSe,DS ) ) ) * Min( Min( MLU ,MUR ) ,MLU ) ) ) ) - RMSe ) ,( MLU * RCSe ) )", "obj1": 0.7407407407407407, "obj2": 0.11471377193146025}, {"determining": "Min( ( FirstVNF_CPU_Server * ( ( Max( AMS,AMS ) - BR ) + FirstVNF_CPU_Server ) ) ,( Const / PN ) )", "choosing": "( ( MUR / ( ( ( Min( DS ,( RCSe + CS ) ) + RMSe ) / ( RRSe + ( ( RMSe - Min( RMSe ,RRSe ) ) + RMSe ) ) ) * DS ) ) - ( RMSe + MUM ) )", "obj1": 0.1111111111111111, "obj2": 0.8179222854855125}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( PN * RRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( DDR ,( Const - MRS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( ( ( Min( Min( ( MUR / MUC ) ,MUR ) ,( ( RCSe * RMSe ) * MUR ) ) / ( ( CS + ( MUR - MLU ) ) + Min( Min( Max( MUR,MUC ) ,MUR ) ,( ( CS * MUC ) * MUC ) ) ) ) + ( ( Min( Min( ( MUR - MUM ) ,RCSe ) ,MLU ) * ( MLU + MUR ) ) - Min( DS ,( Min( MUM ,( DS * RCSe ) ) / Max( MUR,Max( RCSe,MLU ) ) ) ) ) ) - CS ) ,( RCSe - RMSe ) )", "obj1": 0.575925925925926, "obj2": 0.24588308863256833}, {"determining": "Min( Min( MRS ,Min( ( ( Max( PN,Min( DDR ,( FirstVNF_Mem * CRS ) ) ) + PN ) - MDR ) ,PN ) ) ,( PN - ( Min( ( FirstVNF_RAM + Min( ( FirstVNF_Mem * CRS ) ,Min( FirstVNF_RAM ,AMS ) ) ) ,FirstVNF_CPU ) * MDR ) ) )", "choosing": "Min( ( Min( ( RRSe / CS ) ,( ( DS * RCSe ) + ( MUM + CS ) ) ) + RMSe ) ,( RCSe - RMSe ) )", "obj1": 0.4685185185185185, "obj2": 0.34670572078234274}, {"determining": "Min( Min( Min( FirstVNF_CPU_Server ,FirstVNF_CPU_Server ) ,Min( ( ( Max( PN,( ( ACS - CRS ) - ( ARS * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( FirstVNF_CPU + ( ( ( Max( ( FirstVNF_RAM / ARS ),DDR ) + PN ) * ARS ) + PN ) ) )", "choosing": "( ( ( CS - MUM ) * ( DS * RRSe ) ) - Min( ( ( Min( CS ,( MUC - ( ( MLU - MLU ) * Max( RRSe,RRSe ) ) ) ) * RRSe ) - MUR ) ,( ( ( DS - Min( ( CS - RMSe ) ,MUC ) ) + Max( ( Max( RMSe,DS ) / Max( MUC,RRSe ) ),( ( MUR - RCSe ) - ( CS / MLU ) ) ) ) / ( MUR / ( MUR - RCSe ) ) ) ) )", "obj1": 0.48333333333333334, "obj2": 0.3378364780885022}, {"determining": "Min( Min( FirstVNF_CPU ,Min( ( ( Max( PN,( ARS - ( FirstVNF_CPU * Const ) ) ) + PN ) - MDR ) ,PN ) ) ,( Max( PN,Min( DDR ,( MDR * MDR ) ) ) + PN ) )", "choosing": "( ( ( RRSe - DS ) + ( ( DS - Min( ( MUM + CS ) ,( Max( MUR,Max( RCSe,MLU ) ) * MLU ) ) ) * Min( ( MUC - DS ) ,DS ) ) ) - ( RMSe + ( DS * ( MLU + ( ( ( DS / RCSe ) + ( RMSe + CS ) ) - ( ( CS + ( RMSe + MUC ) ) + MUM ) ) ) ) ) )", "obj1": 0.26666666666666666, "obj2": 0.5853497454389194}]}